var search_data = {"index":{"searchIndex":["!()","!()","!()","!=()","!=()","!=()","!~()","!~()","%()","%()","%()","%()","%()","%()","%()","%()","%()","%file_name%_generator.rb.tt","%name%.gemspec.tt","%namespaced_name%.rb.tt","%namespaced_name%_tasks.rake.tthtml","422.html","500.html","<()","<()","<()","<()","<()","<()","<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<<()","<=()","<=()","<=()","<=()","<=()","<=()","<=()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","===()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()","=~()",">()",">()",">()",">()",">()",">()",">()",">=()",">=()",">=()",">=()",">=()",">=()",">=()",">>()",">>()",">>()",">>()",">>()",">>()",">>()","acl","aclentry","acllist","argf","abbrev","abstractcontroller","actionnotfound","base","caching","classmethods","configmethods","fragments","classmethods","callbacks","classmethods","collector","doublerendererror","helpers","classmethods","missinghelpererror","railties","routeshelpers","rendering","translation","urlfor","classmethods","actioncable","channel","base","broadcasting","classmethods","callbacks","classmethods","naming","classmethods","periodictimers","classmethods","streams","connection","authorization","unauthorizederror","base","identification","classmethods","internalchannel","streameventloop","taggedloggerproxy","helpers","actioncablehelper","remoteconnections","remoteconnection","invalididentifierserror","server","base","broadcasting","broadcaster","configuration","worker","activerecordconnectionmanagement","subscriptionadapter","async","asyncsubscribermap","base","postgresql","listener","redis","listener","subscribedclient","subscribermap","version","actioncontroller","api","apirendering","base","caching","conditionalget","classmethods","contentsecuritypolicy","classmethods","cookies","datastreaming","defaultheaders","classmethods","etagwithflash","etagwithtemplatedigest","flash","classmethods","formbuilder","classmethods","head","helpers","classmethods","httpauthentication","basic","controllermethods","classmethods","digest","controllermethods","token","controllermethods","implicitrender","instrumentation","classmethods","live","classmethods","clientdisconnected","sse","logsubscriber","logging","classmethods","metal","mimeresponds","collector","missingrenderer","parameterencoding","classmethods","parametermissing","parameters","paramswrapper","options","classmethods","permissionspolicy","classmethods","railties","helpers","redirecting","unsaferedirecterror","renderer","renderers","all","classmethods","rendering","classmethods","requestforgeryprotection","classmethods","protectionmethods","exception","nullsession","resetsession","rescue","respondtomismatcherror","streaming","strongparameters","unfilteredparameters","unpermittedparameters","urlfor","actiondispatch","callbacks","contentsecuritypolicy","middleware","request","cookies","chainedcookiejars","debugexceptions","debuglocks","exceptionwrapper","executor","filehandler","flash","flashhash","requestmethods","hostauthorization","http","cache","request","response","filterparameters","filterredirect","headers","mimenegotiation","invalidtype","parameters","classmethods","parseerror","url","uploadedfile","illegalstateerror","journey","format","formatter","missingroute","routewithparams","parser","route","verbmatchers","all","unknown","middlewarestack","instrumentationproxy","middleware","missingcontroller","permissionspolicy","middleware","request","publicexceptions","railsentitystore","railsmetastore","reloader","remoteip","getip","ipspoofattackerror","request","requestcookiemethods","requestid","response","rackbody","routing","consoleformatter","base","expanded","sheet","htmltableformatter","mapper","base","concerns","customurls","httphelpers","resources","scoping","pathredirect","polymorphicroutes","redirection","routeset","customurlhelper","dispatcher","generator","mountedhelpers","namedroutecollection","urlhelper","optimizedurlhelper","staticdispatcher","urlfor","ssl","servertiming","session","abstractsecurestore","abstractstore","cachestore","compatibility","cookiestore","sessionid","memcachestore","stalesessioncheck","showexceptions","static","actionmailbox","base","basecontroller","callbacks","engine","generators","installgenerator","inboundemail","incineratable","incineration","messageid","routable","inboundemails","incinerationjob","ingresses","mailgun","inboundemailscontroller","authenticator","mandrill","inboundemailscontroller","authenticator","postmark","inboundemailscontroller","relay","inboundemailscontroller","sendgrid","inboundemailscontroller","relayer","result","router","route","routingerror","routing","routingjob","version","actionmailer","base","lateattachmentsproxy","collector","deliverymethods","classmethods","inlinepreviewinterceptor","logsubscriber","mailhelper","messagedelivery","parameterized","classmethods","preview","previews","classmethods","rescuable","version","actionpack","version","actiontext","attachable","attachables","contentattachment","missingattachable","remoteimage","attachment","attachmentgallery","attachments","caching","minification","trixconversion","attribute","content","contenthelper","encryptedrichtext","encryption","engine","fixtureset","fragment","generators","installgenerator","htmlconversion","plaintextconversion","richtext","serialization","taghelper","trixattachment","version","actionview","abstractrenderer","renderedcollection","emptycollection","base","cacheexpiry","executor","viewmodificationwatcher","context","digestor","injected","missing","node","nulllogger","partial","filesystemresolver","helpers","activemodelhelper","activemodelinstancetag","assettaghelper","asseturlhelper","atomfeedhelper","cachehelper","uncacheablefragmenterror","capturehelper","csphelper","csrfhelper","datehelper","debughelper","formbuilder","formhelper","formoptionshelper","formtaghelper","javascripthelper","numberhelper","invalidnumbererror","outputsafetyhelper","renderinghelper","sanitizehelper","taghelper","tags","actiontext","texthelper","translationhelper","urlhelper","classmethods","layouts","classmethods","logsubscriber","lookupcontext","detailscache","viewpaths","partialiteration","partialrenderer","recordidentifier","renderer","rendering","classmethods","resolver","routingurlfor","template","handlers","builder","erb","html","raw","sources","file","types","type","templatedetails","requested","templatepath","unboundtemplate","version","viewpaths","classmethods","activejob","arguments","hash","base","callbacks","classmethods","core","classmethods","deserializationerror","enqueueerror","enqueuing","classmethods","exceptions","classmethods","execution","classmethods","queueadapter","classmethods","queueadapters","asyncadapter","backburneradapter","delayedjobadapter","inlineadapter","queadapter","queueclassicadapter","resqueadapter","sidekiqadapter","sneakersadapter","suckerpunchadapter","queuename","classmethods","queuepriority","classmethods","serializationerror","serializers","objectserializer","rangeserializer","version","activemodel","api","attributeassignment","attributemethods","classmethods","attributes","classmethods","callbacks","conversion","dirty","eachvalidator","error","errors","forbiddenattributeserror","lint","tests","missingattributeerror","model","name","naming","nestederror","rangeerror","securepassword","classmethods","instancemethodsonactivation","serialization","serializers","json","strictvalidationfailed","translation","type","boolean","helpers","acceptsmultiparametertime","instancemethods","mutable","numeric","timevalue","timezone","value","unknownattributeerror","version","validationerror","validations","acceptancevalidator","lazilydefineattributes","callbacks","classmethods","classmethods","helpermethods","validator","activerecord","activejobrequirederror","activerecorderror","adapternotfound","adapternotspecified","adaptertimeout","aggregations","classmethods","associationtypemismatch","associations","classmethods","collectionproxy","preloader","association","loaderquery","loaderrecords","asynchronousqueryinsidetransactionerror","attributeassignment","attributeassignmenterror","attributemethods","beforetypecast","classmethods","dirty","classmethods","primarykey","classmethods","query","read","serialization","classmethods","columnnotserializableerror","timezoneconversion","write","attributes","classmethods","autosaveassociation","base","batches","batchenumerator","calculations","callbacks","classmethods","configurationerror","connectionadapters","abstractadapter","version","abstractmysqladapter","column","columnmethods","connectionhandler","connectionpool","queue","reaper","databaselimits","databasestatements","deduplicable","classmethods","mysql","columnmethods","databasestatements","table","tabledefinition","mysql2adapter","nullcolumn","postgresql","altertable","columnmethods","databasestatements","oid","bit","data","quoting","integeroutof64bitrange","schemastatements","table","tabledefinition","typemetadata","postgresqladapter","querycache","connectionpoolconfiguration","quoting","realtransaction","sqlite3","databasestatements","tabledefinition","sqlite3adapter","savepointtransaction","savepoints","schemacache","schemastatements","sqltypemetadata","table","tabledefinition","transactionstate","connectionhandling","connectionnotestablished","connectiontimeouterror","core","classmethods","inspectionmask","countercache","classmethods","dangerousattributeerror","databasealreadyexists","databaseconfigurations","hashconfig","invalidconfigurationerror","urlconfig","databaseconnectionerror","deadlocked","delegatedtype","destroyassociationasyncerror","destroyassociationasyncjob","dynamicmatchers","findby","findbybang","method","eagerloadpolymorphicerror","encryption","cipher","aes256gcm","config","configurable","context","contexts","derivedsecretkeyprovider","deterministickeyprovider","encryptablerecord","encryptedattributetype","encryptedfixtures","encryptingonlyencryptor","encryptor","envelopeencryptionkeyprovider","errors","base","configuration","decryption","encoding","encryptedcontentintegrity","encryption","forbiddenclass","extendeddeterministicqueries","additionalvalue","corequeries","encryptedqueryargumentprocessor","extendedencryptabletype","inwithadditionalvalues","relationqueries","extendeddeterministicuniquenessvalidator","encrypteduniquenessvalidator","key","keygenerator","keyprovider","message","messageserializer","nullencryptor","properties","readonlynullencryptor","scheme","enum","environmentmismatcherror","exclusiveconnectiontimeouterror","explain","faker","findermethods","fixtureset","classcache","futureresult","eventbuffer","generators","migration","classmethods","immutablerelation","inheritance","classmethods","integration","classmethods","invalidforeignkey","irreversiblemigration","irreversibleordererror","lockwaittimeout","locking","optimistic","classmethods","pessimistic","logsubscriber","middleware","databaseselector","shardselector","migration","checkpending","commandrecorder","compatibility","v4_2","tabledefinition","v5_0","tabledefinition","v5_1","v5_2","commandrecorder","tabledefinition","v6_0","referencedefinition","tabledefinition","v6_1","postgresqlcompat","tabledefinition","migrationcontext","mismatchedforeignkey","modelschema","classmethods","multiparameterassignmenterrors","nestedattributes","classmethods","toomanyrecords","nodatabaseerror","notouching","classmethods","notnullviolation","persistence","classmethods","preparedstatementcacheexpired","preparedstatementinvalid","queryaborted","querycache","classmethods","querycanceled","querylogs","querymethods","wherechain","querying","rangeerror","readonlyerror","readonlyrecord","readonlyattributes","classmethods","recordinvalid","recordnotdestroyed","recordnotfound","recordnotsaved","recordnotunique","reflection","classmethods","macroreflection","relation","recordfetchwarning","result","rollback","sanitization","classmethods","schema","definition","classmethods","scoping","default","classmethods","named","classmethods","securetoken","classmethods","minimumlengtherror","serialization","serializationfailure","serializationtypemismatch","signedid","classmethods","solerecordexceeded","spawnmethods","staleobjecterror","statementcache","partialquerycollector","statementinvalid","statementtimeout","store","classmethods","strictloadingviolationerror","subclassnotfound","suppressor","classmethods","tablenotspecified","tasks","databasetasks","timestamp","transactionisolationerror","transactionrollbackerror","transactions","classmethods","translation","type","biginteger","binary","boolean","date","datetime","decimal","float","immutablestring","integer","internal","timezone","json","string","time","value","unknownattributeerror","unknownattributereference","unknownprimarykey","version","validations","classmethods","valuetoolong","wrappeddatabaseexception","activestorage","analyzejob","analyzer","audioanalyzer","imageanalyzer","imagemagick","vips","videoanalyzer","attached","many","model","one","attachment","basecontroller","basejob","blob","analyzable","identifiable","representable","blobs","proxycontroller","redirectcontroller","directuploadscontroller","disablesession","diskcontroller","error","filenotfounderror","filename","fixtureset","integrityerror","invariableerror","logsubscriber","mirrorjob","preview","unprocessederror","previewerror","previewer","mupdfpreviewer","popplerpdfpreviewer","videopreviewer","purgejob","reflection","activerecordextensions","classmethods","representations","proxycontroller","redirectcontroller","service","azurestorageservice","diskservice","gcsservice","metadataservererror","metadataservernotfounderror","mirrorservice","s3service","setcurrent","streaming","transformers","imageprocessingtransformer","unsupportedimageprocessingargument","unsupportedimageprocessingmethod","transformer","unpreviewableerror","unrepresentableerror","version","variant","variantrecord","variantwithrecord","variation","activesupport","actionableerror","classmethods","nonactionable","arrayinquirer","autoload","backtracecleaner","benchmarkable","cache","coders","loader","rails61coder","rails70coder","connectionpoollike","filestore","memcachestore","coders","loader","rails61coder","rails70coder","duplocalcache","duplocalstore","memorystore","nullstore","rediscachestore","store","strategy","localcache","localstore","cachingkeygenerator","callbacks","calltemplate","instanceexec0","instanceexec1","instanceexec2","methodcall","objectcall","proccall","classmethods","conditionals","value","filters","after","before","codegenerator","methodset","comparewithrange","concern","concurrency","loadinterlockawaremonitor","sharelock","configurable","classmethods","configuration","configurationfile","formaterror","currentattributes","dependencies","interlock","requiredependency","deprecation","behavior","deprecatedconstantaccessor","deprecatedconstantproxy","deprecatedinstancevariableproxy","deprecatedobjectproxy","disallowed","methodwrapper","reporting","deprecationexception","descendantstracker","duration","iso8601parser","parsingerror","encryptedconfiguration","encryptedfile","invalidkeylengtherror","missingcontenterror","missingkeyerror","enumerablecoreext","constants","errorreporter","eventedfileupdatechecker","core","executionwrapper","executor","fileupdatechecker","forktracker","coreext","coreextprivate","moderncoreext","gzip","stream","hashwithindifferentaccess","hashwithindifferentaccess","inflector","inflections","uncountables","inheritableoptions","json","keygenerator","lazyloadhooks","logsubscriber","logger","simpleformatter","loggersilence","messageencryptor","invalidmessage","messageverifier","invalidsignature","messages","rotator","encryptor","verifier","multibyte","chars","unicode","notifications","event","fanout","subscribers","eventobject","matcher","allmessages","instrumentationsubscribererror","instrumenter","numberhelper","numericwithformat","orderedoptions","parameterfilter","perthreadregistry","proxyobject","rangewithformat","reloader","rescuable","classmethods","safebuffer","safeconcaterror","securecomparerotator","securityutils","stringinquirer","subscriber","taggedlogging","timewithzone","timezone","version","xmlconverter","disallowedtype","xmlmini","xmlmini_libxmlsax","hashbuilder","xmlmini_nokogirisax","hashbuilder","addservicenametoactivestorageblobs","addrinfo","announcement","version","applicationcable","channel","connection","arel","aliaspredication","arelerror","attributes","attribute","collectors","bind","composite","plainstring","sqlstring","substitutebinds","crud","deletemanager","emptyjoinerror","expressions","factorymethods","filterpredications","insertmanager","math","nodes","addition","and","ascending","between","binary","bindparam","bitwiseand","bitwisenot","bitwiseor","bitwiseshiftleft","bitwiseshiftright","bitwisexor","case","comment","concat","contains","count","currentrow","deletestatement","descending","distinct","division","doesnotmatch","equality","extract","false","fetchattribute","filter","following","fullouterjoin","function","greaterthan","greaterthanorequal","grouping","homogeneousin","in","infixoperation","innerjoin","insertstatement","isdistinctfrom","isnotdistinctfrom","joinsource","lessthan","lessthanorequal","matches","multiplication","namedfunction","namedwindow","node","nodeexpression","notequal","notin","notregexp","nullsfirst","nullslast","or","ordering","outerjoin","over","overlaps","preceding","range","regexp","rightouterjoin","rows","selectcore","selectstatement","sqlliteral","stringjoin","subtraction","tablealias","true","unary","unaryoperation","unqualifiedcolumn","updatestatement","valueslist","window","with","withrecursive","orderpredications","predications","selectmanager","table","treemanager","statementmethods","updatemanager","visitors","dot","mysql","postgresql","sqlite","tosql","unsupportedvisiterror","visitor","windowpredications","argumenterror","array","array","array()","banner.js","base64","basicobject","basicsocket","benchmark","benchmark","tms","bigdecimal","bigdecimal","bigdecimal()","bigmath","binding","brewfile","bundler","cgi","cookie","escape","html3","html4","html4fr","html4tr","html5","htmlextension","invalidencoding","queryextension","session","filestore","memorystore","nullstore","pstore","util","changelog","changelog","changelog","changelog","changelog","changelog","changelog","changelog","changelog","changelog","changelog","changelog","code_of_conduct","contributing","copying","copying.ja","csv","csv()","fieldsconverter","inputrecordseparator","invalidencodingerror","malformedcsverror","parser","inputsscanner","invalidencoding","scanner","unexpectederror","row","table","writer","class","class","closekey()","closedqueueerror","codetools","profiler","requireprofiler","comparable","complex","complex()","continuation","coreextensions","tcpsocketext","initializer","coverage","createactionmailboxtables","createactiontexttables","createactivestoragetables","createactivestoragevariantrecords","createkey()","currentcontext()","drb","drbarray","drbbadscheme","drbbaduri","drbconn","drbconnerror","drberror","drbidconv","drbidconv","drbmessage","drbobject","drbobject","drbobservable","drbprotocol","drbremoteerror","drbsslsocket","sslconfig","drbserver","invokemethod18mixin","drbservernotfound","drbtcpsocket","drbunixsocket","drbundumped","drbundumped","drbunknown","drbunknownerror","extserv","extservmanager","gw","gwidconv","threadobject","timeridconv","timerholder2","invalidindexerror","weakidconv","weakset","data","date","date","error","dateandtime","calculations","compatibility","zones","datetime","datetime","delegateclass()","delegator","delegator","deletekey()","deletevalue()","didyoumean","classnamechecker","classname","correctable","formatter","jaro","jarowinkler","keyerrorchecker","methodnamechecker","nullchecker","patternkeynamechecker","plainformatter","requirepathchecker","spellchecker","treespellchecker","variablenamechecker","verboseformatter","digest","digest","digest()","digest()","base","class","instance","md5","rmd160","sha1","sha2","uuid","dir","e()","env","eoferror","erb","erb","defmethod","escape","util","util","encoding","compatibilityerror","converter","converternotfounderror","invalidbytesequenceerror","undefinedconversionerror","encodingerror","english","enumkey()","enumvalue()","enumerable","enumerable","soleitemexpectederror","enumerator","arithmeticsequence","chain","generator","lazy","producer","product","yielder","errno","errorhighlight","coreext","defaultformatter","spotter","nonascii","etc","group","passwd","exception","exception","exhibit","falseclass","falseclass","fcntl","fiber","pool","scheduler","fibererror","fiddle","basictypes","cparser","cstruct","cstructbuilder","cstructentity","cunion","cunionentity","clearedreferenceerror","closure","blockcaller","compositehandler","dlerror","error","function","handle","importer","pinned","pointer","structarray","types","win32types","file","file","file::constants","stat","filetest","fileutils","dryrun","nowrite","streamutils_","verbose","find","float","float","float()","floatdomainerror","flushkey()","forwardable","frozenerror","gc","profiler","get()","gem","availableset","bundled_gems","basicspecification","bundlerversionfinder","cidetector","command","commandlineerror","commandmanager","commands","buildcommand","certcommand","checkcommand","cleanupcommand","contentscommand","dependencycommand","environmentcommand","execcommand","fetchcommand","generateindexcommand","rubygemstrampoline","helpcommand","infocommand","installcommand","listcommand","lockcommand","mirrorcommand","opencommand","outdatedcommand","ownercommand","pristinecommand","pushcommand","querycommand","rdoccommand","rebuildcommand","searchcommand","servercommand","setupcommand","makedirs","signincommand","signoutcommand","sourcescommand","specificationcommand","stalecommand","uninstallcommand","unpackcommand","updatecommand","whichcommand","yankcommand","configfile","conflicterror","consoleui","defaultuserinteraction","dependency","dependencyerror","dependencyinstaller","dependencylist","dependencyremovalexception","dependencyresolutionerror","deprecate","doctor","documenterror","endofyamlexception","errorreason","exception","ext","builderror","builder","cargobuilder","dylibnotfounderror","linkflagconverter","cmakebuilder","configurebuilder","extconfbuilder","rakebuilder","filepermissionerror","formatexception","gemnotfoundexception","gemnotinhomeexception","gemrunner","gemcutterutilities","webauthnlistener","badrequestresponse","methodnotallowedresponse","nocontentresponse","notfoundresponse","okresponse","response","socketresponder","webauthnpoller","gemspechelpers","impossibledependencieserror","installerror","installupdateoptions","installer","fakepackage","installeruninstallerutils","invalidspecificationexception","licenses","loaderror","localremoteoptions","missingspecerror","missingspecversionerror","nametuple","noaliasyamltree","operationnotsupportederror","package","digestio","error","formaterror","nonseekableio","old","patherror","symlinkerror","tarheader","tarinvaliderror","tarreader","entry","tarwriter","boundedstream","fileoverflow","restrictedstream","toolongfilename","packagetask","pathsupport","platform","platformmismatch","queryutils","remoteerror","remotefetcher","fetcherror","unknownhosterror","remoteinstallationcancelled","remoteinstallationskipped","remotesourceexception","request","requestset","gemdependencyapi","lockfile","parseerror","parser","tokenizer","requirement","badrequirementerror","resolver","apiset","gemparser","apispecification","activationrequest","bestset","composedset","conflict","currentset","dependencyrequest","gitset","gitspecification","indexset","indexspecification","installedspecification","installerset","localspecification","lockset","lockspecification","requirementlist","set","sourceset","specspecification","specification","stats","vendorset","vendorspecification","rubyversionmismatch","runtimerequirementnotmeterror","s3urisigner","configurationerror","instanceprofileerror","safemarshal","elements","array","bignum","element","false","float","hash","hashwithdefaultvalue","integer","nil","object","objectlink","string","symbol","symbollink","true","userclass","userdefined","usermarshal","withivars","reader","eoferror","error","notimplementederror","unconsumedbyteserror","unsupportedversionerror","visitors","streamprinter","toruby","error","formaterror","methodcallerror","rationalcompat","unpermittedclasserror","unpermittedivarerror","unpermittedsymbolerror","unsupportederror","visitor","safeyaml","security","exception","policy","signer","trustdir","securityoption","silentui","nullio","source","git","installed","local","lock","specificfile","vendor","sourcefetchproblem","sourcelist","specfetcher","specificgemnotfoundexception","specification","specificationpolicy","streamui","silentdownloadreporter","silentprogressreporter","simpleprogressreporter","threadeddownloadreporter","verboseprogressreporter","stubspecification","systemexitexception","text","uninstallerror","uninstaller","unknowncommanderror","unknowncommandspellchecker","unsatisfiabledependencyerror","updatesuggestion","uri","uriformatter","userinteraction","util","validator","verificationerror","version","versionoption","webauthnverificationerror","yamlserializer","gemfile","gemfile.lock","gemfile.tt","gemfile.tt","getoptlong","ambiguousoption","error","invalidoption","missingargument","needlessargument","hash","hash","hash()","io","io","buffer","accesserror","allocationerror","invalidatederror","lockederror","maskerror","eagainwaitreadable","eagainwaitwritable","einprogresswaitreadable","einprogresswaitwritable","ewouldblockwaitreadable","ewouldblockwaitwritable","timeouterror","waitreadable","waitwritable","generic_readable","generic_writable","ioerror","ipaddr","addressfamilyerror","error","invalidaddresserror","invalidprefixerror","ipsocket","irb","abort","cantchangebinding","cantreturntonormalmode","canvas","color","symbolstate","colorprinter","context","contextextender","debug","debugger__","skippathhelperforirb","ui","evalhistory","extendcommand","backtrace","break","catch","changeworkspace","commandargumenterror","continue","currentworkingworkspace","debug","debugcommand","delete","edit","finish","foreground","help","history","info","irbcommand","irbinfo","jobs","kill","load","loadercommand","ls","output","measure","multiirbcommand","next","nop","popworkspace","pushworkspace","require","showcmds","showdoc","showsource","source","step","whereami","workspaces","extendcommandbundle","fileinputmethod","frame","frameoverflow","frameunderflow","illegalparameter","illegalrcgenerator","inputcompletor","inputmethod","inspector","irb","irbalreadydead","irbloader","irbswitchedtocurrentthread","jobmanager","loadabort","locale","nestingparser","nosuchjob","notimplementederror","notifier","abstractnotifier","compositenotifier","errundefinednotifier","errunrecognizedlevel","levelednotifier","nomsgnotifier","outputmethod","notimplementederror","pager","readlineinputmethod","reidlineinputmethod","relineinputmethod","rubylex","terminatelineinput","rubymodel","sourcefinder","statement","command","expression","stdioinputmethod","stdiooutputmethod","undefinedpromptmode","unrecognizedswitch","vec","workspace","indexerror","integer","integer","integer()","interrupt","json","circulardatastructure","ext","generator","state","parser","generatorerror","genericobject","jsonerror","missingunicodesupport","nestingerror","parsererror","jacobian","jobmanager()","kconv","kernel","kernel","keyerror","legal","log_mask()","log_upto()","lusolve","loaderror","loaderror","localjumperror","logger","formatter","logdevice","period","severity","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license.tt","mail","address","message","makemakefile","logging","rbconfig","marshal","matchdata","math","domainerror","method","method","mime","alltype","mimes","nulltype","type","invalidmimetype","module","module","concerning","delegationerror","monitor","monitormixin","conditionvariable","mutex_m","news","news-1.8.7","news-1.9.1","news-1.9.2","news-1.9.3","news-2.0.0","news-2.1.0","news-2.2.0","news-2.3.0","news-2.4.0","news-2.5.0","news-2.6.0","news-2.7.0","news-3.0.0","news-3.1.0","news-3.2.0","nkf","nameerror","nameerror","net","http","copy","delete","get","head","lock","mkcol","move","options","patch","post","propfind","proppatch","put","trace","unlock","httpaccepted","httpalreadyreported","httpbadgateway","httpbadrequest","httpbadresponse","httpclienterror","httpclientexception","httpconflict","httpcontinue","httpcreated","httpearlyhints","httperror","httpexceptions","httpexpectationfailed","httpfaileddependency","httpfatalerror","httpforbidden","httpfound","httpgatewaytimeout","httpgatewaytimeout","httpgenericrequest","httpgone","httpheader","httpheadersyntaxerror","httpimused","httpinformation","httpinsufficientstorage","httpinternalservererror","httplengthrequired","httplocked","httploopdetected","httpmethodnotallowed","httpmisdirectedrequest","httpmovedpermanently","httpmovedtemporarily","httpmultistatus","httpmultiplechoice","httpmultiplechoices","httpnetworkauthenticationrequired","httpnocontent","httpnonauthoritativeinformation","httpnotacceptable","httpnotextended","httpnotfound","httpnotimplemented","httpnotmodified","httpok","httppartialcontent","httppayloadtoolarge","httppaymentrequired","httppermanentredirect","httppreconditionfailed","httppreconditionrequired","httpprocessing","httpproxyauthenticationrequired","httprangenotsatisfiable","httpredirection","httprequest","httprequestentitytoolarge","httprequestheaderfieldstoolarge","httprequesttimeout","httprequesttimeout","httprequesturitoolarge","httprequesturitoolong","httprequestedrangenotsatisfiable","httpresetcontent","httpresponse","httpretriableerror","httpseeother","httpservererror","httpserviceunavailable","httpsuccess","httpswitchprotocol","httptemporaryredirect","httptoomanyrequests","httpuritoolong","httpunauthorized","httpunavailableforlegalreasons","httpunknownresponse","httpunprocessableentity","httpunsupportedmediatype","httpupgraderequired","httpuseproxy","httpvariantalsonegotiates","httpversionnotsupported","opentimeout","protoautherror","protocommanderror","protofatalerror","protoretriableerror","protoservererror","protosyntaxerror","protounknownerror","protocretryerror","protocolerror","readtimeout","writeadapter","writetimeout","newton","nilclass","nilclass","nomatchingpatternerror","nomatchingpatternkeyerror","nomemoryerror","nomethoderror","notimplementederror","numeric","numeric","oleproperty","object","object","rubylex","objectspace","internalobjectwrapper","weakkeymap","weakmap","observable","open3","openkey()","openssl","asn1","asn1data","asn1error","constructive","objectid","primitive","bn","bnerror","buffering","buffer","cipher","cipher","ciphererror","config","configerror","digest","digesterror","engine","engineerror","hmac","hmacerror","kdf","kdferror","marshal","classmethods","netscape","spki","spkierror","ocsp","basicresponse","certificateid","ocsperror","request","response","singleresponse","opensslerror","pkcs12","pkcs12error","pkcs5","pkcs7","pkcs7error","recipientinfo","signerinfo","pkey","dh","dherror","dsa","dsaerror","ec","group","error","point","error","ecerror","pkey","pkeyerror","rsa","rsaerror","random","randomerror","ssl","sslcontext","sslerror","sslerrorwaitreadable","sslerrorwaitwritable","sslserver","sslsocket","session","sessionerror","socketforwarder","timestamp","factory","request","response","timestamperror","tokeninfo","x509","attribute","attributeerror","crl","crlerror","certificate","certificateerror","extension","authorityinfoaccess","authoritykeyidentifier","crldistributionpoints","helpers","subjectkeyidentifier","extensionerror","extensionfactory","name","rfc2253dn","nameerror","request","requesterror","revoked","revokederror","store","storecontext","storeerror","openstruct","openuri","httperror","httpredirect","meta","openread","toomanyredirects","optionparser","ac","acceptables","ambiguousargument","ambiguousoption","arguable","completinghash","completion","invalidargument","invalidoption","list","missingargument","needlessargument","optionmap","parseerror","switch","noargument","optionalargument","placedargument","requiredargument","pi()","post()","pp","ppmethods","pstore","error","pty","childexited","pathname","pathname","pathname()","person","prettyprint","singleline","prism","comment","constantpathnode","dynamicpartsinconstantpatherror","constantpathtargetnode","constantreadnode","debug","desugarcompiler","embdoccomment","floatnode","imaginarynode","inlinecomment","integernode","interpolatedmatchlastlinenode","interpolatedregularexpressionnode","interpolatedstringnode","interpolatedxstringnode","lexcompat","endcontenttoken","identtoken","ignorestatetoken","ignorednewlinetoken","paramtoken","token","location","magiccomment","matchlastlinenode","pack","directive","format","parametersnode","parseerror","parseresult","comments","newlines","parsewarning","pattern","compilationerror","rationalnode","regularexpressionnode","rippercompat","sexpbuilder","sexpbuilderpp","source","stringnode","token","xstringnode","proc","process","process","gid","status","sys","uid","psych","aliasesnotenabled","anchornotdefined","badalias","classloader","restricted","coder","config","disallowedclass","emitter","exception","handler","dumperoptions","handlers","recorder","json","stream","treebuilder","nodes","alias","document","mapping","node","scalar","sequence","stream","omap","parser","mark","scalarscanner","set","stream","streaming","classmethods","syntaxerror","treebuilder","visitors","depthfirst","emitter","jsontree","noaliasruby","restrictedyamltree","toruby","visitor","yamltree","queryinfokey()","queryvalue()","rails_version","rdoc_main","rdoc","rdoc","rdoc","alias","anonclass","anymethod","attr","classmodule","codeobject","comment","constant","context","crossreference","erbio","erbpartial","encoding","error","extend","generator","generator","ghostmethod","i18n","include","markdown","memoentry","parseerror","ruleinfo","markup","markupreference","dummyclass","dummymodule","metamethod","methodattr","mixin","normalclass","normalmodule","options","parser","c","changelog","git","markdown","rd","ripperstatelex","innerstatelex","ruby","rubytools","simple","text","rd","rdoc","ri","error","require","rdoc","servlet","singleclass","stats","store","error","missingfileerror","task","text","tokenstream","tomdoc","toplevel","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme.ja","readme.md.tt","readme.md.tt","releasing_rails","running_ujs_tests","running_unit_tests","running_unit_tests","rack","cache","entitystore","metastore","ractor","closederror","error","isolationerror","movederror","movedobject","remoteerror","selector","unsafeerror","rails","api","edgetask","repotask","stabletask","task","appbuilder","application","bootstrap","configuration","defaultmiddlewarestack","finisher","routesreloader","backtracecleaner","command","actions","base","db","system","helpers","editor","conductor","basecontroller","configuration","middlewarestackproxy","console","backtracecleaner","consolemethods","dbconsole","engine","configuration","railties","updater","generators","actions","activemodel","appbase","gemfileentry","appgenerator","base","benchmarkgenerator","channelgenerator","db","system","mailboxgenerator","mailergenerator","migration","namedbase","info","initializable","classmethods","collection","initializer","paths","path","root","pluginbuilder","rack","logger","rails","conductor","actionmailbox","inboundemails","sourcescontroller","inboundemailscontroller","incineratescontroller","reroutescontroller","railtie","configurable","classmethods","configuration","secrets","missingkeyerror","server","options","sourceannotationextractor","annotation","version","rake","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile.tt","rakefile.tt","random","formatter","range","range","rangeerror","rational","rational()","readline","refinement","regexp","regexp","timeouterror","regexperror","readline","ansi","config","invalidinputrc","configencodingconversionerror","core","face","config","generalio","history","keyactor","base","emacs","vicommand","viinsert","keystroke","killring","ringbuffer","state","lineeditor","completionstate","dialog","dialogprocscope","terminfo","stringwithtiparm","terminfoerror","unicode","eastasianwidth","windows","keyeventrecord","win32api","removenotnullonactivestorageblobschecksum","resolv","resolv","dns","config","nxdomain","otherresolverror","decodeerror","encodeerror","name","query","requester","requesterror","resource","any","cname","domainname","generic","hinfo","in","a","aaaa","https","srv","svcb","servicebinding","wks","loc","minfo","mx","ns","ptr","soa","txt","svcparam","alpn","dohpath","generic","ipv4hint","ipv6hint","mandatory","nodefaultalpn","port","svcparams","hosts","ipv4","ipv6","loc","alt","coord","size","mdns","resolverror","resolvtimeout","sz","rinda","drbobjecttemplate","invalidhashtuplekey","notifytemplateentry","requestcancelederror","requestexpirederror","rindaerror","ringfinger","ringprovider","ringserver","simplerenewer","template","templateentry","tuple","tuplebag","tuplebin","tupleentry","tuplespace","tuplespaceproxy","waittemplateentry","ripper","filter","lexer","elem","state","rubyvm","abstractsyntaxtree","node","instructionsequence","rjit","yjit","runtimeerror","sockssocket","scripterror","securerandom","securerandom","securityerror","set","setvalue()","shellwords","signal","signalexception","simpledelegator","singleforwardable","singleton","singleton","socket","ancillarydata","ifaddr","option","resolutionerror","udpsource","socketerror","standarderror","stopiteration","string","string","string()","string()","stringio","stringscanner","error","struct","symbol","symbol","syntaxerror","syntaxsuggest","aroundblockscan","blockexpand","capture","beforeafterkeywordends","fallingindentlines","capturecodecontext","cleandocument","cli","codeblock","codefrontier","codeline","codesearch","displaycodewithlinenumbers","displayinvalidblocks","error","explainsyntax","getparseerrors","leftrightlexcount","lexall","lexvalue","ministringio","parseblocksfromindentline","pathnamefrommessage","priorityengulfqueue","priorityqueue","rippererrors","scanhistory","unvisitedlines","syslog","constants","facility","level","logger","formatter","macros","option","systemcallerror","systemexit","systemstackerror","tcpserver","tcpsocket","tsort","cyclic","tempfile","thread","backtrace","location","conditionvariable","mutex","queue","sizedqueue","threaderror","threadgroup","time","time","timeout","error","exitexception","request","tracepoint","trueclass","trueclass","typeerror","udpsocket","unixserver","unixsocket","uri","uri","uri()","badurierror","error","ftp","file","generic","http","https","invalidcomponenterror","invalidurierror","ldap","ldaps","mailto","parser","regexp","rfc2396_parser","rfc2396_regexp","pattern","schemes","ws","wss","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage.tt","unboundmethod","unboundmethod","uncaughtthrowerror","unicodenormalize","user","win32ole","event","method","param","record","type","typelib","variant","variable","variant","win32olequeryinterfaceerror","win32oleruntimeerror","warning","weakref","referror","win32","registry","api","constants","error","kernel32","predefinedkey","sspi","api","identity","negotiateauth","sspiresult","securitybuffer","securityhandle","timestamp","xmp","stringinputmethod","yaml","dbm","store","zerodivisionerror","zlib","buferror","dataerror","deflate","error","gzipfile","crcerror","error","lengtherror","nofooter","gzipreader","gzipwriter","inprogresserror","inflate","memerror","needdict","streamend","streamerror","versionerror","zstreamcallee__()","__dir__()","__drbref()","__drbref()","__drburi()","__drburi()","__evaluate__()","__exit__()","__getobj__()","__getobj__()","__id__()","__id__()","__method__()","__raise__()","__send__()","__send__()","__setobj__()","__setobj__()","_call_seq()","_current_page?()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_dump()","_enumerable_collect()","_enumerable_collect_concat()","_enumerable_drop()","_enumerable_drop_while()","_enumerable_filter()","_enumerable_filter_map()","_enumerable_find_all()","_enumerable_flat_map()","_enumerable_grep()","_enumerable_grep_v()","_enumerable_map()","_enumerable_reject()","_enumerable_select()","_enumerable_take()","_enumerable_take_while()","_enumerable_uniq()","_enumerable_zip()","_execute()","_fork()","_fork()","_form.html.erb.tt","_get()","_getproperty()","_gets_noecho()","_helpers()","_helpers()","_helpers_for_modification()","_httpdate()","_insert_callbacks()","_invoke()","_iso8601()","_jisx0301()","_layout_for()","_layout_for()","_load()","_load()","_load()","_load()","_load()","_load()","_normalize_args()","_normalize_callback_options()","_normalize_options()","_parse()","_prepare_context()","_process_options()","_render_to_body_with_renderer()","_render_with_renderer_method_name()","_rfc2822()","_rfc3339()","_rfc822()","_routes()","_routes()","_routes()","_routes_context()","_run()","_segments()","_set_detail()","_set_last_value()","_set_wrapper_options()","_setproperty()","_sorted_requirements()","_strptime()","_strptime()","_tilde_requirements()","_to_partial_path()","_url_for_modules()","_view_paths()","_view_paths=()","_wait()","_with_routes()","_xmlschema()","`()","a()","abbrev()","abbrev()","abbreviate()","abort()","abort()","abort()","abort()","abort()","abort_on_exception()","abort_on_exception()","abort_on_exception=()","abort_on_exception=()","abs()","abs()","abs()","abs()","abs()","abs()","abs()","abs2()","abs2()","absolute()","absolute?()","absolute?()","absolute?()","absolute_path()","absolute_path()","absolute_path()","absolute_path?()","abstract!()","abstract_base_class.rb.tt","abstract_class?()","abstract_railtie?()","ac_arg_disable()","ac_arg_enable()","ac_arg_with()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept?()","accept?()","accept?()","accept?()","accept?()","accept?()","accept?()","accept?()","accept?()","accept?()","accept_charset()","accept_charset=()","accept_loop()","accept_nonblock()","accept_nonblock()","accept_nonblock()","accept_nonblock()","accept_uri_http()","accepts()","accepts_nested_attributes_for()","accessed_fields()","accessor()","acos()","acosh()","acronym()","action()","action()","action_cable.js","action_cable_meta_tag()","action_has_layout?()","action_methods()","action_methods()","action_methods()","action_methods()","action_name()","actioncable.esm.js","actioncable.js","actiontext.css","actiontext.js","actiontext.rake","activate()","activate()","activate_dependencies()","activated?()","activated_gem_paths()","active?()","active?()","active?()","active?()","active?()","active_connection?()","active_connections?()","active_primary_key()","activestorage.esm.js","activestorage.js","activestorage.rake","acts_like?()","acts_like_date?()","acts_like_date?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","acts_like_time?()","adapter()","adapter_name()","adapters.js","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add!()","add?()","add_git()","add_action_mailbox_production_environment_config()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_always_install()","add_attribute()","add_attribute()","add_attribute()","add_belongs_to()","add_bind()","add_bindir()","add_binds()","add_bulk_threshold_option()","add_c_enclosure()","add_c_variables()","add_cert()","add_certid()","add_certificate()","add_certificate()","add_channel()","add_channel()","add_channel()","add_check_constraint()","add_checksums()","add_child()","add_class()","add_class()","add_class_or_module()","add_clear_sources_option()","add_column()","add_comment()","add_common_option()","add_constant()","add_constant()","add_constant()","add_converter()","add_crl()","add_crl()","add_data()","add_default_key_binding()","add_default_key_binding_by_keymap()","add_delivery_method()","add_dependency()","add_development_dependency()","add_dialog_proc()","add_dialog_proc()","add_dictionary()","add_entry()","add_event_subscriber()","add_extend()","add_extension()","add_extension()","add_extension()","add_extra_args()","add_field()","add_file()","add_file()","add_file()","add_file()","add_file_digest()","add_file_signed()","add_file_simple()","add_filter()","add_flash_types()","add_foreign_key()","add_generator()","add_html()","add_include()","add_include()","add_index()","add_install_update_options()","add_key_option()","add_length_validation_for_encrypted_columns()","add_local()","add_local_remote_options()","add_method()","add_method()","add_method()","add_module()","add_module()","add_module_alias()","add_module_by_normal_module()","add_nonce()","add_nonce()","add_observer()","add_oneshot_key_binding()","add_option()","add_otp_option()","add_owners()","add_path()","add_path()","add_platform()","add_platform_option()","add_prerelease_option()","add_protocol()","add_proxy_option()","add_query_options()","add_recipient()","add_reference()","add_regexp_handling()","add_renderer()","add_require()","add_revoked()","add_route()","add_routes()","add_row()","add_runtime_dependency()","add_section()","add_security_option()","add_self_to_load_path()","add_shebang_option!()","add_signer()","add_silencer()","add_source()","add_source_gem()","add_source_option()","add_spec()","add_specific_extra_args()","add_status()","add_stress_to_class()","add_subscriber()","add_subscriber()","add_symlink()","add_tags()","add_timestamps()","add_to()","add_to_classes_or_modules()","add_to_load_path()","add_token()","add_token_listener()","add_tokens()","add_trace_func()","add_transaction_record()","add_update_sources_option()","add_version_option()","add_word_pair()","added?()","additional_message()","addr()","addr()","addr()","addr()","address_resolve()","adler()","adler32()","adler32_combine()","advance()","advance()","advance()","advance()","advise()","afamily()","after()","after()","after()","after?()","after_action()","after_bundle()","after_class_unload()","after_commit()","after_create()","after_create_commit()","after_destroy()","after_destroy_commit()","after_enqueue()","after_find()","after_fork_parent()","after_initialize()","after_initialize()","after_perform()","after_processing()","after_reset()","after_rollback()","after_save()","after_save_commit()","after_subscribe()","after_touch()","after_unsubscribe()","after_update()","after_update_commit()","after_validation()","ago()","ago()","ago()","ago()","ago()","ajax.coffee","ajd()","alert()","alert()","alert()","alert=()","alert_error()","alert_error()","alert_warning()","alert_warning()","algorithm()","algorithm()","algorithm=()","alias()","alias()","alias()","alias?()","alias?()","alias_attribute()","alias_attribute()","alias_extension()","alias_method()","alias_mode?()","aliases()","alien()","alignment()","alive?()","alive?()","alive?()","alive?()","alive?()","alive?()","all()","all()","all()","all()","all()","all()","all()","all=()","all?()","all?()","all?()","all?()","all_classes()","all_classes_and_modules()","all_commands_info()","all_connection_pools()","all_day()","all_files()","all_foreign_keys_valid?()","all_helpers_from_path()","all_modules()","all_month()","all_names()","all_paths()","all_quarter()","all_specs()","all_symbols()","all_tokens()","all_week()","all_year()","allbits?()","allbits?()","allocate()","allocation_class_path()","allocation_generation()","allocation_method_id()","allocation_sourcefile()","allocation_sourceline()","allocations()","allow()","allow_addr?()","allow_missing?()","allow_nan?()","allow_reentry()","allow_socket?()","alphanumeric()","alpn_protocol()","alt_name_or_x509_entry()","ambiguous_width()","amjd()","analyze()","analyze_later()","analyze_later?()","analyzed?()","ancestors()","ancestors()","ancestors()","ancestors()","ancestors()","and()","and!()","angle()","angle()","angle()","annotate()","annotations()","announce()","anonymous?()","any()","any()","any?()","any?()","any?()","any?()","any?()","any?()","any?()","any_authenticity_token_valid?()","any_content()","any_response?()","any_templates?()","any_waiting?()","anybits?()","anybits?()","api_controller.rb.tt","api_dir()","api_key()","api_keys()","api_main()","api_only!()","api_only=()","api_only?()","app()","app()","app()","app()","app_cache()","app_config_path()","app_generators()","app_middleware()","app_script_text()","append()","append()","append()","append()","append_after_action()","append_around_action()","append_attachables()","append_before_action()","append_cflags()","append_info_to_payload()","append_javascript_dependencies()","append_view_path()","append_view_path()","apple-touch-icon-precomposed.png","apple-touch-icon.png","application()","application()","application.css.tt","application.html.erb.tt","application.html.erb.tt","application.rb.tt","application_controller.rb.tt","application_controller.rb.tt","application_helper.rb.tt","application_helper.rb.tt","application_job.rb.tt","application_job.rb.tt","application_job.rb.tt","application_mailbox.rb.tt","application_mailer.rb.tt","application_mailer.rb.tt","application_mailer.rb.tt","application_name()","application_record.rb.tt","application_record.rb.tt","application_record.rb.tt","application_trace()","apply()","approximate_recommendation()","aref()","aref()","aref()","aref_prefix()","aref_prefix()","aref_prefix()","arg()","arg()","arg()","arglists()","args()","args_directive()","argument_converters","arguments()","argv()","argv0()","arity()","arity()","arity()","around_action()","around_create()","around_destroy()","around_enqueue()","around_perform()","around_processing()","around_save()","around_update()","array()","array_attributes()","array_nl()","array_nl=()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","ascend()","ascii_compatible?()","ascii_only?()","ascii_only?()","asciicompat_encoding()","asctime()","asctime()","asin()","asinh()","ask()","ask()","ask()","ask_for_password()","ask_for_password()","ask_yes_no()","ask_yes_no()","asn1_flag()","asn1_flag=()","assert_valid_keys()","assert_valid_value()","assert_valid_value()","asset()","asset_path()","asset_url()","assets.rb.tt","assets_manifest()","assign_attributes()","assign_names()","assignment","assoc()","assoc()","assoc()","assoc()","assoc()","associated()","assume_migrated_upto_version()","at()","at()","at()","at()","at()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_hour()","at_beginning_of_hour()","at_beginning_of_minute()","at_beginning_of_minute()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_year()","at_end_of_day()","at_end_of_day()","at_end_of_day()","at_end_of_hour()","at_end_of_hour()","at_end_of_minute()","at_end_of_minute()","at_end_of_month()","at_end_of_quarter()","at_end_of_week()","at_end_of_year()","at_exit()","at_midday()","at_midday()","at_midday()","at_middle_of_day()","at_middle_of_day()","at_middle_of_day()","at_midnight()","at_midnight()","at_midnight()","at_noon()","at_noon()","at_noon()","at_with_coercion()","at_without_coercion()","atan()","atan()","atan2()","atanh()","atime()","atime()","atime()","atime()","atom_feed()","atomic_write()","attach()","attach()","attach()","attach!()","attach_comments!()","attach_correctable()","attach_to()","attachable_content_type()","attachable_filename()","attachable_filesize()","attachable_metadata()","attachable_plain_text_representation()","attachable_plain_text_representation()","attachable_plain_text_representation()","attachable_sgid()","attachables()","attached?()","attached?()","attached_object()","attachment()","attachment()","attachment_galleries()","attachment_selector()","attachment_upload.js","attachments()","attachments()","attachments()","attachments()","attachments()","attempt()","attr()","attr_accessor()","attr_internal()","attr_internal_accessor()","attr_internal_reader()","attr_internal_writer()","attr_reader()","attr_readonly()","attr_writer()","attribute()","attribute()","attribute()","attribute_alias()","attribute_alias?()","attribute_before_last_save()","attribute_change_to_be_saved()","attribute_for_inspect()","attribute_in_database()","attribute_method?()","attribute_method?()","attribute_method_affix()","attribute_method_prefix()","attribute_method_suffix()","attribute_missing()","attribute_names()","attribute_names()","attribute_names()","attribute_names()","attribute_names()","attribute_present?()","attributes()","attributes()","attributes()","attributes()","attributes()","attributes=()","attributes=()","attributes=()","attributes_before_type_cast()","attributes_for_database()","attributes_for_hash()","attributes_in_database()","attributes_names()","audio?()","audio_path()","audio_tag()","audio_url()","auth_data=()","auth_param()","auth_scheme()","auth_tag()","auth_tag=()","auth_tag_len=()","authenticate()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_or_request_with_http_token()","authenticate_with_http_basic()","authenticate_with_http_digest()","authenticate_with_http_token()","authenticated?()","authenticated?()","authenticated?()","authentication_header()","authentication_request()","authentication_request()","authentication_request()","author()","author=()","authority()","authority_key_identifier()","authorization()","authors()","authors=()","auto_compact()","auto_compact=()","auto_discovery_link_tag()","auto_indent()","auto_indent_proc=()","autoclose=()","autoclose?()","autoload()","autoload()","autoload()","autoload?()","autoload?()","autoload_at()","autoload_once()","autoload_once_paths()","autoload_paths()","autoload_paths()","autoload_under()","autoloaders()","autoloads()","autosave=()","avail_in()","avail_out()","avail_out=()","available_action?()","available_specs()","average()","await_commit()","await_sent()","b()","backend()","backend=()","backtrace()","backtrace()","backtrace()","backtrace()","backtrace()","backtrace_cleaner()","backtrace_locations()","backtrace_locations()","backtrace_locations()","backtracking!()","backward_char()","backward_delete_char()","backward_kill_word()","backward_word()","banner()","banner()","banner()","base()","base()","base()","base36()","base58()","base64()","base64digest()","base64digest()","base64digest()","base64digest()","base64digest!()","base_class?()","base_dir()","base_dir()","base_label()","base_label()","base_name()","base_name()","base_name()","base_root()","basename()","basename()","basic()","basic_auth()","basic_quote_characters=()","basic_word_break_characters=()","batch_size()","bcc_addresses()","beat()","becomes()","becomes!()","beep()","before()","before()","before()","before?()","before_action()","before_class_unload()","before_configuration()","before_create()","before_destroy()","before_eager_load()","before_enqueue()","before_initialize()","before_perform()","before_processing()","before_reset()","before_running_rdoc()","before_save()","before_subscribe()","before_unsubscribe()","before_update()","before_validation()","begin()","begin()","begin()","begin_adding()","begin_addr()","begin_db_transaction()","begin_isolated_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_day()","beginning_of_hour()","beginning_of_hour()","beginning_of_line()","beginning_of_line?()","beginning_of_minute()","beginning_of_minute()","beginning_of_month()","beginning_of_quarter()","beginning_of_week()","beginning_of_week()","beginning_of_week=()","beginning_of_year()","begins?()","behavior()","behavior=()","belongs_to()","belongs_to()","belongs_to()","belongs_to()","belongs_to?()","benchmark()","benchmark()","benchmark.rb.tt","between?()","between?()","bigserial()","bin()","bin()","bin_dir()","bin_file()","bin_file_names()","bin_path()","bin_path()","bin_when_updating()","binary?()","binary?()","binary_mode()","bind()","bind()","bind()","bind()","bind()","bind()","bind_call()","bind_function()","bind_key()","bind_locals()","bind_variable()","binding()","binding()","binding()","bindir()","binmode()","binmode()","binmode()","binmode?()","binmode?()","binmode?()","binread()","binread()","binwrite()","binwrite()","birthtime()","birthtime()","birthtime()","birthtime()","bit()","bit_length()","bit_set?()","bit_varying()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blksize()","blob()","blob()","blob_record.js","blob_upload.js","blobs()","block()","block_all_mixed_content()","block_format()","block_given?()","block_length()","block_length()","block_length()","block_length()","block_params=()","block_size()","blockdev?()","blockdev?()","blockdev?()","blockdev?()","blocking()","blocking?()","blocking?()","blockquote()","blocks()","bm()","bmbm()","body()","body()","body()","body()","body()","body=()","body=()","body=()","body_encoding=()","body_parts()","body_permitted?()","body_stream=()","bool()","bool()","boot.rb.tt","boot.rb.tt","both?()","bottom()","bottom()","bounce_with()","box()","break_on_newline()","break_outmost_groups()","breakable()","breakable()","broadaddr()","broadcast()","broadcast()","broadcast()","broadcast()","broadcast()","broadcast()","broadcast_to()","broadcaster_for()","broadcasting_for()","bsearch","bsearch()","bsearch()","bsearch_index()","bubblebabble()","bubblebabble()","bubblebabble()","buffersize()","buffertype()","buffer_initial_length()","buffer_initial_length=()","bug_triaging","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build()","build2()","build_args()","build_args()","build_args=()","build_env()","build_extensions()","build_extensions()","build_heading()","build_info_dir()","build_info_file()","build_instrumented()","build_paragraph()","build_queue()","build_stack()","build_statement()","build_tag_values()","build_verbatim()","build_view_context_class()","building_ruby","builtin_curves()","bump()","bundle_path()","bundler_version()","button()","button_tag()","button_to()","by_col()","by_col!()","by_col_or_row()","by_col_or_row!()","by_id()","by_row()","by_row!()","byte()","byte()","byte()","byte_pointer=()","byteindex()","byteoffset()","byterindex()","bytes()","bytes()","bytes()","bytes()","bytes()","bytes_read()","bytesize()","byteslice()","bytesplice()","bytesplice()","ca_issuer_uris()","cable.yml.tt","cache()","cache()","cache()","cache()","cache_digests.rake","cache_dir()","cache_dir()","cache_dump_filename()","cache_file()","cache_fixtures()","cache_for_connection()","cache_format_version()","cache_format_version=()","cache_fragment_name()","cache_home()","cache_if()","cache_key()","cache_key()","cache_key()","cache_key_with_version()","cache_key_with_version()","cache_message()","cache_path()","cache_store()","cache_store=()","cache_template_loading()","cache_template_loading=()","cache_timestamp_format()","cache_unless()","cache_update_path()","cache_version()","cache_version()","cache_versioning()","cached_fixtures()","caching?()","calculate()","calculate()","calculate()","calculate_ip()","calculate_width()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call_app()","call_completion_proc()","call_completion_proc_with_checking_args()","call_completion_proc_with_checking_args()","call_free()","call_seq()","call_seq=()","call_seq_directive()","callcc()","callee_id()","caller()","caller_locations()","calling_methods","camelcase()","camelize()","camelize()","can_parse()","can_parse_by_name()","cancel()","cancel()","canceled?()","candidate()","candidate()","candidate()","canonical()","canonical=()","canonical_each()","canonical_segments()","canonname()","capitalize()","capitalize()","capitalize!()","capitalize_word()","caption()","caption()","capture()","capture2()","capture2e()","capture3()","capture_before_after_kws()","capture_falling_indent()","capture_first_kw_end_same_indent()","capture_frames()","capture_last_end_same_indent()","captures()","captures()","cargo_command()","case_mapping","casecmp()","casecmp()","casecmp?()","casecmp?()","casefold?()","cast()","cast()","cast_value()","cast_value()","catch()","cattr_accessor()","cattr_reader()","cattr_writer()","cause()","cbrt()","cc_addresses()","ccm_data_len=()","cd()","cdata_block()","cdata_section()","ceil()","ceil()","ceil()","ceil()","ceil()","ceil()","ceil()","ceildiv()","center()","cert()","cert_files()","cert_path()","cert_requested=()","cert_requested?()","cert_status()","certid()","certid()","certificates()","certificates=()","certificates_matching()","chain()","chain()","challenge()","challenge=()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change_column()","change_column()","change_column_comment()","change_column_default()","change_column_null()","change_default()","change_encoding()","change_null()","change_privilege()","change_privilege()","change_table()","change_table_comment()","change_workspace()","changed()","changed()","changed?()","changed?()","changed?()","changed?()","changed?()","changed_attribute_names_to_save()","changed_attributes()","changed_for_autosave?()","changed_in_place?()","changed_in_place?()","changed_in_place?()","changed_in_place?()","changes()","changes_applied()","changes_to_save()","channel.js.tt","channel.rb.tt","channel.rb.tt","channel_name()","char()","character_column()","character_offset()","character_selectors","characters()","chardev?()","chardev?()","chardev?()","chardev?()","charpos()","chars()","charset()","charset()","charset()","charset()","charset=()","charset_current()","chdir()","chdir()","chdir()","check()","check()","check()","check()","check_box()","check_box()","check_box_tag()","check_cert()","check_chain()","check_circular?()","check_class_collision()","check_closed()","check_constraint()","check_constraint()","check_constraints()","check_constraints()","check_credentials_permissions()","check_data()","check_deprecated_options()","check_files()","check_gems()","check_generator()","check_input_event()","check_insecure_method()","check_inspect_key()","check_int_in_range()","check_key()","check_key()","check_modeline()","check_names()","check_nonce()","check_openssl()","check_password()","check_pending!()","check_private_key()","check_protected_environments!()","check_root()","check_ruby_version()","check_schema_file()","check_signedness()","check_sizeof()","check_target_version()","check_termination()","check_trust()","check_typo_squatting()","check_until()","check_user()","check_userinfo()","check_validity()","check_validity!()","check_winsize_changed()","checkbox()","checkbox_group()","checkin()","checkout()","checkout_timeout()","child_name()","children()","children()","children()","children()","children()","chmod()","chmod()","chmod()","chmod()","chmod_r()","chomp()","chomp()","chomp!()","choose_from_list()","choose_from_list()","chop()","chop()","chop!()","chown()","chown()","chown()","chown()","chown_r()","chr()","chr()","chroot()","chunk()","chunk()","chunk_while()","chunk_while()","chunked?()","ci?()","ci_strings()","cidr()","cipher()","cipher()","cipher=()","ciphers()","ciphers()","ciphers=()","ciphersuites=()","ciphertext_for()","circle()","citext()","civil()","civil()","civil_from_format()","clamp()","class()","class()","class()","class_attribute()","class_attributes()","class_eval()","class_eval()","class_exec()","class_file()","class_method_list()","class_methods()","class_methods()","class_name()","class_name()","class_names()","class_names()","class_path()","class_path()","class_variable_defined?()","class_variable_get()","class_variable_set()","class_variables()","classes()","classes_and_modules()","classes_hash()","classes_hash()","classify()","classify()","classify()","clean()","clean_env()","clean_exec()","clean_gems()","clean_sweep()","clean_system()","clean_text()","cleanpath()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup_view_runtime()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear!()","clear_action_methods!()","clear_action_methods!()","clear_active_connections!()","clear_all_connections!()","clear_attribute_changes()","clear_bit!()","clear_cache()","clear_cache()","clear_cache!()","clear_changes_information()","clear_comment()","clear_data_source_cache!()","clear_default_specs()","clear_gemspec_cache()","clear_helpers()","clear_paths()","clear_query_cache()","clear_query_caches_for_current_thread()","clear_reloadable_connections()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_schema_cache()","clear_screen()","clear_screen()","clear_screen()","clear_screen()","clear_screen()","clear_validators!()","cleared?()","client_ca()","client_min_messages()","client_min_messages=()","clobber_task_description()","clock_getres()","clock_gettime()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone()","clone_empty()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close()","close!()","close_all()","close_enabled?()","close_incoming()","close_on_exec=()","close_on_exec?()","close_outgoing()","close_read()","close_read()","close_read()","close_write()","close_write()","close_write()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed?()","closed_read?()","closed_write?()","cmds()","cmp()","cmp()","cmp()","cmp()","cmp_issuer()","cmsg_is?()","code()","code_around_binding()","code_block()","code_gc()","codepage()","codepage=()","codepoints()","codespell","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","coerce()","cofactor()","coffeelint.json","col_sep()","collation()","collation()","collation()","collation_current()","collect()","collect()","collect()","collect!()","collect!()","collect_concat()","collect_concat()","collect_first_comment()","collect_method()","collect_tokens()","collection()","collection_cache_versioning()","collection_check_boxes()","collection_check_boxes()","collection_radio_buttons()","collection_radio_buttons()","collection_select()","collection_select()","color()","color_field()","color_field()","color_field_tag()","colorable?()","colorize()","colorize_code()","colorize_logging()","colorize_logging=()","column()","column()","column()","column()","column()","column_defaults()","column_exists?()","column_exists?()","column_for_attribute()","column_name_matcher()","column_name_with_order_matcher()","column_names()","column_separator()","columns()","columns()","columns()","columns()","columns_hash()","columns_hash?()","combination()","combination()","combined_fragment_cache_key()","comma_breakable()","command()","command=()","command_injection","command_name()","command_names()","command_type()","command_type()","commands()","comment()","comment=()","comment=()","comments","commercial()","commercial()","commit()","commit()","commit()","commit!()","commit!()","commit_db_transaction()","commit_flash()","commit_if_changed()","committed?()","committed?()","common_options()","compact()","compact()","compact()","compact()","compact()","compact()","compact()","compact()","compact!()","compact!()","compact!()","compact_blank()","compact_blank()","compact_blank!()","compact_blank!()","comparable_time()","compare?()","compare_by_identity()","compare_by_identity()","compare_by_identity?()","compare_by_identity?()","compare_file()","compare_stream()","compare_with_coercion()","compare_with_coercion()","compare_with_global_token()","compare_with_real_token()","compare_without_coercion()","compare_without_coercion()","compatible?()","compile()","compile()","compile()","compile_error()","compile_file()","compile_file_prism()","compile_methods!()","compile_methods!()","compile_option()","compile_option=()","compile_prism()","compiled_method_container()","complain()","complete()","complete()","complete()","complete()","complete()","complete()","complete!()","complete_authentication()","completed?()","completer_quote_characters=()","completer_word_break_characters=()","completion_append_character=()","completion_case_fold()","completion_case_fold=()","completion_info()","completion_info()","completion_journey_data()","completion_proc=()","completion_quote_character()","component()","component()","component_ary()","component_root_dir()","compose()","compose()","compose()","compose()","compose()","compose()","compose()","compose()","compose_sets()","composed_of()","compress()","compress_meta_key()","compute_asset_extname()","compute_asset_host()","compute_asset_path()","compute_class()","compute_key()","compute_tags()","compute_type()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concat()","concern()","concern()","concern()","concerning()","concerns()","config()","config()","config()","config()","config()","config()","config()","config()","config()","config()","config.ru.tt","config_accessor()","config_file()","config_file_name()","config_for()","config_home()","config_target_version()","config_when_updating()","configru()","configs()","configs_for()","configuration()","configuration()","configuration=()","configurations()","configurations()","configurations=()","configure()","configure()","configure()","configure()","configure()","configure()","configure_connection_for_https()","configure_gem_home_and_path()","configure_io()","configure_rdoc_files()","configure_sdoc()","configure_sdoc()","configured_bundle_path()","confirm.coffee","confirm_multiline_termination()","conflicting_dependencies()","conflicting_dependencies()","conflicts()","confstr()","conj()","conj()","conjugate()","conjugate()","connect()","connect()","connect()","connect()","connect()","connect()","connect_address()","connect_from()","connect_internal()","connect_nonblock()","connect_nonblock()","connect_to()","connected?()","connected?()","connected?()","connected_to()","connected_to?()","connected_to_many()","connecting_to()","connection()","connection()","connection()","connection.js","connection.rb.tt","connection_close?()","connection_db_config()","connection_for()","connection_handler()","connection_handler()","connection_handler=()","connection_handlers()","connection_handlers=()","connection_identifier()","connection_identifiers()","connection_keep_alive?()","connection_monitor.js","connection_pool()","connection_pool_list()","connection_pools()","connection_specification_name()","connections()","connects_to()","consider_local?()","consider_remote?()","console()","console()","console()","console_mode()","console_mode=()","const_defined?()","const_get()","const_load()","const_missing()","const_missing()","const_set()","const_source_location()","constantize()","constantize()","constants()","constants()","constraints()","consumer.js","consumer.js.tt","contains_requirable_file?()","content_columns()","content_encoding()","content_for()","content_for?()","content_length()","content_length()","content_length=()","content_mime_type()","content_range()","content_security_policy()","content_security_policy()","content_security_policy()","content_security_policy.rb.tt","content_security_policy=()","content_security_policy_nonce()","content_security_policy_nonce_directives()","content_security_policy_nonce_directives=()","content_security_policy_nonce_generator()","content_security_policy_nonce_generator=()","content_security_policy_report_only()","content_security_policy_report_only()","content_security_policy_report_only=()","content_tag()","content_tag()","content_type()","content_type()","content_type()","content_type()","content_type()","content_type=()","content_type=()","content_type=()","contents()","contents()","contents=()","context()","context()","context_class()","context_class()","continue_entry_body()","continue_timeout=()","contributing","control_expressions","controller()","controller()","controller.rb.tt","controller.rb.tt","controller_class()","controller_class_for()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","convert()","convert()","convert()","convert()","convert()","convert()","convert_invalid_byte_sequence()","convert_to_backward_compatible_key!()","converted_arrays()","converters()","convertible_int()","convpath()","cooked()","cooked!()","cookie_jar()","cookies()","cookies()","cookies()","copy()","copy()","copy()","copy()","copy()","copy()","copy_entry()","copy_file()","copy_nonce()","copy_stream()","copy_stream()","copy_to()","copy_to()","core()","core()","coredump?()","correct()","correct()","correct?()","correct_error()","correct_for_windows_path()","corrections()","corrections()","corrections()","corrections()","corrections()","corrections()","corrections()","corrections()","corrections()","cors.rb.tt","cos()","cos()","cosh()","count()","count()","count()","count()","count()","count()","count()","count()","count()","count()","count_by_sql()","count_end()","count_for_char()","count_imemo_objects()","count_kw()","count_lex()","count_nodes()","count_objects()","count_objects_size()","count_observers()","count_symbols()","count_tdata_objects()","country_zones()","cover?()","coverage_level=()","coverage_task_description()","cp()","cp_lr()","cp_r()","cpu_time()","crc()","crc32()","crc32_combine()","crc_table()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create!()","create!()","create!()","create_action_mailbox_files()","create_actiontext_files()","create_all()","create_and_extract_message_id!()","create_and_upload!()","create_and_upload_raw_email!()","create_before_direct_upload!()","create_blocks_from_untracked_lines()","create_bundle_path()","create_cert()","create_cert_email()","create_cert_self_signed()","create_channel_files()","create_current()","create_database()","create_database()","create_digest()","create_document()","create_element()","create_entries()","create_entries()","create_enum()","create_ext()","create_ext_from_array()","create_ext_from_hash()","create_ext_from_string()","create_extension()","create_fast_state()","create_fixtures()","create_guid()","create_header()","create_id()","create_id=()","create_items()","create_join_table()","create_key()","create_mailbox_file()","create_mailer_file()","create_makefile()","create_migration()","create_migrations()","create_migrations()","create_or_find_by()","create_or_find_by!()","create_pretty_state()","create_savepoint()","create_schema()","create_table()","create_table_migration.rb.tt","create_timestamp()","create_unlogged_tables()","create_value()","create_with()","created?()","creates_option","credentials()","credentials()","credentials_path()","critical=()","critical?()","crl=()","crl_uris()","crls()","crls=()","cross()","cruby_locals()","crypt()","csp.coffee","csp_meta_tag()","csrf.coffee","csrf_meta_tag()","csrf_meta_tags()","csrf_token_hmac()","css()","ctime()","ctime()","ctime()","ctime()","ctime()","ctime()","ctrl_cmd()","ctype()","current()","current()","current()","current()","current()","current()","current()","current=()","current_cert()","current_crl()","current_custom_context()","current_cycle()","current_database()","current_database()","current_group()","current_hash()","current_hash()","current_indent()","current_page?()","current_preventing_writes()","current_role()","current_savepoint_name()","current_scheduler()","current_schema()","current_section()","current_server()","current_shard()","current_version()","curry()","curry()","curses_dl()","curses_dl_files()","cursor()","cursor=()","cursor_down()","cursor_left()","cursor_pos()","cursor_pos()","cursor_pos()","cursor_pos()","cursor_right()","cursor_up()","curve_name()","custom()","custom()","custom_metadata()","custom_metadata=()","cwday()","cweek()","cwyear()","cycle()","cycle()","cycle()","daemon()","dangerous_attribute_method?()","dangerous_class_method?()","dasherize()","dasherize()","data()","data()","data()","data=()","data_home()","data_source_exists?()","data_source_exists?()","data_sources()","data_sources()","data_type()","database()","database()","database_configuration()","database_exists?()","database_exists?()","database_exists?()","database_exists?()","database_yml()","databases.rake","datadir()","date()","date()","date=()","date=()","date?()","date_field()","date_field()","date_field_tag()","date_select()","date_select()","daterange()","datetime_field()","datetime_field()","datetime_field_tag()","datetime_format()","datetime_format=()","datetime_local_field()","datetime_local_field()","datetime_local_field_tag()","datetime_select()","datetime_select()","datetime_type()","day()","day()","day()","day_fraction()","days()","days_ago()","days_in_month()","days_in_year()","days_since()","days_to_week_start()","db()","db_config()","db_dir()","db_error()","db_when_updating()","deactivate()","debug()","debug()","debug()","debug()","debug()","debug!()","debug=()","debug?()","debug?()","debug_break()","debug_exception_response_format()","debug_readline()","decode()","decode()","decode()","decode64()","decode_all()","decode_credentials()","decode_credentials()","decode_credentials_header()","decode_uri_component()","decode_www_form()","decode_www_form_component()","decoded_password()","decoded_user()","decompose()","decompose()","decompress()","deconstantize()","deconstantize()","deconstruct()","deconstruct()","deconstruct()","deconstruct()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","deconstruct_keys()","decrement()","decrement()","decrement()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt()","decrypt_and_verify()","decrypt_and_verify()","decryption_keys()","decryption_keys()","dedup()","deduplicate()","deep_dup()","deep_dup()","deep_dup()","deep_dup()","deep_merge()","deep_merge!()","deep_stringify_keys()","deep_stringify_keys()","deep_stringify_keys()","deep_stringify_keys!()","deep_stringify_keys!()","deep_stringify_keys!()","deep_symbolize_keys()","deep_symbolize_keys()","deep_symbolize_keys()","deep_symbolize_keys!()","deep_transform_keys()","deep_transform_keys()","deep_transform_keys!()","deep_transform_keys!()","deep_transform_values()","deep_transform_values!()","def_class()","def_delegator()","def_delegator()","def_delegators()","def_delegators()","def_erb_method()","def_extend_command()","def_extend_command()","def_head_option()","def_inspector()","def_instance_delegator()","def_instance_delegators()","def_method()","def_module()","def_notifier()","def_notifier()","def_option()","def_single_delegator()","def_single_delegators()","def_tail_option()","default()","default()","default()","default()","default()","default()","default=()","default_acl()","default_aliases_for_option()","default_argc_limit()","default_bindir()","default_bundle_dir()","default_cert_path()","default_command_root()","default_dir()","default_dir()","default_event_sources()","default_exec_format()","default_ext_dir_for()","default_external()","default_external=()","default_for_option()","default_form_builder()","default_form_builder()","default_gem?()","default_gemfile()","default_generator_root()","default_i18n_subject()","default_id_conv()","default_inspect()","default_inspect()","default_internal()","default_internal=()","default_key_bindings()","default_key_path()","default_load_limit()","default_lockfile()","default_log_file()","default_ole_types()","default_options()","default_options=()","default_path()","default_port()","default_port()","default_port()","default_prerelease()","default_proc()","default_proc=()","default_rubygems_dirs()","default_schema_cache_path()","default_scope()","default_scoped()","default_scopes?()","default_sequence_name()","default_source_root()","default_sources()","default_spec_cache_dir()","default_spec_file()","default_specifications_dir()","default_specifications_dir()","default_stubs()","default_timezone()","default_timezone=()","default_title=()","default_to()","default_url_options()","default_url_options=()","default_value()","default_value_for_option()","defaults()","defaults()","defaults_str()","defaults_str()","defer_subscription_confirmation!()","defer_subscription_confirmation?()","define()","define()","define()","define()","define()","define()","define()","define_attribute()","define_attribute_method()","define_attribute_methods()","define_by_keywords()","define_cached_method()","define_callbacks()","define_finalizer()","define_head()","define_method()","define_model_callbacks()","define_on()","define_singleton_method()","define_tail()","defined_class()","defined_in?()","definition()","definition()","definition()","definition()","definition()","definition_lists()","deflate()","deflate()","deflate()","deflate()","degree()","delegate()","delegate()","delegate()","delegate_missing_to()","delegate_to()","delegated_type()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete!()","delete!()","delete?()","delete_all()","delete_all()","delete_all()","delete_at()","delete_at()","delete_by()","delete_char()","delete_char_or_list()","delete_entry()","delete_field()","delete_header()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_if()","delete_key()","delete_legacy_args()","delete_legacy_args()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_multi()","delete_observer()","delete_observers()","delete_prefix()","delete_prefix!()","delete_prefixed()","delete_prefixed()","delete_prefixed()","delete_prefixed()","delete_prefixed()","delete_prefixed()","delete_session()","delete_session()","delete_suffix()","delete_suffix!()","delete_text()","delete_unless_alive()","delete_value()","deleted?()","deliver()","deliver_later()","deliver_later!()","deliver_now()","deliver_now!()","demodulize()","demodulize()","denominator()","denominator()","denominator()","denominator()","denominator()","depend_rules()","dependencies()","dependencies()","dependencies()","dependencies_for()","dependency()","dependency_digest()","dependency_order()","dependent_gems()","dependent_specs()","deprecate()","deprecate()","deprecate()","deprecate_constant()","deprecate_constant()","deprecate_methods()","deprecate_option()","deprecated?()","deprecated_exception_id?()","deprecated_license_id?()","deprecation_warning()","deprecation_warning()","deprep()","deprep()","deprep()","depth()","depth=()","deq()","deq()","derive()","derive_from()","derive_key_from()","desc()","desc()","desc()","descend()","descendants()","descendants()","descendants()","descends_from_active_record?()","describe()","describe()","description()","description()","description=()","deserialize()","deserialize()","deserialize()","deserialize()","deserialize()","deserialize()","deserialize()","deserialize()","deserialize()","destination_encoding()","destination_encoding()","destination_encoding()","destination_encoding_name()","destination_encoding_name()","destroy()","destroy()","destroy()","destroy()","destroy!()","destroy_all()","destroy_all()","destroy_all()","destroy_association_async_job()","destroy_by()","destroyed?()","destroyed_by_association()","destroyed_by_association=()","detach()","detach()","detach()","detach()","detach_from()","detached()","detached=()","detached?()","detail()","detail_args_for()","detailed_message()","detailed_message()","detailed_message()","detailed_message()","details()","details()","details_for_lookup()","detect()","detect()","detect_encoding()","detect_invalid_blocks()","deterministic?()","deterministic_encrypted_attributes()","dev()","dev_major()","dev_minor()","development.rb.tt","development?()","development?()","development_dependencies()","dfdxi()","dh_compute_key()","dialog()","dialog_proc()","dictionary_without_leaves()","difference()","difference()","dig()","dig()","dig()","dig()","dig()","dig()","dig()","dig()","dig()","dig_methods","dig_perfect_match_proc=()","digest()","digest()","digest()","digest()","digest()","digest()","digest()","digest()","digest()","digest()","digest()","digest!()","digest_length()","digest_length()","digest_length()","digest_length()","digits()","dimensions()","dir()","dir()","dir_config()","direct()","direct_ancestors()","direct_ancestors()","direct_descendants()","direct_descendants()","direct_upload.js","direct_upload_controller.js","direct_uploads_controller.js","directories()","directory?()","directory?()","directory?()","directory?()","directory?()","dirname()","dirname()","dirs()","dirs=()","dirties_query_cache()","disable()","disable()","disable()","disable.coffee","disable_cache()","disable_close()","disable_ddl_transaction!()","disable_extension()","disable_extension()","disable_query_cache!()","disable_query_cache!()","disable_referential_integrity()","disallowed_behavior()","disallowed_behavior=()","disallowed_warnings()","disasm()","disasm()","disassemble()","disassemble()","discard()","discard!()","discard_on()","disconnect()","disconnect()","disconnect()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disjoint?()","dispatch()","dispid()","display()","display()","display()","display?()","display?()","display_document()","distance()","distance()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","distinct()","distribution","div()","div()","div()","divide()","divmod()","divmod()","divmod()","divmod()","dlload()","dlopen()","dlunwrap()","dlwrap()","dn()","dn=()","do_get()","do_aliases()","do_attrs()","do_boot_defclass()","do_classes_and_modules()","do_constants()","do_includes()","do_methods()","do_missing()","do_not_reverse_lookup()","do_not_reverse_lookup()","do_not_reverse_lookup=()","do_not_reverse_lookup=()","do_not_reverse_lookup=()","do_reply()","do_write()","doc_dir()","doc_stats()","doctor()","doctor()","document()","document()","document()","document?()","document?()","document_children=()","document_ok?()","document_self=()","document_self_or_methods()","documentation_guide","documentation_page()","documentation_search()","documentation_source()","documented?()","documented?()","documented?()","documented?()","dom.coffee","dom_class()","dom_id()","domain()","domain=()","done()","done()","done()","done()","done()","done_adding()","done_documenting=()","done_installing()","done_running()","done_unloading()","dot()","double_fig()","down()","down()","downcase()","downcase()","downcase!()","downcase?()","downcase_word()","download()","download()","download()","download()","download()","download()","download()","download()","download()","download()","download()","download()","download()","download_blob_to_tempfile()","download_blob_to_tempfile()","download_chunk()","download_chunk()","download_chunk()","download_chunk()","download_chunk()","download_chunk()","download_reporter()","download_to_cache()","downto()","downto()","draw()","draw()","draw()","drop()","drop()","drop()","drop()","drop_all()","drop_current()","drop_join_table()","drop_schema()","drop_table()","drop_table()","drop_while()","drop_while()","drop_while()","dsa_sign_asn1()","dsa_verify_asn1()","dst?()","dst?()","dstaddr()","dtrace_probes","dummy?()","dummy_instance_alias()","dummy_instance_method()","dummy_makefile()","dummy_manifest.js.tt","dummy_singleton_method()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump()","dump_all()","dump_compressed()","dump_compressed()","dump_compressed()","dump_exit_locations()","dump_file()","dump_hash()","dump_schema_cache()","dump_shapes()","dump_stream()","dump_to()","dump_with_rubygems_yaml()","dup()","dup()","dup()","dup()","dup()","dup()","dup()","dup()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duration()","dynamic_library_suffixes()","dynamic_prompt()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each_address()","each_address()","each_address()","each_address()","each_address()","each_ancestor()","each_attribute()","each_byte()","each_byte()","each_byte()","each_byte()","each_byte()","each_byte()","each_byte()","each_caller_location()","each_capitalized()","each_capitalized_name()","each_certificate()","each_char()","each_char()","each_char()","each_char()","each_char()","each_child()","each_child()","each_child()","each_child()","each_classmodule()","each_codepoint()","each_codepoint()","each_codepoint()","each_codepoint()","each_cons()","each_const()","each_constant()","each_entry()","each_entry()","each_entry()","each_extend()","each_filename()","each_grapheme_cluster()","each_header()","each_include()","each_index()","each_key()","each_key()","each_key()","each_key()","each_key()","each_key()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_line()","each_localized_path()","each_method()","each_name()","each_name()","each_name()","each_name()","each_name()","each_neighbor_block()","each_nested_attribute()","each_object()","each_option()","each_option()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_pair()","each_parent()","each_record()","each_resource()","each_section()","each_slice()","each_source()","each_spec()","each_strongly_connected_component()","each_strongly_connected_component()","each_strongly_connected_component_from()","each_strongly_connected_component_from()","each_sublocale()","each_top_level_statement()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_value()","each_with_index()","each_with_index()","each_with_object()","each_with_object()","eager()","eager_autoload()","eager_load()","eager_load()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load!()","eager_load_namespaces()","eager_load_paths()","eager_loading?()","ecdh_curves=()","echo=()","echo?()","ed_digit()","ed_transpose_words()","edit.html.erb.tt","edit_helper()","editing_mode()","editing_mode()","editing_mode=()","editing_mode_is?()","egd()","egd_bytes()","egid()","egid=()","eid()","eid()","eligible_for_update?()","em_backward_word()","em_big_backward_word()","em_forward_word()","em_forward_word_with_capitalization()","emacs_editing_mode()","emacs_editing_mode?()","email()","email_address_with_name()","email_address_with_name()","email_exists?()","email_field()","email_field()","email_field_tag()","email_to_name()","emails()","emphasis()","empty()","empty()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty_buffer?()","empty_buffer?()","empty_insert_statement_value()","emulate_booleans()","enable()","enable()","enable()","enable()","enable()","enable_close()","enable_config()","enable_extension()","enable_extension()","enable_fallback_scsv()","enable_image_processing_gem()","enable_query_cache!()","enable_query_cache!()","enable_warnings()","enabled?()","enabled?()","enabled?()","enabled?()","enabled?()","enc_key()","enclose()","enclosed?()","encode()","encode()","encode()","encode!()","encode!()","encode!()","encode64()","encode_credentials()","encode_credentials()","encode_credentials()","encode_fallback()","encode_uri_component()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with_invalid_byte_sequence()","encode_www_form()","encode_www_form_component()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding()","encoding=()","encoding_system_needs()","encoding_system_needs()","encodings","encrypt()","encrypt()","encrypt()","encrypt()","encrypt()","encrypt()","encrypt()","encrypt()","encrypt()","encrypt()","encrypt_and_sign()","encrypt_attribute()","encrypted()","encrypted()","encrypted?()","encrypted?()","encrypted?()","encrypted_attribute?()","encryption_aware_type_caster()","encryption_key()","encryption_key()","encrypts()","end()","end()","end()","end()","end?()","end_addr()","end_character_column()","end_character_offset()","end_column()","end_document()","end_document()","end_document()","end_document()","end_element()","end_line()","end_mapping()","end_mapping()","end_of_day()","end_of_day()","end_of_day()","end_of_hour()","end_of_hour()","end_of_line()","end_of_minute()","end_of_minute()","end_of_month()","end_of_quarter()","end_of_week()","end_of_year()","end_offset()","end_sequence()","end_sequence()","end_stream()","end_stream()","end_stream()","end_with?()","end_with?()","ended?()","endgrent()","endpoint()","endpoint()","endpwent()","engine.rake","engine.rb.tt","engine?()","engine_manifest.js.tt","engines()","england()","enhanced?()","enq()","enq()","enqueue()","ensure_confirmation_sent()","ensure_default_gem_subdirectories()","ensure_dependency()","ensure_gem_subdirectories()","ensure_loadable_spec()","enter()","entity()","entity_class()","entity_class()","entries()","entries()","entries()","entries()","enum()","enum()","enum_for()","enum_for()","enum_types()","enumerate()","enumerate_columns_in_select_statements()","env()","env()","env()","env=()","env_config()","env_config()","env_filter()","env_requirement()","environment()","environment()","environment()","environment()","environment()","environment.rb.tt","environment?()","eof()","eof()","eof()","eof()","eof()","eof()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eof?()","eos?()","eos?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql_with_coercion()","eql_without_coercion()","equal?()","equal?()","equal?()","erase_after_cursor()","erase_after_cursor()","erase_after_cursor()","erase_line()","erase_screen()","erf()","erfc()","errno()","error()","error()","error()","error()","error()","error()","error()","error()","error()","error!()","error=()","error?()","error?()","error_bytes()","error_char()","error_code()","error_depth()","error_message()","error_message()","error_number()","error_reporter()","error_string()","error_wrapping()","errors()","errors()","errors()","errors()","errors()","errors()","errors()","escape()","escape()","escape()","escape()","escape()","escape()","escape()","escapeelement()","escapehtml()","escapehtml()","escapeuricomponent()","escapeuricomponent()","escape_bytea()","escape_element()","escape_for_print()","escape_html()","escape_javascript()","escape_once()","escape_slash()","escape_slash=()","escape_slash?()","escape_uri_component()","escape_uri_component()","establish_connection()","establish_connection()","etag()","etag=()","etag?()","etag_matches?()","euid()","euid=()","eval()","eval()","eval()","eval_history=()","eval_input()","eval_script()","evaluable_code()","evaluable_code()","evaluable_code()","evaluate()","even?()","event()","event()","event.coffee","event?()","event_interface()","event_location()","event_location()","event_loop()","exabyte()","exabytes()","exact?()","except()","except()","except()","except()","except()","except()","except()","except!()","exception()","exception()","exception()","exception()","exception_trace()","exceptions","excerpt()","exchange()","exchange_point_and_mark()","exclude()","exclude?()","exclude?()","exclude_end?()","exclude_end?()","excluded_from_filter_parameters?()","excluding()","excluding()","excluding()","exclusive()","exec()","exec()","exec_delete()","exec_format()","exec_if()","exec_insert()","exec_migration()","exec_queries()","exec_query()","exec_rollback_to_savepoint()","exec_update()","executable()","executable()","executable=()","executable?()","executable?()","executable?()","executable?()","executable_real?()","executable_real?()","executable_real?()","executable_real?()","executables()","executables=()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute_command()","execute_if_updated()","execute_if_updated()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","exist?()","existence()","existent()","existent_directories()","exists?()","exists?()","exists?()","exists?()","exit()","exit()","exit()","exit()","exit()","exit()","exit!()","exit!()","exit_value()","exited?()","exitstatus()","exp()","exp()","expand()","expand()","expand()","expand()","expand()","expand()","expand()","expand?()","expand_cache_key()","expand_environ()","expand_existing()","expand_hexstring()","expand_indent()","expand_neighbors()","expand_pair()","expand_path()","expand_path()","expand_tabs()","expand_value()","expanded()","expect()","expected_response()","expire()","expire_fragment()","expired?()","expires_in()","expires_now()","explain()","explain()","explain()","explain()","explain()","explanation()","explicit?()","explicit_version_requirement()","exponent()","export()","export()","export()","export()","export_keying_material()","expr_beg?()","expr_label?()","extend()","extend_object()","extend_object()","extend_object()","extended()","extending()","extension()","extension","extension()","extension()","extension.ja","extension?()","extension_available?()","extension_dir()","extension_enabled?()","extension_with_delimiter()","extension_without_delimiter()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions()","extensions=()","extensions=()","extensions=()","extensions=()","extensions=()","extensions_dir()","extensions_dir()","extern()","external?()","external_encoding()","external_encoding()","external_encoding()","external_encoding()","extify()","extname()","extname()","extra_args()","extra_args=()","extra_rdoc_files()","extra_rdoc_files=()","extract()","extract()","extract!()","extract!()","extract!()","extract_annotations_from()","extract_associated()","extract_bin()","extract_call_seq()","extract_domain()","extract_files()","extract_files()","extract_files()","extract_files()","extract_last_module()","extract_message_id()","extract_options!()","extract_session_id()","extract_subdomain()","extract_subdomains()","extractable_options?()","extractable_options?()","extractable_options?()","extractable_options?()","facility()","fail()","failure?()","failure?()","failure_info()","fallbacks()","family()","family()","family_addrinfo()","fast_generate()","fatal","fatal()","fatal()","fatal!()","fatal?()","favicon.ico","favicon_link_tag()","fchdir()","fcntl()","fcntl()","fcntl()","fdatasync()","fdiv()","fdiv()","fdiv()","fdiv()","fdiv()","feature_flag()","feed()","feel()","feel()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch_entry()","fetch_file()","fetch_http()","fetch_https()","fetch_multi()","fetch_path()","fetch_resource()","fetch_s3()","fetch_server()","fetch_spec()","fetch_spec()","fetch_values()","fetch_values()","fetch_values()","fetcher()","fetcher()","ffmpeg_exists?()","ffmpeg_path()","fiber","fiber()","field()","field?()","field_id()","field_id()","field_name()","field_name()","field_row?()","field_set_tag()","field_size_limit()","field_size_limit()","fields()","fields()","fields()","fields_for()","fields_for()","fifth()","fifth()","fifth()","fifth!()","file()","file()","file()","file?()","file?()","file?()","file?()","file?()","file_checksum.js","file_field()","file_field()","file_field()","file_field_tag()","file_input?()","file_lookup_paths()","file_lookup_paths()","file_name()","file_name()","file_name()","file_name()","file_name()","file_path()","filename()","filename()","filename()","filename()","filename_quote_characters=()","fileno()","fileno()","fileno()","fileno()","fileno()","files()","files=()","files_hash()","files_in()","files_in()","files_in_default_gem()","files_in_gem()","fill()","fill_breakable()","filter()","filter()","filter()","filter()","filter()","filter()","filter()","filter()","filter()","filter()","filter!()","filter!()","filter!()","filter!()","filter=()","filter_attributes()","filter_attributes=()","filter_backtrace()","filter_backtrace()","filter_backtrace()","filter_map()","filter_map()","filter_param()","filter_parameter_logging.rb.tt","filter_proxies()","filtered_env()","filtered_parameters()","filtered_path()","filtered_query_string()","final()","finalize()","finalized?()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find_active_stub_by_path()","find_alias_command()","find_alias_comment()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all()","find_all_by_full_name()","find_all_by_name()","find_all_template()","find_ancestor_local_symbol()","find_attachment_gallery_nodes()","find_attr_comment()","find_attribute()","find_attribute_named()","find_beginning_of_week!()","find_body()","find_by()","find_by()","find_by!()","find_by_full_name()","find_by_name()","find_by_path()","find_by_sql()","find_c_enclosure()","find_class()","find_class_comment()","find_class_method_named()","find_class_named()","find_class_named()","find_class_named_from()","find_class_or_module()","find_class_or_module()","find_cmd_and_exec()","find_command()","find_command_possibilities()","find_config_file()","find_const_comment()","find_constant_named()","find_db_config()","find_default_spec()","find_each()","find_enclosing_module_named()","find_executable()","find_extension()","find_external_alias()","find_external_alias_named()","find_file_named()","find_file_named()","find_files()","find_gemspec()","find_header()","find_in()","find_in_batches()","find_in_cache()","find_in_unresolved()","find_in_unresolved_tree()","find_inactive_by_path()","find_index()","find_index()","find_instance_method_named()","find_latest_files()","find_leaves()","find_library()","find_local_symbol()","find_local_symbol()","find_method()","find_method_named()","find_modifiers()","find_module_named()","find_module_named()","find_module_named()","find_name()","find_or_create_by()","find_or_create_by()","find_or_create_by!()","find_or_create_by!()","find_or_initialize_by()","find_override_comment()","find_paths()","find_proxy()","find_response()","find_root()","find_root()","find_session()","find_signed()","find_signed()","find_signed!()","find_signed!()","find_sole_by()","find_source()","find_symbol()","find_symbol_module()","find_template()","find_text_page()","find_type()","find_tzinfo()","find_unique()","find_unresolved_default_spec()","find_zone()","find_zone!()","finder()","finder()","finger()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish()","finish!()","finish_page_dir()","finish_pasting()","finish_resolve()","finish_with_state()","finished?()","finished?()","finished_message()","finite?()","finite?()","finite?()","finite?()","fips_mode()","fips_mode=()","first()","first()","first()","first()","first()","first()","first()","first()","first()","first!()","first?()","first?()","first_column()","first_lineno()","first_lineno()","fix()","fix_basic_object_inheritance()","fixed?()","fixed_anchor?()","fixed_encoding?()","fixed_length_secure_compare()","fixed_length_secure_compare()","fixture_file_name()","fixture_is_cached?()","fixtures_path()","flags()","flags=()","flags=()","flash()","flash=()","flat_map()","flat_map()","flatten()","flatten()","flatten()","flatten!()","flatten!()","floats()","flock()","flock()","floor()","floor()","floor()","floor()","floor()","floor()","floor()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush()","flush!()","flush_all!()","flush_idle_connections!()","flush_left()","flush_next_in()","flush_next_out()","flush_sessions()","fname?()","fnmatch()","fnmatch()","fnmatch?()","fnmatch?()","font_path()","font_url()","for()","for()","for()","for()","for()","for_cache()","for_current_gems()","for_each()","for_fd()","for_fd()","for_fd()","for_spec()","for_spec?()","force()","force_add_empty()","force_add_hidden()","force_documentation=()","force_encoding()","force_quotes?()","force_truecolor()","foreach()","foreach()","foreach()","foreach()","foreign_key()","foreign_key()","foreign_key()","foreign_key()","foreign_key_exists?()","foreign_key_exists?()","foreign_keys()","foreign_keys()","foreign_keys()","foreign_keys()","foreign_table_exists?()","foreign_tables()","fork()","fork()","fork()","form()","form.coffee","form_authenticity_param()","form_authenticity_token()","form_data=()","form_data?()","form_for()","form_tag()","form_with()","format()","format()","format()","format()","format()","format()","format=()","format=()","format_from_path_extension()","format_paragraph()","format_specifications","format_text()","formats()","formats()","formats=()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_program_filename()","formatter()","formatter()","formatter=()","formatter=()","fortnight()","fortnights()","forty_two()","forty_two()","forty_two()","forty_two!()","forward_char()","forward_search_history()","forward_word()","fourth()","fourth()","fourth()","fourth!()","frac()","fragment=()","fragment_by_canonicalizing_attachment_galleries()","fragment_by_canonicalizing_attachments()","fragment_by_canonicalizing_content()","fragment_by_converting_trix_attachments()","fragment_by_minifying_attachments()","fragment_by_replacing_attachment_gallery_nodes()","fragment_cache_key()","fragment_exist?()","fragment_for_html()","framework.rake","framework_trace()","free()","free()","free()","free()","free=()","freed?()","freed?()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","freeze()","fresh?()","fresh_when()","frexp()","friday?()","friday?()","friendly_path()","from()","from()","from()","from()","from()","from_address()","from_attachable()","from_attachable_sgid()","from_attachable_sgid()","from_attachables()","from_attributes()","from_attributes()","from_file()","from_hash()","from_hash()","from_html()","from_json()","from_list()","from_module()","from_name()","from_name()","from_node()","from_node()","from_node()","from_node()","from_node()","from_now()","from_rails_root()","from_source()","from_source()","from_specs()","from_state()","from_trix_attachment()","from_trusted_xml()","from_xml()","from_yaml()","front()","front()","frozen?()","frozen?()","frozen_bundle?()","fsm.css","fsm.js","fsync()","fsync()","ftype()","ftype()","ftype()","full_attributes()","full_commit!()","full_gem_path()","full_message()","full_message()","full_message()","full_messages()","full_messages_for()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name=()","full_name_parts()","full_name_parts()","full_name_parts()","full_old_name()","full_require_paths()","full_rollback!()","full_rollback?()","full_spec()","full_trace()","full_url_for()","fullpath()","fully_committed?()","fully_completed?()","fully_documented?()","fully_documented?()","fully_rolledback?()","future?()","future?()","gallery_attachments()","gamma()","garbage_collect()","garbage_collect()","gather_files()","gcd()","gcd()","gcdlcm()","gem()","gem()","gem()","gem()","gem()","gem_contents()","gem_dir()","gem_dir()","gem_group()","gem_install_dir()","gem_repository?()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gem_version()","gemdeps_load()","gemfile()","gemfile()","gemfile_entry()","gems_dir()","gems_dir()","gemspec()","gemspec()","gen_body_table()","gen_const_table()","gen_time()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate()","generate_bin_script()","generate_bin_symlink()","generate_default_dirs()","generate_default_man_dir()","generate_key()","generate_key()","generate_key()","generate_key()","generate_key()","generate_key!()","generate_key!()","generate_layout()","generate_line()","generate_lines()","generate_message()","generate_method_for_mime()","generate_missing_message_id()","generate_parameters()","generate_prime()","generate_random_hex_key()","generate_random_key()","generate_sid()","generate_sid()","generate_test_dummy()","generate_unique_secure_token()","generate_unique_secure_token()","generate_windows_script()","generation_hook()","generation_hook()","generator()","generator()","generator_descriptions()","generator_for()","generator_name()","generators()","generators()","generators()","get()","get()","get()","get()","get2()","get_all_gem_names()","get_all_gem_names_and_versions()","get_bool()","get_byte()","get_candidate_gems()","get_candidates()","get_cert_files()","get_class_or_module()","get_class_specification()","get_console_screen_buffer_info()","get_constant()","get_dns_server_list()","get_env_editor()","get_fields()","get_flags()","get_gems_to_cleanup()","get_header()","get_hosts_dir()","get_hosts_path()","get_included_module_with_optional_parens()","get_info()","get_initial_token()","get_mbchar_width()","get_method()","get_next_mbchar_size()","get_one_gem_name()","get_one_optional_argument()","get_option()","get_path()","get_platform_from_requirements()","get_prev_mbchar_size()","get_primary_gems()","get_print()","get_proxy_from_env()","get_public_key()","get_relative_path()","get_resolv_info()","get_response()","get_screen_size()","get_screen_size()","get_screen_size()","get_screen_size()","get_string()","get_symbol_or_name()","get_tk()","get_tk_until()","get_tkread()","get_value()","get_value()","get_values()","getaddress()","getaddress()","getaddress()","getaddress()","getaddress()","getaddresses()","getaddresses()","getaddresses()","getaddresses()","getaddrinfo()","getaddrinfo()","getbyte()","getbyte()","getbyte()","getbyte()","getbyte()","getbyte()","getbyte()","getc()","getc()","getc()","getc()","getc()","getc()","getc()","getc()","getc()","getc_with_bracketed_paste()","getch()","getch()","getch()","getegid()","geteuid()","getgid()","getgm()","getgm()","getgm()","getgrent()","getgrgid()","getgrnam()","gethostbyaddr()","gethostbyname()","gethostbyname()","gethostname()","getifaddrs()","getkey()","getlocal()","getlocal()","getlocal()","getlogin()","getname()","getname()","getname()","getname()","getnameinfo()","getnameinfo()","getnames()","getnames()","getnames()","getnames()","getopts()","getopts()","getopts()","getpass()","getpass()","getpeereid()","getpeername()","getpgid()","getpgrp()","getpriority()","getpty()","getpwent()","getpwnam()","getpwuid()","getresource()","getresources()","getrlimit()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","gets()","getservbyname()","getservbyport()","getsid()","getsockname()","getsockopt()","getsockopt()","getuid()","getutc()","getutc()","getutc()","getwd()","getwd()","getwd()","gid()","gid()","gid=()","gigabyte()","gigabytes()","git()","git()","git_present?()","git_source()","gitattributes()","gitattributes.tt","github()","github()","github()","gitignore()","gitignore()","gitignore.tt","gitignore.tt","glob()","glob()","glob()","glob_files_in_dir()","global_csrf_token()","global_executor_concurrency=()","global_previous_schemes_for()","global_variables()","globals","glossary","gm()","gmt?()","gmt?()","gmt_offset()","gmt_offset()","gmtime()","gmtime()","gmtime()","gmtoff()","gmtoff()","goto()","goto_column()","grant_privilege()","grant_privilege()","grapheme_clusters()","grapheme_length()","great_job()","gregorian()","gregorian?()","gregorian_leap?()","grep()","grep()","grep_v()","grep_v()","group()","group()","group()","group()","group()","group()","group()","group=()","group_by()","group_by_attribute()","group_entries()","group_sub()","grouped_collection_select()","grouped_collection_select()","grouped_options_for_select()","groups()","groups()","groups=()","grpowned?()","grpowned?()","grpowned?()","grpowned?()","gsub()","gsub()","gsub!()","guard_inspect_key()","guess()","guess()","guess()","guid()","guid()","gunzip()","gunzip()","gzip()","gzip()","gzip_to()","h()","h()","ha1()","halted_callback()","handle()","handle_arguments()","handle_attr()","handle_class_module()","handle_constants()","handle_directive()","handle_error()","handle_exception()","handle_ifdefs_in()","handle_interrupt()","handle_method()","handle_options()","handle_pipe()","handle_singleton()","handle_tab_width()","handle_timeout()","handle_unverified_request()","handle_unverified_request()","handle_unverified_request()","handle_unverified_request()","handler()","handler()","handler=()","handlers()","handles?()","handles_encoding?()","has_and_belongs_to_many()","has_attribute?()","has_attribute?()","has_basic_credentials?()","has_call_seq?()","has_changes_to_save?()","has_conflicts?()","has_expires?()","has_header?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_many()","has_many_attached()","has_named_route?()","has_one()","has_one_attached()","has_rich_text()","has_secure_password()","has_secure_token()","has_value?()","has_value?()","has_value?()","has_value?()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash_algorithm()","hash_digest_class()","hash_digest_class=()","hash_old()","have_const()","have_framework()","have_func()","have_header()","have_library()","have_macro()","have_option?()","have_struct_member()","have_type()","have_var()","having()","head()","head()","head2()","header()","header()","header()","header()","header?()","header_convert()","header_converters()","header_row?()","header_row?()","header_row?()","headers()","headers()","headers()","headers()","headers()","headers()","headers=()","headers_for_direct_upload()","headers_for_direct_upload()","headers_for_direct_upload()","headers_for_direct_upload()","headers_for_direct_upload()","health_check()","help()","help()","help()","helpcontext()","helpcontext()","helper()","helper()","helper.rb.tt","helper_attr()","helper_method()","helpers()","helpers()","helpers()","helpers.js","helpers_paths()","helpfile()","helpfile()","helpstring()","helpstring()","here?()","here?()","hex()","hex()","hex?()","hexdigest()","hexdigest()","hexdigest()","hexdigest()","hexdigest!()","hexdump()","hexencode()","hidden()","hidden?()","hidden?()","hidden_field()","hidden_field()","hidden_field_tag()","hidden_namespaces()","hide!()","hide_command!()","hide_cursor()","hide_cursor()","hide_cursor()","hide_namespace()","hide_namespaces()","hierarchical?()","hierarchical?()","high_precision_current_timestamp()","high_precision_current_timestamp()","high_precision_current_timestamp()","high_precision_current_timestamp()","highlight()","history_file()","history_file=()","history_search_backward()","history_search_forward()","hkdf()","holds_all_syntax_errors?()","home()","home()","home()","home_workspace()","hook_for()","host()","host()","host()","host()","host=()","host=()","host_with_port()","hostname()","hostname=()","hostname=()","hostname_error()","hour()","hour()","hour()","hours()","hstore()","html()","html()","html?()","html?()","html_escape()","html_escape()","html_escape_once()","html_name()","html_name()","html_safe()","html_safe?()","html_safe?()","html_safe?()","hton()","http_auth_salt()","http_basic_authenticate_or_request_with()","http_basic_authenticate_with()","http_cache_forever()","http_default_port()","http_header()","http_url()","http_url()","httpdate()","httpdate()","httpdate()","httpdate()","httpdate()","httpdate()","httponly=()","https?()","https_default_port()","human()","human()","human_attribute_name()","human_name()","humanize()","humanize()","hypot()","i()","i18n_scope()","i18n_scope()","iconv()","id()","id()","id()","id()","id()","id2name()","id=()","id?()","id_before_type_cast()","id_in_database()","id_was()","ident()","identical?()","identical?()","identical?()","identified?()","identified_by()","identifier()","identify()","identify()","identify_without_saving()","identity()","idle_time()","idle_timeout()","ids()","if_modified_since()","if_modified_since()","if_none_match()","if_none_match_etags()","ifindex()","iflush()","ignore()","ignore_case?()","ignore_deadlock()","ignore_deadlock=()","ignore_newline?()","ignore_newline_not_beg?()","ignored?()","ignored_columns()","ignored_columns=()","imag()","imag()","image()","image()","image()","image?()","image_button()","image_path()","image_submit_tag()","image_tag()","image_url()","imaginary()","imaginary()","img()","immutable_strings_by_default=()","implemented_ole_types()","implicit?()","implicit_conversion","implicit_order_column()","implicit_order_column=()","import()","import()","import_function()","import_symbol()","import_value()","in()","in()","in()","in()","in?()","in_batches()","in_days()","in_groups()","in_groups_of()","in_hours()","in_milliseconds()","in_minutes()","in_months()","in_order_of()","in_order_of()","in_pasting?()","in_pasting?()","in_pasting?()","in_rendering_context()","in_seconds()","in_time_zone()","in_time_zone()","in_time_zone()","in_weeks()","in_years()","inc()","inc()","incinerate()","incinerate_later()","include()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","included()","included()","included()","included()","included()","included()","included_modules()","includes()","includes_column?()","including()","including()","incompatible_argument_styles()","incompatible_argument_styles()","incomplete_input?()","increment()","increment()","increment()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_load_index()","indent()","indent()","indent()","indent!()","indent=()","indent_index()","indentation()","indentation()","indentation=()","index()","index()","index()","index()","index()","index()","index()","index.html.erb.tt","index.js","index.js","index.js","index.js.tt","index_algorithms()","index_algorithms()","index_algorithms()","index_by()","index_exists?()","index_exists?()","index_helper()","index_name_exists?()","index_name_exists?()","index_name_length()","index_with()","index_with_name_deprecation.js","indexes()","indexes()","inet()","infinite?()","infinite?()","infinite?()","infinite?()","infinite?()","infinity?()","inflate()","inflate()","inflate()","inflate()","inflections()","inflections.rb.tt","info()","info()","info()","info!()","info?()","ingress.rake","inheritable_copy()","inheritance_column()","inheritance_column=()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","init()","init()","init_ruby_model()","init_with()","init_with()","initgroups()","initialize()","initialize_clone()","initialize_clone()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_dup()","initialize_dup()","initialize_dup()","initialize_dup()","initialize_load_schema_monitor()","initialize_methods_etc()","initialize_readline()","initialize_sid()","initialize_tracer()","initialized?()","initializer()","initializer()","initializer()","initializers()","initializers()","initializers_chain()","initializers_for()","inject()","inject_into_list()","inline()","inner_getc()","ino()","inplace_mode()","inplace_mode=()","input=()","input=()","input=()","input?()","input_key()","inputrc_path()","inquiry()","inquiry()","insert()","insert()","insert()","insert()","insert()","insert()","insert()","insert()","insert!()","insert_after()","insert_after()","insert_all()","insert_all!()","insert_before()","insert_before()","insert_debug_break()","insert_fixture()","insert_fixtures_set()","insert_output()","insert_text()","insert_text()","insert_text()","inside_template()","inside_template?()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect?()","inspect_colorable?()","inspect_mode=()","inspect_sockaddr()","inspect_value()","install()","install()","install()","install()","install()","install()","install()","install()","install()","install()","install.rake","install_acl()","install_alias_method()","install_default_bundler_gem()","install_executables()","install_executor_hooks()","install_extend_commands()","install_extend_commands()","install_file()","install_file_list()","install_from_gemdeps()","install_hooks()","install_id_conv()","install_into()","install_javascript_dependencies()","install_lib()","install_list()","install_path()","install_rdoc()","install_siginfo_handler()","install_support()","install_support()","install_update_defaults_str()","install_update_options()","installable?()","installable_platform?()","installable_platform?()","installable_platform?()","installation_satisfies_dependency?()","installed?()","installed_docs()","installed_specs()","instance()","instance()","instance()","instance()","instance()","instance()","instance()","instance()","instance()","instance()","instance()","instance_attributes()","instance_delegate()","instance_eval()","instance_eval()","instance_exec()","instance_exec()","instance_method()","instance_method_already_implemented?()","instance_method_already_implemented?()","instance_method_list()","instance_methods()","instance_methods()","instance_methods()","instance_of?()","instance_or_fallback()","instance_values()","instance_variable_defined?()","instance_variable_get()","instance_variable_names()","instance_variable_set()","instance_variables()","instantiate()","instantiate_all_loaded_fixtures()","instantiate_fixtures()","instruction_sequence()","instrument()","instrument()","instrument()","instrument()","instrument()","instrumenter()","int()","int()","int()","int()","int4range()","int8range()","integer?()","integer?()","intern()","intern()","internal.js","internal?()","internal_class_of()","internal_encoding()","internal_encoding()","internal_encoding()","internal_metadata_table_name()","internal_metadata_table_name=()","internal_methods()","internal_object_id()","internal_super_of()","interpret_loosely()","intersect?()","intersect?()","intersection()","intersection()","interval()","invalid?()","invalid?()","invalid?()","invalidate!()","invalidated?()","inverse_of()","invert()","invert()","invert()","invert!()","invert_where()","inverted_lambda()","inverted_lambda()","inverted_lambda()","inverted_lambda()","inverted_lambda()","inverted_lambda()","invkind()","invoke()","invoke()","invoke()","invoke()","invoke_callback()","invoke_callback()","invoke_callback()","invoke_callback()","invoke_kind()","invoke_with_build_args()","invoke_with_build_args()","io_gate()","io_gate()","io_pread()","io_pwrite()","io_read()","io_select()","io_wait()","io_write()","ioctl()","ioctl()","ioflush()","ip()","ip()","ip6_arpa()","ip6_int()","ip?()","ip_address()","ip_address_list()","ip_pktinfo()","ip_pktinfo()","ip_port()","ip_unpack()","ipaddr()","ipaddr=()","ips_from()","ipv4?()","ipv4?()","ipv4_compat()","ipv4_compat?()","ipv4_loopback?()","ipv4_mapped()","ipv4_mapped?()","ipv4_multicast?()","ipv4_multicast_loop()","ipv4_multicast_loop()","ipv4_multicast_ttl()","ipv4_multicast_ttl()","ipv4_private?()","ipv6?()","ipv6?()","ipv6_linklocal?()","ipv6_loopback?()","ipv6_mc_global?()","ipv6_mc_linklocal?()","ipv6_mc_nodelocal?()","ipv6_mc_orglocal?()","ipv6_mc_sitelocal?()","ipv6_multicast?()","ipv6_pktinfo()","ipv6_pktinfo()","ipv6_pktinfo_addr()","ipv6_pktinfo_ifindex()","ipv6_sitelocal?()","ipv6_to_ipv4()","ipv6_unique_local?()","ipv6_unspecified?()","ipv6_v4compat?()","ipv6_v4mapped?()","ipv6only!()","irb()","irb()","irb()","irb_abort()","irb_context()","irb_exit()","irb_exit()","irb_level()","irb_load()","irb_load()","irb_require()","irregular()","isequal()","is_a?()","is_a?()","is_alias_for()","is_assignment?()","is_assignment?()","is_assignment?()","is_end?()","is_end?()","is_end?()","is_kw?()","is_kw?()","is_missing?()","is_utc?()","is_utf8?()","is_version_1_2?()","isatty()","isatty()","isdst()","isdst()","iseuc()","iseuc()","isjis()","isjis()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","iso8601()","isolate_namespace()","isolate_namespace()","issetugid()","issjis()","issjis()","issuer()","issuer()","issuer()","issuer()","issuer=()","issuer=()","issuer_certificate=()","issuer_key_hash()","issuer_name_hash()","issuer_of()","isutf8()","isutf8()","italy()","iterate_guarding_exceptions()","iteration!()","iterator?()","itself()","iv=()","iv_len()","iv_len=()","iv_length()","iv_length()","j()","jacobian()","java_platform?()","javascript_include_tag()","javascript_path()","javascript_tag()","javascript_url()","javascripts.js.tt","jd()","jd()","jd()","jdbc.yml.tt","jdbcmysql.yml.tt","jdbcpostgresql.yml.tt","jdbcsqlite3.yml.tt","jisx0301()","jisx0301()","jisx0301()","jisx0301()","job.rb.tt","job_or_instantiate()","join()","join()","join()","join()","join()","join()","join()","join()","join()","join()","join_consecutive!()","join_groups()","join_heredoc!()","join_trailing_slash!()","joined_includes_values()","joins()","js_template()","json_creatable?()","json_creatable?()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_create()","json_escape()","jsonb()","julian()","julian?()","julian_leap?()","just_cursor_moving()","just_move_cursor()","karma.conf.js","kconv()","kconv()","keep()","keep_back()","keep_back()","keep_drop()","keep_drop()","keep_end()","keep_end()","keep_if()","keep_if()","keep_if()","keep_if()","keep_if()","keep_only_files_and_directories()","keep_script_lines()","keep_script_lines=()","keep_start()","keep_start()","kernel_sleep()","key()","key()","key()","key()","key()","key()","key()","key()","key()","key()","key()","key()","key=()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key_bindings()","key_generator()","key_len()","key_len()","key_len=()","key_length()","key_length()","key_matcher()","key_name()","key_notation_to_code()","key_number()","key_provider()","keymap()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys()","keys_with_inspector()","keyword_init?()","keywords","kill()","kill()","kill()","kill()","kill()","kill()","kill_line()","kill_whole_line()","kill_word()","kilobyte()","kilobytes()","kind()","kind()","kind_of?()","kind_of?()","klass()","klass()","l()","l()","label()","label()","label()","label()","label_tag()","lambda()","lambda?()","last()","last()","last()","last()","last()","last()","last()","last()","last()","last()","last!()","last?()","last_column()","last_error()","last_error()","last_error=()","last_lineno()","last_match()","last_modified()","last_modified()","last_modified()","last_modified=()","last_modified?()","last_month()","last_quarter()","last_status()","last_update()","last_update=()","last_update_check()","last_update_check=()","last_week()","last_weekday()","last_year()","latest_compact_info()","latest_gc_info()","latest_rubygems_version()","latest_spec_for()","latest_spec_for()","latest_specs()","latest_version?()","latest_version_for()","layout()","layout.html.erb.tt","layout.text.erb.tt","lazy()","lazy()","lazy_schema_cache_path()","lchmod()","lchmod()","lchown()","lchown()","lcm()","ld()","ldexp()","leap?()","leap?()","lease()","left_joins()","left_outer_joins()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","level()","level()","level()","level()","level=()","level=()","level_notifier=()","levenshtein_distance()","lex()","lex()","lex()","lex_compat()","lex_file()","lex_ripper()","lgamma()","lib()","lib()","lib()","lib_dirs_glob()","lib_files()","liberal_parsing?()","liberal_parsing?()","library_name()","libyaml_version()","license()","license()","license=()","licenses()","licenses=()","limit()","limit()","limit()","limit()","line()","line()","line()","line()","line()","line()","line_editor()","line_editor()","line_start()","line_statistics","line_stub()","line_width()","line_width=()","linear_time?()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno()","lineno=()","lineno=()","lineno=()","lineno=()","lines()","lines()","lines()","lines()","linger()","linger()","link()","link()","link_entry()","link_local?()","link_to()","link_to()","link_to_if()","link_to_unless()","link_to_unless_current()","links()","list()","list()","list()","list()","list_files_in_directory()","list_item_from()","listen()","listen()","listen()","listen()","listen()","listen()","listen()","listener_thread()","listeners_for()","listening?()","literals","ljust()","ln()","ln()","ln_s()","ln_sf()","ln_sr()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load()","load_all()","load_api_keys()","load_async()","load_cache()","load_certificate()","load_class()","load_class_data()","load_command()","load_commands_to_main()","load_config_initializer()","load_console()","load_default_cert()","load_default_key()","load_defaults()","load_defaults()","load_env_plugins()","load_file()","load_file()","load_file()","load_file()","load_file()","load_file!()","load_from()","load_from_binary()","load_from_binary_extra_data()","load_gemdeps()","load_gemspec()","load_gemspec_uncached()","load_generators()","load_generators()","load_initial_configs()","load_interlock()","load_method()","load_options()","load_page()","load_path_insert_index()","load_paths()","load_plugins()","load_private_key()","load_public_key()","load_random_file()","load_rdoc()","load_rdoc()","load_records()","load_records_for_keys()","load_records_in_batch()","load_runner()","load_safe_marshal()","load_schema!()","load_schema_current()","load_schema_if_pending!()","load_seed()","load_seed()","load_server()","load_session()","load_session()","load_specs()","load_stream()","load_target()","load_tasks()","load_tasks()","load_variable_map()","load_with_rubygems_config_hash()","load_yaml()","load_yaml()","loaded()","loaded?()","loading()","local()","local()","local()","local?()","local?()","local_address()","local_assigns()","local_platform()","local_to_utc()","local_variable_defined?()","local_variable_get()","local_variable_get()","local_variable_set()","local_variable_set()","local_variables()","local_variables()","local_variables()","locale()","locale=()","locale_charmap()","localize()","localize()","localtime()","localtime()","localtime()","location()","location=()","location_of_caller()","lock()","lock()","lock()","lock!()","lock_thread=()","locked()","locked?()","locked?()","locked_gems()","locking_column=()","locking_enabled?()","log()","log()","log()","log()","log()","log()","log()","log()","log.rake","log10()","log2()","log_at()","log_subscribers()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger.js","logger_outputs_to?()","long_name()","longblob()","longtext()","look()","look()","look_for_directives_in()","look_for_directives_in()","lookahead_balance_one_line()","lookup()","lookup()","lookup_ancestors()","lookup_by_extension()","lookup_context()","lookup_paths()","lookup_paths()","lookup_ring()","lookup_ring_any()","lookup_store()","loop()","loopback?()","lower()","lseg()","lshift!()","lstat()","lstat()","lstat()","lstrip()","lstrip!()","ltree()","ludecomp()","lusolve()","lutime()","lutime()","macaddr()","magnitude()","magnitude()","magnitude()","magnitude()","magnitude()","mail()","mail()","mail_to()","mailbox.rb.tt","mailbox_class()","mailbox_for()","mailbox_for()","mailer()","mailer.html.erb.tt","mailer.rb.tt","mailer.text.erb.tt","mailer_name()","mailer_name()","main()","main()","main()","main()","main=()","main_irb()","main_thread()","main_type()","maintainers","major_or_security?()","major_version()","major_version()","make()","make_affine!()","make_compiler()","make_destination_dirs()","make_expires()","make_lambda()","make_lambda()","make_lambda()","make_lambda()","make_lambda()","make_lambda()","make_link()","make_message()","make_methods()","make_parser()","make_pool()","make_regexp()","make_regexp()","make_response!()","make_response!()","make_response!()","make_shareable()","make_socket()","make_switch()","make_symlink()","make_tuple()","make_variable_map()","make_wstr()","makedirs()","making_changes_to_ruby","making_changes_to_stdlibs","malloc()","malloc()","malloc()","malloc_allocated_size()","malloc_allocations()","manage_owners()","manifest.js.tt","many?()","many?()","many?()","map()","map()","map()","map()","map()","map!()","map!()","map=()","mapped?()","mapping?()","mapping?()","mark()","mark_for_destruction()","mark_for_same_origin_verification!()","mark_invisible()","mark_invisible()","mark_newlines!()","mark_version()","marked_for_destruction?()","marked_for_same_origin_verification?()","markup()","marshal","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_dump()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_load()","marshal_version()","mask()","mask()","mask!()","mask=()","mask_token()","master_key()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match_gem?()","match_length()","match_platform!()","match_platform?()","match_spec?()","match_status()","matched()","matched?()","matched_size()","matchee()","matches?()","matches?()","matches_for_glob()","matches_spec?()","matches_spec?()","matching_specs()","materialize!()","materialize!()","mattr_accessor()","mattr_reader()","mattr_writer()","max()","max()","max()","max()","max=()","max_by()","max_field_size()","max_field_size()","max_identifier_length()","max_nesting()","max_nesting=()","max_queue()","max_retries=()","max_threads()","max_version=()","maxgroups()","maxgroups=()","maximum()","maximum()","mb_chars()","mday()","mday()","measure()","measure_total_time()","measure_total_time=()","media_type()","media_type()","mediumblob()","mediumtext()","megabyte()","megabytes()","member()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","member?()","members()","members()","members()","members()","memberwise()","memory_view","memsize_of()","memsize_of_all()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge()","merge!()","merge!()","merge!()","merge!()","merge!()","merge!()","merge!()","merge!()","merge_default_headers()","merge_dump_options()","merge_options()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message_for()","message_for()","message_for()","message_for()","message_for()","message_for()","message_for()","message_imprint()","message_imprint()","message_imprint=()","message_loop()","message_verifier()","messages()","messages_for()","metadata()","metadata()","metadata()","metadata()","method()","method()","method()","method.coffee","method_added()","method_added()","method_added()","method_defined?()","method_file()","method_id()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_names()","method_symbol()","methods","methods","methods()","methods()","methods()","methods_by_type()","methods_matching()","mfa_unauthorized?()","midday()","midday()","midday()","middle_of_day()","middle_of_day()","middle_of_day()","middleware()","middleware()","middleware()","middleware.rake","midnight()","midnight()","midnight()","migrate()","migrate()","migrate()","migrate()","migrate_status()","migration.rb.tt","migration_template()","migrations_paths()","migrations_paths()","min()","min()","min()","min()","min()","min_by()","min_threads()","min_version=()","minimum()","minimum()","minmax()","minmax()","minmax()","minmax_by()","minor_version()","minor_version()","minus_with_coercion()","minus_without_coercion()","minus_without_duration()","minute()","minute()","minutes()","mirror()","misc.rake","miscellaneous","missing()","missing()","missing()","missing_extensions?()","missing_name()","missing_name?()","mjd()","mkcol()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir_p()","mkdir_p()","mkdir_p()","mkfifo()","mkpath()","mkpath()","mktime()","mktmpdir()","mod_add()","mod_exp()","mod_inverse()","mod_mul()","mod_sqr()","mod_sqrt()","mod_sub()","mode()","mode()","model.rb.tt","model_name()","model_resource_name()","module()","module.rb.tt","module?()","module?()","module_eval()","module_exec()","module_for_detailed_message()","module_names()","module_namespacing()","module_parent()","module_parent_name()","module_parents()","modules()","modules_and_classes","modules_for_helpers()","modules_for_helpers()","modules_hash()","modules_hash()","modulo()","modulo()","modulo()","modulo()","mon()","mon()","mon_check_owner()","mon_enter()","mon_enter()","mon_enter()","mon_exit()","mon_exit()","mon_locked?()","mon_locked?()","mon_owned?()","mon_owned?()","mon_synchronize()","mon_synchronize()","mon_try_enter()","mon_try_enter()","monday()","monday?()","monday?()","money()","monotonic_subscribe()","month()","month()","month()","month_field()","month_field()","month_field_tag()","months()","months_ago()","months_since()","most_specific_locked_platform?()","mount()","mountable_engine?()","mountpoint?()","move()","move()","move()","move()","move()","move_after()","move_after()","move_before()","move_before()","move_cursor_column()","move_cursor_column()","move_cursor_column()","move_cursor_down()","move_cursor_down()","move_cursor_down()","move_cursor_up()","move_cursor_up()","move_cursor_up()","ms()","msys_tty?()","mtime()","mtime()","mtime()","mtime()","mtime()","mtime=()","mu_lock()","mu_locked?()","mu_synchronize()","mu_try_lock()","mu_unlock()","mul()","mult()","multi_db.rb.tt","multiline?()","multiline_off()","multiline_on()","multipart=()","multipart?()","multipart_form()","multiple_of?()","must_c_version()","mute()","mutool_exists?()","mutool_path()","mv()","mysql.yml.tt","n_jobs()","n_significant_digits()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name()","name=()","name=()","name=()","name_for()","name_for_path()","name_for_path()","name_list()","name_path()","name_prefix()","name_prefix()","name_tuple()","named_captures()","named_captures()","named_captures()","names()","names()","names()","names_to_exclude()","namespace()","namespace()","namespace()","namespace()","namespace()","namespaced?()","namespaced_class_path()","namespaced_path()","nan?()","nan?()","native()","native_database_types()","native_database_types()","native_thread_id()","need_gvl?()","needs()","negative?()","negative?()","negative?()","negative?()","negotiate_format()","negotiate_mime()","nest()","nested()","nested_attributes?()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","nesting()","netmask()","netmask()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new.html.erb.tt","new_client()","new_client()","new_comment()","new_comment()","new_cond()","new_cond()","new_framework_defaults_7_0.rb.tt","new_helper()","new_ntoh()","new_offset()","new_raw_private_key()","new_raw_public_key()","new_record?()","new_seed()","new_session()","new_start()","new_with()","new_with()","new_with_uri()","new_with_uri()","newlines()","newobj()","next()","next()","next()","next()","next()","next!()","next5()","next_day()","next_day()","next_day?()","next_day?()","next_down()","next_float()","next_history()","next_indent_line()","next_migration_number()","next_migration_number()","next_month()","next_month()","next_occurring()","next_quarter()","next_rotate_time()","next_sequence_value()","next_token()","next_up()","next_update()","next_update()","next_update=()","next_values()","next_week()","next_weekday()","next_year()","next_year()","nil?()","nil?()","nil?()","nkf()","nlink()","nlsolve()","no_routes()","no_routes()","no_store()","no_touching()","no_touching?()","nobits?()","nobits?()","node_id()","node_id_for_backtrace_location()","node_to_html()","node_to_plain_text()","noecho()","non_aliases()","non_nil_attributes()","non_xhr_javascript_response?()","nonblock()","nonblock=()","nonblock?()","nonce()","nonce()","nonce()","nonce=()","none()","none?()","none?()","none?()","none?()","nonzero?()","nonzero?()","noon()","noon()","noon()","normalize()","normalize()","normalize()","normalize()","normalize()","normalize!()","normalize_action_path()","normalize_comment()","normalize_name()","normalize_path()","normalize_path()","normalize_yaml_input()","normalized_file_list()","normalized_linux_version()","not()","not!()","not_after()","not_after=()","not_before()","not_before=()","not_empty?()","not_found()","not_modified?()","note()","note_for()","notes()","notice()","notice=()","notify()","notify()","notify()","notify?()","notify?()","notify?()","notify_observers()","notify_observers()","now()","now()","now()","now()","now_is_loaded?()","npn_protocol()","nprocessors()","nread()","nsec()","nsec()","ntop()","null()","null()","null?()","null?()","nullify!()","num_bits()","num_bytes()","num_waiting()","num_waiting()","num_waiting()","number_field()","number_field()","number_field_tag()","number_to_currency()","number_to_currency()","number_to_delimited()","number_to_human()","number_to_human()","number_to_human_size()","number_to_human_size()","number_to_percentage()","number_to_percentage()","number_to_phone()","number_to_phone()","number_to_rounded()","number_with_delimiter()","number_with_precision()","numerator()","numerator()","numerator()","numerator()","numerator()","numrange()","object()","object_address_group()","object_class()","object_group()","object_id()","object_nl()","object_nl=()","ocsp_uris()","oct()","oct_or_256based()","odd?()","odd?()","of()","of()","of_kind?()","off_event()","offset()","offset()","offset()","offset_vtbl()","oflush()","oid()","oid()","oid()","oid()","oid()","oid=()","oid=()","ok?()","ok?()","ok_to_remove?()","ole_activex_initialize()","ole_classes()","ole_classes()","ole_free()","ole_free()","ole_func_methods()","ole_get_methods()","ole_instance_variable_get()","ole_instance_variable_set()","ole_method()","ole_method_help()","ole_methods()","ole_methods()","ole_obj_help()","ole_put_methods()","ole_query_interface()","ole_reference_count()","ole_respond_to?()","ole_show_help()","ole_type()","ole_type()","ole_type()","ole_type()","ole_type_detail()","ole_type_detail()","ole_typelib()","ole_typelib()","ole_types()","on()","on_alias_error()","on_assign_error()","on_cdata_block()","on_characters()","on_class_name_error()","on_curve?()","on_encrypted_attribute_declared()","on_end_document()","on_end_element()","on_event()","on_event_with_outargs()","on_head()","on_load()","on_param_error()","on_parse_error()","on_start_document()","on_start_element()","on_subscribe()","on_tail()","on_unsubscribe()","on_weekday?()","on_weekend?()","one?()","one?()","one?()","one?()","ongoing_visibility=()","only()","opaque()","opaque=()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open()","open!()","open?()","open_cert()","open_editor()","open_file()","open_gem()","open_private_key()","open_server()","open_server()","open_tokens()","opendir()","opened?()","operating_system_defaults()","operators","opt_parser()","optimize_indentation()","optimize_routes_generation?()","optimizer_hints()","option_groups_from_collection_for_select()","option_list()","option_params","optional?()","optional_port()","options()","options()","options()","options()","options()","options()","options()","options()","options=()","options=()","options_for_select()","options_from_collection_for_select()","options_include_default?()","options_of()","optname()","or()","or!()","oracle.yml.tt","ord()","ord()","order()","order()","order()","order!()","order!()","ordering()","ordering=()","ordinal()","ordinal()","ordinal()","ordinal()","ordinalize()","ordinalize()","orig_initialize()","orig_name()","orig_name=()","origin()","original_concat()","original_env()","original_exec()","original_fullpath()","original_message()","original_name()","original_name()","original_system()","original_url()","os_code()","otp()","out()","outdated()","outdated_and_latest_version()","output()","output=()","output=()","output?()","output_flag_file()","output_modifier_proc=()","output_name()","overlap?()","overlaps?()","override_accessors_to_preserve_original()","owned?()","owned?()","owned?()","owned?()","owned?()","owner()","owner()","p()","pack()","pack_sockaddr_in()","pack_sockaddr_un()","package.json","package.json","package.json","package.json","package.json","packdw()","packed_data","packhandle()","packqw()","padding=()","page()","page()","page_content()","page_file()","page_name()","pair()","pair()","paragraph()","param_encoding()","param_key()","param_list()","param_seq()","parameter_filter()","parameter_filter_for()","parameter_parsers=()","parameterize()","parameterize()","parameters()","parameters()","parameters()","parameters()","parameters()","params()","params()","params()","params()","params()","params()","params()","params()","params=()","params=()","params=()","params_array_from()","params_ok?()","params_readable?()","parent()","parent()","parent()","parent_file_name()","parent_name()","parent_name()","parent_of?()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parse!()","parse_alias()","parse_attr()","parse_attr_accessor()","parse_by_line()","parse_call_parameters()","parse_class()","parse_comment()","parse_comment_tomdoc()","parse_comments()","parse_config()","parse_constant()","parse_constant_visibility()","parse_ctype()","parse_data_with_trailing_star()","parse_date()","parse_dot_doc_file()","parse_entries()","parse_entries()","parse_error()","parse_failure?()","parse_file()","parse_file()","parse_file()","parse_file()","parse_file_comments()","parse_file_failure?()","parse_file_success?()","parse_files()","parse_files_matching()","parse_info()","parse_int()","parse_keyseq()","parse_lex()","parse_lex_file()","parse_line()","parse_meta_attr()","parse_meta_method()","parse_method()","parse_method_dummy()","parse_method_or_yield_parameters()","parse_method_parameters()","parse_method_params_and_body()","parse_module()","parse_openssl()","parse_printf_format()","parse_require()","parse_rescue()","parse_rfc2253()","parse_signature()","parse_statements()","parse_stream()","parse_struct_signature()","parse_success?()","parse_symbol_arg()","parse_symbol_in_arg()","parse_time()","parse_top_level_statements()","parse_trailing_star()","parse_visibility()","parse_yield()","parser()","parser()","parser()","parser=()","partial.html.erb.tt","partial_writes()","partial_writes=()","partial_writes?()","partition()","partition()","partition_segments()","parts()","pass()","passwd()","password()","password=()","password_field()","password_field()","password_field()","password_field_tag()","past?()","past?()","patch()","patch()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path()","path=()","path=()","path_for()","path_ok?()","path_parameters()","path_separator()","path_to_asset()","path_to_audio()","path_to_font()","path_to_image()","path_to_javascript()","path_to_stylesheet()","path_to_video()","pathconf()","paths()","paths()","paths()","paths()","paths=()","pattern()","pattern()","pattern()","pattern_matching","pbkdf2_hmac()","pbkdf2_hmac()","pbkdf2_hmac_sha1()","pdftoppm_exists?()","pdftoppm_path()","peek()","peek()","peek()","peek()","peek()","peek()","peek_read()","peek_result()","peek_tk()","peek_values()","peep()","peer_cert()","peer_cert()","peer_cert_chain()","peer_finished_message()","peeraddr()","peeraddr()","peeraddr()","peg_parse()","pending()","pending_interrupt?()","pending_interrupt?()","per_form_csrf_token()","percent_doc()","perform()","perform()","perform()","perform()","perform()","perform()","perform()","perform_action()","perform_later()","perform_now()","perform_now()","performed?()","performed?()","period()","period_for_local()","period_for_utc()","periodically()","permanent()","permanent_failure?()","permissions_policy()","permissions_policy()","permissions_policy()","permissions_policy.rb.tt","permissions_policy=()","permit()","permit!()","permit_concurrent_loads()","permitted?()","permutation()","permute()","permute!()","permute!()","persisted?()","persisted?()","petabyte()","petabytes()","pfamily()","phase()","phase()","phase()","phone_field()","phone_field()","phone_field_tag()","phone_to()","pick()","pick()","pick_best!()","pid()","pid()","pid()","pid()","pipe()","pipe?()","pipe?()","pipe?()","pipe?()","pipeline()","pipeline_r()","pipeline_rw()","pipeline_start()","pipeline_w()","pkcs5_keyivgen()","pkg_config()","platform()","platform()","platform()","platform()","platform()","platform=()","platform_defaults()","platforms()","platforms()","platforms=()","plausible_dimensions()","pluck()","pluck()","pluck()","plugin_suffix_pattern()","plugin_suffix_regexp()","plugin_types()","plugindir()","plugins()","plural()","plural()","plural_file_name()","plural_name()","plural_route_name()","plural_table_name()","pluralize()","pluralize()","pluralize()","pluralize_table_names()","pluralize_table_names=()","pluralize_table_names?()","point()","point_conversion_form()","point_conversion_form=()","pointer()","pointer=()","polar()","polar()","polar()","policy_id()","policy_id()","policy_id=()","poll()","poll_for_otp()","poll_thread()","polygon()","polymorphic_class_for()","polymorphic_name()","polymorphic_path()","polymorphic_url()","pool()","pop()","pop()","pop()","pop()","pop()","pop()","pop()","pop()","pop_inspect_key()","pop_token()","pop_workspace()","popen()","popen()","popen2()","popen2e()","popen3()","popup_menu()","port()","port=()","port_string()","pos()","pos()","pos()","pos()","pos()","pos()","pos()","pos()","pos=()","pos=()","pos=()","pos=()","pos=()","pos=()","positive?()","positive?()","positive?()","possible_paths()","post()","post()","post()","post()","post2()","post_build()","post_connection_check()","post_form()","post_install()","post_match()","post_match()","post_reset()","post_uninstall()","postgresql.yml.tt","pow()","power()","pp()","pp()","pp()","pp()","pp()","pp()","pp()","pp_hash()","pp_object()","ppid()","ppx()","ppx()","pre_input_hook=()","pre_install()","pre_install_checks()","pre_match()","pre_match()","pre_reset()","pre_uninstall()","pread()","pread()","pread()","precedence","precision()","precision_scale()","precs()","pred()","preferred_dialog_height()","preferred_gemfile_name()","prefetch()","prefetch()","prefetch()","prefetch()","prefetch()","prefetch()","prefetch_primary_key?()","prefetch_primary_key?()","prefix()","prefix()","prefix()","prefix()","prefix()","prefix=()","preload()","preload_link_tag()","prep()","prep()","prep()","prepare()","prepare!()","prepare_all()","prepared_statements()","prepared_statements?()","preparing_gem_layout_for()","prepend()","prepend()","prepend()","prepend()","prepend()","prepend_after_action()","prepend_around_action()","prepend_before_action()","prepend_destdir_if_present()","prepend_view_path()","prepend_view_path()","prepended()","prepended()","prerelease=()","prerelease=()","prerelease?()","prerelease?()","prerelease?()","prerelease?()","presence()","presence_in()","present?()","preserve_original_encrypted()","pressed?()","pretty()","pretty_generate()","pretty_inspect()","pretty_name()","pretty_name()","pretty_new_name()","pretty_old_name()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print()","pretty_print_children()","prev_day()","prev_day()","prev_day?()","prev_day?()","prev_float()","prev_month()","prev_month()","prev_occurring()","prev_quarter()","prev_week()","prev_weekday()","prev_year()","prev_year()","preventing_writes?()","preview()","preview()","preview()","preview()","preview()","preview_name()","previewable?()","previewable_attachable?()","previewable_attachable?()","previous()","previous=()","previous_changes()","previous_history()","previous_period_end()","previously_new_record?()","previously_persisted?()","primary()","primary_abstract_class()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key=()","primary_key_prefix_type()","primary_key_prefix_type=()","primary_keys()","prime?()","prime_fasttest?()","primitive_convert()","primitive_errinfo()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print()","print_generators()","print_list()","print_usage()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printf()","printing_commands()","printn()","printn()","prioritize!()","prioritizes_bundler?()","priority()","priority()","priority=()","prism_locals()","private?()","private?()","private?()","private?()","private?()","private?()","private_call?()","private_class_method()","private_constant()","private_decrypt()","private_encrypt()","private_instance_methods()","private_key()","private_key=()","private_key?()","private_method_defined?()","private_methods()","private_to_der()","private_to_pem()","proc()","proc_for_binds()","process()","process()","process()","process()","process()","process()","process()","process_action()","process_args()","process_key_event()","process_wait()","processed()","processed()","processed()","processed?()","processed?()","processed?()","produce()","product()","product()","production.rb.tt","profile_requires()","progid()","progids()","program_name()","progress_bar()","progress_reporter()","prohibit_shard_swapping()","prompt_mode=()","prompt_n()","prompt_n=()","prompt_proc=()","prompting?()","proper_subset?()","proper_superset?()","proper_table_name()","property()","propfind()","proppatch()","protect_against_forgery?()","protect_from_forgery()","protected_environments()","protected_environments=()","protected_instance_methods()","protected_method_defined?()","protected_methods()","protected_methods()","protecting_encrypted_data()","protocol()","protocol()","provide()","provide()","proxy?()","proxy_address()","proxy_auth_get()","proxy_basic_auth()","proxy_class()","proxy_class=()","proxy_class?()","proxy_from_env?()","proxy_pass()","proxy_port()","proxy_uri()","proxy_user()","proxyaddr()","proxyport()","prune()","prune()","pruning?()","ptr()","public?()","public?()","public?()","public?()","public?()","public_class_method()","public_compute_asset_path()","public_constant()","public_decrypt()","public_directory()","public_encrypt()","public_instance_method()","public_instance_methods()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key=()","public_key=()","public_key=()","public_key=()","public_key?()","public_method()","public_method_defined?()","public_methods()","public_methods()","public_namespaces()","public_path()","public_send()","public_to_der()","public_to_pem()","publish()","publish()","publish_event()","publish_event()","publish_event()","pubsub()","pubsub_adapter()","puma.rb.tt","purge()","purge()","purge()","purge()","purge()","purge()","purge_all()","purge_current()","purge_later()","purge_later()","purge_later()","purge_later()","purge_later()","purpose=()","purpose=()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push()","push_inspect_key()","push_workspace()","put()","put()","putback()","putc()","putc()","putc()","putc()","putc()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","puts()","pwd()","pwd()","pwd()","pwrite()","pwrite()","query=()","query_attribute()","query_cache_enabled()","query_parameters()","queue_adapter()","queue_adapter=()","queue_adapter_name()","queue_as()","queue_name()","queue_with_priority()","quiet()","quiet=()","quit()","quo()","quo()","quo()","quo()","quo()","quote()","quote()","quote()","quote_bound_value()","quote_char()","quote_character()","quote_column_name()","quote_schema_name()","quote_string()","quote_string()","quote_table_name()","quote_table_name_for_assignment()","quote_table_name_for_assignment()","quoted_date()","quoted_false()","quoted_insert()","quoted_primary_key()","quoted_table_name()","quoted_true()","ractor","radio_button()","radio_button()","radio_button()","radio_button_tag()","radio_group()","rails-ujs.coffee","rails.tt","rails.tt","rails_command()","rails_root()","rails_version()","rails_version()","railtie.rb.tt","railtie_name()","railties()","raise()","raise()","raise()","raise()","raise()","raise_for_multi_db()","raise_validation_error()","raised_exception()","rake()","rake.tt","rake_tasks()","rake_tasks()","rakefile()","rakefile()","rakefile()","rand()","rand()","rand()","rand()","rand()","rand_range()","random_add()","random_bytes()","random_bytes()","random_iv()","random_key()","random_number()","range()","range=()","range_field()","range_field()","range_field_tag()","range_length()","rassoc()","rassoc()","rassoc()","rationalize()","rationalize()","rationalize()","rationalize()","rationalize()","raw()","raw()","raw!()","raw_connection()","raw_cookie()","raw_cookie2()","raw_data()","raw_host_with_port()","raw_params()","raw_post()","raw_private_key()","raw_public_key()","raw_request_method()","raw_spec()","rb_scan_args()","rc?()","rdev()","rdev_major()","rdev_minor()","rdoc_installed?()","rdoc_installed?()","rdoc_options()","rdoc_options=()","rdoc_task_description()","re_exchange()","re_exchange()","re_exchangeable?()","re_exchangeable?()","re_sign()","re_sign_cert()","re_sign_cert()","reachable_objects_from()","reachable_objects_from_root()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read()","read!()","read_all()","read_all()","read_attribute()","read_attribute_before_type_cast()","read_bin()","read_binary()","read_body()","read_checksums()","read_directive()","read_documentation_modifiers()","read_entry()","read_file()","read_file()","read_fragment()","read_i()","read_input()","read_lines()","read_multi()","read_multi()","read_multi_entries()","read_nonblock()","read_nonblock()","read_nonblock()","read_nonblock()","read_s()","read_s()","read_s_expand()","read_smime()","read_store_attribute()","read_timeout=()","readable?()","readable?()","readable?()","readable?()","readable_after_eof?()","readable_after_eof?()","readable_inspect()","readable_inspect()","readable_real?()","readable_real?()","readable_real?()","readable_real?()","readagain_bytes()","readbyte()","readbyte()","readbyte()","readbyte()","readchar()","readchar()","readchar()","readchar()","readchar()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readline()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlines()","readlink()","readlink()","readme()","readme()","readme()","readmultiline()","readmultiline()","readonly()","readonly!()","readonly?()","readonly?()","readonly_attributes()","readpartial()","readpartial()","readpartial()","readpartial()","readpartial()","readpartial()","ready?()","real()","real()","real?()","real?()","real_csrf_token()","realdirpath()","realdirpath()","realloc()","really_verbose()","realpath()","realpath()","realtime()","reap()","reaping_frequency()","reason()","reason()","receive()","receive()","receive_if()","receiver()","receiver()","receiver()","receiver()","receiver()","recipients()","recipients()","recipients_addresses()","reconfigure()","reconnect!()","reconnect!()","reconnect!()","reconnect!()","record()","record()","record()","record()","record_depth()","record_dir()","record_key_for_dom_id()","record_location()","record_location()","record_requirements()","records()","records_for()","recover()","recreate_database()","rect()","rect()","rect()","rectangular()","rectangular()","rectangular()","recv()","recv()","recv()","recv_io()","recv_nonblock()","recvfrom()","recvfrom()","recvfrom()","recvfrom_nonblock()","recvfrom_nonblock()","recvmsg()","recvmsg_nonblock()","redact()","redact_credentials_from()","redacted()","redefine_method()","redefine_singleton_method()","redirect()","redirect_back()","redirect_back_or_to()","redirect_resource_name()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","redis()","reduce()","ref()","ref()","ref()","ref()","ref()","reference()","references()","references()","references()","references()","refinements","refinements()","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_attachments()","reflect_on_all_autosave_associations()","reflect_on_association()","reflect_on_attachment()","reflections()","refresh()","regenerate_binstubs()","regenerate_plugins()","regenerate_plugins()","regenerate_plugins_for()","regexp()","regexp()","regist()","regist_server()","register()","register()","register()","register()","register()","register()","register_alias()","register_callback()","register_command()","register_default_spec()","register_directories()","register_engulf_block()","register_extensions()","register_hook()","register_indent_block()","register_interceptor()","register_interceptor()","register_interceptors()","register_observer()","register_observers()","register_preview_interceptor()","register_preview_interceptors()","register_scheme()","register_tags()","register_task()","registry()","registry=()","regular_class_path()","regular_update()","regular_update()","regular_writer()","regular_writer()","rehash()","rehash()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject()","reject!()","reject!()","reject!()","reject!()","reject!()","reject_unauthorized_connection()","relative?()","relative?()","relative_path_from()","relay()","release()","release()","release_connection()","release_savepoint()","release_unload_lock!()","reload()","reload()","reload()","reload()","reload()","reload()","reload!()","reload!()","reload!()","reload_routes!()","remainder()","remainder()","remainder()","remote.coffee","remote=()","remote?()","remote?()","remote_address()","remote_connections()","remote_ip()","remote_ip=()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove!()","remove_all()","remove_belongs_to()","remove_belongs_to()","remove_by_name()","remove_channel()","remove_channel()","remove_channel()","remove_check_constraint()","remove_check_constraint()","remove_class_variable()","remove_coding_comment()","remove_column()","remove_column()","remove_columns()","remove_commented_out_lines()","remove_connection()","remove_connection_pool()","remove_dir()","remove_entry()","remove_entry_secure()","remove_event_subscriber()","remove_executables()","remove_file()","remove_file_list()","remove_filters!()","remove_foreign_key()","remove_foreign_key()","remove_from_documentation?()","remove_hook_for()","remove_index()","remove_index()","remove_installed!()","remove_instance_variable()","remove_invisible()","remove_magic_comment()","remove_method()","remove_modeline()","remove_nodoc()","remove_nodoc_children()","remove_old_bin_files()","remove_old_lib_files()","remove_old_man_files()","remove_option()","remove_owners()","remove_plugins_for()","remove_possible_method()","remove_possible_singleton_method()","remove_private()","remove_private_comment()","remove_reference()","remove_references()","remove_renderer()","remove_server()","remove_siginfo_handler()","remove_silencers!()","remove_spec()","remove_specs_unsatisfied_by()","remove_stress_to_class()","remove_subscriber()","remove_timestamps()","remove_timestamps()","remove_token_listener()","remove_unparseable()","removed_method_calls()","rename()","rename()","rename()","rename_column()","rename_index()","rename_index()","rename_index()","rename_index()","rename_key()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render_action_text_attachments()","render_action_text_content()","render_attachment_galleries()","render_attachments()","render_body()","render_collection()","render_count()","render_frame()","render_layout()","render_partial()","render_template()","render_to_body()","render_to_body()","render_to_body()","render_to_body()","render_to_string()","render_to_string()","render_to_string()","rendered_format()","renew()","renew()","reopen()","reopen()","reopen()","reopen()","reopen()","reorder()","repeated_combination()","repeated_permutation()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replace()","replacement()","replacement=()","replay()","replica?()","replica?()","reply()","reply_service()","report()","report()","report()","report_attributes()","report_class_module()","report_constants()","report_methods()","report_on_exception()","report_on_exception()","report_on_exception=()","report_on_exception=()","report_uri()","reporting_issues","represent_map()","represent_object()","represent_scalar()","represent_seq()","representable?()","representation()","request()","request()","request()","request()","request_authenticity_tokens()","request_body_permitted?()","request_context()","request_get()","request_head()","request_http_basic_authentication()","request_http_digest_authentication()","request_http_token_authentication()","request_id()","request_method()","request_method_symbol()","request_parameters()","request_parameters=()","request_path()","request_post()","request_uri()","request_uri()","requester()","require()","require()","require()","require_application!()","require_application_and_environment!()","require_dependency()","require_engine()","require_environment!()","require_io_console()","require_path()","require_path=()","require_paths()","require_paths=()","require_relative()","require_sri_for()","require_unload_lock!()","requireables()","required()","required_attribute?()","required_attributes()","required_ruby_version()","required_ruby_version()","required_ruby_version=()","required_rubygems_version()","required_rubygems_version()","required_rubygems_version=()","requirement()","requirement()","requirement!()","requirement_satisfied_by?()","requirements()","requirements=()","requirements_list()","requires_reloading?()","requires_reloading?()","rerdoc_task_description()","rerender()","rerender_all()","rescue_from()","rescue_response?()","rescue_template()","rescue_with_handler()","rescue_with_handler()","reselect()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset()","reset!()","reset!()","reset!()","reset!()","reset_body!()","reset_cache()","reset_callbacks()","reset_column_information()","reset_counters()","reset_cycle()","reset_default_key_bindings()","reset_default_key_bindings()","reset_line()","reset_locking_column()","reset_nil_attributes_to_default()","reset_oneshot_key_bindings()","reset_paths!()","reset_rubygems!()","reset_runtime()","reset_sequence!()","reset_session()","reset_session()","reset_settings_and_root!()","reset_stats!()","reset_to_initial_configs()","reset_variables()","resets()","resize()","resize()","resolve()","resolve()","resolve()","resolve()","resolve()","resolve()","resolve_aliases()","resolve_current()","resolve_method()","resource()","resources()","resources_path_names()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_missing?()","respond_to_without_attributes?()","response()","response()","response_body()","response_body=()","response_body=()","response_body_encoding=()","response_body_permitted?()","response_code()","responses()","rest()","rest()","rest?()","rest_size()","restart()","restart.rake","restore()","restore()","restore()","restore()","restore()","restore()","restore_attributes()","restsize()","result()","result()","result()","result()","result()","result()","result_with_hash()","resume()","resume()","retrieve_comment_body()","retrieve_completion_block()","retrieve_completion_block()","retrieve_completion_data()","retrieve_connection()","retrieve_connection_pool()","retrieve_keybuffer()","retrieve_string()","retry_job()","retry_on()","return_headers?()","return_headers?()","return_type()","return_type_detail()","return_value()","return_vtype()","retval?()","reverse()","reverse()","reverse()","reverse()","reverse!()","reverse!()","reverse_each()","reverse_each()","reverse_each()","reverse_merge()","reverse_merge()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_merge!()","reverse_merge!()","reverse_merge!()","reverse_order()","reverse_search_history()","reverse_update()","reversible()","revert()","revert()","revert_last_commit()","reverting?()","revocation_reason()","revocation_time()","revoked()","revoked=()","rewhere()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewind()","rewrite_param_values()","rfc1123_date()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc2822()","rfc3339()","rfc3339()","rfc3339()","rfc3339()","rfc3339()","rfc3339()","rfc3339()","rfc822()","rfc822()","rfc822()","rfc822()","rfc822()","rfc822()","ri_dir()","ri_installed?()","ri_installed?()","ri_paths()","rich_text_area()","rich_text_area()","rich_text_area_tag()","rich_text_association_names()","rid()","rid()","rindex()","rindex()","rjit","rjust()","rm()","rm_f()","rm_r()","rm_rf()","rm_rf()","rmdir()","rmdir()","rmdir()","rmtree()","rmtree()","robots","role()","rollback()","rollback()","rollback!()","rollback_db_transaction()","rollback_to_savepoint()","rolledback?()","rollup.config.js","rollup.config.js","rollup.config.js","root()","root()","root()","root()","root()","root()","root()","root=()","root?()","root?()","root_search()","roots()","rotate()","rotate!()","round()","round()","round()","round()","round()","round()","route()","route()","route()","route()","route_for()","route_from()","route_key()","route_later()","route_to()","route_url()","routes()","routes.rb.tt","routes.rb.tt","routes.rb.tt","routing()","row_sep()","row_separator()","rpartition()","rshift!()","rstrip()","rstrip!()","ruby()","ruby()","ruby()","ruby-version.tt","ruby2_keywords()","ruby2_keywords_hash()","ruby2_keywords_hash()","ruby2_keywords_hash?()","ruby2_keywords_hash?()","ruby_api_version()","ruby_engine()","ruby_scope()","ruby_version()","ruby_version()","rubygems_api_key()","rubygems_api_key=()","rubygems_api_request()","rubygems_deprecate()","rubygems_deprecate_command()","rubygems_target_version()","rubygems_version()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run!()","run_callbacks()","run_initializers()","run_interlock()","run_load_hooks()","runner()","runner()","running()","running?()","runtime()","runtime=()","runtime?()","runtime_dependencies()","runtime_stats()","runtime_stats()","s3_uri_signer()","safe_concat()","safe_concat()","safe_constantize()","safe_constantize()","safe_delete()","safe_dump()","safe_join()","safe_load()","safe_load()","safe_load()","safe_load_file()","safe_load_marshal()","safe_unlink()","sample()","sandbox()","sandbox?()","sanitize()","sanitize()","sanitize_action_text_content()","sanitize_css()","sanitize_limit()","sanitize_path()","sanitize_sql()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_for_order()","sanitize_sql_hash_for_assignment()","sanitize_sql_like()","sanitize_string()","sanitized()","satisfied_by?()","satisfies_requirement?()","saturday?()","saturday?()","save()","save()","save()","save()","save!()","save!()","save_cache()","save_class()","save_exception_mode()","save_history()","save_history=()","save_limit()","save_method()","save_page()","save_rounding_mode()","saved_change_to_attribute()","saved_change_to_attribute?()","saved_changes()","saved_changes?()","say()","say()","say()","say_with_time()","scalar()","scalar()","scalar()","scalar()","scalar=()","scalar?()","scalar?()","scale()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan()","scan_adjacent_indent()","scan_all()","scan_full()","scan_neighbors_not_empty()","scan_opens()","scan_token()","scan_until()","scan_while()","schedule()","schedule()","scheduled?()","scheduler()","schema_cache()","schema_cache=()","schema_cache_path()","schema_dump()","schema_dump_path()","schema_exists?()","schema_file_type()","schema_migrations_table_name()","schema_migrations_table_name=()","schema_names()","schema_search_path()","schema_search_path=()","schema_up_to_date?()","schema_version()","scheme=()","scheme_for()","scheme_list()","scope()","scope()","scope()","scope()","scope=()","scope_for()","scope_for_create()","scopes()","scoping()","screen_height()","screen_width()","script_lines()","script_lines()","script_safe()","script_safe=()","script_safe?()","scroll_backward()","scroll_down()","scroll_down()","scroll_down()","scroll_forward()","scrolling_list()","scrub()","scrub!()","scrypt()","search()","search()","search_const()","search_convpath()","search_field()","search_field()","search_field_tag()","search_file()","search_for()","search_for_dependency()","search_full()","search_record()","search_record()","search_record()","sec()","sec()","sec_fraction()","sec_fraction()","second()","second()","second()","second()","second()","second!()","second_fraction()","second_to_last()","second_to_last()","second_to_last()","second_to_last!()","seconds()","seconds_since_midnight()","seconds_since_midnight()","seconds_to_utc_offset()","seconds_until_end_of_day()","seconds_until_end_of_day()","secret_key_base()","secret_token()","secrets()","section()","section()","section()","section()","section()","section_contents()","section_title()","section_title()","section_title()","section_title()","sections()","sections()","secure=()","secure_compare()","secure_compare()","secure_compare!()","security","security_level()","security_level=()","see()","seed()","seed()","seed()","seed()","seed=()","seed_loader()","seeds.rb.tt","seek()","seek()","seek()","seek()","seek()","seek()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select!()","select!()","select!()","select!()","select!()","select_all()","select_all()","select_date()","select_datetime()","select_day()","select_hour()","select_minute()","select_month()","select_one()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","selector()","self()","self_insert()","self_manager()","send()","send()","send()","send()","send()","send_async()","send_blob_stream()","send_data()","send_data()","send_data()","send_early_hints()","send_file()","send_file()","send_file()","send_file()","send_gem()","send_io()","send_request()","send_stream()","sender()","sending!()","sending?()","sending_file=()","sendmsg()","sendmsg_nonblock()","sent!()","sent?()","separator()","seplist()","seq=()","sequence?()","sequence?()","sequence_name()","sequence_name=()","serial()","serial()","serial()","serial()","serial()","serial()","serial=()","serial=()","serial_number()","serial_sequence()","serializable?()","serializable?()","serializable_hash()","serializable_hash()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize()","serialize?()","served_url()","server()","server()","server()","server_port()","server_software()","service()","service()","service_delete()","service_delete_prefixed()","service_download()","service_exist()","service_headers_for_direct_upload()","service_mirror()","service_mode?()","service_streaming_download()","service_upload()","service_url()","service_url_for_direct_upload()","session()","session=()","session_add()","session_auth=()","session_cache_mode()","session_cache_mode=()","session_cache_size()","session_cache_size=()","session_cache_stats()","session_options=()","session_remove()","session_reused?()","session_store()","set()","set()","set()","set_api_key()","set_api_key()","set_application_directory!()","set_attributes()","set_backtrace()","set_backtrace()","set_bit!()","set_callback()","set_constant_visibility_for()","set_content_type()","set_content_type()","set_context()","set_crt_params()","set_ctypes()","set_ctypes()","set_current_section()","set_cursor_pos()","set_cursor_pos()","set_debug_output()","set_default()","set_default_key_bindings()","set_default_key_bindings()","set_default_key_bindings()","set_default_key_bindings_ansi_cursor()","set_default_key_bindings_comprehensive_list()","set_default_key_bindings_terminfo()","set_default_paths()","set_dialog()","set_dictionary()","set_dictionary()","set_dn()","set_encoding()","set_encoding()","set_encoding()","set_encoding_by_bom()","set_encoding_by_bom()","set_environment()","set_environment!()","set_eoutvar()","set_eoutvar()","set_eoutvar()","set_error()","set_extensions()","set_factors()","set_filter()","set_flags()","set_form()","set_form_data()","set_generator()","set_header()","set_headers()","set_host()","set_host()","set_key()","set_key()","set_key()","set_key()","set_last_value()","set_mark()","set_member_mappings_for_resource()","set_migration_assigns!()","set_opaque()","set_option()","set_options()","set_params()","set_password()","set_password()","set_pasting_state()","set_path()","set_path()","set_port()","set_port()","set_pqg()","set_pqg()","set_range()","set_scheduler()","set_scheme()","set_scope()","set_screen_size()","set_screen_size()","set_screen_size()","set_signal_handlers()","set_standard_conforming_strings()","set_string()","set_temporary_name()","set_to()","set_to_infinity!()","set_trace_func()","set_trace_func()","set_typecode()","set_user()","set_user()","set_userinfo()","set_userinfo()","set_value()","set_values()","set_visibility_for()","set_winch_handler()","set_winch_handler()","set_winch_handler()","setbyte()","setegid()","seteuid()","setgid()","setgid?()","setgid?()","setgid?()","setgid?()","setgrent()","setpgid()","setpgrp()","setpriority()","setproctitle()","setproperty()","setpwent()","setregid()","setresgid()","setresuid()","setreuid()","setrgid()","setrlimit()","setruid()","setsid()","setsockopt()","setsockopt()","settings()","setuid()","setuid?()","setuid?()","setuid?()","setuid?()","setup()","setup()","setup()","setup()","setup()","setup()","setup.tt","setup_certificate()","setup_generator()","setup_horo_variables()","setup_initial_database_yaml()","setup_interrupt()","setup_output_dir()","setup_signer()","setup_ssl_context()","setupterm()","sev_threshold()","sev_threshold=()","sexp()","sexp()","sexp_raw()","sexp_raw()","shallow()","shallow?()","shard()","shard_swapping_prohibited?()","shareable?()","shared?()","sharing()","sharing_detection()","sharing_detection=()","shebang()","shebang()","shellescape()","shellescape()","shelljoin()","shelljoin()","shellsplit()","shellsplit()","shellwords()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","shift()","short_identifier()","short_name()","should_apply_vary_header?()","should_be_handled_by_debugger?()","should_be_handled_by_debugger?()","should_be_handled_by_debugger?()","show()","show()","show()","show()","show()","show()","show.html.erb.tt","show_cursor()","show_cursor()","show_cursor()","show_detailed_exceptions?()","show_doc_dialog_proc()","show_documentation()","show_files()","show_help()","show_helper()","show_lookup_failure()","show_owners()","show_release_notes()","show_variable()","show_version()","shuffle()","shuffle!()","shutdown()","shutdown()","shutdown()","shutdown()","shutdown()","shutdown()","sid_available?()","sid_available?()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign()","sign_in()","sign_pss()","sign_raw()","signal()","signal()","signal()","signal_handle()","signal_status()","signaled?()","signals","signame()","signature()","signature()","signature_algorithm()","signature_algorithm()","signature_algorithm()","signed()","signed?()","signed_id()","signed_id()","signed_id_verifier()","signed_id_verifier=()","signed_id_verifier_secret()","signed_or_encrypted()","signed_time()","signers()","signo()","silence()","silence()","silence!()","silence_redefinition_of_method()","silence_warnings()","silenced()","silent_system()","simple_format()","simplified_rendering?()","sin()","sin()","since()","since()","since()","since()","since()","single_delegate()","single_line_command?()","singleline_format()","singleline_pp()","singleton_class()","singleton_class?()","singleton_method()","singleton_methods()","singular()","singular()","singular_name()","singular_route_key()","singular_route_name()","singular_table_name()","singularize()","singularize()","sinh()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size=()","size?()","size?()","size?()","size?()","size_of()","size_opt_params()","size_params()","sizeof()","skip()","skip()","skip()","skip_after_action()","skip_around_action()","skip_before_action()","skip_blanks?()","skip_blanks?()","skip_callback()","skip_description?()","skip_during()","skip_for_variable()","skip_forgery_protection()","skip_internal_path?()","skip_lines()","skip_lines()","skip_method()","skip_missing_file_name?()","skip_optional_do_after_expression()","skip_parameter_encoding()","skip_parentheses()","skip_tkspace()","skip_tkspace_comment()","skip_tkspace_without_nl()","skip_until()","sleep()","sleep()","sleep()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice()","slice!()","slice!()","slice!()","slice!()","slice!()","slice!()","slice!()","slice_after()","slice_after()","slice_before()","slice_before()","slice_when()","slice_when()","sms_to()","sn()","snippet()","sockaddr_in()","sockaddr_un()","socket?()","socket?()","socket?()","socket?()","socketpair()","socketpair()","socktype()","solaris_platform?()","sole()","sole()","sort()","sort()","sort!()","sort_by()","sort_by!()","sort_dependencies()","sort_obj()","sort_priority()","sort_sections()","sorted()","sorted()","sorted_groups()","sorted_lines()","sorted_requests()","source()","source()","source()","source()","source()","source()","source()","source()","source_attribute_from_preserved_attribute()","source_date_epoch()","source_date_epoch_string()","source_encoding()","source_encoding()","source_encoding()","source_encoding_name()","source_encoding_name()","source_extracts()","source_file()","source_for()","source_location()","source_location()","source_location()","source_location()","source_ole_types()","source_paths()","source_root()","source_to_show_id()","sources()","sources=()","space()","space=()","space_before()","space_before=()","spawn()","spawn()","spawn()","spec()","spec()","spec()","spec()","spec_cache_dir()","spec_dir()","spec_file()","spec_file()","spec_for()","spec_for()","spec_for_dependency()","spec_groups()","spec_name()","spec_name()","spec_path()","spec_predecessors()","special_prefixes=()","specific?()","specific?()","specific_extra_args()","specific_extra_args_hash()","specs()","specs()","specs_in()","specs_path()","spell_checker()","spell_checkers()","split()","split()","split()","split()","split()","split()","split()","split()","split()","split()","split_by_width()","spot()","spot()","sprintf()","sql()","sql()","sqlite3.yml.tt","sqlserver.yml.tt","sqr()","sqrt()","sqrt()","sqrt()","sqrt()","squeeze()","squeeze!()","squish()","squish!()","srand()","srand()","src_type()","ssl_version()","ssl_version=()","stale?()","stale_session_check!()","standard_library","standard_port()","standard_port?()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start!()","start.coffee","start_character_column()","start_character_offset()","start_collecting_tokens()","start_column()","start_doc()","start_document()","start_document()","start_document()","start_document()","start_element()","start_exclusive()","start_line()","start_line_slice()","start_mapping()","start_mapping()","start_pasting()","start_processing()","start_running()","start_sequence()","start_sequence()","start_service()","start_sharing()","start_stream()","start_stream()","start_stream()","start_unloading()","start_with?()","start_with?()","start_with?()","started?()","started_request_message()","stash_changes()","stat()","stat()","stat()","stat()","stat()","stat()","stat()","stat()","stat_heap()","state()","state()","state()","state()","state_file()","state_file_name()","state_file_writable?()","state_home()","statistics()","statistics.rake","stats()","stats()","stats_enabled?()","stats_string()","status()","status()","status()","status()","status()","status()","status=()","status?()","status_code()","status_code_for_exception()","status_message()","status_string()","status_text()","step()","step()","step()","step()","sti_class_for()","sti_name()","sticky?()","sticky?()","sticky?()","sticky?()","stop()","stop()","stop?()","stop?()","stop_after_kw()","stop_all_streams()","stop_doc()","stop_exclusive()","stop_pool()","stop_service()","stop_service()","stop_service()","stop_sharing()","stop_stream_for()","stop_stream_from()","stopped?()","stopsig()","storage()","storage()","storage.yml.tt","storage=()","store()","store()","store()","store()","store()","store()","store=()","store=()","store=()","store=()","store=()","store=()","store=()","store_accessor()","store_for()","store_inherited()","stored_attributes()","stream?()","stream?()","stream_end?()","stream_for()","stream_from()","stream_or_reject_for()","streaming?()","stress()","stress=()","strftime()","strftime()","strftime()","strftime()","strftime_formatting","strict()","strict=()","strict?()","strict_decode64()","strict_encode64()","strict_loading()","strict_loading!()","strict_loading?()","strict_loading_n_plus_one_only?()","strict_loading_violation()","strict_match?()","strict_mode?()","strict_oct()","strike()","string()","string()","string()","string()","string=()","string=()","stringify_array()","stringify_keys()","stringify_keys()","stringify_keys()","stringify_keys!()","stringify_keys!()","stringify_keys!()","strip()","strip!()","strip_comment()","strip_hashes()","strip_heredoc()","strip_links()","strip_newlines()","strip_stars()","strip_tags()","strong()","strong_etag=()","strong_etag?()","strongly_connected_components()","strongly_connected_components()","strptime()","strptime()","strptime()","strptime()","struct()","structurally_compatible?()","structure_dump()","structure_dump_flags()","structure_load()","structure_load_flags()","stubbed?()","stubbed?()","stubs()","stubs_for()","stylesheet_link_tag()","stylesheet_path()","stylesheet_url()","stylesheets()","stylesheets.css","sub()","sub()","sub()","sub()","sub()","sub!()","sub_ext()","sub_type()","subclasses()","subclasses()","subclasses()","subclasses()","subclasses()","subdomain()","subdomain_of?()","subdomains()","subject()","subject()","subject=()","subject=()","subject_certificate=()","subject_key_identifier()","subject_request=()","submit()","submit()","submit_tag()","subscribe()","subscribe()","subscribe()","subscribe()","subscribe()","subscribe_to_channel()","subscribed()","subscribed()","subscribers()","subscription.js","subscription_confirmation_sent?()","subscription_guarantor.js","subscription_rejected?()","subscriptions.js","subsec()","subsec()","subset?()","subtract()","succ()","succ()","succ()","succ()","succ()","succ!()","success?()","success?()","success?()","success?()","successfully_enqueued?()","suffix()","suffix()","suffix_pattern()","suffix_regexp()","suffixes()","suggest_gems_from_name()","suggestions()","sum()","sum()","sum()","sum()","sum()","summarize()","summarize()","summarize()","summary()","summary=()","sunday()","sunday?()","sunday?()","super_method()","super_method()","superclass()","superclass()","superclass()","superclass=()","superclass_method()","superset?()","support_history_saving?()","supported?()","supports_advisory_locks?()","supports_advisory_locks?()","supports_advisory_locks?()","supports_bulk_alter?()","supports_bulk_alter?()","supports_bulk_alter?()","supports_cache_versioning?()","supports_cache_versioning?()","supports_cache_versioning?()","supports_cache_versioning?()","supports_cache_versioning?()","supports_check_constraints?()","supports_check_constraints?()","supports_check_constraints?()","supports_check_constraints?()","supports_comments?()","supports_comments?()","supports_comments?()","supports_comments_in_create?()","supports_comments_in_create?()","supports_common_table_expressions?()","supports_common_table_expressions?()","supports_common_table_expressions?()","supports_common_table_expressions?()","supports_concurrent_connections?()","supports_concurrent_connections?()","supports_datetime_with_precision?()","supports_datetime_with_precision?()","supports_datetime_with_precision?()","supports_datetime_with_precision?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_deferrable_constraints?()","supports_deferrable_constraints?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_expression_index?()","supports_expression_index?()","supports_expression_index?()","supports_expression_index?()","supports_extensions?()","supports_extensions?()","supports_foreign_keys?()","supports_foreign_keys?()","supports_foreign_keys?()","supports_foreign_keys?()","supports_foreign_tables?()","supports_foreign_tables?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_indexes_in_create?()","supports_indexes_in_create?()","supports_insert_conflict_target?()","supports_insert_conflict_target?()","supports_insert_conflict_target?()","supports_insert_on_conflict?()","supports_insert_on_conflict?()","supports_insert_on_duplicate_skip?()","supports_insert_on_duplicate_skip?()","supports_insert_on_duplicate_skip?()","supports_insert_on_duplicate_skip?()","supports_insert_on_duplicate_update?()","supports_insert_on_duplicate_update?()","supports_insert_on_duplicate_update?()","supports_insert_on_duplicate_update?()","supports_insert_returning?()","supports_insert_returning?()","supports_json?()","supports_json?()","supports_json?()","supports_json?()","supports_lazy_transactions?()","supports_lazy_transactions?()","supports_lazy_transactions?()","supports_lazy_transactions?()","supports_materialized_views?()","supports_materialized_views?()","supports_optimizer_hints?()","supports_optimizer_hints?()","supports_optimizer_hints?()","supports_partial_index?()","supports_partial_index?()","supports_partial_index?()","supports_partitioned_indexes?()","supports_partitioned_indexes?()","supports_path?()","supports_path?()","supports_pgcrypto_uuid?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_streaming?()","supports_streaming?()","supports_transaction_isolation?()","supports_transaction_isolation?()","supports_transaction_isolation?()","supports_transaction_isolation?()","supports_validate_constraints?()","supports_validate_constraints?()","supports_views?()","supports_views?()","supports_views?()","supports_views?()","supports_virtual_columns?()","supports_virtual_columns?()","supports_virtual_columns?()","suppress()","suppress()","suppress()","suppress_messages()","suppressed?()","suppresses_echo?()","suppresses_echo?()","suppresses_echo?()","suspend()","suspend_input_method()","suspend_name()","suspend_workspace()","swap()","swap()","swapcase()","swapcase()","swapcase!()","switch()","switch()","switch()","switch_name()","sym()","sym()","sym()","sym_defined?()","sym_defined?()","symbol_alias?()","symbolize()","symbolize_keys()","symbolize_keys()","symbolize_keys()","symbolize_keys!()","symbols()","symlink()","symlink()","symlink?()","symlink?()","symlink?()","symlink?()","symlink?()","sync()","sync()","sync()","sync()","sync=()","sync=()","sync=()","sync_point?()","synchronize()","synchronize()","synchronize()","synchronize()","syntax","sysaccept()","sysaccept()","sysaccept()","syscall()","sysclose()","sysconf()","sysconfdir()","syslog()","syslog=()","sysopen()","sysopen()","sysread()","sysread()","sysread()","sysseek()","syssign()","system()","system_bindir()","system_test()","systmpdir()","sysverify()","syswrite()","syswrite()","t()","t()","table()","table_alias_for()","table_alias_length()","table_comment()","table_exists?()","table_exists?()","table_name()","table_name()","table_name=()","table_name_prefix()","table_name_prefix=()","table_name_suffix()","table_name_suffix=()","table_options()","table_rows()","tableize()","tableize()","tables()","tag()","tag()","tag()","tag()","tagged()","tags()","take()","take()","take()","take()","take()","take()","take()","take()","take!()","take_range()","take_while()","take_while()","take_while()","take_while_including()","tally()","tan()","tanh()","tap()","target()","target_bin_path()","target_version()","task.rb.tt","tcp()","tcp()","tcp_server_loop()","tcp_server_sockets()","telephone_field()","telephone_field()","telephone_field_tag()","tell()","tell()","tell()","tell()","tell()","tell()","template()","template_dir_for()","template_exists?()","terabyte()","terabytes()","terminate()","terminate()","terminate()","terminate()","terminate()","terminate_interaction()","terminate_interaction()","terminated?()","termsig()","test()","test()","test()","test_dummy_clean()","test_dummy_config()","test_dummy_sprocket_assets()","test_errors_aref()","test_model_naming()","test_persisted?()","test_to_key()","test_to_param()","test_to_partial_path()","testing_ruby","text()","text()","text()","text=()","text?()","text?()","text_area()","text_area()","text_area_tag()","text_field()","text_field()","text_field()","text_field_tag()","textarea()","then()","third()","third()","third()","third!()","third_to_last()","third_to_last()","third_to_last()","third_to_last!()","this()","this_update()","thread()","thread()","thread_cattr_accessor()","thread_mattr_accessor()","thread_variable?()","thread_variable_get()","thread_variable_set()","thread_variables()","throw()","throw_away!()","thursday?()","thursday?()","tidy_bytes()","tidy_bytes()","tigetflag()","tigetnum()","tigetstr()","time()","time()","time()","time()","time2wtime()","time=()","time=()","time=()","time=()","time_ago_in_words()","time_field()","time_field()","time_field_tag()","time_select()","time_select()","time_tag()","time_zone_options_for_select()","time_zone_select()","time_zone_select()","timeout()","timeout()","timeout()","timeout()","timeout()","timeout=()","timeout=()","timeout=()","timeout_after()","timeouts=()","timer()","times()","times()","timestamp()","timestamps()","timestamps()","timestamptz()","tinyblob()","tinytext()","tiparm()","tiparm()","title()","title=()","titlecase()","titlecase()","titleize()","titleize()","titleize()","tk_nl?()","tmp()","tmp()","tmp.rake","tmp_dh=()","tmp_key()","tmpdir()","tmpdir()","tmpdir()","to()","to()","to=()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_addresses()","to_ary()","to_ary()","to_ary()","to_ary()","to_ary()","to_attachable_partial_path()","to_basic()","to_binary()","to_bn()","to_bn()","to_bn()","to_c()","to_c()","to_c()","to_c()","to_complete()","to_csv()","to_csv()","to_d()","to_d()","to_d()","to_d()","to_d()","to_d()","to_d()","to_date()","to_date()","to_date()","to_date()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_dep_map()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_digits()","to_enum()","to_enum()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_fs()","to_fs()","to_fs()","to_fs()","to_fs()","to_fs()","to_fs()","to_fullpath()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_h()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_html()","to_html()","to_html()","to_html()","to_html()","to_html()","to_html()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_id()","to_id()","to_id()","to_id()","to_int()","to_int()","to_int()","to_int()","to_int()","to_int()","to_io()","to_io()","to_io()","to_io()","to_io()","to_io()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_json()","to_key()","to_key()","to_mailtext()","to_model()","to_model()","to_name()","to_name()","to_obj()","to_obj()","to_obj()","to_obj()","to_octet_string()","to_options()","to_options()","to_options()","to_options!()","to_options!()","to_options!()","to_p()","to_p()","to_p()","to_p()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_partial_path()","to_partial_path()","to_partial_path()","to_partial_path()","to_partial_path()","to_partial_path()","to_path()","to_path()","to_path()","to_path()","to_path()","to_path()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_plain_text()","to_plain_text()","to_plain_text()","to_plain_text()","to_prepare()","to_prepare()","to_prepare_blocks()","to_proc()","to_proc()","to_proc()","to_proc()","to_proc()","to_proc()","to_ptr()","to_ptr()","to_ptr()","to_query()","to_query()","to_query()","to_query()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_range()","to_rendered_html_with_layout()","to_request_set()","to_rfc822text()","to_rich_text_attributes()","to_ruby()","to_ruby()","to_ruby_for_cache()","to_run()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_sentence()","to_set()","to_set()","to_sockaddr()","to_spec()","to_spec()","to_spec()","to_specs()","to_sql()","to_sql()","to_str()","to_str()","to_str()","to_str()","to_str()","to_str()","to_string()","to_sym()","to_sym()","to_sym()","to_sym()","to_tag()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time_preserves_timezone()","to_time_preserves_timezone=()","to_trix_attachment()","to_trix_content_attachment_partial_path()","to_trix_content_attachment_partial_path()","to_trix_content_attachment_partial_path()","to_trix_html()","to_trix_html()","to_tty?()","to_unsafe_h()","to_unsafe_hash()","to_utf8()","to_value()","to_write_io()","to_xml()","to_xml()","to_yaml()","to_yaml()","today()","today()","today?()","today?()","toeuc()","toeuc()","toggle()","toggle!()","tojis()","tojis()","token()","token()","token_and_options()","token_info()","token_list()","token_listener()","token_params_from()","token_stream()","tokenize()","tokenize()","tokenize()","tokens()","tokens_to_s()","tolocale()","tolocale()","tomdoc?()","tomorrow()","tomorrow()","tomorrow()","tomorrow?()","tomorrow?()","top()","top()","top()","top()","top_level()","top_level()","tosjis()","tosjis()","total_in()","total_out()","total_time()","total_time()","touch()","touch()","touch_all()","toutf16()","toutf16()","toutf32()","toutf32()","toutf8()","toutf8()","tr()","tr!()","tr_s()","tr_s!()","trace()","trace()","trace_func()","trace_object_allocations()","trace_object_allocations_clear()","trace_object_allocations_debug_start()","trace_object_allocations_start()","trace_object_allocations_stop()","trace_points()","trace_to_show()","trace_var()","traces()","trailing?()","trailing?()","trailing_slash?()","transaction()","transaction()","transaction()","transaction_isolation_levels()","transaction_open?()","transfer()","transfer()","transform()","transform()","transform()","transform_args()","transform_args()","transform_args?()","transform_keys()","transform_keys()","transform_keys()","transform_keys()","transform_keys!()","transform_keys!()","transform_keys!()","transform_keys!()","transform_values()","transform_values()","transform_values()","transform_values()","transform_values!()","transform_values!()","transient_failure?()","translate()","translate()","transliterate()","transmit()","transpose()","transpose_chars()","transpose_words()","trap()","trap()","traverse()","traverse()","traverse_parents()","tree()","tree()","tree_depth()","trix.css","trix.js","truecolor?()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate_all()","truncate_bytes()","truncate_text()","truncate_words()","trust=()","trust=()","trust_cert()","trust_dir()","trusted_certificates()","try()","try()","try()","try!()","try!()","try!()","try_activate()","try_const()","try_convert()","try_convert()","try_convert()","try_convert()","try_convert()","try_convert()","try_enter()","try_lock()","try_mon_enter()","try_mon_enter()","try_type()","tsa_certificate()","tsort()","tsort()","tsort_each()","tsort_each()","tsort_each_child()","tsort_each_child()","tsort_each_child()","tsort_each_node()","tsort_each_node()","tsrange()","tstzrange()","tsvector()","tty?()","tty?()","tty?()","tty?()","tuesday?()","tuesday?()","tutorial","tv_nsec()","tv_sec()","tv_sec()","tv_usec()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type()","type2name()","type=()","type_cast()","type_cast_config_to_boolean()","type_cast_config_to_integer()","type_for_attribute()","type_params()","typealias()","typecode=()","typekind()","typelibs()","typelibs()","typename()","typo_squatting?()","u()","ucmp()","udp()","udp_server_loop()","udp_server_loop_on()","udp_server_recv()","udp_server_sockets()","ui()","ui()","ui()","ui()","ui=()","ui=()","ui=()","uid()","uid()","uid=()","ujs.js","umask()","unadvise()","uname()","unbind()","unblock()","unbundled_env()","unbundled_exec()","unbundled_system()","uncacheable!()","uncached()","uncached()","unconverted_fields?()","unconverted_fields?()","uncountable()","uncountable?()","uncountable?()","uncountable?()","uncountable?()","undef_method()","undefine_attribute_methods()","undefine_finalizer()","undefined_instance_methods()","underscore()","underscore()","undoc_params()","undump()","unescape()","unescape()","unescape()","unescape()","unescape()","unescapeelement()","unescapehtml()","unescapehtml()","unescapeuricomponent()","unescapeuricomponent()","unescape_bytea()","unescape_element()","unescape_html()","unescape_uri_component()","unescape_uri_component()","unget_tk()","ungetbyte()","ungetbyte()","ungetbyte()","ungetc()","ungetc()","ungetc()","ungetc()","ungetc()","ungetc()","ungetc()","ungetc()","ungetc()","unicode_normalize()","unicode_normalize!()","unicode_normalized?()","unicode_properties","uninstall()","uninstall()","uninstall_all()","uninstall_dep()","uninstall_gem()","uninstall_gem()","uninstall_old_gemcutter()","uninstall_specific()","union()","union()","union()","union()","uniq()","uniq()","uniq()","uniq!()","uniq!()","unique_classes()","unique_classes_and_modules()","unique_modules()","unix()","unix()","unix?()","unix_line_discard()","unix_path()","unix_rights()","unix_rights()","unix_server_loop()","unix_server_socket()","unix_word_rubout()","unknown()","unknown()","unknown()","unlink()","unlink()","unlink()","unlink()","unload_interlock()","unloading()","unlock()","unlock()","unmask_token()","unpack()","unpack()","unpack()","unpack1()","unpack_sockaddr_in()","unpack_sockaddr_un()","unpackdw()","unpackhandle()","unpackqw()","unpermitted_parameters()","unprepared_statement()","unquoted_false()","unquoted_true()","unregist()","unregister()","unregister()","unregister_command()","unregister_interceptor()","unregister_interceptors()","unregister_observer()","unregister_observers()","unregister_preview_interceptor()","unregister_preview_interceptors()","unresolved_deps()","unsafe_load()","unsafe_load_file()","unscan()","unscope()","unscoped()","unset_api_key!()","unshift()","unshift()","unshift()","unshift()","unshift()","unsigned_bigint()","unsigned_decimal()","unsigned_float()","unsigned_integer()","unsubscribe()","unsubscribe()","unsubscribe()","unsubscribe()","unsubscribe!()","unsubscribed()","until()","untrace_var()","unused()","unwrapped_exception()","up()","up()","up_only()","upcase()","upcase()","upcase!()","upcase_first()","upcase_first()","upcase_word()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update!()","update!()","update_aliases()","update_all()","update_all()","update_attribute()","update_cache?()","update_checksum()","update_column()","update_columns()","update_counters()","update_counters()","update_counters()","update_extends()","update_gem()","update_gems()","update_includes()","update_iogate()","update_iogate()","update_metadata()","update_metadata()","update_output_dir()","update_parser_of_file()","update_rubygems()","update_scope()","update_suggestion()","updated()","updated()","updated()","updated?()","upgrade_insecure_requests()","upgrade_to_class()","upload()","upload()","upload()","upload()","upload()","upload()","upload()","upper()","upsert()","upsert_all()","upto()","upto()","upto()","uptodate?()","urandom()","uri()","uri_option()","url()","url()","url()","url()","url()","url_encode()","url_field()","url_field()","url_field_tag()","url_for()","url_for()","url_for()","url_for()","url_for_direct_upload()","url_for_direct_upload()","url_for_direct_upload()","url_for_direct_upload()","url_for_direct_upload()","url_from()","url_helper_prefix()","url_options()","url_options()","url_to_asset()","url_to_audio()","url_to_font()","url_to_image()","url_to_javascript()","url_to_stylesheet()","url_to_video()","urlsafe_base64()","urlsafe_decode64()","urlsafe_encode64()","us_zones()","usage()","usage_path()","usage_path()","use()","use()","use()","use_accept_header()","use_gemdeps()","use_headers?()","use_insert_returning?()","use_loader()","use_loader=()","use_loader?()","use_markup()","use_metadata_table?()","use_paths()","use_prism_parser?()","use_renderer()","use_renderers()","use_ssl=()","use_ssl?()","use_system_gems?()","use_tracer=()","use_ui()","use_ui()","use_zone()","usec()","usec()","used_modules()","used_refinements()","user()","user=()","user_agent()","user_bundle_path()","user_cache()","user_dir()","user_home()","user_home()","user_name_and_password()","userinfo()","userinfo=()","username_error()","utc()","utc()","utc()","utc()","utc?()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_offset()","utc_to_local()","utc_to_local_returns_utc_offset_times()","utc_to_local_returns_utc_offset_times=()","utf8_enforcer_tag()","utime()","utime()","uuid()","uuid()","uuid()","uuid_from_hash()","uuid_v3()","uuid_v4()","uuid_v4()","uuid_v5()","uuid_v7()","valid?()","valid?()","valid?()","valid?()","valid?()","valid?()","valid_accept_header()","valid_authenticity_token?()","valid_civil?()","valid_commercial?()","valid_date?()","valid_encoding?()","valid_jd?()","valid_message?()","valid_ordinal?()","valid_per_form_csrf_token?()","valid_request_origin?()","valid_without?()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate!()","validate_check_constraint()","validate_column_size()","validate_constraint()","validate_constraint()","validate_dependencies()","validate_digest_response()","validate_each()","validate_each()","validate_foreign_key()","validate_metadata()","validate_metadata()","validate_nonce()","validate_optional()","validate_permissions()","validate_permissions()","validate_required!()","validate_required_ruby_version()","validate_secret_key_base()","validate_service_configuration()","validate_value_type()","validates()","validates!()","validates_absence_of()","validates_absence_of()","validates_acceptance_of()","validates_associated()","validates_comparison_of()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_length_of()","validates_numericality_of()","validates_numericality_of()","validates_presence_of()","validates_presence_of()","validates_size_of()","validates_size_of()","validates_uniqueness_of()","validates_with()","validates_with()","validators()","validators_on()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value()","value=()","value=()","value=()","value=()","value?()","value?()","value?()","value_der()","values()","values()","values()","values()","values()","values()","values()","values()","values()","values()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","variable?()","variable_kind()","variables()","variant()","variant()","variant()","variant=()","varkind()","vartype()","vendor()","vendor()","ver()","verbose()","verbose()","verbose()","verbose=()","verbose=()","verbose?()","verified()","verified()","verified_request?()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify()","verify!()","verify_api_key()","verify_authenticity_token()","verify_callback=()","verify_certificate()","verify_certificate_identity()","verify_certificate_message()","verify_compaction_references()","verify_entry()","verify_files()","verify_internal_consistency()","verify_pss()","verify_raw()","verify_recover()","verify_result()","verify_same_origin_request()","verify_signatures()","verify_spec()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version.rb.tt","version=()","version=()","version=()","version=()","version=()","version_1_2()","version_1_2?()","version_control()","version_control()","vhid()","vi_backward_word()","vi_big_backward_word()","vi_big_forward_end_word()","vi_big_forward_word()","vi_editing_mode()","vi_editing_mode?()","vi_end_of_transmission()","vi_eof_maybe()","vi_first_print()","vi_forward_end_word()","vi_forward_word()","vi_movement_mode()","video?()","video_path()","video_tag()","video_url()","view.html.erb.tt","view.html.erb.tt","view.text.erb.tt","view_assigns()","view_cache_dependencies()","view_cache_dependency()","view_context()","view_context_class()","view_context_class()","view_exists?()","view_paths()","view_paths=()","views()","virtual()","visibility=()","visible?()","visible?()","visible?()","visible?()","visible?()","visible_lines()","visit()","visit()","visit()","visit_array()","visit_basicobject()","visit_bigdecimal()","visit_class()","visit_complex()","visit_date()","visit_datetime()","visit_delegator()","visit_encoding()","visit_enumerator()","visit_exception()","visit_falseclass()","visit_float()","visit_hash()","visit_integer()","visit_module()","visit_nameerror()","visit_nilclass()","visit_object()","visit_psych_nodes_alias()","visit_psych_nodes_alias()","visit_psych_nodes_alias()","visit_psych_nodes_document()","visit_psych_nodes_document()","visit_psych_nodes_mapping()","visit_psych_nodes_mapping()","visit_psych_nodes_scalar()","visit_psych_nodes_scalar()","visit_psych_nodes_sequence()","visit_psych_nodes_sequence()","visit_psych_nodes_stream()","visit_psych_nodes_stream()","visit_psych_omap()","visit_psych_set()","visit_range()","visit_rational()","visit_regexp()","visit_string()","visit_string()","visit_struct()","visit_symbol()","visit_symbol()","visit_time()","visit_trueclass()","visit_block()","visit_block_node()","visit_call_node()","visit_class_variable_and_write_node()","visit_class_variable_operator_write_node()","visit_class_variable_or_write_node()","visit_constant_and_write_node()","visit_constant_operator_write_node()","visit_constant_or_write_node()","visit_float_node()","visit_global_variable_and_write_node()","visit_global_variable_operator_write_node()","visit_global_variable_or_write_node()","visit_if_node()","visit_imaginary_node()","visit_instance_variable_and_write_node()","visit_instance_variable_operator_write_node()","visit_instance_variable_or_write_node()","visit_integer_node()","visit_lambda_node()","visit_local_variable_and_write_node()","visit_local_variable_operator_write_node()","visit_local_variable_or_write_node()","visit_program_node()","visit_rational_node()","visit_statements_node()","visit_statements_node()","visit_unless_node()","wait()","wait()","wait()","wait()","wait()","wait()","wait()","wait()","wait2()","wait_for_cond()","wait_for_otp_code()","wait_priority()","wait_readable()","wait_until()","wait_while()","wait_writable()","waitall()","waitpid()","waitpid2()","wakeup()","warmup()","warn()","warn()","warn()","warn()","warn()","warn()","warn()","warn()","warn!()","warn?()","warning_without_suggested_alternatives()","watchable_dirs()","watchable_files()","wday()","wday()","weak_etag=()","weak_etag?()","weakref_alive?()","wednesday?()","wednesday?()","week()","week_field()","week_field()","week_field_tag()","weekday_options_for_select()","weekday_select()","weekday_select()","weeks()","weeks_ago()","weeks_since()","when_invoked()","where()","where()","where()","where()","which()","which_to_update()","while_preventing_writes()","while_preventing_writes()","whole_buffer()","whole_lines()","why()","why_not_ok?()","width()","width=()","width_for()","will_save_change_to_attribute?()","win32_last_error()","win32_last_error=()","win32_last_socket_error()","win32_last_socket_error=()","win64?()","win?()","win?()","win?()","win_legacy_console?()","win_platform?()","windows","windows_stub_script()","winsize()","winsize()","winsize=()","with()","with()","with()","with()","with()","with_all_rich_text()","with_backend()","with_clean_env()","with_config()","with_connection()","with_context()","with_database_connections()","with_default_scope()","with_defaults()","with_defaults()","with_defaults()","with_defaults()","with_defaults()","with_defaults!()","with_defaults!()","with_defaults!()","with_defaults!()","with_encryption_context()","with_full_attributes()","with_indentation()","with_index()","with_index()","with_indifferent_access()","with_indifferent_access()","with_indifferent_access()","with_level()","with_local_cache()","with_lock()","with_name()","with_notes()","with_object()","with_options()","with_original_env()","with_raw_input()","with_raw_input()","with_raw_input()","with_response()","with_scope_level()","with_unbundled_env()","with_warnings()","without()","without()","without()","without()","without()","without_encryption()","without_modules()","without_modules()","word_wrap()","wordy()","wordy()","worker_pool()","workspaces()","world_readable?()","world_readable?()","world_readable?()","world_readable?()","world_writable?()","world_writable?()","world_writable?()","world_writable?()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap()","wrap_method_call()","wrap_parameters()","wrap_with_namespace()","writable?()","writable?()","writable?()","writable?()","writable_real?()","writable_real?()","writable_real?()","writable_real?()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write_attribute()","write_bin()","write_binary()","write_build_info_file()","write_cache_file()","write_default_spec()","write_entry()","write_entry()","write_fragment()","write_headers?()","write_i()","write_multi()","write_nonblock()","write_nonblock()","write_nonblock()","write_options()","write_query?()","write_random_file()","write_s()","write_services()","write_session()","write_smime()","write_spec()","write_store_attribute()","write_timeout=()","writes_pending()","wtime2time()","x_original_to_addresses()","xhr?()","xml()","xml_http_request?()","xml_name_escape()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmlschema()","xmp()","xor!()","xor_byte_strings()","yaml()","yaml_tag()","yank()","yank()","yank_gem()","yank_pop()","yank_pop()","yarn.lock","yarn.rake","yday()","yday()","year()","year()","year()","years()","years_ago()","years_since()","yesterday()","yesterday()","yesterday()","yesterday?()","yesterday?()","yield()","yield()","yield()","yield_self()","yield_shares()","yields_directive()","yjit","yjit_hacking","zcat()","zeitwerk.rake","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zip()","zip()","zip()","zip?()","zlib_version()","zone()","zone()","zone()","zone()","zone=()","zone_id()","zone_id=()","zone_offset()","|()","|()","|()","|()","|()","|()","|()","|()","|()","|()","~()","~()","~()","~()"],"longSearchIndex":["ruby basicobject#!()","ruby delegator#!()","ruby ractor::movedobject#!()","ruby basicobject#!=()","ruby delegator#!=()","ruby ractor::movedobject#!=()","rails activemodel::name#!~()","ruby object#!~()","rails activesupport::duration#%()","rails activesupport::safebuffer#%()","ruby bigdecimal#%()","ruby float#%()","ruby integer#%()","ruby numeric#%()","ruby openssl::bn#%()","ruby range#%()","ruby string#%()","rails ","rails ","rails ","rails ","ruby array#&()","ruby falseclass#&()","ruby io::buffer#&()","ruby ipaddr#&()","ruby integer#&()","ruby nilclass#&()","ruby process::status#&()","ruby ripper::lexer::state#&()","ruby set#&()","ruby trueclass#&()","rails activesupport::duration#*()","rails activesupport::safebuffer#*()","ruby array#*()","ruby benchmark::tms#*()","ruby bigdecimal#*()","ruby complex#*()","ruby float#*()","ruby integer#*()","ruby openssl::bn#*()","ruby rational#*()","ruby string#*()","ruby bigdecimal#**()","ruby complex#**()","ruby float#**()","ruby integer#**()","ruby openssl::bn#**()","ruby rational#**()","rails activesupport::duration#+()","rails activesupport::safebuffer#+()","rails activesupport::timewithzone#+()","rails rails::initializable::collection#+()","ruby array#+()","ruby benchmark::tms#+()","ruby bigdecimal#+()","ruby complex#+()","ruby date#+()","ruby enumerator#+()","ruby fiddle::pointer#+()","ruby float#+()","ruby integer#+()","ruby openssl::bn#+()","ruby pathname#+()","ruby rational#+()","ruby set#+()","ruby string#+()","ruby time#+()","ruby uri::generic#+()","ruby bigdecimal#+@()","ruby fiddle::pointer#+@()","ruby numeric#+@()","ruby openssl::bn#+@()","ruby string#+@()","rails activesupport::duration#-()","rails activesupport::timewithzone#-()","rails rails::engine::railties#-()","rails time#-()","ruby array#-()","ruby benchmark::tms#-()","ruby bigdecimal#-()","ruby complex#-()","ruby date#-()","ruby fiddle::pointer#-()","ruby float#-()","ruby integer#-()","ruby openssl::bn#-()","ruby rational#-()","ruby set#-()","ruby time#-()","ruby uri::generic#-()","rails activerecord::connectionadapters::deduplicable#-@()","ruby bigdecimal#-@()","ruby complex#-@()","ruby fiddle::pointer#-@()","ruby float#-@()","ruby integer#-@()","ruby numeric#-@()","ruby openssl::bn#-@()","ruby rational#-@()","ruby string#-@()","rails activesupport::duration#/()","ruby benchmark::tms#/()","ruby bigdecimal#/()","ruby complex#/()","ruby float#/()","ruby integer#/()","ruby openssl::bn#/()","ruby pathname#/()","ruby rational#/()","rails ","rails ","rails ","ruby bigdecimal#<()","ruby comparable#<()","ruby float#<()","ruby hash#<()","ruby integer#<()","ruby module#<()","ruby set#<()","rails activerecord::associations::collectionproxy#<<()","rails activerecord::statementcache::partialquerycollector#<<()","rails activesupport::inflector::inflections::uncountables#<<()","rails activesupport::notifications::event#<<()","rails activesupport::safebuffer#<<()","rails mime::mimes#<<()","rails rails::paths::path#<<()","ruby array#<<()","ruby csv#<<()","ruby csv::row#<<()","ruby csv::table#<<()","ruby csv::writer#<<()","ruby date#<<()","ruby digest::base#<<()","ruby digest::instance#<<()","ruby digest::sha2#<<()","ruby gem::availableset#<<()","ruby gem::sourcelist#<<()","ruby io#<<()","ruby io::generic_writable#<<()","ruby ipaddr#<<()","ruby integer#<<()","ruby logger#<<()","ruby method#<<()","ruby net::writeadapter#<<()","ruby openssl::bn#<<()","ruby openssl::buffering#<<()","ruby openssl::buffering::buffer#<<()","ruby openssl::digest#<<()","ruby openssl::hmac#<<()","ruby proc#<<()","ruby psych::visitors::yamltree#<<()","ruby ractor#<<()","ruby reline::history#<<()","ruby reline::killring::ringbuffer#<<()","ruby set#<<()","ruby string#<<()","ruby stringscanner#<<()","ruby syntaxsuggest::codefrontier#<<()","ruby syntaxsuggest::priorityqueue#<<()","ruby thread::queue#<<()","ruby thread::sizedqueue#<<()","ruby zlib::deflate#<<()","ruby zlib::gzipwriter#<<()","ruby zlib::inflate#<<()","ruby bigdecimal#<=()","ruby comparable#<=()","ruby float#<=()","ruby hash#<=()","ruby integer#<=()","ruby module#<=()","ruby set#<=()","rails activemodel::name#<=>()","rails activerecord::connectionadapters::abstractadapter::version#<=>()","rails activerecord::core#<=>()","rails activestorage::filename#<=>()","rails activesupport::duration#<=>()","rails activesupport::timewithzone#<=>()","rails activesupport::timezone#<=>()","rails date#<=>()","rails datetime#<=>()","rails time#<=>()","ruby array#<=>()","ruby bigdecimal#<=>()","ruby complex#<=>()","ruby date#<=>()","ruby fiddle::pointer#<=>()","ruby file::stat#<=>()","ruby float#<=>()","ruby gem::dependency#<=>()","ruby gem::nametuple#<=>()","ruby gem::source#<=>()","ruby gem::source::git#<=>()","ruby gem::source::installed#<=>()","ruby gem::source::local#<=>()","ruby gem::source::specificfile#<=>()","ruby gem::source::vendor#<=>()","ruby gem::version#<=>()","ruby io::buffer#<=>()","ruby ipaddr#<=>()","ruby irb::notifier::levelednotifier#<=>()","ruby integer#<=>()","ruby module#<=>()","ruby numeric#<=>()","ruby object#<=>()","ruby openssl::bn#<=>()","ruby openssl::x509::name#<=>()","ruby pathname#<=>()","ruby rdoc::alias#<=>()","ruby rdoc::constant#<=>()","ruby rdoc::context#<=>()","ruby rdoc::methodattr#<=>()","ruby rdoc::mixin#<=>()","ruby rational#<=>()","ruby set#<=>()","ruby string#<=>()","ruby symbol#<=>()","ruby syntaxsuggest::codeblock#<=>()","ruby syntaxsuggest::codeline#<=>()","ruby time#<=>()","rails actioncontroller::parameters#==()","rails actiondispatch::middlewarestack::middleware#==()","rails actiontext::content#==()","rails actionview::filesystemresolver#==()","rails actionview::template::types::type#==()","rails activemodel::name#==()","rails activemodel::type::value#==()","rails activemodel::type::value#==()","rails activemodel::validations::acceptancevalidator::lazilydefineattributes#==()","rails activerecord::associations::collectionproxy#==()","rails activerecord::core#==()","rails activerecord::encryption::message#==()","rails activerecord::reflection::macroreflection#==()","rails activerecord::relation#==()","rails activesupport::duration#==()","rails mail::address#==()","rails mime::type#==()","ruby array#==()","ruby basicobject#==()","ruby bigdecimal#==()","ruby csv::row#==()","ruby csv::table#==()","ruby comparable#==()","ruby complex#==()","ruby data#==()","ruby delegator#==()","ruby digest::instance#==()","ruby encoding::converter#==()","ruby enumerator::arithmeticsequence#==()","ruby exception#==()","ruby fiddle::pointer#==()","ruby float#==()","ruby gem::nametuple#==()","ruby gem::platform#==()","ruby gem::resolver::indexspecification#==()","ruby hash#==()","ruby ipaddr#==()","ruby integer#==()","ruby matchdata#==()","ruby method#==()","ruby module#==()","ruby openssl::asn1::objectid#==()","ruby openssl::bn#==()","ruby openssl::hmac#==()","ruby openssl::pkey::ec::group#==()","ruby openssl::pkey::ec::point#==()","ruby openssl::ssl::session#==()","ruby openssl::x509::attribute#==()","ruby openssl::x509::crl#==()","ruby openssl::x509::certificate#==()","ruby openssl::x509::extension#==()","ruby openssl::x509::request#==()","ruby openssl::x509::revoked#==()","ruby openstruct#==()","ruby pathname#==()","ruby prism::location#==()","ruby prism::token#==()","ruby proc#==()","ruby process::status#==()","ruby rdoc::attr#==()","ruby rdoc::constant#==()","ruby rdoc::toplevel#==()","ruby ractor::movedobject#==()","ruby random#==()","ruby range#==()","ruby rational#==()","ruby regexp#==()","ruby ripper::lexer::state#==()","ruby set#==()","ruby string#==()","ruby struct#==()","ruby symbol#==()","ruby uri::generic#==()","ruby unboundmethod#==()","ruby win32::sspi::sspiresult#==()","rails activemodel::name#===()","rails activesupport::comparewithrange#===()","rails activesupport::notifications::fanout::subscribers::matcher::allmessages#===()","rails mime::type#===()","rails time::===()","ruby bigdecimal#===()","ruby date#===()","ruby enumerator::arithmeticsequence#===()","ruby falseclass#===()","ruby float#===()","ruby gem::dependency#===()","ruby gem::platform#===()","ruby gem::requirement#===()","ruby ipaddr#===()","ruby integer#===()","ruby method#===()","ruby module#===()","ruby nilclass#===()","ruby object#===()","ruby openssl::bn#===()","ruby pathname#===()","ruby proc#===()","ruby range#===()","ruby regexp#===()","ruby rinda::drbobjecttemplate#===()","ruby rinda::template#===()","ruby rinda::templateentry#===()","ruby set#===()","ruby string#===()","ruby symbol#===()","ruby systemcallerror::===()","ruby trueclass#===()","rails activemodel::name#=~()","rails activesupport::timezone#=~()","rails mime::type#=~()","ruby gem::dependency#=~()","ruby gem::platform#=~()","ruby gem::requirement#=~()","ruby nilclass#=~()","ruby regexp#=~()","ruby string#=~()","ruby symbol#=~()","ruby bigdecimal#>()","ruby comparable#>()","ruby float#>()","ruby hash#>()","ruby integer#>()","ruby module#>()","ruby set#>()","ruby bigdecimal#>=()","ruby comparable#>=()","ruby float#>=()","ruby hash#>=()","ruby integer#>=()","ruby module#>=()","ruby set#>=()","ruby date#>>()","ruby ipaddr#>>()","ruby integer#>>()","ruby method#>>()","ruby openssl::bn#>>()","ruby proc#>>()","ruby process::status#>>()","ruby acl","ruby acl::aclentry","ruby acl::acllist","ruby argf","ruby abbrev","rails abstractcontroller","rails abstractcontroller::actionnotfound","rails abstractcontroller::base","rails abstractcontroller::caching","rails abstractcontroller::caching::classmethods","rails abstractcontroller::caching::configmethods","rails abstractcontroller::caching::fragments","rails abstractcontroller::caching::fragments::classmethods","rails abstractcontroller::callbacks","rails abstractcontroller::callbacks::classmethods","rails abstractcontroller::collector","rails abstractcontroller::doublerendererror","rails abstractcontroller::helpers","rails abstractcontroller::helpers::classmethods","rails abstractcontroller::helpers::missinghelpererror","rails abstractcontroller::railties","rails abstractcontroller::railties::routeshelpers","rails abstractcontroller::rendering","rails abstractcontroller::translation","rails abstractcontroller::urlfor","rails abstractcontroller::urlfor::classmethods","rails actioncable","rails actioncable::channel","rails actioncable::channel::base","rails actioncable::channel::broadcasting","rails actioncable::channel::broadcasting::classmethods","rails actioncable::channel::callbacks","rails actioncable::channel::callbacks::classmethods","rails actioncable::channel::naming","rails actioncable::channel::naming::classmethods","rails actioncable::channel::periodictimers","rails actioncable::channel::periodictimers::classmethods","rails actioncable::channel::streams","rails actioncable::connection","rails actioncable::connection::authorization","rails actioncable::connection::authorization::unauthorizederror","rails actioncable::connection::base","rails actioncable::connection::identification","rails actioncable::connection::identification::classmethods","rails actioncable::connection::internalchannel","rails actioncable::connection::streameventloop","rails actioncable::connection::taggedloggerproxy","rails actioncable::helpers","rails actioncable::helpers::actioncablehelper","rails actioncable::remoteconnections","rails actioncable::remoteconnections::remoteconnection","rails actioncable::remoteconnections::remoteconnection::invalididentifierserror","rails actioncable::server","rails actioncable::server::base","rails actioncable::server::broadcasting","rails actioncable::server::broadcasting::broadcaster","rails actioncable::server::configuration","rails actioncable::server::worker","rails actioncable::server::worker::activerecordconnectionmanagement","rails actioncable::subscriptionadapter","rails actioncable::subscriptionadapter::async","rails actioncable::subscriptionadapter::async::asyncsubscribermap","rails actioncable::subscriptionadapter::base","rails actioncable::subscriptionadapter::postgresql","rails actioncable::subscriptionadapter::postgresql::listener","rails actioncable::subscriptionadapter::redis","rails actioncable::subscriptionadapter::redis::listener","rails actioncable::subscriptionadapter::redis::listener::subscribedclient","rails actioncable::subscriptionadapter::subscribermap","rails actioncable::version","rails actioncontroller","rails actioncontroller::api","rails actioncontroller::apirendering","rails actioncontroller::base","rails actioncontroller::caching","rails actioncontroller::conditionalget","rails actioncontroller::conditionalget::classmethods","rails actioncontroller::contentsecuritypolicy","rails actioncontroller::contentsecuritypolicy::classmethods","rails actioncontroller::cookies","rails actioncontroller::datastreaming","rails actioncontroller::defaultheaders","rails actioncontroller::defaultheaders::classmethods","rails actioncontroller::etagwithflash","rails actioncontroller::etagwithtemplatedigest","rails actioncontroller::flash","rails actioncontroller::flash::classmethods","rails actioncontroller::formbuilder","rails actioncontroller::formbuilder::classmethods","rails actioncontroller::head","rails actioncontroller::helpers","rails actioncontroller::helpers::classmethods","rails actioncontroller::httpauthentication","rails actioncontroller::httpauthentication::basic","rails actioncontroller::httpauthentication::basic::controllermethods","rails actioncontroller::httpauthentication::basic::controllermethods::classmethods","rails actioncontroller::httpauthentication::digest","rails actioncontroller::httpauthentication::digest::controllermethods","rails actioncontroller::httpauthentication::token","rails actioncontroller::httpauthentication::token::controllermethods","rails actioncontroller::implicitrender","rails actioncontroller::instrumentation","rails actioncontroller::instrumentation::classmethods","rails actioncontroller::live","rails actioncontroller::live::classmethods","rails actioncontroller::live::clientdisconnected","rails actioncontroller::live::sse","rails actioncontroller::logsubscriber","rails actioncontroller::logging","rails actioncontroller::logging::classmethods","rails actioncontroller::metal","rails actioncontroller::mimeresponds","rails actioncontroller::mimeresponds::collector","rails actioncontroller::missingrenderer","rails actioncontroller::parameterencoding","rails actioncontroller::parameterencoding::classmethods","rails actioncontroller::parametermissing","rails actioncontroller::parameters","rails actioncontroller::paramswrapper","rails actioncontroller::paramswrapper::options","rails actioncontroller::paramswrapper::options::classmethods","rails actioncontroller::permissionspolicy","rails actioncontroller::permissionspolicy::classmethods","rails actioncontroller::railties","rails actioncontroller::railties::helpers","rails actioncontroller::redirecting","rails actioncontroller::redirecting::unsaferedirecterror","rails actioncontroller::renderer","rails actioncontroller::renderers","rails actioncontroller::renderers::all","rails actioncontroller::renderers::classmethods","rails actioncontroller::rendering","rails actioncontroller::rendering::classmethods","rails actioncontroller::requestforgeryprotection","rails actioncontroller::requestforgeryprotection::classmethods","rails actioncontroller::requestforgeryprotection::protectionmethods","rails actioncontroller::requestforgeryprotection::protectionmethods::exception","rails actioncontroller::requestforgeryprotection::protectionmethods::nullsession","rails actioncontroller::requestforgeryprotection::protectionmethods::resetsession","rails actioncontroller::rescue","rails actioncontroller::respondtomismatcherror","rails actioncontroller::streaming","rails actioncontroller::strongparameters","rails actioncontroller::unfilteredparameters","rails actioncontroller::unpermittedparameters","rails actioncontroller::urlfor","rails actiondispatch","rails actiondispatch::callbacks","rails actiondispatch::contentsecuritypolicy","rails actiondispatch::contentsecuritypolicy::middleware","rails actiondispatch::contentsecuritypolicy::request","rails actiondispatch::cookies","rails actiondispatch::cookies::chainedcookiejars","rails actiondispatch::debugexceptions","rails actiondispatch::debuglocks","rails actiondispatch::exceptionwrapper","rails actiondispatch::executor","rails actiondispatch::filehandler","rails actiondispatch::flash","rails actiondispatch::flash::flashhash","rails actiondispatch::flash::requestmethods","rails actiondispatch::hostauthorization","rails actiondispatch::http","rails actiondispatch::http::cache","rails actiondispatch::http::cache::request","rails actiondispatch::http::cache::response","rails actiondispatch::http::filterparameters","rails actiondispatch::http::filterredirect","rails actiondispatch::http::headers","rails actiondispatch::http::mimenegotiation","rails actiondispatch::http::mimenegotiation::invalidtype","rails actiondispatch::http::parameters","rails actiondispatch::http::parameters::classmethods","rails actiondispatch::http::parameters::parseerror","rails actiondispatch::http::url","rails actiondispatch::http::uploadedfile","rails actiondispatch::illegalstateerror","rails actiondispatch::journey","rails actiondispatch::journey::format","rails actiondispatch::journey::formatter","rails actiondispatch::journey::formatter::missingroute","rails actiondispatch::journey::formatter::routewithparams","rails actiondispatch::journey::parser","rails actiondispatch::journey::route","rails actiondispatch::journey::route::verbmatchers","rails actiondispatch::journey::route::verbmatchers::all","rails actiondispatch::journey::route::verbmatchers::unknown","rails actiondispatch::middlewarestack","rails actiondispatch::middlewarestack::instrumentationproxy","rails actiondispatch::middlewarestack::middleware","rails actiondispatch::missingcontroller","rails actiondispatch::permissionspolicy","rails actiondispatch::permissionspolicy::middleware","rails actiondispatch::permissionspolicy::request","rails actiondispatch::publicexceptions","rails actiondispatch::railsentitystore","rails actiondispatch::railsmetastore","rails actiondispatch::reloader","rails actiondispatch::remoteip","rails actiondispatch::remoteip::getip","rails actiondispatch::remoteip::ipspoofattackerror","rails actiondispatch::request","rails actiondispatch::requestcookiemethods","rails actiondispatch::requestid","rails actiondispatch::response","rails actiondispatch::response::rackbody","rails actiondispatch::routing","rails actiondispatch::routing::consoleformatter","rails actiondispatch::routing::consoleformatter::base","rails actiondispatch::routing::consoleformatter::expanded","rails actiondispatch::routing::consoleformatter::sheet","rails actiondispatch::routing::htmltableformatter","rails actiondispatch::routing::mapper","rails actiondispatch::routing::mapper::base","rails actiondispatch::routing::mapper::concerns","rails actiondispatch::routing::mapper::customurls","rails actiondispatch::routing::mapper::httphelpers","rails actiondispatch::routing::mapper::resources","rails actiondispatch::routing::mapper::scoping","rails actiondispatch::routing::pathredirect","rails actiondispatch::routing::polymorphicroutes","rails actiondispatch::routing::redirection","rails actiondispatch::routing::routeset","rails actiondispatch::routing::routeset::customurlhelper","rails actiondispatch::routing::routeset::dispatcher","rails actiondispatch::routing::routeset::generator","rails actiondispatch::routing::routeset::mountedhelpers","rails actiondispatch::routing::routeset::namedroutecollection","rails actiondispatch::routing::routeset::namedroutecollection::urlhelper","rails actiondispatch::routing::routeset::namedroutecollection::urlhelper::optimizedurlhelper","rails actiondispatch::routing::routeset::staticdispatcher","rails actiondispatch::routing::urlfor","rails actiondispatch::ssl","rails actiondispatch::servertiming","rails actiondispatch::session","rails actiondispatch::session::abstractsecurestore","rails actiondispatch::session::abstractstore","rails actiondispatch::session::cachestore","rails actiondispatch::session::compatibility","rails actiondispatch::session::cookiestore","rails actiondispatch::session::cookiestore::sessionid","rails actiondispatch::session::memcachestore","rails actiondispatch::session::stalesessioncheck","rails actiondispatch::showexceptions","rails actiondispatch::static","rails actionmailbox","rails actionmailbox::base","rails actionmailbox::basecontroller","rails actionmailbox::callbacks","rails actionmailbox::engine","rails actionmailbox::generators","rails actionmailbox::generators::installgenerator","rails actionmailbox::inboundemail","rails actionmailbox::inboundemail::incineratable","rails actionmailbox::inboundemail::incineratable::incineration","rails actionmailbox::inboundemail::messageid","rails actionmailbox::inboundemail::routable","rails actionmailbox::inboundemails","rails actionmailbox::incinerationjob","rails actionmailbox::ingresses","rails actionmailbox::ingresses::mailgun","rails actionmailbox::ingresses::mailgun::inboundemailscontroller","rails actionmailbox::ingresses::mailgun::inboundemailscontroller::authenticator","rails actionmailbox::ingresses::mandrill","rails actionmailbox::ingresses::mandrill::inboundemailscontroller","rails actionmailbox::ingresses::mandrill::inboundemailscontroller::authenticator","rails actionmailbox::ingresses::postmark","rails actionmailbox::ingresses::postmark::inboundemailscontroller","rails actionmailbox::ingresses::relay","rails actionmailbox::ingresses::relay::inboundemailscontroller","rails actionmailbox::ingresses::sendgrid","rails actionmailbox::ingresses::sendgrid::inboundemailscontroller","rails actionmailbox::relayer","rails actionmailbox::relayer::result","rails actionmailbox::router","rails actionmailbox::router::route","rails actionmailbox::router::routingerror","rails actionmailbox::routing","rails actionmailbox::routingjob","rails actionmailbox::version","rails actionmailer","rails actionmailer::base","rails actionmailer::base::lateattachmentsproxy","rails actionmailer::collector","rails actionmailer::deliverymethods","rails actionmailer::deliverymethods::classmethods","rails actionmailer::inlinepreviewinterceptor","rails actionmailer::logsubscriber","rails actionmailer::mailhelper","rails actionmailer::messagedelivery","rails actionmailer::parameterized","rails actionmailer::parameterized::classmethods","rails actionmailer::preview","rails actionmailer::previews","rails actionmailer::previews::classmethods","rails actionmailer::rescuable","rails actionmailer::version","rails actionpack","rails actionpack::version","rails actiontext","rails actiontext::attachable","rails actiontext::attachables","rails actiontext::attachables::contentattachment","rails actiontext::attachables::missingattachable","rails actiontext::attachables::remoteimage","rails actiontext::attachment","rails actiontext::attachmentgallery","rails actiontext::attachments","rails actiontext::attachments::caching","rails actiontext::attachments::minification","rails actiontext::attachments::trixconversion","rails actiontext::attribute","rails actiontext::content","rails actiontext::contenthelper","rails actiontext::encryptedrichtext","rails actiontext::encryption","rails actiontext::engine","rails actiontext::fixtureset","rails actiontext::fragment","rails actiontext::generators","rails actiontext::generators::installgenerator","rails actiontext::htmlconversion","rails actiontext::plaintextconversion","rails actiontext::richtext","rails actiontext::serialization","rails actiontext::taghelper","rails actiontext::trixattachment","rails actiontext::version","rails actionview","rails actionview::abstractrenderer","rails actionview::abstractrenderer::renderedcollection","rails actionview::abstractrenderer::renderedcollection::emptycollection","rails actionview::base","rails actionview::cacheexpiry","rails actionview::cacheexpiry::executor","rails actionview::cacheexpiry::viewmodificationwatcher","rails actionview::context","rails actionview::digestor","rails actionview::digestor::injected","rails actionview::digestor::missing","rails actionview::digestor::node","rails actionview::digestor::nulllogger","rails actionview::digestor::partial","rails actionview::filesystemresolver","rails actionview::helpers","rails actionview::helpers::activemodelhelper","rails actionview::helpers::activemodelinstancetag","rails actionview::helpers::assettaghelper","rails actionview::helpers::asseturlhelper","rails actionview::helpers::atomfeedhelper","rails actionview::helpers::cachehelper","rails actionview::helpers::cachehelper::uncacheablefragmenterror","rails actionview::helpers::capturehelper","rails actionview::helpers::csphelper","rails actionview::helpers::csrfhelper","rails actionview::helpers::datehelper","rails actionview::helpers::debughelper","rails actionview::helpers::formbuilder","rails actionview::helpers::formhelper","rails actionview::helpers::formoptionshelper","rails actionview::helpers::formtaghelper","rails actionview::helpers::javascripthelper","rails actionview::helpers::numberhelper","rails actionview::helpers::numberhelper::invalidnumbererror","rails actionview::helpers::outputsafetyhelper","rails actionview::helpers::renderinghelper","rails actionview::helpers::sanitizehelper","rails actionview::helpers::taghelper","rails actionview::helpers::tags","rails actionview::helpers::tags::actiontext","rails actionview::helpers::texthelper","rails actionview::helpers::translationhelper","rails actionview::helpers::urlhelper","rails actionview::helpers::urlhelper::classmethods","rails actionview::layouts","rails actionview::layouts::classmethods","rails actionview::logsubscriber","rails actionview::lookupcontext","rails actionview::lookupcontext::detailscache","rails actionview::lookupcontext::viewpaths","rails actionview::partialiteration","rails actionview::partialrenderer","rails actionview::recordidentifier","rails actionview::renderer","rails actionview::rendering","rails actionview::rendering::classmethods","rails actionview::resolver","rails actionview::routingurlfor","rails actionview::template","rails actionview::template::handlers","rails actionview::template::handlers::builder","rails actionview::template::handlers::erb","rails actionview::template::handlers::html","rails actionview::template::handlers::raw","rails actionview::template::sources","rails actionview::template::sources::file","rails actionview::template::types","rails actionview::template::types::type","rails actionview::templatedetails","rails actionview::templatedetails::requested","rails actionview::templatepath","rails actionview::unboundtemplate","rails actionview::version","rails actionview::viewpaths","rails actionview::viewpaths::classmethods","rails activejob","rails activejob::arguments","rails activejob::arguments::hash","rails activejob::base","rails activejob::callbacks","rails activejob::callbacks::classmethods","rails activejob::core","rails activejob::core::classmethods","rails activejob::deserializationerror","rails activejob::enqueueerror","rails activejob::enqueuing","rails activejob::enqueuing::classmethods","rails activejob::exceptions","rails activejob::exceptions::classmethods","rails activejob::execution","rails activejob::execution::classmethods","rails activejob::queueadapter","rails activejob::queueadapter::classmethods","rails activejob::queueadapters","rails activejob::queueadapters::asyncadapter","rails activejob::queueadapters::backburneradapter","rails activejob::queueadapters::delayedjobadapter","rails activejob::queueadapters::inlineadapter","rails activejob::queueadapters::queadapter","rails activejob::queueadapters::queueclassicadapter","rails activejob::queueadapters::resqueadapter","rails activejob::queueadapters::sidekiqadapter","rails activejob::queueadapters::sneakersadapter","rails activejob::queueadapters::suckerpunchadapter","rails activejob::queuename","rails activejob::queuename::classmethods","rails activejob::queuepriority","rails activejob::queuepriority::classmethods","rails activejob::serializationerror","rails activejob::serializers","rails activejob::serializers::objectserializer","rails activejob::serializers::rangeserializer","rails activejob::version","rails activemodel","rails activemodel::api","rails activemodel::attributeassignment","rails activemodel::attributemethods","rails activemodel::attributemethods::classmethods","rails activemodel::attributes","rails activemodel::attributes::classmethods","rails activemodel::callbacks","rails activemodel::conversion","rails activemodel::dirty","rails activemodel::eachvalidator","rails activemodel::error","rails activemodel::errors","rails activemodel::forbiddenattributeserror","rails activemodel::lint","rails activemodel::lint::tests","rails activemodel::missingattributeerror","rails activemodel::model","rails activemodel::name","rails activemodel::naming","rails activemodel::nestederror","rails activemodel::rangeerror","rails activemodel::securepassword","rails activemodel::securepassword::classmethods","rails activemodel::securepassword::instancemethodsonactivation","rails activemodel::serialization","rails activemodel::serializers","rails activemodel::serializers::json","rails activemodel::strictvalidationfailed","rails activemodel::translation","rails activemodel::type","rails activemodel::type::boolean","rails activemodel::type::helpers","rails activemodel::type::helpers::acceptsmultiparametertime","rails activemodel::type::helpers::acceptsmultiparametertime::instancemethods","rails activemodel::type::helpers::mutable","rails activemodel::type::helpers::numeric","rails activemodel::type::helpers::timevalue","rails activemodel::type::helpers::timezone","rails activemodel::type::value","rails activemodel::unknownattributeerror","rails activemodel::version","rails activemodel::validationerror","rails activemodel::validations","rails activemodel::validations::acceptancevalidator","rails activemodel::validations::acceptancevalidator::lazilydefineattributes","rails activemodel::validations::callbacks","rails activemodel::validations::callbacks::classmethods","rails activemodel::validations::classmethods","rails activemodel::validations::helpermethods","rails activemodel::validator","rails activerecord","rails activerecord::activejobrequirederror","rails activerecord::activerecorderror","rails activerecord::adapternotfound","rails activerecord::adapternotspecified","rails activerecord::adaptertimeout","rails activerecord::aggregations","rails activerecord::aggregations::classmethods","rails activerecord::associationtypemismatch","rails activerecord::associations","rails activerecord::associations::classmethods","rails activerecord::associations::collectionproxy","rails activerecord::associations::preloader","rails activerecord::associations::preloader::association","rails activerecord::associations::preloader::association::loaderquery","rails activerecord::associations::preloader::association::loaderrecords","rails activerecord::asynchronousqueryinsidetransactionerror","rails activerecord::attributeassignment","rails activerecord::attributeassignmenterror","rails activerecord::attributemethods","rails activerecord::attributemethods::beforetypecast","rails activerecord::attributemethods::classmethods","rails activerecord::attributemethods::dirty","rails activerecord::attributemethods::dirty::classmethods","rails activerecord::attributemethods::primarykey","rails activerecord::attributemethods::primarykey::classmethods","rails activerecord::attributemethods::query","rails activerecord::attributemethods::read","rails activerecord::attributemethods::serialization","rails activerecord::attributemethods::serialization::classmethods","rails activerecord::attributemethods::serialization::columnnotserializableerror","rails activerecord::attributemethods::timezoneconversion","rails activerecord::attributemethods::write","rails activerecord::attributes","rails activerecord::attributes::classmethods","rails activerecord::autosaveassociation","rails activerecord::base","rails activerecord::batches","rails activerecord::batches::batchenumerator","rails activerecord::calculations","rails activerecord::callbacks","rails activerecord::callbacks::classmethods","rails activerecord::configurationerror","rails activerecord::connectionadapters","rails activerecord::connectionadapters::abstractadapter","rails activerecord::connectionadapters::abstractadapter::version","rails activerecord::connectionadapters::abstractmysqladapter","rails activerecord::connectionadapters::column","rails activerecord::connectionadapters::columnmethods","rails activerecord::connectionadapters::connectionhandler","rails activerecord::connectionadapters::connectionpool","rails activerecord::connectionadapters::connectionpool::queue","rails activerecord::connectionadapters::connectionpool::reaper","rails activerecord::connectionadapters::databaselimits","rails activerecord::connectionadapters::databasestatements","rails activerecord::connectionadapters::deduplicable","rails activerecord::connectionadapters::deduplicable::classmethods","rails activerecord::connectionadapters::mysql","rails activerecord::connectionadapters::mysql::columnmethods","rails activerecord::connectionadapters::mysql::databasestatements","rails activerecord::connectionadapters::mysql::table","rails activerecord::connectionadapters::mysql::tabledefinition","rails activerecord::connectionadapters::mysql2adapter","rails activerecord::connectionadapters::nullcolumn","rails activerecord::connectionadapters::postgresql","rails activerecord::connectionadapters::postgresql::altertable","rails activerecord::connectionadapters::postgresql::columnmethods","rails activerecord::connectionadapters::postgresql::databasestatements","rails activerecord::connectionadapters::postgresql::oid","rails activerecord::connectionadapters::postgresql::oid::bit","rails activerecord::connectionadapters::postgresql::oid::bit::data","rails activerecord::connectionadapters::postgresql::quoting","rails activerecord::connectionadapters::postgresql::quoting::integeroutof64bitrange","rails activerecord::connectionadapters::postgresql::schemastatements","rails activerecord::connectionadapters::postgresql::table","rails activerecord::connectionadapters::postgresql::tabledefinition","rails activerecord::connectionadapters::postgresql::typemetadata","rails activerecord::connectionadapters::postgresqladapter","rails activerecord::connectionadapters::querycache","rails activerecord::connectionadapters::querycache::connectionpoolconfiguration","rails activerecord::connectionadapters::quoting","rails activerecord::connectionadapters::realtransaction","rails activerecord::connectionadapters::sqlite3","rails activerecord::connectionadapters::sqlite3::databasestatements","rails activerecord::connectionadapters::sqlite3::tabledefinition","rails activerecord::connectionadapters::sqlite3adapter","rails activerecord::connectionadapters::savepointtransaction","rails activerecord::connectionadapters::savepoints","rails activerecord::connectionadapters::schemacache","rails activerecord::connectionadapters::schemastatements","rails activerecord::connectionadapters::sqltypemetadata","rails activerecord::connectionadapters::table","rails activerecord::connectionadapters::tabledefinition","rails activerecord::connectionadapters::transactionstate","rails activerecord::connectionhandling","rails activerecord::connectionnotestablished","rails activerecord::connectiontimeouterror","rails activerecord::core","rails activerecord::core::classmethods","rails activerecord::core::inspectionmask","rails activerecord::countercache","rails activerecord::countercache::classmethods","rails activerecord::dangerousattributeerror","rails activerecord::databasealreadyexists","rails activerecord::databaseconfigurations","rails activerecord::databaseconfigurations::hashconfig","rails activerecord::databaseconfigurations::invalidconfigurationerror","rails activerecord::databaseconfigurations::urlconfig","rails activerecord::databaseconnectionerror","rails activerecord::deadlocked","rails activerecord::delegatedtype","rails activerecord::destroyassociationasyncerror","rails activerecord::destroyassociationasyncjob","rails activerecord::dynamicmatchers","rails activerecord::dynamicmatchers::findby","rails activerecord::dynamicmatchers::findbybang","rails activerecord::dynamicmatchers::method","rails activerecord::eagerloadpolymorphicerror","rails activerecord::encryption","rails activerecord::encryption::cipher","rails activerecord::encryption::cipher::aes256gcm","rails activerecord::encryption::config","rails activerecord::encryption::configurable","rails activerecord::encryption::context","rails activerecord::encryption::contexts","rails activerecord::encryption::derivedsecretkeyprovider","rails activerecord::encryption::deterministickeyprovider","rails activerecord::encryption::encryptablerecord","rails activerecord::encryption::encryptedattributetype","rails activerecord::encryption::encryptedfixtures","rails activerecord::encryption::encryptingonlyencryptor","rails activerecord::encryption::encryptor","rails activerecord::encryption::envelopeencryptionkeyprovider","rails activerecord::encryption::errors","rails activerecord::encryption::errors::base","rails activerecord::encryption::errors::configuration","rails activerecord::encryption::errors::decryption","rails activerecord::encryption::errors::encoding","rails activerecord::encryption::errors::encryptedcontentintegrity","rails activerecord::encryption::errors::encryption","rails activerecord::encryption::errors::forbiddenclass","rails activerecord::encryption::extendeddeterministicqueries","rails activerecord::encryption::extendeddeterministicqueries::additionalvalue","rails activerecord::encryption::extendeddeterministicqueries::corequeries","rails activerecord::encryption::extendeddeterministicqueries::encryptedqueryargumentprocessor","rails activerecord::encryption::extendeddeterministicqueries::extendedencryptabletype","rails activerecord::encryption::extendeddeterministicqueries::inwithadditionalvalues","rails activerecord::encryption::extendeddeterministicqueries::relationqueries","rails activerecord::encryption::extendeddeterministicuniquenessvalidator","rails activerecord::encryption::extendeddeterministicuniquenessvalidator::encrypteduniquenessvalidator","rails activerecord::encryption::key","rails activerecord::encryption::keygenerator","rails activerecord::encryption::keyprovider","rails activerecord::encryption::message","rails activerecord::encryption::messageserializer","rails activerecord::encryption::nullencryptor","rails activerecord::encryption::properties","rails activerecord::encryption::readonlynullencryptor","rails activerecord::encryption::scheme","rails activerecord::enum","rails activerecord::environmentmismatcherror","rails activerecord::exclusiveconnectiontimeouterror","rails activerecord::explain","rails activerecord::faker","rails activerecord::findermethods","rails activerecord::fixtureset","rails activerecord::fixtureset::classcache","rails activerecord::futureresult","rails activerecord::futureresult::eventbuffer","rails activerecord::generators","rails activerecord::generators::migration","rails activerecord::generators::migration::classmethods","rails activerecord::immutablerelation","rails activerecord::inheritance","rails activerecord::inheritance::classmethods","rails activerecord::integration","rails activerecord::integration::classmethods","rails activerecord::invalidforeignkey","rails activerecord::irreversiblemigration","rails activerecord::irreversibleordererror","rails activerecord::lockwaittimeout","rails activerecord::locking","rails activerecord::locking::optimistic","rails activerecord::locking::optimistic::classmethods","rails activerecord::locking::pessimistic","rails activerecord::logsubscriber","rails activerecord::middleware","rails activerecord::middleware::databaseselector","rails activerecord::middleware::shardselector","rails activerecord::migration","rails activerecord::migration::checkpending","rails activerecord::migration::commandrecorder","rails activerecord::migration::compatibility","rails activerecord::migration::compatibility::v4_2","rails activerecord::migration::compatibility::v4_2::tabledefinition","rails activerecord::migration::compatibility::v5_0","rails activerecord::migration::compatibility::v5_0::tabledefinition","rails activerecord::migration::compatibility::v5_1","rails activerecord::migration::compatibility::v5_2","rails activerecord::migration::compatibility::v5_2::commandrecorder","rails activerecord::migration::compatibility::v5_2::tabledefinition","rails activerecord::migration::compatibility::v6_0","rails activerecord::migration::compatibility::v6_0::referencedefinition","rails activerecord::migration::compatibility::v6_0::tabledefinition","rails activerecord::migration::compatibility::v6_1","rails activerecord::migration::compatibility::v6_1::postgresqlcompat","rails activerecord::migration::compatibility::v6_1::tabledefinition","rails activerecord::migrationcontext","rails activerecord::mismatchedforeignkey","rails activerecord::modelschema","rails activerecord::modelschema::classmethods","rails activerecord::multiparameterassignmenterrors","rails activerecord::nestedattributes","rails activerecord::nestedattributes::classmethods","rails activerecord::nestedattributes::toomanyrecords","rails activerecord::nodatabaseerror","rails activerecord::notouching","rails activerecord::notouching::classmethods","rails activerecord::notnullviolation","rails activerecord::persistence","rails activerecord::persistence::classmethods","rails activerecord::preparedstatementcacheexpired","rails activerecord::preparedstatementinvalid","rails activerecord::queryaborted","rails activerecord::querycache","rails activerecord::querycache::classmethods","rails activerecord::querycanceled","rails activerecord::querylogs","rails activerecord::querymethods","rails activerecord::querymethods::wherechain","rails activerecord::querying","rails activerecord::rangeerror","rails activerecord::readonlyerror","rails activerecord::readonlyrecord","rails activerecord::readonlyattributes","rails activerecord::readonlyattributes::classmethods","rails activerecord::recordinvalid","rails activerecord::recordnotdestroyed","rails activerecord::recordnotfound","rails activerecord::recordnotsaved","rails activerecord::recordnotunique","rails activerecord::reflection","rails activerecord::reflection::classmethods","rails activerecord::reflection::macroreflection","rails activerecord::relation","rails activerecord::relation::recordfetchwarning","rails activerecord::result","rails activerecord::rollback","rails activerecord::sanitization","rails activerecord::sanitization::classmethods","rails activerecord::schema","rails activerecord::schema::definition","rails activerecord::schema::definition::classmethods","rails activerecord::scoping","rails activerecord::scoping::default","rails activerecord::scoping::default::classmethods","rails activerecord::scoping::named","rails activerecord::scoping::named::classmethods","rails activerecord::securetoken","rails activerecord::securetoken::classmethods","rails activerecord::securetoken::minimumlengtherror","rails activerecord::serialization","rails activerecord::serializationfailure","rails activerecord::serializationtypemismatch","rails activerecord::signedid","rails activerecord::signedid::classmethods","rails activerecord::solerecordexceeded","rails activerecord::spawnmethods","rails activerecord::staleobjecterror","rails activerecord::statementcache","rails activerecord::statementcache::partialquerycollector","rails activerecord::statementinvalid","rails activerecord::statementtimeout","rails activerecord::store","rails activerecord::store::classmethods","rails activerecord::strictloadingviolationerror","rails activerecord::subclassnotfound","rails activerecord::suppressor","rails activerecord::suppressor::classmethods","rails activerecord::tablenotspecified","rails activerecord::tasks","rails activerecord::tasks::databasetasks","rails activerecord::timestamp","rails activerecord::transactionisolationerror","rails activerecord::transactionrollbackerror","rails activerecord::transactions","rails activerecord::transactions::classmethods","rails activerecord::translation","rails activerecord::type","rails activerecord::type::biginteger","rails activerecord::type::binary","rails activerecord::type::boolean","rails activerecord::type::date","rails activerecord::type::datetime","rails activerecord::type::decimal","rails activerecord::type::float","rails activerecord::type::immutablestring","rails activerecord::type::integer","rails activerecord::type::internal","rails activerecord::type::internal::timezone","rails activerecord::type::json","rails activerecord::type::string","rails activerecord::type::time","rails activerecord::type::value","rails activerecord::unknownattributeerror","rails activerecord::unknownattributereference","rails activerecord::unknownprimarykey","rails activerecord::version","rails activerecord::validations","rails activerecord::validations::classmethods","rails activerecord::valuetoolong","rails activerecord::wrappeddatabaseexception","rails activestorage","rails activestorage::analyzejob","rails activestorage::analyzer","rails activestorage::analyzer::audioanalyzer","rails activestorage::analyzer::imageanalyzer","rails activestorage::analyzer::imageanalyzer::imagemagick","rails activestorage::analyzer::imageanalyzer::vips","rails activestorage::analyzer::videoanalyzer","rails activestorage::attached","rails activestorage::attached::many","rails activestorage::attached::model","rails activestorage::attached::one","rails activestorage::attachment","rails activestorage::basecontroller","rails activestorage::basejob","rails activestorage::blob","rails activestorage::blob::analyzable","rails activestorage::blob::identifiable","rails activestorage::blob::representable","rails activestorage::blobs","rails activestorage::blobs::proxycontroller","rails activestorage::blobs::redirectcontroller","rails activestorage::directuploadscontroller","rails activestorage::disablesession","rails activestorage::diskcontroller","rails activestorage::error","rails activestorage::filenotfounderror","rails activestorage::filename","rails activestorage::fixtureset","rails activestorage::integrityerror","rails activestorage::invariableerror","rails activestorage::logsubscriber","rails activestorage::mirrorjob","rails activestorage::preview","rails activestorage::preview::unprocessederror","rails activestorage::previewerror","rails activestorage::previewer","rails activestorage::previewer::mupdfpreviewer","rails activestorage::previewer::popplerpdfpreviewer","rails activestorage::previewer::videopreviewer","rails activestorage::purgejob","rails activestorage::reflection","rails activestorage::reflection::activerecordextensions","rails activestorage::reflection::activerecordextensions::classmethods","rails activestorage::representations","rails activestorage::representations::proxycontroller","rails activestorage::representations::redirectcontroller","rails activestorage::service","rails activestorage::service::azurestorageservice","rails activestorage::service::diskservice","rails activestorage::service::gcsservice","rails activestorage::service::gcsservice::metadataservererror","rails activestorage::service::gcsservice::metadataservernotfounderror","rails activestorage::service::mirrorservice","rails activestorage::service::s3service","rails activestorage::setcurrent","rails activestorage::streaming","rails activestorage::transformers","rails activestorage::transformers::imageprocessingtransformer","rails activestorage::transformers::imageprocessingtransformer::unsupportedimageprocessingargument","rails activestorage::transformers::imageprocessingtransformer::unsupportedimageprocessingmethod","rails activestorage::transformers::transformer","rails activestorage::unpreviewableerror","rails activestorage::unrepresentableerror","rails activestorage::version","rails activestorage::variant","rails activestorage::variantrecord","rails activestorage::variantwithrecord","rails activestorage::variation","rails activesupport","rails activesupport::actionableerror","rails activesupport::actionableerror::classmethods","rails activesupport::actionableerror::nonactionable","rails activesupport::arrayinquirer","rails activesupport::autoload","rails activesupport::backtracecleaner","rails activesupport::benchmarkable","rails activesupport::cache","rails activesupport::cache::coders","rails activesupport::cache::coders::loader","rails activesupport::cache::coders::rails61coder","rails activesupport::cache::coders::rails70coder","rails activesupport::cache::connectionpoollike","rails activesupport::cache::filestore","rails activesupport::cache::memcachestore","rails activesupport::cache::memcachestore::coders","rails activesupport::cache::memcachestore::coders::loader","rails activesupport::cache::memcachestore::coders::rails61coder","rails activesupport::cache::memcachestore::coders::rails70coder","rails activesupport::cache::memcachestore::duplocalcache","rails activesupport::cache::memcachestore::duplocalcache::duplocalstore","rails activesupport::cache::memorystore","rails activesupport::cache::nullstore","rails activesupport::cache::rediscachestore","rails activesupport::cache::store","rails activesupport::cache::strategy","rails activesupport::cache::strategy::localcache","rails activesupport::cache::strategy::localcache::localstore","rails activesupport::cachingkeygenerator","rails activesupport::callbacks","rails activesupport::callbacks::calltemplate","rails activesupport::callbacks::calltemplate::instanceexec0","rails activesupport::callbacks::calltemplate::instanceexec1","rails activesupport::callbacks::calltemplate::instanceexec2","rails activesupport::callbacks::calltemplate::methodcall","rails activesupport::callbacks::calltemplate::objectcall","rails activesupport::callbacks::calltemplate::proccall","rails activesupport::callbacks::classmethods","rails activesupport::callbacks::conditionals","rails activesupport::callbacks::conditionals::value","rails activesupport::callbacks::filters","rails activesupport::callbacks::filters::after","rails activesupport::callbacks::filters::before","rails activesupport::codegenerator","rails activesupport::codegenerator::methodset","rails activesupport::comparewithrange","rails activesupport::concern","rails activesupport::concurrency","rails activesupport::concurrency::loadinterlockawaremonitor","rails activesupport::concurrency::sharelock","rails activesupport::configurable","rails activesupport::configurable::classmethods","rails activesupport::configurable::configuration","rails activesupport::configurationfile","rails activesupport::configurationfile::formaterror","rails activesupport::currentattributes","rails activesupport::dependencies","rails activesupport::dependencies::interlock","rails activesupport::dependencies::requiredependency","rails activesupport::deprecation","rails activesupport::deprecation::behavior","rails activesupport::deprecation::deprecatedconstantaccessor","rails activesupport::deprecation::deprecatedconstantproxy","rails activesupport::deprecation::deprecatedinstancevariableproxy","rails activesupport::deprecation::deprecatedobjectproxy","rails activesupport::deprecation::disallowed","rails activesupport::deprecation::methodwrapper","rails activesupport::deprecation::reporting","rails activesupport::deprecationexception","rails activesupport::descendantstracker","rails activesupport::duration","rails activesupport::duration::iso8601parser","rails activesupport::duration::iso8601parser::parsingerror","rails activesupport::encryptedconfiguration","rails activesupport::encryptedfile","rails activesupport::encryptedfile::invalidkeylengtherror","rails activesupport::encryptedfile::missingcontenterror","rails activesupport::encryptedfile::missingkeyerror","rails activesupport::enumerablecoreext","rails activesupport::enumerablecoreext::constants","rails activesupport::errorreporter","rails activesupport::eventedfileupdatechecker","rails activesupport::eventedfileupdatechecker::core","rails activesupport::executionwrapper","rails activesupport::executor","rails activesupport::fileupdatechecker","rails activesupport::forktracker","rails activesupport::forktracker::coreext","rails activesupport::forktracker::coreextprivate","rails activesupport::forktracker::moderncoreext","rails activesupport::gzip","rails activesupport::gzip::stream","rails activesupport::hashwithindifferentaccess","rails activesupport::hashwithindifferentaccess","rails activesupport::inflector","rails activesupport::inflector::inflections","rails activesupport::inflector::inflections::uncountables","rails activesupport::inheritableoptions","rails activesupport::json","rails activesupport::keygenerator","rails activesupport::lazyloadhooks","rails activesupport::logsubscriber","rails activesupport::logger","rails activesupport::logger::simpleformatter","rails activesupport::loggersilence","rails activesupport::messageencryptor","rails activesupport::messageencryptor::invalidmessage","rails activesupport::messageverifier","rails activesupport::messageverifier::invalidsignature","rails activesupport::messages","rails activesupport::messages::rotator","rails activesupport::messages::rotator::encryptor","rails activesupport::messages::rotator::verifier","rails activesupport::multibyte","rails activesupport::multibyte::chars","rails activesupport::multibyte::unicode","rails activesupport::notifications","rails activesupport::notifications::event","rails activesupport::notifications::fanout","rails activesupport::notifications::fanout::subscribers","rails activesupport::notifications::fanout::subscribers::eventobject","rails activesupport::notifications::fanout::subscribers::matcher","rails activesupport::notifications::fanout::subscribers::matcher::allmessages","rails activesupport::notifications::instrumentationsubscribererror","rails activesupport::notifications::instrumenter","rails activesupport::numberhelper","rails activesupport::numericwithformat","rails activesupport::orderedoptions","rails activesupport::parameterfilter","rails activesupport::perthreadregistry","rails activesupport::proxyobject","rails activesupport::rangewithformat","rails activesupport::reloader","rails activesupport::rescuable","rails activesupport::rescuable::classmethods","rails activesupport::safebuffer","rails activesupport::safebuffer::safeconcaterror","rails activesupport::securecomparerotator","rails activesupport::securityutils","rails activesupport::stringinquirer","rails activesupport::subscriber","rails activesupport::taggedlogging","rails activesupport::timewithzone","rails activesupport::timezone","rails activesupport::version","rails activesupport::xmlconverter","rails activesupport::xmlconverter::disallowedtype","rails activesupport::xmlmini","rails activesupport::xmlmini_libxmlsax","rails activesupport::xmlmini_libxmlsax::hashbuilder","rails activesupport::xmlmini_nokogirisax","rails activesupport::xmlmini_nokogirisax::hashbuilder","rails addservicenametoactivestorageblobs","ruby addrinfo","rails announcement","rails announcement::version","rails applicationcable","rails applicationcable::channel","rails applicationcable::connection","rails arel","rails arel::aliaspredication","rails arel::arelerror","rails arel::attributes","rails arel::attributes::attribute","rails arel::collectors","rails arel::collectors::bind","rails arel::collectors::composite","rails arel::collectors::plainstring","rails arel::collectors::sqlstring","rails arel::collectors::substitutebinds","rails arel::crud","rails arel::deletemanager","rails arel::emptyjoinerror","rails arel::expressions","rails arel::factorymethods","rails arel::filterpredications","rails arel::insertmanager","rails arel::math","rails arel::nodes","rails arel::nodes::addition","rails arel::nodes::and","rails arel::nodes::ascending","rails arel::nodes::between","rails arel::nodes::binary","rails arel::nodes::bindparam","rails arel::nodes::bitwiseand","rails arel::nodes::bitwisenot","rails arel::nodes::bitwiseor","rails arel::nodes::bitwiseshiftleft","rails arel::nodes::bitwiseshiftright","rails arel::nodes::bitwisexor","rails arel::nodes::case","rails arel::nodes::comment","rails arel::nodes::concat","rails arel::nodes::contains","rails arel::nodes::count","rails arel::nodes::currentrow","rails arel::nodes::deletestatement","rails arel::nodes::descending","rails arel::nodes::distinct","rails arel::nodes::division","rails arel::nodes::doesnotmatch","rails arel::nodes::equality","rails arel::nodes::extract","rails arel::nodes::false","rails arel::nodes::fetchattribute","rails arel::nodes::filter","rails arel::nodes::following","rails arel::nodes::fullouterjoin","rails arel::nodes::function","rails arel::nodes::greaterthan","rails arel::nodes::greaterthanorequal","rails arel::nodes::grouping","rails arel::nodes::homogeneousin","rails arel::nodes::in","rails arel::nodes::infixoperation","rails arel::nodes::innerjoin","rails arel::nodes::insertstatement","rails arel::nodes::isdistinctfrom","rails arel::nodes::isnotdistinctfrom","rails arel::nodes::joinsource","rails arel::nodes::lessthan","rails arel::nodes::lessthanorequal","rails arel::nodes::matches","rails arel::nodes::multiplication","rails arel::nodes::namedfunction","rails arel::nodes::namedwindow","rails arel::nodes::node","rails arel::nodes::nodeexpression","rails arel::nodes::notequal","rails arel::nodes::notin","rails arel::nodes::notregexp","rails arel::nodes::nullsfirst","rails arel::nodes::nullslast","rails arel::nodes::or","rails arel::nodes::ordering","rails arel::nodes::outerjoin","rails arel::nodes::over","rails arel::nodes::overlaps","rails arel::nodes::preceding","rails arel::nodes::range","rails arel::nodes::regexp","rails arel::nodes::rightouterjoin","rails arel::nodes::rows","rails arel::nodes::selectcore","rails arel::nodes::selectstatement","rails arel::nodes::sqlliteral","rails arel::nodes::stringjoin","rails arel::nodes::subtraction","rails arel::nodes::tablealias","rails arel::nodes::true","rails arel::nodes::unary","rails arel::nodes::unaryoperation","rails arel::nodes::unqualifiedcolumn","rails arel::nodes::updatestatement","rails arel::nodes::valueslist","rails arel::nodes::window","rails arel::nodes::with","rails arel::nodes::withrecursive","rails arel::orderpredications","rails arel::predications","rails arel::selectmanager","rails arel::table","rails arel::treemanager","rails arel::treemanager::statementmethods","rails arel::updatemanager","rails arel::visitors","rails arel::visitors::dot","rails arel::visitors::mysql","rails arel::visitors::postgresql","rails arel::visitors::sqlite","rails arel::visitors::tosql","rails arel::visitors::unsupportedvisiterror","rails arel::visitors::visitor","rails arel::windowpredications","ruby argumenterror","rails array","ruby array","ruby kernel#array()","rails ","ruby base64","ruby basicobject","ruby basicsocket","rails benchmark","ruby benchmark","ruby benchmark::tms","rails bigdecimal","ruby bigdecimal","ruby kernel#bigdecimal()","ruby bigmath","ruby binding","rails ","ruby bundler","ruby cgi","ruby cgi::cookie","ruby cgi::escape","ruby cgi::html3","ruby cgi::html4","ruby cgi::html4fr","ruby cgi::html4tr","ruby cgi::html5","ruby cgi::htmlextension","ruby cgi::invalidencoding","ruby cgi::queryextension","ruby cgi::session","ruby cgi::session::filestore","ruby cgi::session::memorystore","ruby cgi::session::nullstore","ruby cgi::session::pstore","ruby cgi::util","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","ruby ","ruby ","ruby csv","ruby object#csv()","ruby csv::fieldsconverter","ruby csv::inputrecordseparator","ruby csv::invalidencodingerror","ruby csv::malformedcsverror","ruby csv::parser","ruby csv::parser::inputsscanner","ruby csv::parser::invalidencoding","ruby csv::parser::scanner","ruby csv::parser::unexpectederror","ruby csv::row","ruby csv::table","ruby csv::writer","rails class","ruby class","ruby win32::registry::api#closekey()","ruby closedqueueerror","rails codetools","rails codetools::profiler","rails codetools::profiler::requireprofiler","ruby comparable","ruby complex","ruby kernel#complex()","ruby continuation","ruby coreextensions","ruby coreextensions::tcpsocketext","ruby coreextensions::tcpsocketext::initializer","ruby coverage","rails createactionmailboxtables","rails createactiontexttables","rails createactivestoragetables","rails createactivestoragevariantrecords","ruby win32::registry::api#createkey()","ruby irb::currentcontext()","ruby drb","ruby drb::drbarray","ruby drb::drbbadscheme","ruby drb::drbbaduri","ruby drb::drbconn","ruby drb::drbconnerror","ruby drb::drberror","ruby drb::drbidconv","ruby drb::drbidconv","ruby drb::drbmessage","ruby drb::drbobject","ruby drb::drbobject","ruby drb::drbobservable","ruby drb::drbprotocol","ruby drb::drbremoteerror","ruby drb::drbsslsocket","ruby drb::drbsslsocket::sslconfig","ruby drb::drbserver","ruby drb::drbserver::invokemethod18mixin","ruby drb::drbservernotfound","ruby drb::drbtcpsocket","ruby drb::drbunixsocket","ruby drb::drbundumped","ruby drb::drbundumped","ruby drb::drbunknown","ruby drb::drbunknownerror","ruby drb::extserv","ruby drb::extservmanager","ruby drb::gw","ruby drb::gwidconv","ruby drb::threadobject","ruby drb::timeridconv","ruby drb::timeridconv::timerholder2","ruby drb::timeridconv::timerholder2::invalidindexerror","ruby drb::weakidconv","ruby drb::weakidconv::weakset","ruby data","rails date","ruby date","ruby date::error","rails dateandtime","rails dateandtime::calculations","rails dateandtime::compatibility","rails dateandtime::zones","rails datetime","ruby datetime","ruby object#delegateclass()","rails delegator","ruby delegator","ruby win32::registry::api#deletekey()","ruby win32::registry::api#deletevalue()","ruby didyoumean","ruby didyoumean::classnamechecker","ruby didyoumean::classnamechecker::classname","ruby didyoumean::correctable","ruby didyoumean::formatter","ruby didyoumean::jaro","ruby didyoumean::jarowinkler","ruby didyoumean::keyerrorchecker","ruby didyoumean::methodnamechecker","ruby didyoumean::nullchecker","ruby didyoumean::patternkeynamechecker","ruby didyoumean::plainformatter","ruby didyoumean::requirepathchecker","ruby didyoumean::spellchecker","ruby didyoumean::treespellchecker","ruby didyoumean::variablenamechecker","ruby didyoumean::verboseformatter","rails digest","ruby digest","ruby object#digest()","ruby openssl::digest()","ruby digest::base","ruby digest::class","ruby digest::instance","ruby digest::md5","ruby digest::rmd160","ruby digest::sha1","ruby digest::sha2","rails digest::uuid","ruby dir","ruby bigmath#e()","ruby env","ruby eoferror","rails erb","ruby erb","ruby erb::defmethod","ruby erb::escape","rails erb::util","ruby erb::util","ruby encoding","ruby encoding::compatibilityerror","ruby encoding::converter","ruby encoding::converternotfounderror","ruby encoding::invalidbytesequenceerror","ruby encoding::undefinedconversionerror","ruby encodingerror","ruby english","ruby win32::registry::api#enumkey()","ruby win32::registry::api#enumvalue()","rails enumerable","ruby enumerable","rails enumerable::soleitemexpectederror","ruby enumerator","ruby enumerator::arithmeticsequence","ruby enumerator::chain","ruby enumerator::generator","ruby enumerator::lazy","ruby enumerator::producer","ruby enumerator::product","ruby enumerator::yielder","ruby errno","ruby errorhighlight","ruby errorhighlight::coreext","ruby errorhighlight::defaultformatter","ruby errorhighlight::spotter","ruby errorhighlight::spotter::nonascii","ruby etc","ruby etc::group","ruby etc::passwd","rails exception","ruby exception","rails exhibit","rails falseclass","ruby falseclass","ruby fcntl","ruby fiber","ruby fiber::pool","ruby fiber::scheduler","ruby fibererror","ruby fiddle","ruby fiddle::basictypes","ruby fiddle::cparser","ruby fiddle::cstruct","ruby fiddle::cstructbuilder","ruby fiddle::cstructentity","ruby fiddle::cunion","ruby fiddle::cunionentity","ruby fiddle::clearedreferenceerror","ruby fiddle::closure","ruby fiddle::closure::blockcaller","ruby fiddle::compositehandler","ruby fiddle::dlerror","ruby fiddle::error","ruby fiddle::function","ruby fiddle::handle","ruby fiddle::importer","ruby fiddle::pinned","ruby fiddle::pointer","ruby fiddle::structarray","ruby fiddle::types","ruby fiddle::win32types","rails file","ruby file","ruby file::file::constants","ruby file::stat","ruby filetest","ruby fileutils","ruby fileutils::dryrun","ruby fileutils::nowrite","ruby fileutils::streamutils_","ruby fileutils::verbose","ruby find","rails float","ruby float","ruby kernel#float()","ruby floatdomainerror","ruby win32::registry::api#flushkey()","ruby forwardable","ruby frozenerror","ruby gc","ruby gc::profiler","rails actiondispatch::request#get()","ruby gem","ruby gem::availableset","ruby gem::bundled_gems","ruby gem::basicspecification","ruby gem::bundlerversionfinder","ruby gem::cidetector","ruby gem::command","ruby gem::commandlineerror","ruby gem::commandmanager","ruby gem::commands","ruby gem::commands::buildcommand","ruby gem::commands::certcommand","ruby gem::commands::checkcommand","ruby gem::commands::cleanupcommand","ruby gem::commands::contentscommand","ruby gem::commands::dependencycommand","ruby gem::commands::environmentcommand","ruby gem::commands::execcommand","ruby gem::commands::fetchcommand","ruby gem::commands::generateindexcommand","ruby gem::commands::generateindexcommand::rubygemstrampoline","ruby gem::commands::helpcommand","ruby gem::commands::infocommand","ruby gem::commands::installcommand","ruby gem::commands::listcommand","ruby gem::commands::lockcommand","ruby gem::commands::mirrorcommand","ruby gem::commands::opencommand","ruby gem::commands::outdatedcommand","ruby gem::commands::ownercommand","ruby gem::commands::pristinecommand","ruby gem::commands::pushcommand","ruby gem::commands::querycommand","ruby gem::commands::rdoccommand","ruby gem::commands::rebuildcommand","ruby gem::commands::searchcommand","ruby gem::commands::servercommand","ruby gem::commands::setupcommand","ruby gem::commands::setupcommand::makedirs","ruby gem::commands::signincommand","ruby gem::commands::signoutcommand","ruby gem::commands::sourcescommand","ruby gem::commands::specificationcommand","ruby gem::commands::stalecommand","ruby gem::commands::uninstallcommand","ruby gem::commands::unpackcommand","ruby gem::commands::updatecommand","ruby gem::commands::whichcommand","ruby gem::commands::yankcommand","ruby gem::configfile","ruby gem::conflicterror","ruby gem::consoleui","ruby gem::defaultuserinteraction","ruby gem::dependency","ruby gem::dependencyerror","ruby gem::dependencyinstaller","ruby gem::dependencylist","ruby gem::dependencyremovalexception","ruby gem::dependencyresolutionerror","ruby gem::deprecate","ruby gem::doctor","ruby gem::documenterror","ruby gem::endofyamlexception","ruby gem::errorreason","ruby gem::exception","ruby gem::ext","ruby gem::ext::builderror","ruby gem::ext::builder","ruby gem::ext::cargobuilder","ruby gem::ext::cargobuilder::dylibnotfounderror","ruby gem::ext::cargobuilder::linkflagconverter","ruby gem::ext::cmakebuilder","ruby gem::ext::configurebuilder","ruby gem::ext::extconfbuilder","ruby gem::ext::rakebuilder","ruby gem::filepermissionerror","ruby gem::formatexception","ruby gem::gemnotfoundexception","ruby gem::gemnotinhomeexception","ruby gem::gemrunner","ruby gem::gemcutterutilities","ruby gem::gemcutterutilities::webauthnlistener","ruby gem::gemcutterutilities::webauthnlistener::badrequestresponse","ruby gem::gemcutterutilities::webauthnlistener::methodnotallowedresponse","ruby gem::gemcutterutilities::webauthnlistener::nocontentresponse","ruby gem::gemcutterutilities::webauthnlistener::notfoundresponse","ruby gem::gemcutterutilities::webauthnlistener::okresponse","ruby gem::gemcutterutilities::webauthnlistener::response","ruby gem::gemcutterutilities::webauthnlistener::socketresponder","ruby gem::gemcutterutilities::webauthnpoller","ruby gem::gemspechelpers","ruby gem::impossibledependencieserror","ruby gem::installerror","ruby gem::installupdateoptions","ruby gem::installer","ruby gem::installer::fakepackage","ruby gem::installeruninstallerutils","ruby gem::invalidspecificationexception","ruby gem::licenses","ruby gem::loaderror","ruby gem::localremoteoptions","ruby gem::missingspecerror","ruby gem::missingspecversionerror","ruby gem::nametuple","ruby gem::noaliasyamltree","ruby gem::operationnotsupportederror","ruby gem::package","ruby gem::package::digestio","ruby gem::package::error","ruby gem::package::formaterror","ruby gem::package::nonseekableio","ruby gem::package::old","ruby gem::package::patherror","ruby gem::package::symlinkerror","ruby gem::package::tarheader","ruby gem::package::tarinvaliderror","ruby gem::package::tarreader","ruby gem::package::tarreader::entry","ruby gem::package::tarwriter","ruby gem::package::tarwriter::boundedstream","ruby gem::package::tarwriter::fileoverflow","ruby gem::package::tarwriter::restrictedstream","ruby gem::package::toolongfilename","ruby gem::packagetask","ruby gem::pathsupport","ruby gem::platform","ruby gem::platformmismatch","ruby gem::queryutils","ruby gem::remoteerror","ruby gem::remotefetcher","ruby gem::remotefetcher::fetcherror","ruby gem::remotefetcher::unknownhosterror","ruby gem::remoteinstallationcancelled","ruby gem::remoteinstallationskipped","ruby gem::remotesourceexception","ruby gem::request","ruby gem::requestset","ruby gem::requestset::gemdependencyapi","ruby gem::requestset::lockfile","ruby gem::requestset::lockfile::parseerror","ruby gem::requestset::lockfile::parser","ruby gem::requestset::lockfile::tokenizer","ruby gem::requirement","ruby gem::requirement::badrequirementerror","ruby gem::resolver","ruby gem::resolver::apiset","ruby gem::resolver::apiset::gemparser","ruby gem::resolver::apispecification","ruby gem::resolver::activationrequest","ruby gem::resolver::bestset","ruby gem::resolver::composedset","ruby gem::resolver::conflict","ruby gem::resolver::currentset","ruby gem::resolver::dependencyrequest","ruby gem::resolver::gitset","ruby gem::resolver::gitspecification","ruby gem::resolver::indexset","ruby gem::resolver::indexspecification","ruby gem::resolver::installedspecification","ruby gem::resolver::installerset","ruby gem::resolver::localspecification","ruby gem::resolver::lockset","ruby gem::resolver::lockspecification","ruby gem::resolver::requirementlist","ruby gem::resolver::set","ruby gem::resolver::sourceset","ruby gem::resolver::specspecification","ruby gem::resolver::specification","ruby gem::resolver::stats","ruby gem::resolver::vendorset","ruby gem::resolver::vendorspecification","ruby gem::rubyversionmismatch","ruby gem::runtimerequirementnotmeterror","ruby gem::s3urisigner","ruby gem::s3urisigner::configurationerror","ruby gem::s3urisigner::instanceprofileerror","ruby gem::safemarshal","ruby gem::safemarshal::elements","ruby gem::safemarshal::elements::array","ruby gem::safemarshal::elements::bignum","ruby gem::safemarshal::elements::element","ruby gem::safemarshal::elements::false","ruby gem::safemarshal::elements::float","ruby gem::safemarshal::elements::hash","ruby gem::safemarshal::elements::hashwithdefaultvalue","ruby gem::safemarshal::elements::integer","ruby gem::safemarshal::elements::nil","ruby gem::safemarshal::elements::object","ruby gem::safemarshal::elements::objectlink","ruby gem::safemarshal::elements::string","ruby gem::safemarshal::elements::symbol","ruby gem::safemarshal::elements::symbollink","ruby gem::safemarshal::elements::true","ruby gem::safemarshal::elements::userclass","ruby gem::safemarshal::elements::userdefined","ruby gem::safemarshal::elements::usermarshal","ruby gem::safemarshal::elements::withivars","ruby gem::safemarshal::reader","ruby gem::safemarshal::reader::eoferror","ruby gem::safemarshal::reader::error","ruby gem::safemarshal::reader::notimplementederror","ruby gem::safemarshal::reader::unconsumedbyteserror","ruby gem::safemarshal::reader::unsupportedversionerror","ruby gem::safemarshal::visitors","ruby gem::safemarshal::visitors::streamprinter","ruby gem::safemarshal::visitors::toruby","ruby gem::safemarshal::visitors::toruby::error","ruby gem::safemarshal::visitors::toruby::formaterror","ruby gem::safemarshal::visitors::toruby::methodcallerror","ruby gem::safemarshal::visitors::toruby::rationalcompat","ruby gem::safemarshal::visitors::toruby::unpermittedclasserror","ruby gem::safemarshal::visitors::toruby::unpermittedivarerror","ruby gem::safemarshal::visitors::toruby::unpermittedsymbolerror","ruby gem::safemarshal::visitors::toruby::unsupportederror","ruby gem::safemarshal::visitors::visitor","ruby gem::safeyaml","ruby gem::security","ruby gem::security::exception","ruby gem::security::policy","ruby gem::security::signer","ruby gem::security::trustdir","ruby gem::securityoption","ruby gem::silentui","ruby gem::silentui::nullio","ruby gem::source","ruby gem::source::git","ruby gem::source::installed","ruby gem::source::local","ruby gem::source::lock","ruby gem::source::specificfile","ruby gem::source::vendor","ruby gem::sourcefetchproblem","ruby gem::sourcelist","ruby gem::specfetcher","ruby gem::specificgemnotfoundexception","ruby gem::specification","ruby gem::specificationpolicy","ruby gem::streamui","ruby gem::streamui::silentdownloadreporter","ruby gem::streamui::silentprogressreporter","ruby gem::streamui::simpleprogressreporter","ruby gem::streamui::threadeddownloadreporter","ruby gem::streamui::verboseprogressreporter","ruby gem::stubspecification","ruby gem::systemexitexception","ruby gem::text","ruby gem::uninstallerror","ruby gem::uninstaller","ruby gem::unknowncommanderror","ruby gem::unknowncommandspellchecker","ruby gem::unsatisfiabledependencyerror","ruby gem::updatesuggestion","ruby gem::uri","ruby gem::uriformatter","ruby gem::userinteraction","ruby gem::util","ruby gem::validator","ruby gem::verificationerror","ruby gem::version","ruby gem::versionoption","ruby gem::webauthnverificationerror","ruby gem::yamlserializer","rails ","rails ","rails ","rails ","ruby getoptlong","ruby getoptlong::ambiguousoption","ruby getoptlong::error","ruby getoptlong::invalidoption","ruby getoptlong::missingargument","ruby getoptlong::needlessargument","rails hash","ruby hash","ruby kernel#hash()","rails io","ruby io","ruby io::buffer","ruby io::buffer::accesserror","ruby io::buffer::allocationerror","ruby io::buffer::invalidatederror","ruby io::buffer::lockederror","ruby io::buffer::maskerror","ruby io::eagainwaitreadable","ruby io::eagainwaitwritable","ruby io::einprogresswaitreadable","ruby io::einprogresswaitwritable","ruby io::ewouldblockwaitreadable","ruby io::ewouldblockwaitwritable","ruby io::timeouterror","ruby io::waitreadable","ruby io::waitwritable","ruby io::generic_readable","ruby io::generic_writable","ruby ioerror","ruby ipaddr","ruby ipaddr::addressfamilyerror","ruby ipaddr::error","ruby ipaddr::invalidaddresserror","ruby ipaddr::invalidprefixerror","ruby ipsocket","ruby irb","ruby irb::abort","ruby irb::cantchangebinding","ruby irb::cantreturntonormalmode","ruby irb::canvas","ruby irb::color","ruby irb::color::symbolstate","ruby irb::colorprinter","ruby irb::context","ruby irb::contextextender","ruby irb::debug","ruby irb::debug::debugger__","ruby irb::debug::skippathhelperforirb","ruby irb::debug::ui","ruby irb::evalhistory","ruby irb::extendcommand","ruby irb::extendcommand::backtrace","ruby irb::extendcommand::break","ruby irb::extendcommand::catch","ruby irb::extendcommand::changeworkspace","ruby irb::extendcommand::commandargumenterror","ruby irb::extendcommand::continue","ruby irb::extendcommand::currentworkingworkspace","ruby irb::extendcommand::debug","ruby irb::extendcommand::debugcommand","ruby irb::extendcommand::delete","ruby irb::extendcommand::edit","ruby irb::extendcommand::finish","ruby irb::extendcommand::foreground","ruby irb::extendcommand::help","ruby irb::extendcommand::history","ruby irb::extendcommand::info","ruby irb::extendcommand::irbcommand","ruby irb::extendcommand::irbinfo","ruby irb::extendcommand::jobs","ruby irb::extendcommand::kill","ruby irb::extendcommand::load","ruby irb::extendcommand::loadercommand","ruby irb::extendcommand::ls","ruby irb::extendcommand::ls::output","ruby irb::extendcommand::measure","ruby irb::extendcommand::multiirbcommand","ruby irb::extendcommand::next","ruby irb::extendcommand::nop","ruby irb::extendcommand::popworkspace","ruby irb::extendcommand::pushworkspace","ruby irb::extendcommand::require","ruby irb::extendcommand::showcmds","ruby irb::extendcommand::showdoc","ruby irb::extendcommand::showsource","ruby irb::extendcommand::source","ruby irb::extendcommand::step","ruby irb::extendcommand::whereami","ruby irb::extendcommand::workspaces","ruby irb::extendcommandbundle","ruby irb::fileinputmethod","ruby irb::frame","ruby irb::frame::frameoverflow","ruby irb::frame::frameunderflow","ruby irb::illegalparameter","ruby irb::illegalrcgenerator","ruby irb::inputcompletor","ruby irb::inputmethod","ruby irb::inspector","ruby irb::irb","ruby irb::irbalreadydead","ruby irb::irbloader","ruby irb::irbswitchedtocurrentthread","ruby irb::jobmanager","ruby irb::loadabort","ruby irb::locale","ruby irb::nestingparser","ruby irb::nosuchjob","ruby irb::notimplementederror","ruby irb::notifier","ruby irb::notifier::abstractnotifier","ruby irb::notifier::compositenotifier","ruby irb::notifier::errundefinednotifier","ruby irb::notifier::errunrecognizedlevel","ruby irb::notifier::levelednotifier","ruby irb::notifier::nomsgnotifier","ruby irb::outputmethod","ruby irb::outputmethod::notimplementederror","ruby irb::pager","ruby irb::readlineinputmethod","ruby irb::reidlineinputmethod","ruby irb::relineinputmethod","ruby irb::rubylex","ruby irb::rubylex::terminatelineinput","ruby irb::rubymodel","ruby irb::sourcefinder","ruby irb::statement","ruby irb::statement::command","ruby irb::statement::expression","ruby irb::stdioinputmethod","ruby irb::stdiooutputmethod","ruby irb::undefinedpromptmode","ruby irb::unrecognizedswitch","ruby irb::vec","ruby irb::workspace","ruby indexerror","rails integer","ruby integer","ruby kernel#integer()","ruby interrupt","ruby json","ruby json::circulardatastructure","ruby json::ext","ruby json::ext::generator","ruby json::ext::generator::state","ruby json::ext::parser","ruby json::generatorerror","ruby json::genericobject","ruby json::jsonerror","ruby json::missingunicodesupport","ruby json::nestingerror","ruby json::parsererror","ruby jacobian","ruby irb::jobmanager()","ruby kconv","rails kernel","ruby kernel","ruby keyerror","ruby ","ruby syslog::macros#log_mask()","ruby syslog::macros#log_upto()","ruby lusolve","rails loaderror","ruby loaderror","ruby localjumperror","ruby logger","ruby logger::formatter","ruby logger::logdevice","ruby logger::period","ruby logger::severity","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails mail","rails mail::address","rails mail::message","ruby makemakefile","ruby makemakefile::logging","ruby makemakefile::rbconfig","ruby marshal","ruby matchdata","ruby math","ruby math::domainerror","rails method","ruby method","rails mime","rails mime::alltype","rails mime::mimes","rails mime::nulltype","rails mime::type","rails mime::type::invalidmimetype","rails module","ruby module","rails module::concerning","rails module::delegationerror","ruby monitor","ruby monitormixin","ruby monitormixin::conditionvariable","ruby mutex_m","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby ","ruby nkf","rails nameerror","ruby nameerror","ruby net","ruby net::http","ruby net::http::copy","ruby net::http::delete","ruby net::http::get","ruby net::http::head","ruby net::http::lock","ruby net::http::mkcol","ruby net::http::move","ruby net::http::options","ruby net::http::patch","ruby net::http::post","ruby net::http::propfind","ruby net::http::proppatch","ruby net::http::put","ruby net::http::trace","ruby net::http::unlock","ruby net::httpaccepted","ruby net::httpalreadyreported","ruby net::httpbadgateway","ruby net::httpbadrequest","ruby net::httpbadresponse","ruby net::httpclienterror","ruby net::httpclientexception","ruby net::httpconflict","ruby net::httpcontinue","ruby net::httpcreated","ruby net::httpearlyhints","ruby net::httperror","ruby net::httpexceptions","ruby net::httpexpectationfailed","ruby net::httpfaileddependency","ruby net::httpfatalerror","ruby net::httpforbidden","ruby net::httpfound","ruby net::httpgatewaytimeout","ruby net::httpgatewaytimeout","ruby net::httpgenericrequest","ruby net::httpgone","ruby net::httpheader","ruby net::httpheadersyntaxerror","ruby net::httpimused","ruby net::httpinformation","ruby net::httpinsufficientstorage","ruby net::httpinternalservererror","ruby net::httplengthrequired","ruby net::httplocked","ruby net::httploopdetected","ruby net::httpmethodnotallowed","ruby net::httpmisdirectedrequest","ruby net::httpmovedpermanently","ruby net::httpmovedtemporarily","ruby net::httpmultistatus","ruby net::httpmultiplechoice","ruby net::httpmultiplechoices","ruby net::httpnetworkauthenticationrequired","ruby net::httpnocontent","ruby net::httpnonauthoritativeinformation","ruby net::httpnotacceptable","ruby net::httpnotextended","ruby net::httpnotfound","ruby net::httpnotimplemented","ruby net::httpnotmodified","ruby net::httpok","ruby net::httppartialcontent","ruby net::httppayloadtoolarge","ruby net::httppaymentrequired","ruby net::httppermanentredirect","ruby net::httppreconditionfailed","ruby net::httppreconditionrequired","ruby net::httpprocessing","ruby net::httpproxyauthenticationrequired","ruby net::httprangenotsatisfiable","ruby net::httpredirection","ruby net::httprequest","ruby net::httprequestentitytoolarge","ruby net::httprequestheaderfieldstoolarge","ruby net::httprequesttimeout","ruby net::httprequesttimeout","ruby net::httprequesturitoolarge","ruby net::httprequesturitoolong","ruby net::httprequestedrangenotsatisfiable","ruby net::httpresetcontent","ruby net::httpresponse","ruby net::httpretriableerror","ruby net::httpseeother","ruby net::httpservererror","ruby net::httpserviceunavailable","ruby net::httpsuccess","ruby net::httpswitchprotocol","ruby net::httptemporaryredirect","ruby net::httptoomanyrequests","ruby net::httpuritoolong","ruby net::httpunauthorized","ruby net::httpunavailableforlegalreasons","ruby net::httpunknownresponse","ruby net::httpunprocessableentity","ruby net::httpunsupportedmediatype","ruby net::httpupgraderequired","ruby net::httpuseproxy","ruby net::httpvariantalsonegotiates","ruby net::httpversionnotsupported","ruby net::opentimeout","ruby net::protoautherror","ruby net::protocommanderror","ruby net::protofatalerror","ruby net::protoretriableerror","ruby net::protoservererror","ruby net::protosyntaxerror","ruby net::protounknownerror","ruby net::protocretryerror","ruby net::protocolerror","ruby net::readtimeout","ruby net::writeadapter","ruby net::writetimeout","ruby newton","rails nilclass","ruby nilclass","ruby nomatchingpatternerror","ruby nomatchingpatternkeyerror","ruby nomemoryerror","ruby nomethoderror","ruby notimplementederror","rails numeric","ruby numeric","ruby oleproperty","rails object","ruby object","ruby object::rubylex","ruby objectspace","ruby objectspace::internalobjectwrapper","ruby objectspace::weakkeymap","ruby objectspace::weakmap","ruby observable","ruby open3","ruby win32::registry::api#openkey()","ruby openssl","ruby openssl::asn1","ruby openssl::asn1::asn1data","ruby openssl::asn1::asn1error","ruby openssl::asn1::constructive","ruby openssl::asn1::objectid","ruby openssl::asn1::primitive","ruby openssl::bn","ruby openssl::bnerror","ruby openssl::buffering","ruby openssl::buffering::buffer","ruby openssl::cipher","ruby openssl::cipher::cipher","ruby openssl::cipher::ciphererror","ruby openssl::config","ruby openssl::configerror","ruby openssl::digest","ruby openssl::digest::digesterror","ruby openssl::engine","ruby openssl::engine::engineerror","ruby openssl::hmac","ruby openssl::hmacerror","ruby openssl::kdf","ruby openssl::kdf::kdferror","ruby openssl::marshal","ruby openssl::marshal::classmethods","ruby openssl::netscape","ruby openssl::netscape::spki","ruby openssl::netscape::spkierror","ruby openssl::ocsp","ruby openssl::ocsp::basicresponse","ruby openssl::ocsp::certificateid","ruby openssl::ocsp::ocsperror","ruby openssl::ocsp::request","ruby openssl::ocsp::response","ruby openssl::ocsp::singleresponse","ruby openssl::opensslerror","ruby openssl::pkcs12","ruby openssl::pkcs12::pkcs12error","ruby openssl::pkcs5","ruby openssl::pkcs7","ruby openssl::pkcs7::pkcs7error","ruby openssl::pkcs7::recipientinfo","ruby openssl::pkcs7::signerinfo","ruby openssl::pkey","ruby openssl::pkey::dh","ruby openssl::pkey::dherror","ruby openssl::pkey::dsa","ruby openssl::pkey::dsaerror","ruby openssl::pkey::ec","ruby openssl::pkey::ec::group","ruby openssl::pkey::ec::group::error","ruby openssl::pkey::ec::point","ruby openssl::pkey::ec::point::error","ruby openssl::pkey::ecerror","ruby openssl::pkey::pkey","ruby openssl::pkey::pkeyerror","ruby openssl::pkey::rsa","ruby openssl::pkey::rsaerror","ruby openssl::random","ruby openssl::random::randomerror","ruby openssl::ssl","ruby openssl::ssl::sslcontext","ruby openssl::ssl::sslerror","ruby openssl::ssl::sslerrorwaitreadable","ruby openssl::ssl::sslerrorwaitwritable","ruby openssl::ssl::sslserver","ruby openssl::ssl::sslsocket","ruby openssl::ssl::session","ruby openssl::ssl::session::sessionerror","ruby openssl::ssl::socketforwarder","ruby openssl::timestamp","ruby openssl::timestamp::factory","ruby openssl::timestamp::request","ruby openssl::timestamp::response","ruby openssl::timestamp::timestamperror","ruby openssl::timestamp::tokeninfo","ruby openssl::x509","ruby openssl::x509::attribute","ruby openssl::x509::attributeerror","ruby openssl::x509::crl","ruby openssl::x509::crlerror","ruby openssl::x509::certificate","ruby openssl::x509::certificateerror","ruby openssl::x509::extension","ruby openssl::x509::extension::authorityinfoaccess","ruby openssl::x509::extension::authoritykeyidentifier","ruby openssl::x509::extension::crldistributionpoints","ruby openssl::x509::extension::helpers","ruby openssl::x509::extension::subjectkeyidentifier","ruby openssl::x509::extensionerror","ruby openssl::x509::extensionfactory","ruby openssl::x509::name","ruby openssl::x509::name::rfc2253dn","ruby openssl::x509::nameerror","ruby openssl::x509::request","ruby openssl::x509::requesterror","ruby openssl::x509::revoked","ruby openssl::x509::revokederror","ruby openssl::x509::store","ruby openssl::x509::storecontext","ruby openssl::x509::storeerror","ruby openstruct","ruby openuri","ruby openuri::httperror","ruby openuri::httpredirect","ruby openuri::meta","ruby openuri::openread","ruby openuri::toomanyredirects","ruby optionparser","ruby optionparser::ac","ruby optionparser::acceptables","ruby optionparser::ambiguousargument","ruby optionparser::ambiguousoption","ruby optionparser::arguable","ruby optionparser::completinghash","ruby optionparser::completion","ruby optionparser::invalidargument","ruby optionparser::invalidoption","ruby optionparser::list","ruby optionparser::missingargument","ruby optionparser::needlessargument","ruby optionparser::optionmap","ruby optionparser::parseerror","ruby optionparser::switch","ruby optionparser::switch::noargument","ruby optionparser::switch::optionalargument","ruby optionparser::switch::placedargument","ruby optionparser::switch::requiredargument","ruby bigmath#pi()","rails actiondispatch::request#post()","ruby pp","ruby pp::ppmethods","ruby pstore","ruby pstore::error","ruby pty","ruby pty::childexited","rails pathname","ruby pathname","ruby kernel#pathname()","rails person","ruby prettyprint","ruby prettyprint::singleline","ruby prism","ruby prism::comment","ruby prism::constantpathnode","ruby prism::constantpathnode::dynamicpartsinconstantpatherror","ruby prism::constantpathtargetnode","ruby prism::constantreadnode","ruby prism::debug","ruby prism::desugarcompiler","ruby prism::embdoccomment","ruby prism::floatnode","ruby prism::imaginarynode","ruby prism::inlinecomment","ruby prism::integernode","ruby prism::interpolatedmatchlastlinenode","ruby prism::interpolatedregularexpressionnode","ruby prism::interpolatedstringnode","ruby prism::interpolatedxstringnode","ruby prism::lexcompat","ruby prism::lexcompat::endcontenttoken","ruby prism::lexcompat::identtoken","ruby prism::lexcompat::ignorestatetoken","ruby prism::lexcompat::ignorednewlinetoken","ruby prism::lexcompat::paramtoken","ruby prism::lexcompat::token","ruby prism::location","ruby prism::magiccomment","ruby prism::matchlastlinenode","ruby prism::pack","ruby prism::pack::directive","ruby prism::pack::format","ruby prism::parametersnode","ruby prism::parseerror","ruby prism::parseresult","ruby prism::parseresult::comments","ruby prism::parseresult::newlines","ruby prism::parsewarning","ruby prism::pattern","ruby prism::pattern::compilationerror","ruby prism::rationalnode","ruby prism::regularexpressionnode","ruby prism::rippercompat","ruby prism::rippercompat::sexpbuilder","ruby prism::rippercompat::sexpbuilderpp","ruby prism::source","ruby prism::stringnode","ruby prism::token","ruby prism::xstringnode","ruby proc","rails process","ruby process","ruby process::gid","ruby process::status","ruby process::sys","ruby process::uid","ruby psych","ruby psych::aliasesnotenabled","ruby psych::anchornotdefined","ruby psych::badalias","ruby psych::classloader","ruby psych::classloader::restricted","ruby psych::coder","ruby psych::config","ruby psych::disallowedclass","ruby psych::emitter","ruby psych::exception","ruby psych::handler","ruby psych::handler::dumperoptions","ruby psych::handlers","ruby psych::handlers::recorder","ruby psych::json","ruby psych::json::stream","ruby psych::json::treebuilder","ruby psych::nodes","ruby psych::nodes::alias","ruby psych::nodes::document","ruby psych::nodes::mapping","ruby psych::nodes::node","ruby psych::nodes::scalar","ruby psych::nodes::sequence","ruby psych::nodes::stream","ruby psych::omap","ruby psych::parser","ruby psych::parser::mark","ruby psych::scalarscanner","ruby psych::set","ruby psych::stream","ruby psych::streaming","ruby psych::streaming::classmethods","ruby psych::syntaxerror","ruby psych::treebuilder","ruby psych::visitors","ruby psych::visitors::depthfirst","ruby psych::visitors::emitter","ruby psych::visitors::jsontree","ruby psych::visitors::noaliasruby","ruby psych::visitors::restrictedyamltree","ruby psych::visitors::toruby","ruby psych::visitors::visitor","ruby psych::visitors::yamltree","ruby win32::registry::api#queryinfokey()","ruby win32::registry::api#queryvalue()","rails ","rails ","rails rdoc","ruby rdoc","ruby rdoc","ruby rdoc::alias","ruby rdoc::anonclass","ruby rdoc::anymethod","ruby rdoc::attr","ruby rdoc::classmodule","ruby rdoc::codeobject","ruby rdoc::comment","ruby rdoc::constant","ruby rdoc::context","ruby rdoc::crossreference","ruby rdoc::erbio","ruby rdoc::erbpartial","ruby rdoc::encoding","ruby rdoc::error","ruby rdoc::extend","rails rdoc::generator","ruby rdoc::generator","ruby rdoc::ghostmethod","ruby rdoc::i18n","ruby rdoc::include","ruby rdoc::markdown","ruby rdoc::markdown::memoentry","ruby rdoc::markdown::parseerror","ruby rdoc::markdown::ruleinfo","ruby rdoc::markup","ruby rdoc::markupreference","ruby rdoc::markupreference::dummyclass","ruby rdoc::markupreference::dummymodule","ruby rdoc::metamethod","ruby rdoc::methodattr","ruby rdoc::mixin","ruby rdoc::normalclass","ruby rdoc::normalmodule","ruby rdoc::options","ruby rdoc::parser","ruby rdoc::parser::c","ruby rdoc::parser::changelog","ruby rdoc::parser::changelog::git","ruby rdoc::parser::markdown","ruby rdoc::parser::rd","ruby rdoc::parser::ripperstatelex","ruby rdoc::parser::ripperstatelex::innerstatelex","ruby rdoc::parser::ruby","ruby rdoc::parser::rubytools","ruby rdoc::parser::simple","ruby rdoc::parser::text","ruby rdoc::rd","ruby rdoc::rdoc","ruby rdoc::ri","ruby rdoc::ri::error","ruby rdoc::require","ruby rdoc::rubygemshook","ruby rdoc::servlet","ruby rdoc::singleclass","ruby rdoc::stats","ruby rdoc::store","ruby rdoc::store::error","ruby rdoc::store::missingfileerror","ruby rdoc::task","ruby rdoc::text","ruby rdoc::tokenstream","ruby rdoc::tomdoc","ruby rdoc::toplevel","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","ruby ","ruby ","rails ","rails ","rails ","rails ","rails ","rails ","rails rack","rails rack::cache","rails rack::cache::entitystore","rails rack::cache::metastore","ruby ractor","ruby ractor::closederror","ruby ractor::error","ruby ractor::isolationerror","ruby ractor::movederror","ruby ractor::movedobject","ruby ractor::remoteerror","ruby ractor::selector","ruby ractor::unsafeerror","rails rails","rails rails::api","rails rails::api::edgetask","rails rails::api::repotask","rails rails::api::stabletask","rails rails::api::task","rails rails::appbuilder","rails rails::application","rails rails::application::bootstrap","rails rails::application::configuration","rails rails::application::defaultmiddlewarestack","rails rails::application::finisher","rails rails::application::routesreloader","rails rails::backtracecleaner","rails rails::command","rails rails::command::actions","rails rails::command::base","rails rails::command::db","rails rails::command::db::system","rails rails::command::helpers","rails rails::command::helpers::editor","rails rails::conductor","rails rails::conductor::basecontroller","rails rails::configuration","rails rails::configuration::middlewarestackproxy","rails rails::console","rails rails::console::backtracecleaner","rails rails::consolemethods","rails rails::dbconsole","rails rails::engine","rails rails::engine::configuration","rails rails::engine::railties","rails rails::engine::updater","rails rails::generators","rails rails::generators::actions","rails rails::generators::activemodel","rails rails::generators::appbase","rails rails::generators::appbase::gemfileentry","rails rails::generators::appgenerator","rails rails::generators::base","rails rails::generators::benchmarkgenerator","rails rails::generators::channelgenerator","rails rails::generators::db","rails rails::generators::db::system","rails rails::generators::mailboxgenerator","rails rails::generators::mailergenerator","rails rails::generators::migration","rails rails::generators::namedbase","rails rails::info","rails rails::initializable","rails rails::initializable::classmethods","rails rails::initializable::collection","rails rails::initializable::initializer","rails rails::paths","rails rails::paths::path","rails rails::paths::root","rails rails::pluginbuilder","rails rails::rack","rails rails::rack::logger","rails rails::rails","rails rails::rails::conductor","rails rails::rails::conductor::actionmailbox","rails rails::rails::conductor::actionmailbox::inboundemails","rails rails::rails::conductor::actionmailbox::inboundemails::sourcescontroller","rails rails::rails::conductor::actionmailbox::inboundemailscontroller","rails rails::rails::conductor::actionmailbox::incineratescontroller","rails rails::rails::conductor::actionmailbox::reroutescontroller","rails rails::railtie","rails rails::railtie::configurable","rails rails::railtie::configurable::classmethods","rails rails::railtie::configuration","rails rails::secrets","rails rails::secrets::missingkeyerror","rails rails::server","rails rails::server::options","rails rails::sourceannotationextractor","rails rails::sourceannotationextractor::annotation","rails rails::version","ruby rake","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","ruby random","ruby random::formatter","rails range","ruby range","ruby rangeerror","ruby rational","ruby kernel#rational()","ruby readline","ruby refinement","rails regexp","ruby regexp","ruby regexp::timeouterror","ruby regexperror","ruby reline","ruby reline::ansi","ruby reline::config","ruby reline::config::invalidinputrc","ruby reline::configencodingconversionerror","ruby reline::core","ruby reline::face","ruby reline::face::config","ruby reline::generalio","ruby reline::history","ruby reline::keyactor","ruby reline::keyactor::base","ruby reline::keyactor::emacs","ruby reline::keyactor::vicommand","ruby reline::keyactor::viinsert","ruby reline::keystroke","ruby reline::killring","ruby reline::killring::ringbuffer","ruby reline::killring::state","ruby reline::lineeditor","ruby reline::lineeditor::completionstate","ruby reline::lineeditor::dialog","ruby reline::lineeditor::dialogprocscope","ruby reline::terminfo","ruby reline::terminfo::stringwithtiparm","ruby reline::terminfo::terminfoerror","ruby reline::unicode","ruby reline::unicode::eastasianwidth","ruby reline::windows","ruby reline::windows::keyeventrecord","ruby reline::windows::win32api","rails removenotnullonactivestorageblobschecksum","ruby resolv","ruby resolv","ruby resolv::dns","ruby resolv::dns::config","ruby resolv::dns::config::nxdomain","ruby resolv::dns::config::otherresolverror","ruby resolv::dns::decodeerror","ruby resolv::dns::encodeerror","ruby resolv::dns::name","ruby resolv::dns::query","ruby resolv::dns::requester","ruby resolv::dns::requester::requesterror","ruby resolv::dns::resource","ruby resolv::dns::resource::any","ruby resolv::dns::resource::cname","ruby resolv::dns::resource::domainname","ruby resolv::dns::resource::generic","ruby resolv::dns::resource::hinfo","ruby resolv::dns::resource::in","ruby resolv::dns::resource::in::a","ruby resolv::dns::resource::in::aaaa","ruby resolv::dns::resource::in::https","ruby resolv::dns::resource::in::srv","ruby resolv::dns::resource::in::svcb","ruby resolv::dns::resource::in::servicebinding","ruby resolv::dns::resource::in::wks","ruby resolv::dns::resource::loc","ruby resolv::dns::resource::minfo","ruby resolv::dns::resource::mx","ruby resolv::dns::resource::ns","ruby resolv::dns::resource::ptr","ruby resolv::dns::resource::soa","ruby resolv::dns::resource::txt","ruby resolv::dns::svcparam","ruby resolv::dns::svcparam::alpn","ruby resolv::dns::svcparam::dohpath","ruby resolv::dns::svcparam::generic","ruby resolv::dns::svcparam::ipv4hint","ruby resolv::dns::svcparam::ipv6hint","ruby resolv::dns::svcparam::mandatory","ruby resolv::dns::svcparam::nodefaultalpn","ruby resolv::dns::svcparam::port","ruby resolv::dns::svcparams","ruby resolv::hosts","ruby resolv::ipv4","ruby resolv::ipv6","ruby resolv::loc","ruby resolv::loc::alt","ruby resolv::loc::coord","ruby resolv::loc::size","ruby resolv::mdns","ruby resolv::resolverror","ruby resolv::resolvtimeout","ruby resolv::sz","ruby rinda","ruby rinda::drbobjecttemplate","ruby rinda::invalidhashtuplekey","ruby rinda::notifytemplateentry","ruby rinda::requestcancelederror","ruby rinda::requestexpirederror","ruby rinda::rindaerror","ruby rinda::ringfinger","ruby rinda::ringprovider","ruby rinda::ringserver","ruby rinda::simplerenewer","ruby rinda::template","ruby rinda::templateentry","ruby rinda::tuple","ruby rinda::tuplebag","ruby rinda::tuplebag::tuplebin","ruby rinda::tupleentry","ruby rinda::tuplespace","ruby rinda::tuplespaceproxy","ruby rinda::waittemplateentry","ruby ripper","ruby ripper::filter","ruby ripper::lexer","ruby ripper::lexer::elem","ruby ripper::lexer::state","ruby rubyvm","ruby rubyvm::abstractsyntaxtree","ruby rubyvm::abstractsyntaxtree::node","ruby rubyvm::instructionsequence","ruby rubyvm::rjit","ruby rubyvm::yjit","ruby runtimeerror","ruby sockssocket","ruby scripterror","rails securerandom","ruby securerandom","ruby securityerror","ruby set","ruby win32::registry::api#setvalue()","ruby shellwords","ruby signal","ruby signalexception","ruby simpledelegator","ruby singleforwardable","rails singleton","ruby singleton","ruby socket","ruby socket::ancillarydata","ruby socket::ifaddr","ruby socket::option","ruby socket::resolutionerror","ruby socket::udpsource","ruby socketerror","ruby standarderror","ruby stopiteration","rails string","ruby string","ruby irb::locale#string()","ruby kernel#string()","ruby stringio","ruby stringscanner","ruby stringscanner::error","ruby struct","rails symbol","ruby symbol","ruby syntaxerror","ruby syntaxsuggest","ruby syntaxsuggest::aroundblockscan","ruby syntaxsuggest::blockexpand","ruby syntaxsuggest::capture","ruby syntaxsuggest::capture::beforeafterkeywordends","ruby syntaxsuggest::capture::fallingindentlines","ruby syntaxsuggest::capturecodecontext","ruby syntaxsuggest::cleandocument","ruby syntaxsuggest::cli","ruby syntaxsuggest::codeblock","ruby syntaxsuggest::codefrontier","ruby syntaxsuggest::codeline","ruby syntaxsuggest::codesearch","ruby syntaxsuggest::displaycodewithlinenumbers","ruby syntaxsuggest::displayinvalidblocks","ruby syntaxsuggest::error","ruby syntaxsuggest::explainsyntax","ruby syntaxsuggest::getparseerrors","ruby syntaxsuggest::leftrightlexcount","ruby syntaxsuggest::lexall","ruby syntaxsuggest::lexvalue","ruby syntaxsuggest::ministringio","ruby syntaxsuggest::parseblocksfromindentline","ruby syntaxsuggest::pathnamefrommessage","ruby syntaxsuggest::priorityengulfqueue","ruby syntaxsuggest::priorityqueue","ruby syntaxsuggest::rippererrors","ruby syntaxsuggest::scanhistory","ruby syntaxsuggest::unvisitedlines","ruby syslog","ruby syslog::constants","ruby syslog::facility","ruby syslog::level","ruby syslog::logger","ruby syslog::logger::formatter","ruby syslog::macros","ruby syslog::option","ruby systemcallerror","ruby systemexit","ruby systemstackerror","ruby tcpserver","ruby tcpsocket","ruby tsort","ruby tsort::cyclic","ruby tempfile","ruby thread","ruby thread::backtrace","ruby thread::backtrace::location","ruby thread::conditionvariable","ruby thread::mutex","ruby thread::queue","ruby thread::sizedqueue","ruby threaderror","ruby threadgroup","rails time","ruby time","ruby timeout","ruby timeout::error","ruby timeout::exitexception","ruby timeout::request","ruby tracepoint","rails trueclass","ruby trueclass","ruby typeerror","ruby udpsocket","ruby unixserver","ruby unixsocket","rails uri","ruby uri","ruby kernel::uri()","ruby uri::badurierror","ruby uri::error","ruby uri::ftp","ruby uri::file","ruby uri::generic","ruby uri::http","ruby uri::https","ruby uri::invalidcomponenterror","ruby uri::invalidurierror","ruby uri::ldap","ruby uri::ldaps","ruby uri::mailto","ruby uri::parser","ruby uri::regexp","ruby uri::rfc2396_parser","ruby uri::rfc2396_regexp","ruby uri::rfc2396_regexp::pattern","ruby uri::schemes","ruby uri::ws","ruby uri::wss","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails unboundmethod","ruby unboundmethod","ruby uncaughtthrowerror","ruby unicodenormalize","rails user","ruby win32ole","ruby win32ole::event","ruby win32ole::method","ruby win32ole::param","ruby win32ole::record","ruby win32ole::type","ruby win32ole::typelib","ruby win32ole::variant","ruby win32ole::variable","ruby win32ole::variant","ruby win32olequeryinterfaceerror","ruby win32oleruntimeerror","ruby warning","ruby weakref","ruby weakref::referror","ruby win32","ruby win32::registry","ruby win32::registry::api","ruby win32::registry::constants","ruby win32::registry::error","ruby win32::registry::error::kernel32","ruby win32::registry::predefinedkey","ruby win32::sspi","ruby win32::sspi::api","ruby win32::sspi::identity","ruby win32::sspi::negotiateauth","ruby win32::sspi::sspiresult","ruby win32::sspi::securitybuffer","ruby win32::sspi::securityhandle","ruby win32::sspi::timestamp","ruby xmp","ruby xmp::stringinputmethod","ruby yaml","ruby yaml::dbm","ruby yaml::store","ruby zerodivisionerror","ruby zlib","ruby zlib::buferror","ruby zlib::dataerror","ruby zlib::deflate","ruby zlib::error","ruby zlib::gzipfile","ruby zlib::gzipfile::crcerror","ruby zlib::gzipfile::error","ruby zlib::gzipfile::lengtherror","ruby zlib::gzipfile::nofooter","ruby zlib::gzipreader","ruby zlib::gzipwriter","ruby zlib::inprogresserror","ruby zlib::inflate","ruby zlib::memerror","ruby zlib::needdict","ruby zlib::streamend","ruby zlib::streamerror","ruby zlib::versionerror","ruby zlib::zstream","rails actioncontroller::parameters#[]()","rails actiondispatch::flash::flashhash#[]()","rails actiondispatch::http::headers#[]()","rails actiondispatch::middlewarestack#[]()","rails actionview::template::types::[]()","rails actionview::template::types::type::[]()","rails activemodel::errors#[]()","rails activerecord::attributemethods#[]()","rails activerecord::connectionadapters::tabledefinition#[]()","rails activerecord::fixtureset#[]()","rails activerecord::fixtureset::classcache#[]()","rails activerecord::migration::[]()","rails activerecord::result#[]()","rails activerecord::schema::[]()","rails activesupport::hashwithindifferentaccess#[]()","rails activesupport::hashwithindifferentaccess#[]()","rails activesupport::hashwithindifferentaccess::[]()","rails activesupport::hashwithindifferentaccess::[]()","rails activesupport::orderedoptions#[]()","rails activesupport::safebuffer#[]()","rails activesupport::timezone::[]()","rails mime::[]()","rails rails::paths::root#[]()","ruby array#[]()","ruby array::[]()","ruby cgi::queryextension#[]()","ruby cgi::session#[]()","ruby csv::row#[]()","ruby csv::table#[]()","ruby continuation#[]()","ruby drb::drbsslsocket::sslconfig#[]()","ruby drb::gw#[]()","ruby dir::[]()","ruby env::[]()","ruby fiber::[]()","ruby fiddle::cstructentity#[]()","ruby fiddle::compositehandler#[]()","ruby fiddle::handle::[]()","ruby fiddle::handle#[]()","ruby fiddle::importer#[]()","ruby fiddle::pointer::[]()","ruby fiddle::pointer#[]()","ruby gem::commandmanager#[]()","ruby gem::configfile#[]()","ruby hash::[]()","ruby hash#[]()","ruby irb::evalhistory#[]()","ruby integer#[]()","ruby json::[]()","ruby json::ext::generator::state#[]()","ruby json::genericobject#[]()","ruby matchdata#[]()","ruby method#[]()","ruby net::httpheader#[]()","ruby oleproperty#[]()","ruby objectspace::weakkeymap#[]()","ruby objectspace::weakmap#[]()","ruby openssl::config#[]()","ruby openstruct#[]()","ruby pstore#[]()","ruby proc#[]()","ruby psych::coder#[]()","ruby ractor#[]()","ruby reline::face::[]()","ruby reline::face::config#[]()","ruby reline::history#[]()","ruby resolv::dns::svcparams#[]()","ruby rinda::tuple#[]()","ruby rinda::tupleentry#[]()","ruby ripper::lexer::elem#[]()","ruby ripper::lexer::state#[]()","ruby set::[]()","ruby string#[]()","ruby stringscanner#[]()","ruby struct#[]()","ruby symbol#[]()","ruby syntaxsuggest::lexall#[]()","ruby thread#[]()","ruby win32ole#[]()","ruby win32ole::variant#[]()","ruby warning::[]()","ruby win32::registry#[]()","ruby yaml::dbm#[]()","rails actioncontroller::parameters#[]=()","rails actiondispatch::flash::flashhash#[]=()","rails actiondispatch::http::headers#[]=()","rails actionmailer::base::lateattachmentsproxy#[]=()","rails activerecord::attributemethods#[]=()","rails activerecord::encryption::properties#[]=()","rails activerecord::fixtureset#[]=()","rails activesupport::hashwithindifferentaccess#[]=()","rails activesupport::hashwithindifferentaccess#[]=()","rails activesupport::orderedoptions#[]=()","rails activesupport::safebuffer#[]=()","rails rails::paths::root#[]=()","ruby array#[]=()","ruby cgi::session#[]=()","ruby csv::row#[]=()","ruby csv::table#[]=()","ruby drb::gw#[]=()","ruby env::[]=()","ruby fiber::[]=()","ruby fiddle::cstructentity#[]=()","ruby fiddle::pointer#[]=()","ruby fiddle::structarray#[]=()","ruby gem::configfile#[]=()","ruby hash#[]=()","ruby json::ext::generator::state#[]=()","ruby json::genericobject#[]=()","ruby net::httpheader#[]=()","ruby oleproperty#[]=()","ruby objectspace::weakkeymap#[]=()","ruby objectspace::weakmap#[]=()","ruby openstruct#[]=()","ruby pstore#[]=()","ruby psych::coder#[]=()","ruby ractor#[]=()","ruby reline::history#[]=()","ruby string#[]=()","ruby struct#[]=()","ruby thread#[]=()","ruby win32ole#[]=()","ruby win32ole::variant#[]=()","ruby warning::[]=()","ruby win32::registry#[]=()","ruby yaml::dbm#[]=()","ruby falseclass#^()","ruby io::buffer#^()","ruby integer#^()","ruby nilclass#^()","ruby set#^()","ruby trueclass#^()","ruby kernel#__callee__()","ruby kernel#__dir__()","ruby drb::drbobject#__drbref()","ruby drb::drbobject#__drbref()","ruby drb::drbobject#__drburi()","ruby drb::drbobject#__drburi()","ruby irb::workspace#__evaluate__()","ruby irb::context#__exit__()","ruby delegator#__getobj__()","ruby simpledelegator#__getobj__()","ruby basicobject#__id__()","ruby ractor::movedobject#__id__()","ruby kernel#__method__()","ruby delegator#__raise__()","ruby basicobject#__send__()","ruby ractor::movedobject#__send__()","ruby delegator#__setobj__()","ruby simpledelegator#__setobj__()","ruby rdoc::anymethod#_call_seq()","rails actionview::helpers::urlhelper#_current_page?()","rails actiontext::serialization#_dump()","ruby bigdecimal#_dump()","ruby drb::drbobject#_dump()","ruby drb::drbobject#_dump()","ruby gem::specification#_dump()","ruby openssl::marshal#_dump()","ruby singleton#_dump()","ruby win32::registry#_dump()","ruby enumerator::lazy#_enumerable_collect()","ruby enumerator::lazy#_enumerable_collect_concat()","ruby enumerator::lazy#_enumerable_drop()","ruby enumerator::lazy#_enumerable_drop_while()","ruby enumerator::lazy#_enumerable_filter()","ruby enumerator::lazy#_enumerable_filter_map()","ruby enumerator::lazy#_enumerable_find_all()","ruby enumerator::lazy#_enumerable_flat_map()","ruby enumerator::lazy#_enumerable_grep()","ruby enumerator::lazy#_enumerable_grep_v()","ruby enumerator::lazy#_enumerable_map()","ruby enumerator::lazy#_enumerable_reject()","ruby enumerator::lazy#_enumerable_select()","ruby enumerator::lazy#_enumerable_take()","ruby enumerator::lazy#_enumerable_take_while()","ruby enumerator::lazy#_enumerable_uniq()","ruby enumerator::lazy#_enumerable_zip()","ruby drb::threadobject#_execute()","rails activesupport::forktracker::moderncoreext#_fork()","ruby process::_fork()","rails ","rails activesupport::orderedoptions#_get()","ruby win32ole#_getproperty()","ruby gem::streamui#_gets_noecho()","rails abstractcontroller::helpers#_helpers()","rails actionview::rendering::classmethods#_helpers()","rails abstractcontroller::helpers::classmethods#_helpers_for_modification()","ruby date::_httpdate()","rails abstractcontroller::callbacks::classmethods#_insert_callbacks()","ruby win32ole#_invoke()","ruby date::_iso8601()","ruby date::_jisx0301()","rails actionview::context#_layout_for()","rails actionview::helpers::renderinghelper#_layout_for()","ruby bigdecimal::_load()","ruby drb::drbobject::_load()","ruby drb::drbobject::_load()","ruby gem::specification::_load()","ruby openssl::marshal::classmethods#_load()","ruby singleton::_load()","rails abstractcontroller::rendering#_normalize_args()","rails abstractcontroller::callbacks::classmethods#_normalize_callback_options()","rails abstractcontroller::rendering#_normalize_options()","ruby date::_parse()","rails actionview::context#_prepare_context()","rails abstractcontroller::rendering#_process_options()","rails actioncontroller::renderers#_render_to_body_with_renderer()","rails actioncontroller::renderers::_render_with_renderer_method_name()","ruby date::_rfc2822()","ruby date::_rfc3339()","ruby date::_rfc822()","rails abstractcontroller::urlfor#_routes()","rails abstractcontroller::urlfor::classmethods#_routes()","rails actionview::rendering::classmethods#_routes()","rails actiondispatch::routing::urlfor#_routes_context()","rails actionview::base#_run()","ruby gem::version#_segments()","rails actionview::lookupcontext::detailscache#_set_detail()","ruby irb::context#_set_last_value()","rails actioncontroller::paramswrapper::options::classmethods#_set_wrapper_options()","ruby win32ole#_setproperty()","ruby gem::requirement#_sorted_requirements()","ruby date::_strptime()","ruby datetime::_strptime()","ruby gem::requirement#_tilde_requirements()","rails actionview::helpers::formbuilder::_to_partial_path()","rails actionview::helpers::urlhelper::classmethods#_url_for_modules()","rails actionview::viewpaths::classmethods#_view_paths()","rails actionview::viewpaths::classmethods#_view_paths=()","ruby ractor::selector#_wait()","rails actiondispatch::routing::urlfor#_with_routes()","ruby date::_xmlschema()","ruby kernel#`()","ruby cgi::htmlextension#a()","ruby abbrev::abbrev()","ruby array#abbrev()","ruby gem::specification#abbreviate()","rails actiondispatch::response#abort()","ruby kernel#abort()","ruby optionparser#abort()","ruby pstore#abort()","ruby process::abort()","ruby thread::abort_on_exception()","ruby thread#abort_on_exception()","ruby thread#abort_on_exception=()","ruby thread::abort_on_exception=()","ruby bigdecimal#abs()","ruby complex#abs()","ruby float#abs()","ruby integer#abs()","ruby numeric#abs()","ruby openssl::bn#abs()","ruby rational#abs()","ruby complex#abs2()","ruby numeric#abs2()","ruby uri::generic#absolute()","ruby pathname#absolute?()","ruby resolv::dns::name#absolute?()","ruby uri::generic#absolute?()","ruby file::absolute_path()","ruby rubyvm::instructionsequence#absolute_path()","ruby thread::backtrace::location#absolute_path()","ruby file::absolute_path?()","rails abstractcontroller::base::abstract!()","rails ","rails activerecord::inheritance::classmethods#abstract_class?()","rails rails::railtie::abstract_railtie?()","ruby optionparser::ac#ac_arg_disable()","ruby optionparser::ac#ac_arg_enable()","ruby optionparser::ac#ac_arg_with()","ruby drb::drbsslsocket::sslconfig#accept()","ruby openssl::ssl::sslserver#accept()","ruby openssl::ssl::sslsocket#accept()","ruby optionparser#accept()","ruby optionparser::accept()","ruby optionparser::list#accept()","ruby psych::visitors::jsontree#accept()","ruby psych::visitors::restrictedyamltree#accept()","ruby psych::visitors::toruby#accept()","ruby psych::visitors::visitor#accept()","ruby psych::visitors::yamltree#accept()","ruby socket#accept()","ruby tcpserver#accept()","ruby unixserver#accept()","rails activestorage::analyzer::accept?()","rails activestorage::analyzer::audioanalyzer::accept?()","rails activestorage::analyzer::imageanalyzer::accept?()","rails activestorage::analyzer::imageanalyzer::imagemagick::accept?()","rails activestorage::analyzer::imageanalyzer::vips::accept?()","rails activestorage::analyzer::videoanalyzer::accept?()","rails activestorage::previewer::accept?()","rails activestorage::previewer::mupdfpreviewer::accept?()","rails activestorage::previewer::popplerpdfpreviewer::accept?()","rails activestorage::previewer::videopreviewer::accept?()","ruby cgi::accept_charset()","ruby cgi::accept_charset=()","ruby socket::accept_loop()","ruby openssl::ssl::sslsocket#accept_nonblock()","ruby socket#accept_nonblock()","ruby tcpserver#accept_nonblock()","ruby unixserver#accept_nonblock()","ruby gem::localremoteoptions#accept_uri_http()","rails actiondispatch::http::mimenegotiation#accepts()","rails activerecord::nestedattributes::classmethods#accepts_nested_attributes_for()","rails activerecord::attributemethods#accessed_fields()","rails activerecord::type::json#accessor()","ruby math::acos()","ruby math::acosh()","rails activesupport::inflector::inflections#acronym()","rails actioncontroller::metal::action()","rails activesupport::actionableerror::classmethods#action()","rails ","rails actioncable::helpers::actioncablehelper#action_cable_meta_tag()","rails actionview::layouts#action_has_layout?()","rails abstractcontroller::base::action_methods()","rails abstractcontroller::base#action_methods()","rails abstractcontroller::urlfor::classmethods#action_methods()","rails actioncable::channel::base::action_methods()","rails abstractcontroller::base#action_name()","rails ","rails ","rails ","rails ","rails ","ruby gem::specification#activate()","ruby irb::debug::ui#activate()","ruby gem::specification#activate_dependencies()","ruby gem::basicspecification#activated?()","ruby gem::activated_gem_paths()","rails activerecord::connectionadapters::abstractadapter#active?()","rails activerecord::connectionadapters::mysql2adapter#active?()","rails activerecord::connectionadapters::postgresqladapter#active?()","rails activerecord::connectionadapters::sqlite3adapter#active?()","ruby net::http#active?()","rails activerecord::connectionadapters::connectionpool#active_connection?()","rails activerecord::connectionadapters::connectionhandler#active_connections?()","rails activerecord::encryption::envelopeencryptionkeyprovider#active_primary_key()","rails ","rails ","rails ","rails object#acts_like?()","rails date#acts_like_date?()","rails datetime#acts_like_date?()","rails string#acts_like_string?()","rails activesupport::timewithzone#acts_like_time?()","rails datetime#acts_like_time?()","rails time#acts_like_time?()","rails activerecord::databaseconfigurations::hashconfig#adapter()","rails activerecord::connectionadapters::abstractadapter#adapter_name()","rails ","rails actioncontroller::renderers::add()","rails actiondispatch::http::headers#add()","rails activemodel::errors#add()","rails activerecord::connectionadapters::connectionpool::queue#add()","rails activerecord::connectionadapters::schemacache#add()","rails activerecord::encryption::properties#add()","rails activesupport::inflector::inflections::uncountables#add()","rails rails::paths::root#add()","ruby acl::acllist#add()","ruby benchmark::tms#add()","ruby bigdecimal#add()","ruby drb::weakidconv::weakset#add()","ruby gem::availableset#add()","ruby gem::dependencylist#add()","ruby gem::resolver::requirementlist#add()","ruby logger#add()","ruby openssl::pkey::ec::point#add()","ruby psych::coder#add()","ruby rdoc::context#add()","ruby ractor::selector#add()","ruby resolv::dns::svcparams#add()","ruby rinda::tuplebag::tuplebin#add()","ruby set#add()","ruby syslog::logger#add()","ruby threadgroup#add()","ruby benchmark::tms#add!()","ruby set#add?()","ruby gem::requestset::lockfile#add_git()","rails actionmailbox::generators::installgenerator#add_action_mailbox_production_environment_config()","ruby rdoc::anymethod#add_alias()","ruby rdoc::attr#add_alias()","ruby rdoc::context#add_alias()","ruby rdoc::methodattr#add_alias()","ruby rdoc::parser::c#add_alias()","ruby rdoc::stats#add_alias()","ruby rdoc::toplevel#add_alias()","ruby gem::resolver::installerset#add_always_install()","ruby openssl::x509::request#add_attribute()","ruby rdoc::context#add_attribute()","ruby rdoc::stats#add_attribute()","rails activerecord::connectionadapters::schemastatements#add_belongs_to()","rails activerecord::statementcache::partialquerycollector#add_bind()","ruby gem::specification#add_bindir()","rails activerecord::statementcache::partialquerycollector#add_binds()","ruby gem::localremoteoptions#add_bulk_threshold_option()","ruby rdoc::store#add_c_enclosure()","ruby rdoc::store#add_c_variables()","ruby openssl::x509::store#add_cert()","ruby openssl::ocsp::request#add_certid()","ruby openssl::pkcs7#add_certificate()","ruby openssl::ssl::sslcontext#add_certificate()","rails actioncable::subscriptionadapter::postgresql::listener#add_channel()","rails actioncable::subscriptionadapter::redis::listener#add_channel()","rails actioncable::subscriptionadapter::subscribermap#add_channel()","rails activerecord::connectionadapters::schemastatements#add_check_constraint()","ruby gem::package#add_checksums()","rails activerecord::connectionadapters::transactionstate#add_child()","ruby rdoc::context#add_class()","ruby rdoc::stats#add_class()","ruby rdoc::context#add_class_or_module()","ruby gem::localremoteoptions#add_clear_sources_option()","rails activerecord::connectionadapters::schemastatements#add_column()","ruby rdoc::classmodule#add_comment()","ruby gem::command::add_common_option()","ruby rdoc::context#add_constant()","ruby rdoc::stats#add_constant()","ruby rdoc::toplevel#add_constant()","ruby csv::fieldsconverter#add_converter()","ruby openssl::pkcs7#add_crl()","ruby openssl::x509::store#add_crl()","ruby openssl::pkcs7#add_data()","ruby reline::config#add_default_key_binding()","ruby reline::config#add_default_key_binding_by_keymap()","rails actionmailer::deliverymethods::classmethods#add_delivery_method()","ruby gem::specification#add_dependency()","ruby gem::specification#add_development_dependency()","ruby reline::core#add_dialog_proc()","ruby reline::lineeditor#add_dialog_proc()","ruby zlib::inflate#add_dictionary()","ruby openssl::x509::name#add_entry()","rails activesupport::subscriber::add_event_subscriber()","ruby rdoc::context#add_extend()","ruby openssl::x509::crl#add_extension()","ruby openssl::x509::certificate#add_extension()","ruby openssl::x509::revoked#add_extension()","ruby gem::command#add_extra_args()","ruby net::httpheader#add_field()","ruby gem::package::tarwriter#add_file()","ruby openssl::x509::store#add_file()","ruby rdoc::stats#add_file()","ruby rdoc::store#add_file()","ruby gem::package::tarwriter#add_file_digest()","ruby gem::package::tarwriter#add_file_signed()","ruby gem::package::tarwriter#add_file_simple()","rails activesupport::backtracecleaner#add_filter()","rails actioncontroller::flash::classmethods#add_flash_types()","rails activerecord::connectionadapters::schemastatements#add_foreign_key()","ruby rdoc::rdoc::add_generator()","ruby rdoc::markup#add_html()","ruby rdoc::context#add_include()","ruby rdoc::toplevel#add_include()","rails activerecord::connectionadapters::schemastatements#add_index()","ruby gem::installupdateoptions#add_install_update_options()","ruby gem::gemcutterutilities#add_key_option()","rails activerecord::encryption::encryptablerecord#add_length_validation_for_encrypted_columns()","ruby gem::resolver::installerset#add_local()","ruby gem::localremoteoptions#add_local_remote_options()","ruby rdoc::context#add_method()","ruby rdoc::stats#add_method()","ruby rdoc::toplevel#add_method()","ruby rdoc::context#add_module()","ruby rdoc::stats#add_module()","ruby rdoc::context#add_module_alias()","ruby rdoc::context#add_module_by_normal_module()","ruby openssl::ocsp::basicresponse#add_nonce()","ruby openssl::ocsp::request#add_nonce()","ruby observable#add_observer()","ruby reline::config#add_oneshot_key_binding()","ruby gem::command#add_option()","ruby gem::gemcutterutilities#add_otp_option()","ruby gem::commands::ownercommand#add_owners()","ruby gem::commands::environmentcommand#add_path()","ruby openssl::x509::store#add_path()","ruby gem::platformmismatch#add_platform()","ruby gem::versionoption#add_platform_option()","ruby gem::versionoption#add_prerelease_option()","ruby drb::drbprotocol::add_protocol()","ruby gem::localremoteoptions#add_proxy_option()","ruby gem::queryutils#add_query_options()","ruby openssl::pkcs7#add_recipient()","rails activerecord::connectionadapters::schemastatements#add_reference()","ruby rdoc::markup#add_regexp_handling()","rails actioncontroller::add_renderer()","ruby rdoc::context#add_require()","ruby openssl::x509::crl#add_revoked()","rails actionmailbox::router#add_route()","rails actionmailbox::router#add_routes()","ruby csv#add_row()","ruby gem::specification#add_runtime_dependency()","ruby rdoc::context#add_section()","ruby gem::securityoption#add_security_option()","ruby gem::specification#add_self_to_load_path()","rails rails::generators::base::add_shebang_option!()","ruby openssl::pkcs7#add_signer()","rails activesupport::backtracecleaner#add_silencer()","rails rails::generators::actions#add_source()","ruby gem::resolver::sourceset#add_source_gem()","ruby gem::localremoteoptions#add_source_option()","ruby gem::specification::add_spec()","ruby gem::command::add_specific_extra_args()","ruby openssl::ocsp::basicresponse#add_status()","ruby gc::add_stress_to_class()","rails actioncable::subscriptionadapter::async::asyncsubscribermap#add_subscriber()","rails actioncable::subscriptionadapter::subscribermap#add_subscriber()","ruby gem::package::tarwriter#add_symlink()","rails actioncable::connection::taggedloggerproxy#add_tags()","rails activerecord::connectionadapters::schemastatements#add_timestamps()","ruby rdoc::context#add_to()","ruby rdoc::toplevel#add_to_classes_or_modules()","ruby gem::add_to_load_path()","ruby rdoc::tokenstream#add_token()","ruby rdoc::parser::rubytools#add_token_listener()","ruby rdoc::tokenstream#add_tokens()","ruby thread#add_trace_func()","rails activerecord::connectionadapters::databasestatements#add_transaction_record()","ruby gem::localremoteoptions#add_update_sources_option()","ruby gem::versionoption#add_version_option()","ruby rdoc::markup#add_word_pair()","rails activemodel::errors#added?()","ruby optionparser#additional_message()","ruby ipsocket#addr()","ruby openssl::ssl::socketforwarder#addr()","ruby socket::ifaddr#addr()","ruby unixsocket#addr()","ruby fiber::scheduler#address_resolve()","ruby zlib::zstream#adler()","ruby zlib::adler32()","ruby zlib::adler32_combine()","rails activesupport::timewithzone#advance()","rails date#advance()","rails datetime#advance()","rails time#advance()","ruby io#advise()","ruby addrinfo#afamily()","rails actiondispatch::callbacks::after()","rails activesupport::duration#after()","rails rails::initializable::initializer#after()","rails dateandtime::calculations#after?()","rails abstractcontroller::callbacks::classmethods#after_action()","rails rails::generators::appgenerator#after_bundle()","rails activesupport::reloader::after_class_unload()","rails activerecord::transactions::classmethods#after_commit()","rails activerecord::callbacks::classmethods#after_create()","rails activerecord::transactions::classmethods#after_create_commit()","rails activerecord::callbacks::classmethods#after_destroy()","rails activerecord::transactions::classmethods#after_destroy_commit()","rails activejob::callbacks::classmethods#after_enqueue()","rails activerecord::callbacks::classmethods#after_find()","ruby irb::debug::ui#after_fork_parent()","rails activerecord::callbacks::classmethods#after_initialize()","rails rails::railtie::configuration#after_initialize()","rails activejob::callbacks::classmethods#after_perform()","rails actionmailbox::callbacks#after_processing()","rails activesupport::currentattributes::after_reset()","rails activerecord::transactions::classmethods#after_rollback()","rails activerecord::callbacks::classmethods#after_save()","rails activerecord::transactions::classmethods#after_save_commit()","rails actioncable::channel::callbacks::classmethods#after_subscribe()","rails activerecord::callbacks::classmethods#after_touch()","rails actioncable::channel::callbacks::classmethods#after_unsubscribe()","rails activerecord::callbacks::classmethods#after_update()","rails activerecord::transactions::classmethods#after_update_commit()","rails activemodel::validations::callbacks::classmethods#after_validation()","rails activesupport::duration#ago()","rails activesupport::timewithzone#ago()","rails date#ago()","rails datetime#ago()","rails time#ago()","rails ","ruby date#ajd()","rails actiondispatch::flash::flashhash#alert()","ruby gem::streamui#alert()","ruby gem::userinteraction#alert()","rails actiondispatch::flash::flashhash#alert=()","ruby gem::streamui#alert_error()","ruby gem::userinteraction#alert_error()","ruby gem::streamui#alert_warning()","ruby gem::userinteraction#alert_warning()","ruby openssl::timestamp::request#algorithm()","ruby openssl::timestamp::tokeninfo#algorithm()","ruby openssl::timestamp::request#algorithm=()","ruby psych::emitter#alias()","ruby psych::handler#alias()","ruby psych::treebuilder#alias()","ruby psych::nodes::alias#alias?()","ruby psych::nodes::node#alias?()","rails activemodel::attributemethods::classmethods#alias_attribute()","rails module#alias_attribute()","ruby rdoc::parser::alias_extension()","ruby module#alias_method()","ruby resolv::dns::resource::in::servicebinding#alias_mode?()","ruby encoding::aliases()","ruby gem::validator#alien()","ruby fiddle::cstructentity::alignment()","ruby drb::drbserver#alive?()","ruby drb::extserv#alive?()","ruby drb::threadobject#alive?()","ruby fiber#alive?()","ruby rinda::tupleentry#alive?()","ruby thread#alive?()","rails actioncontroller::mimeresponds::collector#all()","rails actionmailer::collector#all()","rails actionmailer::preview::all()","rails activerecord::scoping::named::classmethods#all()","rails activesupport::timezone::all()","rails rails::generators::activemodel::all()","ruby gem::specification::all()","ruby gem::specification::all=()","rails mime::alltype#all?()","rails mime::type#all?()","ruby array#all?()","ruby enumerable#all?()","ruby rdoc::store#all_classes()","ruby rdoc::store#all_classes_and_modules()","ruby irb::extendcommandbundle::all_commands_info()","rails activerecord::connectionadapters::connectionhandler#all_connection_pools()","rails dateandtime::calculations#all_day()","ruby rdoc::store#all_files()","rails activerecord::connectionadapters::abstractadapter#all_foreign_keys_valid?()","rails actioncontroller::helpers::classmethods#all_helpers_from_path()","ruby rdoc::store#all_modules()","rails dateandtime::calculations#all_month()","ruby gem::specification::all_names()","rails rails::paths::root#all_paths()","rails dateandtime::calculations#all_quarter()","ruby gem::availableset#all_specs()","ruby symbol::all_symbols()","ruby rubyvm::abstractsyntaxtree::node#all_tokens()","rails dateandtime::calculations#all_week()","rails dateandtime::calculations#all_year()","ruby integer#allbits?()","ruby ripper::lexer::state#allbits?()","ruby class#allocate()","ruby objectspace::allocation_class_path()","ruby objectspace::allocation_generation()","ruby objectspace::allocation_method_id()","ruby objectspace::allocation_sourcefile()","ruby objectspace::allocation_sourceline()","rails activesupport::notifications::event#allocations()","rails activesupport::deprecation::reporting#allow()","ruby acl#allow_addr?()","ruby gem::resolver#allow_missing?()","ruby json::ext::generator::state#allow_nan?()","ruby tracepoint::allow_reentry()","ruby acl#allow_socket?()","ruby random::formatter#alphanumeric()","ruby openssl::ssl::sslsocket#alpn_protocol()","ruby gem::security::alt_name_or_x509_entry()","ruby reline::core#ambiguous_width()","ruby date#amjd()","rails activestorage::blob::analyzable#analyze()","rails activestorage::blob::analyzable#analyze_later()","rails activestorage::analyzer::analyze_later?()","rails activestorage::blob::analyzable#analyzed?()","ruby module#ancestors()","ruby rdoc::classmodule#ancestors()","ruby rdoc::normalclass#ancestors()","ruby rdoc::singleclass#ancestors()","ruby rdoc::store#ancestors()","rails activerecord::querymethods#and()","ruby io::buffer#and!()","ruby complex#angle()","ruby float#angle()","ruby numeric#angle()","rails activerecord::querymethods#annotate()","rails rails::application::configuration#annotations()","rails activerecord::migration#announce()","rails module#anonymous?()","rails actioncontroller::mimeresponds::collector#any()","rails actionmailer::collector#any()","rails actionview::lookupcontext::viewpaths#any?()","rails activerecord::associations::collectionproxy#any?()","rails activerecord::relation#any?()","rails activesupport::arrayinquirer#any?()","ruby array#any?()","ruby enumerable#any?()","ruby hash#any?()","rails actioncontroller::requestforgeryprotection#any_authenticity_token_valid?()","ruby rdoc::context#any_content()","rails actioncontroller::mimeresponds::collector#any_response?()","rails actionview::lookupcontext::viewpaths#any_templates?()","rails activerecord::connectionadapters::connectionpool::queue#any_waiting?()","ruby integer#anybits?()","ruby ripper::lexer::state#anybits?()","rails ","rails rails::api::repotask#api_dir()","ruby gem::gemcutterutilities#api_key()","ruby gem::configfile#api_keys()","rails rails::api::task#api_main()","rails rails::generators::api_only!()","rails rails::application::configuration#api_only=()","rails actiondispatch::routing::mapper::resources#api_only?()","rails rails::appbuilder#app()","rails rails::consolemethods#app()","rails rails::engine#app()","rails rails::pluginbuilder#app()","ruby bundler::app_cache()","ruby bundler::app_config_path()","rails rails::railtie::configuration#app_generators()","rails rails::railtie::configuration#app_middleware()","ruby gem::installer#app_script_text()","rails activerecord::associations::collectionproxy#append()","ruby array#append()","ruby optionparser::list#append()","ruby reline::killring#append()","rails abstractcontroller::callbacks::classmethods#append_after_action()","rails abstractcontroller::callbacks::classmethods#append_around_action()","rails actiontext::content#append_attachables()","rails abstractcontroller::callbacks::classmethods#append_before_action()","ruby makemakefile#append_cflags()","rails actioncontroller::instrumentation#append_info_to_payload()","rails actiontext::generators::installgenerator#append_javascript_dependencies()","rails actionview::viewpaths#append_view_path()","rails actionview::viewpaths::classmethods#append_view_path()","rails ","rails ","rails rails::application()","rails rails::generators::actions#application()","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails ","rails rails::generators::namedbase#application_name()","rails ","rails ","rails ","rails actiondispatch::exceptionwrapper#application_trace()","rails activesupport::codegenerator::methodset#apply()","ruby gem::version#approximate_recommendation()","ruby rdoc::alias#aref()","ruby rdoc::classmodule#aref()","ruby rdoc::methodattr#aref()","ruby rdoc::anymethod#aref_prefix()","ruby rdoc::attr#aref_prefix()","ruby rdoc::methodattr#aref_prefix()","ruby complex#arg()","ruby float#arg()","ruby numeric#arg()","ruby rdoc::anymethod#arglists()","ruby nomethoderror#args()","ruby rdoc::markupreference#args_directive()","ruby ","ruby gem::command#arguments()","ruby argf#argv()","ruby process::argv0()","ruby method#arity()","ruby proc#arity()","ruby unboundmethod#arity()","rails abstractcontroller::callbacks::classmethods#around_action()","rails activerecord::callbacks::classmethods#around_create()","rails activerecord::callbacks::classmethods#around_destroy()","rails activejob::callbacks::classmethods#around_enqueue()","rails activejob::callbacks::classmethods#around_perform()","rails actionmailbox::callbacks#around_processing()","rails activerecord::callbacks::classmethods#around_save()","rails activerecord::callbacks::classmethods#around_update()","ruby win32ole::variant::array()","ruby gem::specification::array_attributes()","ruby json::ext::generator::state#array_nl()","ruby json::ext::generator::state#array_nl=()","rails actioncontroller::parameters#as_json()","rails actiontext::attachable#as_json()","rails actiontext::content#as_json()","rails activemodel::errors#as_json()","rails activemodel::serializers::json#as_json()","rails activestorage::filename#as_json()","rails activesupport::timewithzone#as_json()","rails exception#as_json()","ruby bigdecimal#as_json()","ruby complex#as_json()","ruby date#as_json()","ruby datetime#as_json()","ruby exception#as_json()","ruby json::genericobject#as_json()","ruby openstruct#as_json()","ruby range#as_json()","ruby rational#as_json()","ruby regexp#as_json()","ruby set#as_json()","ruby struct#as_json()","ruby symbol#as_json()","ruby time#as_json()","ruby pathname#ascend()","ruby encoding#ascii_compatible?()","ruby json::ext::generator::state#ascii_only?()","ruby string#ascii_only?()","ruby encoding::converter::asciicompat_encoding()","ruby date#asctime()","ruby time#asctime()","ruby math::asin()","ruby math::asinh()","ruby gem::streamui#ask()","ruby gem::userinteraction#ask()","ruby irb::debug::ui#ask()","ruby gem::streamui#ask_for_password()","ruby gem::userinteraction#ask_for_password()","ruby gem::streamui#ask_yes_no()","ruby gem::userinteraction#ask_yes_no()","ruby openssl::pkey::ec::group#asn1_flag()","ruby openssl::pkey::ec::group#asn1_flag=()","rails hash#assert_valid_keys()","rails activemodel::type::value#assert_valid_value()","rails activemodel::type::value#assert_valid_value()","ruby rdoc::servlet#asset()","rails actionview::helpers::asseturlhelper#asset_path()","rails actionview::helpers::asseturlhelper#asset_url()","rails ","rails rails::pluginbuilder#assets_manifest()","rails activemodel::attributeassignment#assign_attributes()","ruby fiddle::cstructentity#assign_names()","ruby ","rails activesupport::hashwithindifferentaccess#assoc()","rails activesupport::hashwithindifferentaccess#assoc()","ruby array#assoc()","ruby env::assoc()","ruby hash#assoc()","rails activerecord::querymethods::wherechain#associated()","rails activerecord::connectionadapters::schemastatements#assume_migrated_upto_version()","rails activesupport::timezone#at()","rails string#at()","rails time::at()","ruby array#at()","ruby gem::installer::at()","ruby time::at()","rails date#at_beginning_of_day()","rails datetime#at_beginning_of_day()","rails time#at_beginning_of_day()","rails datetime#at_beginning_of_hour()","rails time#at_beginning_of_hour()","rails datetime#at_beginning_of_minute()","rails time#at_beginning_of_minute()","rails dateandtime::calculations#at_beginning_of_month()","rails dateandtime::calculations#at_beginning_of_quarter()","rails dateandtime::calculations#at_beginning_of_week()","rails dateandtime::calculations#at_beginning_of_year()","rails date#at_end_of_day()","rails datetime#at_end_of_day()","rails time#at_end_of_day()","rails datetime#at_end_of_hour()","rails time#at_end_of_hour()","rails datetime#at_end_of_minute()","rails time#at_end_of_minute()","rails dateandtime::calculations#at_end_of_month()","rails dateandtime::calculations#at_end_of_quarter()","rails dateandtime::calculations#at_end_of_week()","rails dateandtime::calculations#at_end_of_year()","ruby kernel#at_exit()","rails date#at_midday()","rails datetime#at_midday()","rails time#at_midday()","rails date#at_middle_of_day()","rails datetime#at_middle_of_day()","rails time#at_middle_of_day()","rails date#at_midnight()","rails datetime#at_midnight()","rails time#at_midnight()","rails date#at_noon()","rails datetime#at_noon()","rails time#at_noon()","rails time::at_with_coercion()","rails time::at_without_coercion()","ruby bigmath#atan()","ruby math::atan()","ruby math::atan2()","ruby math::atanh()","ruby file#atime()","ruby file::atime()","ruby file::stat#atime()","ruby pathname#atime()","rails actionview::helpers::atomfeedhelper#atom_feed()","rails file::atomic_write()","rails actioncable::connection::streameventloop#attach()","rails activestorage::attached::many#attach()","rails activestorage::attached::one#attach()","ruby prism::parseresult::comments#attach!()","ruby prism::parseresult#attach_comments!()","ruby gem::unknowncommanderror::attach_correctable()","rails activesupport::subscriber::attach_to()","rails actiontext::attachable#attachable_content_type()","rails actiontext::attachable#attachable_filename()","rails actiontext::attachable#attachable_filesize()","rails actiontext::attachable#attachable_metadata()","rails actiontext::attachables::contentattachment#attachable_plain_text_representation()","rails actiontext::attachables::remoteimage#attachable_plain_text_representation()","rails actiontext::engine#attachable_plain_text_representation()","rails actiontext::attachable#attachable_sgid()","rails actiontext::content#attachables()","rails activestorage::attached::many#attached?()","rails activestorage::attached::one#attached?()","ruby class#attached_object()","rails actiontext::fixtureset::attachment()","rails activestorage::attached::one#attachment()","rails actiontext::content#attachment_galleries()","rails actiontext::attachmentgallery::attachment_selector()","rails ","rails actionmailer::base#attachments()","rails actionmailer::mailhelper#attachments()","rails actiontext::attachmentgallery#attachments()","rails actiontext::content#attachments()","rails activestorage::attached::many#attachments()","rails actiondispatch::filehandler#attempt()","ruby module#attr()","ruby module#attr_accessor()","rails module#attr_internal()","rails module#attr_internal_accessor()","rails module#attr_internal_reader()","rails module#attr_internal_writer()","ruby module#attr_reader()","rails activerecord::readonlyattributes::classmethods#attr_readonly()","ruby module#attr_writer()","rails activemodel::attributes::classmethods#attribute()","rails activerecord::attributes::classmethods#attribute()","rails activesupport::currentattributes::attribute()","rails activemodel::attributemethods::classmethods#attribute_alias()","rails activemodel::attributemethods::classmethods#attribute_alias?()","rails activerecord::attributemethods::dirty#attribute_before_last_save()","rails activerecord::attributemethods::dirty#attribute_change_to_be_saved()","rails activerecord::attributemethods#attribute_for_inspect()","rails activerecord::attributemethods::dirty#attribute_in_database()","rails activemodel::validations::classmethods#attribute_method?()","rails activerecord::attributemethods::classmethods#attribute_method?()","rails activemodel::attributemethods::classmethods#attribute_method_affix()","rails activemodel::attributemethods::classmethods#attribute_method_prefix()","rails activemodel::attributemethods::classmethods#attribute_method_suffix()","rails activemodel::attributemethods#attribute_missing()","rails activemodel::attributes::classmethods#attribute_names()","rails activemodel::errors#attribute_names()","rails activerecord::attributemethods#attribute_names()","rails activerecord::attributemethods::classmethods#attribute_names()","ruby gem::specification::attribute_names()","rails activerecord::attributemethods#attribute_present?()","rails actiontext::trixattachment#attributes()","rails activerecord::attributemethods#attributes()","ruby openssl::x509::request#attributes()","ruby rdoc::store#attributes()","ruby uri::ldap#attributes()","rails activemodel::attributeassignment#attributes=()","ruby openssl::x509::request#attributes=()","ruby uri::ldap#attributes=()","rails activerecord::attributemethods::beforetypecast#attributes_before_type_cast()","rails activerecord::attributemethods::beforetypecast#attributes_for_database()","rails activemodel::error#attributes_for_hash()","rails activerecord::attributemethods::dirty#attributes_in_database()","rails rails::generators::namedbase#attributes_names()","rails activestorage::blob#audio?()","rails actionview::helpers::asseturlhelper#audio_path()","rails actionview::helpers::assettaghelper#audio_tag()","rails actionview::helpers::asseturlhelper#audio_url()","ruby openssl::cipher#auth_data=()","rails actioncontroller::httpauthentication::basic#auth_param()","rails actioncontroller::httpauthentication::basic#auth_scheme()","ruby openssl::cipher#auth_tag()","ruby openssl::cipher#auth_tag=()","ruby openssl::cipher#auth_tag_len=()","rails actioncontroller::httpauthentication::basic#authenticate()","rails actioncontroller::httpauthentication::digest#authenticate()","rails actioncontroller::httpauthentication::token#authenticate()","rails actioncontroller::httpauthentication::basic::controllermethods#authenticate_or_request_with_http_basic()","rails actioncontroller::httpauthentication::digest::controllermethods#authenticate_or_request_with_http_digest()","rails actioncontroller::httpauthentication::token::controllermethods#authenticate_or_request_with_http_token()","rails actioncontroller::httpauthentication::basic::controllermethods#authenticate_with_http_basic()","rails actioncontroller::httpauthentication::digest::controllermethods#authenticate_with_http_digest()","rails actioncontroller::httpauthentication::token::controllermethods#authenticate_with_http_token()","rails actionmailbox::ingresses::mailgun::inboundemailscontroller::authenticator#authenticated?()","rails actionmailbox::ingresses::mandrill::inboundemailscontroller::authenticator#authenticated?()","ruby openssl::cipher#authenticated?()","rails actioncontroller::httpauthentication::digest#authentication_header()","rails actioncontroller::httpauthentication::basic#authentication_request()","rails actioncontroller::httpauthentication::digest#authentication_request()","rails actioncontroller::httpauthentication::token#authentication_request()","ruby gem::specification#author()","ruby gem::specification#author=()","ruby uri::http#authority()","ruby openssl::x509::extension::authoritykeyidentifier#authority_key_identifier()","rails actiondispatch::request#authorization()","ruby gem::specification#authors()","ruby gem::specification#authors=()","ruby gc::auto_compact()","ruby gc::auto_compact=()","rails actionview::helpers::assettaghelper#auto_discovery_link_tag()","ruby irb::relineinputmethod#auto_indent()","ruby reline::core#auto_indent_proc=()","ruby io#autoclose=()","ruby io#autoclose?()","rails activesupport::autoload#autoload()","ruby kernel#autoload()","ruby module#autoload()","ruby kernel#autoload?()","ruby module#autoload?()","rails activesupport::autoload#autoload_at()","rails rails::paths::root#autoload_once()","rails rails::engine::configuration#autoload_once_paths()","rails rails::engine::configuration#autoload_paths()","rails rails::paths::root#autoload_paths()","rails activesupport::autoload#autoload_under()","rails rails::autoloaders()","rails activesupport::autoload#autoloads()","rails activerecord::reflection::macroreflection#autosave=()","ruby zlib::zstream#avail_in()","ruby zlib::zstream#avail_out()","ruby zlib::zstream#avail_out=()","rails abstractcontroller::base#available_action?()","ruby gem::specfetcher#available_specs()","rails activerecord::calculations#average()","rails actiondispatch::response#await_commit()","rails actiondispatch::response#await_sent()","ruby string#b()","rails activesupport::xmlmini#backend()","rails activesupport::xmlmini#backend=()","ruby exception#backtrace()","ruby fiber#backtrace()","ruby gem::configfile#backtrace()","ruby gem::streamui#backtrace()","ruby thread#backtrace()","rails rails::backtrace_cleaner()","ruby exception#backtrace_locations()","ruby fiber#backtrace_locations()","ruby thread#backtrace_locations()","ruby gem::resolver::stats#backtracking!()","ruby reline::lineeditor#backward_char()","ruby reline::lineeditor#backward_delete_char()","ruby reline::lineeditor#backward_kill_word()","ruby reline::lineeditor#backward_word()","rails rails::command::base::banner()","rails rails::generators::base::banner()","ruby optionparser#banner()","rails activestorage::filename#base()","ruby cgi::htmlextension#base()","ruby optionparser#base()","rails securerandom::base36()","rails securerandom::base58()","ruby random::formatter#base64()","ruby digest::class::base64digest()","ruby digest::instance#base64digest()","ruby openssl::hmac::base64digest()","ruby openssl::hmac#base64digest()","ruby digest::instance#base64digest!()","rails activerecord::inheritance::classmethods#base_class?()","ruby gem::basicspecification#base_dir()","ruby gem::specification#base_dir()","ruby rubyvm::instructionsequence#base_label()","ruby thread::backtrace::location#base_label()","rails rails::command::base::base_name()","rails rails::generators::base::base_name()","ruby rdoc::toplevel#base_name()","rails rails::generators::base::base_root()","ruby file::basename()","ruby pathname#basename()","ruby openssl::ocsp::response#basic()","ruby net::httpheader#basic_auth()","ruby reline::core#basic_quote_characters=()","ruby reline::core#basic_word_break_characters=()","rails activerecord::batches::batchenumerator#batch_size()","rails mail::message#bcc_addresses()","rails actioncable::connection::base#beat()","rails activerecord::persistence#becomes()","rails activerecord::persistence#becomes!()","ruby io#beep()","rails actiondispatch::callbacks::before()","rails activesupport::duration#before()","rails rails::initializable::initializer#before()","rails dateandtime::calculations#before?()","rails abstractcontroller::callbacks::classmethods#before_action()","rails activesupport::reloader::before_class_unload()","rails rails::railtie::configuration#before_configuration()","rails activerecord::callbacks::classmethods#before_create()","rails activerecord::callbacks::classmethods#before_destroy()","rails rails::railtie::configuration#before_eager_load()","rails activejob::callbacks::classmethods#before_enqueue()","rails rails::railtie::configuration#before_initialize()","rails activejob::callbacks::classmethods#before_perform()","rails actionmailbox::callbacks#before_processing()","rails activesupport::currentattributes::before_reset()","ruby rdoc::task#before_running_rdoc()","rails activerecord::callbacks::classmethods#before_save()","rails actioncable::channel::callbacks::classmethods#before_subscribe()","rails actioncable::channel::callbacks::classmethods#before_unsubscribe()","rails activerecord::callbacks::classmethods#before_update()","rails activemodel::validations::callbacks::classmethods#before_validation()","ruby enumerator::arithmeticsequence#begin()","ruby matchdata#begin()","ruby range#begin()","ruby rdoc::stats#begin_adding()","ruby ipaddr#begin_addr()","rails activerecord::connectionadapters::databasestatements#begin_db_transaction()","rails activerecord::connectionadapters::databasestatements#begin_isolated_db_transaction()","rails date#beginning_of_day()","rails datetime#beginning_of_day()","rails time#beginning_of_day()","rails datetime#beginning_of_hour()","rails time#beginning_of_hour()","ruby reline::lineeditor#beginning_of_line()","ruby stringscanner#beginning_of_line?()","rails datetime#beginning_of_minute()","rails time#beginning_of_minute()","rails dateandtime::calculations#beginning_of_month()","rails dateandtime::calculations#beginning_of_quarter()","rails date::beginning_of_week()","rails dateandtime::calculations#beginning_of_week()","rails date::beginning_of_week=()","rails dateandtime::calculations#beginning_of_year()","ruby gem::command#begins?()","rails activesupport::deprecation::behavior#behavior()","rails activesupport::deprecation::behavior#behavior=()","rails activerecord::associations::classmethods#belongs_to()","rails activerecord::connectionadapters::sqlite3::tabledefinition#belongs_to()","rails activerecord::connectionadapters::table#belongs_to()","rails activerecord::connectionadapters::tabledefinition#belongs_to()","rails rails::initializable::initializer#belongs_to?()","rails activesupport::benchmarkable#benchmark()","ruby benchmark::benchmark()","rails ","rails activesupport::timewithzone#between?()","ruby comparable#between?()","rails activerecord::connectionadapters::postgresql::columnmethods#bigserial()","rails rails::appbuilder#bin()","rails rails::pluginbuilder#bin()","ruby gem::specification#bin_dir()","ruby gem::specification#bin_file()","ruby gem::commands::setupcommand#bin_file_names()","ruby bundler::bin_path()","ruby gem::bin_path()","rails rails::appbuilder#bin_when_updating()","rails activerecord::connectionadapters::postgresql::oid::bit::data#binary?()","ruby rdoc::parser::binary?()","ruby gem::binary_mode()","rails rails::initializable::initializer#bind()","ruby addrinfo#bind()","ruby fiddle::importer#bind()","ruby socket#bind()","ruby udpsocket#bind()","ruby unboundmethod#bind()","ruby unboundmethod#bind_call()","ruby fiddle::importer#bind_function()","ruby reline::config#bind_key()","rails actionview::unboundtemplate#bind_locals()","ruby reline::config#bind_variable()","ruby kernel#binding()","ruby proc#binding()","ruby tracepoint#binding()","ruby gem::bindir()","ruby argf#binmode()","ruby io#binmode()","ruby stringio#binmode()","ruby argf#binmode?()","ruby csv#binmode?()","ruby io#binmode?()","ruby io::binread()","ruby pathname#binread()","ruby io::binwrite()","ruby pathname#binwrite()","ruby file::birthtime()","ruby file#birthtime()","ruby file::stat#birthtime()","ruby pathname#birthtime()","rails activerecord::connectionadapters::postgresql::columnmethods#bit()","ruby integer#bit_length()","ruby openssl::bn#bit_set?()","rails activerecord::connectionadapters::postgresql::columnmethods#bit_varying()","rails activerecord::databaseconfigurations#blank?()","rails activerecord::relation#blank?()","rails activestorage::attached::one#blank?()","rails activesupport::timewithzone#blank?()","rails falseclass#blank?()","rails nilclass#blank?()","rails object#blank?()","rails string#blank?()","rails trueclass#blank?()","ruby file::stat#blksize()","rails activerecord::connectionadapters::mysql::columnmethods#blob()","rails activestorage::fixtureset::blob()","rails ","rails ","rails activestorage::attached::many#blobs()","ruby fiber::scheduler#block()","rails actiondispatch::contentsecuritypolicy#block_all_mixed_content()","rails actionmailer::mailhelper#block_format()","ruby kernel#block_given?()","ruby digest::base#block_length()","ruby digest::instance#block_length()","ruby digest::sha2#block_length()","ruby openssl::digest#block_length()","ruby rdoc::methodattr#block_params=()","ruby openssl::cipher#block_size()","ruby file::blockdev?()","ruby file::stat#blockdev?()","ruby filetest#blockdev?()","ruby pathname#blockdev?()","ruby fiber::blocking()","ruby fiber::blocking?()","ruby fiber#blocking?()","ruby cgi::htmlextension#blockquote()","ruby file::stat#blocks()","ruby benchmark::bm()","ruby benchmark::bmbm()","rails actiondispatch::request#body()","rails actiondispatch::response#body()","rails actiondispatch::response::rackbody#body()","rails actionview::abstractrenderer::renderedcollection::emptycollection#body()","ruby net::httpresponse#body()","rails actiondispatch::response#body=()","ruby net::httpgenericrequest#body=()","ruby net::httpresponse#body=()","ruby net::httpresponse#body_encoding=()","rails actiondispatch::response#body_parts()","ruby net::httpresponse::body_permitted?()","ruby net::httpgenericrequest#body_stream=()","ruby socket::option::bool()","ruby socket::option#bool()","rails ","rails ","ruby gem::localremoteoptions#both?()","ruby irb::frame#bottom()","ruby irb::frame::bottom()","rails actionmailbox::base#bounce_with()","rails activerecord::connectionadapters::postgresql::columnmethods#box()","ruby rdoc::markdown#break_on_newline()","ruby prettyprint#break_outmost_groups()","ruby prettyprint#breakable()","ruby prettyprint::singleline#breakable()","ruby socket::ifaddr#broadaddr()","rails actioncable::server::broadcasting#broadcast()","rails actioncable::server::broadcasting::broadcaster#broadcast()","rails actioncable::subscriptionadapter::base#broadcast()","rails actioncable::subscriptionadapter::subscribermap#broadcast()","ruby monitormixin::conditionvariable#broadcast()","ruby thread::conditionvariable#broadcast()","rails actioncable::channel::broadcasting::classmethods#broadcast_to()","rails actioncable::server::broadcasting#broadcaster_for()","rails actioncable::channel::broadcasting::classmethods#broadcasting_for()","ruby ","ruby array#bsearch()","ruby range#bsearch()","ruby array#bsearch_index()","ruby digest::bubblebabble()","ruby digest::class::bubblebabble()","ruby digest::instance#bubblebabble()","ruby win32::sspi::securitybuffer#buffersize()","ruby win32::sspi::securitybuffer#buffertype()","ruby json::ext::generator::state#buffer_initial_length()","ruby json::ext::generator::state#buffer_initial_length=()","ruby ","rails actiondispatch::contentsecuritypolicy#build()","rails actiondispatch::middlewarestack#build()","rails actiondispatch::middlewarestack::middleware#build()","rails actiondispatch::permissionspolicy#build()","rails actionview::templatepath::build()","rails activerecord::associations::collectionproxy#build()","rails activerecord::relation#build()","rails activesupport::callbacks::filters::after::build()","rails activesupport::callbacks::filters::before::build()","rails activesupport::duration::build()","rails rails::generators::activemodel::build()","ruby gem::commands::certcommand#build()","ruby gem::ext::cargobuilder#build()","ruby gem::ext::cmakebuilder::build()","ruby gem::ext::configurebuilder::build()","ruby gem::ext::extconfbuilder::build()","ruby gem::ext::rakebuilder::build()","ruby gem::package#build()","ruby gem::package::build()","ruby gem::requestset::lockfile::build()","ruby uri::ftp::build()","ruby uri::file::build()","ruby uri::generic::build()","ruby uri::http::build()","ruby uri::ldap::build()","ruby uri::mailto::build()","ruby uri::ws::build()","ruby uri::generic::build2()","ruby gem::command::build_args()","ruby gem::specification#build_args()","ruby gem::command::build_args=()","ruby gem::ext::cargobuilder#build_env()","ruby gem::ext::builder#build_extensions()","ruby gem::installer#build_extensions()","ruby rdoc::tomdoc#build_heading()","ruby gem::specification#build_info_dir()","ruby gem::specification#build_info_file()","rails actiondispatch::middlewarestack::middleware#build_instrumented()","ruby rdoc::tomdoc#build_paragraph()","rails activejob::queueadapters::queueclassicadapter#build_queue()","rails rails::application::defaultmiddlewarestack#build_stack()","ruby irb::irb#build_statement()","rails actionview::helpers::taghelper::build_tag_values()","ruby rdoc::tomdoc#build_verbatim()","rails actionview::rendering::classmethods#build_view_context_class()","ruby ","ruby openssl::pkey::ec::builtin_curves()","ruby gem::version#bump()","ruby bundler::bundle_path()","ruby gem::bundlerversionfinder::bundler_version()","rails actionview::helpers::formbuilder#button()","rails actionview::helpers::formtaghelper#button_tag()","rails actionview::helpers::urlhelper#button_to()","ruby csv::table#by_col()","ruby csv::table#by_col!()","ruby csv::table#by_col_or_row()","ruby csv::table#by_col_or_row!()","ruby openssl::engine::by_id()","ruby csv::table#by_row()","ruby csv::table#by_row!()","rails numeric#byte()","ruby socket::option::byte()","ruby socket::option#byte()","ruby reline::lineeditor#byte_pointer=()","ruby string#byteindex()","ruby matchdata#byteoffset()","ruby string#byterindex()","rails numeric#bytes()","ruby random::bytes()","ruby random#bytes()","ruby securerandom::bytes()","ruby string#bytes()","ruby gem::package::tarreader::entry#bytes_read()","ruby string#bytesize()","ruby string#byteslice()","rails activesupport::safebuffer#bytesplice()","ruby string#bytesplice()","ruby openssl::x509::extension::authorityinfoaccess#ca_issuer_uris()","rails ","rails abstractcontroller::caching#cache()","rails actionview::helpers::cachehelper#cache()","rails activerecord::connectionadapters::querycache#cache()","rails activerecord::querycache::classmethods#cache()","rails ","ruby gem::source#cache_dir()","ruby gem::specification#cache_dir()","rails activerecord::tasks::databasetasks#cache_dump_filename()","ruby gem::specification#cache_file()","rails activerecord::fixtureset::cache_fixtures()","rails activerecord::fixtureset::cache_for_connection()","rails activesupport::cache_format_version()","rails activesupport::cache_format_version=()","rails actionview::helpers::cachehelper#cache_fragment_name()","ruby gem::cache_home()","rails actionview::helpers::cachehelper#cache_if()","rails actiontext::attachments::caching#cache_key()","rails activerecord::integration#cache_key()","rails activerecord::relation#cache_key()","rails activerecord::integration#cache_key_with_version()","rails activerecord::relation#cache_key_with_version()","rails actionview::logsubscriber#cache_message()","ruby rdoc::store#cache_path()","rails abstractcontroller::caching::configmethods#cache_store()","rails abstractcontroller::caching::configmethods#cache_store=()","rails actionview::base::cache_template_loading()","rails actionview::base::cache_template_loading=()","rails activerecord::integration::cache_timestamp_format()","rails actionview::helpers::cachehelper#cache_unless()","ruby gem::remotefetcher#cache_update_path()","rails activerecord::integration#cache_version()","rails activerecord::relation#cache_version()","rails activerecord::integration::cache_versioning()","rails activerecord::fixtureset::cached_fixtures()","rails actionview::helpers::cachehelper#caching?()","rails activerecord::associations::collectionproxy#calculate()","rails activerecord::calculations#calculate()","ruby rdoc::stats#calculate()","rails actiondispatch::remoteip::getip#calculate_ip()","ruby reline::unicode::calculate_width()","rails actioncable::server::base#call()","rails actiondispatch::callbacks#call()","rails actiondispatch::contentsecuritypolicy::middleware#call()","rails actiondispatch::cookies#call()","rails actiondispatch::debugexceptions#call()","rails actiondispatch::debuglocks#call()","rails actiondispatch::executor#call()","rails actiondispatch::filehandler#call()","rails actiondispatch::hostauthorization#call()","rails actiondispatch::middlewarestack::instrumentationproxy#call()","rails actiondispatch::permissionspolicy::middleware#call()","rails actiondispatch::publicexceptions#call()","rails actiondispatch::remoteip#call()","rails actiondispatch::requestid#call()","rails actiondispatch::servertiming#call()","rails actiondispatch::showexceptions#call()","rails actiondispatch::static#call()","rails actionmailer::preview::call()","rails actionview::template::handlers::builder#call()","rails actionview::template::handlers::erb::call()","rails actionview::template::handlers::erb#call()","rails actionview::template::handlers::html#call()","rails actionview::template::handlers::raw#call()","rails activerecord::middleware::databaseselector#call()","rails activerecord::middleware::shardselector#call()","rails activerecord::migration::checkpending#call()","rails activesupport::callbacks::conditionals::value#call()","rails activesupport::logger::simpleformatter#call()","rails rails::engine#call()","rails rails::rack::logger#call()","ruby continuation#call()","ruby fiddle::closure::blockcaller#call()","ruby fiddle::function#call()","ruby logger::formatter#call()","ruby method#call()","ruby proc#call()","ruby reline::lineeditor::dialog#call()","ruby reline::lineeditor::dialogprocscope#call()","ruby reline::windows::win32api#call()","ruby syntaxsuggest::call()","ruby syntaxsuggest::blockexpand#call()","ruby syntaxsuggest::capture::beforeafterkeywordends#call()","ruby syntaxsuggest::capture::fallingindentlines#call()","ruby syntaxsuggest::capturecodecontext#call()","ruby syntaxsuggest::cleandocument#call()","ruby syntaxsuggest::cli#call()","ruby syntaxsuggest::codesearch#call()","ruby syntaxsuggest::displaycodewithlinenumbers#call()","ruby syntaxsuggest::displayinvalidblocks#call()","ruby syntaxsuggest::explainsyntax#call()","ruby syntaxsuggest::pathnamefrommessage#call()","ruby syntaxsuggest::rippererrors#call()","ruby syslog::logger::formatter#call()","rails rails::rack::logger#call_app()","ruby reline::lineeditor#call_completion_proc()","ruby reline::lineeditor#call_completion_proc_with_checking_args()","ruby reline::lineeditor::dialogprocscope#call_completion_proc_with_checking_args()","ruby fiddle::pointer#call_free()","ruby rdoc::anymethod#call_seq()","ruby rdoc::anymethod#call_seq=()","ruby rdoc::markupreference#call_seq_directive()","ruby kernel#callcc()","ruby tracepoint#callee_id()","ruby kernel#caller()","ruby kernel#caller_locations()","ruby ","rails string#camelcase()","rails activesupport::inflector#camelize()","rails string#camelize()","ruby rdoc::parser::can_parse()","ruby rdoc::parser::can_parse_by_name()","ruby rinda::tupleentry#cancel()","ruby rinda::waittemplateentry#cancel()","ruby rinda::tupleentry#canceled?()","ruby optionparser#candidate()","ruby optionparser::completion::candidate()","ruby optionparser::completion#candidate()","ruby psych::emitter#canonical()","ruby psych::emitter#canonical=()","ruby net::httpheader#canonical_each()","ruby gem::version#canonical_segments()","ruby addrinfo#canonname()","ruby string#capitalize()","ruby symbol#capitalize()","ruby string#capitalize!()","ruby reline::lineeditor#capitalize_word()","rails actiontext::attachment#caption()","ruby cgi::htmlextension#caption()","rails actionview::helpers::capturehelper#capture()","ruby open3::capture2()","ruby open3::capture2e()","ruby open3::capture3()","ruby syntaxsuggest::capturecodecontext#capture_before_after_kws()","ruby syntaxsuggest::capturecodecontext#capture_falling_indent()","ruby syntaxsuggest::capturecodecontext#capture_first_kw_end_same_indent()","ruby irb::debug::debugger__::capture_frames()","ruby syntaxsuggest::capturecodecontext#capture_last_end_same_indent()","ruby matchdata#captures()","ruby stringscanner#captures()","ruby gem::ext::cargobuilder#cargo_command()","ruby ","ruby string#casecmp()","ruby symbol#casecmp()","ruby string#casecmp?()","ruby symbol#casecmp?()","ruby regexp#casefold?()","rails activemodel::type::value#cast()","rails activemodel::type::value#cast()","rails activemodel::type::value#cast_value()","rails activemodel::type::value#cast_value()","ruby kernel#catch()","rails module#cattr_accessor()","rails module#cattr_reader()","rails module#cattr_writer()","ruby exception#cause()","ruby math::cbrt()","rails mail::message#cc_addresses()","ruby openssl::cipher#ccm_data_len=()","ruby fileutils::cd()","rails activesupport::xmlmini_nokogirisax::hashbuilder#cdata_block()","rails actionview::helpers::taghelper#cdata_section()","rails time#ceil()","ruby bigdecimal#ceil()","ruby float#ceil()","ruby integer#ceil()","ruby numeric#ceil()","ruby rational#ceil()","ruby time#ceil()","ruby integer#ceildiv()","ruby string#center()","ruby openssl::ssl::sslsocket#cert()","ruby gem::request#cert_files()","ruby gem::security::trustdir#cert_path()","ruby openssl::timestamp::request#cert_requested=()","ruby openssl::timestamp::request#cert_requested?()","ruby openssl::ocsp::singleresponse#cert_status()","ruby openssl::ocsp::request#certid()","ruby openssl::ocsp::singleresponse#certid()","ruby openssl::pkcs7#certificates()","ruby openssl::pkcs7#certificates=()","ruby gem::commands::certcommand#certificates_matching()","ruby enumerable#chain()","ruby openssl::x509::storecontext#chain()","ruby openssl::netscape::spki#challenge()","ruby openssl::netscape::spki#challenge=()","rails activerecord::connectionadapters::table#change()","rails activesupport::encryptedfile#change()","rails activesupport::timewithzone#change()","rails createactionmailboxtables#change()","rails createactiontexttables#change()","rails createactivestoragetables#change()","rails createactivestoragevariantrecords#change()","rails date#change()","rails datetime#change()","rails removenotnullonactivestorageblobschecksum#change()","rails time#change()","rails activerecord::connectionadapters::sqlite3::tabledefinition#change_column()","rails activerecord::connectionadapters::schemastatements#change_column()","rails activerecord::connectionadapters::schemastatements#change_column_comment()","rails activerecord::connectionadapters::schemastatements#change_column_default()","rails activerecord::connectionadapters::schemastatements#change_column_null()","rails activerecord::connectionadapters::table#change_default()","ruby rdoc::encoding::change_encoding()","rails activerecord::connectionadapters::table#change_null()","ruby process::gid::change_privilege()","ruby process::uid::change_privilege()","rails activerecord::connectionadapters::schemastatements#change_table()","rails activerecord::connectionadapters::schemastatements#change_table_comment()","ruby irb::context#change_workspace()","rails activemodel::dirty#changed()","ruby observable#changed()","rails activemodel::dirty#changed?()","rails activemodel::type::value#changed?()","rails activemodel::type::value#changed?()","ruby observable#changed?()","ruby syntaxsuggest::scanhistory#changed?()","rails activerecord::attributemethods::dirty#changed_attribute_names_to_save()","rails activemodel::dirty#changed_attributes()","rails activerecord::autosaveassociation#changed_for_autosave?()","rails activemodel::type::value#changed_in_place?()","rails activemodel::type::value#changed_in_place?()","rails activerecord::encryption::encryptedattributetype#changed_in_place?()","rails activerecord::type::json#changed_in_place?()","rails activemodel::dirty#changes()","rails activemodel::dirty#changes_applied()","rails activerecord::attributemethods::dirty#changes_to_save()","rails ","rails ","rails ","rails actioncable::channel::naming::classmethods#channel_name()","ruby reline::windows::keyeventrecord#char()","ruby prism::source#character_column()","ruby prism::source#character_offset()","ruby ","rails activesupport::xmlmini_nokogirisax::hashbuilder#characters()","ruby file::chardev?()","ruby file::stat#chardev?()","ruby filetest#chardev?()","ruby pathname#chardev?()","ruby stringscanner#charpos()","ruby string#chars()","rails actiondispatch::response#charset()","rails activerecord::connectionadapters::abstractmysqladapter#charset()","rails activerecord::tasks::databasetasks#charset()","ruby openuri::meta#charset()","rails actiondispatch::response#charset=()","rails activerecord::tasks::databasetasks#charset_current()","ruby dir#chdir()","ruby dir::chdir()","ruby fileutils::chdir()","ruby csv::parser::inputsscanner#check()","ruby pty::check()","ruby stringscanner#check()","ruby win32::registry::api#check()","rails actionview::helpers::formbuilder#check_box()","rails actionview::helpers::formhelper#check_box()","rails actionview::helpers::formtaghelper#check_box_tag()","ruby gem::security::policy#check_cert()","ruby gem::security::policy#check_chain()","ruby json::ext::generator::state#check_circular?()","rails rails::generators::namedbase::check_class_collision()","ruby gem::package::tarwriter#check_closed()","rails activerecord::connectionadapters::table#check_constraint()","rails activerecord::connectionadapters::tabledefinition#check_constraint()","rails activerecord::connectionadapters::abstractmysqladapter#check_constraints()","rails activerecord::connectionadapters::schemastatements#check_constraints()","ruby gem::configfile#check_credentials_permissions()","ruby gem::security::policy#check_data()","ruby gem::command#check_deprecated_options()","ruby rdoc::options#check_files()","ruby gem::commands::checkcommand#check_gems()","ruby rdoc::options#check_generator()","ruby reline::windows::check_input_event()","ruby drb::drbserver#check_insecure_method()","ruby pp::ppmethods#check_inspect_key()","rails activerecord::connectionadapters::postgresql::quoting#check_int_in_range()","ruby gem::security::policy#check_key()","ruby openssl::pkey::ec#check_key()","ruby rdoc::parser::check_modeline()","ruby rdoc::task#check_names()","ruby openssl::ocsp::request#check_nonce()","ruby gem::commands::certcommand#check_openssl()","ruby uri::file#check_password()","rails activerecord::migration::check_pending!()","ruby openssl::x509::certificate#check_private_key()","rails activerecord::tasks::databasetasks#check_protected_environments!()","ruby gem::security::policy#check_root()","ruby gem::commands::setupcommand#check_ruby_version()","rails activerecord::tasks::databasetasks#check_schema_file()","ruby makemakefile#check_signedness()","ruby makemakefile#check_sizeof()","rails activerecord::tasks::databasetasks#check_target_version()","ruby irb::relineinputmethod#check_termination()","ruby gem::security::policy#check_trust()","ruby gem::commands::sourcescommand#check_typo_squatting()","ruby stringscanner#check_until()","ruby uri::file#check_user()","ruby uri::file#check_userinfo()","ruby openssl::ocsp::singleresponse#check_validity()","rails activemodel::eachvalidator#check_validity!()","ruby io#check_winsize_changed()","ruby cgi::htmlextension#checkbox()","ruby cgi::htmlextension#checkbox_group()","rails activerecord::connectionadapters::connectionpool#checkin()","rails activerecord::connectionadapters::connectionpool#checkout()","rails activerecord::databaseconfigurations::hashconfig#checkout_timeout()","ruby rdoc::context#child_name()","rails rails::paths::path#children()","ruby dir#children()","ruby dir::children()","ruby pathname#children()","ruby rubyvm::abstractsyntaxtree::node#children()","ruby file::chmod()","ruby file#chmod()","ruby fileutils::chmod()","ruby pathname#chmod()","ruby fileutils::chmod_r()","ruby kernel#chomp()","ruby string#chomp()","ruby string#chomp!()","ruby gem::streamui#choose_from_list()","ruby gem::userinteraction#choose_from_list()","ruby kernel#chop()","ruby string#chop()","ruby string#chop!()","ruby file::chown()","ruby file#chown()","ruby fileutils::chown()","ruby pathname#chown()","ruby fileutils::chown_r()","ruby integer#chr()","ruby string#chr()","ruby dir::chroot()","ruby enumerable#chunk()","ruby enumerator::lazy#chunk()","ruby enumerable#chunk_while()","ruby enumerator::lazy#chunk_while()","ruby net::httpheader#chunked?()","ruby gem::cidetector::ci?()","ruby gem::cidetector::ci_strings()","rails activerecord::connectionadapters::postgresql::columnmethods#cidr()","ruby openssl::engine#cipher()","ruby openssl::ssl::sslsocket#cipher()","ruby openssl::pkcs7#cipher=()","ruby openssl::cipher::ciphers()","ruby openssl::ssl::sslcontext#ciphers()","ruby openssl::ssl::sslcontext#ciphers=()","ruby openssl::ssl::sslcontext#ciphersuites=()","rails activerecord::encryption::encryptablerecord#ciphertext_for()","rails activerecord::connectionadapters::postgresql::columnmethods#circle()","rails activerecord::connectionadapters::postgresql::columnmethods#citext()","ruby date::civil()","ruby datetime::civil()","rails datetime::civil_from_format()","ruby comparable#clamp()","rails activesupport::deprecation::deprecatedconstantproxy#class()","ruby kernel#class()","ruby win32::registry::predefinedkey#class()","rails class#class_attribute()","ruby rdoc::context#class_attributes()","rails kernel#class_eval()","ruby module#class_eval()","ruby module#class_exec()","ruby rdoc::store#class_file()","ruby rdoc::context#class_method_list()","rails activesupport::concern#class_methods()","ruby rdoc::store#class_methods()","rails rails::generators::namedbase#class_name()","ruby gem::ext::builder::class_name()","rails actionview::helpers::taghelper#class_names()","ruby didyoumean::classnamechecker#class_names()","rails rails::generators::namedbase#class_path()","ruby rdoc::store#class_path()","ruby module#class_variable_defined?()","ruby module#class_variable_get()","ruby module#class_variable_set()","ruby module#class_variables()","ruby rdoc::context#classes()","ruby rdoc::context#classes_and_modules()","ruby rdoc::context#classes_hash()","ruby rdoc::store#classes_hash()","rails activesupport::inflector#classify()","rails string#classify()","ruby set#classify()","rails activesupport::backtracecleaner#clean()","ruby bundler::clean_env()","ruby bundler::clean_exec()","ruby gem::commands::cleanupcommand#clean_gems()","ruby syntaxsuggest::cleandocument#clean_sweep()","ruby bundler::clean_system()","ruby gem::text#clean_text()","ruby pathname#cleanpath()","rails activesupport::cache::filestore#cleanup()","rails activesupport::cache::memorystore#cleanup()","rails activesupport::cache::nullstore#cleanup()","rails activesupport::cache::rediscachestore#cleanup()","rails activesupport::cache::store#cleanup()","ruby openssl::engine::cleanup()","ruby openssl::x509::storecontext#cleanup()","rails actioncontroller::instrumentation#cleanup_view_runtime()","rails actiondispatch::flash::flashhash#clear()","rails activerecord::associations::collectionproxy#clear()","rails activerecord::connectionadapters::connectionpool::queue#clear()","rails activesupport::cache::filestore#clear()","rails activesupport::cache::memcachestore#clear()","rails activesupport::cache::memorystore#clear()","rails activesupport::cache::nullstore#clear()","rails activesupport::cache::rediscachestore#clear()","rails activesupport::cache::store#clear()","rails activesupport::cache::strategy::localcache::localstore#clear()","rails activesupport::inflector::inflections#clear()","ruby array#clear()","ruby env::clear()","ruby fiddle::pinned#clear()","ruby gc::profiler::clear()","ruby gem::dependencylist#clear()","ruby gem::sourcelist#clear()","ruby hash#clear()","ruby io::buffer#clear()","ruby irb::color::clear()","ruby objectspace::weakkeymap#clear()","ruby ractor::selector#clear()","ruby set#clear()","ruby string#clear()","ruby stringscanner#clear()","ruby thread::queue#clear()","ruby thread::sizedqueue#clear()","rails activerecord::connectionadapters::schemacache#clear!()","rails abstractcontroller::base::clear_action_methods!()","rails actioncable::channel::base::clear_action_methods!()","rails activerecord::connectionadapters::connectionhandler#clear_active_connections!()","rails activerecord::connectionadapters::connectionhandler#clear_all_connections!()","rails activemodel::dirty#clear_attribute_changes()","ruby openssl::bn#clear_bit!()","rails actionview::filesystemresolver#clear_cache()","rails actionview::resolver#clear_cache()","rails activerecord::connectionadapters::abstractadapter#clear_cache!()","rails activemodel::dirty#clear_changes_information()","ruby rdoc::classmodule#clear_comment()","rails activerecord::connectionadapters::schemacache#clear_data_source_cache!()","ruby gem::clear_default_specs()","ruby bundler::clear_gemspec_cache()","rails abstractcontroller::helpers::classmethods#clear_helpers()","ruby gem::clear_paths()","rails activerecord::connectionadapters::querycache#clear_query_cache()","rails activerecord::connectionhandling#clear_query_caches_for_current_thread()","rails activerecord::connectionadapters::connectionpool#clear_reloadable_connections()","rails activerecord::connectionadapters::connectionhandler#clear_reloadable_connections!()","rails activerecord::connectionadapters::connectionpool#clear_reloadable_connections!()","rails activerecord::tasks::databasetasks#clear_schema_cache()","ruby io#clear_screen()","ruby reline::ansi::clear_screen()","ruby reline::generalio::clear_screen()","ruby reline::lineeditor#clear_screen()","ruby reline::windows::clear_screen()","rails activemodel::validations::classmethods#clear_validators!()","ruby fiddle::pinned#cleared?()","ruby openssl::ssl::sslsocket#client_ca()","rails activerecord::connectionadapters::postgresql::schemastatements#client_min_messages()","rails activerecord::connectionadapters::postgresql::schemastatements#client_min_messages=()","ruby rdoc::task#clobber_task_description()","ruby process::clock_getres()","ruby process::clock_gettime()","rails activerecord::core#clone()","ruby bigdecimal#clone()","ruby env::clone()","ruby kernel#clone()","ruby method#clone()","ruby numeric#clone()","ruby singleton#clone()","ruby unboundmethod#clone()","rails activesupport::safebuffer#clone_empty()","rails actioncable::connection::base#close()","rails actioncontroller::live::sse#close()","rails actiondispatch::http::uploadedfile#close()","rails actiondispatch::response#close()","rails actiondispatch::response::rackbody#close()","rails activerecord::connectionadapters::abstractadapter#close()","rails activesupport::gzip::stream#close()","ruby argf#close()","ruby cgi::session#close()","ruby cgi::session::filestore#close()","ruby cgi::session::memorystore#close()","ruby cgi::session::nullstore#close()","ruby cgi::session::pstore#close()","ruby dir#close()","ruby fiber::scheduler#close()","ruby fiddle::handle#close()","ruby gem::package::tarreader#close()","ruby gem::package::tarreader::entry#close()","ruby gem::package::tarwriter#close()","ruby gem::silentui#close()","ruby gem::streamui#close()","ruby io#close()","ruby irb::fileinputmethod#close()","ruby logger#close()","ruby logger::logdevice#close()","ruby openssl::buffering#close()","ruby openssl::ssl::sslserver#close()","ruby resolv::dns#close()","ruby sockssocket#close()","ruby stringio#close()","ruby syslog::close()","ruby tempfile#close()","ruby thread::queue#close()","ruby thread::sizedqueue#close()","ruby win32::registry#close()","ruby win32::registry::predefinedkey#close()","ruby zlib::gzipfile#close()","ruby zlib::zstream#close()","ruby tempfile#close!()","ruby gem::remotefetcher#close_all()","ruby fiddle::handle#close_enabled?()","ruby ractor#close_incoming()","ruby io#close_on_exec=()","ruby io#close_on_exec?()","ruby ractor#close_outgoing()","ruby basicsocket#close_read()","ruby io#close_read()","ruby stringio#close_read()","ruby basicsocket#close_write()","ruby io#close_write()","ruby stringio#close_write()","ruby argf#closed?()","ruby gem::package::tarreader::entry#closed?()","ruby gem::package::tarwriter#closed?()","ruby io#closed?()","ruby openssl::ssl::socketforwarder#closed?()","ruby stringio#closed?()","ruby thread::queue#closed?()","ruby zlib::gzipfile#closed?()","ruby zlib::zstream#closed?()","ruby stringio#closed_read?()","ruby stringio#closed_write?()","ruby openssl::engine#cmds()","ruby fileutils::cmp()","ruby openssl::bn#cmp()","ruby openssl::ocsp::certificateid#cmp()","ruby openssl::x509::name#cmp()","ruby openssl::ocsp::certificateid#cmp_issuer()","ruby socket::ancillarydata#cmsg_is?()","rails actiondispatch::response#code()","ruby irb::workspace#code_around_binding()","ruby syntaxsuggest::aroundblockscan#code_block()","ruby rubyvm::yjit::code_gc()","ruby win32ole::codepage()","ruby win32ole::codepage=()","ruby string#codepoints()","rails ","ruby bigdecimal#coerce()","ruby float#coerce()","ruby integer#coerce()","ruby logger::severity::coerce()","ruby numeric#coerce()","ruby openssl::bn#coerce()","ruby uri::generic#coerce()","ruby openssl::pkey::ec::group#cofactor()","rails ","ruby csv#col_sep()","rails activerecord::connectionadapters::abstractmysqladapter#collation()","rails activerecord::connectionadapters::postgresql::schemastatements#collation()","rails activerecord::tasks::databasetasks#collation()","rails activerecord::tasks::databasetasks#collation_current()","ruby array#collect()","ruby enumerable#collect()","ruby enumerator::lazy#collect()","ruby array#collect!()","ruby set#collect!()","ruby enumerable#collect_concat()","ruby enumerator::lazy#collect_concat()","ruby rdoc::parser::ruby#collect_first_comment()","ruby fileutils::collect_method()","ruby rdoc::tokenstream#collect_tokens()","rails actiondispatch::routing::mapper::resources#collection()","rails activerecord::integration::collection_cache_versioning()","rails actionview::helpers::formbuilder#collection_check_boxes()","rails actionview::helpers::formoptionshelper#collection_check_boxes()","rails actionview::helpers::formbuilder#collection_radio_buttons()","rails actionview::helpers::formoptionshelper#collection_radio_buttons()","rails actionview::helpers::formbuilder#collection_select()","rails actionview::helpers::formoptionshelper#collection_select()","rails activesupport::logsubscriber#color()","rails actionview::helpers::formbuilder#color_field()","rails actionview::helpers::formhelper#color_field()","rails actionview::helpers::formtaghelper#color_field_tag()","ruby irb::color::colorable?()","ruby irb::color::colorize()","ruby irb::color::colorize_code()","rails rails::application::configuration#colorize_logging()","rails rails::application::configuration#colorize_logging=()","rails activerecord::connectionadapters::columnmethods#column()","rails activerecord::connectionadapters::table#column()","rails activerecord::connectionadapters::tabledefinition#column()","ruby prism::source#column()","ruby ripper::filter#column()","rails activerecord::modelschema::classmethods#column_defaults()","rails activerecord::connectionadapters::schemastatements#column_exists?()","rails activerecord::connectionadapters::table#column_exists?()","rails activerecord::modelschema::classmethods#column_for_attribute()","rails activerecord::connectionadapters::postgresql::quoting#column_name_matcher()","rails activerecord::connectionadapters::postgresql::quoting#column_name_with_order_matcher()","rails activerecord::modelschema::classmethods#column_names()","ruby csv::parser#column_separator()","rails activerecord::connectionadapters::schemacache#columns()","rails activerecord::connectionadapters::schemastatements#columns()","rails activerecord::connectionadapters::tabledefinition#columns()","rails activerecord::modelschema::classmethods#columns()","rails activerecord::connectionadapters::schemacache#columns_hash()","rails activerecord::connectionadapters::schemacache#columns_hash?()","ruby array#combination()","ruby syntaxsuggest::codefrontier::combination()","rails abstractcontroller::caching::fragments#combined_fragment_cache_key()","ruby pp::ppmethods#comma_breakable()","ruby drb::extservmanager::command()","ruby drb::extservmanager::command=()","ruby ","rails rails::command::base::command_name()","ruby gem::commandmanager#command_names()","rails rails::command::command_type()","rails rails::generators::command_type()","ruby fileutils::commands()","ruby zlib::gzipfile#comment()","ruby rdoc::codeobject#comment=()","ruby zlib::gzipwriter#comment=()","ruby ","ruby date::commercial()","ruby datetime::commercial()","rails activerecord::connectionadapters::realtransaction#commit()","rails activerecord::connectionadapters::savepointtransaction#commit()","ruby pstore#commit()","rails actiondispatch::response#commit!()","rails activerecord::connectionadapters::transactionstate#commit!()","rails activerecord::connectionadapters::databasestatements#commit_db_transaction()","rails actiondispatch::request#commit_flash()","ruby syntaxsuggest::scanhistory#commit_if_changed()","rails actiondispatch::response#committed?()","rails activerecord::connectionadapters::transactionstate#committed?()","ruby gem::command::common_options()","rails actioncontroller::parameters#compact()","rails activesupport::hashwithindifferentaccess#compact()","rails activesupport::hashwithindifferentaccess#compact()","ruby array#compact()","ruby enumerable#compact()","ruby enumerator::lazy#compact()","ruby gc::compact()","ruby hash#compact()","rails actioncontroller::parameters#compact!()","ruby array#compact!()","ruby hash#compact!()","rails actioncontroller::parameters#compact_blank()","rails enumerable#compact_blank()","rails actioncontroller::parameters#compact_blank!()","rails hash#compact_blank!()","rails activesupport::timewithzone#comparable_time()","ruby openssl::pkey::pkey#compare?()","ruby hash#compare_by_identity()","ruby set#compare_by_identity()","ruby hash#compare_by_identity?()","ruby set#compare_by_identity?()","ruby fileutils::compare_file()","ruby fileutils::compare_stream()","rails date#compare_with_coercion()","rails time#compare_with_coercion()","rails actioncontroller::requestforgeryprotection#compare_with_global_token()","rails actioncontroller::requestforgeryprotection#compare_with_real_token()","rails date#compare_without_coercion()","rails time#compare_without_coercion()","ruby encoding::compatible?()","ruby prism::pattern#compile()","ruby regexp::compile()","ruby rubyvm::instructionsequence::compile()","ruby syntaxsuggest::rippererrors#compile_error()","ruby rubyvm::instructionsequence::compile_file()","ruby rubyvm::instructionsequence::compile_file_prism()","rails activesupport::configurable::configuration::compile_methods!()","rails activesupport::configurable::configuration#compile_methods!()","ruby rubyvm::instructionsequence::compile_option()","ruby rubyvm::instructionsequence::compile_option=()","ruby rubyvm::instructionsequence::compile_prism()","rails actionview::base#compiled_method_container()","ruby gem::commands::lockcommand#complain()","rails actionview::cacheexpiry::executor#complete()","rails activerecord::querycache::complete()","ruby optionparser::completion#complete()","ruby optionparser::list#complete()","ruby rdoc::classmodule#complete()","ruby rdoc::store#complete()","rails activesupport::executionwrapper#complete!()","ruby win32::sspi::negotiateauth#complete_authentication()","rails activerecord::connectionadapters::transactionstate#completed?()","ruby reline::core#completer_quote_characters=()","ruby reline::core#completer_word_break_characters=()","ruby reline::core#completion_append_character=()","ruby reline::core#completion_case_fold()","ruby reline::core#completion_case_fold=()","ruby irb::readlineinputmethod#completion_info()","ruby irb::relineinputmethod#completion_info()","ruby reline::lineeditor::dialogprocscope#completion_journey_data()","ruby reline::core#completion_proc=()","ruby reline::core#completion_quote_character()","ruby uri::generic#component()","ruby uri::generic::component()","ruby uri::generic#component_ary()","rails rails::api::repotask#component_root_dir()","rails activestorage::blob::compose()","rails activestorage::service#compose()","rails activestorage::service::azurestorageservice#compose()","rails activestorage::service::diskservice#compose()","rails activestorage::service::gcsservice#compose()","rails activestorage::service::s3service#compose()","rails activesupport::multibyte::chars#compose()","rails activesupport::multibyte::unicode#compose()","ruby gem::resolver::compose_sets()","rails activerecord::aggregations::classmethods#composed_of()","rails activesupport::gzip::compress()","ruby reline::keystroke#compress_meta_key()","rails actionview::helpers::asseturlhelper#compute_asset_extname()","rails actionview::helpers::asseturlhelper#compute_asset_host()","rails actionview::helpers::asseturlhelper#compute_asset_path()","rails activerecord::reflection::macroreflection#compute_class()","ruby openssl::pkey::dh#compute_key()","rails rails::rack::logger#compute_tags()","rails activerecord::inheritance::classmethods#compute_type()","rails actionview::helpers::texthelper#concat()","rails activerecord::associations::collectionproxy#concat()","rails activesupport::safebuffer#concat()","rails rails::paths::path#concat()","ruby array#concat()","ruby gem::requirement#concat()","ruby openssl::buffering::buffer#concat()","ruby reline::history#concat()","ruby string#concat()","ruby stringscanner#concat()","rails actiondispatch::routing::mapper::concerns#concern()","rails kernel#concern()","rails module::concerning#concern()","rails module::concerning#concerning()","rails actiondispatch::routing::mapper::concerns#concerns()","rails activesupport::configurable#config()","rails activesupport::configurable::classmethods#config()","rails activesupport::encryptedconfiguration#config()","rails rails::appbuilder#config()","rails rails::engine#config()","rails rails::pluginbuilder#config()","rails rails::railtie#config()","ruby drb::config()","ruby reline::face::config()","ruby reline::lineeditor::dialogprocscope#config()","rails ","rails activesupport::configurable::classmethods#config_accessor()","ruby gem::config_file()","ruby gem::configfile#config_file_name()","rails rails::application#config_for()","ruby gem::config_home()","rails rails::appbuilder#config_target_version()","rails rails::appbuilder#config_when_updating()","rails rails::appbuilder#configru()","ruby reline::face::configs()","rails activerecord::databaseconfigurations#configs_for()","rails rails::configuration()","ruby gem::configuration()","ruby gem::configuration=()","rails activerecord::core::configurations()","rails rails::dbconsole#configurations()","rails activerecord::core::configurations=()","rails activestorage::service::configure()","rails activesupport::configurable::classmethods#configure()","rails rails::railtie::configure()","rails rails::railtie::configurable::classmethods#configure()","ruby bundler::configure()","ruby json::ext::generator::state#configure()","ruby gem::request::configure_connection_for_https()","ruby bundler::configure_gem_home_and_path()","ruby irb::irb#configure_io()","rails rails::api::task#configure_rdoc_files()","rails rails::api::repotask#configure_sdoc()","rails rails::api::task#configure_sdoc()","ruby bundler::configured_bundle_path()","rails ","ruby reline::lineeditor#confirm_multiline_termination()","ruby gem::dependencyresolutionerror#conflicting_dependencies()","ruby gem::resolver::conflict#conflicting_dependencies()","ruby gem::specification#conflicts()","ruby etc::confstr()","ruby complex#conj()","ruby numeric#conj()","ruby complex#conjugate()","ruby numeric#conjugate()","ruby addrinfo#connect()","ruby drb::drbsslsocket::sslconfig#connect()","ruby openssl::ssl::sslsocket#connect()","ruby socket#connect()","ruby udpsocket#connect()","ruby win32ole::connect()","ruby basicsocket#connect_address()","ruby addrinfo#connect_from()","ruby addrinfo#connect_internal()","ruby openssl::ssl::sslsocket#connect_nonblock()","ruby socket#connect_nonblock()","ruby addrinfo#connect_to()","rails activerecord::connectionadapters::connectionhandler#connected?()","rails activerecord::connectionadapters::connectionpool#connected?()","rails activerecord::connectionhandling#connected?()","rails activerecord::connectionhandling#connected_to()","rails activerecord::connectionhandling#connected_to?()","rails activerecord::connectionhandling#connected_to_many()","rails activerecord::connectionhandling#connecting_to()","rails activerecord::connectionadapters::connectionpool#connection()","rails activerecord::connectionhandling#connection()","rails activerecord::migration#connection()","rails ","rails ","ruby net::httpheader#connection_close?()","rails activerecord::connectionhandling#connection_db_config()","ruby gem::request#connection_for()","rails activerecord::core::connection_handler()","rails activerecord::core#connection_handler()","rails activerecord::core::connection_handler=()","rails activerecord::core::connection_handlers()","rails activerecord::core::connection_handlers=()","rails actioncable::connection::identification#connection_identifier()","rails actioncable::server::base#connection_identifiers()","ruby net::httpheader#connection_keep_alive?()","rails ","rails activerecord::connectionhandling#connection_pool()","rails activerecord::connectionadapters::connectionhandler#connection_pool_list()","rails activerecord::connectionadapters::connectionhandler#connection_pools()","rails activerecord::connectionhandling#connection_specification_name()","rails activerecord::connectionadapters::connectionpool#connections()","rails activerecord::connectionhandling#connects_to()","ruby gem::dependencyinstaller#consider_local?()","ruby gem::dependencyinstaller#consider_remote?()","rails rails::application#console()","rails rails::railtie::console()","ruby io::console()","ruby io#console_mode()","ruby io#console_mode=()","ruby module#const_defined?()","ruby module#const_get()","ruby win32ole::const_load()","rails activesupport::deprecation::deprecatedconstantaccessor#const_missing()","ruby module#const_missing()","ruby module#const_set()","ruby module#const_source_location()","rails activesupport::inflector#constantize()","rails string#constantize()","ruby module#constants()","ruby module::constants()","rails actiondispatch::routing::mapper::scoping#constraints()","rails ","rails ","ruby gem::basicspecification#contains_requirable_file?()","rails activerecord::modelschema::classmethods#content_columns()","ruby openuri::meta#content_encoding()","rails actionview::helpers::capturehelper#content_for()","rails actionview::helpers::capturehelper#content_for?()","rails actiondispatch::request#content_length()","ruby net::httpheader#content_length()","ruby net::httpheader#content_length=()","rails actiondispatch::http::mimenegotiation#content_mime_type()","ruby net::httpheader#content_range()","rails actioncontroller::contentsecuritypolicy::classmethods#content_security_policy()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy()","rails rails::application::configuration#content_security_policy()","rails ","rails actiondispatch::contentsecuritypolicy::request#content_security_policy=()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_directives()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_directives=()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_generator()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_generator=()","rails actioncontroller::contentsecuritypolicy::classmethods#content_security_policy_report_only()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy_report_only()","rails actiondispatch::contentsecuritypolicy::request#content_security_policy_report_only=()","rails actionview::helpers::activemodelinstancetag#content_tag()","rails actionview::helpers::taghelper#content_tag()","rails actiondispatch::http::mimenegotiation#content_type()","rails actiondispatch::response#content_type()","rails activestorage::variation#content_type()","ruby net::httpheader#content_type()","ruby openuri::meta#content_type()","rails actiondispatch::response#content_type=()","rails activestorage::blob#content_type=()","ruby net::httpheader#content_type=()","ruby gem::package#contents()","ruby gem::package::old#contents()","ruby reline::lineeditor::dialog#contents=()","rails activerecord::encryption::contexts#context()","ruby reline::lineeditor::dialogprocscope#context()","rails activerecord::fixtureset::context_class()","rails rails::initializable::initializer#context_class()","ruby rdoc::parser::changelog#continue_entry_body()","ruby net::http#continue_timeout=()","ruby ","ruby ","rails actiondispatch::routing::mapper::scoping#controller()","rails rails::consolemethods#controller()","rails ","rails ","rails actiondispatch::request#controller_class()","rails actiondispatch::request#controller_class_for()","rails actioncontroller::metal#controller_name()","rails actioncontroller::metal::controller_name()","rails abstractcontroller::base::controller_path()","rails abstractcontroller::base#controller_path()","rails actionmailer::base::controller_path()","ruby csv#convert()","ruby csv::fieldsconverter#convert()","ruby encoding::converter#convert()","ruby gem::ext::cargobuilder::linkflagconverter::convert()","ruby optionparser::completion#convert()","ruby rdoc::markup#convert()","ruby irb::irb#convert_invalid_byte_sequence()","ruby gem::yamlserializer#convert_to_backward_compatible_key!()","rails actioncontroller::parameters#converted_arrays()","ruby csv#converters()","ruby makemakefile#convertible_int()","ruby encoding::converter#convpath()","ruby io#cooked()","ruby io#cooked!()","rails actiondispatch::requestcookiemethods#cookie_jar()","rails actioncable::connection::base#cookies()","rails actioncontroller::cookies#cookies()","rails actiondispatch::response#cookies()","rails activerecord::migration#copy()","ruby fileutils::copy()","ruby io::buffer#copy()","ruby net::http#copy()","ruby openssl::bn#copy()","ruby prism::location#copy()","ruby fileutils::copy_entry()","ruby fileutils::copy_file()","ruby openssl::ocsp::basicresponse#copy_nonce()","ruby fileutils::copy_stream()","ruby io::copy_stream()","ruby gem::installer::fakepackage#copy_to()","ruby gem::package#copy_to()","ruby reline::core()","ruby reline::core()","ruby process::status#coredump?()","ruby didyoumean::spellchecker#correct()","ruby didyoumean::treespellchecker#correct()","ruby gem::version::correct?()","ruby didyoumean::correct_error()","ruby gem::util::correct_for_windows_path()","ruby didyoumean::classnamechecker#corrections()","ruby didyoumean::correctable#corrections()","ruby didyoumean::keyerrorchecker#corrections()","ruby didyoumean::methodnamechecker#corrections()","ruby didyoumean::nullchecker#corrections()","ruby didyoumean::patternkeynamechecker#corrections()","ruby didyoumean::requirepathchecker#corrections()","ruby didyoumean::variablenamechecker#corrections()","ruby gem::unknowncommandspellchecker#corrections()","rails ","ruby bigmath#cos()","ruby math::cos()","ruby math::cosh()","rails activerecord::associations::collectionproxy#count()","rails activerecord::calculations#count()","ruby array#count()","ruby enumerable#count()","ruby gc::count()","ruby ractor::count()","ruby range#count()","ruby resolv::dns::svcparams#count()","ruby string#count()","ruby syntaxsuggest::codefrontier#count()","rails activerecord::querying#count_by_sql()","ruby syntaxsuggest::leftrightlexcount#count_end()","ruby syntaxsuggest::leftrightlexcount#count_for_char()","ruby objectspace::count_imemo_objects()","ruby syntaxsuggest::leftrightlexcount#count_kw()","ruby syntaxsuggest::leftrightlexcount#count_lex()","ruby objectspace::count_nodes()","ruby objectspace::count_objects()","ruby objectspace::count_objects_size()","ruby observable#count_observers()","ruby objectspace::count_symbols()","ruby objectspace::count_tdata_objects()","rails activesupport::timezone::country_zones()","ruby range#cover?()","ruby rdoc::stats#coverage_level=()","ruby rdoc::task#coverage_task_description()","ruby fileutils::cp()","ruby fileutils::cp_lr()","ruby fileutils::cp_r()","rails activesupport::notifications::event#cpu_time()","ruby zlib::gzipfile#crc()","ruby zlib::crc32()","ruby zlib::crc32_combine()","ruby zlib::crc_table()","rails actiondispatch::response::create()","rails actionmailbox::ingresses::mailgun::inboundemailscontroller#create()","rails actionmailbox::ingresses::mandrill::inboundemailscontroller#create()","rails actionmailbox::ingresses::postmark::inboundemailscontroller#create()","rails actionmailbox::ingresses::relay::inboundemailscontroller#create()","rails actionmailbox::ingresses::sendgrid::inboundemailscontroller#create()","rails actionview::digestor::node::create()","rails activerecord::associations::collectionproxy#create()","rails activerecord::connectionadapters::databasestatements#create()","rails activerecord::persistence::classmethods#create()","rails activerecord::relation#create()","rails activerecord::tasks::databasetasks#create()","rails activestorage::directuploadscontroller#create()","rails activesupport::timezone::create()","rails rails::application::create()","rails rails::rails::conductor::actionmailbox::inboundemails::sourcescontroller#create()","rails rails::rails::conductor::actionmailbox::inboundemailscontroller#create()","rails rails::rails::conductor::actionmailbox::incineratescontroller#create()","rails rails::rails::conductor::actionmailbox::reroutescontroller#create()","ruby fiddle::cstructbuilder::create()","ruby fiddle::closure::create()","ruby gem::noaliasyamltree::create()","ruby gem::requirement::create()","ruby gem::version::create()","ruby openssl::ocsp::response::create()","ruby openssl::pkcs12::create()","ruby psych::visitors::jsontree::create()","ruby psych::visitors::toruby::create()","ruby psych::visitors::yamltree::create()","ruby resolv::dns::name::create()","ruby resolv::dns::svcparam::generic::create()","ruby resolv::ipv4::create()","ruby resolv::ipv6::create()","ruby resolv::loc::alt::create()","ruby resolv::loc::coord::create()","ruby resolv::loc::size::create()","ruby tempfile::create()","ruby win32::registry::create()","ruby win32::registry#create()","rails activerecord::associations::collectionproxy#create!()","rails activerecord::persistence::classmethods#create!()","rails activerecord::relation#create!()","rails actionmailbox::generators::installgenerator#create_action_mailbox_files()","rails actiontext::generators::installgenerator#create_actiontext_files()","rails activerecord::tasks::databasetasks#create_all()","rails actionmailbox::inboundemail::messageid#create_and_extract_message_id!()","rails activestorage::blob::create_and_upload!()","rails actionmailbox::inboundemail::messageid#create_and_upload_raw_email!()","rails activestorage::blob::create_before_direct_upload!()","ruby syntaxsuggest::codesearch#create_blocks_from_untracked_lines()","ruby bundler::create_bundle_path()","ruby gem::security::create_cert()","ruby gem::security::create_cert_email()","ruby gem::security::create_cert_self_signed()","rails rails::generators::channelgenerator#create_channel_files()","rails activerecord::tasks::databasetasks#create_current()","rails activerecord::connectionadapters::abstractmysqladapter#create_database()","rails activerecord::connectionadapters::postgresql::schemastatements#create_database()","ruby gem::security::create_digest()","ruby rdoc::parser::changelog#create_document()","rails actiontext::htmlconversion#create_element()","ruby rdoc::parser::changelog#create_entries()","ruby rdoc::parser::changelog::git#create_entries()","rails activerecord::connectionadapters::postgresqladapter#create_enum()","ruby openssl::x509::extensionfactory#create_ext()","ruby openssl::x509::extensionfactory#create_ext_from_array()","ruby openssl::x509::extensionfactory#create_ext_from_hash()","ruby openssl::x509::extensionfactory#create_ext_from_string()","ruby openssl::x509::extensionfactory#create_extension()","ruby json::create_fast_state()","rails activerecord::fixtureset::create_fixtures()","ruby win32ole::create_guid()","ruby makemakefile#create_header()","ruby json::create_id()","ruby json::create_id=()","ruby rdoc::parser::changelog#create_items()","rails activerecord::connectionadapters::schemastatements#create_join_table()","ruby gem::security::create_key()","rails rails::generators::mailboxgenerator#create_mailbox_file()","rails rails::generators::mailergenerator#create_mailer_file()","ruby makemakefile#create_makefile()","rails rails::generators::migration#create_migration()","rails actionmailbox::generators::installgenerator#create_migrations()","rails actiontext::generators::installgenerator#create_migrations()","rails activerecord::relation#create_or_find_by()","rails activerecord::relation#create_or_find_by!()","ruby json::create_pretty_state()","rails activerecord::connectionadapters::savepoints#create_savepoint()","rails activerecord::connectionadapters::postgresql::schemastatements#create_schema()","rails activerecord::connectionadapters::schemastatements#create_table()","rails ","ruby openssl::timestamp::factory#create_timestamp()","rails activerecord::connectionadapters::postgresqladapter::create_unlogged_tables()","ruby fiddle::importer#create_value()","rails activerecord::querymethods#create_with()","ruby win32::registry#created?()","ruby ","rails rails::appbuilder#credentials()","rails rails::application#credentials()","ruby gem::configfile#credentials_path()","ruby openssl::x509::extension#critical=()","ruby openssl::x509::extension#critical?()","ruby openssl::x509::extensionfactory#crl=()","ruby openssl::x509::extension::crldistributionpoints#crl_uris()","ruby openssl::pkcs7#crls()","ruby openssl::pkcs7#crls=()","ruby irb::vec#cross()","ruby prism::debug::cruby_locals()","ruby string#crypt()","rails ","rails actionview::helpers::csphelper#csp_meta_tag()","rails ","rails actionview::helpers::csrfhelper#csrf_meta_tag()","rails actionview::helpers::csrfhelper#csrf_meta_tags()","rails actioncontroller::requestforgeryprotection#csrf_token_hmac()","ruby rdoc::markdown#css()","ruby date#ctime()","ruby file::ctime()","ruby file#ctime()","ruby file::stat#ctime()","ruby pathname#ctime()","ruby time#ctime()","ruby openssl::engine#ctrl_cmd()","rails activerecord::connectionadapters::postgresql::schemastatements#ctype()","rails date::current()","rails datetime::current()","rails time::current()","ruby fiber::current()","ruby rdoc::rdoc::current()","ruby ractor::current()","ruby thread::current()","ruby rdoc::rdoc::current=()","ruby openssl::x509::storecontext#current_cert()","ruby openssl::x509::storecontext#current_crl()","rails activerecord::encryption::contexts#current_custom_context()","rails actionview::helpers::texthelper#current_cycle()","rails activerecord::connectionadapters::abstractmysqladapter#current_database()","rails activerecord::connectionadapters::postgresql::schemastatements#current_database()","ruby prettyprint#current_group()","rails activesupport::xmlmini_libxmlsax::hashbuilder#current_hash()","rails activesupport::xmlmini_nokogirisax::hashbuilder#current_hash()","ruby syntaxsuggest::codeblock#current_indent()","rails actionview::helpers::urlhelper#current_page?()","rails activerecord::core::current_preventing_writes()","rails activerecord::core::current_role()","rails activerecord::connectionadapters::savepoints#current_savepoint_name()","ruby fiber::current_scheduler()","rails activerecord::connectionadapters::postgresql::schemastatements#current_schema()","ruby rdoc::context#current_section()","ruby drb::current_server()","rails activerecord::core::current_shard()","rails activerecord::migration::current_version()","ruby method#curry()","ruby proc#curry()","ruby reline::terminfo::curses_dl()","ruby reline::terminfo::curses_dl_files()","ruby io#cursor()","ruby io#cursor=()","ruby io#cursor_down()","ruby io#cursor_left()","ruby reline::ansi::cursor_pos()","ruby reline::generalio::cursor_pos()","ruby reline::lineeditor::dialogprocscope#cursor_pos()","ruby reline::windows::cursor_pos()","ruby io#cursor_right()","ruby io#cursor_up()","ruby openssl::pkey::ec::group#curve_name()","rails actioncontroller::mimeresponds::collector#custom()","rails actionmailer::collector#custom()","rails activestorage::blob#custom_metadata()","rails activestorage::blob#custom_metadata=()","ruby date#cwday()","ruby date#cweek()","ruby date#cwyear()","rails actionview::helpers::texthelper#cycle()","ruby array#cycle()","ruby enumerable#cycle()","ruby process::daemon()","rails activerecord::attributemethods::primarykey::classmethods#dangerous_attribute_method?()","rails activerecord::attributemethods::classmethods#dangerous_class_method?()","rails activesupport::inflector#dasherize()","rails string#dasherize()","ruby resolv::dns::resource::txt#data()","ruby socket::ancillarydata#data()","ruby socket::option#data()","ruby openssl::pkcs7#data=()","ruby gem::data_home()","rails activerecord::connectionadapters::schemacache#data_source_exists?()","rails activerecord::connectionadapters::schemastatements#data_source_exists?()","rails activerecord::connectionadapters::schemacache#data_sources()","rails activerecord::connectionadapters::schemastatements#data_sources()","ruby zlib::zstream#data_type()","rails activerecord::databaseconfigurations::hashconfig#database()","rails rails::dbconsole#database()","rails rails::application::configuration#database_configuration()","rails activerecord::connectionadapters::abstractadapter::database_exists?()","rails activerecord::connectionadapters::mysql2adapter::database_exists?()","rails activerecord::connectionadapters::postgresqladapter::database_exists?()","rails activerecord::connectionadapters::sqlite3adapter::database_exists?()","rails rails::appbuilder#database_yml()","rails ","ruby gem::basicspecification#datadir()","rails actiondispatch::http::cache::response#date()","ruby gem::specification#date()","rails actiondispatch::http::cache::response#date=()","ruby gem::specification#date=()","rails actiondispatch::http::cache::response#date?()","rails actionview::helpers::formbuilder#date_field()","rails actionview::helpers::formhelper#date_field()","rails actionview::helpers::formtaghelper#date_field_tag()","rails actionview::helpers::datehelper#date_select()","rails actionview::helpers::formbuilder#date_select()","rails activerecord::connectionadapters::postgresql::columnmethods#daterange()","rails actionview::helpers::formbuilder#datetime_field()","rails actionview::helpers::formhelper#datetime_field()","rails actionview::helpers::formtaghelper#datetime_field_tag()","ruby logger#datetime_format()","ruby logger#datetime_format=()","rails actionview::helpers::formbuilder#datetime_local_field()","rails actionview::helpers::formhelper#datetime_local_field()","rails actionview::helpers::formtaghelper#datetime_local_field_tag()","rails actionview::helpers::datehelper#datetime_select()","rails actionview::helpers::formbuilder#datetime_select()","rails activerecord::connectionadapters::postgresqladapter::datetime_type()","rails numeric#day()","ruby date#day()","ruby time#day()","ruby date#day_fraction()","rails numeric#days()","rails dateandtime::calculations#days_ago()","rails time::days_in_month()","rails time::days_in_year()","rails dateandtime::calculations#days_since()","rails dateandtime::calculations#days_to_week_start()","rails rails::appbuilder#db()","rails rails::dbconsole#db_config()","rails activerecord::tasks::databasetasks#db_dir()","rails activerecord::nodatabaseerror::db_error()","rails rails::appbuilder#db_when_updating()","ruby irb::debug::ui#deactivate()","rails actionview::digestor::nulllogger::debug()","rails actionview::helpers::debughelper#debug()","ruby logger#debug()","ruby openssl::debug()","ruby syslog::logger#debug()","ruby logger#debug!()","ruby openssl::debug=()","ruby gem::resolver#debug?()","ruby logger#debug?()","ruby irb::irb#debug_break()","rails rails::application::configuration#debug_exception_response_format()","ruby irb::irb#debug_readline()","rails activestorage::variation::decode()","rails activesupport::json::decode()","ruby openssl::asn1::decode()","ruby base64#decode64()","ruby openssl::asn1::decode_all()","rails actioncontroller::httpauthentication::basic#decode_credentials()","rails actioncontroller::httpauthentication::digest#decode_credentials()","rails actioncontroller::httpauthentication::digest#decode_credentials_header()","ruby uri::decode_uri_component()","ruby uri::decode_www_form()","ruby uri::decode_www_form_component()","ruby uri::generic#decoded_password()","ruby uri::generic#decoded_user()","rails activesupport::multibyte::chars#decompose()","rails activesupport::multibyte::unicode#decompose()","rails activesupport::gzip::decompress()","rails activesupport::inflector#deconstantize()","rails string#deconstantize()","ruby csv::row#deconstruct()","ruby data#deconstruct()","ruby matchdata#deconstruct()","ruby struct#deconstruct()","ruby csv::row#deconstruct_keys()","ruby data#deconstruct_keys()","ruby date#deconstruct_keys()","ruby datetime#deconstruct_keys()","ruby matchdata#deconstruct_keys()","ruby prism::comment#deconstruct_keys()","ruby prism::location#deconstruct_keys()","ruby prism::magiccomment#deconstruct_keys()","ruby prism::parseerror#deconstruct_keys()","ruby prism::parseresult#deconstruct_keys()","ruby prism::parsewarning#deconstruct_keys()","ruby prism::token#deconstruct_keys()","ruby struct#deconstruct_keys()","ruby time#deconstruct_keys()","rails activerecord::persistence#decrement()","rails activesupport::cache::filestore#decrement()","rails activesupport::cache::memcachestore#decrement()","rails activesupport::cache::memorystore#decrement()","rails activesupport::cache::nullstore#decrement()","rails activesupport::cache::rediscachestore#decrement()","rails activesupport::cache::store#decrement()","rails activerecord::persistence#decrement!()","rails activerecord::countercache::classmethods#decrement_counter()","rails actiontext::encryption#decrypt()","rails activerecord::encryption::cipher#decrypt()","rails activerecord::encryption::cipher::aes256gcm#decrypt()","rails activerecord::encryption::encryptablerecord#decrypt()","rails activerecord::encryption::encryptingonlyencryptor#decrypt()","rails activerecord::encryption::encryptor#decrypt()","rails activerecord::encryption::nullencryptor#decrypt()","rails activerecord::encryption::readonlynullencryptor#decrypt()","ruby openssl::cipher#decrypt()","ruby openssl::pkcs7#decrypt()","ruby openssl::pkey::pkey#decrypt()","rails activesupport::messageencryptor#decrypt_and_verify()","rails activesupport::messages::rotator::encryptor#decrypt_and_verify()","rails activerecord::encryption::envelopeencryptionkeyprovider#decryption_keys()","rails activerecord::encryption::keyprovider#decryption_keys()","ruby string#dedup()","rails activerecord::connectionadapters::deduplicable#deduplicate()","rails actioncontroller::parameters#deep_dup()","rails array#deep_dup()","rails hash#deep_dup()","rails object#deep_dup()","rails hash#deep_merge()","rails hash#deep_merge!()","rails activesupport::hashwithindifferentaccess#deep_stringify_keys()","rails activesupport::hashwithindifferentaccess#deep_stringify_keys()","rails hash#deep_stringify_keys()","rails activesupport::hashwithindifferentaccess#deep_stringify_keys!()","rails activesupport::hashwithindifferentaccess#deep_stringify_keys!()","rails hash#deep_stringify_keys!()","rails activesupport::hashwithindifferentaccess#deep_symbolize_keys()","rails activesupport::hashwithindifferentaccess#deep_symbolize_keys()","rails hash#deep_symbolize_keys()","rails hash#deep_symbolize_keys!()","rails actioncontroller::parameters#deep_transform_keys()","rails hash#deep_transform_keys()","rails actioncontroller::parameters#deep_transform_keys!()","rails hash#deep_transform_keys!()","rails hash#deep_transform_values()","rails hash#deep_transform_values!()","ruby erb#def_class()","ruby forwardable#def_delegator()","ruby singleforwardable#def_delegator()","ruby forwardable#def_delegators()","ruby singleforwardable#def_delegators()","ruby erb::defmethod::def_erb_method()","ruby irb::contextextender::def_extend_command()","ruby irb::extendcommandbundle::def_extend_command()","ruby optionparser#def_head_option()","ruby irb::inspector::def_inspector()","ruby forwardable#def_instance_delegator()","ruby forwardable#def_instance_delegators()","ruby erb#def_method()","ruby erb#def_module()","ruby irb::notifier::def_notifier()","ruby irb::notifier::compositenotifier#def_notifier()","ruby optionparser#def_option()","ruby singleforwardable#def_single_delegator()","ruby singleforwardable#def_single_delegators()","ruby optionparser#def_tail_option()","rails actionmailer::base::default()","rails activesupport::hashwithindifferentaccess#default()","rails activesupport::hashwithindifferentaccess#default()","ruby gem::requirement::default()","ruby hash#default()","ruby win32ole::param#default()","ruby hash#default=()","ruby drb::drbserver::default_acl()","rails rails::generators::base::default_aliases_for_option()","ruby drb::drbserver::default_argc_limit()","ruby gem::default_bindir()","ruby bundler::default_bundle_dir()","ruby gem::default_cert_path()","rails rails::command::base::default_command_root()","ruby gem::default_dir()","ruby gem::commands::setupcommand#default_dir()","ruby win32ole::type#default_event_sources()","ruby gem::default_exec_format()","ruby gem::default_ext_dir_for()","ruby encoding::default_external()","ruby encoding::default_external=()","rails rails::generators::base::default_for_option()","rails actioncontroller::formbuilder#default_form_builder()","rails actioncontroller::formbuilder::classmethods#default_form_builder()","ruby gem::basicspecification#default_gem?()","ruby bundler::default_gemfile()","rails rails::generators::base::default_generator_root()","rails actionmailer::base#default_i18n_subject()","ruby drb::drbserver::default_id_conv()","rails date#default_inspect()","rails datetime#default_inspect()","ruby encoding::default_internal()","ruby encoding::default_internal=()","ruby reline::keyactor::base#default_key_bindings()","ruby gem::default_key_path()","ruby drb::drbserver::default_load_limit()","ruby bundler::default_lockfile()","rails rails::application::configuration#default_log_file()","ruby win32ole::type#default_ole_types()","rails rails::server#default_options()","rails actionmailer::base::default_options=()","ruby gem::default_path()","ruby net::http::default_port()","ruby uri::generic#default_port()","ruby uri::generic::default_port()","ruby gem::requirement::default_prerelease()","ruby hash#default_proc()","ruby hash#default_proc=()","ruby gem::default_rubygems_dirs()","rails activerecord::databaseconfigurations::hashconfig#default_schema_cache_path()","rails activerecord::scoping::default::classmethods#default_scope()","rails activerecord::scoping::named::classmethods#default_scoped()","rails activerecord::scoping::default::classmethods#default_scopes?()","rails activerecord::connectionadapters::databasestatements#default_sequence_name()","rails rails::generators::base::default_source_root()","ruby gem::default_sources()","ruby gem::default_spec_cache_dir()","ruby gem::installer#default_spec_file()","ruby gem::default_specifications_dir()","ruby gem::basicspecification::default_specifications_dir()","ruby gem::specification::default_stubs()","rails activerecord::type::internal::timezone#default_timezone()","rails activerecord::default_timezone=()","ruby rdoc::options#default_title=()","rails activestorage::variation#default_to()","rails actiondispatch::routing::mapper::base#default_url_options()","rails actiondispatch::routing::mapper::base#default_url_options=()","ruby gem::specification#default_value()","rails rails::generators::base::default_value_for_option()","rails actiondispatch::routing::mapper::scoping#defaults()","ruby rdoc::task#defaults()","ruby gem::command#defaults_str()","ruby gem::commands::infocommand#defaults_str()","rails actioncable::channel::base#defer_subscription_confirmation!()","rails actioncable::channel::base#defer_subscription_confirmation?()","rails activerecord::dynamicmatchers::method#define()","rails activerecord::schema::definition::classmethods#define()","ruby data::define()","ruby gem::packagetask#define()","ruby optionparser#define()","ruby rdoc::task#define()","ruby reline::face::config#define()","rails activerecord::attributes::classmethods#define_attribute()","rails activemodel::attributemethods::classmethods#define_attribute_method()","rails activemodel::attributemethods::classmethods#define_attribute_methods()","ruby optionparser#define_by_keywords()","rails activesupport::codegenerator::methodset#define_cached_method()","rails activesupport::callbacks::classmethods#define_callbacks()","ruby objectspace::define_finalizer()","ruby optionparser#define_head()","ruby module#define_method()","rails activemodel::callbacks#define_model_callbacks()","rails activemodel::validations::acceptancevalidator::lazilydefineattributes#define_on()","ruby object#define_singleton_method()","ruby optionparser#define_tail()","ruby tracepoint#defined_class()","ruby rdoc::context#defined_in?()","ruby bundler::definition()","ruby rdoc::attr#definition()","ruby rdoc::normalclass#definition()","ruby rdoc::normalmodule#definition()","ruby rdoc::singleclass#definition()","ruby rdoc::markdown#definition_lists()","ruby gem::deflate()","ruby zlib::deflate()","ruby zlib::deflate#deflate()","ruby zlib::deflate::deflate()","ruby openssl::pkey::ec::group#degree()","rails module#delegate()","ruby forwardable#delegate()","ruby singleforwardable#delegate()","rails module#delegate_missing_to()","rails actionview::template::types::delegate_to()","rails activerecord::delegatedtype#delegated_type()","rails actioncontroller::parameters#delete()","rails actiondispatch::flash::flashhash#delete()","rails actiondispatch::middlewarestack#delete()","rails actiondispatch::routing::mapper::httphelpers#delete()","rails activemodel::errors#delete()","rails activerecord::associations::collectionproxy#delete()","rails activerecord::connectionadapters::connectionpool::queue#delete()","rails activerecord::connectionadapters::databasestatements#delete()","rails activerecord::persistence#delete()","rails activerecord::persistence::classmethods#delete()","rails activestorage::blob#delete()","rails activestorage::service#delete()","rails activestorage::service::azurestorageservice#delete()","rails activestorage::service::diskservice#delete()","rails activestorage::service::gcsservice#delete()","rails activestorage::service::mirrorservice#delete()","rails activestorage::service::s3service#delete()","rails activesupport::cache::store#delete()","rails activesupport::hashwithindifferentaccess#delete()","rails activesupport::hashwithindifferentaccess#delete()","rails activesupport::inflector::inflections::uncountables#delete()","rails rails::configuration::middlewarestackproxy#delete()","ruby array#delete()","ruby cgi::session#delete()","ruby cgi::session::filestore#delete()","ruby cgi::session::memorystore#delete()","ruby cgi::session::nullstore#delete()","ruby cgi::session::pstore#delete()","ruby csv::row#delete()","ruby csv::table#delete()","ruby dir::delete()","ruby env::delete()","ruby file::delete()","ruby gem::sourcelist#delete()","ruby hash#delete()","ruby irb::jobmanager#delete()","ruby net::http#delete()","ruby net::httpheader#delete()","ruby objectspace::weakkeymap#delete()","ruby objectspace::weakmap#delete()","ruby pstore#delete()","ruby pathname#delete()","ruby resolv::dns::svcparams#delete()","ruby rinda::tuplebag#delete()","ruby rinda::tuplebag::tuplebin#delete()","ruby set#delete()","ruby string#delete()","ruby syntaxsuggest::codeblock#delete()","ruby tempfile#delete()","ruby win32::registry#delete()","ruby yaml::dbm#delete()","rails actiondispatch::middlewarestack#delete!()","ruby string#delete!()","ruby set#delete?()","rails activerecord::associations::collectionproxy#delete_all()","rails activerecord::batches::batchenumerator#delete_all()","rails activerecord::relation#delete_all()","ruby array#delete_at()","ruby reline::history#delete_at()","rails activerecord::relation#delete_by()","ruby reline::lineeditor#delete_char()","ruby reline::lineeditor#delete_char_or_list()","rails activesupport::cache::strategy::localcache::localstore#delete_entry()","ruby openstruct#delete_field()","rails actiondispatch::response#delete_header()","rails actioncontroller::parameters#delete_if()","rails mime::mimes#delete_if()","ruby array#delete_if()","ruby csv::row#delete_if()","ruby csv::table#delete_if()","ruby env::delete_if()","ruby hash#delete_if()","ruby set#delete_if()","ruby yaml::dbm#delete_if()","ruby win32::registry#delete_key()","ruby rdoc::rubygemshook#delete_legacy_args()","ruby rdoc::rubygemshook#delete_legacy_args()","rails activesupport::cache::filestore#delete_matched()","rails activesupport::cache::memorystore#delete_matched()","rails activesupport::cache::nullstore#delete_matched()","rails activesupport::cache::rediscachestore#delete_matched()","rails activesupport::cache::store#delete_matched()","rails activesupport::cache::store#delete_multi()","ruby observable#delete_observer()","ruby observable#delete_observers()","ruby string#delete_prefix()","ruby string#delete_prefix!()","rails activestorage::service#delete_prefixed()","rails activestorage::service::azurestorageservice#delete_prefixed()","rails activestorage::service::diskservice#delete_prefixed()","rails activestorage::service::gcsservice#delete_prefixed()","rails activestorage::service::mirrorservice#delete_prefixed()","rails activestorage::service::s3service#delete_prefixed()","rails actiondispatch::session::cachestore#delete_session()","rails actiondispatch::session::cookiestore#delete_session()","ruby string#delete_suffix()","ruby string#delete_suffix!()","ruby reline::lineeditor#delete_text()","ruby rinda::tuplebag#delete_unless_alive()","ruby win32::registry#delete_value()","ruby syntaxsuggest::codeblock#deleted?()","rails actionmailer::logsubscriber#deliver()","rails actionmailer::messagedelivery#deliver_later()","rails actionmailer::messagedelivery#deliver_later!()","rails actionmailer::messagedelivery#deliver_now()","rails actionmailer::messagedelivery#deliver_now!()","rails activesupport::inflector#demodulize()","rails string#demodulize()","ruby complex#denominator()","ruby float#denominator()","ruby integer#denominator()","ruby numeric#denominator()","ruby rational#denominator()","ruby makemakefile#depend_rules()","ruby gem::resolver::indexspecification#dependencies()","ruby gem::resolver::specspecification#dependencies()","ruby gem::specification#dependencies()","ruby gem::resolver#dependencies_for()","ruby gem::impossibledependencieserror#dependency()","rails actionview::digestor::node#dependency_digest()","ruby gem::dependencylist#dependency_order()","ruby gem::specification#dependent_gems()","ruby gem::specification#dependent_specs()","rails activestorage::attached::model#deprecate()","rails module#deprecate()","ruby gem::deprecate#deprecate()","rails activesupport::deprecation::deprecatedconstantaccessor#deprecate_constant()","ruby module#deprecate_constant()","rails activesupport::deprecation::methodwrapper#deprecate_methods()","ruby gem::command#deprecate_option()","ruby gem::command#deprecated?()","ruby gem::licenses::deprecated_exception_id?()","ruby gem::licenses::deprecated_license_id?()","rails activesupport::deprecation::reporting#deprecation_warning()","ruby gem::commands::querycommand#deprecation_warning()","ruby reline::ansi::deprep()","ruby reline::generalio::deprep()","ruby reline::windows::deprep()","ruby json::ext::generator::state#depth()","ruby json::ext::generator::state#depth=()","ruby thread::queue#deq()","ruby thread::sizedqueue#deq()","ruby openssl::pkey::pkey#derive()","rails activerecord::encryption::key::derive_from()","rails activerecord::encryption::keygenerator#derive_key_from()","rails rails::api::task#desc()","rails rails::command::base::desc()","rails rails::generators::base::desc()","ruby pathname#descend()","rails activesupport::descendantstracker#descendants()","rails activesupport::descendantstracker::descendants()","rails class#descendants()","rails activerecord::inheritance::classmethods#descends_from_active_record?()","ruby prism::pack::directive#describe()","ruby prism::pack::format#describe()","ruby gem::command#description()","ruby gem::commands::unpackcommand#description()","ruby gem::specification#description=()","rails activejob::arguments#deserialize()","rails activejob::core#deserialize()","rails activejob::core::classmethods#deserialize()","rails activejob::serializers::objectserializer#deserialize()","rails activejob::serializers::rangeserializer#deserialize()","rails activemodel::type::value#deserialize()","rails activemodel::type::value#deserialize()","rails activerecord::encryption::encryptedattributetype#deserialize()","rails activerecord::type::json#deserialize()","ruby encoding::converter#destination_encoding()","ruby encoding::invalidbytesequenceerror#destination_encoding()","ruby encoding::undefinedconversionerror#destination_encoding()","ruby encoding::invalidbytesequenceerror#destination_encoding_name()","ruby encoding::undefinedconversionerror#destination_encoding_name()","rails activerecord::associations::collectionproxy#destroy()","rails activerecord::persistence#destroy()","rails activerecord::persistence::classmethods#destroy()","rails rails::generators::activemodel#destroy()","rails activerecord::persistence#destroy!()","rails activerecord::associations::collectionproxy#destroy_all()","rails activerecord::batches::batchenumerator#destroy_all()","rails activerecord::relation#destroy_all()","rails activerecord::core::destroy_association_async_job()","rails activerecord::relation#destroy_by()","rails activerecord::persistence#destroyed?()","rails activerecord::autosaveassociation#destroyed_by_association()","rails activerecord::autosaveassociation#destroyed_by_association=()","rails actioncable::connection::streameventloop#detach()","rails activestorage::attached::many#detach()","rails activestorage::attached::one#detach()","ruby process::detach()","rails activesupport::subscriber::detach_from()","ruby openssl::pkcs7#detached()","ruby openssl::pkcs7#detached=()","ruby openssl::pkcs7#detached?()","rails activemodel::error#detail()","rails actionview::lookupcontext::viewpaths#detail_args_for()","ruby didyoumean::correctable#detailed_message()","ruby errorhighlight::coreext#detailed_message()","ruby exception#detailed_message()","ruby syntaxsuggest#detailed_message()","rails activemodel::error#details()","rails activemodel::errors#details()","rails actionview::viewpaths#details_for_lookup()","ruby enumerable#detect()","ruby gem::specfetcher#detect()","ruby rdoc::encoding::detect_encoding()","ruby syntaxsuggest::codefrontier#detect_invalid_blocks()","rails activerecord::encryption::scheme#deterministic?()","rails activerecord::encryption::encryptablerecord#deterministic_encrypted_attributes()","ruby file::stat#dev()","ruby file::stat#dev_major()","ruby file::stat#dev_minor()","rails ","ruby gem::resolver::activationrequest#development?()","ruby gem::resolver::dependencyrequest#development?()","ruby gem::specification#development_dependencies()","ruby jacobian#dfdxi()","ruby openssl::pkey::ec#dh_compute_key()","ruby reline::lineeditor::dialogprocscope#dialog()","ruby reline::core#dialog_proc()","ruby didyoumean::treespellchecker#dictionary_without_leaves()","ruby array#difference()","ruby set#difference()","rails actioncontroller::parameters#dig()","rails activesupport::hashwithindifferentaccess#dig()","rails activesupport::hashwithindifferentaccess#dig()","ruby array#dig()","ruby csv::row#dig()","ruby csv::table#dig()","ruby hash#dig()","ruby openstruct#dig()","ruby struct#dig()","ruby ","ruby reline::core#dig_perfect_match_proc=()","rails actionview::digestor::digest()","rails actionview::digestor::injected#digest()","rails actionview::digestor::missing#digest()","rails actionview::digestor::node#digest()","rails activestorage::variation#digest()","ruby digest::class::digest()","ruby digest::instance#digest()","ruby openssl::digest::digest()","ruby openssl::engine#digest()","ruby openssl::hmac::digest()","ruby openssl::hmac#digest()","ruby digest::instance#digest!()","ruby digest::base#digest_length()","ruby digest::instance#digest_length()","ruby digest::sha2#digest_length()","ruby openssl::digest#digest_length()","ruby integer#digits()","ruby didyoumean::treespellchecker#dimensions()","ruby gem::dir()","ruby gem::installer#dir()","ruby makemakefile#dir_config()","rails actiondispatch::routing::mapper::customurls#direct()","ruby rdoc::classmodule#direct_ancestors()","ruby rdoc::normalclass#direct_ancestors()","rails activesupport::descendantstracker::direct_descendants()","rails activesupport::descendantstracker#direct_descendants()","rails ","rails ","rails ","rails rails::sourceannotationextractor::annotation::directories()","ruby file::directory?()","ruby file::stat#directory?()","ruby filetest#directory?()","ruby gem::package::tarreader::entry#directory?()","ruby pathname#directory?()","ruby file::dirname()","ruby pathname#dirname()","ruby gem::specification::dirs()","ruby gem::specification::dirs=()","rails activerecord::connectionadapters::querycache::dirties_query_cache()","ruby gc::disable()","ruby gc::profiler::disable()","ruby tracepoint#disable()","rails ","rails actionview::lookupcontext::detailscache#disable_cache()","ruby fiddle::handle#disable_close()","rails activerecord::migration::disable_ddl_transaction!()","rails activerecord::connectionadapters::abstractadapter#disable_extension()","rails activerecord::connectionadapters::postgresqladapter#disable_extension()","rails activerecord::connectionadapters::querycache#disable_query_cache!()","rails activerecord::connectionadapters::querycache::connectionpoolconfiguration#disable_query_cache!()","rails activerecord::connectionadapters::abstractadapter#disable_referential_integrity()","rails activesupport::deprecation::behavior#disallowed_behavior()","rails activesupport::deprecation::behavior#disallowed_behavior=()","rails activesupport::deprecation::disallowed#disallowed_warnings()","ruby rubyvm::instructionsequence#disasm()","ruby rubyvm::instructionsequence::disasm()","ruby rubyvm::instructionsequence#disassemble()","ruby rubyvm::instructionsequence::disassemble()","rails actiondispatch::flash::flashhash#discard()","rails activerecord::connectionadapters::abstractadapter#discard!()","rails activejob::exceptions::classmethods#discard_on()","rails actioncable::remoteconnections::remoteconnection#disconnect()","rails actioncable::server::base#disconnect()","rails activerecord::connectionadapters::connectionpool#disconnect()","rails activerecord::connectionadapters::abstractadapter#disconnect!()","rails activerecord::connectionadapters::connectionpool#disconnect!()","rails activerecord::connectionadapters::mysql2adapter#disconnect!()","rails activerecord::connectionadapters::postgresqladapter#disconnect!()","rails activerecord::connectionadapters::sqlite3adapter#disconnect!()","ruby set#disjoint?()","rails actioncontroller::metal::dispatch()","ruby win32ole::method#dispid()","rails rails::sourceannotationextractor#display()","ruby gem::resolver::stats#display()","ruby object#display()","ruby rdoc::codeobject#display?()","ruby rdoc::toplevel#display?()","ruby irb::relineinputmethod#display_document()","ruby didyoumean::jaro#distance()","ruby didyoumean::jarowinkler#distance()","rails actionview::helpers::datehelper#distance_of_time_in_words()","rails actionview::helpers::datehelper#distance_of_time_in_words_to_now()","rails activerecord::associations::collectionproxy#distinct()","rails activerecord::querymethods#distinct()","ruby ","ruby bigdecimal#div()","ruby integer#div()","ruby numeric#div()","ruby set#divide()","ruby bigdecimal#divmod()","ruby float#divmod()","ruby integer#divmod()","ruby numeric#divmod()","ruby fiddle::importer#dlload()","ruby fiddle::dlopen()","ruby fiddle::dlunwrap()","ruby fiddle::dlwrap()","ruby uri::ldap#dn()","ruby uri::ldap#dn=()","ruby rdoc::servlet#do_get()","ruby rdoc::parser::c#do_aliases()","ruby rdoc::parser::c#do_attrs()","ruby rdoc::parser::c#do_boot_defclass()","ruby rdoc::parser::c#do_classes_and_modules()","ruby rdoc::parser::c#do_constants()","ruby rdoc::parser::c#do_includes()","ruby rdoc::parser::c#do_methods()","ruby rdoc::parser::c#do_missing()","ruby basicsocket::do_not_reverse_lookup()","ruby basicsocket#do_not_reverse_lookup()","ruby basicsocket#do_not_reverse_lookup=()","ruby basicsocket::do_not_reverse_lookup=()","ruby openssl::ssl::socketforwarder#do_not_reverse_lookup=()","ruby rinda::ringserver#do_reply()","ruby rinda::ringserver#do_write()","ruby gem::specification#doc_dir()","ruby rdoc::stats#doc_stats()","ruby gem::commands::checkcommand#doctor()","ruby gem::doctor#doctor()","ruby rdoc::rdoc#document()","ruby rdoc::rubygemshook#document()","ruby rdoc::rubygemshook#document()","ruby psych::nodes::document#document?()","ruby psych::nodes::node#document?()","ruby rdoc::codeobject#document_children=()","ruby syntaxsuggest::displayinvalidblocks#document_ok?()","ruby rdoc::codeobject#document_self=()","ruby rdoc::classmodule#document_self_or_methods()","ruby ","ruby rdoc::servlet#documentation_page()","ruby rdoc::servlet#documentation_search()","ruby rdoc::servlet#documentation_source()","ruby rdoc::classmodule#documented?()","ruby rdoc::codeobject#documented?()","ruby rdoc::constant#documented?()","ruby rdoc::methodattr#documented?()","rails ","rails actionview::recordidentifier#dom_class()","rails actionview::recordidentifier#dom_id()","rails actiondispatch::http::url#domain()","ruby cgi::cookie#domain=()","ruby gem::streamui::silentdownloadreporter#done()","ruby gem::streamui::silentprogressreporter#done()","ruby gem::streamui::simpleprogressreporter#done()","ruby gem::streamui::threadeddownloadreporter#done()","ruby gem::streamui::verboseprogressreporter#done()","ruby rdoc::stats#done_adding()","ruby rdoc::codeobject#done_documenting=()","ruby gem::done_installing()","rails activesupport::dependencies::interlock#done_running()","rails activesupport::dependencies::interlock#done_unloading()","ruby irb::vec#dot()","ruby bigdecimal::double_fig()","rails activerecord::migration#down()","rails addservicenametoactivestorageblobs#down()","ruby string#downcase()","ruby symbol#downcase()","ruby string#downcase!()","rails activerecord::encryption::scheme#downcase?()","ruby reline::lineeditor#downcase_word()","rails activestorage::blob#download()","rails activestorage::preview#download()","rails activestorage::service#download()","rails activestorage::service::azurestorageservice#download()","rails activestorage::service::diskservice#download()","rails activestorage::service::gcsservice#download()","rails activestorage::service::s3service#download()","rails activestorage::variant#download()","ruby gem::remotefetcher#download()","ruby gem::resolver::activationrequest#download()","ruby gem::resolver::specification#download()","ruby gem::source#download()","ruby gem::source::installed#download()","rails activestorage::analyzer#download_blob_to_tempfile()","rails activestorage::previewer#download_blob_to_tempfile()","rails activestorage::blob#download_chunk()","rails activestorage::service#download_chunk()","rails activestorage::service::azurestorageservice#download_chunk()","rails activestorage::service::diskservice#download_chunk()","rails activestorage::service::gcsservice#download_chunk()","rails activestorage::service::s3service#download_chunk()","ruby gem::streamui#download_reporter()","ruby gem::remotefetcher#download_to_cache()","ruby date#downto()","ruby integer#downto()","rails actiondispatch::routing::mapper::resources#draw()","rails activestorage::previewer#draw()","ruby irb::canvas#draw()","rails activerecord::tasks::databasetasks#drop()","ruby array#drop()","ruby enumerable#drop()","ruby enumerator::lazy#drop()","rails activerecord::tasks::databasetasks#drop_all()","rails activerecord::tasks::databasetasks#drop_current()","rails activerecord::connectionadapters::schemastatements#drop_join_table()","rails activerecord::connectionadapters::postgresql::schemastatements#drop_schema()","rails activerecord::connectionadapters::abstractmysqladapter#drop_table()","rails activerecord::connectionadapters::schemastatements#drop_table()","ruby array#drop_while()","ruby enumerable#drop_while()","ruby enumerator::lazy#drop_while()","ruby openssl::pkey::ec#dsa_sign_asn1()","ruby openssl::pkey::ec#dsa_verify_asn1()","rails activesupport::timewithzone#dst?()","ruby time#dst?()","ruby socket::ifaddr#dstaddr()","ruby ","ruby encoding#dummy?()","ruby rdoc::markupreference#dummy_instance_alias()","ruby rdoc::markupreference#dummy_instance_method()","ruby makemakefile#dummy_makefile()","rails ","ruby rdoc::markupreference::dummy_singleton_method()","rails actiontext::serialization#dump()","rails activerecord::encryption::messageserializer#dump()","rails activesupport::cache::coders::rails61coder#dump()","rails activesupport::cache::coders::rails70coder#dump()","rails activesupport::cache::memcachestore::coders::rails61coder#dump()","ruby gem::yamlserializer#dump()","ruby json#dump()","ruby json::genericobject::dump()","ruby marshal::dump()","ruby objectspace#dump()","ruby prism::dump()","ruby psych::dump()","ruby string#dump()","ruby objectspace#dump_all()","rails activesupport::cache::coders::rails61coder#dump_compressed()","rails activesupport::cache::coders::rails70coder#dump_compressed()","rails activesupport::cache::memcachestore::coders::rails61coder#dump_compressed()","ruby rubyvm::yjit::dump_exit_locations()","ruby prism::dump_file()","ruby gem::yamlserializer#dump_hash()","rails activerecord::tasks::databasetasks#dump_schema_cache()","ruby objectspace#dump_shapes()","ruby psych::dump_stream()","rails activerecord::connectionadapters::schemacache#dump_to()","ruby gem::configfile::dump_with_rubygems_yaml()","rails activerecord::core#dup()","rails activesupport::hashwithindifferentaccess#dup()","rails activesupport::hashwithindifferentaccess#dup()","ruby bigdecimal#dup()","ruby env::dup()","ruby numeric#dup()","ruby object#dup()","ruby singleton#dup()","rails method#duplicable?()","rails object#duplicable?()","rails singleton#duplicable?()","rails unboundmethod#duplicable?()","rails activesupport::notifications::event#duration()","ruby gem::dynamic_library_suffixes()","ruby irb::relineinputmethod#dynamic_prompt()","rails actioncontroller::parameters#each()","rails actiondispatch::flash::flashhash#each()","rails actiondispatch::http::headers#each()","rails actiondispatch::middlewarestack#each()","rails actiondispatch::response#each()","rails actiondispatch::response::rackbody#each()","rails activerecord::batches::batchenumerator#each()","rails activerecord::fixtureset#each()","rails activerecord::result#each()","rails mime::mimes#each()","rails rails::engine::railties#each()","rails rails::paths::path#each()","ruby argf#each()","ruby array#each()","ruby csv#each()","ruby csv::fieldsconverter#each()","ruby csv::row#each()","ruby csv::table#each()","ruby dir#each()","ruby env::each()","ruby enumerator#each()","ruby enumerator::arithmeticsequence#each()","ruby enumerator::chain#each()","ruby enumerator::product#each()","ruby etc::group::each()","ruby etc::passwd::each()","ruby fiddle::cstruct#each()","ruby gem::availableset#each()","ruby gem::configfile#each()","ruby gem::dependencylist#each()","ruby gem::package::tarreader#each()","ruby gem::sourcelist#each()","ruby gem::specification::each()","ruby getoptlong#each()","ruby hash#each()","ruby io#each()","ruby io::buffer#each()","ruby net::httpheader#each()","ruby objectspace::weakmap#each()","ruby openssl::asn1::constructive#each()","ruby openssl::buffering#each()","ruby openssl::config#each()","ruby psych::nodes::node#each()","ruby range#each()","ruby reline::killring#each()","ruby resolv::dns::svcparams#each()","ruby rinda::notifytemplateentry#each()","ruby rinda::ringfinger#each()","ruby rinda::tuple#each()","ruby set#each()","ruby stringio#each()","ruby struct#each()","ruby syntaxsuggest::lexall#each()","ruby win32ole#each()","ruby win32::registry#each()","ruby yaml::dbm#each()","ruby zlib::gzipreader#each()","ruby resolv#each_address()","ruby resolv::each_address()","ruby resolv::dns#each_address()","ruby resolv::hosts#each_address()","ruby resolv::mdns#each_address()","ruby rdoc::classmodule#each_ancestor()","ruby rdoc::context#each_attribute()","ruby argf#each_byte()","ruby io#each_byte()","ruby io::buffer#each_byte()","ruby openssl::buffering#each_byte()","ruby string#each_byte()","ruby stringio#each_byte()","ruby zlib::gzipreader#each_byte()","ruby thread::each_caller_location()","ruby net::httpheader#each_capitalized()","ruby net::httpheader#each_capitalized_name()","ruby gem::security::trustdir#each_certificate()","ruby argf#each_char()","ruby io#each_char()","ruby string#each_char()","ruby stringio#each_char()","ruby zlib::gzipreader#each_char()","ruby dir#each_child()","ruby dir::each_child()","ruby pathname#each_child()","ruby rubyvm::instructionsequence#each_child()","ruby rdoc::context#each_classmodule()","ruby argf#each_codepoint()","ruby io#each_codepoint()","ruby string#each_codepoint()","ruby stringio#each_codepoint()","ruby enumerable#each_cons()","ruby optionparser::each_const()","ruby rdoc::context#each_constant()","ruby enumerable#each_entry()","ruby gem::package::tarreader#each_entry()","ruby pathname#each_entry()","ruby rdoc::context#each_extend()","ruby pathname#each_filename()","ruby string#each_grapheme_cluster()","ruby net::httpheader#each_header()","ruby rdoc::context#each_include()","ruby array#each_index()","rails actioncontroller::parameters#each_key()","ruby env::each_key()","ruby hash#each_key()","ruby net::httpheader#each_key()","ruby objectspace::weakmap#each_key()","ruby win32::registry#each_key()","ruby argf#each_line()","ruby csv::parser::inputsscanner#each_line()","ruby csv::parser::scanner#each_line()","ruby io#each_line()","ruby openssl::buffering#each_line()","ruby pathname#each_line()","ruby string#each_line()","ruby stringio#each_line()","ruby zlib::gzipreader#each_line()","ruby irb::locale#each_localized_path()","ruby rdoc::context#each_method()","ruby net::httpheader#each_name()","ruby resolv::each_name()","ruby resolv#each_name()","ruby resolv::dns#each_name()","ruby resolv::hosts#each_name()","ruby syntaxsuggest::parseblocksfromindentline#each_neighbor_block()","rails actioncontroller::parameters#each_nested_attribute()","ruby objectspace::each_object()","ruby getoptlong#each_option()","ruby optionparser::list#each_option()","rails actioncontroller::parameters#each_pair()","ruby csv::row#each_pair()","ruby env::each_pair()","ruby fiddle::cstruct#each_pair()","ruby hash#each_pair()","ruby objectspace::weakmap#each_pair()","ruby openstruct#each_pair()","ruby struct#each_pair()","ruby yaml::dbm#each_pair()","ruby rdoc::codeobject#each_parent()","rails activerecord::batches::batchenumerator#each_record()","ruby resolv::dns#each_resource()","ruby rdoc::context#each_section()","ruby enumerable#each_slice()","ruby gem::sourcelist#each_source()","ruby gem::availableset#each_spec()","ruby tsort#each_strongly_connected_component()","ruby tsort::each_strongly_connected_component()","ruby tsort#each_strongly_connected_component_from()","ruby tsort::each_strongly_connected_component_from()","ruby irb::locale#each_sublocale()","ruby irb::irb#each_top_level_statement()","rails actioncontroller::parameters#each_value()","ruby env::each_value()","ruby hash#each_value()","ruby net::httpheader#each_value()","ruby objectspace::weakmap#each_value()","ruby win32::registry#each_value()","ruby yaml::dbm#each_value()","ruby enumerable#each_with_index()","ruby enumerator#each_with_index()","ruby enumerable#each_with_object()","ruby enumerator#each_with_object()","ruby enumerator::lazy#eager()","rails activesupport::autoload#eager_autoload()","rails activerecord::querymethods#eager_load()","rails rails::paths::root#eager_load()","rails abstractcontroller::eager_load!()","rails actionmailer::eager_load!()","rails actionview::eager_load!()","rails activemodel::eager_load!()","rails activerecord::eager_load!()","rails activerecord::encryption::eager_load!()","rails activesupport::eager_load!()","rails activesupport::autoload#eager_load!()","rails rails::application#eager_load!()","rails rails::engine#eager_load!()","rails rails::railtie::configuration#eager_load_namespaces()","rails rails::engine::configuration#eager_load_paths()","rails activerecord::relation#eager_loading?()","ruby openssl::ssl::sslcontext#ecdh_curves=()","ruby io#echo=()","ruby io#echo?()","ruby reline::lineeditor#ed_digit()","ruby reline::unicode::ed_transpose_words()","rails ","rails rails::generators::namedbase#edit_helper()","ruby reline::config#editing_mode()","ruby reline::lineeditor#editing_mode()","ruby reline::config#editing_mode=()","ruby reline::config#editing_mode_is?()","ruby openssl::random::egd()","ruby openssl::random::egd_bytes()","ruby process::egid()","ruby process::egid=()","ruby process::gid::eid()","ruby process::uid::eid()","ruby gem::updatesuggestion#eligible_for_update?()","ruby reline::unicode::em_backward_word()","ruby reline::unicode::em_big_backward_word()","ruby reline::unicode::em_forward_word()","ruby reline::unicode::em_forward_word_with_capitalization()","ruby reline::core#emacs_editing_mode()","ruby reline::core#emacs_editing_mode?()","rails activerecord::faker::email()","rails actionmailer::base#email_address_with_name()","rails actionmailer::base::email_address_with_name()","rails actionmailer::preview::email_exists?()","rails actionview::helpers::formbuilder#email_field()","rails actionview::helpers::formhelper#email_field()","rails actionview::helpers::formtaghelper#email_field_tag()","ruby gem::security::email_to_name()","rails actionmailer::preview::emails()","ruby rdoc::markdown#emphasis()","rails actiondispatch::request::empty()","ruby psych::handler#empty()","rails actioncontroller::parameters#empty?()","rails actiondispatch::flash::flashhash#empty?()","rails activerecord::associations::collectionproxy#empty?()","rails activerecord::databaseconfigurations#empty?()","rails activerecord::relation#empty?()","rails activerecord::result#empty?()","ruby array#empty?()","ruby csv::fieldsconverter#empty?()","ruby dir::empty?()","ruby env::empty?()","ruby file::empty?()","ruby filetest#empty?()","ruby gem::availableset#empty?()","ruby gem::package::tarheader#empty?()","ruby gem::requestset::lockfile::tokenizer#empty?()","ruby gem::resolver::requirementlist#empty?()","ruby gem::sourcelist#empty?()","ruby hash#empty?()","ruby io::buffer#empty?()","ruby pathname#empty?()","ruby rdoc::comment#empty?()","ruby ractor::selector#empty?()","ruby reline::killring::ringbuffer#empty?()","ruby resolv::dns::svcparams#empty?()","ruby set#empty?()","ruby string#empty?()","ruby stringscanner#empty?()","ruby symbol#empty?()","ruby syntaxsuggest::codeline#empty?()","ruby syntaxsuggest::priorityengulfqueue#empty?()","ruby syntaxsuggest::priorityqueue#empty?()","ruby syntaxsuggest::unvisitedlines#empty?()","ruby thread::queue#empty?()","ruby thread::sizedqueue#empty?()","ruby reline::ansi::empty_buffer?()","ruby reline::windows::empty_buffer?()","rails activerecord::connectionadapters::databasestatements#empty_insert_statement_value()","rails activerecord::connectionadapters::abstractmysqladapter::emulate_booleans()","ruby gc::enable()","ruby gc::profiler::enable()","ruby rubyvm::rjit::enable()","ruby rubyvm::yjit::enable()","ruby tracepoint#enable()","ruby fiddle::handle#enable_close()","ruby makemakefile#enable_config()","rails activerecord::connectionadapters::abstractadapter#enable_extension()","rails activerecord::connectionadapters::postgresqladapter#enable_extension()","ruby openssl::ssl::sslcontext#enable_fallback_scsv()","rails actiontext::generators::installgenerator#enable_image_processing_gem()","rails activerecord::connectionadapters::querycache#enable_query_cache!()","rails activerecord::connectionadapters::querycache::connectionpoolconfiguration#enable_query_cache!()","rails kernel#enable_warnings()","ruby gc::profiler::enabled?()","ruby reline::terminfo::enabled?()","ruby rubyvm::rjit::enabled?()","ruby rubyvm::yjit::enabled?()","ruby tracepoint#enabled?()","ruby openssl::pkcs7::recipientinfo#enc_key()","ruby threadgroup#enclose()","ruby threadgroup#enclosed?()","rails activestorage::variation::encode()","rails activesupport::json::encode()","ruby string#encode()","rails actionview::template#encode!()","ruby rdoc::comment#encode!()","ruby string#encode!()","ruby base64#encode64()","rails actioncontroller::httpauthentication::basic#encode_credentials()","rails actioncontroller::httpauthentication::digest#encode_credentials()","rails actioncontroller::httpauthentication::token#encode_credentials()","ruby rdoc::text::encode_fallback()","ruby uri::encode_uri_component()","rails activerecord::connectionadapters::schemacache#encode_with()","rails activerecord::core#encode_with()","rails activerecord::relation#encode_with()","rails activesupport::safebuffer#encode_with()","ruby irb::irb#encode_with_invalid_byte_sequence()","ruby uri::encode_www_form()","ruby uri::encode_www_form_component()","rails activerecord::connectionadapters::postgresql::schemastatements#encoding()","rails activerecord::connectionadapters::sqlite3adapter#encoding()","ruby irb::fileinputmethod#encoding()","ruby irb::locale#encoding()","ruby irb::stdioinputmethod#encoding()","ruby regexp#encoding()","ruby reline::ansi::encoding()","ruby reline::core#encoding()","ruby reline::generalio::encoding()","ruby reline::windows::encoding()","ruby string#encoding()","ruby symbol#encoding()","rails rails::application::configuration#encoding=()","ruby reline::encoding_system_needs()","ruby reline::encoding_system_needs()","ruby ","rails actiontext::encryption#encrypt()","rails activerecord::encryption::cipher#encrypt()","rails activerecord::encryption::cipher::aes256gcm#encrypt()","rails activerecord::encryption::encryptablerecord#encrypt()","rails activerecord::encryption::encryptor#encrypt()","rails activerecord::encryption::nullencryptor#encrypt()","rails activerecord::encryption::readonlynullencryptor#encrypt()","ruby openssl::cipher#encrypt()","ruby openssl::pkcs7::encrypt()","ruby openssl::pkey::pkey#encrypt()","rails activesupport::messageencryptor#encrypt_and_sign()","rails activerecord::encryption::encryptablerecord#encrypt_attribute()","rails actiondispatch::cookies::chainedcookiejars#encrypted()","rails rails::application#encrypted()","rails activerecord::encryption::encryptor#encrypted?()","rails activerecord::encryption::nullencryptor#encrypted?()","rails activerecord::encryption::readonlynullencryptor#encrypted?()","rails activerecord::encryption::encryptablerecord#encrypted_attribute?()","rails activerecord::encryption::extendeddeterministicqueries::inwithadditionalvalues#encryption_aware_type_caster()","rails activerecord::encryption::envelopeencryptionkeyprovider#encryption_key()","rails activerecord::encryption::keyprovider#encryption_key()","rails activerecord::encryption::encryptablerecord#encrypts()","ruby enumerator::arithmeticsequence#end()","ruby matchdata#end()","ruby range#end()","ruby zlib::zstream#end()","ruby rdoc::parser::ripperstatelex::end?()","ruby ipaddr#end_addr()","ruby prism::location#end_character_column()","ruby prism::location#end_character_offset()","ruby prism::location#end_column()","rails activesupport::xmlmini_nokogirisax::hashbuilder#end_document()","ruby psych::emitter#end_document()","ruby psych::handler#end_document()","ruby psych::treebuilder#end_document()","rails activesupport::xmlmini_nokogirisax::hashbuilder#end_element()","ruby prism::location#end_line()","ruby psych::emitter#end_mapping()","ruby psych::handler#end_mapping()","rails date#end_of_day()","rails datetime#end_of_day()","rails time#end_of_day()","rails datetime#end_of_hour()","rails time#end_of_hour()","ruby reline::lineeditor#end_of_line()","rails datetime#end_of_minute()","rails time#end_of_minute()","rails dateandtime::calculations#end_of_month()","rails dateandtime::calculations#end_of_quarter()","rails dateandtime::calculations#end_of_week()","rails dateandtime::calculations#end_of_year()","ruby prism::location#end_offset()","ruby psych::emitter#end_sequence()","ruby psych::handler#end_sequence()","ruby psych::emitter#end_stream()","ruby psych::handler#end_stream()","ruby psych::treebuilder#end_stream()","ruby string#end_with?()","ruby symbol#end_with?()","ruby zlib::zstream#ended?()","ruby etc::endgrent()","rails rails::engine#endpoint()","rails rails::engine::endpoint()","ruby etc::endpwent()","rails ","rails ","rails rails::command::base::engine?()","rails ","ruby openssl::engine::engines()","ruby date#england()","ruby reline::windows::keyeventrecord#enhanced?()","ruby thread::queue#enq()","ruby thread::sizedqueue#enq()","rails activejob::enqueuing#enqueue()","rails actioncable::channel::base#ensure_confirmation_sent()","ruby gem::ensure_default_gem_subdirectories()","ruby gem::installer#ensure_dependency()","ruby gem::ensure_gem_subdirectories()","ruby gem::installer#ensure_loadable_spec()","ruby monitor#enter()","ruby net::httpresponse#entity()","ruby fiddle::cstruct::entity_class()","ruby fiddle::cunion::entity_class()","ruby dir::entries()","ruby enumerable#entries()","ruby pathname#entries()","ruby range#entries()","rails activerecord::connectionadapters::postgresql::columnmethods#enum()","rails activerecord::enum#enum()","ruby enumerator::lazy#enum_for()","ruby object#enum_for()","rails activerecord::connectionadapters::postgresqladapter#enum_types()","rails rails::sourceannotationextractor::enumerate()","rails activerecord::core::enumerate_columns_in_select_statements()","rails actiondispatch::http::headers#env()","rails activerecord::tasks::databasetasks#env()","rails rails::env()","rails rails::env=()","rails rails::application#env_config()","rails rails::engine#env_config()","rails actiondispatch::http::filterparameters#env_filter()","ruby gem::env_requirement()","rails rails::console#environment()","rails rails::dbconsole#environment()","rails rails::generators::actions#environment()","ruby bundler::environment()","ruby optionparser#environment()","rails ","rails rails::console#environment?()","ruby argf#eof()","ruby csv#eof()","ruby io#eof()","ruby openssl::buffering#eof()","ruby stringio#eof()","ruby zlib::gzipreader#eof()","rails actiondispatch::http::uploadedfile#eof?()","ruby argf#eof?()","ruby csv#eof?()","ruby gem::package::tarreader::entry#eof?()","ruby io#eof?()","ruby irb::fileinputmethod#eof?()","ruby irb::readlineinputmethod#eof?()","ruby irb::relineinputmethod#eof?()","ruby irb::stdioinputmethod#eof?()","ruby openssl::buffering#eof?()","ruby reline::lineeditor#eof?()","ruby stringio#eof?()","ruby xmp::stringinputmethod#eof?()","ruby zlib::gzipreader#eof?()","ruby csv::parser::inputsscanner#eos?()","ruby stringscanner#eos?()","rails actioncontroller::parameters#eql?()","rails actionview::filesystemresolver#eql?()","rails activemodel::name#eql?()","rails activemodel::type::value#eql?()","rails activemodel::type::value#eql?()","rails activerecord::associations::preloader::association::loaderquery#eql?()","rails activerecord::core#eql?()","rails activesupport::duration#eql?()","rails activesupport::timewithzone#eql?()","rails mime::type#eql?()","rails time#eql?()","ruby array#eql?()","ruby bigdecimal#eql?()","ruby data#eql?()","ruby delegator#eql?()","ruby enumerator::arithmeticsequence#eql?()","ruby fiddle::pointer#eql?()","ruby float#eql?()","ruby gem::nametuple#eql?()","ruby gem::platform#eql?()","ruby gem::resolver::activationrequest#eql?()","ruby gem::version#eql?()","ruby hash#eql?()","ruby ipaddr#eql?()","ruby matchdata#eql?()","ruby method#eql?()","ruby numeric#eql?()","ruby object#eql?()","ruby openssl::bn#eql?()","ruby openssl::pkey::ec::group#eql?()","ruby openssl::pkey::ec::point#eql?()","ruby openssl::x509::name#eql?()","ruby openstruct#eql?()","ruby pathname#eql?()","ruby proc#eql?()","ruby rdoc::toplevel#eql?()","ruby range#eql?()","ruby regexp#eql?()","ruby string#eql?()","ruby struct#eql?()","ruby time#eql?()","ruby uri::generic#eql?()","ruby unboundmethod#eql?()","rails time#eql_with_coercion()","rails time#eql_without_coercion()","ruby basicobject#equal?()","ruby ractor::movedobject#equal?()","ruby reline::keystroke#equal?()","ruby reline::ansi::erase_after_cursor()","ruby reline::generalio::erase_after_cursor()","ruby reline::windows::erase_after_cursor()","ruby io#erase_line()","ruby io#erase_screen()","ruby math::erf()","ruby math::erfc()","ruby systemcallerror#errno()","rails actionview::digestor::nulllogger::error()","rails activesupport::xmlmini_nokogirisax::hashbuilder#error()","rails rails::error()","ruby logger#error()","ruby openssl::x509::storecontext#error()","ruby rdoc::parser::ruby#error()","ruby rdoc::rdoc#error()","ruby rdoc::servlet#error()","ruby syslog::logger#error()","ruby logger#error!()","ruby openssl::x509::storecontext#error=()","ruby logger#error?()","ruby prism::rippercompat#error?()","ruby encoding::invalidbytesequenceerror#error_bytes()","ruby encoding::undefinedconversionerror#error_char()","ruby socket::resolutionerror#error_code()","ruby openssl::x509::storecontext#error_depth()","rails actionview::helpers::activemodelinstancetag#error_message()","ruby getoptlong#error_message()","rails activerecord::connectionadapters::mysql2adapter#error_number()","rails activesupport::executionwrapper::error_reporter()","ruby openssl::x509::storecontext#error_string()","rails actionview::helpers::activemodelinstancetag#error_wrapping()","rails activemodel::validations#errors()","rails rails::generators::activemodel#errors()","ruby gem::resolver::composedset#errors()","ruby gem::resolver::installerset#errors()","ruby openssl::errors()","ruby syntaxsuggest::explainsyntax#errors()","ruby syntaxsuggest::getparseerrors::errors()","ruby cgi::escape#escape()","ruby cgi::util#escape()","ruby gem::uriformatter#escape()","ruby regexp::escape()","ruby shellwords::escape()","ruby uri::rfc2396_parser#escape()","ruby uri::rfc2396_parser#escape()","ruby cgi::util#escapeelement()","ruby cgi::escape#escapehtml()","ruby cgi::util#escapehtml()","ruby cgi::escape#escapeuricomponent()","ruby cgi::util#escapeuricomponent()","rails activerecord::connectionadapters::postgresql::quoting#escape_bytea()","ruby cgi::util#escape_element()","ruby reline::unicode::escape_for_print()","ruby cgi::util#escape_html()","rails actionview::helpers::javascripthelper#escape_javascript()","rails actionview::helpers::taghelper#escape_once()","ruby json::ext::generator::state#escape_slash()","ruby json::ext::generator::state#escape_slash=()","ruby json::ext::generator::state#escape_slash?()","ruby cgi::escape#escape_uri_component()","ruby cgi::util#escape_uri_component()","rails activerecord::connectionadapters::connectionhandler#establish_connection()","rails activerecord::connectionhandling#establish_connection()","rails actioncontroller::conditionalget::classmethods#etag()","rails actiondispatch::http::cache::response#etag=()","rails actiondispatch::http::cache::response#etag?()","rails actiondispatch::http::cache::request#etag_matches?()","ruby process::euid()","ruby process::euid=()","ruby binding#eval()","ruby kernel#eval()","ruby rubyvm::instructionsequence#eval()","ruby irb::context#eval_history=()","ruby irb::irb#eval_input()","ruby tracepoint#eval_script()","ruby irb::statement#evaluable_code()","ruby irb::statement::command#evaluable_code()","ruby irb::statement::expression#evaluable_code()","ruby irb::workspace#evaluate()","ruby integer#even?()","ruby prism::lexcompat::token#event()","ruby tracepoint#event()","rails ","ruby win32ole::method#event?()","ruby win32ole::method#event_interface()","ruby psych::handler#event_location()","ruby psych::treebuilder#event_location()","rails actioncable::server::base#event_loop()","rails numeric#exabyte()","rails numeric#exabytes()","ruby gem::requirement#exact?()","rails actioncontroller::parameters#except()","rails activerecord::spawnmethods#except()","rails activesupport::hashwithindifferentaccess#except()","rails activesupport::hashwithindifferentaccess#except()","rails hash#except()","ruby env::except()","ruby hash#except()","rails hash#except!()","ruby drb::drbunknown#exception()","ruby exception#exception()","ruby exception::exception()","ruby timeout::exitexception#exception()","rails actiondispatch::exceptionwrapper#exception_trace()","ruby ","rails actionview::helpers::texthelper#excerpt()","ruby syntaxsuggest::priorityqueue#exchange()","ruby reline::lineeditor#exchange_point_and_mark()","ruby rdoc::options#exclude()","rails enumerable#exclude?()","rails string#exclude?()","ruby enumerator::arithmeticsequence#exclude_end?()","ruby range#exclude_end?()","rails activerecord::encryption::configurable#excluded_from_filter_parameters?()","rails activerecord::querymethods#excluding()","rails array#excluding()","rails enumerable#excluding()","rails activesupport::concurrency::sharelock#exclusive()","ruby kernel#exec()","ruby process::exec()","rails activerecord::connectionadapters::databasestatements#exec_delete()","ruby gem::installer::exec_format()","ruby irb::notifier::abstractnotifier#exec_if()","rails activerecord::connectionadapters::databasestatements#exec_insert()","rails activerecord::migration#exec_migration()","rails activerecord::relation::recordfetchwarning#exec_queries()","rails activerecord::connectionadapters::databasestatements#exec_query()","rails activerecord::connectionadapters::savepoints#exec_rollback_to_savepoint()","rails activerecord::connectionadapters::databasestatements#exec_update()","rails rails::command::base::executable()","ruby gem::specification#executable()","ruby gem::specification#executable=()","ruby file::executable?()","ruby file::stat#executable?()","ruby filetest#executable?()","ruby pathname#executable?()","ruby file::executable_real?()","ruby file::stat#executable_real?()","ruby filetest#executable_real?()","ruby pathname#executable_real?()","ruby gem::specification#executables()","ruby gem::specification#executables=()","rails activerecord::connectionadapters::abstractmysqladapter#execute()","rails activerecord::connectionadapters::databasestatements#execute()","rails activerecord::connectionadapters::mysql::databasestatements#execute()","rails activerecord::connectionadapters::postgresql::databasestatements#execute()","rails activesupport::fileupdatechecker#execute()","ruby gem::command#execute()","ruby gem::commands::buildcommand#execute()","ruby gem::commands::certcommand#execute()","ruby gem::commands::checkcommand#execute()","ruby gem::commands::cleanupcommand#execute()","ruby gem::commands::contentscommand#execute()","ruby gem::commands::dependencycommand#execute()","ruby gem::commands::environmentcommand#execute()","ruby gem::commands::execcommand#execute()","ruby gem::commands::fetchcommand#execute()","ruby gem::commands::generateindexcommand::rubygemstrampoline#execute()","ruby gem::commands::helpcommand#execute()","ruby gem::commands::installcommand#execute()","ruby gem::commands::lockcommand#execute()","ruby gem::commands::mirrorcommand#execute()","ruby gem::commands::opencommand#execute()","ruby gem::commands::outdatedcommand#execute()","ruby gem::commands::ownercommand#execute()","ruby gem::commands::pristinecommand#execute()","ruby gem::commands::pushcommand#execute()","ruby gem::commands::rdoccommand#execute()","ruby gem::commands::rebuildcommand#execute()","ruby gem::commands::servercommand#execute()","ruby gem::commands::setupcommand#execute()","ruby gem::commands::signincommand#execute()","ruby gem::commands::signoutcommand#execute()","ruby gem::commands::sourcescommand#execute()","ruby gem::commands::specificationcommand#execute()","ruby gem::commands::stalecommand#execute()","ruby gem::commands::uninstallcommand#execute()","ruby gem::commands::unpackcommand#execute()","ruby gem::commands::updatecommand#execute()","ruby gem::commands::whichcommand#execute()","ruby gem::commands::yankcommand#execute()","ruby gem::queryutils#execute()","ruby irb::extendcommand::help#execute()","ruby irb::extendcommand::showdoc#execute()","ruby irb::extendcommand::showsource#execute()","rails rails::generators::actions#execute_command()","rails actionview::cacheexpiry::viewmodificationwatcher#execute_if_updated()","rails activesupport::fileupdatechecker#execute_if_updated()","rails actiondispatch::railsentitystore#exist?()","rails activestorage::service#exist?()","rails activestorage::service::azurestorageservice#exist?()","rails activestorage::service::diskservice#exist?()","rails activestorage::service::gcsservice#exist?()","rails activestorage::service::s3service#exist?()","rails activesupport::cache::store#exist?()","ruby dir::exist?()","ruby file::exist?()","ruby filetest#exist?()","ruby pathname#exist?()","ruby stringscanner#exist?()","rails pathname#existence()","rails rails::paths::path#existent()","rails rails::paths::path#existent_directories()","rails actionmailer::preview::exists?()","rails actionview::lookupcontext::viewpaths#exists?()","rails activerecord::encryption::extendeddeterministicqueries::relationqueries#exists?()","rails activerecord::findermethods#exists?()","ruby irb::context#exit()","ruby kernel#exit()","ruby monitor#exit()","ruby process::exit()","ruby thread#exit()","ruby thread::exit()","ruby kernel#exit!()","ruby process::exit!()","ruby localjumperror#exit_value()","ruby process::status#exited?()","ruby process::status#exitstatus()","ruby bigmath::exp()","ruby math::exp()","rails activesupport::callbacks::calltemplate::instanceexec0#expand()","rails activesupport::callbacks::calltemplate::instanceexec1#expand()","rails activesupport::callbacks::calltemplate::instanceexec2#expand()","rails activesupport::callbacks::calltemplate::methodcall#expand()","rails activesupport::callbacks::calltemplate::objectcall#expand()","rails activesupport::callbacks::calltemplate::proccall#expand()","ruby reline::keystroke#expand()","ruby syntaxsuggest::codefrontier#expand?()","rails activesupport::cache::expand_cache_key()","ruby win32::registry::expand_environ()","ruby syntaxsuggest::codesearch#expand_existing()","ruby openssl::x509::name::rfc2253dn#expand_hexstring()","ruby syntaxsuggest::blockexpand#expand_indent()","ruby syntaxsuggest::blockexpand#expand_neighbors()","ruby openssl::x509::name::rfc2253dn#expand_pair()","ruby file::expand_path()","ruby pathname#expand_path()","ruby rdoc::text#expand_tabs()","ruby openssl::x509::name::rfc2253dn#expand_value()","rails rails::paths::path#expanded()","ruby io#expect()","rails actioncontroller::httpauthentication::digest#expected_response()","rails activerecord::connectionadapters::abstractadapter#expire()","rails abstractcontroller::caching::fragments#expire_fragment()","ruby rinda::tupleentry#expired?()","rails actioncontroller::conditionalget#expires_in()","rails actioncontroller::conditionalget#expires_now()","rails activerecord::connectionadapters::mysql::databasestatements#explain()","rails activerecord::connectionadapters::postgresql::databasestatements#explain()","rails activerecord::connectionadapters::sqlite3::databasestatements#explain()","rails activerecord::relation#explain()","ruby gem::resolver::conflict#explain()","ruby gem::resolver::conflict#explanation()","ruby gem::resolver::dependencyrequest#explicit?()","ruby gem::installer#explicit_version_requirement()","ruby bigdecimal#exponent()","ruby openssl::pkey::dh#export()","ruby openssl::pkey::dsa#export()","ruby openssl::pkey::ec#export()","ruby openssl::pkey::rsa#export()","ruby openssl::ssl::sslsocket#export_keying_material()","ruby syntaxsuggest::lexvalue#expr_beg?()","ruby syntaxsuggest::lexvalue#expr_label?()","ruby object#extend()","ruby irb::extendcommandbundle::extend_object()","ruby monitormixin::extend_object()","ruby optionparser::arguable::extend_object()","rails activesupport::perthreadregistry::extended()","rails activerecord::querymethods#extending()","rails activestorage::filename#extension()","ruby ","ruby rdoc::markdown#extension()","ruby rdoc::markdown::extension()","ruby ","ruby rdoc::markdown#extension?()","rails activerecord::connectionadapters::postgresqladapter#extension_available?()","ruby gem::basicspecification#extension_dir()","rails activerecord::connectionadapters::postgresqladapter#extension_enabled?()","rails activestorage::filename#extension_with_delimiter()","rails activestorage::filename#extension_without_delimiter()","rails activerecord::connectionadapters::abstractadapter#extensions()","rails activerecord::connectionadapters::postgresqladapter#extensions()","rails rails::sourceannotationextractor::annotation::extensions()","ruby gem::specification#extensions()","ruby openssl::ocsp::singleresponse#extensions()","ruby openssl::x509::crl#extensions()","ruby openssl::x509::certificate#extensions()","ruby openssl::x509::revoked#extensions()","ruby uri::ldap#extensions()","ruby gem::specification#extensions=()","ruby openssl::x509::crl#extensions=()","ruby openssl::x509::certificate#extensions=()","ruby openssl::x509::revoked#extensions=()","ruby uri::ldap#extensions=()","ruby gem::basicspecification#extensions_dir()","ruby gem::specification#extensions_dir()","ruby fiddle::importer#extern()","ruby io::buffer#external?()","ruby argf#external_encoding()","ruby io#external_encoding()","ruby stringio#external_encoding()","ruby zlib::gzipreader#external_encoding()","rails rails::generators::actions#extify()","ruby file::extname()","ruby pathname#extname()","ruby gem::command::extra_args()","ruby gem::command::extra_args=()","ruby gem::specification#extra_rdoc_files()","ruby gem::specification#extra_rdoc_files=()","ruby uri::rfc2396_parser#extract()","ruby uri::rfc2396_parser#extract()","rails actioncontroller::parameters#extract!()","rails array#extract!()","rails hash#extract!()","rails rails::sourceannotationextractor#extract_annotations_from()","rails activerecord::querymethods#extract_associated()","ruby gem::installer#extract_bin()","ruby rdoc::comment#extract_call_seq()","rails actiondispatch::http::url::extract_domain()","ruby gem::installer#extract_files()","ruby gem::installer::fakepackage#extract_files()","ruby gem::package#extract_files()","ruby gem::package::old#extract_files()","rails rails::generators::base#extract_last_module()","rails actionmailbox::inboundemail::messageid#extract_message_id()","rails array#extract_options!()","rails actiondispatch::session::stalesessioncheck#extract_session_id()","rails actiondispatch::http::url::extract_subdomain()","rails actiondispatch::http::url::extract_subdomains()","rails activesupport::hashwithindifferentaccess#extractable_options?()","rails activesupport::hashwithindifferentaccess#extractable_options?()","rails activesupport::orderedoptions#extractable_options?()","rails hash#extractable_options?()","ruby syslog::facility()","ruby kernel#fail()","rails actionmailbox::relayer::result#failure?()","ruby prism::parseresult#failure?()","ruby openssl::timestamp::response#failure_info()","rails rails::generators::fallbacks()","ruby socket::ancillarydata#family()","ruby socket::option#family()","ruby addrinfo#family_addrinfo()","ruby json#fast_generate()","ruby fatal","ruby logger#fatal()","ruby syslog::logger#fatal()","ruby logger#fatal!()","ruby logger#fatal?()","rails ","rails actionview::helpers::assettaghelper#favicon_link_tag()","ruby dir::fchdir()","ruby io#fcntl()","ruby openssl::ssl::socketforwarder#fcntl()","ruby stringio#fcntl()","ruby io#fdatasync()","ruby complex#fdiv()","ruby float#fdiv()","ruby integer#fdiv()","ruby numeric#fdiv()","ruby rational#fdiv()","ruby bundler::feature_flag()","ruby enumerator#feed()","rails exhibit::feel()","rails exhibit#feel()","rails actioncontroller::parameters#fetch()","rails actiondispatch::http::headers#fetch()","rails activesupport::cache::store#fetch()","rails activesupport::hashwithindifferentaccess#fetch()","rails activesupport::hashwithindifferentaccess#fetch()","rails mime::fetch()","ruby array#fetch()","ruby csv::row#fetch()","ruby drb::weakidconv::weakset#fetch()","ruby env::fetch()","ruby gem::request#fetch()","ruby gem::streamui::silentdownloadreporter#fetch()","ruby gem::streamui::threadeddownloadreporter#fetch()","ruby hash#fetch()","ruby net::httpheader#fetch()","ruby pstore#fetch()","ruby rinda::tuple#fetch()","ruby rinda::tupleentry#fetch()","ruby thread#fetch()","ruby yaml::dbm#fetch()","rails activesupport::cache::memcachestore::duplocalcache::duplocalstore#fetch_entry()","ruby gem::remotefetcher#fetch_file()","ruby gem::remotefetcher#fetch_http()","ruby gem::remotefetcher#fetch_https()","rails activesupport::cache::store#fetch_multi()","ruby gem::remotefetcher#fetch_path()","ruby resolv::dns#fetch_resource()","ruby gem::remotefetcher#fetch_s3()","ruby drb::fetch_server()","ruby gem::source#fetch_spec()","ruby gem::source::lock#fetch_spec()","rails activesupport::hashwithindifferentaccess#fetch_values()","rails activesupport::hashwithindifferentaccess#fetch_values()","ruby hash#fetch_values()","ruby gem::remotefetcher::fetcher()","ruby gem::specfetcher::fetcher()","rails activestorage::previewer::videopreviewer::ffmpeg_exists?()","rails activestorage::previewer::videopreviewer::ffmpeg_path()","ruby ","ruby fiber::scheduler#fiber()","ruby csv::row#field()","ruby csv::row#field?()","rails actionview::helpers::formbuilder#field_id()","rails actionview::helpers::formtaghelper#field_id()","rails actionview::helpers::formbuilder#field_name()","rails actionview::helpers::formtaghelper#field_name()","ruby csv::row#field_row?()","rails actionview::helpers::formtaghelper#field_set_tag()","ruby csv#field_size_limit()","ruby csv::parser#field_size_limit()","rails actionview::helpers::formbuilder#fields()","rails actionview::helpers::formhelper#fields()","ruby csv::row#fields()","rails actionview::helpers::formbuilder#fields_for()","rails actionview::helpers::formhelper#fields_for()","rails activerecord::associations::collectionproxy#fifth()","rails activerecord::findermethods#fifth()","rails array#fifth()","rails activerecord::findermethods#fifth!()","ruby argf#file()","ruby digest::class::file()","ruby digest::instance#file()","ruby file::file?()","ruby file::stat#file?()","ruby filetest#file?()","ruby gem::package::tarreader::entry#file?()","ruby pathname#file?()","rails ","rails actionview::helpers::formbuilder#file_field()","rails actionview::helpers::formhelper#file_field()","ruby cgi::htmlextension#file_field()","rails actionview::helpers::formtaghelper#file_field_tag()","ruby irb::context#file_input?()","rails rails::command::file_lookup_paths()","rails rails::generators::file_lookup_paths()","rails rails::generators::mailboxgenerator#file_name()","rails rails::generators::mailergenerator#file_name()","ruby fiddle::handle#file_name()","ruby gem::specification#file_name()","ruby rdoc::codeobject#file_name()","rails rails::generators::namedbase#file_path()","rails activestorage::blob#filename()","rails activestorage::variant#filename()","ruby argf#filename()","ruby ripper::filter#filename()","ruby reline::core#filename_quote_characters=()","ruby argf#fileno()","ruby dir#fileno()","ruby io#fileno()","ruby openssl::ssl::socketforwarder#fileno()","ruby stringio#fileno()","ruby gem::specification#files()","ruby gem::specification#files=()","ruby rdoc::store#files_hash()","ruby gem::commands::contentscommand#files_in()","ruby gem::commands::setupcommand#files_in()","ruby gem::commands::contentscommand#files_in_default_gem()","ruby gem::commands::contentscommand#files_in_gem()","ruby array#fill()","ruby prettyprint#fill_breakable()","rails activesupport::backtracecleaner#filter()","rails activesupport::parameterfilter#filter()","ruby array#filter()","ruby csv::filter()","ruby env::filter()","ruby enumerable#filter()","ruby enumerator::lazy#filter()","ruby hash#filter()","ruby struct#filter()","ruby uri::ldap#filter()","ruby array#filter!()","ruby env::filter!()","ruby hash#filter!()","ruby set#filter!()","ruby uri::ldap#filter=()","rails activerecord::core::classmethods#filter_attributes()","rails activerecord::core::classmethods#filter_attributes=()","rails rails::console::backtracecleaner#filter_backtrace()","ruby irb::workspace#filter_backtrace()","ruby optionparser::parseerror::filter_backtrace()","ruby enumerable#filter_map()","ruby enumerator::lazy#filter_map()","rails activesupport::parameterfilter#filter_param()","rails ","rails actiondispatch::remoteip::getip#filter_proxies()","rails actiondispatch::http::filterparameters#filtered_env()","rails actiondispatch::http::filterparameters#filtered_parameters()","rails actiondispatch::http::filterparameters#filtered_path()","rails actiondispatch::http::filterparameters#filtered_query_string()","ruby openssl::cipher#final()","ruby reline::lineeditor#finalize()","rails activerecord::connectionadapters::transactionstate#finalized?()","rails actionmailer::preview::find()","rails actionview::lookupcontext::viewpaths#find()","rails activerecord::associations::collectionproxy#find()","rails activerecord::findermethods#find()","rails rails::engine::find()","rails rails::generators::activemodel::find()","rails rails::sourceannotationextractor#find()","ruby encoding::find()","ruby enumerable#find()","ruby find::find()","ruby irb::locale#find()","ruby pathname#find()","ruby rinda::tuplebag#find()","ruby rinda::tuplebag::tuplebin#find()","ruby gem::specification::find_active_stub_by_path()","ruby gem::commandmanager#find_alias_command()","ruby rdoc::parser::c#find_alias_comment()","rails actiontext::fragment#find_all()","rails actionview::lookupcontext::viewpaths#find_all()","rails actionview::resolver#find_all()","ruby enumerable#find_all()","ruby enumerator::lazy#find_all()","ruby gem::availableset#find_all()","ruby gem::resolver::apiset#find_all()","ruby gem::resolver::composedset#find_all()","ruby gem::resolver::currentset#find_all()","ruby gem::resolver::gitset#find_all()","ruby gem::resolver::indexset#find_all()","ruby gem::resolver::installerset#find_all()","ruby gem::resolver::lockset#find_all()","ruby gem::resolver::set#find_all()","ruby gem::resolver::vendorset#find_all()","ruby rinda::tuplebag#find_all()","ruby gem::specification::find_all_by_full_name()","ruby gem::specification::find_all_by_name()","ruby rinda::tuplebag#find_all_template()","ruby rdoc::classmodule#find_ancestor_local_symbol()","rails actiontext::attachmentgallery::find_attachment_gallery_nodes()","ruby rdoc::parser::c#find_attr_comment()","ruby rdoc::context#find_attribute()","ruby rdoc::context#find_attribute_named()","rails date::find_beginning_of_week!()","ruby rdoc::parser::c#find_body()","rails activerecord::encryption::extendeddeterministicqueries::corequeries#find_by()","rails activerecord::findermethods#find_by()","rails activerecord::findermethods#find_by!()","ruby gem::specification::find_by_full_name()","ruby gem::specification::find_by_name()","ruby gem::specification::find_by_path()","rails activerecord::querying#find_by_sql()","ruby rdoc::store#find_c_enclosure()","ruby rdoc::parser::c#find_class()","ruby rdoc::parser::c#find_class_comment()","ruby rdoc::context#find_class_method_named()","ruby rdoc::classmodule#find_class_named()","ruby rdoc::store#find_class_named()","ruby rdoc::store#find_class_named_from()","ruby rdoc::store#find_class_or_module()","ruby rdoc::toplevel#find_class_or_module()","rails rails::dbconsole#find_cmd_and_exec()","ruby gem::commandmanager#find_command()","ruby gem::commandmanager#find_command_possibilities()","ruby gem::find_config_file()","ruby rdoc::parser::c#find_const_comment()","ruby rdoc::context#find_constant_named()","rails activerecord::databaseconfigurations#find_db_config()","ruby gem::find_default_spec()","rails activerecord::batches#find_each()","ruby rdoc::context#find_enclosing_module_named()","ruby makemakefile#find_executable()","ruby openssl::x509::extension::helpers#find_extension()","ruby rdoc::context#find_external_alias()","ruby rdoc::context#find_external_alias_named()","ruby rdoc::context#find_file_named()","ruby rdoc::store#find_file_named()","ruby gem::find_files()","ruby gem::gemspechelpers#find_gemspec()","ruby makemakefile#find_header()","rails rails::sourceannotationextractor#find_in()","rails activerecord::batches#find_in_batches()","ruby gem::commands::unpackcommand#find_in_cache()","ruby gem::specification::find_in_unresolved()","ruby gem::specification::find_in_unresolved_tree()","ruby gem::specification::find_inactive_by_path()","ruby array#find_index()","ruby enumerable#find_index()","ruby rdoc::context#find_instance_method_named()","ruby gem::find_latest_files()","ruby didyoumean::treespellchecker#find_leaves()","ruby makemakefile#find_library()","ruby rdoc::context#find_local_symbol()","ruby rdoc::toplevel#find_local_symbol()","ruby rdoc::context#find_method()","ruby rdoc::context#find_method_named()","ruby rdoc::parser::c#find_modifiers()","ruby rdoc::context#find_module_named()","ruby rdoc::store#find_module_named()","ruby rdoc::toplevel#find_module_named()","ruby gem::dependencylist#find_name()","rails activerecord::encryption::extendeddeterministicqueries::relationqueries#find_or_create_by()","rails activerecord::relation#find_or_create_by()","rails activerecord::encryption::extendeddeterministicqueries::relationqueries#find_or_create_by!()","rails activerecord::relation#find_or_create_by!()","rails activerecord::relation#find_or_initialize_by()","ruby rdoc::parser::c#find_override_comment()","ruby gem::commands::whichcommand#find_paths()","ruby uri::generic#find_proxy()","ruby openssl::ocsp::basicresponse#find_response()","rails rails::application::find_root()","rails rails::engine::find_root()","rails actiondispatch::session::cachestore#find_session()","rails activerecord::signedid::classmethods#find_signed()","rails activestorage::blob::find_signed()","rails activerecord::signedid::classmethods#find_signed!()","rails activestorage::blob::find_signed!()","rails activerecord::findermethods#find_sole_by()","ruby irb::sourcefinder#find_source()","ruby rdoc::context#find_symbol()","ruby rdoc::context#find_symbol_module()","rails actionview::lookupcontext::viewpaths#find_template()","ruby rdoc::store#find_text_page()","ruby makemakefile#find_type()","rails activesupport::timezone::find_tzinfo()","ruby rdoc::store#find_unique()","ruby gem::find_unresolved_default_spec()","rails time::find_zone()","rails time::find_zone!()","rails activerecord::dynamicmatchers::findby#finder()","rails activerecord::dynamicmatchers::findbybang#finder()","ruby rinda::ringfinger::finger()","rails activesupport::logsubscriber#finish()","rails activesupport::notifications::fanout#finish()","rails activesupport::notifications::fanout::subscribers::eventobject#finish()","rails activesupport::notifications::instrumenter#finish()","rails activesupport::subscriber#finish()","ruby encoding::converter#finish()","ruby net::http#finish()","ruby openssl::engine#finish()","ruby psych::visitors::yamltree#finish()","ruby rdoc::options#finish()","ruby reline::lineeditor#finish()","ruby zlib::gzipfile#finish()","ruby zlib::zstream#finish()","rails activesupport::notifications::event#finish!()","ruby rdoc::options#finish_page_dir()","ruby reline::generalio::finish_pasting()","ruby gem::finish_resolve()","rails activesupport::notifications::instrumenter#finish_with_state()","ruby reline::lineeditor#finished?()","ruby zlib::zstream#finished?()","ruby openssl::ssl::sslsocket#finished_message()","ruby bigdecimal#finite?()","ruby complex#finite?()","ruby float#finite?()","ruby numeric#finite?()","ruby openssl::fips_mode()","ruby openssl::fips_mode=()","rails activerecord::associations::collectionproxy#first()","rails activerecord::findermethods#first()","rails rails::paths::path#first()","rails string#first()","ruby array#first()","ruby enumerable#first()","ruby enumerator::arithmeticsequence#first()","ruby gem::sourcelist#first()","ruby range#first()","rails activerecord::findermethods#first!()","rails actionview::partialiteration#first?()","ruby prettyprint::singleline#first?()","ruby rubyvm::abstractsyntaxtree::node#first_column()","ruby rubyvm::abstractsyntaxtree::node#first_lineno()","ruby rubyvm::instructionsequence#first_lineno()","ruby bigdecimal#fix()","ruby rdoc::store#fix_basic_object_inheritance()","rails activerecord::encryption::scheme#fixed?()","ruby stringscanner#fixed_anchor?()","ruby regexp#fixed_encoding?()","rails activesupport::securityutils::fixed_length_secure_compare()","ruby openssl::fixed_length_secure_compare()","rails rails::generators::namedbase#fixture_file_name()","rails activerecord::fixtureset::fixture_is_cached?()","rails activerecord::tasks::databasetasks#fixtures_path()","ruby socket::ifaddr#flags()","ruby openssl::x509::store#flags=()","ruby openssl::x509::storecontext#flags=()","rails actiondispatch::flash::requestmethods#flash()","rails actiondispatch::flash::requestmethods#flash=()","ruby enumerable#flat_map()","ruby enumerator::lazy#flat_map()","ruby array#flatten()","ruby hash#flatten()","ruby set#flatten()","ruby array#flatten!()","ruby set#flatten!()","rails rails::generators::appbase::gemfileentry::floats()","ruby csv#flock()","ruby file#flock()","rails time#floor()","ruby bigdecimal#floor()","ruby float#floor()","ruby integer#floor()","ruby numeric#floor()","ruby rational#floor()","ruby time#floor()","rails activerecord::connectionadapters::connectionpool#flush()","rails activerecord::futureresult::eventbuffer#flush()","rails activesupport::taggedlogging#flush()","ruby gem::package::tarwriter#flush()","ruby gem::silentui::nullio#flush()","ruby io#flush()","ruby openssl::buffering#flush()","ruby prettyprint#flush()","ruby stringio#flush()","ruby win32::registry#flush()","ruby zlib::deflate#flush()","ruby zlib::gzipwriter#flush()","rails activerecord::connectionadapters::connectionpool#flush!()","rails activesupport::logsubscriber::flush_all!()","rails activerecord::connectionadapters::connectionhandler#flush_idle_connections!()","ruby rdoc::text#flush_left()","ruby zlib::zstream#flush_next_in()","ruby zlib::zstream#flush_next_out()","ruby openssl::ssl::sslcontext#flush_sessions()","ruby syntaxsuggest::lexvalue#fname?()","ruby file::fnmatch()","ruby pathname#fnmatch()","ruby file::fnmatch?()","ruby pathname#fnmatch?()","rails actionview::helpers::asseturlhelper#font_path()","rails actionview::helpers::asseturlhelper#font_url()","rails actioncontroller::renderer::for()","ruby gem::gemcutterutilities::webauthnlistener::response::for()","ruby io::buffer::for()","ruby rdoc::parser::for()","ruby uri::for()","ruby gem::specification#for_cache()","ruby gem::resolver::for_current_gems()","rails activerecord::tasks::databasetasks#for_each()","ruby basicsocket::for_fd()","ruby dir::for_fd()","ruby io::for_fd()","ruby gem::installer::for_spec()","ruby gem::resolver::conflict#for_spec?()","ruby enumerator::lazy#force()","ruby syntaxsuggest::aroundblockscan#force_add_empty()","ruby syntaxsuggest::aroundblockscan#force_add_hidden()","ruby rdoc::codeobject#force_documentation=()","ruby string#force_encoding()","ruby csv#force_quotes?()","ruby reline::face::force_truecolor()","ruby addrinfo::foreach()","ruby csv::foreach()","ruby dir::foreach()","ruby io::foreach()","rails activerecord::connectionadapters::table#foreign_key()","rails activerecord::connectionadapters::tabledefinition#foreign_key()","rails activesupport::inflector#foreign_key()","rails string#foreign_key()","rails activerecord::connectionadapters::schemastatements#foreign_key_exists?()","rails activerecord::connectionadapters::table#foreign_key_exists?()","rails activerecord::connectionadapters::abstractmysqladapter#foreign_keys()","rails activerecord::connectionadapters::postgresql::schemastatements#foreign_keys()","rails activerecord::connectionadapters::sqlite3adapter#foreign_keys()","rails activerecord::connectionadapters::schemastatements#foreign_keys()","rails activerecord::connectionadapters::postgresql::schemastatements#foreign_table_exists?()","rails activerecord::connectionadapters::postgresql::schemastatements#foreign_tables()","ruby kernel#fork()","ruby process::fork()","ruby thread::fork()","ruby cgi::htmlextension#form()","rails ","rails actioncontroller::requestforgeryprotection#form_authenticity_param()","rails actioncontroller::requestforgeryprotection#form_authenticity_token()","ruby net::httpheader#form_data=()","rails actiondispatch::request#form_data?()","rails actionview::helpers::formhelper#form_for()","rails actionview::helpers::formtaghelper#form_tag()","rails actionview::helpers::formhelper#form_with()","rails actiondispatch::http::mimenegotiation#format()","rails activestorage::variation#format()","ruby benchmark::tms#format()","ruby irb::locale#format()","ruby kernel#format()","ruby prettyprint::format()","rails actiondispatch::http::mimenegotiation#format=()","ruby rdoc::comment#format=()","rails actiondispatch::http::mimenegotiation#format_from_path_extension()","rails actionmailer::mailhelper#format_paragraph()","ruby ","ruby gem::text#format_text()","rails abstractcontroller::base#formats()","rails actiondispatch::http::mimenegotiation#formats()","rails actiondispatch::http::mimenegotiation#formats=()","rails activesupport::timewithzone#formatted_offset()","rails activesupport::timezone#formatted_offset()","rails datetime#formatted_offset()","rails time#formatted_offset()","ruby gem::installer#formatted_program_filename()","ruby didyoumean::formatter()","ruby errorhighlight::formatter()","ruby didyoumean::formatter=()","ruby errorhighlight::formatter=()","rails numeric#fortnight()","rails numeric#fortnights()","rails activerecord::associations::collectionproxy#forty_two()","rails activerecord::findermethods#forty_two()","rails array#forty_two()","rails activerecord::findermethods#forty_two!()","ruby reline::lineeditor#forward_char()","ruby reline::lineeditor#forward_search_history()","ruby reline::lineeditor#forward_word()","rails activerecord::associations::collectionproxy#fourth()","rails activerecord::findermethods#fourth()","rails array#fourth()","rails activerecord::findermethods#fourth!()","ruby bigdecimal#frac()","ruby uri::generic#fragment=()","rails actiontext::attachmentgallery::fragment_by_canonicalizing_attachment_galleries()","rails actiontext::attachment::fragment_by_canonicalizing_attachments()","rails actiontext::content::fragment_by_canonicalizing_content()","rails actiontext::attachments::trixconversion#fragment_by_converting_trix_attachments()","rails actiontext::attachments::minification#fragment_by_minifying_attachments()","rails actiontext::attachmentgallery::fragment_by_replacing_attachment_gallery_nodes()","rails abstractcontroller::caching::fragments::classmethods#fragment_cache_key()","rails abstractcontroller::caching::fragments#fragment_exist?()","rails actiontext::htmlconversion#fragment_for_html()","rails ","rails actiondispatch::exceptionwrapper#framework_trace()","ruby fiddle::free()","ruby fiddle::closure#free()","ruby fiddle::pointer#free()","ruby io::buffer#free()","ruby fiddle::pointer#free=()","ruby fiddle::closure#freed?()","ruby fiddle::pointer#freed?()","rails activerecord::core#freeze()","rails activesupport::timewithzone#freeze()","ruby delegator#freeze()","ruby env::freeze()","ruby gem::version#freeze()","ruby module#freeze()","ruby object#freeze()","ruby openssl::ssl::sslcontext#freeze()","ruby openstruct#freeze()","ruby pathname#freeze()","ruby thread::queue#freeze()","ruby thread::sizedqueue#freeze()","rails actiondispatch::http::cache::request#fresh?()","rails actioncontroller::conditionalget#fresh_when()","ruby math::frexp()","ruby date#friday?()","ruby time#friday?()","ruby rdoc::store#friendly_path()","rails activerecord::querymethods#from()","rails array#from()","rails string#from()","ruby gem::package::tarheader::from()","ruby gem::sourcelist::from()","rails mail::message#from_address()","rails actiontext::attachment::from_attachable()","rails actiontext::attachable#from_attachable_sgid()","rails actiontext::attachable::from_attachable_sgid()","rails actiontext::attachment::from_attachables()","rails actiontext::attachment::from_attributes()","rails actiontext::trixattachment::from_attributes()","ruby gem::requestset::lockfile::tokenizer::from_file()","rails actiondispatch::http::headers::from_hash()","ruby json::genericobject::from_hash()","rails actiontext::fragment::from_html()","rails activemodel::serializers::json#from_json()","ruby gem::nametuple::from_list()","ruby rdoc::classmodule::from_module()","ruby process::gid::from_name()","ruby process::uid::from_name()","rails actiontext::attachable::from_node()","rails actiontext::attachables::contentattachment::from_node()","rails actiontext::attachables::remoteimage::from_node()","rails actiontext::attachment::from_node()","rails actiontext::attachmentgallery::from_node()","rails activesupport::duration#from_now()","rails actionview::logsubscriber#from_rails_root()","rails mail::from_source()","ruby syntaxsuggest::codeline::from_source()","ruby gem::dependencylist::from_specs()","ruby json::ext::generator::state::from_state()","rails actiontext::attachments::trixconversion#from_trix_attachment()","rails hash::from_trusted_xml()","rails hash::from_xml()","ruby gem::specification::from_yaml()","ruby drb::front()","ruby drb::extserv#front()","rails activerecord::core#frozen?()","ruby kernel#frozen?()","ruby bundler::frozen_bundle?()","rails ","rails ","ruby io#fsync()","ruby stringio#fsync()","ruby file::ftype()","ruby file::stat#ftype()","ruby pathname#ftype()","rails actiontext::attachment#full_attributes()","rails activerecord::connectionadapters::transactionstate#full_commit!()","ruby gem::basicspecification#full_gem_path()","rails activemodel::error#full_message()","rails activemodel::errors#full_message()","ruby exception#full_message()","rails activemodel::errors#full_messages()","rails activemodel::errors#full_messages_for()","ruby didyoumean::classnamechecker::classname#full_name()","ruby gem::basicspecification#full_name()","ruby gem::nametuple#full_name()","ruby gem::package::tarreader::entry#full_name()","ruby gem::resolver::activationrequest#full_name()","ruby gem::resolver::specspecification#full_name()","ruby gem::resolver::specification#full_name()","ruby gem::specification#full_name()","ruby prism::constantpathnode#full_name()","ruby prism::constantpathtargetnode#full_name()","ruby prism::constantreadnode#full_name()","ruby rdoc::classmodule#full_name()","ruby rdoc::constant#full_name()","ruby rdoc::context#full_name()","ruby rdoc::methodattr#full_name()","ruby rdoc::mixin#full_name()","ruby rdoc::toplevel#full_name()","ruby rdoc::codeobject#full_name=()","ruby prism::constantpathnode#full_name_parts()","ruby prism::constantpathtargetnode#full_name_parts()","ruby prism::constantreadnode#full_name_parts()","ruby rdoc::alias#full_old_name()","ruby gem::basicspecification#full_require_paths()","rails activerecord::connectionadapters::transactionstate#full_rollback!()","rails activerecord::connectionadapters::savepointtransaction#full_rollback?()","ruby gem::resolver::activationrequest#full_spec()","rails actiondispatch::exceptionwrapper#full_trace()","rails actiondispatch::http::url::full_url_for()","rails actiondispatch::request#fullpath()","rails activerecord::connectionadapters::transactionstate#fully_committed?()","rails activerecord::connectionadapters::transactionstate#fully_completed?()","ruby rdoc::context#fully_documented?()","ruby rdoc::stats#fully_documented?()","rails activerecord::connectionadapters::transactionstate#fully_rolledback?()","rails activesupport::timewithzone#future?()","rails dateandtime::calculations#future?()","rails actiontext::content#gallery_attachments()","ruby math::gamma()","ruby gc#garbage_collect()","ruby objectspace::garbage_collect()","ruby rdoc::rdoc#gather_files()","ruby integer#gcd()","ruby openssl::bn#gcd()","ruby integer#gcdlcm()","rails rails::generators::actions#gem()","ruby gem::installer#gem()","ruby gem::requestset#gem()","ruby gem::requestset::gemdependencyapi#gem()","ruby kernel#gem()","ruby gem::commands::contentscommand#gem_contents()","ruby gem::basicspecification#gem_dir()","ruby gem::installer#gem_dir()","rails rails::generators::actions#gem_group()","ruby gem::commands::contentscommand#gem_install_dir()","ruby gem::doctor#gem_repository?()","rails actioncable::gem_version()","rails actionmailbox::gem_version()","rails actionmailer::gem_version()","rails actionpack::gem_version()","rails actiontext::gem_version()","rails actionview::gem_version()","rails activejob::gem_version()","rails activemodel::gem_version()","rails activerecord::gem_version()","rails activestorage::gem_version()","rails activesupport::gem_version()","rails rails::gem_version()","ruby gem::installer#gemdeps_load()","rails rails::appbuilder#gemfile()","rails rails::pluginbuilder#gemfile()","rails rails::pluginbuilder#gemfile_entry()","ruby gem::basicspecification#gems_dir()","ruby gem::specification#gems_dir()","rails rails::pluginbuilder#gemspec()","ruby gem::requestset::gemdependencyapi#gemspec()","ruby rdoc::parser::c#gen_body_table()","ruby rdoc::parser::c#gen_const_table()","ruby openssl::timestamp::tokeninfo#gen_time()","rails activesupport::messageverifier#generate()","rails rails::generators::actions#generate()","ruby csv::generate()","ruby json#generate()","ruby json::ext::generator::state#generate()","ruby openssl::pkey::dh::generate()","ruby openssl::pkey::dsa::generate()","ruby openssl::pkey::ec::generate()","ruby openssl::pkey::rsa::generate()","ruby rdoc::rdoc#generate()","ruby rdoc::rubygemshook#generate()","ruby rdoc::rubygemshook#generate()","ruby gem::installer#generate_bin_script()","ruby gem::installer#generate_bin_symlink()","ruby gem::commands::setupcommand#generate_default_dirs()","ruby gem::commands::setupcommand#generate_default_man_dir()","rails activesupport::cachingkeygenerator#generate_key()","rails activesupport::encryptedfile::generate_key()","rails activesupport::keygenerator#generate_key()","ruby openssl::pkey::generate_key()","ruby openssl::pkey::ec#generate_key()","ruby openssl::pkey::dh#generate_key!()","ruby openssl::pkey::ec#generate_key!()","rails rails::generators::benchmarkgenerator#generate_layout()","ruby csv::generate_line()","ruby csv::generate_lines()","rails activemodel::errors#generate_message()","rails abstractcontroller::collector::generate_method_for_mime()","rails actionmailbox::inboundemail::messageid#generate_missing_message_id()","ruby openssl::pkey::generate_parameters()","ruby openssl::bn::generate_prime()","rails activerecord::encryption::keygenerator#generate_random_hex_key()","rails activerecord::encryption::keygenerator#generate_random_key()","rails actiondispatch::session::abstractsecurestore#generate_sid()","rails actiondispatch::session::compatibility#generate_sid()","rails rails::pluginbuilder#generate_test_dummy()","rails activerecord::securetoken::classmethods#generate_unique_secure_token()","rails activestorage::blob::generate_unique_secure_token()","ruby gem::installer#generate_windows_script()","ruby rdoc::rubygemshook::generation_hook()","ruby rdoc::rubygemshook::generation_hook()","rails rails::engine::updater::generator()","ruby openssl::pkey::ec::group#generator()","ruby rdoc::options#generator_descriptions()","ruby rdoc::servlet#generator_for()","rails rails::generators::base::generator_name()","rails rails::application#generators()","rails rails::engine::configuration#generators()","rails rails::railtie::generators()","rails actiondispatch::routing::mapper::httphelpers#get()","ruby getoptlong#get()","ruby net::http::get()","ruby net::http#get()","ruby net::http#get2()","ruby gem::command#get_all_gem_names()","ruby gem::command#get_all_gem_names_and_versions()","ruby rdoc::parser::ruby#get_bool()","ruby stringscanner#get_byte()","ruby gem::commands::cleanupcommand#get_candidate_gems()","ruby optionparser::list#get_candidates()","ruby gem::request::get_cert_files()","ruby rdoc::parser::ruby#get_class_or_module()","ruby rdoc::parser::ruby#get_class_specification()","ruby reline::windows::get_console_screen_buffer_info()","ruby rdoc::parser::ruby#get_constant()","ruby resolv::get_dns_server_list()","ruby gem::commands::opencommand#get_env_editor()","ruby net::httpheader#get_fields()","ruby openssl::bn#get_flags()","ruby gem::commands::cleanupcommand#get_gems_to_cleanup()","rails actiondispatch::response#get_header()","ruby resolv::get_hosts_dir()","ruby resolv::get_hosts_path()","ruby rdoc::parser::ruby#get_included_module_with_optional_parens()","ruby resolv::get_info()","ruby win32::sspi::negotiateauth#get_initial_token()","ruby reline::unicode::get_mbchar_width()","ruby reline::keyactor::base#get_method()","ruby reline::unicode::get_next_mbchar_size()","ruby gem::command#get_one_gem_name()","ruby gem::command#get_one_optional_argument()","ruby getoptlong#get_option()","ruby gem::commands::unpackcommand#get_path()","ruby gem::versionoption#get_platform_from_requirements()","ruby reline::unicode::get_prev_mbchar_size()","ruby gem::commands::cleanupcommand#get_primary_gems()","ruby net::http::get_print()","ruby gem::request::get_proxy_from_env()","ruby gem::security::get_public_key()","ruby gem::ext::extconfbuilder::get_relative_path()","ruby resolv::get_resolv_info()","ruby net::http::get_response()","ruby reline::ansi::get_screen_size()","ruby reline::core#get_screen_size()","ruby reline::generalio::get_screen_size()","ruby reline::windows::get_screen_size()","ruby io::buffer#get_string()","ruby rdoc::parser::ruby#get_symbol_or_name()","ruby rdoc::parser::rubytools#get_tk()","ruby rdoc::parser::rubytools#get_tk_until()","ruby rdoc::parser::rubytools#get_tkread()","ruby io::buffer#get_value()","ruby openssl::config#get_value()","ruby io::buffer#get_values()","ruby ipsocket::getaddress()","ruby resolv#getaddress()","ruby resolv::getaddress()","ruby resolv::dns#getaddress()","ruby resolv::hosts#getaddress()","ruby resolv#getaddresses()","ruby resolv::getaddresses()","ruby resolv::dns#getaddresses()","ruby resolv::hosts#getaddresses()","ruby addrinfo::getaddrinfo()","ruby socket::getaddrinfo()","ruby argf#getbyte()","ruby io#getbyte()","ruby openssl::buffering#getbyte()","ruby string#getbyte()","ruby stringio#getbyte()","ruby stringscanner#getbyte()","ruby zlib::gzipreader#getbyte()","ruby argf#getc()","ruby gem::package::tarreader::entry#getc()","ruby io#getc()","ruby openssl::buffering#getc()","ruby reline::ansi::getc()","ruby reline::generalio::getc()","ruby reline::windows::getc()","ruby stringio#getc()","ruby zlib::gzipreader#getc()","ruby reline::ansi::getc_with_bracketed_paste()","ruby io#getch()","ruby io::generic_readable#getch()","ruby stringscanner#getch()","ruby process::sys::getegid()","ruby process::sys::geteuid()","ruby process::sys::getgid()","rails activesupport::timewithzone#getgm()","rails datetime#getgm()","ruby time#getgm()","ruby etc::getgrent()","ruby etc::getgrgid()","ruby etc::getgrnam()","ruby socket::gethostbyaddr()","ruby socket::gethostbyname()","ruby tcpsocket::gethostbyname()","ruby socket::gethostname()","ruby socket::getifaddrs()","ruby objectspace::weakkeymap#getkey()","rails activesupport::timewithzone#getlocal()","rails datetime#getlocal()","ruby time#getlocal()","ruby etc::getlogin()","ruby resolv#getname()","ruby resolv::getname()","ruby resolv::dns#getname()","ruby resolv::hosts#getname()","ruby addrinfo#getnameinfo()","ruby socket::getnameinfo()","ruby resolv#getnames()","ruby resolv::getnames()","ruby resolv::dns#getnames()","ruby resolv::hosts#getnames()","ruby optionparser#getopts()","ruby optionparser::getopts()","ruby optionparser::arguable#getopts()","ruby io#getpass()","ruby io::generic_readable#getpass()","ruby basicsocket#getpeereid()","ruby basicsocket#getpeername()","ruby process::getpgid()","ruby process::getpgrp()","ruby process::getpriority()","ruby pty::getpty()","ruby etc::getpwent()","ruby etc::getpwnam()","ruby etc::getpwuid()","ruby resolv::dns#getresource()","ruby resolv::dns#getresources()","ruby process::getrlimit()","ruby argf#gets()","ruby csv#gets()","ruby gem::silentui::nullio#gets()","ruby io#gets()","ruby irb::fileinputmethod#gets()","ruby irb::inputmethod#gets()","ruby irb::locale#gets()","ruby irb::readlineinputmethod#gets()","ruby irb::relineinputmethod#gets()","ruby irb::stdioinputmethod#gets()","ruby kernel#gets()","ruby openssl::buffering#gets()","ruby stringio#gets()","ruby xmp::stringinputmethod#gets()","ruby zlib::gzipreader#gets()","ruby socket::getservbyname()","ruby socket::getservbyport()","ruby process::getsid()","ruby basicsocket#getsockname()","ruby basicsocket#getsockopt()","ruby openssl::ssl::socketforwarder#getsockopt()","ruby process::sys::getuid()","rails activesupport::timewithzone#getutc()","rails datetime#getutc()","ruby time#getutc()","ruby dir::getwd()","ruby fileutils::getwd()","ruby pathname::getwd()","ruby file::stat#gid()","ruby process::gid()","ruby process::gid=()","rails numeric#gigabyte()","rails numeric#gigabytes()","rails rails::generators::actions#git()","ruby gem::requestset::gemdependencyapi#git()","ruby bundler::git_present?()","ruby gem::requestset::gemdependencyapi#git_source()","rails rails::appbuilder#gitattributes()","rails ","rails rails::generators::actions#github()","rails rails::generators::appbase::gemfileentry::github()","ruby rdoc::markdown#github()","rails rails::appbuilder#gitignore()","rails rails::pluginbuilder#gitignore()","rails ","rails ","ruby dir::glob()","ruby pathname::glob()","ruby pathname#glob()","ruby gem::util::glob_files_in_dir()","rails actioncontroller::requestforgeryprotection#global_csrf_token()","rails activerecord::global_executor_concurrency=()","rails activerecord::encryption::encryptablerecord#global_previous_schemes_for()","ruby kernel#global_variables()","ruby ","ruby ","ruby time::gm()","rails activesupport::timewithzone#gmt?()","ruby time#gmt?()","rails activesupport::timewithzone#gmt_offset()","ruby time#gmt_offset()","rails activesupport::timewithzone#gmtime()","rails datetime#gmtime()","ruby time#gmtime()","rails activesupport::timewithzone#gmtoff()","ruby time#gmtoff()","ruby io#goto()","ruby io#goto_column()","ruby process::gid::grant_privilege()","ruby process::uid::grant_privilege()","ruby string#grapheme_clusters()","rails activesupport::multibyte::chars#grapheme_length()","ruby rdoc::stats#great_job()","ruby date#gregorian()","ruby date#gregorian?()","ruby date::gregorian_leap?()","ruby enumerable#grep()","ruby enumerator::lazy#grep()","ruby enumerable#grep_v()","ruby enumerator::lazy#grep_v()","rails activerecord::querymethods#group()","ruby etc::group()","ruby gem::requestset::gemdependencyapi#group()","ruby openssl::pkey::ec#group()","ruby prettyprint#group()","ruby prettyprint::singleline#group()","ruby thread#group()","ruby openssl::pkey::ec#group=()","ruby enumerable#group_by()","rails activemodel::errors#group_by_attribute()","ruby rdoc::parser::changelog#group_entries()","ruby prettyprint#group_sub()","rails actionview::helpers::formbuilder#grouped_collection_select()","rails actionview::helpers::formoptionshelper#grouped_collection_select()","rails actionview::helpers::formoptionshelper#grouped_options_for_select()","rails rails::groups()","ruby process::groups()","ruby process::groups=()","ruby file::grpowned?()","ruby file::stat#grpowned?()","ruby filetest#grpowned?()","ruby pathname#grpowned?()","ruby kernel#gsub()","ruby string#gsub()","ruby string#gsub!()","ruby pp::ppmethods#guard_inspect_key()","ruby kconv::guess()","ruby nkf::guess()","ruby optionparser::switch::guess()","ruby win32ole::type#guid()","ruby win32ole::typelib#guid()","ruby gem::util::gunzip()","ruby zlib::gunzip()","ruby gem::util::gzip()","ruby zlib::gzip()","ruby gem::package#gzip_to()","rails erb::util::h()","ruby cgi::util#h()","rails actioncontroller::httpauthentication::digest#ha1()","rails actioncontroller::logsubscriber#halted_callback()","rails activesupport::errorreporter#handle()","ruby gem::configfile#handle_arguments()","ruby rdoc::parser::c#handle_attr()","ruby rdoc::parser::c#handle_class_module()","ruby rdoc::parser::c#handle_constants()","ruby reline::config#handle_directive()","ruby syntaxsuggest::handle_error()","ruby irb::irb#handle_exception()","ruby rdoc::parser::c#handle_ifdefs_in()","ruby thread::handle_interrupt()","ruby rdoc::parser::c#handle_method()","ruby gem::command#handle_options()","ruby rdoc::rdoc#handle_pipe()","ruby rdoc::parser::c#handle_singleton()","ruby rdoc::parser#handle_tab_width()","ruby timeout::error::handle_timeout()","rails actioncontroller::requestforgeryprotection#handle_unverified_request()","rails actioncontroller::requestforgeryprotection::protectionmethods::exception#handle_unverified_request()","rails actioncontroller::requestforgeryprotection::protectionmethods::nullsession#handle_unverified_request()","rails actioncontroller::requestforgeryprotection::protectionmethods::resetsession#handle_unverified_request()","ruby fiddle::importer#handler()","ruby win32ole::event#handler()","ruby win32ole::event#handler=()","ruby fiddle::compositehandler#handlers()","ruby gem::command#handles?()","rails actionview::template::handlers::erb#handles_encoding?()","rails activerecord::associations::classmethods#has_and_belongs_to_many()","rails activerecord::attributemethods#has_attribute?()","rails activerecord::attributemethods::classmethods#has_attribute?()","rails actioncontroller::httpauthentication::basic#has_basic_credentials?()","ruby rdoc::anymethod#has_call_seq?()","rails activerecord::attributemethods::dirty#has_changes_to_save?()","ruby gem::specification#has_conflicts?()","ruby rinda::tuplebag#has_expires?()","rails actiondispatch::response#has_header?()","rails actioncontroller::parameters#has_key?()","rails activemodel::errors#has_key?()","rails activesupport::hashwithindifferentaccess#has_key?()","rails activesupport::hashwithindifferentaccess#has_key?()","ruby cgi::queryextension#has_key?()","ruby csv::row#has_key?()","ruby env::has_key?()","ruby hash#has_key?()","rails activerecord::associations::classmethods#has_many()","rails activestorage::attached::model#has_many_attached()","rails actiondispatch::routing::mapper::base#has_named_route?()","rails activerecord::associations::classmethods#has_one()","rails activestorage::attached::model#has_one_attached()","rails actiontext::attribute#has_rich_text()","rails activemodel::securepassword::classmethods#has_secure_password()","rails activerecord::securetoken::classmethods#has_secure_token()","rails actioncontroller::parameters#has_value?()","ruby env::has_value?()","ruby hash#has_value?()","ruby yaml::dbm#has_value?()","rails actioncontroller::parameters#hash()","rails activemodel::type::value#hash()","rails activemodel::type::value#hash()","rails activerecord::associations::preloader::association::loaderquery#hash()","rails activerecord::core#hash()","rails activesupport::duration#hash()","rails activesupport::timewithzone#hash()","ruby array#hash()","ruby bigdecimal#hash()","ruby complex#hash()","ruby data#hash()","ruby enumerator::arithmeticsequence#hash()","ruby float#hash()","ruby gem::nametuple#hash()","ruby gem::resolver::apispecification#hash()","ruby gem::resolver::activationrequest#hash()","ruby gem::resolver::indexspecification#hash()","ruby gem::resolver::specspecification#hash()","ruby hash#hash()","ruby ipaddr#hash()","ruby matchdata#hash()","ruby method#hash()","ruby object#hash()","ruby openssl::bn#hash()","ruby openssl::x509::name#hash()","ruby proc#hash()","ruby rdoc::toplevel#hash()","ruby range#hash()","ruby rational#hash()","ruby regexp#hash()","ruby string#hash()","ruby struct#hash()","ruby time#hash()","ruby uri::generic#hash()","ruby unboundmethod#hash()","ruby openssl::ocsp::certificateid#hash_algorithm()","rails activesupport::keygenerator::hash_digest_class()","rails activesupport::keygenerator::hash_digest_class=()","ruby openssl::x509::name#hash_old()","ruby makemakefile#have_const()","ruby makemakefile#have_framework()","ruby makemakefile#have_func()","ruby makemakefile#have_header()","ruby makemakefile#have_library()","ruby makemakefile#have_macro()","ruby fileutils::have_option?()","ruby makemakefile#have_struct_member()","ruby makemakefile#have_type()","ruby makemakefile#have_var()","rails activerecord::querymethods#having()","rails actioncontroller::head#head()","ruby net::http#head()","ruby net::http#head2()","rails actiondispatch::routing::consoleformatter::base#header()","rails actiondispatch::routing::consoleformatter::sheet#header()","rails actiondispatch::routing::htmltableformatter#header()","ruby cgi#header()","ruby csv::row#header?()","ruby csv#header_convert()","ruby csv#header_converters()","ruby csv#header_row?()","ruby csv::parser#header_row?()","ruby csv::row#header_row?()","rails actiondispatch::request#headers()","rails actionmailer::base#headers()","ruby csv#headers()","ruby csv::parser#headers()","ruby csv::row#headers()","ruby csv::table#headers()","ruby uri::mailto#headers=()","rails activestorage::service#headers_for_direct_upload()","rails activestorage::service::azurestorageservice#headers_for_direct_upload()","rails activestorage::service::diskservice#headers_for_direct_upload()","rails activestorage::service::gcsservice#headers_for_direct_upload()","rails activestorage::service::s3service#headers_for_direct_upload()","rails actionmailbox::ingresses::mandrill::inboundemailscontroller#health_check()","rails rails::command::base#help()","rails rails::generators::help()","ruby optionparser#help()","ruby win32ole::method#helpcontext()","ruby win32ole::type#helpcontext()","rails abstractcontroller::helpers::classmethods#helper()","rails rails::consolemethods#helper()","rails ","rails actioncontroller::helpers::classmethods#helper_attr()","rails abstractcontroller::helpers::classmethods#helper_method()","rails actioncontroller::helpers#helpers()","rails actioncontroller::helpers::classmethods#helpers()","rails rails::engine#helpers()","rails ","rails rails::engine#helpers_paths()","ruby win32ole::method#helpfile()","ruby win32ole::type#helpfile()","ruby win32ole::method#helpstring()","ruby win32ole::type#helpstring()","ruby drb::here?()","ruby drb::drbserver#here?()","ruby random::formatter#hex()","ruby string#hex()","rails activerecord::connectionadapters::postgresql::oid::bit::data#hex?()","ruby digest::class::hexdigest()","ruby digest::instance#hexdigest()","ruby openssl::hmac#hexdigest()","ruby openssl::hmac::hexdigest()","ruby digest::instance#hexdigest!()","ruby io::buffer#hexdump()","ruby digest::hexencode()","ruby cgi::htmlextension#hidden()","ruby syntaxsuggest::codeblock#hidden?()","ruby syntaxsuggest::codeline#hidden?()","rails actionview::helpers::formbuilder#hidden_field()","rails actionview::helpers::formhelper#hidden_field()","rails actionview::helpers::formtaghelper#hidden_field_tag()","rails rails::generators::hidden_namespaces()","rails rails::generators::base::hide!()","rails rails::command::base::hide_command!()","ruby reline::ansi::hide_cursor()","ruby reline::generalio::hide_cursor()","ruby reline::windows::hide_cursor()","rails rails::generators::hide_namespace()","rails rails::generators::hide_namespaces()","ruby uri::generic#hierarchical?()","ruby uri::ldap#hierarchical?()","rails activerecord::connectionadapters::databasestatements#high_precision_current_timestamp()","rails activerecord::connectionadapters::mysql::databasestatements#high_precision_current_timestamp()","rails activerecord::connectionadapters::postgresql::databasestatements#high_precision_current_timestamp()","rails activerecord::connectionadapters::sqlite3::databasestatements#high_precision_current_timestamp()","rails actionview::helpers::texthelper#highlight()","ruby irb::context#history_file()","ruby irb::context#history_file=()","ruby reline::lineeditor#history_search_backward()","ruby reline::lineeditor#history_search_forward()","ruby openssl::kdf::hkdf()","ruby syntaxsuggest::codefrontier#holds_all_syntax_errors?()","ruby bundler::home()","ruby dir::home()","ruby rdoc::home()","ruby irb::context#home_workspace()","rails rails::generators::base::hook_for()","rails actiondispatch::http::url#host()","rails activerecord::databaseconfigurations::hashconfig#host()","ruby gem::host()","ruby gem::gemcutterutilities#host()","ruby gem::host=()","ruby uri::generic#host=()","rails actiondispatch::http::url#host_with_port()","ruby uri::generic#hostname()","ruby openssl::ssl::sslsocket#hostname=()","ruby uri::generic#hostname=()","rails activerecord::databaseconnectionerror::hostname_error()","rails numeric#hour()","ruby datetime#hour()","ruby time#hour()","rails numeric#hours()","rails activerecord::connectionadapters::postgresql::columnmethods#hstore()","ruby cgi::htmlextension#html()","ruby rdoc::markdown#html()","rails mime::alltype#html?()","rails mime::type#html?()","rails erb::util::html_escape()","ruby erb::escape::html_escape()","rails erb::util::html_escape_once()","ruby rdoc::alias#html_name()","ruby rdoc::methodattr#html_name()","rails string#html_safe()","rails activesupport::safebuffer#html_safe?()","rails numeric#html_safe?()","rails object#html_safe?()","ruby ipaddr#hton()","rails actiondispatch::request#http_auth_salt()","rails actioncontroller::httpauthentication::basic::controllermethods#http_basic_authenticate_or_request_with()","rails actioncontroller::httpauthentication::basic::controllermethods::classmethods#http_basic_authenticate_with()","rails actioncontroller::conditionalget#http_cache_forever()","ruby net::http::http_default_port()","ruby cgi#http_header()","ruby rdoc::context#http_url()","ruby rdoc::toplevel#http_url()","rails activesupport::timewithzone#httpdate()","ruby date::httpdate()","ruby date#httpdate()","ruby datetime::httpdate()","ruby time#httpdate()","ruby time::httpdate()","ruby cgi::cookie#httponly=()","ruby gem::remotefetcher#https?()","ruby net::http::https_default_port()","rails activemodel::name#human()","rails activesupport::inflector::inflections#human()","rails activemodel::translation#human_attribute_name()","rails rails::generators::namedbase#human_name()","rails activesupport::inflector#humanize()","rails string#humanize()","ruby math::hypot()","ruby numeric#i()","rails activemodel::translation#i18n_scope()","rails rails::generators::namedbase#i18n_scope()","ruby json::iconv()","rails actionview::helpers::formbuilder#id()","rails activerecord::attributemethods::primarykey#id()","rails activerecord::encryption::key#id()","ruby openssl::engine#id()","ruby openssl::ssl::session#id()","ruby symbol#id2name()","rails activerecord::attributemethods::primarykey#id=()","rails activerecord::attributemethods::primarykey#id?()","rails activerecord::attributemethods::primarykey#id_before_type_cast()","rails activerecord::attributemethods::primarykey#id_in_database()","rails activerecord::attributemethods::primarykey#id_was()","ruby syslog::ident()","ruby file::identical?()","ruby filetest#identical?()","ruby fileutils::identical?()","rails activestorage::blob::identifiable#identified?()","rails actioncable::connection::identification::classmethods#identified_by()","rails actioncable::subscriptionadapter::base#identifier()","rails activerecord::fixtureset::identify()","rails activestorage::blob::identifiable#identify()","rails activestorage::blob::identifiable#identify_without_saving()","ruby gem::dependency#identity()","rails activesupport::notifications::event#idle_time()","rails activerecord::databaseconfigurations::hashconfig#idle_timeout()","rails activerecord::calculations#ids()","rails actiondispatch::http::cache::request#if_modified_since()","ruby rdoc::servlet#if_modified_since()","rails actiondispatch::http::cache::request#if_none_match()","rails actiondispatch::http::cache::request#if_none_match_etags()","ruby socket::ifaddr#ifindex()","ruby io#iflush()","ruby rdoc::codeobject#ignore()","rails activerecord::encryption::scheme#ignore_case?()","ruby thread::ignore_deadlock()","ruby thread::ignore_deadlock=()","ruby syntaxsuggest::lexvalue#ignore_newline?()","ruby syntaxsuggest::codeline#ignore_newline_not_beg?()","ruby rdoc::codeobject#ignored?()","rails activerecord::modelschema::classmethods#ignored_columns()","rails activerecord::modelschema::classmethods#ignored_columns=()","ruby complex#imag()","ruby numeric#imag()","rails activestorage::preview#image()","rails activestorage::variant#image()","rails activestorage::variantwithrecord#image()","rails activestorage::blob#image?()","ruby cgi::htmlextension#image_button()","rails actionview::helpers::asseturlhelper#image_path()","rails actionview::helpers::formtaghelper#image_submit_tag()","rails actionview::helpers::assettaghelper#image_tag()","rails actionview::helpers::asseturlhelper#image_url()","ruby complex#imaginary()","ruby numeric#imaginary()","ruby cgi::htmlextension#img()","rails activerecord::modelschema::immutable_strings_by_default=()","ruby win32ole::type#implemented_ole_types()","ruby gem::resolver::dependencyrequest#implicit?()","ruby ","rails activerecord::modelschema::implicit_order_column()","rails activerecord::modelschema::implicit_order_column=()","rails activemodel::errors#import()","ruby gem::requestset#import()","ruby fiddle::importer#import_function()","ruby fiddle::importer#import_symbol()","ruby fiddle::importer#import_value()","rails activesupport::timewithzone#in()","rails date#in()","rails datetime#in()","rails time#in()","rails object#in?()","rails activerecord::batches#in_batches()","rails activesupport::duration#in_days()","rails array#in_groups()","rails array#in_groups_of()","rails activesupport::duration#in_hours()","rails numeric#in_milliseconds()","rails activesupport::duration#in_minutes()","rails activesupport::duration#in_months()","rails activerecord::querymethods#in_order_of()","rails enumerable#in_order_of()","ruby reline::ansi::in_pasting?()","ruby reline::generalio::in_pasting?()","ruby reline::windows::in_pasting?()","rails actionview::base#in_rendering_context()","rails activesupport::duration#in_seconds()","rails activesupport::timewithzone#in_time_zone()","rails dateandtime::zones#in_time_zone()","rails string#in_time_zone()","rails activesupport::duration#in_weeks()","rails activesupport::duration#in_years()","ruby optionparser#inc()","ruby optionparser::inc()","rails actionmailbox::inboundemail::incineratable#incinerate()","rails actionmailbox::inboundemail::incineratable#incinerate_later()","ruby module#include()","rails actioncontroller::parameters#include?()","rails actiondispatch::http::headers#include?()","rails activemodel::errors#include?()","rails activerecord::associations::collectionproxy#include?()","rails activerecord::findermethods#include?()","rails activesupport::comparewithrange#include?()","rails activesupport::hashwithindifferentaccess#include?()","rails activesupport::hashwithindifferentaccess#include?()","ruby array#include?()","ruby cgi::queryextension#include?()","ruby csv::row#include?()","ruby env::include?()","ruby enumerable#include?()","ruby gem::sourcelist#include?()","ruby hash#include?()","ruby ipaddr#include?()","ruby module#include?()","ruby objectspace::weakmap#include?()","ruby range#include?()","ruby set#include?()","ruby string#include?()","rails activemodel::validations::acceptancevalidator::lazilydefineattributes#included()","rails activesupport::concern#included()","rails activesupport::deprecation::deprecatedconstantaccessor::included()","ruby openssl::marshal::included()","ruby syslog::constants::included()","ruby syslog::macros::included()","ruby module#included_modules()","rails activerecord::querymethods#includes()","rails activerecord::result#includes_column?()","rails array#including()","rails enumerable#including()","ruby optionparser::switch::incompatible_argument_styles()","ruby optionparser::switch::noargument::incompatible_argument_styles()","ruby encoding::invalidbytesequenceerror#incomplete_input?()","rails activerecord::persistence#increment()","rails activesupport::cache::filestore#increment()","rails activesupport::cache::memcachestore#increment()","rails activesupport::cache::memorystore#increment()","rails activesupport::cache::nullstore#increment()","rails activesupport::cache::rediscachestore#increment()","rails activesupport::cache::store#increment()","rails activerecord::persistence#increment!()","rails activerecord::countercache::classmethods#increment_counter()","rails rails::railtie::increment_load_index()","rails rails::generators::base#indent()","rails string#indent()","ruby json::ext::generator::state#indent()","rails string#indent!()","ruby json::ext::generator::state#indent=()","ruby syntaxsuggest::codeline#indent_index()","rails rails::generators::actions#indentation()","ruby psych::emitter#indentation()","ruby psych::emitter#indentation=()","rails activerecord::connectionadapters::table#index()","rails activerecord::connectionadapters::tabledefinition#index()","rails rails::rails::conductor::actionmailbox::inboundemailscontroller#index()","ruby array#index()","ruby csv::row#index()","ruby string#index()","ruby yaml::dbm#index()","rails ","rails ","rails ","rails ","rails ","rails activerecord::connectionadapters::abstractadapter#index_algorithms()","rails activerecord::connectionadapters::abstractmysqladapter#index_algorithms()","rails activerecord::connectionadapters::postgresqladapter#index_algorithms()","rails enumerable#index_by()","rails activerecord::connectionadapters::schemastatements#index_exists?()","rails activerecord::connectionadapters::table#index_exists?()","rails rails::generators::namedbase#index_helper()","rails activerecord::connectionadapters::postgresql::schemastatements#index_name_exists?()","rails activerecord::connectionadapters::schemastatements#index_name_exists?()","rails activerecord::connectionadapters::databaselimits#index_name_length()","rails enumerable#index_with()","rails ","rails activerecord::connectionadapters::schemacache#indexes()","rails activerecord::connectionadapters::schemastatements#indexes()","rails activerecord::connectionadapters::postgresql::columnmethods#inet()","ruby bigdecimal#infinite?()","ruby complex#infinite?()","ruby date#infinite?()","ruby float#infinite?()","ruby numeric#infinite?()","ruby openssl::pkey::ec::point#infinity?()","ruby gem::util::inflate()","ruby zlib::inflate()","ruby zlib::inflate::inflate()","ruby zlib::inflate#inflate()","rails activesupport::inflector#inflections()","rails ","ruby logger#info()","ruby syslog::logger#info()","ruby win32::registry#info()","ruby logger#info!()","ruby logger#info?()","rails ","rails activesupport::inheritableoptions#inheritable_copy()","rails activerecord::modelschema::inheritance_column()","rails activerecord::modelschema::inheritance_column=()","rails abstractcontroller::helpers::classmethods#inherited()","rails actioncontroller::paramswrapper::options::classmethods#inherited()","rails actioncontroller::railties::helpers#inherited()","rails actioncontroller::rendering::classmethods#inherited()","rails activerecord::inheritance::classmethods#inherited()","rails activesupport::descendantstracker#inherited()","rails rails::application::inherited()","rails rails::engine::inherited()","rails rails::railtie::inherited()","rails rails::railtie::configurable::classmethods#inherited()","ruby gem::installer::inherited()","ruby gem::packagetask#init()","ruby irb::inspector#init()","ruby irb::rubymodel#init_ruby_model()","rails activerecord::connectionadapters::schemacache#init_with()","rails activerecord::core#init_with()","ruby process::initgroups()","ruby gem::package#initialize()","ruby set#initialize_clone()","ruby tempfile#initialize_clone()","rails actiondispatch::contentsecuritypolicy#initialize_copy()","rails actiondispatch::flash::flashhash#initialize_copy()","rails actiondispatch::middlewarestack#initialize_copy()","rails actiondispatch::permissionspolicy#initialize_copy()","rails activerecord::relation#initialize_copy()","rails activerecord::result#initialize_copy()","rails activesupport::safebuffer#initialize_copy()","ruby array#initialize_copy()","ruby csv::row#initialize_copy()","ruby gem::specification#initialize_copy()","ruby hash#initialize_copy()","ruby io::buffer#initialize_copy()","ruby json::ext::generator::state#initialize_copy()","ruby openssl::bn#initialize_copy()","ruby openssl::cipher#initialize_copy()","ruby openssl::config#initialize_copy()","ruby openssl::digest#initialize_copy()","ruby openssl::hmac#initialize_copy()","ruby openssl::ocsp::basicresponse#initialize_copy()","ruby openssl::ocsp::certificateid#initialize_copy()","ruby openssl::ocsp::request#initialize_copy()","ruby openssl::ocsp::response#initialize_copy()","ruby openssl::ocsp::singleresponse#initialize_copy()","ruby openssl::pkcs12#initialize_copy()","ruby openssl::pkcs7#initialize_copy()","ruby openssl::pkey::dh#initialize_copy()","ruby openssl::pkey::dsa#initialize_copy()","ruby openssl::pkey::ec#initialize_copy()","ruby openssl::pkey::ec::group#initialize_copy()","ruby openssl::pkey::ec::point#initialize_copy()","ruby openssl::pkey::pkey#initialize_copy()","ruby openssl::pkey::rsa#initialize_copy()","ruby openssl::ssl::session#initialize_copy()","ruby openssl::x509::attribute#initialize_copy()","ruby openssl::x509::crl#initialize_copy()","ruby openssl::x509::certificate#initialize_copy()","ruby openssl::x509::extension#initialize_copy()","ruby openssl::x509::name#initialize_copy()","ruby openssl::x509::request#initialize_copy()","ruby openssl::x509::revoked#initialize_copy()","ruby string#initialize_copy()","ruby zlib::deflate#initialize_copy()","rails activerecord::connectionadapters::schemacache#initialize_dup()","rails activerecord::inheritance#initialize_dup()","ruby set#initialize_dup()","ruby tempfile#initialize_dup()","rails activerecord::modelschema::classmethods#initialize_load_schema_monitor()","ruby rdoc::context#initialize_methods_etc()","ruby irb::readlineinputmethod::initialize_readline()","rails actiondispatch::session::compatibility#initialize_sid()","ruby irb::initialize_tracer()","rails rails::application#initialized?()","rails rails::application#initializer()","rails rails::generators::actions#initializer()","rails rails::initializable::classmethods#initializer()","rails rails::initializable#initializers()","rails rails::initializable::classmethods#initializers()","rails rails::initializable::classmethods#initializers_chain()","rails rails::initializable::classmethods#initializers_for()","ruby enumerable#inject()","ruby gem::availableset#inject_into_list()","rails actionmailer::base::lateattachmentsproxy#inline()","ruby reline::ansi::inner_getc()","ruby file::stat#ino()","ruby argf#inplace_mode()","ruby argf#inplace_mode=()","ruby reline::ansi::input=()","ruby reline::core#input=()","ruby reline::generalio::input=()","ruby win32ole::param#input?()","ruby reline::lineeditor#input_key()","ruby reline::config#inputrc_path()","rails array#inquiry()","rails string#inquiry()","rails actiondispatch::middlewarestack#insert()","rails activerecord::connectionadapters::databasestatements#insert()","rails activerecord::persistence::classmethods#insert()","rails activesupport::safebuffer#insert()","rails rails::configuration::middlewarestackproxy#insert()","ruby array#insert()","ruby irb::jobmanager#insert()","ruby string#insert()","rails activerecord::persistence::classmethods#insert!()","rails actiondispatch::middlewarestack#insert_after()","rails rails::configuration::middlewarestackproxy#insert_after()","rails activerecord::persistence::classmethods#insert_all()","rails activerecord::persistence::classmethods#insert_all!()","rails actiondispatch::middlewarestack#insert_before()","rails rails::configuration::middlewarestackproxy#insert_before()","ruby irb::debug::insert_debug_break()","rails activerecord::connectionadapters::databasestatements#insert_fixture()","rails activerecord::connectionadapters::databasestatements#insert_fixtures_set()","ruby encoding::converter#insert_output()","ruby reline::insert_text()","ruby reline::insert_text()","ruby reline::lineeditor#insert_text()","rails rails::generators::namedbase#inside_template()","rails rails::generators::namedbase#inside_template?()","rails actioncontroller::parameters#inspect()","rails actiondispatch::middlewarestack::middleware#inspect()","rails actiondispatch::routing::pathredirect#inspect()","rails actiontext::attachment#inspect()","rails actiontext::attachmentgallery#inspect()","rails actiontext::content#inspect()","rails actionview::base::inspect()","rails actionview::template#inspect()","rails activerecord::core#inspect()","rails activerecord::relation#inspect()","rails activesupport::cache::rediscachestore#inspect()","rails activesupport::deprecation::deprecatedconstantproxy#inspect()","rails activesupport::orderedoptions#inspect()","rails activesupport::timewithzone#inspect()","rails date#inspect()","rails datetime#inspect()","rails rails::info::inspect()","ruby argf#inspect()","ruby addrinfo#inspect()","ruby array#inspect()","ruby bigdecimal#inspect()","ruby cgi::cookie#inspect()","ruby csv#inspect()","ruby csv::row#inspect()","ruby csv::table#inspect()","ruby complex#inspect()","ruby data#inspect()","ruby date#inspect()","ruby digest::instance#inspect()","ruby dir#inspect()","ruby env::inspect()","ruby encoding#inspect()","ruby encoding::converter#inspect()","ruby enumerator#inspect()","ruby enumerator::arithmeticsequence#inspect()","ruby enumerator::chain#inspect()","ruby enumerator::product#inspect()","ruby exception#inspect()","ruby falseclass#inspect()","ruby fiber#inspect()","ruby fiddle::pointer#inspect()","ruby file::stat#inspect()","ruby float#inspect()","ruby hash#inspect()","ruby io#inspect()","ruby io::buffer#inspect()","ruby ipaddr#inspect()","ruby ipsocket#inspect()","ruby irb::fileinputmethod#inspect()","ruby irb::inputmethod#inspect()","ruby irb::irb#inspect()","ruby irb::jobmanager#inspect()","ruby irb::readlineinputmethod#inspect()","ruby irb::relineinputmethod#inspect()","ruby irb::stdioinputmethod#inspect()","ruby integer#inspect()","ruby matchdata#inspect()","ruby method#inspect()","ruby module#inspect()","ruby net::http#inspect()","ruby net::httpgenericrequest#inspect()","ruby net::httpresponse#inspect()","ruby net::writeadapter#inspect()","ruby nilclass#inspect()","ruby object#inspect()","ruby objectspace::internalobjectwrapper#inspect()","ruby objectspace::weakkeymap#inspect()","ruby objectspace::weakmap#inspect()","ruby openssl::config#inspect()","ruby openssl::engine#inspect()","ruby openssl::hmac#inspect()","ruby openssl::pkey::pkey#inspect()","ruby openssl::x509::certificate#inspect()","ruby openstruct#inspect()","ruby optionparser::parseerror#inspect()","ruby prism::embdoccomment#inspect()","ruby prism::inlinecomment#inspect()","ruby prism::location#inspect()","ruby prism::magiccomment#inspect()","ruby prism::parseerror#inspect()","ruby prism::parsewarning#inspect()","ruby proc#inspect()","ruby process::status#inspect()","ruby ractor#inspect()","ruby range#inspect()","ruby rational#inspect()","ruby regexp#inspect()","ruby ripper::lexer::elem#inspect()","ruby rubyvm::abstractsyntaxtree::node#inspect()","ruby rubyvm::instructionsequence#inspect()","ruby set#inspect()","ruby socket::ancillarydata#inspect()","ruby socket::ifaddr#inspect()","ruby socket::option#inspect()","ruby string#inspect()","ruby stringscanner#inspect()","ruby struct#inspect()","ruby symbol#inspect()","ruby syntaxsuggest::aroundblockscan#inspect()","ruby syntaxsuggest::blockexpand#inspect()","ruby syslog::inspect()","ruby thread#inspect()","ruby thread::backtrace::location#inspect()","ruby time#inspect()","ruby tracepoint#inspect()","ruby trueclass#inspect()","ruby uri::generic#inspect()","ruby uri::rfc2396_parser#inspect()","ruby uri::rfc2396_parser#inspect()","ruby unboundmethod#inspect()","ruby win32ole::method#inspect()","ruby win32ole::param#inspect()","ruby win32ole::record#inspect()","ruby win32ole::type#inspect()","ruby win32ole::typelib#inspect()","ruby win32ole::variable#inspect()","ruby win32::registry#inspect()","ruby zlib::gzipfile::error#inspect()","ruby irb::context#inspect?()","ruby irb::color::inspect_colorable?()","ruby irb::context#inspect_mode=()","ruby addrinfo#inspect_sockaddr()","ruby irb::inspector#inspect_value()","ruby fileutils::install()","ruby gem::install()","ruby gem::dependencyinstaller#install()","ruby gem::installer#install()","ruby gem::requestset#install()","ruby gem::resolver::gitspecification#install()","ruby gem::resolver::installedspecification#install()","ruby gem::resolver::lockspecification#install()","ruby gem::resolver::specification#install()","ruby gem::resolver::vendorspecification#install()","rails ","ruby drb::install_acl()","ruby irb::extendcommandbundle#install_alias_method()","ruby gem::commands::setupcommand#install_default_bundler_gem()","ruby gem::commands::setupcommand#install_executables()","rails activerecord::querycache::install_executor_hooks()","ruby irb::contextextender::install_extend_commands()","ruby irb::extendcommandbundle::install_extend_commands()","ruby gem::commands::setupcommand#install_file()","ruby gem::commands::setupcommand#install_file_list()","ruby gem::requestset#install_from_gemdeps()","ruby gem::requestset#install_hooks()","ruby drb::install_id_conv()","ruby gem::requestset#install_into()","rails actiontext::generators::installgenerator#install_javascript_dependencies()","ruby gem::commands::setupcommand#install_lib()","ruby acl#install_list()","ruby bundler::install_path()","ruby gem::commands::setupcommand#install_rdoc()","ruby rdoc::rdoc#install_siginfo_handler()","rails activerecord::encryption::extendeddeterministicqueries::install_support()","rails activerecord::encryption::extendeddeterministicuniquenessvalidator::install_support()","ruby gem::installupdateoptions#install_update_defaults_str()","ruby gem::installupdateoptions#install_update_options()","ruby gem::platform::installable?()","ruby gem::resolver::installedspecification#installable_platform?()","ruby gem::resolver::localspecification#installable_platform?()","ruby gem::resolver::specification#installable_platform?()","ruby gem::installer#installation_satisfies_dependency?()","ruby gem::resolver::activationrequest#installed?()","ruby rdoc::servlet#installed_docs()","ruby gem::installer#installed_specs()","rails activesupport::currentattributes::instance()","rails activesupport::inflector::inflections::instance()","rails activesupport::perthreadregistry#instance()","rails rails::application::instance()","rails rails::railtie::instance()","rails rails::railtie::configurable::classmethods#instance()","ruby csv::instance()","ruby gem::commandmanager::instance()","ruby gem::commandmanager#instance()","ruby singleton::instance()","ruby syslog::instance()","ruby rdoc::context#instance_attributes()","ruby forwardable#instance_delegate()","ruby basicobject#instance_eval()","ruby ractor::movedobject#instance_eval()","ruby basicobject#instance_exec()","ruby ractor::movedobject#instance_exec()","ruby module#instance_method()","rails activerecord::attributemethods::classmethods#instance_method_already_implemented?()","rails activerecord::attributemethods::primarykey::classmethods#instance_method_already_implemented?()","ruby rdoc::context#instance_method_list()","ruby module#instance_methods()","ruby rdoc::context#instance_methods()","ruby rdoc::store#instance_methods()","ruby object#instance_of?()","rails activesupport::inflector::inflections::instance_or_fallback()","rails object#instance_values()","ruby object#instance_variable_defined?()","ruby object#instance_variable_get()","rails object#instance_variable_names()","ruby object#instance_variable_set()","ruby object#instance_variables()","rails activerecord::persistence::classmethods#instantiate()","rails activerecord::fixtureset::instantiate_all_loaded_fixtures()","rails activerecord::fixtureset::instantiate_fixtures()","ruby tracepoint#instruction_sequence()","rails actionview::template#instrument()","rails activerecord::futureresult::eventbuffer#instrument()","rails activestorage::analyzer#instrument()","rails activesupport::notifications::instrument()","rails activesupport::notifications::instrumenter#instrument()","rails activesupport::notifications::instrumenter()","ruby socket::ancillarydata::int()","ruby socket::ancillarydata#int()","ruby socket::option#int()","ruby socket::option::int()","rails activerecord::connectionadapters::postgresql::columnmethods#int4range()","rails activerecord::connectionadapters::postgresql::columnmethods#int8range()","ruby integer#integer?()","ruby numeric#integer?()","ruby string#intern()","ruby symbol#intern()","rails ","ruby io::buffer#internal?()","ruby objectspace::internal_class_of()","ruby argf#internal_encoding()","ruby io#internal_encoding()","ruby stringio#internal_encoding()","rails activerecord::modelschema::internal_metadata_table_name()","rails activerecord::modelschema::internal_metadata_table_name=()","rails abstractcontroller::base::internal_methods()","ruby objectspace::internalobjectwrapper#internal_object_id()","ruby objectspace::internal_super_of()","ruby bigdecimal::interpret_loosely()","ruby array#intersect?()","ruby set#intersect?()","ruby array#intersection()","ruby set#intersection()","rails activerecord::connectionadapters::postgresql::columnmethods#interval()","rails activemodel::validations#invalid?()","ruby syntaxsuggest::invalid?()","ruby syntaxsuggest::codeblock#invalid?()","rails activerecord::connectionadapters::transactionstate#invalidate!()","rails activerecord::connectionadapters::transactionstate#invalidated?()","rails activerecord::migration::commandrecorder#inverse_of()","ruby env::invert()","ruby hash#invert()","ruby yaml::dbm#invert()","ruby openssl::pkey::ec::point#invert!()","rails activerecord::querymethods#invert_where()","rails activesupport::callbacks::calltemplate::instanceexec0#inverted_lambda()","rails activesupport::callbacks::calltemplate::instanceexec1#inverted_lambda()","rails activesupport::callbacks::calltemplate::instanceexec2#inverted_lambda()","rails activesupport::callbacks::calltemplate::methodcall#inverted_lambda()","rails activesupport::callbacks::calltemplate::objectcall#inverted_lambda()","rails activesupport::callbacks::calltemplate::proccall#inverted_lambda()","ruby win32ole::method#invkind()","rails rails::command::invoke()","rails rails::generators::invoke()","ruby gem::command#invoke()","ruby win32ole#invoke()","rails actioncable::subscriptionadapter::async::asyncsubscribermap#invoke_callback()","rails actioncable::subscriptionadapter::postgresql::listener#invoke_callback()","rails actioncable::subscriptionadapter::redis::listener#invoke_callback()","rails actioncable::subscriptionadapter::subscribermap#invoke_callback()","ruby win32ole::method#invoke_kind()","ruby gem::command#invoke_with_build_args()","ruby gem::commands::generateindexcommand::rubygemstrampoline#invoke_with_build_args()","ruby reline::core#io_gate()","ruby reline::lineeditor#io_gate()","ruby fiber::scheduler#io_pread()","ruby fiber::scheduler#io_pwrite()","ruby fiber::scheduler#io_read()","ruby fiber::scheduler#io_select()","ruby fiber::scheduler#io_wait()","ruby fiber::scheduler#io_write()","ruby csv#ioctl()","ruby io#ioctl()","ruby io#ioflush()","rails actiondispatch::request#ip()","ruby addrinfo::ip()","ruby ipaddr#ip6_arpa()","ruby ipaddr#ip6_int()","ruby addrinfo#ip?()","ruby addrinfo#ip_address()","ruby socket::ip_address_list()","ruby socket::ancillarydata::ip_pktinfo()","ruby socket::ancillarydata#ip_pktinfo()","ruby addrinfo#ip_port()","ruby addrinfo#ip_unpack()","ruby net::http#ipaddr()","ruby net::http#ipaddr=()","rails actiondispatch::remoteip::getip#ips_from()","ruby addrinfo#ipv4?()","ruby ipaddr#ipv4?()","ruby ipaddr#ipv4_compat()","ruby ipaddr#ipv4_compat?()","ruby addrinfo#ipv4_loopback?()","ruby ipaddr#ipv4_mapped()","ruby ipaddr#ipv4_mapped?()","ruby addrinfo#ipv4_multicast?()","ruby socket::option#ipv4_multicast_loop()","ruby socket::option::ipv4_multicast_loop()","ruby socket::option::ipv4_multicast_ttl()","ruby socket::option#ipv4_multicast_ttl()","ruby addrinfo#ipv4_private?()","ruby addrinfo#ipv6?()","ruby ipaddr#ipv6?()","ruby addrinfo#ipv6_linklocal?()","ruby addrinfo#ipv6_loopback?()","ruby addrinfo#ipv6_mc_global?()","ruby addrinfo#ipv6_mc_linklocal?()","ruby addrinfo#ipv6_mc_nodelocal?()","ruby addrinfo#ipv6_mc_orglocal?()","ruby addrinfo#ipv6_mc_sitelocal?()","ruby addrinfo#ipv6_multicast?()","ruby socket::ancillarydata#ipv6_pktinfo()","ruby socket::ancillarydata::ipv6_pktinfo()","ruby socket::ancillarydata#ipv6_pktinfo_addr()","ruby socket::ancillarydata#ipv6_pktinfo_ifindex()","ruby addrinfo#ipv6_sitelocal?()","ruby addrinfo#ipv6_to_ipv4()","ruby addrinfo#ipv6_unique_local?()","ruby addrinfo#ipv6_unspecified?()","ruby addrinfo#ipv6_v4compat?()","ruby addrinfo#ipv6_v4mapped?()","ruby socket#ipv6only!()","ruby binding#irb()","ruby irb::irb()","ruby irb::jobmanager#irb()","ruby irb::irb_abort()","ruby irb::extendcommandbundle#irb_context()","ruby irb::irb_exit()","ruby irb::extendcommandbundle#irb_exit()","ruby irb::context#irb_level()","ruby irb::extendcommandbundle#irb_load()","ruby irb::irbloader#irb_load()","ruby irb::extendcommandbundle#irb_require()","rails activesupport::inflector::inflections#irregular()","ruby jacobian#isequal()","rails activesupport::timewithzone#is_a?()","ruby object#is_a?()","ruby rdoc::constant#is_alias_for()","ruby irb::statement#is_assignment?()","ruby irb::statement::command#is_assignment?()","ruby irb::statement::expression#is_assignment?()","ruby syntaxsuggest::codeblock#is_end?()","ruby syntaxsuggest::codeline#is_end?()","ruby syntaxsuggest::lexvalue#is_end?()","ruby syntaxsuggest::codeline#is_kw?()","ruby syntaxsuggest::lexvalue#is_kw?()","rails loaderror#is_missing?()","rails activerecord::type::internal::timezone#is_utc?()","rails string#is_utf8?()","ruby net::http::is_version_1_2?()","ruby io#isatty()","ruby stringio#isatty()","rails activesupport::timewithzone#isdst()","ruby time#isdst()","ruby kconv::iseuc()","ruby string#iseuc()","ruby kconv::isjis()","ruby string#isjis()","rails activesupport::duration#iso8601()","rails activesupport::timewithzone#iso8601()","rails activesupport::timezone#iso8601()","ruby date#iso8601()","ruby date::iso8601()","ruby datetime::iso8601()","ruby datetime#iso8601()","ruby time::iso8601()","ruby time#iso8601()","rails rails::application#isolate_namespace()","rails rails::engine::isolate_namespace()","ruby process::sys::issetugid()","ruby kconv::issjis()","ruby string#issjis()","ruby openssl::pkcs7::recipientinfo#issuer()","ruby openssl::pkcs7::signerinfo#issuer()","ruby openssl::x509::crl#issuer()","ruby openssl::x509::certificate#issuer()","ruby openssl::x509::crl#issuer=()","ruby openssl::x509::certificate#issuer=()","ruby openssl::x509::extensionfactory#issuer_certificate=()","ruby openssl::ocsp::certificateid#issuer_key_hash()","ruby openssl::ocsp::certificateid#issuer_name_hash()","ruby gem::security::trustdir#issuer_of()","ruby kconv::isutf8()","ruby string#isutf8()","ruby date#italy()","rails activesupport::notifications::fanout#iterate_guarding_exceptions()","ruby gem::resolver::stats#iteration!()","ruby kernel#iterator?()","ruby object#itself()","ruby openssl::cipher#iv=()","ruby openssl::cipher#iv_len()","ruby openssl::cipher#iv_len=()","rails activerecord::encryption::cipher#iv_length()","rails activerecord::encryption::cipher::aes256gcm::iv_length()","rails actionview::helpers::javascripthelper#j()","ruby jacobian#jacobian()","ruby gem::java_platform?()","rails actionview::helpers::assettaghelper#javascript_include_tag()","rails actionview::helpers::asseturlhelper#javascript_path()","rails actionview::helpers::javascripthelper#javascript_tag()","rails actionview::helpers::asseturlhelper#javascript_url()","rails ","ruby date#jd()","ruby date::jd()","ruby datetime::jd()","rails ","rails ","rails ","rails ","ruby date#jisx0301()","ruby date::jisx0301()","ruby datetime#jisx0301()","ruby datetime::jisx0301()","rails ","rails activejob::enqueuing::classmethods#job_or_instantiate()","ruby array#join()","ruby file::join()","ruby pathname#join()","ruby prism::location#join()","ruby set#join()","ruby shellwords::join()","ruby thread#join()","ruby uri::join()","ruby uri::rfc2396_parser#join()","ruby uri::rfc2396_parser#join()","ruby syntaxsuggest::cleandocument#join_consecutive!()","ruby syntaxsuggest::cleandocument#join_groups()","ruby syntaxsuggest::cleandocument#join_heredoc!()","ruby syntaxsuggest::cleandocument#join_trailing_slash!()","rails activerecord::relation#joined_includes_values()","rails activerecord::querymethods#joins()","rails rails::generators::namedbase#js_template()","ruby class#json_creatable?()","ruby json::genericobject::json_creatable?()","ruby bigdecimal::json_create()","ruby complex::json_create()","ruby date::json_create()","ruby datetime::json_create()","ruby exception::json_create()","ruby json::genericobject::json_create()","ruby openstruct::json_create()","ruby range::json_create()","ruby rational::json_create()","ruby regexp::json_create()","ruby set::json_create()","ruby struct::json_create()","ruby symbol::json_create()","ruby time::json_create()","rails erb::util::json_escape()","rails activerecord::connectionadapters::postgresql::columnmethods#jsonb()","ruby date#julian()","ruby date#julian?()","ruby date::julian_leap?()","ruby reline::lineeditor::dialogprocscope#just_cursor_moving()","ruby reline::lineeditor#just_move_cursor()","rails ","ruby kconv::kconv()","ruby string#kconv()","rails actiondispatch::flash::flashhash#keep()","ruby csv::parser::inputsscanner#keep_back()","ruby csv::parser::scanner#keep_back()","ruby csv::parser::inputsscanner#keep_drop()","ruby csv::parser::scanner#keep_drop()","ruby csv::parser::inputsscanner#keep_end()","ruby csv::parser::scanner#keep_end()","rails actioncontroller::parameters#keep_if()","ruby array#keep_if()","ruby env::keep_if()","ruby hash#keep_if()","ruby set#keep_if()","ruby gem::specification#keep_only_files_and_directories()","ruby rubyvm::keep_script_lines()","ruby rubyvm::keep_script_lines=()","ruby csv::parser::inputsscanner#keep_start()","ruby csv::parser::scanner#keep_start()","ruby fiber::scheduler#kernel_sleep()","rails activestorage::blob#key()","rails activestorage::preview#key()","rails activestorage::variant#key()","rails activestorage::variation#key()","rails activesupport::encryptedfile#key()","ruby env::key()","ruby hash#key()","ruby keyerror#key()","ruby nomatchingpatternkeyerror#key()","ruby prism::magiccomment#key()","ruby reline::lineeditor::dialogprocscope#key()","ruby yaml::dbm#key()","ruby openssl::cipher#key=()","rails actioncontroller::parameters#key?()","rails actiondispatch::flash::flashhash#key?()","rails actiondispatch::http::headers#key?()","rails actiondispatch::request#key?()","rails activemodel::errors#key?()","rails activesupport::hashwithindifferentaccess#key?()","rails activesupport::hashwithindifferentaccess#key?()","ruby cgi::queryextension#key?()","ruby csv::row#key?()","ruby env::key?()","ruby hash#key?()","ruby net::httpheader#key?()","ruby objectspace::weakkeymap#key?()","ruby objectspace::weakmap#key?()","ruby pstore#key?()","ruby thread#key?()","ruby reline::config#key_bindings()","rails rails::application#key_generator()","rails activesupport::messageencryptor::key_len()","ruby openssl::cipher#key_len()","ruby openssl::cipher#key_len=()","rails activerecord::encryption::cipher#key_length()","rails activerecord::encryption::cipher::aes256gcm::key_length()","rails activesupport::cache::store#key_matcher()","ruby resolv::dns::svcparam::key_name()","ruby reline::config#key_notation_to_code()","ruby resolv::dns::svcparam::key_number()","rails activerecord::encryption::scheme#key_provider()","ruby reline::config#keymap()","rails actioncontroller::parameters#keys()","rails actiondispatch::flash::flashhash#keys()","rails rails::paths::root#keys()","ruby cgi::queryextension#keys()","ruby env::keys()","ruby hash#keys()","ruby objectspace::weakmap#keys()","ruby pstore#keys()","ruby thread#keys()","ruby win32::registry#keys()","ruby irb::inspector::keys_with_inspector()","ruby struct::keyword_init?()","ruby ","ruby drb::threadobject#kill()","ruby fiber#kill()","ruby irb::jobmanager#kill()","ruby process::kill()","ruby thread::kill()","ruby thread#kill()","ruby reline::lineeditor#kill_line()","ruby reline::lineeditor#kill_whole_line()","ruby reline::lineeditor#kill_word()","rails numeric#kilobyte()","rails numeric#kilobytes()","rails activemodel::validator#kind()","rails activemodel::validator::kind()","rails activesupport::timewithzone#kind_of?()","ruby object#kind_of?()","rails activejob::serializers::objectserializer#klass()","rails activerecord::reflection::macroreflection#klass()","rails abstractcontroller::translation#l()","rails actionview::helpers::translationhelper#l()","rails actionview::helpers::formbuilder#label()","rails actionview::helpers::formhelper#label()","ruby rubyvm::instructionsequence#label()","ruby thread::backtrace::location#label()","rails actionview::helpers::formtaghelper#label_tag()","ruby kernel#lambda()","ruby proc#lambda?()","rails actiondispatch::middlewarestack#last()","rails activerecord::associations::collectionproxy#last()","rails activerecord::findermethods#last()","rails activerecord::result#last()","rails rails::paths::path#last()","rails string#last()","ruby array#last()","ruby enumerator::arithmeticsequence#last()","ruby range#last()","ruby syntaxsuggest::lexall#last()","rails activerecord::findermethods#last!()","rails actionview::partialiteration#last?()","ruby rubyvm::abstractsyntaxtree::node#last_column()","ruby encoding::converter#last_error()","ruby fiddle::last_error()","ruby fiddle::last_error=()","ruby rubyvm::abstractsyntaxtree::node#last_lineno()","ruby regexp::last_match()","rails actiondispatch::http::cache::response#last_modified()","ruby openuri::meta#last_modified()","ruby rdoc::toplevel#last_modified()","rails actiondispatch::http::cache::response#last_modified=()","rails actiondispatch::http::cache::response#last_modified?()","rails dateandtime::calculations#last_month()","rails dateandtime::calculations#last_quarter()","ruby process::last_status()","ruby openssl::x509::crl#last_update()","ruby openssl::x509::crl#last_update=()","ruby gem::configfile#last_update_check()","ruby gem::configfile#last_update_check=()","rails dateandtime::calculations#last_week()","rails dateandtime::calculations#last_weekday()","rails dateandtime::calculations#last_year()","ruby gc::latest_compact_info()","ruby gc::latest_gc_info()","ruby gem::latest_rubygems_version()","ruby gem::latest_spec_for()","ruby gem::specification::latest_spec_for()","ruby gem::specification::latest_specs()","ruby gem::dependency#latest_version?()","ruby gem::latest_version_for()","rails actionview::layouts::classmethods#layout()","rails ","rails ","ruby enumerable#lazy()","ruby enumerator::lazy#lazy()","rails activerecord::databaseconfigurations::hashconfig#lazy_schema_cache_path()","ruby file::lchmod()","ruby pathname#lchmod()","ruby file::lchown()","ruby pathname#lchown()","ruby integer#lcm()","ruby date#ld()","ruby math::ldexp()","ruby date::leap?()","ruby date#leap?()","rails activerecord::connectionadapters::abstractadapter#lease()","rails activerecord::querymethods#left_joins()","rails activerecord::querymethods#left_outer_joins()","rails activerecord::associations::collectionproxy#length()","rails activerecord::result#length()","ruby array#length()","ruby digest::instance#length()","ruby env::length()","ruby gem::package::tarreader::entry#length()","ruby hash#length()","ruby matchdata#length()","ruby objectspace::weakmap#length()","ruby set#length()","ruby string#length()","ruby stringio#length()","ruby struct#length()","ruby symbol#length()","ruby syntaxsuggest::priorityengulfqueue#length()","ruby syntaxsuggest::priorityqueue#length()","ruby tempfile#length()","ruby thread::queue#length()","ruby thread::sizedqueue#length()","ruby logger#level()","ruby socket::ancillarydata#level()","ruby socket::option#level()","ruby zlib::gzipfile#level()","ruby irb::notifier::compositenotifier#level=()","ruby logger#level=()","ruby irb::notifier::compositenotifier#level_notifier=()","ruby gem::text#levenshtein_distance()","ruby prism::lex()","ruby ripper::lex()","ruby syntaxsuggest::lexall::lex()","ruby prism::lex_compat()","ruby prism::lex_file()","ruby prism::lex_ripper()","ruby math::lgamma()","rails rails::appbuilder#lib()","rails rails::generators::actions#lib()","rails rails::pluginbuilder#lib()","ruby gem::basicspecification#lib_dirs_glob()","ruby gem::specification#lib_files()","ruby csv#liberal_parsing?()","ruby csv::parser#liberal_parsing?()","ruby win32ole::typelib#library_name()","ruby psych::libyaml_version()","rails rails::pluginbuilder#license()","ruby gem::specification#license()","ruby gem::specification#license=()","ruby gem::specification#licenses()","ruby gem::specification#licenses=()","rails activerecord::querymethods#limit()","rails activesupport::multibyte::chars#limit()","ruby bigdecimal::limit()","ruby thread::backtrace::limit()","rails activerecord::connectionadapters::postgresql::columnmethods#line()","ruby csv#line()","ruby csv::parser#line()","ruby irb::canvas#line()","ruby irb::stdioinputmethod#line()","ruby prism::source#line()","ruby reline::line_editor()","ruby reline::line_editor()","ruby prism::source#line_start()","rails ","ruby coverage::line_stub()","ruby psych::emitter#line_width()","ruby psych::emitter#line_width=()","ruby regexp::linear_time?()","ruby argf#lineno()","ruby csv#lineno()","ruby csv::parser#lineno()","ruby io#lineno()","ruby ripper::filter#lineno()","ruby stringio#lineno()","ruby thread::backtrace::location#lineno()","ruby tracepoint#lineno()","ruby zlib::gzipreader#lineno()","ruby argf#lineno=()","ruby io#lineno=()","ruby stringio#lineno=()","ruby zlib::gzipreader#lineno=()","ruby string#lines()","ruby syntaxsuggest::aroundblockscan#lines()","ruby syntaxsuggest::cleandocument#lines()","ruby syntaxsuggest::scanhistory#lines()","ruby socket::option::linger()","ruby socket::option#linger()","ruby file::link()","ruby fileutils::link()","ruby fileutils::link_entry()","ruby ipaddr#link_local?()","rails actionview::helpers::urlhelper#link_to()","ruby rdoc::markdown#link_to()","rails actionview::helpers::urlhelper#link_to_if()","rails actionview::helpers::urlhelper#link_to_unless()","rails actionview::helpers::urlhelper#link_to_unless_current()","rails actiontext::content#links()","ruby encoding::list()","ruby signal::list()","ruby thread::list()","ruby threadgroup#list()","ruby rdoc::rdoc#list_files_in_directory()","ruby rdoc::markdown#list_item_from()","rails actioncable::subscriptionadapter::postgresql::listener#listen()","rails actioncable::subscriptionadapter::redis::listener#listen()","ruby addrinfo#listen()","ruby openssl::ssl::sslserver#listen()","ruby socket#listen()","ruby tcpserver#listen()","ruby unixserver#listen()","ruby gem::gemcutterutilities::webauthnlistener::listener_thread()","rails activesupport::notifications::fanout#listeners_for()","rails activesupport::notifications::fanout#listening?()","ruby ","ruby string#ljust()","ruby fileutils::ln()","ruby openssl::asn1::objectid#ln()","ruby fileutils::ln_s()","ruby fileutils::ln_sf()","ruby fileutils::ln_sr()","rails actiontext::serialization#load()","rails activerecord::encryption::messageserializer#load()","rails activerecord::relation#load()","rails activesupport::cache::coders::loader#load()","rails activesupport::cache::memcachestore::coders::loader#load()","ruby bundler::load()","ruby gem::requestset::gemdependencyapi#load()","ruby gem::safemarshal::load()","ruby gem::safeyaml::load()","ruby gem::specification::load()","ruby gem::yamlserializer#load()","ruby irb::locale#load()","ruby json#load()","ruby json::genericobject::load()","ruby kernel#load()","ruby marshal::load()","ruby openssl::engine::load()","ruby openssl::x509::certificate::load()","ruby optionparser#load()","ruby prism::load()","ruby psych::load()","ruby rdoc::store#load_all()","ruby gem::configfile#load_api_keys()","rails activerecord::relation#load_async()","ruby rdoc::store#load_cache()","ruby gem::security::trustdir#load_certificate()","ruby rdoc::store#load_class()","ruby rdoc::store#load_class_data()","ruby irb::extendcommandbundle::load_command()","ruby irb::workspace#load_commands_to_main()","rails rails::engine#load_config_initializer()","rails rails::engine#load_console()","ruby gem::commands::certcommand#load_default_cert()","ruby gem::commands::certcommand#load_default_key()","rails rails::application::configuration#load_defaults()","ruby gem::specification::load_defaults()","ruby gem::load_env_plugins()","ruby gem::configfile#load_file()","ruby irb::irbloader#load_file()","ruby json#load_file()","ruby openssl::x509::certificate::load_file()","ruby psych::load_file()","ruby json#load_file!()","rails activerecord::connectionadapters::schemacache::load_from()","ruby rubyvm::instructionsequence::load_from_binary()","ruby rubyvm::instructionsequence::load_from_binary_extra_data()","ruby gem::requestset#load_gemdeps()","ruby bundler::load_gemspec()","ruby bundler::load_gemspec_uncached()","rails rails::command::actions#load_generators()","rails rails::engine#load_generators()","ruby reline::face::load_initial_configs()","rails activesupport::dependencies::load_interlock()","ruby rdoc::store#load_method()","ruby rdoc::options::load_options()","ruby rdoc::store#load_page()","ruby gem::load_path_insert_index()","rails rails::paths::root#load_paths()","ruby gem::load_plugins()","ruby openssl::engine#load_private_key()","ruby openssl::engine#load_public_key()","ruby openssl::random::load_random_file()","ruby rdoc::rubygemshook::load_rdoc()","ruby rdoc::rubygemshook::load_rdoc()","rails activerecord::relation#load_records()","rails activerecord::associations::preloader::association::loaderquery#load_records_for_keys()","rails activerecord::associations::preloader::association::loaderquery#load_records_in_batch()","rails rails::engine#load_runner()","ruby gem::load_safe_marshal()","rails activerecord::encryption::encryptablerecord#load_schema!()","rails activerecord::tasks::databasetasks#load_schema_current()","rails activerecord::migration::load_schema_if_pending!()","rails activerecord::tasks::databasetasks#load_seed()","rails rails::engine#load_seed()","rails rails::engine#load_server()","rails actiondispatch::session::cookiestore#load_session()","rails actiondispatch::session::stalesessioncheck#load_session()","ruby gem::source#load_specs()","ruby psych::load_stream()","rails activerecord::associations::collectionproxy#load_target()","rails rails::command::actions#load_tasks()","rails rails::engine#load_tasks()","ruby rdoc::parser::c#load_variable_map()","ruby gem::configfile::load_with_rubygems_config_hash()","ruby gem::load_yaml()","ruby rdoc::load_yaml()","rails activerecord::associations::collectionproxy#loaded()","rails activerecord::associations::collectionproxy#loaded?()","rails activesupport::dependencies::interlock#loading()","rails activesupport::timezone#local()","ruby gem::platform::local()","ruby time::local()","rails actiondispatch::request#local?()","ruby gem::localremoteoptions#local?()","ruby basicsocket#local_address()","rails actionview::template#local_assigns()","ruby bundler::local_platform()","rails activesupport::timezone#local_to_utc()","ruby binding#local_variable_defined?()","ruby binding#local_variable_get()","ruby irb::workspace#local_variable_get()","ruby binding#local_variable_set()","ruby irb::workspace#local_variable_set()","ruby binding#local_variables()","ruby kernel#local_variables()","ruby nameerror#local_variables()","ruby win32ole::locale()","ruby win32ole::locale=()","ruby encoding::locale_charmap()","rails abstractcontroller::translation#localize()","rails actionview::helpers::translationhelper#localize()","rails activesupport::timewithzone#localtime()","rails datetime#localtime()","ruby time#localtime()","ruby prism::lexcompat::token#location()","ruby erb#location=()","ruby gem::location_of_caller()","rails activerecord::querymethods#lock()","ruby net::http#lock()","ruby thread::mutex#lock()","rails activerecord::locking::pessimistic#lock!()","rails activerecord::connectionadapters::connectionpool#lock_thread=()","ruby io::buffer#locked()","ruby io::buffer#locked?()","ruby thread::mutex#locked?()","ruby bundler::locked_gems()","rails activerecord::locking::optimistic::classmethods#locking_column=()","rails activerecord::locking::optimistic::classmethods#locking_enabled?()","rails actioncable::connection::taggedloggerproxy#log()","rails activerecord::connectionadapters::abstractadapter#log()","rails rails::appbuilder#log()","rails rails::generators::actions#log()","ruby bigmath::log()","ruby logger#log()","ruby math::log()","ruby syslog::log()","rails ","ruby math::log10()","ruby math::log2()","rails actioncontroller::logging::classmethods#log_at()","rails activesupport::logsubscriber::log_subscribers()","rails actioncable::server::base::logger()","rails actioncontroller::logsubscriber#logger()","rails actiondispatch::request#logger()","rails actionmailer::logsubscriber#logger()","rails actionview::digestor::logger()","rails actionview::logsubscriber#logger()","rails activerecord::core::logger()","rails activestorage::analyzer#logger()","rails activestorage::logsubscriber#logger()","rails activestorage::previewer#logger()","rails activesupport::logsubscriber::logger()","rails activesupport::logsubscriber#logger()","rails ","rails activesupport::logger::logger_outputs_to?()","ruby openssl::asn1::objectid#long_name()","rails activerecord::connectionadapters::mysql::columnmethods#longblob()","rails activerecord::connectionadapters::mysql::columnmethods#longtext()","rails exhibit::look()","rails exhibit#look()","ruby rdoc::parser::c#look_for_directives_in()","ruby rdoc::parser::ruby#look_for_directives_in()","ruby syntaxsuggest::aroundblockscan#lookahead_balance_one_line()","rails activejob::queueadapters::lookup()","rails mime::type::lookup()","rails activemodel::translation#lookup_ancestors()","rails mime::type::lookup_by_extension()","rails actionview::viewpaths#lookup_context()","rails rails::command::lookup_paths()","rails rails::generators::lookup_paths()","ruby rinda::ringfinger#lookup_ring()","ruby rinda::ringfinger#lookup_ring_any()","rails activesupport::cache::lookup_store()","ruby kernel#loop()","ruby ipaddr#loopback?()","ruby win32::sspi::securityhandle#lower()","rails activerecord::connectionadapters::postgresql::columnmethods#lseg()","ruby openssl::bn#lshift!()","ruby file::lstat()","ruby file#lstat()","ruby pathname#lstat()","ruby string#lstrip()","ruby string#lstrip!()","rails activerecord::connectionadapters::postgresql::columnmethods#ltree()","ruby lusolve#ludecomp()","ruby lusolve#lusolve()","ruby file::lutime()","ruby pathname#lutime()","rails activerecord::connectionadapters::postgresql::columnmethods#macaddr()","ruby complex#magnitude()","ruby float#magnitude()","ruby integer#magnitude()","ruby numeric#magnitude()","ruby rational#magnitude()","rails actionmailbox::inboundemail#mail()","rails actionmailer::base#mail()","rails actionview::helpers::urlhelper#mail_to()","rails ","rails actionmailbox::router::route#mailbox_class()","rails actionmailbox::router#mailbox_for()","rails actionmailbox::routing#mailbox_for()","rails actionmailer::mailhelper#mailer()","rails ","rails ","rails ","rails actionmailer::base::mailer_name()","rails actionmailer::base#mailer_name()","ruby irb::context#main()","ruby rdoc::store#main()","ruby ractor::main()","ruby thread::main()","ruby rdoc::store#main=()","ruby irb::jobmanager#main_irb()","ruby irb::jobmanager#main_thread()","ruby net::httpheader#main_type()","ruby ","rails announcement::version#major_or_security?()","ruby win32ole::type#major_version()","ruby win32ole::typelib#major_version()","ruby gem::ext::builder::make()","ruby openssl::pkey::ec::point#make_affine!()","ruby erb#make_compiler()","ruby gem::commands::setupcommand#make_destination_dirs()","ruby rinda::tupleentry#make_expires()","rails activesupport::callbacks::calltemplate::instanceexec0#make_lambda()","rails activesupport::callbacks::calltemplate::instanceexec1#make_lambda()","rails activesupport::callbacks::calltemplate::instanceexec2#make_lambda()","rails activesupport::callbacks::calltemplate::methodcall#make_lambda()","rails activesupport::callbacks::calltemplate::objectcall#make_lambda()","rails activesupport::callbacks::calltemplate::proccall#make_lambda()","ruby pathname#make_link()","ruby rdoc::parser::ruby#make_message()","ruby syslog::logger::make_methods()","ruby gem::requestset::lockfile::tokenizer#make_parser()","ruby drb::drbconn::make_pool()","ruby uri::rfc2396_parser#make_regexp()","ruby uri::rfc2396_parser#make_regexp()","rails actioncontroller::defaultheaders::classmethods#make_response!()","rails actioncontroller::live::classmethods#make_response!()","rails actioncontroller::metal::make_response!()","ruby ractor::make_shareable()","ruby rinda::ringserver#make_socket()","ruby optionparser#make_switch()","ruby pathname#make_symlink()","ruby rinda::tupleentry#make_tuple()","ruby rdoc::store#make_variable_map()","ruby win32::registry::api#make_wstr()","ruby fileutils::makedirs()","ruby ","ruby ","ruby fiddle::malloc()","ruby fiddle::cstructentity::malloc()","ruby fiddle::pointer::malloc()","ruby gc::malloc_allocated_size()","ruby gc::malloc_allocations()","ruby gem::commands::ownercommand#manage_owners()","rails ","rails activerecord::associations::collectionproxy#many?()","rails activerecord::relation#many?()","rails enumerable#many?()","ruby array#map()","ruby enumerable#map()","ruby enumerator::lazy#map()","ruby io::buffer::map()","ruby psych::coder#map()","ruby array#map!()","ruby set#map!()","ruby psych::coder#map=()","ruby io::buffer#mapped?()","ruby psych::nodes::mapping#mapping?()","ruby psych::nodes::node#mapping?()","ruby psych::parser#mark()","rails activerecord::autosaveassociation#mark_for_destruction()","rails actioncontroller::requestforgeryprotection#mark_for_same_origin_verification!()","ruby syntaxsuggest::codeblock#mark_invisible()","ruby syntaxsuggest::codeline#mark_invisible()","ruby prism::parseresult#mark_newlines!()","ruby gem::specification#mark_version()","rails activerecord::autosaveassociation#marked_for_destruction?()","rails actioncontroller::requestforgeryprotection#marked_for_same_origin_verification?()","ruby rdoc::text#markup()","ruby ","rails activerecord::connectionadapters::schemacache#marshal_dump()","rails activesupport::timewithzone#marshal_dump()","ruby delegator#marshal_dump()","ruby gem::version#marshal_dump()","ruby rdoc::anymethod#marshal_dump()","ruby rdoc::attr#marshal_dump()","ruby rdoc::constant#marshal_dump()","ruby rdoc::toplevel#marshal_dump()","rails activerecord::connectionadapters::schemacache#marshal_load()","rails activesupport::timewithzone#marshal_load()","ruby delegator#marshal_load()","ruby gem::safemarshal::visitors::toruby::rationalcompat#marshal_load()","ruby gem::version#marshal_load()","ruby rdoc::anymethod#marshal_load()","ruby rdoc::attr#marshal_load()","ruby rdoc::constant#marshal_load()","ruby gem::marshal_version()","ruby ipaddr#mask()","ruby syslog::mask()","ruby ipaddr#mask!()","ruby syslog::mask=()","rails actioncontroller::requestforgeryprotection#mask_token()","rails rails::appbuilder#master_key()","rails actiondispatch::routing::mapper::base#match()","rails actiondispatch::routing::mapper::resources#match()","rails activerecord::dynamicmatchers::method::match()","ruby acl::aclentry#match()","ruby acl::acllist#match()","ruby gem::platform::match()","ruby matchdata#match()","ruby optionparser::completinghash#match()","ruby regexp#match()","ruby rinda::template#match()","ruby rinda::templateentry#match()","ruby string#match()","ruby symbol#match()","rails actionmailbox::router::route#match?()","rails activemodel::error#match?()","rails activemodel::name#match?()","rails activesupport::timezone#match?()","rails mime::type#match?()","ruby gem::dependency#match?()","ruby gem::licenses::match?()","ruby gem::resolver::dependencyrequest#match?()","ruby regexp#match?()","ruby string#match?()","ruby stringscanner#match?()","ruby symbol#match?()","ruby gem::platform::match_gem?()","ruby matchdata#match_length()","ruby gem::availableset#match_platform!()","ruby gem::nametuple#match_platform?()","ruby gem::platform::match_spec?()","ruby reline::keystroke#match_status()","ruby stringscanner#matched()","ruby stringscanner#matched?()","ruby stringscanner#matched_size()","ruby nomatchingpatternkeyerror#matchee()","rails activemodel::validations::acceptancevalidator::lazilydefineattributes#matches?()","ruby reline::windows::keyeventrecord#matches?()","ruby gem::basicspecification#matches_for_glob()","ruby gem::dependency#matches_spec?()","ruby gem::resolver::dependencyrequest#matches_spec?()","ruby gem::dependency#matching_specs()","rails activerecord::connectionadapters::realtransaction#materialize!()","rails activerecord::connectionadapters::savepointtransaction#materialize!()","rails module#mattr_accessor()","rails module#mattr_reader()","rails module#mattr_writer()","ruby array#max()","ruby enumerable#max()","ruby range#max()","ruby thread::sizedqueue#max()","ruby thread::sizedqueue#max=()","ruby enumerable#max_by()","ruby csv#max_field_size()","ruby csv::parser#max_field_size()","rails activerecord::connectionadapters::postgresqladapter#max_identifier_length()","ruby json::ext::generator::state#max_nesting()","ruby json::ext::generator::state#max_nesting=()","rails activerecord::databaseconfigurations::hashconfig#max_queue()","ruby net::http#max_retries=()","rails activerecord::databaseconfigurations::hashconfig#max_threads()","ruby openssl::ssl::sslcontext#max_version=()","ruby process::maxgroups()","ruby process::maxgroups=()","rails activerecord::calculations#maximum()","rails enumerable#maximum()","rails string#mb_chars()","ruby date#mday()","ruby time#mday()","ruby benchmark::measure()","ruby gc::measure_total_time()","ruby gc::measure_total_time=()","rails actiondispatch::request#media_type()","rails actiondispatch::response#media_type()","rails activerecord::connectionadapters::mysql::columnmethods#mediumblob()","rails activerecord::connectionadapters::mysql::columnmethods#mediumtext()","rails numeric#megabyte()","rails numeric#megabytes()","rails actiondispatch::routing::mapper::resources#member()","rails actioncontroller::parameters#member?()","rails activerecord::findermethods#member?()","rails activesupport::hashwithindifferentaccess#member?()","rails activesupport::hashwithindifferentaccess#member?()","ruby csv::row#member?()","ruby env::member?()","ruby enumerable#member?()","ruby hash#member?()","ruby objectspace::weakmap#member?()","ruby range#member?()","ruby set#member?()","ruby data#members()","ruby data::members()","ruby struct::members()","ruby struct#members()","ruby benchmark::tms#memberwise()","ruby ","ruby objectspace::memsize_of()","ruby objectspace::memsize_of_all()","rails actioncontroller::parameters#merge()","rails actiondispatch::http::headers#merge()","rails activerecord::encryption::scheme#merge()","rails activerecord::spawnmethods#merge()","rails activesupport::hashwithindifferentaccess#merge()","rails activesupport::hashwithindifferentaccess#merge()","ruby gem::dependency#merge()","ruby hash#merge()","ruby json::ext::generator::state#merge()","ruby rdoc::classmodule#merge()","ruby set#merge()","ruby uri::generic#merge()","rails actioncontroller::parameters#merge!()","rails actiondispatch::http::headers#merge!()","rails activemodel::errors#merge!()","rails activesupport::hashwithindifferentaccess#merge!()","rails activesupport::hashwithindifferentaccess#merge!()","ruby env::merge!()","ruby hash#merge!()","ruby uri::generic#merge!()","rails actiondispatch::response::merge_default_headers()","ruby json#merge_dump_options()","ruby gem::command#merge_options()","rails actiondispatch::response#message()","rails actionmailer::mailhelper#message()","rails actionmailer::messagedelivery#message()","rails activemodel::error#message()","ruby exception#message()","ruby gem::runtimerequirementnotmeterror#message()","ruby net::readtimeout#message()","ruby net::writetimeout#message()","ruby optionparser::parseerror#message()","ruby didyoumean::formatter#message_for()","ruby didyoumean::formatter::message_for()","ruby didyoumean::formatter#message_for()","ruby didyoumean::formatter::message_for()","ruby didyoumean::formatter::message_for()","ruby didyoumean::formatter#message_for()","ruby errorhighlight::defaultformatter::message_for()","ruby openssl::timestamp::request#message_imprint()","ruby openssl::timestamp::tokeninfo#message_imprint()","ruby openssl::timestamp::request#message_imprint=()","ruby win32ole::event::message_loop()","rails rails::application#message_verifier()","rails activemodel::errors#messages()","rails activemodel::errors#messages_for()","rails activestorage::analyzer#metadata()","rails activestorage::analyzer::audioanalyzer#metadata()","rails activestorage::analyzer::imageanalyzer#metadata()","rails activestorage::analyzer::videoanalyzer#metadata()","rails actiondispatch::request#method()","ruby object#method()","ruby rdoc::markupreference#method()","rails ","rails abstractcontroller::base::method_added()","rails actioncable::channel::base::method_added()","rails activesupport::subscriber::method_added()","ruby module#method_defined?()","ruby rdoc::store#method_file()","ruby tracepoint#method_id()","rails activemodel::attributemethods#method_missing()","rails activerecord::migration#method_missing()","rails activesupport::multibyte::chars#method_missing()","rails activesupport::orderedoptions#method_missing()","rails activesupport::timewithzone#method_missing()","ruby drb::drbobject#method_missing()","ruby drb::drbobject#method_missing()","ruby drb::threadobject#method_missing()","ruby delegator#method_missing()","ruby gem::uri#method_missing()","ruby ractor::movedobject#method_missing()","ruby win32ole#method_missing()","ruby win32ole::record#method_missing()","ruby didyoumean::methodnamechecker#method_names()","rails actiondispatch::request#method_symbol()","ruby ","ruby ","ruby delegator#methods()","ruby object#methods()","ruby win32ole#methods()","ruby rdoc::context#methods_by_type()","ruby rdoc::context#methods_matching()","ruby gem::gemcutterutilities#mfa_unauthorized?()","rails date#midday()","rails datetime#midday()","rails time#midday()","rails date#middle_of_day()","rails datetime#middle_of_day()","rails time#middle_of_day()","rails actioncontroller::metal::middleware()","rails activesupport::cache::strategy::localcache#middleware()","rails rails::server#middleware()","rails ","rails date#midnight()","rails datetime#midnight()","rails time#midnight()","rails activerecord::migration::migrate()","rails activerecord::migration#migrate()","rails activerecord::migrationcontext#migrate()","rails activerecord::tasks::databasetasks#migrate()","rails activerecord::tasks::databasetasks#migrate_status()","rails ","rails rails::generators::migration#migration_template()","rails activerecord::databaseconfigurations::hashconfig#migrations_paths()","rails activerecord::tasks::databasetasks#migrations_paths()","ruby array#min()","ruby datetime#min()","ruby enumerable#min()","ruby range#min()","ruby time#min()","ruby enumerable#min_by()","rails activerecord::databaseconfigurations::hashconfig#min_threads()","ruby openssl::ssl::sslcontext#min_version=()","rails activerecord::calculations#minimum()","rails enumerable#minimum()","ruby array#minmax()","ruby enumerable#minmax()","ruby range#minmax()","ruby enumerable#minmax_by()","ruby win32ole::type#minor_version()","ruby win32ole::typelib#minor_version()","rails time#minus_with_coercion()","rails time#minus_without_coercion()","rails time#minus_without_duration()","rails numeric#minute()","ruby datetime#minute()","rails numeric#minutes()","rails activestorage::service::mirrorservice#mirror()","rails ","ruby ","rails activerecord::querymethods::wherechain#missing()","ruby syntaxsuggest::explainsyntax#missing()","ruby syntaxsuggest::leftrightlexcount#missing()","ruby gem::specification#missing_extensions?()","rails nameerror#missing_name()","rails nameerror#missing_name?()","ruby date#mjd()","ruby net::http#mkcol()","ruby dir::mkdir()","ruby fileutils::mkdir()","ruby gem::package::tarwriter#mkdir()","ruby pathname#mkdir()","ruby bundler::mkdir_p()","ruby fileutils::mkdir_p()","ruby gem::commands::setupcommand::makedirs#mkdir_p()","ruby file::mkfifo()","ruby fileutils::mkpath()","ruby pathname#mkpath()","ruby time::mktime()","ruby dir::mktmpdir()","ruby openssl::bn#mod_add()","ruby openssl::bn#mod_exp()","ruby openssl::bn#mod_inverse()","ruby openssl::bn#mod_mul()","ruby openssl::bn#mod_sqr()","ruby openssl::bn#mod_sqrt()","ruby openssl::bn#mod_sub()","ruby bigdecimal::mode()","ruby file::stat#mode()","rails ","rails activemodel::naming#model_name()","rails rails::generators::namedbase#model_resource_name()","ruby rdoc::mixin#module()","rails ","ruby rdoc::classmodule#module?()","ruby rdoc::normalmodule#module?()","ruby module#module_eval()","ruby module#module_exec()","ruby syntaxsuggest::module_for_detailed_message()","ruby rdoc::store#module_names()","rails rails::generators::base#module_namespacing()","rails module#module_parent()","rails module#module_parent_name()","rails module#module_parents()","ruby rdoc::context#modules()","ruby ","rails abstractcontroller::helpers::classmethods#modules_for_helpers()","rails actioncontroller::helpers::classmethods#modules_for_helpers()","ruby rdoc::context#modules_hash()","ruby rdoc::store#modules_hash()","ruby bigdecimal#modulo()","ruby float#modulo()","ruby integer#modulo()","ruby numeric#modulo()","ruby date#mon()","ruby time#mon()","ruby monitor#mon_check_owner()","rails activesupport::concurrency::loadinterlockawaremonitor#mon_enter()","ruby monitor#mon_enter()","ruby monitormixin#mon_enter()","ruby monitor#mon_exit()","ruby monitormixin#mon_exit()","ruby monitor#mon_locked?()","ruby monitormixin#mon_locked?()","ruby monitor#mon_owned?()","ruby monitormixin#mon_owned?()","ruby monitor#mon_synchronize()","ruby monitormixin#mon_synchronize()","ruby monitor#mon_try_enter()","ruby monitormixin#mon_try_enter()","rails dateandtime::calculations#monday()","ruby date#monday?()","ruby time#monday?()","rails activerecord::connectionadapters::postgresql::columnmethods#money()","rails activesupport::notifications::monotonic_subscribe()","rails integer#month()","ruby date#month()","ruby time#month()","rails actionview::helpers::formbuilder#month_field()","rails actionview::helpers::formhelper#month_field()","rails actionview::helpers::formtaghelper#month_field_tag()","rails integer#months()","rails dateandtime::calculations#months_ago()","rails dateandtime::calculations#months_since()","ruby bundler::most_specific_locked_platform?()","rails actiondispatch::routing::mapper::base#mount()","rails rails::generators::namedbase#mountable_engine?()","ruby pathname#mountpoint?()","rails actiondispatch::middlewarestack#move()","rails rails::configuration::middlewarestackproxy#move()","ruby fileutils::move()","ruby net::http#move()","ruby rinda::tuplespace#move()","rails actiondispatch::middlewarestack#move_after()","rails rails::configuration::middlewarestackproxy#move_after()","rails actiondispatch::middlewarestack#move_before()","rails rails::configuration::middlewarestackproxy#move_before()","ruby reline::ansi::move_cursor_column()","ruby reline::generalio::move_cursor_column()","ruby reline::windows::move_cursor_column()","ruby reline::ansi::move_cursor_down()","ruby reline::generalio::move_cursor_down()","ruby reline::windows::move_cursor_down()","ruby reline::ansi::move_cursor_up()","ruby reline::generalio::move_cursor_up()","ruby reline::windows::move_cursor_up()","rails benchmark::ms()","ruby reline::windows::msys_tty?()","ruby file::mtime()","ruby file#mtime()","ruby file::stat#mtime()","ruby pathname#mtime()","ruby zlib::gzipfile#mtime()","ruby zlib::gzipwriter#mtime=()","ruby mutex_m#mu_lock()","ruby mutex_m#mu_locked?()","ruby mutex_m#mu_synchronize()","ruby mutex_m#mu_try_lock()","ruby mutex_m#mu_unlock()","ruby openssl::pkey::ec::point#mul()","ruby bigdecimal#mult()","rails ","rails regexp#multiline?()","ruby reline::lineeditor#multiline_off()","ruby reline::lineeditor#multiline_on()","rails actionview::helpers::formbuilder#multipart=()","ruby cgi::queryextension#multipart?()","ruby cgi::htmlextension#multipart_form()","rails integer#multiple_of?()","ruby stringscanner::must_c_version()","rails activesupport::cache::store#mute()","rails activestorage::previewer::mupdfpreviewer::mutool_exists?()","rails activestorage::previewer::mupdfpreviewer::mutool_path()","ruby fileutils::mv()","rails ","ruby irb::jobmanager#n_jobs()","ruby bigdecimal#n_significant_digits()","rails actiondispatch::middlewarestack::middleware#name()","rails activerecord::faker::name()","rails activerecord::tasks::databasetasks#name()","rails activesupport::timewithzone::name()","ruby encoding#name()","ruby gem::basicspecification#name()","ruby gem::resolver::activationrequest#name()","ruby gem::resolver::dependencyrequest#name()","ruby gem::resolver::specspecification#name()","ruby gem::unsatisfiabledependencyerror#name()","ruby method#name()","ruby module#name()","ruby nameerror#name()","ruby openssl::cipher#name()","ruby openssl::digest#name()","ruby openssl::engine#name()","ruby rdoc::anymethod#name()","ruby ractor#name()","ruby socket::ifaddr#name()","ruby symbol#name()","ruby thread#name()","ruby unboundmethod#name()","ruby win32ole::method#name()","ruby win32ole::param#name()","ruby win32ole::type#name()","ruby win32ole::typelib#name()","ruby win32ole::variable#name()","ruby win32::registry#name()","ruby cgi::cookie#name=()","ruby rdoc::classmodule#name=()","ruby thread#name=()","ruby gem::resolver#name_for()","ruby rdoc::classmodule#name_for_path()","ruby rdoc::context#name_for_path()","ruby encoding::name_list()","ruby gem::security::trustdir#name_path()","ruby rdoc::alias#name_prefix()","ruby rdoc::methodattr#name_prefix()","ruby gem::specification#name_tuple()","ruby matchdata#named_captures()","ruby regexp#named_captures()","ruby stringscanner#named_captures()","ruby encoding#names()","ruby matchdata#names()","ruby regexp#names()","ruby didyoumean::methodnamechecker#names_to_exclude()","rails actiondispatch::routing::mapper::resources#namespace()","rails actiondispatch::routing::mapper::scoping#namespace()","rails rails::command::base::namespace()","rails rails::generators::base::namespace()","rails rails::generators::base#namespace()","rails rails::generators::base#namespaced?()","rails rails::generators::namedbase#namespaced_class_path()","rails rails::generators::base#namespaced_path()","ruby bigdecimal#nan?()","ruby float#nan?()","ruby ipaddr#native()","rails activerecord::connectionadapters::abstractmysqladapter#native_database_types()","rails activerecord::connectionadapters::schemastatements#native_database_types()","ruby thread#native_thread_id()","ruby fiddle::function#need_gvl?()","ruby gem::needs()","ruby float#negative?()","ruby numeric#negative?()","ruby openssl::bn#negative?()","ruby rational#negative?()","rails actioncontroller::mimeresponds::collector#negotiate_format()","rails actiondispatch::http::mimenegotiation#negotiate_mime()","ruby prettyprint#nest()","rails actiondispatch::routing::mapper::resources#nested()","rails actioncontroller::parameters#nested_attributes?()","rails activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","rails activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","rails hash#nested_under_indifferent_access()","ruby module::nesting()","ruby ipaddr#netmask()","ruby socket::ifaddr#netmask()","rails abstractcontroller::doublerendererror::new()","rails abstractcontroller::helpers::missinghelpererror::new()","rails actioncable::channel::base::new()","rails actioncable::connection::base::new()","rails actioncable::connection::streameventloop::new()","rails actioncable::connection::taggedloggerproxy::new()","rails actioncable::remoteconnections::new()","rails actioncable::remoteconnections::remoteconnection::new()","rails actioncable::server::base::new()","rails actioncable::server::broadcasting::broadcaster::new()","rails actioncable::server::configuration::new()","rails actioncable::subscriptionadapter::async::asyncsubscribermap::new()","rails actioncable::subscriptionadapter::base::new()","rails actioncable::subscriptionadapter::postgresql::listener::new()","rails actioncable::subscriptionadapter::redis::listener::new()","rails actioncable::subscriptionadapter::redis::listener::subscribedclient::new()","rails actioncable::subscriptionadapter::subscribermap::new()","rails actioncontroller::live::sse::new()","rails actioncontroller::metal::new()","rails actioncontroller::mimeresponds::collector::new()","rails actioncontroller::missingrenderer::new()","rails actioncontroller::parameters::new()","rails actioncontroller::renderer::new()","rails actioncontroller::renderer#new()","rails actioncontroller::requestforgeryprotection::protectionmethods::exception::new()","rails actioncontroller::requestforgeryprotection::protectionmethods::nullsession::new()","rails actioncontroller::requestforgeryprotection::protectionmethods::resetsession::new()","rails actioncontroller::respondtomismatcherror::new()","rails actiondispatch::callbacks::new()","rails actiondispatch::contentsecuritypolicy::new()","rails actiondispatch::contentsecuritypolicy::middleware::new()","rails actiondispatch::cookies::new()","rails actiondispatch::debugexceptions::new()","rails actiondispatch::debuglocks::new()","rails actiondispatch::exceptionwrapper::new()","rails actiondispatch::executor::new()","rails actiondispatch::filehandler::new()","rails actiondispatch::flash::new()","rails actiondispatch::hostauthorization::new()","rails actiondispatch::http::filterparameters::new()","rails actiondispatch::http::parameters::parseerror::new()","rails actiondispatch::http::url::new()","rails actiondispatch::middlewarestack::new()","rails actiondispatch::middlewarestack::instrumentationproxy::new()","rails actiondispatch::middlewarestack::middleware::new()","rails actiondispatch::permissionspolicy::new()","rails actiondispatch::permissionspolicy::middleware::new()","rails actiondispatch::publicexceptions::new()","rails actiondispatch::railsentitystore::new()","rails actiondispatch::railsmetastore::new()","rails actiondispatch::remoteip::new()","rails actiondispatch::remoteip::getip::new()","rails actiondispatch::request::new()","rails actiondispatch::requestid::new()","rails actiondispatch::response::new()","rails actiondispatch::response::rackbody::new()","rails actiondispatch::routing::consoleformatter::base::new()","rails actiondispatch::routing::consoleformatter::expanded::new()","rails actiondispatch::routing::htmltableformatter::new()","rails actiondispatch::routing::mapper::resources#new()","rails actiondispatch::routing::urlfor::new()","rails actiondispatch::servertiming::new()","rails actiondispatch::session::cachestore::new()","rails actiondispatch::session::compatibility::new()","rails actiondispatch::session::cookiestore::new()","rails actiondispatch::session::cookiestore::sessionid::new()","rails actiondispatch::session::memcachestore::new()","rails actiondispatch::showexceptions::new()","rails actiondispatch::static::new()","rails actionmailbox::base::new()","rails actionmailbox::inboundemail::incineratable::incineration::new()","rails actionmailbox::ingresses::mailgun::inboundemailscontroller::authenticator::new()","rails actionmailbox::ingresses::mandrill::inboundemailscontroller::authenticator::new()","rails actionmailbox::relayer::new()","rails actionmailbox::router::new()","rails actionmailbox::router::route::new()","rails actionmailer::base::new()","rails actionmailer::collector::new()","rails actionmailer::preview::new()","rails actiontext::attachables::remoteimage::new()","rails actiontext::attachment::new()","rails actiontext::attachmentgallery::new()","rails actiontext::content::new()","rails actiontext::fragment::new()","rails actiontext::trixattachment::new()","rails actionview::abstractrenderer::renderedcollection::emptycollection::new()","rails actionview::cacheexpiry::executor::new()","rails actionview::cacheexpiry::viewmodificationwatcher::new()","rails actionview::digestor::node::new()","rails actionview::filesystemresolver::new()","rails actionview::helpers::formbuilder::new()","rails actionview::helpers::numberhelper::invalidnumbererror::new()","rails actionview::logsubscriber::new()","rails actionview::partialiteration::new()","rails actionview::partialrenderer::new()","rails actionview::renderer::new()","rails actionview::rendering::new()","rails actionview::template::new()","rails actionview::template::sources::file::new()","rails actionview::template::types::type::new()","rails actionview::templatedetails::requested::new()","rails actionview::templatepath::new()","rails actionview::unboundtemplate::new()","rails activejob::core::new()","rails activejob::queueadapters::asyncadapter::new()","rails activejob::queueadapters::sneakersadapter::new()","rails activemodel::api::new()","rails activemodel::eachvalidator::new()","rails activemodel::error::new()","rails activemodel::errors::new()","rails activemodel::name::new()","rails activemodel::nestederror::new()","rails activemodel::securepassword::instancemethodsonactivation::new()","rails activemodel::type::value::new()","rails activemodel::type::value::new()","rails activemodel::unknownattributeerror::new()","rails activemodel::unknownattributeerror::new()","rails activemodel::validationerror::new()","rails activemodel::validations::acceptancevalidator::lazilydefineattributes::new()","rails activemodel::validator::new()","rails activerecord::associations::collectionproxy#new()","rails activerecord::associations::preloader::association::loaderquery::new()","rails activerecord::associations::preloader::association::loaderrecords::new()","rails activerecord::attributeassignmenterror::new()","rails activerecord::attributemethods::serialization::columnnotserializableerror::new()","rails activerecord::connectionadapters::abstractadapter::version::new()","rails activerecord::connectionadapters::abstractmysqladapter::new()","rails activerecord::connectionadapters::connectionhandler::new()","rails activerecord::connectionadapters::connectionpool::new()","rails activerecord::connectionadapters::connectionpool::queue::new()","rails activerecord::connectionadapters::connectionpool::reaper::new()","rails activerecord::connectionadapters::databasestatements::new()","rails activerecord::connectionadapters::deduplicable::classmethods#new()","rails activerecord::connectionadapters::mysql::tabledefinition::new()","rails activerecord::connectionadapters::mysql2adapter::new()","rails activerecord::connectionadapters::postgresql::altertable::new()","rails activerecord::connectionadapters::postgresql::oid::bit::data::new()","rails activerecord::connectionadapters::postgresql::quoting::integeroutof64bitrange::new()","rails activerecord::connectionadapters::postgresql::tabledefinition::new()","rails activerecord::connectionadapters::postgresqladapter::new()","rails activerecord::connectionadapters::querycache::new()","rails activerecord::connectionadapters::querycache::connectionpoolconfiguration::new()","rails activerecord::connectionadapters::sqlite3adapter::new()","rails activerecord::connectionadapters::savepointtransaction::new()","rails activerecord::connectionadapters::schemacache::new()","rails activerecord::connectionadapters::table::new()","rails activerecord::connectionadapters::tabledefinition::new()","rails activerecord::connectionadapters::transactionstate::new()","rails activerecord::core::new()","rails activerecord::databaseconfigurations::new()","rails activerecord::databaseconfigurations::hashconfig::new()","rails activerecord::databaseconfigurations::urlconfig::new()","rails activerecord::databaseconnectionerror::new()","rails activerecord::dynamicmatchers::method::new()","rails activerecord::eagerloadpolymorphicerror::new()","rails activerecord::encryption::cipher::aes256gcm::new()","rails activerecord::encryption::config::new()","rails activerecord::encryption::context::new()","rails activerecord::encryption::derivedsecretkeyprovider::new()","rails activerecord::encryption::deterministickeyprovider::new()","rails activerecord::encryption::encryptedattributetype::new()","rails activerecord::encryption::encryptedfixtures::new()","rails activerecord::encryption::extendeddeterministicqueries::additionalvalue::new()","rails activerecord::encryption::key::new()","rails activerecord::encryption::keyprovider::new()","rails activerecord::encryption::message::new()","rails activerecord::encryption::properties::new()","rails activerecord::encryption::scheme::new()","rails activerecord::environmentmismatcherror::new()","rails activerecord::fixtureset::new()","rails activerecord::fixtureset::classcache::new()","rails activerecord::futureresult::eventbuffer::new()","rails activerecord::inheritance::classmethods#new()","rails activerecord::middleware::databaseselector::new()","rails activerecord::middleware::shardselector::new()","rails activerecord::migration::new()","rails activerecord::migration::checkpending::new()","rails activerecord::migration::commandrecorder::new()","rails activerecord::migrationcontext::new()","rails activerecord::mismatchedforeignkey::new()","rails activerecord::multiparameterassignmenterrors::new()","rails activerecord::nodatabaseerror::new()","rails activerecord::recordinvalid::new()","rails activerecord::recordnotdestroyed::new()","rails activerecord::recordnotfound::new()","rails activerecord::recordnotsaved::new()","rails activerecord::reflection::macroreflection::new()","rails activerecord::relation#new()","rails activerecord::relation::new()","rails activerecord::result::new()","rails activerecord::solerecordexceeded::new()","rails activerecord::staleobjecterror::new()","rails activerecord::statementcache::partialquerycollector::new()","rails activerecord::statementinvalid::new()","rails activerecord::unknownprimarykey::new()","rails activestorage::analyzer::new()","rails activestorage::attached::new()","rails activestorage::filename::new()","rails activestorage::preview::new()","rails activestorage::previewer::new()","rails activestorage::service::azurestorageservice::new()","rails activestorage::service::diskservice::new()","rails activestorage::service::gcsservice::new()","rails activestorage::service::mirrorservice::new()","rails activestorage::service::s3service::new()","rails activestorage::transformers::transformer::new()","rails activestorage::variant::new()","rails activestorage::variantwithrecord::new()","rails activestorage::variation::new()","rails activesupport::backtracecleaner::new()","rails activesupport::cache::filestore::new()","rails activesupport::cache::memcachestore::new()","rails activesupport::cache::memorystore::new()","rails activesupport::cache::rediscachestore::new()","rails activesupport::cache::store::new()","rails activesupport::cache::strategy::localcache::localstore::new()","rails activesupport::cachingkeygenerator::new()","rails activesupport::callbacks::calltemplate::instanceexec0::new()","rails activesupport::callbacks::calltemplate::instanceexec1::new()","rails activesupport::callbacks::calltemplate::instanceexec2::new()","rails activesupport::callbacks::calltemplate::methodcall::new()","rails activesupport::callbacks::calltemplate::objectcall::new()","rails activesupport::callbacks::calltemplate::proccall::new()","rails activesupport::callbacks::conditionals::value::new()","rails activesupport::codegenerator::methodset::new()","rails activesupport::concurrency::sharelock::new()","rails activesupport::currentattributes::new()","rails activesupport::deprecation::new()","rails activesupport::deprecation::deprecatedconstantproxy::new()","rails activesupport::deprecation::deprecatedconstantproxy::new()","rails activesupport::deprecation::deprecatedinstancevariableproxy::new()","rails activesupport::deprecation::deprecatedobjectproxy::new()","rails activesupport::encryptedconfiguration::new()","rails activesupport::encryptedfile::new()","rails activesupport::encryptedfile::invalidkeylengtherror::new()","rails activesupport::encryptedfile::missingcontenterror::new()","rails activesupport::encryptedfile::missingkeyerror::new()","rails activesupport::errorreporter::new()","rails activesupport::fileupdatechecker::new()","rails activesupport::gzip::stream::new()","rails activesupport::hashwithindifferentaccess::new()","rails activesupport::hashwithindifferentaccess::new()","rails activesupport::inflector::inflections::new()","rails activesupport::inflector::inflections::uncountables::new()","rails activesupport::inheritableoptions::new()","rails activesupport::keygenerator::new()","rails activesupport::logger::new()","rails activesupport::messageencryptor::new()","rails activesupport::messageverifier::new()","rails activesupport::multibyte::chars::new()","rails activesupport::notifications::event::new()","rails activesupport::notifications::fanout::new()","rails activesupport::notifications::instrumentationsubscribererror::new()","rails activesupport::notifications::instrumenter::new()","rails activesupport::parameterfilter::new()","rails activesupport::reloader::new()","rails activesupport::safebuffer::new()","rails activesupport::safebuffer::safeconcaterror::new()","rails activesupport::securecomparerotator::new()","rails activesupport::subscriber::new()","rails activesupport::taggedlogging::new()","rails activesupport::timewithzone::new()","rails activesupport::timezone::new()","rails activesupport::timezone::new()","rails activesupport::xmlconverter::disallowedtype::new()","rails announcement::version::new()","rails codetools::profiler::new()","rails mime::alltype::new()","rails mime::mimes::new()","rails mime::type::new()","rails rails::api::task::new()","rails rails::application::new()","rails rails::application::configuration::new()","rails rails::application::defaultmiddlewarestack::new()","rails rails::application::routesreloader::new()","rails rails::backtracecleaner::new()","rails rails::configuration::middlewarestackproxy::new()","rails rails::console::new()","rails rails::dbconsole::new()","rails rails::engine::new()","rails rails::engine::configuration::new()","rails rails::engine::railties::new()","rails rails::generators::activemodel::new()","rails rails::generators::appbase::gemfileentry::new()","rails rails::initializable::initializer::new()","rails rails::paths::path::new()","rails rails::paths::root::new()","rails rails::rack::logger::new()","rails rails::rails::conductor::actionmailbox::inboundemails::sourcescontroller#new()","rails rails::rails::conductor::actionmailbox::inboundemailscontroller#new()","rails rails::railtie::configuration::new()","rails rails::secrets::missingkeyerror::new()","rails rails::server::new()","rails rails::sourceannotationextractor::new()","ruby acl::new()","ruby acl::aclentry::new()","ruby acl::acllist::new()","ruby addrinfo::new()","ruby array::new()","ruby basicobject::new()","ruby benchmark::tms::new()","ruby cgi::new()","ruby cgi::cookie::new()","ruby cgi::session::new()","ruby cgi::session::filestore::new()","ruby cgi::session::memorystore::new()","ruby cgi::session::nullstore::new()","ruby cgi::session::pstore::new()","ruby csv::new()","ruby csv::fieldsconverter::new()","ruby csv::invalidencodingerror::new()","ruby csv::malformedcsverror::new()","ruby csv::parser::new()","ruby csv::parser::inputsscanner::new()","ruby csv::parser::scanner::new()","ruby csv::row::new()","ruby csv::table::new()","ruby csv::writer::new()","ruby class#new()","ruby class::new()","ruby coreextensions::tcpsocketext::initializer::new()","ruby drb::drbarray::new()","ruby drb::drbobject::new()","ruby drb::drbobject::new()","ruby drb::drbremoteerror::new()","ruby drb::drbsslsocket::new()","ruby drb::drbsslsocket::sslconfig::new()","ruby drb::drbserver::new()","ruby drb::drbunknown::new()","ruby drb::drbunknownerror::new()","ruby drb::extserv::new()","ruby drb::extservmanager::new()","ruby drb::gw::new()","ruby drb::threadobject::new()","ruby drb::timeridconv::new()","ruby drb::weakidconv::new()","ruby drb::weakidconv::weakset::new()","ruby data::new()","ruby date::new()","ruby datetime::new()","ruby delegator::new()","ruby didyoumean::classnamechecker::new()","ruby didyoumean::classnamechecker::classname::new()","ruby didyoumean::keyerrorchecker::new()","ruby didyoumean::methodnamechecker::new()","ruby didyoumean::nullchecker::new()","ruby didyoumean::patternkeynamechecker::new()","ruby didyoumean::requirepathchecker::new()","ruby didyoumean::spellchecker::new()","ruby didyoumean::treespellchecker::new()","ruby didyoumean::variablenamechecker::new()","ruby digest::instance#new()","ruby digest::sha2::new()","ruby dir::new()","ruby erb::new()","ruby encoding::converter::new()","ruby enumerator::new()","ruby enumerator::chain::new()","ruby enumerator::lazy::new()","ruby enumerator::product::new()","ruby errorhighlight::spotter::new()","ruby exception::new()","ruby fiber::new()","ruby fiber::pool::new()","ruby fiddle::cstructentity::new()","ruby fiddle::closure::new()","ruby fiddle::closure::blockcaller::new()","ruby fiddle::compositehandler::new()","ruby fiddle::function::new()","ruby fiddle::handle::new()","ruby fiddle::pinned::new()","ruby fiddle::pointer::new()","ruby fiddle::structarray::new()","ruby file::new()","ruby file::stat::new()","ruby frozenerror::new()","ruby gem::availableset::new()","ruby gem::basicspecification::new()","ruby gem::command::new()","ruby gem::commandmanager::new()","ruby gem::commands::buildcommand::new()","ruby gem::commands::certcommand::new()","ruby gem::commands::checkcommand::new()","ruby gem::commands::cleanupcommand::new()","ruby gem::commands::contentscommand::new()","ruby gem::commands::dependencycommand::new()","ruby gem::commands::environmentcommand::new()","ruby gem::commands::execcommand::new()","ruby gem::commands::fetchcommand::new()","ruby gem::commands::generateindexcommand::new()","ruby gem::commands::helpcommand::new()","ruby gem::commands::infocommand::new()","ruby gem::commands::installcommand::new()","ruby gem::commands::listcommand::new()","ruby gem::commands::lockcommand::new()","ruby gem::commands::mirrorcommand::new()","ruby gem::commands::opencommand::new()","ruby gem::commands::outdatedcommand::new()","ruby gem::commands::ownercommand::new()","ruby gem::commands::pristinecommand::new()","ruby gem::commands::pushcommand::new()","ruby gem::commands::querycommand::new()","ruby gem::commands::rdoccommand::new()","ruby gem::commands::rebuildcommand::new()","ruby gem::commands::searchcommand::new()","ruby gem::commands::servercommand::new()","ruby gem::commands::setupcommand::new()","ruby gem::commands::signincommand::new()","ruby gem::commands::signoutcommand::new()","ruby gem::commands::sourcescommand::new()","ruby gem::commands::specificationcommand::new()","ruby gem::commands::stalecommand::new()","ruby gem::commands::uninstallcommand::new()","ruby gem::commands::unpackcommand::new()","ruby gem::commands::updatecommand::new()","ruby gem::commands::whichcommand::new()","ruby gem::commands::yankcommand::new()","ruby gem::configfile::new()","ruby gem::conflicterror::new()","ruby gem::consoleui::new()","ruby gem::dependency::new()","ruby gem::dependencyinstaller::new()","ruby gem::dependencylist::new()","ruby gem::dependencyresolutionerror::new()","ruby gem::doctor::new()","ruby gem::ext::builder::new()","ruby gem::ext::cargobuilder::new()","ruby gem::ext::cargobuilder::dylibnotfounderror::new()","ruby gem::filepermissionerror::new()","ruby gem::gemrunner::new()","ruby gem::gemcutterutilities::webauthnlistener::new()","ruby gem::gemcutterutilities::webauthnlistener::response::new()","ruby gem::gemcutterutilities::webauthnlistener::socketresponder::new()","ruby gem::gemcutterutilities::webauthnpoller::new()","ruby gem::impossibledependencieserror::new()","ruby gem::installer::new()","ruby gem::installer::fakepackage::new()","ruby gem::missingspecerror::new()","ruby gem::missingspecversionerror::new()","ruby gem::nametuple::new()","ruby gem::package::new()","ruby gem::package::digestio::new()","ruby gem::package::formaterror::new()","ruby gem::package::old::new()","ruby gem::package::patherror::new()","ruby gem::package::symlinkerror::new()","ruby gem::package::tarheader::new()","ruby gem::package::tarreader::new()","ruby gem::package::tarreader::new()","ruby gem::package::tarreader::entry::new()","ruby gem::package::tarwriter::new()","ruby gem::package::tarwriter::new()","ruby gem::package::tarwriter::boundedstream::new()","ruby gem::package::tarwriter::restrictedstream::new()","ruby gem::packagetask::new()","ruby gem::pathsupport::new()","ruby gem::platform::new()","ruby gem::platformmismatch::new()","ruby gem::remotefetcher::new()","ruby gem::remotefetcher::fetcherror::new()","ruby gem::request::new()","ruby gem::requestset::new()","ruby gem::requestset::gemdependencyapi::new()","ruby gem::requestset::lockfile::new()","ruby gem::requestset::lockfile::parseerror::new()","ruby gem::requestset::lockfile::parser::new()","ruby gem::requestset::lockfile::tokenizer::new()","ruby gem::requirement::new()","ruby gem::resolver::new()","ruby gem::resolver::apiset::new()","ruby gem::resolver::apispecification::new()","ruby gem::resolver::apispecification::new()","ruby gem::resolver::activationrequest::new()","ruby gem::resolver::bestset::new()","ruby gem::resolver::composedset::new()","ruby gem::resolver::conflict::new()","ruby gem::resolver::dependencyrequest::new()","ruby gem::resolver::indexspecification::new()","ruby gem::resolver::installerset::new()","ruby gem::resolver::lockset::new()","ruby gem::resolver::lockspecification::new()","ruby gem::resolver::requirementlist::new()","ruby gem::resolver::sourceset::new()","ruby gem::resolver::specspecification::new()","ruby gem::resolver::specification::new()","ruby gem::resolver::stats::new()","ruby gem::s3urisigner::new()","ruby gem::s3urisigner::configurationerror::new()","ruby gem::s3urisigner::instanceprofileerror::new()","ruby gem::safemarshal::elements::array::new()","ruby gem::safemarshal::elements::bignum::new()","ruby gem::safemarshal::elements::false::new()","ruby gem::safemarshal::elements::float::new()","ruby gem::safemarshal::elements::hash::new()","ruby gem::safemarshal::elements::hashwithdefaultvalue::new()","ruby gem::safemarshal::elements::integer::new()","ruby gem::safemarshal::elements::object::new()","ruby gem::safemarshal::elements::objectlink::new()","ruby gem::safemarshal::elements::string::new()","ruby gem::safemarshal::elements::symbol::new()","ruby gem::safemarshal::elements::symbollink::new()","ruby gem::safemarshal::elements::true::new()","ruby gem::safemarshal::elements::userclass::new()","ruby gem::safemarshal::elements::userdefined::new()","ruby gem::safemarshal::elements::usermarshal::new()","ruby gem::safemarshal::elements::withivars::new()","ruby gem::safemarshal::reader::new()","ruby gem::safemarshal::visitors::streamprinter::new()","ruby gem::safemarshal::visitors::toruby::new()","ruby gem::safemarshal::visitors::toruby::unpermittedclasserror::new()","ruby gem::safemarshal::visitors::toruby::unpermittedivarerror::new()","ruby gem::safemarshal::visitors::toruby::unpermittedsymbolerror::new()","ruby gem::safemarshal::visitors::toruby::unsupportederror::new()","ruby gem::security::policy::new()","ruby gem::security::signer::new()","ruby gem::security::trustdir::new()","ruby gem::silentui::new()","ruby gem::source::new()","ruby gem::source::git::new()","ruby gem::source::lock::new()","ruby gem::source::specificfile::new()","ruby gem::source::vendor::new()","ruby gem::sourcefetchproblem::new()","ruby gem::sourcelist::new()","ruby gem::specfetcher::new()","ruby gem::specificgemnotfoundexception::new()","ruby gem::specification::new()","ruby gem::specificationpolicy::new()","ruby gem::streamui::new()","ruby gem::streamui::silentdownloadreporter::new()","ruby gem::streamui::silentprogressreporter::new()","ruby gem::streamui::simpleprogressreporter::new()","ruby gem::streamui::threadeddownloadreporter::new()","ruby gem::streamui::verboseprogressreporter::new()","ruby gem::systemexitexception::new()","ruby gem::uninstaller::new()","ruby gem::unknowncommanderror::new()","ruby gem::unknowncommandspellchecker::new()","ruby gem::unsatisfiabledependencyerror::new()","ruby gem::uri::new()","ruby gem::uriformatter::new()","ruby gem::version::new()","ruby gem::webauthnverificationerror::new()","ruby getoptlong::new()","ruby hash::new()","ruby io::new()","ruby io::buffer::new()","ruby ipaddr::new()","ruby irb::canvas::new()","ruby irb::color::symbolstate::new()","ruby irb::context::new()","ruby irb::debug::ui::new()","ruby irb::fileinputmethod::new()","ruby irb::frame::new()","ruby irb::frame::frameoverflow::new()","ruby irb::frame::frameunderflow::new()","ruby irb::inspector::new()","ruby irb::irb::new()","ruby irb::jobmanager::new()","ruby irb::locale::new()","ruby irb::notifier::abstractnotifier::new()","ruby irb::notifier::compositenotifier::new()","ruby irb::notifier::errundefinednotifier::new()","ruby irb::notifier::errunrecognizedlevel::new()","ruby irb::notifier::levelednotifier::new()","ruby irb::notifier::nomsgnotifier::new()","ruby irb::outputmethod::notimplementederror::new()","ruby irb::readlineinputmethod::new()","ruby irb::reidlineinputmethod::new()","ruby irb::relineinputmethod::new()","ruby irb::rubymodel::new()","ruby irb::sourcefinder::new()","ruby irb::statement::command::new()","ruby irb::statement::expression::new()","ruby irb::stdioinputmethod::new()","ruby irb::vec::new()","ruby irb::workspace::new()","ruby json::ext::generator::state::new()","ruby json::ext::parser::new()","ruby keyerror::new()","ruby logger::new()","ruby logger::formatter::new()","ruby logger::logdevice::new()","ruby module::new()","ruby monitormixin::new()","ruby monitormixin::conditionvariable::new()","ruby nameerror::new()","ruby net::http::new()","ruby net::httprequest::new()","ruby net::readtimeout::new()","ruby net::writeadapter::new()","ruby net::writetimeout::new()","ruby nomatchingpatternkeyerror::new()","ruby nomethoderror::new()","ruby oleproperty::new()","ruby openssl::asn1::asn1data::new()","ruby openssl::asn1::constructive::new()","ruby openssl::asn1::primitive::new()","ruby openssl::bn::new()","ruby openssl::buffering::new()","ruby openssl::buffering::buffer::new()","ruby openssl::cipher::new()","ruby openssl::config::new()","ruby openssl::digest::new()","ruby openssl::hmac::new()","ruby openssl::netscape::spki::new()","ruby openssl::ocsp::basicresponse::new()","ruby openssl::ocsp::certificateid::new()","ruby openssl::ocsp::request::new()","ruby openssl::ocsp::response::new()","ruby openssl::ocsp::singleresponse::new()","ruby openssl::pkcs12::new()","ruby openssl::pkcs7::new()","ruby openssl::pkcs7::recipientinfo::new()","ruby openssl::pkcs7::signerinfo::new()","ruby openssl::pkey::dh::new()","ruby openssl::pkey::dsa::new()","ruby openssl::pkey::ec::new()","ruby openssl::pkey::ec::group::new()","ruby openssl::pkey::ec::point::new()","ruby openssl::pkey::pkey::new()","ruby openssl::pkey::rsa::new()","ruby openssl::ssl::sslcontext::new()","ruby openssl::ssl::sslserver::new()","ruby openssl::ssl::sslsocket::new()","ruby openssl::ssl::session::new()","ruby openssl::timestamp::request::new()","ruby openssl::timestamp::response::new()","ruby openssl::timestamp::tokeninfo::new()","ruby openssl::x509::attribute::new()","ruby openssl::x509::crl::new()","ruby openssl::x509::certificate::new()","ruby openssl::x509::extension::new()","ruby openssl::x509::extensionfactory::new()","ruby openssl::x509::name::new()","ruby openssl::x509::request::new()","ruby openssl::x509::revoked::new()","ruby openssl::x509::store::new()","ruby openssl::x509::storecontext::new()","ruby openstruct::new()","ruby openuri::httperror::new()","ruby openuri::httpredirect::new()","ruby optionparser::new()","ruby optionparser#new()","ruby optionparser::arguable::new()","ruby optionparser::list::new()","ruby optionparser::parseerror::new()","ruby optionparser::switch::new()","ruby pstore::new()","ruby pathname::new()","ruby prettyprint::new()","ruby prettyprint::singleline::new()","ruby prism::comment::new()","ruby prism::location::new()","ruby prism::magiccomment::new()","ruby prism::pack::directive::new()","ruby prism::pack::format::new()","ruby prism::parseerror::new()","ruby prism::parseresult::new()","ruby prism::parseresult::comments::new()","ruby prism::parseresult::newlines::new()","ruby prism::parsewarning::new()","ruby prism::pattern::new()","ruby prism::pattern::compilationerror::new()","ruby prism::rippercompat::new()","ruby prism::source::new()","ruby prism::token::new()","ruby proc::new()","ruby psych::aliasesnotenabled::new()","ruby psych::anchornotdefined::new()","ruby psych::classloader::restricted::new()","ruby psych::coder::new()","ruby psych::disallowedclass::new()","ruby psych::emitter::new()","ruby psych::handler::dumperoptions::new()","ruby psych::handlers::recorder::new()","ruby psych::nodes::alias::new()","ruby psych::nodes::document::new()","ruby psych::nodes::mapping::new()","ruby psych::nodes::node::new()","ruby psych::nodes::scalar::new()","ruby psych::nodes::sequence::new()","ruby psych::nodes::stream::new()","ruby psych::parser::new()","ruby psych::scalarscanner::new()","ruby psych::streaming::classmethods#new()","ruby psych::syntaxerror::new()","ruby psych::treebuilder::new()","ruby psych::visitors::depthfirst::new()","ruby psych::visitors::emitter::new()","ruby psych::visitors::restrictedyamltree::new()","ruby psych::visitors::toruby::new()","ruby psych::visitors::yamltree::new()","ruby rdoc::alias::new()","ruby rdoc::anymethod::new()","ruby rdoc::attr::new()","ruby rdoc::classmodule::new()","ruby rdoc::codeobject::new()","ruby rdoc::comment::new()","ruby rdoc::constant::new()","ruby rdoc::context::new()","ruby rdoc::crossreference::new()","ruby rdoc::erbio::new()","ruby rdoc::markdown::new()","ruby rdoc::markup::new()","ruby rdoc::methodattr::new()","ruby rdoc::mixin::new()","ruby rdoc::parser::new()","ruby rdoc::parser::c::new()","ruby rdoc::parser::ripperstatelex::new()","ruby rdoc::parser::ruby::new()","ruby rdoc::parser::simple::new()","ruby rdoc::rdoc::new()","ruby rdoc::require::new()","ruby rdoc::rubygemshook::new()","ruby rdoc::rubygemshook::new()","ruby rdoc::servlet::new()","ruby rdoc::stats::new()","ruby rdoc::store::new()","ruby rdoc::store::missingfileerror::new()","ruby rdoc::task::new()","ruby rdoc::tomdoc::new()","ruby rdoc::toplevel::new()","ruby ractor::new()","ruby random::new()","ruby range::new()","ruby regexp::new()","ruby reline::config::new()","ruby reline::core::new()","ruby reline::face::config::new()","ruby reline::history::new()","ruby reline::keyactor::base::new()","ruby reline::keystroke::new()","ruby reline::killring::new()","ruby reline::killring::ringbuffer::new()","ruby reline::lineeditor::new()","ruby reline::lineeditor::dialog::new()","ruby reline::lineeditor::dialogprocscope::new()","ruby reline::windows::keyeventrecord::new()","ruby reline::windows::win32api::new()","ruby resolv::new()","ruby resolv::dns::new()","ruby resolv::dns::resource::domainname::new()","ruby resolv::dns::resource::generic::new()","ruby resolv::dns::resource::hinfo::new()","ruby resolv::dns::resource::in::a::new()","ruby resolv::dns::resource::in::aaaa::new()","ruby resolv::dns::resource::in::srv::new()","ruby resolv::dns::resource::in::servicebinding::new()","ruby resolv::dns::resource::in::wks::new()","ruby resolv::dns::resource::loc::new()","ruby resolv::dns::resource::minfo::new()","ruby resolv::dns::resource::mx::new()","ruby resolv::dns::resource::soa::new()","ruby resolv::dns::resource::txt::new()","ruby resolv::dns::svcparam::alpn::new()","ruby resolv::dns::svcparam::dohpath::new()","ruby resolv::dns::svcparam::generic::new()","ruby resolv::dns::svcparam::ipv4hint::new()","ruby resolv::dns::svcparam::ipv6hint::new()","ruby resolv::dns::svcparam::mandatory::new()","ruby resolv::dns::svcparam::port::new()","ruby resolv::dns::svcparams::new()","ruby resolv::hosts::new()","ruby resolv::loc::alt::new()","ruby resolv::loc::coord::new()","ruby resolv::loc::size::new()","ruby resolv::mdns::new()","ruby rinda::drbobjecttemplate::new()","ruby rinda::notifytemplateentry::new()","ruby rinda::ringfinger::new()","ruby rinda::ringprovider::new()","ruby rinda::ringserver::new()","ruby rinda::simplerenewer::new()","ruby rinda::tuple::new()","ruby rinda::tuplebag::tuplebin::new()","ruby rinda::tupleentry::new()","ruby rinda::tuplespace::new()","ruby rinda::tuplespaceproxy::new()","ruby rinda::waittemplateentry::new()","ruby ripper::filter::new()","ruby ripper::lexer::elem::new()","ruby ripper::lexer::state::new()","ruby rubyvm::instructionsequence::new()","ruby sockssocket::new()","ruby sockssocket::new()","ruby set::new()","ruby signalexception::new()","ruby socket::new()","ruby socket::ancillarydata::new()","ruby socket::option::new()","ruby socket::udpsource::new()","ruby string::new()","ruby stringio::new()","ruby stringscanner::new()","ruby struct::new()","ruby syntaxerror::new()","ruby syntaxsuggest::aroundblockscan::new()","ruby syntaxsuggest::blockexpand::new()","ruby syntaxsuggest::capture::beforeafterkeywordends::new()","ruby syntaxsuggest::capture::fallingindentlines::new()","ruby syntaxsuggest::capturecodecontext::new()","ruby syntaxsuggest::cleandocument::new()","ruby syntaxsuggest::cli::new()","ruby syntaxsuggest::codeblock::new()","ruby syntaxsuggest::codefrontier::new()","ruby syntaxsuggest::codeline::new()","ruby syntaxsuggest::codesearch::new()","ruby syntaxsuggest::displaycodewithlinenumbers::new()","ruby syntaxsuggest::displayinvalidblocks::new()","ruby syntaxsuggest::explainsyntax::new()","ruby syntaxsuggest::leftrightlexcount::new()","ruby syntaxsuggest::lexall::new()","ruby syntaxsuggest::lexvalue::new()","ruby syntaxsuggest::ministringio::new()","ruby syntaxsuggest::parseblocksfromindentline::new()","ruby syntaxsuggest::pathnamefrommessage::new()","ruby syntaxsuggest::priorityengulfqueue::new()","ruby syntaxsuggest::priorityqueue::new()","ruby syntaxsuggest::scanhistory::new()","ruby syntaxsuggest::unvisitedlines::new()","ruby syslog::logger::new()","ruby systemcallerror::new()","ruby systemexit::new()","ruby tcpserver::new()","ruby tcpsocket::new()","ruby tcpsocket::new()","ruby tempfile::new()","ruby thread::new()","ruby thread::conditionvariable::new()","ruby thread::mutex::new()","ruby thread::queue::new()","ruby thread::sizedqueue::new()","ruby time::new()","ruby tracepoint::new()","ruby udpsocket::new()","ruby unixserver::new()","ruby unixsocket::new()","ruby uri::ftp::new()","ruby uri::generic::new()","ruby uri::ldap::new()","ruby uri::mailto::new()","ruby uri::rfc2396_parser::new()","ruby uri::rfc2396_parser::new()","ruby uncaughtthrowerror::new()","ruby win32ole::new()","ruby win32ole::event::new()","ruby win32ole::method::new()","ruby win32ole::param::new()","ruby win32ole::record::new()","ruby win32ole::type::new()","ruby win32ole::typelib::new()","ruby win32ole::variant::new()","ruby weakref::new()","ruby win32::registry::new()","ruby win32::registry::error::new()","ruby win32::registry::predefinedkey::new()","ruby win32::sspi::identity::new()","ruby win32::sspi::negotiateauth::new()","ruby win32::sspi::sspiresult::new()","ruby win32::sspi::securitybuffer::new()","ruby xmp::new()","ruby xmp::stringinputmethod::new()","ruby yaml::store::new()","ruby zlib::deflate::new()","ruby zlib::gzipreader::new()","ruby zlib::gzipwriter::new()","ruby zlib::inflate::new()","rails ","rails activerecord::connectionadapters::mysql2adapter::new_client()","rails activerecord::connectionadapters::postgresqladapter::new_client()","ruby rdoc::parser::c#new_comment()","ruby rdoc::parser::ruby#new_comment()","ruby monitor#new_cond()","ruby monitormixin#new_cond()","rails ","rails rails::generators::namedbase#new_helper()","ruby ipaddr::new_ntoh()","ruby datetime#new_offset()","ruby openssl::pkey::new_raw_private_key()","ruby openssl::pkey::new_raw_public_key()","rails activerecord::persistence#new_record?()","ruby random::new_seed()","rails rails::consolemethods#new_session()","ruby date#new_start()","ruby drb::drbobject::new_with()","ruby drb::drbobject::new_with()","ruby drb::drbobject::new_with_uri()","ruby drb::drbobject::new_with_uri()","ruby prism::debug::newlines()","ruby net::http::newobj()","ruby date#next()","ruby enumerator#next()","ruby integer#next()","ruby string#next()","ruby symbol#next()","ruby string#next!()","ruby gem::resolver::requirementlist#next5()","rails time#next_day()","ruby date#next_day()","rails activesupport::timewithzone#next_day?()","rails dateandtime::calculations#next_day?()","ruby syntaxsuggest::scanhistory#next_down()","ruby float#next_float()","ruby reline::lineeditor#next_history()","ruby syntaxsuggest::codefrontier#next_indent_line()","rails activerecord::generators::migration::classmethods#next_migration_number()","rails activerecord::migration#next_migration_number()","rails time#next_month()","ruby date#next_month()","rails dateandtime::calculations#next_occurring()","rails dateandtime::calculations#next_quarter()","ruby logger::period#next_rotate_time()","rails activerecord::modelschema::classmethods#next_sequence_value()","ruby gem::requestset::lockfile::tokenizer#next_token()","ruby syntaxsuggest::scanhistory#next_up()","ruby openssl::ocsp::singleresponse#next_update()","ruby openssl::x509::crl#next_update()","ruby openssl::x509::crl#next_update=()","ruby enumerator#next_values()","rails dateandtime::calculations#next_week()","rails dateandtime::calculations#next_weekday()","rails time#next_year()","ruby date#next_year()","rails mime::nulltype#nil?()","ruby nilclass#nil?()","ruby object#nil?()","ruby nkf::nkf()","ruby file::stat#nlink()","ruby newton#nlsolve()","rails actiondispatch::routing::consoleformatter::base#no_routes()","rails actiondispatch::routing::htmltableformatter#no_routes()","rails actioncontroller::conditionalget#no_store()","rails activerecord::notouching::classmethods#no_touching()","rails activerecord::notouching#no_touching?()","ruby integer#nobits?()","ruby ripper::lexer::state#nobits?()","ruby rubyvm::abstractsyntaxtree::node#node_id()","ruby rubyvm::abstractsyntaxtree::node_id_for_backtrace_location()","rails actiontext::htmlconversion#node_to_html()","rails actiontext::plaintextconversion#node_to_plain_text()","ruby io#noecho()","ruby rdoc::classmodule#non_aliases()","ruby gem::specification::non_nil_attributes()","rails actioncontroller::requestforgeryprotection#non_xhr_javascript_response?()","ruby io#nonblock()","ruby io#nonblock=()","ruby io#nonblock?()","rails actioncontroller::httpauthentication::digest#nonce()","ruby openssl::timestamp::request#nonce()","ruby openssl::timestamp::tokeninfo#nonce()","ruby openssl::timestamp::request#nonce=()","rails activerecord::querymethods#none()","rails activerecord::relation#none?()","ruby array#none?()","ruby enumerable#none?()","ruby gem::requirement#none?()","ruby bigdecimal#nonzero?()","ruby numeric#nonzero?()","rails date#noon()","rails datetime#noon()","rails time#noon()","ruby gem::specification#normalize()","ruby gem::uriformatter#normalize()","ruby irb::vec#normalize()","ruby rdoc::comment#normalize()","ruby uri::generic#normalize()","ruby uri::generic#normalize!()","rails actioncontroller::requestforgeryprotection#normalize_action_path()","ruby rdoc::text#normalize_comment()","rails actiondispatch::routing::mapper::normalize_name()","rails actiondispatch::routing::mapper::normalize_path()","ruby gem::package#normalize_path()","ruby gem::specification::normalize_yaml_input()","ruby rdoc::rdoc#normalized_file_list()","ruby gem::platform#normalized_linux_version()","rails activerecord::querymethods::wherechain#not()","ruby io::buffer#not!()","ruby openssl::x509::certificate#not_after()","ruby openssl::x509::certificate#not_after=()","ruby openssl::x509::certificate#not_before()","ruby openssl::x509::certificate#not_before=()","ruby syntaxsuggest::codeline#not_empty?()","ruby rdoc::servlet#not_found()","rails actiondispatch::http::cache::request#not_modified?()","ruby rdoc::markdown#note()","ruby rdoc::markdown#note_for()","ruby rdoc::markdown#notes()","rails actiondispatch::flash::flashhash#notice()","rails actiondispatch::flash::flashhash#notice=()","ruby rinda::notifytemplateentry#notify()","ruby rinda::tuplespace#notify()","ruby rinda::tuplespaceproxy#notify()","ruby irb::notifier::abstractnotifier#notify?()","ruby irb::notifier::levelednotifier#notify?()","ruby irb::notifier::nomsgnotifier#notify?()","ruby drb::drbobservable#notify_observers()","ruby observable#notify_observers()","rails actiondispatch::flash::flashhash#now()","rails activesupport::timezone#now()","ruby datetime::now()","ruby time::now()","rails actiondispatch::flash::flashhash#now_is_loaded?()","ruby openssl::ssl::sslsocket#npn_protocol()","ruby etc::nprocessors()","ruby io#nread()","rails datetime#nsec()","ruby time#nsec()","ruby ipaddr::ntop()","ruby gem::nametuple::null()","ruby prism::location::null()","ruby fiddle::pointer#null?()","ruby io::buffer#null?()","rails activerecord::connectionadapters::transactionstate#nullify!()","ruby openssl::bn#num_bits()","ruby openssl::bn#num_bytes()","rails activerecord::connectionadapters::connectionpool::queue#num_waiting()","ruby thread::queue#num_waiting()","ruby thread::sizedqueue#num_waiting()","rails actionview::helpers::formbuilder#number_field()","rails actionview::helpers::formhelper#number_field()","rails actionview::helpers::formtaghelper#number_field_tag()","rails actionview::helpers::numberhelper#number_to_currency()","rails activesupport::numberhelper#number_to_currency()","rails activesupport::numberhelper#number_to_delimited()","rails actionview::helpers::numberhelper#number_to_human()","rails activesupport::numberhelper#number_to_human()","rails actionview::helpers::numberhelper#number_to_human_size()","rails activesupport::numberhelper#number_to_human_size()","rails actionview::helpers::numberhelper#number_to_percentage()","rails activesupport::numberhelper#number_to_percentage()","rails actionview::helpers::numberhelper#number_to_phone()","rails activesupport::numberhelper#number_to_phone()","rails activesupport::numberhelper#number_to_rounded()","rails actionview::helpers::numberhelper#number_with_delimiter()","rails actionview::helpers::numberhelper#number_with_precision()","ruby complex#numerator()","ruby float#numerator()","ruby integer#numerator()","ruby numeric#numerator()","ruby rational#numerator()","rails activerecord::connectionadapters::postgresql::columnmethods#numrange()","rails actionview::helpers::activemodelinstancetag#object()","ruby pp::ppmethods#object_address_group()","ruby rdoc::toplevel#object_class()","ruby pp::ppmethods#object_group()","ruby object#object_id()","ruby json::ext::generator::state#object_nl()","ruby json::ext::generator::state#object_nl=()","ruby openssl::x509::extension::authorityinfoaccess#ocsp_uris()","ruby string#oct()","ruby gem::package::tarheader::oct_or_256based()","ruby integer#odd?()","ruby openssl::bn#odd?()","ruby rubyvm::abstractsyntaxtree::of()","ruby rubyvm::instructionsequence::of()","rails activemodel::errors#of_kind?()","ruby win32ole::event#off_event()","rails activerecord::querymethods#offset()","ruby datetime#offset()","ruby matchdata#offset()","ruby win32ole::method#offset_vtbl()","ruby io#oflush()","rails activerecord::connectionadapters::postgresql::columnmethods#oid()","ruby openssl::asn1::objectid#oid()","ruby openssl::pkey::pkey#oid()","ruby openssl::x509::attribute#oid()","ruby openssl::x509::extension#oid()","ruby openssl::x509::attribute#oid=()","ruby openssl::x509::extension#oid=()","ruby gem::dependencylist#ok?()","ruby win32::sspi::sspiresult#ok?()","ruby gem::dependencylist#ok_to_remove?()","ruby win32ole#ole_activex_initialize()","ruby win32ole::type::ole_classes()","ruby win32ole::typelib#ole_classes()","ruby win32ole::ole_free()","ruby win32ole#ole_free()","ruby win32ole#ole_func_methods()","ruby win32ole#ole_get_methods()","ruby win32ole::record#ole_instance_variable_get()","ruby win32ole::record#ole_instance_variable_set()","ruby win32ole#ole_method()","ruby win32ole#ole_method_help()","ruby win32ole#ole_methods()","ruby win32ole::type#ole_methods()","ruby win32ole#ole_obj_help()","ruby win32ole#ole_put_methods()","ruby win32ole#ole_query_interface()","ruby win32ole::ole_reference_count()","ruby win32ole#ole_respond_to?()","ruby win32ole::ole_show_help()","ruby win32ole#ole_type()","ruby win32ole::param#ole_type()","ruby win32ole::type#ole_type()","ruby win32ole::variable#ole_type()","ruby win32ole::param#ole_type_detail()","ruby win32ole::variable#ole_type_detail()","ruby win32ole#ole_typelib()","ruby win32ole::type#ole_typelib()","ruby win32ole::typelib#ole_types()","ruby optionparser#on()","ruby syntaxsuggest::rippererrors#on_alias_error()","ruby syntaxsuggest::rippererrors#on_assign_error()","rails activesupport::xmlmini_libxmlsax::hashbuilder#on_cdata_block()","rails activesupport::xmlmini_libxmlsax::hashbuilder#on_characters()","ruby syntaxsuggest::rippererrors#on_class_name_error()","ruby openssl::pkey::ec::point#on_curve?()","rails activerecord::encryption::configurable#on_encrypted_attribute_declared()","rails activesupport::xmlmini_libxmlsax::hashbuilder#on_end_document()","rails activesupport::xmlmini_libxmlsax::hashbuilder#on_end_element()","ruby win32ole::event#on_event()","ruby win32ole::event#on_event_with_outargs()","ruby optionparser#on_head()","rails activesupport::lazyloadhooks#on_load()","ruby syntaxsuggest::rippererrors#on_param_error()","ruby syntaxsuggest::rippererrors#on_parse_error()","rails activesupport::xmlmini_libxmlsax::hashbuilder#on_start_document()","rails activesupport::xmlmini_libxmlsax::hashbuilder#on_start_element()","rails actioncable::channel::callbacks::classmethods#on_subscribe()","ruby optionparser#on_tail()","rails actioncable::channel::callbacks::classmethods#on_unsubscribe()","rails dateandtime::calculations#on_weekday?()","rails dateandtime::calculations#on_weekend?()","rails activerecord::relation#one?()","ruby array#one?()","ruby enumerable#one?()","ruby openssl::bn#one?()","ruby rdoc::context#ongoing_visibility=()","rails activerecord::spawnmethods#only()","rails actioncontroller::httpauthentication::digest#opaque()","ruby uri::generic#opaque=()","rails actiondispatch::http::uploadedfile#open()","rails actiondispatch::railsentitystore#open()","rails activestorage::blob#open()","rails activestorage::service#open()","ruby csv::open()","ruby drb::drbprotocol::open()","ruby drb::drbsslsocket::open()","ruby dir::open()","ruby file::open()","ruby gem::package::tarreader::entry::open()","ruby io::open()","ruby irb::fileinputmethod::open()","ruby kernel#open()","ruby openuri::openread#open()","ruby pty::open()","ruby pathname#open()","ruby resolv::dns::open()","ruby stringio::open()","ruby syslog::open()","ruby tempfile::open()","ruby tempfile#open()","ruby uri::open()","ruby win32::registry::open()","ruby win32::registry#open()","ruby zlib::gzipreader::open()","ruby zlib::gzipwriter::open()","ruby syslog::open!()","ruby win32::registry#open?()","ruby gem::commands::certcommand#open_cert()","ruby gem::commands::opencommand#open_editor()","ruby gem::open_file()","ruby gem::commands::opencommand#open_gem()","ruby gem::commands::certcommand#open_private_key()","ruby drb::drbprotocol::open_server()","ruby drb::drbsslsocket::open_server()","ruby irb::nestingparser::open_tokens()","ruby pathname#opendir()","ruby syslog::opened?()","ruby gem::operating_system_defaults()","ruby ","rails rails::server#opt_parser()","rails rails::generators::actions#optimize_indentation()","rails actiondispatch::routing::urlfor#optimize_routes_generation?()","rails activerecord::querymethods#optimizer_hints()","rails actionview::helpers::formoptionshelper#option_groups_from_collection_for_select()","ruby rdoc::task#option_list()","ruby ","ruby win32ole::param#optional?()","rails actiondispatch::http::url#optional_port()","rails actiondispatch::routing::mapper::httphelpers#options()","ruby fileutils::options()","ruby net::http#options()","ruby openssl::ssl::sslcontext#options()","ruby optionparser::arguable#options()","ruby rdoc::codeobject#options()","ruby regexp#options()","ruby syslog::options()","ruby openssl::ssl::sslcontext#options=()","ruby optionparser::arguable#options=()","rails actionview::helpers::formoptionshelper#options_for_select()","rails actionview::helpers::formoptionshelper#options_from_collection_for_select()","rails activerecord::connectionadapters::schemastatements#options_include_default?()","ruby fileutils::options_of()","ruby socket::option#optname()","rails activerecord::querymethods#or()","ruby io::buffer#or!()","rails ","ruby integer#ord()","ruby string#ord()","rails activerecord::querymethods#order()","ruby openssl::pkey::ec::group#order()","ruby optionparser#order()","ruby optionparser#order!()","ruby optionparser::arguable#order!()","ruby openssl::timestamp::tokeninfo#ordering()","ruby getoptlong#ordering=()","rails activesupport::inflector#ordinal()","rails integer#ordinal()","ruby date::ordinal()","ruby datetime::ordinal()","rails activesupport::inflector#ordinalize()","rails integer#ordinalize()","ruby rdoc::markdown#orig_initialize()","ruby zlib::gzipfile#orig_name()","ruby zlib::gzipwriter#orig_name=()","ruby uri::http#origin()","rails activesupport::safebuffer#original_concat()","ruby bundler::original_env()","ruby bundler::original_exec()","rails actiondispatch::request#original_fullpath()","ruby didyoumean::correctable#original_message()","ruby method#original_name()","ruby unboundmethod#original_name()","ruby bundler::original_system()","rails actiondispatch::request#original_url()","ruby zlib::gzipfile#os_code()","ruby gem::gemcutterutilities#otp()","ruby cgi#out()","ruby gem::specification::outdated()","ruby gem::specification::outdated_and_latest_version()","ruby gem::resolver#output()","ruby reline::ansi::output=()","ruby reline::core#output=()","ruby win32ole::param#output?()","ruby rdoc::rdoc#output_flag_file()","ruby reline::core#output_modifier_proc=()","ruby rdoc::methodattr#output_name()","ruby range#overlap?()","rails range#overlaps?()","rails activerecord::encryption::encryptablerecord#override_accessors_to_preserve_original()","ruby file::owned?()","ruby file::stat#owned?()","ruby filetest#owned?()","ruby pathname#owned?()","ruby thread::mutex#owned?()","ruby method#owner()","ruby unboundmethod#owner()","ruby kernel#p()","ruby array#pack()","ruby socket::pack_sockaddr_in()","ruby socket::pack_sockaddr_un()","rails ","rails ","rails ","rails ","rails ","ruby win32::registry::api#packdw()","ruby ","ruby win32::registry::api#packhandle()","ruby win32::registry::api#packqw()","ruby openssl::cipher#padding=()","ruby irb::pager::page()","ruby rdoc::store#page()","ruby irb::pager::page_content()","ruby rdoc::store#page_file()","ruby rdoc::toplevel#page_name()","ruby socket::pair()","ruby unixsocket::pair()","ruby rdoc::markdown#paragraph()","rails actioncontroller::parameterencoding::classmethods#param_encoding()","rails activemodel::naming::param_key()","ruby rdoc::anymethod#param_list()","ruby rdoc::anymethod#param_seq()","rails actiondispatch::http::filterparameters#parameter_filter()","rails actiondispatch::http::filterparameters#parameter_filter_for()","rails actiondispatch::http::parameters::classmethods#parameter_parsers=()","rails activesupport::inflector#parameterize()","rails string#parameterize()","rails actiondispatch::http::parameters#parameters()","ruby method#parameters()","ruby proc#parameters()","ruby tracepoint#parameters()","ruby unboundmethod#parameters()","rails actioncontroller::metal#params()","rails actioncontroller::strongparameters#params()","rails actiondispatch::http::parameters#params()","ruby openssl::pkey::dh#params()","ruby openssl::pkey::dsa#params()","ruby openssl::pkey::rsa#params()","ruby win32ole::method#params()","ruby zlib::deflate#params()","rails actioncontroller::metal#params=()","rails actioncontroller::strongparameters#params=()","ruby cgi::queryextension#params=()","rails actioncontroller::httpauthentication::token#params_array_from()","ruby openssl::pkey::dh#params_ok?()","rails actiondispatch::http::mimenegotiation#params_readable?()","ruby gem::resolver::activationrequest#parent()","ruby pathname#parent()","ruby rdoc::codeobject#parent()","ruby rdoc::codeobject#parent_file_name()","ruby rdoc::codeobject#parent_name()","ruby rdoc::methodattr#parent_name()","rails activesupport::notifications::event#parent_of?()","rails actionview::templatepath::parse()","rails activesupport::duration::parse()","rails activesupport::timezone#parse()","rails mime::type::parse()","ruby cgi::parse()","ruby cgi::cookie::parse()","ruby csv::parse()","ruby csv::parser#parse()","ruby date::parse()","ruby datetime::parse()","ruby gem::requestset::lockfile::parser#parse()","ruby gem::requirement::parse()","ruby gem::resolver::apiset::gemparser#parse()","ruby gem::uri::parse()","ruby json#parse()","ruby json::ext::parser#parse()","ruby openssl::config::parse()","ruby openssl::x509::name::parse()","ruby optionparser#parse()","ruby optionparser::switch::noargument#parse()","ruby optionparser::switch::optionalargument#parse()","ruby optionparser::switch::placedargument#parse()","ruby optionparser::switch::requiredargument#parse()","ruby prism::parse()","ruby prism::rippercompat#parse()","ruby psych::parse()","ruby psych::parser#parse()","ruby rdoc::classmodule#parse()","ruby rdoc::comment#parse()","ruby rdoc::markdown#parse()","ruby rdoc::markdown::parse()","ruby rdoc::markup::parse()","ruby rdoc::options#parse()","ruby rdoc::parser::ripperstatelex::parse()","ruby rdoc::rd::parse()","ruby rdoc::text#parse()","ruby rdoc::tomdoc::parse()","ruby ripper::parse()","ruby ripper::filter#parse()","ruby rubyvm::abstractsyntaxtree::parse()","ruby syntaxsuggest::cli#parse()","ruby time::parse()","ruby uri::parse()","ruby uri::rfc2396_parser#parse()","ruby uri::rfc2396_parser#parse()","rails rails::server::options#parse!()","ruby gem::uri::parse!()","ruby json#parse!()","ruby optionparser#parse!()","ruby optionparser::arguable#parse!()","ruby rdoc::parser::ruby#parse_alias()","ruby rdoc::parser::ruby#parse_attr()","ruby rdoc::parser::ruby#parse_attr_accessor()","ruby irb::nestingparser::parse_by_line()","ruby rdoc::parser::ruby#parse_call_parameters()","ruby rdoc::parser::ruby#parse_class()","ruby rdoc::parser::ruby#parse_comment()","ruby rdoc::parser::ruby#parse_comment_tomdoc()","ruby prism::parse_comments()","ruby openssl::config::parse_config()","ruby rdoc::parser::ruby#parse_constant()","ruby rdoc::parser::ruby#parse_constant_visibility()","ruby fiddle::cparser#parse_ctype()","rails mime::type::parse_data_with_trailing_star()","ruby rdoc::parser::changelog#parse_date()","ruby rdoc::rdoc#parse_dot_doc_file()","ruby rdoc::parser::changelog#parse_entries()","ruby rdoc::parser::changelog::git#parse_entries()","rails activesupport::json::parse_error()","ruby prism::parse_failure?()","ruby prism::parse_file()","ruby psych::parse_file()","ruby rdoc::rdoc#parse_file()","ruby rubyvm::abstractsyntaxtree::parse_file()","ruby prism::parse_file_comments()","ruby prism::parse_file_failure?()","ruby prism::parse_file_success?()","ruby rdoc::rdoc#parse_files()","ruby rdoc::parser::parse_files_matching()","ruby rdoc::parser::changelog::git#parse_info()","ruby psych::scalarscanner#parse_int()","ruby reline::config#parse_keyseq()","ruby prism::parse_lex()","ruby prism::parse_lex_file()","ruby csv::parse_line()","ruby rdoc::parser::ruby#parse_meta_attr()","ruby rdoc::parser::ruby#parse_meta_method()","ruby rdoc::parser::ruby#parse_method()","ruby rdoc::parser::ruby#parse_method_dummy()","ruby rdoc::parser::ruby#parse_method_or_yield_parameters()","ruby rdoc::parser::ruby#parse_method_parameters()","ruby rdoc::parser::ruby#parse_method_params_and_body()","ruby rdoc::parser::ruby#parse_module()","ruby openssl::x509::name::parse_openssl()","ruby irb::outputmethod#parse_printf_format()","ruby rdoc::parser::ruby#parse_require()","ruby rdoc::parser::ruby#parse_rescue()","ruby openssl::x509::name::parse_rfc2253()","ruby fiddle::cparser#parse_signature()","ruby rdoc::parser::ruby#parse_statements()","ruby psych::parse_stream()","ruby fiddle::cparser#parse_struct_signature()","ruby prism::parse_success?()","ruby rdoc::parser::ruby#parse_symbol_arg()","ruby rdoc::parser::ruby#parse_symbol_in_arg()","ruby psych::scalarscanner#parse_time()","ruby rdoc::parser::ruby#parse_top_level_statements()","rails mime::type::parse_trailing_star()","ruby rdoc::parser::ruby#parse_visibility()","ruby rdoc::parser::ruby#parse_yield()","ruby psych::parser()","ruby syntaxsuggest::cli#parser()","ruby uri::generic#parser()","ruby rdoc::toplevel#parser=()","rails ","rails activerecord::attributemethods::dirty::classmethods#partial_writes()","rails activerecord::attributemethods::dirty::classmethods#partial_writes=()","rails activerecord::attributemethods::dirty::classmethods#partial_writes?()","ruby enumerable#partition()","ruby string#partition()","ruby gem::version#partition_segments()","rails activesupport::duration#parts()","ruby thread::pass()","ruby etc::passwd()","ruby uri::generic#password()","ruby uri::generic#password=()","rails actionview::helpers::formbuilder#password_field()","rails actionview::helpers::formhelper#password_field()","ruby cgi::htmlextension#password_field()","rails actionview::helpers::formtaghelper#password_field_tag()","rails activesupport::timewithzone#past?()","rails dateandtime::calculations#past?()","rails actiondispatch::routing::mapper::httphelpers#patch()","ruby net::http#patch()","rails actiondispatch::http::uploadedfile#path()","rails actiondispatch::routing::pathredirect#path()","rails activerecord::connectionadapters::postgresql::columnmethods#path()","rails rails::generators::appbase::gemfileentry::path()","ruby argf#path()","ruby csv#path()","ruby dir#path()","ruby file::path()","ruby gem::path()","ruby io#path()","ruby pstore#path()","ruby rdoc::classmodule#path()","ruby rdoc::constant#path()","ruby rdoc::methodattr#path()","ruby rdoc::toplevel#path()","ruby rubyvm::instructionsequence#path()","ruby tempfile#path()","ruby thread::backtrace::location#path()","ruby tracepoint#path()","ruby unixsocket#path()","ruby uri::ftp#path()","ruby win32ole::typelib#path()","ruby cgi::cookie#path=()","ruby uri::generic#path=()","rails actiondispatch::http::url::path_for()","ruby gem::uninstaller#path_ok?()","rails actiondispatch::http::parameters#path_parameters()","ruby gem::path_separator()","rails actionview::helpers::asseturlhelper#path_to_asset()","rails actionview::helpers::asseturlhelper#path_to_audio()","rails actionview::helpers::asseturlhelper#path_to_font()","rails actionview::helpers::asseturlhelper#path_to_image()","rails actionview::helpers::asseturlhelper#path_to_javascript()","rails actionview::helpers::asseturlhelper#path_to_stylesheet()","rails actionview::helpers::asseturlhelper#path_to_video()","ruby io#pathconf()","rails rails::application::configuration#paths()","rails rails::engine::configuration#paths()","rails rails::paths::path#paths()","ruby gem::paths()","ruby gem::paths=()","rails activerecord::dynamicmatchers::method::pattern()","ruby optionparser::switch::pattern()","ruby optionparser::switch::noargument::pattern()","ruby ","ruby openssl::kdf::pbkdf2_hmac()","ruby openssl::pkcs5#pbkdf2_hmac()","ruby openssl::pkcs5#pbkdf2_hmac_sha1()","rails activestorage::previewer::popplerpdfpreviewer::pdftoppm_exists?()","rails activestorage::previewer::popplerpdfpreviewer::pdftoppm_path()","ruby enumerator#peek()","ruby gem::requestset::lockfile::tokenizer#peek()","ruby stringscanner#peek()","ruby syntaxsuggest::priorityengulfqueue#peek()","ruby syntaxsuggest::priorityqueue#peek()","ruby syntaxsuggest::unvisitedlines#peek()","ruby rdoc::parser::rubytools#peek_read()","ruby coverage::peek_result()","ruby rdoc::parser::rubytools#peek_tk()","ruby enumerator#peek_values()","ruby stringscanner#peep()","ruby net::http#peer_cert()","ruby openssl::ssl::sslsocket#peer_cert()","ruby openssl::ssl::sslsocket#peer_cert_chain()","ruby openssl::ssl::sslsocket#peer_finished_message()","ruby ipsocket#peeraddr()","ruby openssl::ssl::socketforwarder#peeraddr()","ruby unixsocket#peeraddr()","ruby rdoc::markdown#peg_parse()","ruby openssl::ssl::sslsocket#pending()","ruby thread#pending_interrupt?()","ruby thread::pending_interrupt?()","rails actioncontroller::requestforgeryprotection#per_form_csrf_token()","ruby rdoc::stats#percent_doc()","rails actionmailbox::incinerationjob#perform()","rails actionmailbox::routingjob#perform()","rails activejob::execution#perform()","rails activerecord::destroyassociationasyncjob#perform()","rails activestorage::analyzejob#perform()","rails activestorage::mirrorjob#perform()","rails activestorage::purgejob#perform()","rails actioncable::channel::base#perform_action()","rails activejob::enqueuing::classmethods#perform_later()","rails activejob::execution#perform_now()","rails activejob::execution::classmethods#perform_now()","rails abstractcontroller::base#performed?()","rails actioncontroller::metal#performed?()","rails activesupport::timewithzone#period()","rails activesupport::timezone#period_for_local()","rails activesupport::timezone#period_for_utc()","rails actioncable::channel::periodictimers::classmethods#periodically()","rails actiondispatch::cookies::chainedcookiejars#permanent()","rails actionmailbox::relayer::result#permanent_failure?()","rails actioncontroller::permissionspolicy::classmethods#permissions_policy()","rails actiondispatch::permissionspolicy::request#permissions_policy()","rails rails::application::configuration#permissions_policy()","rails ","rails actiondispatch::permissionspolicy::request#permissions_policy=()","rails actioncontroller::parameters#permit()","rails actioncontroller::parameters#permit!()","rails activesupport::dependencies::interlock#permit_concurrent_loads()","rails actioncontroller::parameters#permitted?()","ruby array#permutation()","ruby optionparser#permute()","ruby optionparser#permute!()","ruby optionparser::arguable#permute!()","rails activemodel::api#persisted?()","rails activerecord::persistence#persisted?()","rails numeric#petabyte()","rails numeric#petabytes()","ruby addrinfo#pfamily()","ruby complex#phase()","ruby float#phase()","ruby numeric#phase()","rails actionview::helpers::formbuilder#phone_field()","rails actionview::helpers::formhelper#phone_field()","rails actionview::helpers::formtaghelper#phone_field_tag()","rails actionview::helpers::urlhelper#phone_to()","rails activerecord::calculations#pick()","rails enumerable#pick()","ruby gem::availableset#pick_best!()","ruby io#pid()","ruby process::pid()","ruby process::status#pid()","ruby stringio#pid()","ruby io::pipe()","ruby file::pipe?()","ruby file::stat#pipe?()","ruby filetest#pipe?()","ruby pathname#pipe?()","ruby open3::pipeline()","ruby open3::pipeline_r()","ruby open3::pipeline_rw()","ruby open3::pipeline_start()","ruby open3::pipeline_w()","ruby openssl::cipher#pkcs5_keyivgen()","ruby makemakefile#pkg_config()","ruby gem::basicspecification#platform()","ruby gem::requestset::gemdependencyapi#platform()","ruby gem::resolver::activationrequest#platform()","ruby gem::resolver::specspecification#platform()","ruby gem::specification#platform()","ruby gem::specification#platform=()","ruby gem::platform_defaults()","ruby gem::platforms()","ruby gem::requestset::gemdependencyapi#platforms()","ruby gem::platforms=()","ruby didyoumean::treespellchecker#plausible_dimensions()","rails activerecord::associations::collectionproxy#pluck()","rails activerecord::calculations#pluck()","rails enumerable#pluck()","ruby gem::plugin_suffix_pattern()","ruby gem::plugin_suffix_regexp()","rails actiondispatch::contentsecuritypolicy#plugin_types()","ruby gem::plugindir()","ruby gem::basicspecification#plugins()","rails activemodel::naming::plural()","rails activesupport::inflector::inflections#plural()","rails rails::generators::namedbase#plural_file_name()","rails rails::generators::namedbase#plural_name()","rails rails::generators::namedbase#plural_route_name()","rails rails::generators::namedbase#plural_table_name()","rails actionview::helpers::texthelper#pluralize()","rails activesupport::inflector#pluralize()","rails string#pluralize()","rails activerecord::modelschema::pluralize_table_names()","rails activerecord::modelschema::pluralize_table_names=()","rails rails::generators::namedbase#pluralize_table_names?()","rails activerecord::connectionadapters::postgresql::columnmethods#point()","ruby openssl::pkey::ec::group#point_conversion_form()","ruby openssl::pkey::ec::group#point_conversion_form=()","ruby stringscanner#pointer()","ruby stringscanner#pointer=()","ruby complex#polar()","ruby complex::polar()","ruby numeric#polar()","ruby openssl::timestamp::request#policy_id()","ruby openssl::timestamp::tokeninfo#policy_id()","ruby openssl::timestamp::request#policy_id=()","rails activerecord::connectionadapters::connectionpool::queue#poll()","ruby gem::gemcutterutilities::webauthnpoller#poll_for_otp()","ruby gem::gemcutterutilities::webauthnpoller::poll_thread()","rails activerecord::connectionadapters::postgresql::columnmethods#polygon()","rails activerecord::inheritance::classmethods#polymorphic_class_for()","rails activerecord::inheritance::classmethods#polymorphic_name()","rails actiondispatch::routing::polymorphicroutes#polymorphic_path()","rails actiondispatch::routing::polymorphicroutes#polymorphic_url()","rails activerecord::databaseconfigurations::hashconfig#pool()","ruby array#pop()","ruby rinda::notifytemplateentry#pop()","ruby syntaxsuggest::codefrontier#pop()","ruby syntaxsuggest::priorityengulfqueue#pop()","ruby syntaxsuggest::priorityqueue#pop()","ruby syntaxsuggest::unvisitedlines#pop()","ruby thread::queue#pop()","ruby thread::sizedqueue#pop()","ruby pp::ppmethods#pop_inspect_key()","ruby rdoc::tokenstream#pop_token()","ruby irb::context#pop_workspace()","ruby gem::util::popen()","ruby io::popen()","ruby open3::popen2()","ruby open3::popen2e()","ruby open3::popen3()","ruby cgi::htmlextension#popup_menu()","rails actiondispatch::http::url#port()","ruby uri::generic#port=()","rails actiondispatch::http::url#port_string()","ruby argf#pos()","ruby dir#pos()","ruby gem::package::tarreader::entry#pos()","ruby io#pos()","ruby stringio#pos()","ruby stringscanner#pos()","ruby zlib::gzipreader#pos()","ruby zlib::gzipwriter#pos()","ruby argf#pos=()","ruby dir#pos=()","ruby gem::package::tarreader::entry#pos=()","ruby io#pos=()","ruby stringio#pos=()","ruby stringscanner#pos=()","ruby float#positive?()","ruby numeric#positive?()","ruby rational#positive?()","ruby didyoumean::treespellchecker#possible_paths()","rails actioncable::connection::streameventloop#post()","rails actiondispatch::routing::mapper::httphelpers#post()","ruby net::http#post()","ruby net::http::post()","ruby net::http#post2()","ruby gem::post_build()","ruby openssl::ssl::sslsocket#post_connection_check()","ruby net::http::post_form()","ruby gem::post_install()","ruby matchdata#post_match()","ruby stringscanner#post_match()","ruby gem::post_reset()","ruby gem::post_uninstall()","rails ","ruby integer#pow()","ruby bigdecimal#power()","ruby irb::colorprinter::pp()","ruby irb::colorprinter#pp()","ruby irb::notifier::abstractnotifier#pp()","ruby irb::outputmethod#pp()","ruby kernel::pp()","ruby pp::pp()","ruby pp::ppmethods#pp()","ruby pp::ppmethods#pp_hash()","ruby pp::ppmethods#pp_object()","ruby process::ppid()","ruby irb::notifier::abstractnotifier#ppx()","ruby irb::outputmethod#ppx()","ruby reline::core#pre_input_hook=()","ruby gem::pre_install()","ruby gem::installer#pre_install_checks()","ruby matchdata#pre_match()","ruby stringscanner#pre_match()","ruby gem::pre_reset()","ruby gem::pre_uninstall()","ruby io#pread()","ruby io::buffer#pread()","ruby stringio#pread()","ruby ","ruby bigdecimal#precision()","ruby bigdecimal#precision_scale()","ruby bigdecimal#precs()","ruby integer#pred()","ruby reline::lineeditor::dialogprocscope#preferred_dialog_height()","ruby bundler::preferred_gemfile_name()","ruby gem::availableset#prefetch()","ruby gem::resolver::apiset#prefetch()","ruby gem::resolver::composedset#prefetch()","ruby gem::resolver::gitset#prefetch()","ruby gem::resolver::installerset#prefetch()","ruby gem::resolver::set#prefetch()","rails activerecord::connectionadapters::abstractadapter#prefetch_primary_key?()","rails activerecord::modelschema::classmethods#prefetch_primary_key?()","rails activerecord::dynamicmatchers::findby::prefix()","rails activerecord::dynamicmatchers::findbybang::prefix()","rails activerecord::dynamicmatchers::method::prefix()","ruby gem::prefix()","ruby ipaddr#prefix()","ruby ipaddr#prefix=()","rails activerecord::querymethods#preload()","rails actionview::helpers::assettaghelper#preload_link_tag()","ruby reline::ansi::prep()","ruby reline::generalio::prep()","ruby reline::windows::prep()","rails activestorage::fixtureset#prepare()","rails actiondispatch::response#prepare!()","rails activerecord::tasks::databasetasks#prepare_all()","rails activerecord::connectionadapters::abstractadapter#prepared_statements()","rails activerecord::connectionadapters::abstractadapter#prepared_statements?()","ruby gem::commands::updatecommand#preparing_gem_layout_for()","rails activesupport::safebuffer#prepend()","ruby array#prepend()","ruby module#prepend()","ruby optionparser::list#prepend()","ruby string#prepend()","rails abstractcontroller::callbacks::classmethods#prepend_after_action()","rails abstractcontroller::callbacks::classmethods#prepend_around_action()","rails abstractcontroller::callbacks::classmethods#prepend_before_action()","ruby gem::commands::setupcommand#prepend_destdir_if_present()","rails actionview::viewpaths#prepend_view_path()","rails actionview::viewpaths::classmethods#prepend_view_path()","rails activesupport::concern#prepended()","ruby coreextensions::tcpsocketext::prepended()","ruby gem::resolver::composedset#prerelease=()","ruby gem::resolver::installerset#prerelease=()","ruby gem::dependency#prerelease?()","ruby gem::nametuple#prerelease?()","ruby gem::requirement#prerelease?()","ruby gem::version#prerelease?()","rails object#presence()","rails object#presence_in()","rails object#present?()","rails activerecord::encryption::encryptablerecord#preserve_original_encrypted()","ruby io#pressed?()","ruby cgi::util#pretty()","ruby json#pretty_generate()","ruby kernel#pretty_inspect()","ruby rdoc::alias#pretty_name()","ruby rdoc::methodattr#pretty_name()","ruby rdoc::alias#pretty_new_name()","ruby rdoc::alias#pretty_old_name()","rails activerecord::core#pretty_print()","rails activerecord::core::inspectionmask#pretty_print()","rails activerecord::relation#pretty_print()","ruby openssl::bn#pretty_print()","ruby openssl::x509::certificate#pretty_print()","ruby openssl::x509::name#pretty_print()","ruby prism::location#pretty_print()","ruby prism::token#pretty_print()","ruby ripper::lexer::elem#pretty_print()","ruby ripper::lexer::state#pretty_print()","ruby rubyvm::abstractsyntaxtree::node#pretty_print()","ruby rubyvm::abstractsyntaxtree::node#pretty_print_children()","rails time#prev_day()","ruby date#prev_day()","rails activesupport::timewithzone#prev_day?()","rails dateandtime::calculations#prev_day?()","ruby float#prev_float()","rails time#prev_month()","ruby date#prev_month()","rails dateandtime::calculations#prev_occurring()","rails dateandtime::calculations#prev_quarter()","rails dateandtime::calculations#prev_week()","rails dateandtime::calculations#prev_weekday()","rails time#prev_year()","ruby date#prev_year()","rails activerecord::connectionadapters::abstractadapter#preventing_writes?()","rails activestorage::blob::representable#preview()","rails activestorage::previewer#preview()","rails activestorage::previewer::mupdfpreviewer#preview()","rails activestorage::previewer::popplerpdfpreviewer#preview()","rails activestorage::previewer::videopreviewer#preview()","rails actionmailer::preview::preview_name()","rails activestorage::blob::representable#previewable?()","rails actiontext::attachable#previewable_attachable?()","rails actiontext::engine#previewable_attachable?()","rails announcement::version#previous()","rails activerecord::encryption::config#previous=()","rails activemodel::dirty#previous_changes()","ruby reline::lineeditor#previous_history()","ruby logger::period#previous_period_end()","rails activerecord::persistence#previously_new_record?()","rails activerecord::persistence#previously_persisted?()","ruby rinda::ringfinger::primary()","rails activerecord::inheritance::classmethods#primary_abstract_class()","rails activerecord::attributemethods::primarykey::classmethods#primary_key()","rails activerecord::connectionadapters::columnmethods#primary_key()","rails activerecord::connectionadapters::postgresql::columnmethods#primary_key()","rails activerecord::connectionadapters::schemastatements#primary_key()","rails activerecord::attributemethods::primarykey::classmethods#primary_key=()","rails activerecord::modelschema::primary_key_prefix_type()","rails activerecord::modelschema::primary_key_prefix_type=()","rails activerecord::connectionadapters::schemacache#primary_keys()","ruby openssl::bn#prime?()","ruby openssl::bn#prime_fasttest?()","ruby encoding::converter#primitive_convert()","ruby encoding::converter#primitive_errinfo()","ruby argf#print()","ruby cgi#print()","ruby gem::silentui::nullio#print()","ruby io#print()","ruby io::generic_writable#print()","ruby irb::locale#print()","ruby irb::notifier::abstractnotifier#print()","ruby irb::outputmethod#print()","ruby irb::stdiooutputmethod#print()","ruby kernel#print()","ruby net::writeadapter#print()","ruby openssl::buffering#print()","ruby zlib::gzipwriter#print()","rails rails::generators::print_generators()","rails rails::generators::print_list()","ruby irb::print_usage()","ruby argf#printf()","ruby io#printf()","ruby io::generic_writable#printf()","ruby irb::locale#printf()","ruby irb::notifier::abstractnotifier#printf()","ruby irb::outputmethod#printf()","ruby kernel#printf()","ruby net::writeadapter#printf()","ruby openssl::buffering#printf()","ruby zlib::gzipwriter#printf()","rails rails::command::base::printing_commands()","ruby irb::notifier::abstractnotifier#printn()","ruby irb::outputmethod#printn()","ruby gem::bundlerversionfinder::prioritize!()","ruby gem::dependency#prioritizes_bundler?()","rails activejob::queuepriority#priority()","ruby thread#priority()","ruby thread#priority=()","ruby prism::debug::prism_locals()","ruby io::buffer#private?()","ruby ipaddr#private?()","ruby openssl::pkey::dh#private?()","ruby openssl::pkey::dsa#private?()","ruby openssl::pkey::ec#private?()","ruby openssl::pkey::rsa#private?()","ruby nomethoderror#private_call?()","ruby module#private_class_method()","ruby module#private_constant()","ruby openssl::pkey::rsa#private_decrypt()","ruby openssl::pkey::rsa#private_encrypt()","ruby module#private_instance_methods()","ruby openssl::pkey::ec#private_key()","ruby openssl::pkey::ec#private_key=()","ruby openssl::pkey::ec#private_key?()","ruby module#private_method_defined?()","ruby object#private_methods()","ruby openssl::pkey::pkey#private_to_der()","ruby openssl::pkey::pkey#private_to_pem()","ruby kernel#proc()","rails activerecord::encryption::extendeddeterministicqueries::inwithadditionalvalues#proc_for_binds()","rails abstractcontroller::base#process()","rails actioncontroller::live#process()","rails actionmailbox::base#process()","rails actionmailer::logsubscriber#process()","rails activestorage::transformers::transformer#process()","rails activestorage::variantwithrecord#process()","ruby reline::killring#process()","rails actioncontroller::logsubscriber#process_action()","ruby gem::commandmanager#process_args()","ruby reline::windows::process_key_event()","ruby fiber::scheduler#process_wait()","rails activestorage::preview#processed()","rails activestorage::variant#processed()","rails activestorage::variantwithrecord#processed()","rails actionmailbox::inboundemail#processed?()","rails actionmailer::messagedelivery#processed?()","rails activestorage::variantwithrecord#processed?()","ruby enumerator::produce()","ruby array#product()","ruby enumerator::product()","rails ","rails codetools::profiler#profile_requires()","ruby win32ole::type#progid()","ruby win32ole::type::progids()","ruby optionparser#program_name()","rails object#progress_bar()","ruby gem::streamui#progress_reporter()","rails activerecord::connectionhandling#prohibit_shard_swapping()","ruby irb::context#prompt_mode=()","ruby irb::context#prompt_n()","ruby irb::context#prompt_n=()","ruby reline::core#prompt_proc=()","ruby irb::context#prompting?()","ruby set#proper_subset?()","ruby set#proper_superset?()","rails activerecord::migration#proper_table_name()","rails rails::info::property()","ruby net::http#propfind()","ruby net::http#proppatch()","rails actioncontroller::requestforgeryprotection#protect_against_forgery?()","rails actioncontroller::requestforgeryprotection::classmethods#protect_from_forgery()","rails activerecord::modelschema::classmethods#protected_environments()","rails activerecord::modelschema::classmethods#protected_environments=()","ruby module#protected_instance_methods()","ruby module#protected_method_defined?()","ruby delegator#protected_methods()","ruby object#protected_methods()","rails activerecord::encryption::contexts#protecting_encrypted_data()","rails actiondispatch::http::url#protocol()","ruby addrinfo#protocol()","rails actionview::helpers::capturehelper#provide()","ruby rinda::ringprovider#provide()","ruby net::http#proxy?()","ruby net::http#proxy_address()","ruby win32::sspi::negotiateauth::proxy_auth_get()","ruby net::httpheader#proxy_basic_auth()","rails activesupport::multibyte::proxy_class()","rails activesupport::multibyte::proxy_class=()","ruby net::http::proxy_class?()","ruby net::http#proxy_from_env?()","ruby net::http#proxy_pass()","ruby net::http#proxy_port()","ruby gem::request#proxy_uri()","ruby net::http#proxy_user()","ruby net::http#proxyaddr()","ruby net::http#proxyport()","rails activesupport::cache::memorystore#prune()","ruby find::prune()","rails activesupport::cache::memorystore#pruning?()","ruby fiddle::pointer#ptr()","rails activestorage::service#public?()","ruby openssl::pkey::dh#public?()","ruby openssl::pkey::dsa#public?()","ruby openssl::pkey::ec#public?()","ruby openssl::pkey::rsa#public?()","ruby module#public_class_method()","rails actionview::helpers::asseturlhelper#public_compute_asset_path()","ruby module#public_constant()","ruby openssl::pkey::rsa#public_decrypt()","rails rails::appbuilder#public_directory()","ruby openssl::pkey::rsa#public_encrypt()","ruby module#public_instance_method()","ruby module#public_instance_methods()","ruby openssl::netscape::spki#public_key()","ruby openssl::pkey::dh#public_key()","ruby openssl::pkey::dsa#public_key()","ruby openssl::pkey::ec#public_key()","ruby openssl::pkey::rsa#public_key()","ruby openssl::x509::certificate#public_key()","ruby openssl::x509::request#public_key()","ruby openssl::netscape::spki#public_key=()","ruby openssl::pkey::ec#public_key=()","ruby openssl::x509::certificate#public_key=()","ruby openssl::x509::request#public_key=()","ruby openssl::pkey::ec#public_key?()","ruby object#public_method()","ruby module#public_method_defined?()","ruby delegator#public_methods()","ruby object#public_methods()","rails rails::generators::public_namespaces()","rails rails::public_path()","ruby object#public_send()","ruby openssl::pkey::pkey#public_to_der()","ruby openssl::pkey::pkey#public_to_pem()","rails activesupport::notifications::publish()","rails activesupport::notifications::fanout#publish()","rails activesupport::logsubscriber#publish_event()","rails activesupport::notifications::fanout#publish_event()","rails activesupport::notifications::fanout::subscribers::eventobject#publish_event()","rails actioncable::server::base#pubsub()","rails actioncable::server::configuration#pubsub_adapter()","rails ","rails activerecord::tasks::databasetasks#purge()","rails activestorage::attached::many#purge()","rails activestorage::attached::model#purge()","rails activestorage::attached::one#purge()","rails activestorage::attachment#purge()","rails activestorage::blob#purge()","rails activerecord::tasks::databasetasks#purge_all()","rails activerecord::tasks::databasetasks#purge_current()","rails activestorage::attached::many#purge_later()","rails activestorage::attached::model#purge_later()","rails activestorage::attached::one#purge_later()","rails activestorage::attachment#purge_later()","rails activestorage::blob#purge_later()","ruby openssl::x509::store#purpose=()","ruby openssl::x509::storecontext#purpose=()","rails activerecord::associations::collectionproxy#push()","rails rails::paths::path#push()","ruby array#push()","ruby csv::row#push()","ruby csv::table#push()","ruby psych::visitors::yamltree#push()","ruby reline::history#push()","ruby rinda::tuplebag#push()","ruby syntaxsuggest::codesearch#push()","ruby syntaxsuggest::priorityengulfqueue#push()","ruby thread::queue#push()","ruby thread::sizedqueue#push()","ruby pp::ppmethods#push_inspect_key()","ruby irb::context#push_workspace()","rails actiondispatch::routing::mapper::httphelpers#put()","ruby net::http#put()","ruby encoding::converter#putback()","ruby argf#putc()","ruby io#putc()","ruby kernel#putc()","ruby stringio#putc()","ruby zlib::gzipwriter#putc()","ruby argf#puts()","ruby csv#puts()","ruby gem::silentui::nullio#puts()","ruby io#puts()","ruby io::generic_writable#puts()","ruby irb::debug::ui#puts()","ruby irb::locale#puts()","ruby irb::notifier::abstractnotifier#puts()","ruby irb::outputmethod#puts()","ruby kernel#puts()","ruby net::writeadapter#puts()","ruby openssl::buffering#puts()","ruby syntaxsuggest::ministringio#puts()","ruby xmp#puts()","ruby xmp::stringinputmethod#puts()","ruby zlib::gzipwriter#puts()","ruby dir::pwd()","ruby fileutils::pwd()","ruby pathname::pwd()","ruby io#pwrite()","ruby io::buffer#pwrite()","ruby uri::generic#query=()","rails activerecord::attributemethods::query#query_attribute()","rails activerecord::connectionadapters::querycache::connectionpoolconfiguration#query_cache_enabled()","rails actiondispatch::request#query_parameters()","rails activejob::queueadapter::classmethods#queue_adapter()","rails activejob::queueadapter::classmethods#queue_adapter=()","rails activejob::queueadapter::classmethods#queue_adapter_name()","rails activejob::queuename::classmethods#queue_as()","rails activejob::queuename#queue_name()","rails activejob::queuepriority::classmethods#queue_with_priority()","ruby rdoc::options#quiet()","ruby rdoc::options#quiet=()","ruby irb::debug::ui#quit()","ruby bigdecimal#quo()","ruby complex#quo()","ruby float#quo()","ruby numeric#quo()","ruby rational#quo()","rails activerecord::connectionadapters::quoting#quote()","rails rails::generators::actions#quote()","ruby regexp::quote()","rails activerecord::connectionadapters::quoting#quote_bound_value()","ruby csv#quote_char()","ruby csv::parser#quote_character()","rails activerecord::connectionadapters::quoting#quote_column_name()","rails activerecord::connectionadapters::postgresql::quoting#quote_schema_name()","rails activerecord::connectionadapters::mysql2adapter#quote_string()","rails activerecord::connectionadapters::quoting#quote_string()","rails activerecord::connectionadapters::quoting#quote_table_name()","rails activerecord::connectionadapters::postgresql::quoting#quote_table_name_for_assignment()","rails activerecord::connectionadapters::quoting#quote_table_name_for_assignment()","rails activerecord::connectionadapters::quoting#quoted_date()","rails activerecord::connectionadapters::quoting#quoted_false()","ruby reline::lineeditor#quoted_insert()","rails activerecord::attributemethods::primarykey::classmethods#quoted_primary_key()","rails activerecord::modelschema::classmethods#quoted_table_name()","rails activerecord::connectionadapters::quoting#quoted_true()","ruby ","rails actionview::helpers::formbuilder#radio_button()","rails actionview::helpers::formhelper#radio_button()","ruby cgi::htmlextension#radio_button()","rails actionview::helpers::formtaghelper#radio_button_tag()","ruby cgi::htmlextension#radio_group()","rails ","rails ","rails ","rails rails::generators::actions#rails_command()","rails actionview::logsubscriber#rails_root()","rails rails::api::edgetask#rails_version()","rails rails::api::stabletask#rails_version()","rails ","rails rails::railtie::railtie_name()","rails rails::engine#railties()","rails activesupport::proxyobject#raise()","ruby delegator#raise()","ruby fiber#raise()","ruby kernel#raise()","ruby thread#raise()","rails activerecord::tasks::databasetasks#raise_for_multi_db()","rails activemodel::validations#raise_validation_error()","ruby tracepoint#raised_exception()","rails rails::generators::actions#rake()","rails ","rails rails::application#rake_tasks()","rails rails::railtie::rake_tasks()","rails rails::appbuilder#rakefile()","rails rails::generators::actions#rakefile()","rails rails::pluginbuilder#rakefile()","ruby kernel#rand()","ruby openssl::bn::rand()","ruby random#rand()","ruby random::rand()","ruby random::formatter#rand()","ruby openssl::bn::rand_range()","ruby openssl::random::random_add()","ruby openssl::random::random_bytes()","ruby random::formatter#random_bytes()","ruby openssl::cipher#random_iv()","ruby openssl::cipher#random_key()","ruby random::formatter#random_number()","ruby net::httpheader#range()","ruby net::httpheader#range=()","rails actionview::helpers::formbuilder#range_field()","rails actionview::helpers::formhelper#range_field()","rails actionview::helpers::formtaghelper#range_field_tag()","ruby net::httpheader#range_length()","ruby array#rassoc()","ruby env::rassoc()","ruby hash#rassoc()","ruby complex#rationalize()","ruby float#rationalize()","ruby integer#rationalize()","ruby nilclass#rationalize()","ruby rational#rationalize()","rails actionview::helpers::outputsafetyhelper#raw()","ruby io#raw()","ruby io#raw!()","rails activerecord::connectionadapters::abstractadapter#raw_connection()","ruby cgi::queryextension#raw_cookie()","ruby cgi::queryextension#raw_cookie2()","ruby gc::profiler::raw_data()","rails actiondispatch::http::url#raw_host_with_port()","rails actioncontroller::httpauthentication::token#raw_params()","rails actiondispatch::request#raw_post()","ruby openssl::pkey::pkey#raw_private_key()","ruby openssl::pkey::pkey#raw_public_key()","rails actiondispatch::request#raw_request_method()","ruby gem::package::raw_spec()","ruby rdoc::parser::c#rb_scan_args()","rails announcement::version#rc?()","ruby file::stat#rdev()","ruby file::stat#rdev_major()","ruby file::stat#rdev_minor()","ruby rdoc::rubygemshook#rdoc_installed?()","ruby rdoc::rubygemshook#rdoc_installed?()","ruby gem::specification#rdoc_options()","ruby gem::specification#rdoc_options=()","ruby rdoc::task#rdoc_task_description()","ruby process::gid::re_exchange()","ruby process::uid::re_exchange()","ruby process::gid::re_exchangeable?()","ruby process::uid::re_exchangeable?()","ruby gem::security::re_sign()","ruby gem::commands::certcommand#re_sign_cert()","ruby gem::security::signer::re_sign_cert()","ruby objectspace::reachable_objects_from()","ruby objectspace::reachable_objects_from_root()","rails actiondispatch::http::uploadedfile#read()","rails actiondispatch::railsentitystore#read()","rails actiondispatch::railsmetastore#read()","rails activesupport::cache::store#read()","rails activesupport::encryptedconfiguration#read()","rails activesupport::encryptedfile#read()","ruby argf#read()","ruby csv::read()","ruby csv#read()","ruby dir#read()","ruby fiddle::pointer::read()","ruby gem::package::tarreader::entry#read()","ruby io::read()","ruby io#read()","ruby io::buffer#read()","ruby openssl::buffering#read()","ruby openssl::pkey::read()","ruby openuri::openread#read()","ruby pathname#read()","ruby reline::config#read()","ruby rinda::tuplespace#read()","ruby rinda::tuplespaceproxy#read()","ruby rinda::waittemplateentry#read()","ruby stringio#read()","ruby win32::registry#read()","ruby zlib::gzipreader#read()","ruby gem::safemarshal::reader#read!()","ruby rinda::tuplespace#read_all()","ruby rinda::tuplespaceproxy#read_all()","rails activerecord::attributemethods::read#read_attribute()","rails activerecord::attributemethods::beforetypecast#read_attribute_before_type_cast()","ruby win32::registry#read_bin()","ruby gem::read_binary()","ruby net::httpresponse#read_body()","ruby gem::package#read_checksums()","ruby rdoc::parser::ruby#read_directive()","ruby rdoc::parser::ruby#read_documentation_modifiers()","rails activesupport::cache::strategy::localcache::localstore#read_entry()","ruby bundler::read_file()","ruby rdoc::encoding::read_file()","rails abstractcontroller::caching::fragments#read_fragment()","ruby win32::registry#read_i()","ruby irb::irb#read_input()","ruby reline::config#read_lines()","rails activesupport::cache::rediscachestore#read_multi()","rails activesupport::cache::store#read_multi()","rails activesupport::cache::strategy::localcache::localstore#read_multi_entries()","ruby argf#read_nonblock()","ruby io#read_nonblock()","ruby io::generic_readable#read_nonblock()","ruby openssl::buffering#read_nonblock()","ruby resolv::sz#read_s()","ruby win32::registry#read_s()","ruby win32::registry#read_s_expand()","ruby openssl::pkcs7::read_smime()","rails activerecord::store#read_store_attribute()","ruby net::http#read_timeout=()","ruby file::readable?()","ruby file::stat#readable?()","ruby filetest#readable?()","ruby pathname#readable?()","ruby irb::inputmethod#readable_after_eof?()","ruby irb::stdioinputmethod#readable_after_eof?()","rails date#readable_inspect()","rails datetime#readable_inspect()","ruby file::readable_real?()","ruby file::stat#readable_real?()","ruby filetest#readable_real?()","ruby pathname#readable_real?()","ruby encoding::invalidbytesequenceerror#readagain_bytes()","ruby argf#readbyte()","ruby io#readbyte()","ruby io::generic_readable#readbyte()","ruby zlib::gzipreader#readbyte()","ruby argf#readchar()","ruby io#readchar()","ruby io::generic_readable#readchar()","ruby openssl::buffering#readchar()","ruby zlib::gzipreader#readchar()","ruby argf#readline()","ruby csv#readline()","ruby io#readline()","ruby io::generic_readable#readline()","ruby irb::debug::ui#readline()","ruby irb::locale#readline()","ruby kernel#readline()","ruby openssl::buffering#readline()","ruby reline::core#readline()","ruby zlib::gzipreader#readline()","ruby argf#readlines()","ruby csv::readlines()","ruby csv#readlines()","ruby io::readlines()","ruby io#readlines()","ruby kernel#readlines()","ruby openssl::buffering#readlines()","ruby pathname#readlines()","ruby stringio#readlines()","ruby zlib::gzipreader#readlines()","ruby file::readlink()","ruby pathname#readlink()","rails rails::appbuilder#readme()","rails rails::generators::actions#readme()","rails rails::pluginbuilder#readme()","ruby irb::irb#readmultiline()","ruby reline::core#readmultiline()","rails activerecord::querymethods#readonly()","rails activerecord::core#readonly!()","rails activerecord::core#readonly?()","ruby io::buffer#readonly?()","rails activerecord::readonlyattributes::classmethods#readonly_attributes()","ruby argf#readpartial()","ruby gem::package::tarreader::entry#readpartial()","ruby io#readpartial()","ruby io::generic_readable#readpartial()","ruby openssl::buffering#readpartial()","ruby zlib::gzipreader#readpartial()","ruby io#ready?()","ruby complex#real()","ruby numeric#real()","ruby complex#real?()","ruby numeric#real?()","rails actioncontroller::requestforgeryprotection#real_csrf_token()","ruby file::realdirpath()","ruby pathname#realdirpath()","ruby fiddle::realloc()","ruby gem::configfile#really_verbose()","ruby file::realpath()","ruby pathname#realpath()","ruby benchmark::realtime()","rails activerecord::connectionadapters::connectionpool#reap()","rails activerecord::databaseconfigurations::hashconfig#reaping_frequency()","ruby localjumperror#reason()","ruby optionparser::parseerror#reason()","rails actionmailbox::base::receive()","ruby ractor::receive()","ruby ractor::receive_if()","ruby binding#receiver()","ruby frozenerror#receiver()","ruby keyerror#receiver()","ruby method#receiver()","ruby nameerror#receiver()","rails mail::message#recipients()","ruby openssl::pkcs7#recipients()","rails mail::message#recipients_addresses()","ruby reline::face::config#reconfigure()","rails activerecord::connectionadapters::abstractadapter#reconnect!()","rails activerecord::connectionadapters::mysql2adapter#reconnect!()","rails activerecord::connectionadapters::postgresqladapter#reconnect!()","rails activerecord::connectionadapters::sqlite3adapter#reconnect!()","rails activerecord::migration::commandrecorder#record()","rails activesupport::errorreporter#record()","rails activesupport::notifications::event#record()","ruby syntaxsuggest::codesearch#record()","ruby gem::resolver::stats#record_depth()","ruby syntaxsuggest::record_dir()","rails actionview::recordidentifier#record_key_for_dom_id()","ruby rdoc::codeobject#record_location()","ruby rdoc::context#record_location()","ruby gem::resolver::stats#record_requirements()","rails activerecord::associations::preloader::association::loaderrecords#records()","rails activerecord::associations::preloader::association::loaderquery#records_for()","ruby optionparser::parseerror#recover()","rails activerecord::connectionadapters::abstractmysqladapter#recreate_database()","ruby complex::rect()","ruby complex#rect()","ruby numeric#rect()","ruby complex::rectangular()","ruby complex#rectangular()","ruby numeric#rectangular()","ruby basicsocket#recv()","ruby ractor#recv()","ruby ractor::recv()","ruby unixsocket#recv_io()","ruby basicsocket#recv_nonblock()","ruby ipsocket#recvfrom()","ruby socket#recvfrom()","ruby unixsocket#recvfrom()","ruby socket#recvfrom_nonblock()","ruby udpsocket#recvfrom_nonblock()","ruby basicsocket#recvmsg()","ruby basicsocket#recvmsg_nonblock()","ruby gem::uri::redact()","ruby gem::uri#redact_credentials_from()","ruby gem::uri#redacted()","rails module#redefine_method()","rails module#redefine_singleton_method()","rails actiondispatch::routing::redirection#redirect()","rails actioncontroller::redirecting#redirect_back()","rails actioncontroller::redirecting#redirect_back_or_to()","rails rails::generators::namedbase#redirect_resource_name()","rails actioncontroller::flash#redirect_to()","rails actioncontroller::instrumentation#redirect_to()","rails actioncontroller::logsubscriber#redirect_to()","rails actioncontroller::redirecting#redirect_to()","rails activesupport::cache::rediscachestore#redis()","ruby enumerable#reduce()","rails actionview::template::types::type#ref()","rails mime::nulltype#ref()","rails mime::type#ref()","ruby fiddle::pinned#ref()","ruby fiddle::pointer#ref()","ruby rdoc::markdown#reference()","rails activerecord::connectionadapters::sqlite3::tabledefinition#references()","rails activerecord::connectionadapters::table#references()","rails activerecord::connectionadapters::tabledefinition#references()","rails activerecord::querymethods#references()","ruby ","ruby module#refinements()","rails activerecord::reflection::classmethods#reflect_on_aggregation()","rails activerecord::reflection::classmethods#reflect_on_all_aggregations()","rails activerecord::reflection::classmethods#reflect_on_all_associations()","rails activestorage::reflection::activerecordextensions::classmethods#reflect_on_all_attachments()","rails activerecord::reflection::classmethods#reflect_on_all_autosave_associations()","rails activerecord::reflection::classmethods#reflect_on_association()","rails activestorage::reflection::activerecordextensions::classmethods#reflect_on_attachment()","rails activerecord::reflection::classmethods#reflections()","ruby gem::refresh()","ruby gem::commands::setupcommand#regenerate_binstubs()","ruby gem::commands::setupcommand#regenerate_plugins()","ruby gem::uninstaller#regenerate_plugins()","ruby gem::installeruninstallerutils#regenerate_plugins_for()","ruby matchdata#regexp()","ruby optionparser::completion::regexp()","ruby drb::extservmanager#regist()","ruby drb::regist_server()","rails activemodel::type::register()","rails activerecord::type::register()","rails mime::type::register()","ruby drb::extservmanager#register()","ruby gem::noaliasyamltree#register()","ruby openssl::asn1::objectid::register()","rails mime::type::register_alias()","rails mime::type::register_callback()","ruby gem::commandmanager#register_command()","ruby gem::register_default_spec()","rails rails::sourceannotationextractor::annotation::register_directories()","ruby syntaxsuggest::codefrontier#register_engulf_block()","rails rails::sourceannotationextractor::annotation::register_extensions()","rails activesupport::executionwrapper::register_hook()","ruby syntaxsuggest::codefrontier#register_indent_block()","rails actiondispatch::debugexceptions::register_interceptor()","rails actionmailer::base::register_interceptor()","rails actionmailer::base::register_interceptors()","rails actionmailer::base::register_observer()","rails actionmailer::base::register_observers()","rails actionmailer::previews::classmethods#register_preview_interceptor()","rails actionmailer::previews::classmethods#register_preview_interceptors()","ruby uri::register_scheme()","rails rails::sourceannotationextractor::annotation::register_tags()","rails activerecord::tasks::databasetasks#register_task()","rails activerecord::connectionadapters::deduplicable::classmethods#registry()","ruby uri::generic#registry=()","rails rails::generators::namedbase#regular_class_path()","rails activesupport::hashwithindifferentaccess#regular_update()","rails activesupport::hashwithindifferentaccess#regular_update()","rails activesupport::hashwithindifferentaccess#regular_writer()","rails activesupport::hashwithindifferentaccess#regular_writer()","ruby env::rehash()","ruby hash#rehash()","rails actioncable::channel::base#reject()","rails actioncontroller::parameters#reject()","rails activesupport::hashwithindifferentaccess#reject()","rails activesupport::hashwithindifferentaccess#reject()","ruby array#reject()","ruby env::reject()","ruby enumerable#reject()","ruby enumerator::lazy#reject()","ruby hash#reject()","ruby optionparser::reject()","ruby optionparser#reject()","ruby optionparser::list#reject()","ruby yaml::dbm#reject()","rails actioncontroller::parameters#reject!()","ruby array#reject!()","ruby env::reject!()","ruby hash#reject!()","ruby set#reject!()","rails actioncable::connection::authorization#reject_unauthorized_connection()","ruby pathname#relative?()","ruby uri::generic#relative?()","ruby pathname#relative_path_from()","rails actionmailbox::relayer#relay()","ruby gem::version#release()","ruby optionparser#release()","rails activerecord::connectionadapters::connectionpool#release_connection()","rails activerecord::connectionadapters::savepoints#release_savepoint()","rails activesupport::reloader#release_unload_lock!()","rails activerecord::associations::collectionproxy#reload()","rails activerecord::attributemethods::dirty#reload()","rails activerecord::autosaveassociation#reload()","rails activerecord::persistence#reload()","rails activerecord::relation#reload()","ruby drb::drbunknown#reload()","rails activesupport::reloader::reload!()","rails rails::application::routesreloader#reload!()","rails rails::consolemethods#reload!()","rails rails::application#reload_routes!()","ruby bigdecimal#remainder()","ruby integer#remainder()","ruby numeric#remainder()","rails ","ruby gem::resolver::composedset#remote=()","ruby gem::localremoteoptions#remote?()","ruby irb::debug::ui#remote?()","ruby basicsocket#remote_address()","rails actioncable::server::base#remote_connections()","rails actiondispatch::request#remote_ip()","rails actiondispatch::request#remote_ip=()","rails actioncontroller::renderers::remove()","rails activerecord::connectionadapters::connectionpool#remove()","rails activerecord::connectionadapters::table#remove()","rails string#remove()","ruby fileutils::remove()","ruby gem::resolver::requirementlist#remove()","ruby gem::uninstaller#remove()","ruby optionparser#remove()","ruby rdoc::rubygemshook#remove()","ruby rdoc::rubygemshook#remove()","ruby ractor::selector#remove()","rails string#remove!()","ruby gem::uninstaller#remove_all()","rails activerecord::connectionadapters::schemastatements#remove_belongs_to()","rails activerecord::connectionadapters::table#remove_belongs_to()","ruby gem::dependencylist#remove_by_name()","rails actioncable::subscriptionadapter::postgresql::listener#remove_channel()","rails actioncable::subscriptionadapter::redis::listener#remove_channel()","rails actioncable::subscriptionadapter::subscribermap#remove_channel()","rails activerecord::connectionadapters::schemastatements#remove_check_constraint()","rails activerecord::connectionadapters::table#remove_check_constraint()","ruby module#remove_class_variable()","ruby rdoc::parser::simple#remove_coding_comment()","rails activerecord::connectionadapters::schemastatements#remove_column()","rails activerecord::connectionadapters::tabledefinition#remove_column()","rails activerecord::connectionadapters::schemastatements#remove_columns()","ruby rdoc::parser::c#remove_commented_out_lines()","rails activerecord::connectionhandling#remove_connection()","rails activerecord::connectionadapters::connectionhandler#remove_connection_pool()","ruby fileutils::remove_dir()","ruby fileutils::remove_entry()","ruby fileutils::remove_entry_secure()","rails activesupport::subscriber::remove_event_subscriber()","ruby gem::uninstaller#remove_executables()","ruby fileutils::remove_file()","ruby gem::commands::setupcommand#remove_file_list()","rails activesupport::backtracecleaner#remove_filters!()","rails activerecord::connectionadapters::schemastatements#remove_foreign_key()","rails activerecord::connectionadapters::table#remove_foreign_key()","ruby rdoc::context#remove_from_documentation?()","rails rails::generators::base::remove_hook_for()","rails activerecord::connectionadapters::schemastatements#remove_index()","rails activerecord::connectionadapters::table#remove_index()","ruby gem::availableset#remove_installed!()","ruby object#remove_instance_variable()","ruby rdoc::context#remove_invisible()","ruby rdoc::encoding::remove_magic_comment()","ruby module#remove_method()","ruby rdoc::parser::remove_modeline()","ruby rdoc::store#remove_nodoc()","ruby rdoc::classmodule#remove_nodoc_children()","ruby gem::commands::setupcommand#remove_old_bin_files()","ruby gem::commands::setupcommand#remove_old_lib_files()","ruby gem::commands::setupcommand#remove_old_man_files()","ruby gem::command#remove_option()","ruby gem::commands::ownercommand#remove_owners()","ruby gem::installeruninstallerutils#remove_plugins_for()","rails module#remove_possible_method()","rails module#remove_possible_singleton_method()","ruby rdoc::comment#remove_private()","ruby rdoc::parser::simple#remove_private_comment()","rails activerecord::connectionadapters::schemastatements#remove_reference()","rails activerecord::connectionadapters::table#remove_references()","rails actioncontroller::remove_renderer()","ruby drb::remove_server()","ruby rdoc::rdoc#remove_siginfo_handler()","rails activesupport::backtracecleaner#remove_silencers!()","ruby gem::specification::remove_spec()","ruby gem::dependencylist#remove_specs_unsatisfied_by()","ruby gc::remove_stress_to_class()","rails actioncable::subscriptionadapter::subscribermap#remove_subscriber()","rails activerecord::connectionadapters::schemastatements#remove_timestamps()","rails activerecord::connectionadapters::table#remove_timestamps()","ruby rdoc::parser::rubytools#remove_token_listener()","ruby rdoc::rdoc#remove_unparseable()","ruby gem::specification#removed_method_calls()","rails activerecord::connectionadapters::table#rename()","ruby file::rename()","ruby pathname#rename()","rails activerecord::connectionadapters::schemastatements#rename_column()","rails activerecord::connectionadapters::abstractmysqladapter#rename_index()","rails activerecord::connectionadapters::postgresql::schemastatements#rename_index()","rails activerecord::connectionadapters::schemastatements#rename_index()","rails activerecord::connectionadapters::table#rename_index()","rails activesupport::xmlmini#rename_key()","rails activerecord::connectionadapters::abstractmysqladapter#rename_table()","rails activerecord::connectionadapters::postgresql::schemastatements#rename_table()","rails activerecord::connectionadapters::sqlite3adapter#rename_table()","rails activerecord::connectionadapters::schemastatements#rename_table()","rails abstractcontroller::rendering#render()","rails actioncontroller::instrumentation#render()","rails actioncontroller::renderer#render()","rails actioncontroller::rendering#render()","rails actionview::helpers::renderinghelper#render()","rails actionview::helpers::tags::actiontext#render()","rails actionview::partialrenderer#render()","rails actionview::renderer#render()","rails actionview::template#render()","rails actiontext::contenthelper#render_action_text_attachments()","rails actiontext::contenthelper#render_action_text_content()","rails actiontext::content#render_attachment_galleries()","rails actiontext::content#render_attachments()","rails actionview::renderer#render_body()","rails actionview::logsubscriber#render_collection()","rails actionview::logsubscriber#render_count()","ruby irb::rubymodel#render_frame()","rails actionview::logsubscriber#render_layout()","rails actionview::logsubscriber#render_partial()","rails actionview::logsubscriber#render_template()","rails abstractcontroller::rendering#render_to_body()","rails actioncontroller::apirendering#render_to_body()","rails actioncontroller::renderers#render_to_body()","rails actionview::rendering#render_to_body()","rails abstractcontroller::rendering#render_to_string()","rails actioncontroller::renderer#render_to_string()","rails actioncontroller::rendering#render_to_string()","rails abstractcontroller::rendering#rendered_format()","ruby rinda::simplerenewer#renew()","ruby rinda::tupleentry#renew()","ruby io#reopen()","ruby logger#reopen()","ruby logger::logdevice#reopen()","ruby stringio#reopen()","ruby syslog::reopen()","rails activerecord::querymethods#reorder()","ruby array#repeated_combination()","ruby array#repeated_permutation()","rails actiontext::fragment#replace()","rails activerecord::associations::collectionproxy#replace()","rails activesupport::hashwithindifferentaccess#replace()","rails activesupport::hashwithindifferentaccess#replace()","rails activesupport::safebuffer#replace()","ruby array#replace()","ruby env::replace()","ruby fiddle::cstruct#replace()","ruby gem::sourcelist#replace()","ruby hash#replace()","ruby set#replace()","ruby string#replace()","ruby yaml::dbm#replace()","ruby encoding::converter#replacement()","ruby encoding::converter#replacement=()","rails activerecord::migration::commandrecorder#replay()","rails activerecord::connectionadapters::abstractadapter#replica?()","rails activerecord::databaseconfigurations::hashconfig#replica?()","ruby socket::udpsource#reply()","ruby rinda::ringserver#reply_service()","rails activesupport::errorreporter#report()","ruby gc::profiler::report()","ruby rdoc::stats#report()","ruby rdoc::stats#report_attributes()","ruby rdoc::stats#report_class_module()","ruby rdoc::stats#report_constants()","ruby rdoc::stats#report_methods()","ruby thread::report_on_exception()","ruby thread#report_on_exception()","ruby thread#report_on_exception=()","ruby thread::report_on_exception=()","rails actiondispatch::contentsecuritypolicy#report_uri()","ruby ","ruby psych::coder#represent_map()","ruby psych::coder#represent_object()","ruby psych::coder#represent_scalar()","ruby psych::coder#represent_seq()","rails activestorage::blob::representable#representable?()","rails activestorage::blob::representable#representation()","rails actioncable::connection::base#request()","rails actioncontroller::base#request()","ruby gem::remotefetcher#request()","ruby net::http#request()","rails actioncontroller::requestforgeryprotection#request_authenticity_tokens()","ruby net::httpgenericrequest#request_body_permitted?()","ruby gem::resolver::dependencyrequest#request_context()","ruby net::http#request_get()","ruby net::http#request_head()","rails actioncontroller::httpauthentication::basic::controllermethods#request_http_basic_authentication()","rails actioncontroller::httpauthentication::digest::controllermethods#request_http_digest_authentication()","rails actioncontroller::httpauthentication::token::controllermethods#request_http_token_authentication()","rails actiondispatch::request#request_id()","rails actiondispatch::request#request_method()","rails actiondispatch::request#request_method_symbol()","rails actiondispatch::request#request_parameters()","rails actiondispatch::request#request_parameters=()","ruby gem::resolver::conflict#request_path()","ruby net::http#request_post()","ruby uri::http#request_uri()","ruby uri::ws#request_uri()","ruby gem::resolver::conflict#requester()","rails actioncontroller::parameters#require()","ruby bundler::require()","ruby kernel#require()","rails rails::command::actions#require_application!()","rails rails::command::actions#require_application_and_environment!()","rails activesupport::dependencies::requiredependency#require_dependency()","rails actionview::template::handlers::builder#require_engine()","rails rails::command::actions#require_environment!()","ruby gem::streamui#require_io_console()","ruby gem::specification#require_path()","ruby gem::specification#require_path=()","ruby gem::basicspecification#require_paths()","ruby gem::specification#require_paths=()","ruby kernel#require_relative()","rails actiondispatch::contentsecuritypolicy#require_sri_for()","rails activesupport::reloader#require_unload_lock!()","ruby didyoumean::requirepathchecker::requireables()","rails actioncontroller::parameters#required()","ruby gem::specification::required_attribute?()","ruby gem::specification::required_attributes()","ruby gem::resolver::indexspecification#required_ruby_version()","ruby gem::resolver::specspecification#required_ruby_version()","ruby gem::specification#required_ruby_version=()","ruby gem::resolver::indexspecification#required_rubygems_version()","ruby gem::resolver::specspecification#required_rubygems_version()","ruby gem::specification#required_rubygems_version=()","ruby gem::dependency#requirement()","ruby gem::resolver::dependencyrequest#requirement()","ruby gem::resolver::stats#requirement!()","ruby gem::resolver#requirement_satisfied_by?()","ruby gem::specification#requirements()","ruby gem::specification#requirements=()","ruby gem::dependency#requirements_list()","rails activerecord::connectionadapters::abstractadapter#requires_reloading?()","rails activerecord::connectionadapters::sqlite3adapter#requires_reloading?()","ruby rdoc::task#rerdoc_task_description()","ruby reline::lineeditor#rerender()","ruby reline::lineeditor#rerender_all()","rails activesupport::rescuable::classmethods#rescue_from()","rails actiondispatch::exceptionwrapper#rescue_response?()","rails actiondispatch::exceptionwrapper#rescue_template()","rails activesupport::rescuable#rescue_with_handler()","rails activesupport::rescuable::classmethods#rescue_with_handler()","rails activerecord::querymethods#reselect()","rails activerecord::associations::collectionproxy#reset()","rails activerecord::relation#reset()","rails activesupport::currentattributes#reset()","ruby cgi::htmlextension#reset()","ruby digest::base#reset()","ruby digest::instance#reset()","ruby digest::sha2#reset()","ruby gem::commandmanager::reset()","ruby gem::request#reset()","ruby gem::security::reset()","ruby gem::specification::reset()","ruby openssl::cipher#reset()","ruby openssl::digest#reset()","ruby openssl::hmac#reset()","ruby rdoc::parser::rubytools#reset()","ruby reline::config#reset()","ruby reline::generalio::reset()","ruby reline::lineeditor#reset()","ruby set#reset()","ruby stringscanner#reset()","ruby zlib::zstream#reset()","rails activerecord::connectionadapters::abstractadapter#reset!()","rails activerecord::connectionadapters::mysql2adapter#reset!()","rails activerecord::connectionadapters::postgresqladapter#reset!()","ruby bundler::reset!()","rails actiondispatch::response#reset_body!()","rails activerecord::fixtureset::reset_cache()","rails activesupport::callbacks::classmethods#reset_callbacks()","rails activerecord::modelschema::classmethods#reset_column_information()","rails activerecord::countercache::classmethods#reset_counters()","rails actionview::helpers::texthelper#reset_cycle()","ruby reline::config#reset_default_key_bindings()","ruby reline::keyactor::base#reset_default_key_bindings()","ruby reline::lineeditor#reset_line()","rails activerecord::locking::optimistic::classmethods#reset_locking_column()","ruby gem::specification#reset_nil_attributes_to_default()","ruby reline::config#reset_oneshot_key_bindings()","ruby bundler::reset_paths!()","ruby bundler::reset_rubygems!()","rails activerecord::logsubscriber::reset_runtime()","rails activerecord::connectionadapters::databasestatements#reset_sequence!()","rails actioncontroller::metal#reset_session()","rails actiondispatch::request#reset_session()","ruby bundler::reset_settings_and_root!()","ruby rubyvm::yjit::reset_stats!()","ruby reline::face::reset_to_initial_configs()","ruby reline::lineeditor#reset_variables()","rails activesupport::currentattributes::resets()","ruby io::buffer#resize()","ruby reline::lineeditor#resize()","rails actiondispatch::railsentitystore::resolve()","rails actiondispatch::railsmetastore::resolve()","rails actiondispatch::routing::mapper::customurls#resolve()","ruby gem::requestset#resolve()","ruby gem::resolver#resolve()","ruby rdoc::crossreference#resolve()","ruby rdoc::context#resolve_aliases()","ruby gem::requestset#resolve_current()","ruby rdoc::crossreference#resolve_method()","rails actiondispatch::routing::mapper::resources#resource()","rails actiondispatch::routing::mapper::resources#resources()","rails actiondispatch::routing::mapper::resources#resources_path_names()","rails actioncontroller::mimeresponds#respond_to()","rails actiondispatch::response::rackbody#respond_to?()","rails activemodel::attributemethods#respond_to?()","rails activerecord::attributemethods#respond_to?()","rails activesupport::timewithzone#respond_to?()","rails rails::railtie::configurable::classmethods#respond_to?()","rails rails::railtie::configuration#respond_to?()","ruby drb::drbobject#respond_to?()","ruby drb::drbobject#respond_to?()","ruby object#respond_to?()","rails activesupport::multibyte::chars#respond_to_missing?()","rails activesupport::orderedoptions#respond_to_missing?()","rails activesupport::timewithzone#respond_to_missing?()","ruby delegator#respond_to_missing?()","ruby gem::uri#respond_to_missing?()","ruby object#respond_to_missing?()","rails activemodel::attributemethods#respond_to_without_attributes?()","rails actioncontroller::base#response()","rails actioncontroller::mimeresponds::collector#response()","rails abstractcontroller::base#response_body()","rails actioncontroller::live#response_body=()","rails actioncontroller::metal#response_body=()","ruby net::http#response_body_encoding=()","ruby net::httpgenericrequest#response_body_permitted?()","rails actiondispatch::response#response_code()","ruby openssl::ocsp::basicresponse#responses()","ruby csv::parser::inputsscanner#rest()","ruby stringscanner#rest()","ruby stringscanner#rest?()","ruby stringscanner#rest_size()","rails actioncable::server::base#restart()","rails ","ruby cgi::session::filestore#restore()","ruby cgi::session::memorystore#restore()","ruby cgi::session::nullstore#restore()","ruby cgi::session::pstore#restore()","ruby json::restore()","ruby marshal::restore()","rails activemodel::dirty#restore_attributes()","ruby stringscanner#restsize()","rails actiondispatch::routing::consoleformatter::base#result()","rails actiondispatch::routing::htmltableformatter#result()","ruby coverage::result()","ruby erb#result()","ruby gc::profiler::result()","ruby stopiteration#result()","ruby erb#result_with_hash()","ruby coverage::resume()","ruby fiber#resume()","ruby rdoc::parser::ruby#retrieve_comment_body()","ruby reline::lineeditor#retrieve_completion_block()","ruby reline::lineeditor::dialogprocscope#retrieve_completion_block()","ruby irb::inputcompletor::retrieve_completion_data()","rails activerecord::connectionhandling#retrieve_connection()","rails activerecord::connectionadapters::connectionhandler#retrieve_connection_pool()","ruby reline::ansi::retrieve_keybuffer()","ruby reline::config#retrieve_string()","rails activejob::exceptions#retry_job()","rails activejob::exceptions::classmethods#retry_on()","ruby csv#return_headers?()","ruby csv::parser#return_headers?()","ruby win32ole::method#return_type()","ruby win32ole::method#return_type_detail()","ruby tracepoint#return_value()","ruby win32ole::method#return_vtype()","ruby win32ole::param#retval?()","rails activesupport::multibyte::chars#reverse()","ruby array#reverse()","ruby ipaddr#reverse()","ruby string#reverse()","ruby array#reverse!()","ruby string#reverse!()","ruby array#reverse_each()","ruby enumerable#reverse_each()","ruby range#reverse_each()","rails actioncontroller::parameters#reverse_merge()","rails activesupport::hashwithindifferentaccess#reverse_merge()","rails activesupport::hashwithindifferentaccess#reverse_merge()","rails hash#reverse_merge()","rails actioncontroller::parameters#reverse_merge!()","rails activesupport::hashwithindifferentaccess#reverse_merge!()","rails activesupport::hashwithindifferentaccess#reverse_merge!()","rails hash#reverse_merge!()","rails activerecord::querymethods#reverse_order()","ruby reline::lineeditor#reverse_search_history()","rails hash#reverse_update()","rails activerecord::migration#reversible()","rails activerecord::migration#revert()","rails activerecord::migration::commandrecorder#revert()","ruby syntaxsuggest::scanhistory#revert_last_commit()","rails activerecord::migration#reverting?()","ruby openssl::ocsp::singleresponse#revocation_reason()","ruby openssl::ocsp::singleresponse#revocation_time()","ruby openssl::x509::crl#revoked()","ruby openssl::x509::crl#revoked=()","rails activerecord::querymethods#rewhere()","rails actiondispatch::http::uploadedfile#rewind()","ruby argf#rewind()","ruby csv#rewind()","ruby csv::writer#rewind()","ruby dir#rewind()","ruby enumerator#rewind()","ruby enumerator::chain#rewind()","ruby enumerator::product#rewind()","ruby gem::package::tarreader#rewind()","ruby gem::package::tarreader::entry#rewind()","ruby io#rewind()","ruby stringio#rewind()","ruby zlib::gzipreader#rewind()","rails actioncontroller::httpauthentication::token#rewrite_param_values()","ruby cgi::util#rfc1123_date()","rails activesupport::timewithzone#rfc2822()","ruby date::rfc2822()","ruby date#rfc2822()","ruby datetime::rfc2822()","ruby time::rfc2822()","ruby time#rfc2822()","rails activesupport::timewithzone#rfc3339()","rails activesupport::timezone#rfc3339()","rails time::rfc3339()","ruby date::rfc3339()","ruby date#rfc3339()","ruby datetime::rfc3339()","ruby datetime#rfc3339()","rails activesupport::timewithzone#rfc822()","ruby date::rfc822()","ruby date#rfc822()","ruby datetime::rfc822()","ruby time#rfc822()","ruby time::rfc822()","ruby gem::specification#ri_dir()","ruby rdoc::rubygemshook#ri_installed?()","ruby rdoc::rubygemshook#ri_installed?()","ruby rdoc::servlet#ri_paths()","rails actionview::helpers::formbuilder#rich_text_area()","rails actionview::helpers::formhelper#rich_text_area()","rails actiontext::taghelper#rich_text_area_tag()","rails actiontext::attribute#rich_text_association_names()","ruby process::gid::rid()","ruby process::uid::rid()","ruby array#rindex()","ruby string#rindex()","ruby ","ruby string#rjust()","ruby fileutils::rm()","ruby fileutils::rm_f()","ruby fileutils::rm_r()","ruby bundler::rm_rf()","ruby fileutils::rm_rf()","ruby dir::rmdir()","ruby fileutils::rmdir()","ruby pathname#rmdir()","ruby fileutils::rmtree()","ruby pathname#rmtree()","rails ","rails activerecord::connectionadapters::abstractadapter#role()","rails activerecord::connectionadapters::realtransaction#rollback()","rails activerecord::connectionadapters::savepointtransaction#rollback()","rails activerecord::connectionadapters::transactionstate#rollback!()","rails activerecord::connectionadapters::databasestatements#rollback_db_transaction()","rails activerecord::connectionadapters::databasestatements#rollback_to_savepoint()","rails activerecord::connectionadapters::transactionstate#rolledback?()","rails ","rails ","rails ","rails actiondispatch::routing::mapper::resources#root()","rails activerecord::tasks::databasetasks#root()","rails rails::root()","rails rails::command::root()","ruby bundler::root()","ruby psych::nodes::document#root()","ruby rdoc::servlet#root()","rails rails::engine::configuration#root=()","ruby pstore#root?()","ruby pathname#root?()","ruby rdoc::servlet#root_search()","ruby pstore#roots()","ruby array#rotate()","ruby array#rotate!()","ruby bigdecimal#round()","ruby float#round()","ruby integer#round()","ruby numeric#round()","ruby rational#round()","ruby time#round()","rails actionmailbox::inboundemail::routable#route()","rails actionmailbox::router#route()","rails actionmailbox::routing#route()","rails rails::generators::actions#route()","rails actiondispatch::routing::urlfor#route_for()","ruby uri::generic#route_from()","rails activemodel::naming::route_key()","rails actionmailbox::inboundemail::routable#route_later()","ruby uri::generic#route_to()","rails rails::generators::namedbase#route_url()","rails rails::engine#routes()","rails ","rails ","rails ","rails actionmailbox::routing#routing()","ruby csv#row_sep()","ruby csv::parser#row_separator()","ruby string#rpartition()","ruby openssl::bn#rshift!()","ruby string#rstrip()","ruby string#rstrip!()","ruby gem::ruby()","ruby gem::ext::builder::ruby()","ruby gem::requestset::gemdependencyapi#ruby()","rails ","ruby proc#ruby2_keywords()","rails activejob::arguments::hash::ruby2_keywords_hash()","ruby hash::ruby2_keywords_hash()","rails activejob::arguments::hash::ruby2_keywords_hash?()","ruby hash::ruby2_keywords_hash?()","ruby gem::ruby_api_version()","ruby gem::ruby_engine()","ruby bundler::ruby_scope()","rails rails::appbuilder#ruby_version()","ruby gem::ruby_version()","ruby gem::configfile#rubygems_api_key()","ruby gem::configfile#rubygems_api_key=()","ruby gem::gemcutterutilities#rubygems_api_request()","ruby gem::deprecate::rubygems_deprecate()","ruby gem::deprecate::rubygems_deprecate_command()","ruby gem::commands::updatecommand#rubygems_target_version()","ruby gem::rubygems_version()","rails actionmailbox::inboundemail::incineratable::incineration#run()","rails actionview::cacheexpiry::executor#run()","rails activerecord::connectionadapters::connectionpool::reaper#run()","rails activerecord::migration#run()","rails activerecord::querycache::run()","rails rails::engine::updater::run()","rails rails::initializable::initializer#run()","ruby erb#run()","ruby gem::commandmanager#run()","ruby gem::ext::builder::run()","ruby gem::gemrunner#run()","ruby irb::irb#run()","ruby thread#run()","rails activesupport::executionwrapper::run!()","rails activesupport::callbacks#run_callbacks()","rails rails::initializable#run_initializers()","rails activesupport::dependencies::run_interlock()","rails activesupport::lazyloadhooks#run_load_hooks()","rails rails::application#runner()","rails rails::railtie::runner()","rails activesupport::dependencies::interlock#running()","ruby coverage::running?()","rails activerecord::logsubscriber::runtime()","rails activerecord::logsubscriber::runtime=()","ruby gem::dependency#runtime?()","ruby gem::specification#runtime_dependencies()","ruby rubyvm::rjit::runtime_stats()","ruby rubyvm::yjit::runtime_stats()","ruby gem::remotefetcher#s3_uri_signer()","rails actionview::helpers::texthelper#safe_concat()","rails activesupport::safebuffer#safe_concat()","rails activesupport::inflector#safe_constantize()","rails string#safe_constantize()","ruby gem::uninstaller#safe_delete()","ruby psych::safe_dump()","rails actionview::helpers::outputsafetyhelper#safe_join()","ruby gem::safemarshal::safe_load()","ruby gem::safeyaml::safe_load()","ruby psych::safe_load()","ruby psych::safe_load_file()","ruby bundler::safe_load_marshal()","ruby fileutils::safe_unlink()","ruby array#sample()","rails actiondispatch::contentsecuritypolicy#sandbox()","rails rails::console#sandbox?()","rails actionview::helpers::sanitizehelper#sanitize()","ruby gem::specification#sanitize()","rails actiontext::contenthelper#sanitize_action_text_content()","rails actionview::helpers::sanitizehelper#sanitize_css()","rails activerecord::connectionadapters::databasestatements#sanitize_limit()","ruby rdoc::options#sanitize_path()","rails activerecord::sanitization::classmethods#sanitize_sql()","rails activerecord::sanitization::classmethods#sanitize_sql_array()","rails activerecord::sanitization::classmethods#sanitize_sql_for_assignment()","rails activerecord::sanitization::classmethods#sanitize_sql_for_conditions()","rails activerecord::sanitization::classmethods#sanitize_sql_for_order()","rails activerecord::sanitization::classmethods#sanitize_sql_hash_for_assignment()","rails activerecord::sanitization::classmethods#sanitize_sql_like()","ruby gem::specification#sanitize_string()","rails activestorage::filename#sanitized()","ruby gem::requirement#satisfied_by?()","ruby gem::specification#satisfies_requirement?()","ruby date#saturday?()","ruby time#saturday?()","rails activerecord::persistence#save()","rails activerecord::validations#save()","rails rails::generators::activemodel#save()","ruby rdoc::store#save()","rails activerecord::persistence#save!()","rails activerecord::validations#save!()","ruby rdoc::store#save_cache()","ruby rdoc::store#save_class()","ruby bigdecimal::save_exception_mode()","ruby irb::context#save_history()","ruby irb::context#save_history=()","ruby bigdecimal::save_limit()","ruby rdoc::store#save_method()","ruby rdoc::store#save_page()","ruby bigdecimal::save_rounding_mode()","rails activerecord::attributemethods::dirty#saved_change_to_attribute()","rails activerecord::attributemethods::dirty#saved_change_to_attribute?()","rails activerecord::attributemethods::dirty#saved_changes()","rails activerecord::attributemethods::dirty#saved_changes?()","rails activerecord::migration#say()","ruby gem::streamui#say()","ruby gem::userinteraction#say()","rails activerecord::migration#say_with_time()","ruby psych::coder#scalar()","ruby psych::emitter#scalar()","ruby psych::handler#scalar()","ruby psych::treebuilder#scalar()","ruby psych::coder#scalar=()","ruby psych::nodes::node#scalar?()","ruby psych::nodes::scalar#scalar?()","ruby bigdecimal#scale()","ruby csv::parser::inputsscanner#scan()","ruby openssl::x509::name::rfc2253dn#scan()","ruby prism::pattern#scan()","ruby rdoc::parser::c#scan()","ruby rdoc::parser::changelog#scan()","ruby rdoc::parser::markdown#scan()","ruby rdoc::parser::rd#scan()","ruby rdoc::parser::ruby#scan()","ruby rdoc::parser::simple#scan()","ruby string#scan()","ruby stringscanner#scan()","ruby syntaxsuggest::scanhistory#scan()","ruby syntaxsuggest::aroundblockscan#scan_adjacent_indent()","ruby csv::parser::inputsscanner#scan_all()","ruby stringscanner#scan_full()","ruby syntaxsuggest::aroundblockscan#scan_neighbors_not_empty()","ruby irb::nestingparser::scan_opens()","ruby irb::color::symbolstate#scan_token()","ruby stringscanner#scan_until()","ruby syntaxsuggest::aroundblockscan#scan_while()","rails actionmailbox::incinerationjob::schedule()","ruby fiber::schedule()","rails activerecord::relation#scheduled?()","ruby fiber::scheduler()","rails activerecord::connectionadapters::abstractadapter#schema_cache()","rails activerecord::connectionadapters::abstractadapter#schema_cache=()","rails activerecord::databaseconfigurations::hashconfig#schema_cache_path()","rails activerecord::databaseconfigurations::hashconfig#schema_dump()","rails activerecord::tasks::databasetasks#schema_dump_path()","rails activerecord::connectionadapters::postgresql::schemastatements#schema_exists?()","rails activerecord::tasks::databasetasks#schema_file_type()","rails activerecord::modelschema::schema_migrations_table_name()","rails activerecord::modelschema::schema_migrations_table_name=()","rails activerecord::connectionadapters::postgresql::schemastatements#schema_names()","rails activerecord::connectionadapters::postgresql::schemastatements#schema_search_path()","rails activerecord::connectionadapters::postgresql::schemastatements#schema_search_path=()","rails activerecord::tasks::databasetasks#schema_up_to_date?()","rails activerecord::connectionadapters::abstractadapter#schema_version()","ruby uri::generic#scheme=()","rails activerecord::encryption::encryptablerecord#scheme_for()","ruby uri::scheme_list()","rails actiondispatch::routing::mapper::scoping#scope()","rails activerecord::associations::collectionproxy#scope()","rails activerecord::scoping::named::classmethods#scope()","ruby uri::ldap#scope()","ruby uri::ldap#scope=()","rails activerecord::reflection::macroreflection#scope_for()","rails activerecord::relation#scope_for_create()","ruby didyoumean::classnamechecker#scopes()","rails activerecord::relation#scoping()","ruby reline::lineeditor::dialogprocscope#screen_height()","ruby reline::lineeditor::dialogprocscope#screen_width()","ruby rubyvm::abstractsyntaxtree::node#script_lines()","ruby rubyvm::instructionsequence#script_lines()","ruby json::ext::generator::state#script_safe()","ruby json::ext::generator::state#script_safe=()","ruby json::ext::generator::state#script_safe?()","ruby io#scroll_backward()","ruby reline::ansi::scroll_down()","ruby reline::generalio::scroll_down()","ruby reline::windows::scroll_down()","ruby io#scroll_forward()","ruby cgi::htmlextension#scrolling_list()","ruby string#scrub()","ruby string#scrub!()","ruby openssl::kdf::scrypt()","ruby irb::jobmanager#search()","ruby optionparser::list#search()","ruby optionparser::search_const()","ruby encoding::converter::search_convpath()","rails actionview::helpers::formbuilder#search_field()","rails actionview::helpers::formhelper#search_field()","rails actionview::helpers::formtaghelper#search_field_tag()","ruby irb::locale#search_file()","ruby gem::resolver#search_for()","ruby gem::specfetcher#search_for_dependency()","ruby stringscanner#search_full()","ruby rdoc::classmodule#search_record()","ruby rdoc::methodattr#search_record()","ruby rdoc::toplevel#search_record()","ruby datetime#sec()","ruby time#sec()","rails time#sec_fraction()","ruby datetime#sec_fraction()","rails activerecord::associations::collectionproxy#second()","rails activerecord::findermethods#second()","rails array#second()","rails numeric#second()","ruby datetime#second()","rails activerecord::findermethods#second!()","ruby datetime#second_fraction()","rails activerecord::associations::collectionproxy#second_to_last()","rails activerecord::findermethods#second_to_last()","rails array#second_to_last()","rails activerecord::findermethods#second_to_last!()","rails numeric#seconds()","rails datetime#seconds_since_midnight()","rails time#seconds_since_midnight()","rails activesupport::timezone::seconds_to_utc_offset()","rails datetime#seconds_until_end_of_day()","rails time#seconds_until_end_of_day()","rails rails::application#secret_key_base()","rails actioncontroller::httpauthentication::digest#secret_token()","rails rails::application#secrets()","rails actiondispatch::routing::consoleformatter::base#section()","rails actiondispatch::routing::consoleformatter::expanded#section()","rails actiondispatch::routing::consoleformatter::sheet#section()","rails actiondispatch::routing::htmltableformatter#section()","ruby rdoc::codeobject#section()","ruby rdoc::context#section_contents()","rails actiondispatch::routing::consoleformatter::base#section_title()","rails actiondispatch::routing::consoleformatter::expanded#section_title()","rails actiondispatch::routing::consoleformatter::sheet#section_title()","rails actiondispatch::routing::htmltableformatter#section_title()","ruby openssl::config#sections()","ruby rdoc::context#sections()","ruby cgi::cookie#secure=()","rails activesupport::securityutils::secure_compare()","ruby openssl::secure_compare()","rails activesupport::securecomparerotator#secure_compare!()","ruby ","ruby openssl::ssl::sslcontext#security_level()","ruby openssl::ssl::sslcontext#security_level=()","ruby rdoc::methodattr#see()","ruby openssl::pkey::ec::group#seed()","ruby openssl::random::seed()","ruby random::seed()","ruby random#seed()","ruby openssl::pkey::ec::group#seed=()","rails activerecord::tasks::databasetasks#seed_loader()","rails ","ruby argf#seek()","ruby dir#seek()","ruby gem::package::tarreader#seek()","ruby gem::package::tarreader::entry#seek()","ruby io#seek()","ruby stringio#seek()","rails actioncontroller::parameters#select()","rails actionview::helpers::formbuilder#select()","rails actionview::helpers::formoptionshelper#select()","rails activerecord::associations::collectionproxy#select()","rails activerecord::querymethods#select()","rails activesupport::hashwithindifferentaccess#select()","rails activesupport::hashwithindifferentaccess#select()","ruby array#select()","ruby env::select()","ruby enumerable#select()","ruby enumerator::lazy#select()","ruby hash#select()","ruby io::select()","ruby kernel#select()","ruby ractor::select()","ruby struct#select()","ruby uri::generic#select()","ruby yaml::dbm#select()","rails actioncontroller::parameters#select!()","ruby array#select!()","ruby env::select!()","ruby hash#select!()","ruby set#select!()","rails activerecord::connectionadapters::databasestatements#select_all()","rails activerecord::connectionadapters::querycache#select_all()","rails actionview::helpers::datehelper#select_date()","rails actionview::helpers::datehelper#select_datetime()","rails actionview::helpers::datehelper#select_day()","rails actionview::helpers::datehelper#select_hour()","rails actionview::helpers::datehelper#select_minute()","rails actionview::helpers::datehelper#select_month()","rails activerecord::connectionadapters::databasestatements#select_one()","rails activerecord::connectionadapters::databasestatements#select_rows()","rails actionview::helpers::datehelper#select_second()","rails actionview::helpers::formtaghelper#select_tag()","rails actionview::helpers::datehelper#select_time()","rails activerecord::connectionadapters::databasestatements#select_value()","rails activerecord::connectionadapters::databasestatements#select_values()","rails actionview::helpers::datehelper#select_year()","rails actiontext::attachmentgallery::selector()","ruby tracepoint#self()","ruby reline::lineeditor#self_insert()","ruby bundler::self_manager()","ruby basicsocket#send()","ruby gem::gemcutterutilities::webauthnlistener::socketresponder#send()","ruby object#send()","ruby ractor#send()","ruby udpsocket#send()","rails actioncable::connection::base#send_async()","rails activestorage::streaming#send_blob_stream()","rails actioncontroller::datastreaming#send_data()","rails actioncontroller::instrumentation#send_data()","rails actioncontroller::logsubscriber#send_data()","rails actiondispatch::request#send_early_hints()","rails actioncontroller::datastreaming#send_file()","rails actioncontroller::instrumentation#send_file()","rails actioncontroller::logsubscriber#send_file()","rails actiondispatch::response#send_file()","ruby gem::commands::pushcommand#send_gem()","ruby unixsocket#send_io()","ruby net::http#send_request()","rails actioncontroller::live#send_stream()","ruby irb::frame::sender()","rails actiondispatch::response#sending!()","rails actiondispatch::response#sending?()","rails actiondispatch::response#sending_file=()","ruby basicsocket#sendmsg()","ruby basicsocket#sendmsg_nonblock()","rails actiondispatch::response#sent!()","rails actiondispatch::response#sent?()","ruby optionparser#separator()","ruby pp::ppmethods#seplist()","ruby psych::coder#seq=()","ruby psych::nodes::node#sequence?()","ruby psych::nodes::sequence#sequence?()","rails activerecord::modelschema::classmethods#sequence_name()","rails activerecord::modelschema::classmethods#sequence_name=()","rails activerecord::connectionadapters::postgresql::columnmethods#serial()","ruby openssl::ocsp::certificateid#serial()","ruby openssl::pkcs7::recipientinfo#serial()","ruby openssl::pkcs7::signerinfo#serial()","ruby openssl::x509::certificate#serial()","ruby openssl::x509::revoked#serial()","ruby openssl::x509::certificate#serial=()","ruby openssl::x509::revoked#serial=()","ruby openssl::timestamp::tokeninfo#serial_number()","rails activerecord::connectionadapters::postgresql::schemastatements#serial_sequence()","rails activemodel::type::value#serializable?()","rails activemodel::type::value#serializable?()","rails activemodel::serialization#serializable_hash()","rails activerecord::serialization#serializable_hash()","rails activejob::arguments#serialize()","rails activejob::core#serialize()","rails activejob::serializers::objectserializer#serialize()","rails activejob::serializers::rangeserializer#serialize()","rails activemodel::type::value#serialize()","rails activemodel::type::value#serialize()","rails activerecord::attributemethods::serialization::classmethods#serialize()","rails activerecord::encryption::encryptedattributetype#serialize()","rails activerecord::encryption::extendeddeterministicqueries::extendedencryptabletype#serialize()","rails activerecord::type::json#serialize()","rails activerecord::type::time#serialize()","rails activejob::serializers::objectserializer#serialize?()","rails rails::server#served_url()","rails actioncable#server()","rails rails::application#server()","rails rails::railtie::server()","rails actiondispatch::http::url#server_port()","rails actiondispatch::request#server_software()","rails activestorage::blob#service()","ruby drb::extservmanager#service()","rails activestorage::logsubscriber#service_delete()","rails activestorage::logsubscriber#service_delete_prefixed()","rails activestorage::logsubscriber#service_download()","rails activestorage::logsubscriber#service_exist()","rails activestorage::blob#service_headers_for_direct_upload()","rails activestorage::logsubscriber#service_mirror()","ruby resolv::dns::resource::in::servicebinding#service_mode?()","rails activestorage::logsubscriber#service_streaming_download()","rails activestorage::logsubscriber#service_upload()","rails activestorage::logsubscriber#service_url()","rails activestorage::blob#service_url_for_direct_upload()","ruby openssl::ssl::sslsocket#session()","ruby openssl::ssl::sslsocket#session=()","ruby openssl::ssl::sslcontext#session_add()","rails activerecord::connectionadapters::postgresqladapter#session_auth=()","ruby openssl::ssl::sslcontext#session_cache_mode()","ruby openssl::ssl::sslcontext#session_cache_mode=()","ruby openssl::ssl::sslcontext#session_cache_size()","ruby openssl::ssl::sslcontext#session_cache_size=()","ruby openssl::ssl::sslcontext#session_cache_stats()","rails actiondispatch::request#session_options=()","ruby openssl::ssl::sslcontext#session_remove()","ruby openssl::ssl::sslsocket#session_reused?()","rails rails::application::configuration#session_store()","rails activejob::core::classmethods#set()","rails activesupport::currentattributes#set()","ruby ipaddr#set()","ruby gem::configfile#set_api_key()","ruby gem::gemcutterutilities#set_api_key()","rails rails::command::actions#set_application_directory!()","ruby uri::ldap#set_attributes()","ruby exception#set_backtrace()","ruby optionparser::parseerror#set_backtrace()","ruby openssl::bn#set_bit!()","rails activesupport::callbacks::classmethods#set_callback()","ruby rdoc::context#set_constant_visibility_for()","rails actionmailer::base#set_content_type()","ruby net::httpheader#set_content_type()","rails activesupport::errorreporter#set_context()","ruby openssl::pkey::rsa#set_crt_params()","ruby fiddle::cstructentity#set_ctypes()","ruby fiddle::cunionentity#set_ctypes()","ruby rdoc::context#set_current_section()","ruby reline::lineeditor::dialog#set_cursor_pos()","ruby reline::lineeditor::dialogprocscope#set_cursor_pos()","ruby net::http#set_debug_output()","ruby openssl::engine#set_default()","ruby reline::ansi::set_default_key_bindings()","ruby reline::generalio::set_default_key_bindings()","ruby reline::windows::set_default_key_bindings()","ruby reline::ansi::set_default_key_bindings_ansi_cursor()","ruby reline::ansi::set_default_key_bindings_comprehensive_list()","ruby reline::ansi::set_default_key_bindings_terminfo()","ruby openssl::x509::store#set_default_paths()","ruby reline::lineeditor::dialogprocscope#set_dialog()","ruby zlib::deflate#set_dictionary()","ruby zlib::inflate#set_dictionary()","ruby uri::ldap#set_dn()","ruby argf#set_encoding()","ruby io#set_encoding()","ruby stringio#set_encoding()","ruby io#set_encoding_by_bom()","ruby stringio#set_encoding_by_bom()","rails rails::server#set_environment()","rails rails::console#set_environment!()","ruby erb#set_eoutvar()","ruby rdoc::erbio#set_eoutvar()","ruby rdoc::erbpartial#set_eoutvar()","ruby getoptlong#set_error()","ruby uri::ldap#set_extensions()","ruby openssl::pkey::rsa#set_factors()","ruby uri::ldap#set_filter()","ruby openssl::bn#set_flags()","ruby net::httpheader#set_form()","ruby net::httpheader#set_form_data()","ruby openssl::pkey::ec::group#set_generator()","rails actiondispatch::response#set_header()","ruby uri::mailto#set_headers()","ruby uri::file#set_host()","ruby uri::generic#set_host()","ruby openssl::pkey::dh#set_key()","ruby openssl::pkey::dsa#set_key()","ruby openssl::pkey::rsa#set_key()","ruby reline::lineeditor::dialogprocscope#set_key()","ruby irb::context#set_last_value()","ruby reline::lineeditor#set_mark()","rails actiondispatch::routing::mapper::resources#set_member_mappings_for_resource()","rails rails::generators::migration#set_migration_assigns!()","ruby uri::generic#set_opaque()","ruby optionparser::parseerror#set_option()","ruby getoptlong#set_options()","ruby openssl::ssl::sslcontext#set_params()","ruby uri::file#set_password()","ruby uri::generic#set_password()","ruby reline::lineeditor#set_pasting_state()","ruby uri::ftp#set_path()","ruby uri::generic#set_path()","ruby uri::file#set_port()","ruby uri::generic#set_port()","ruby openssl::pkey::dh#set_pqg()","ruby openssl::pkey::dsa#set_pqg()","ruby net::httpheader#set_range()","ruby fiber::set_scheduler()","ruby uri::generic#set_scheme()","ruby uri::ldap#set_scope()","ruby reline::ansi::set_screen_size()","ruby reline::generalio::set_screen_size()","ruby reline::windows::set_screen_size()","ruby reline::lineeditor#set_signal_handlers()","rails activerecord::connectionadapters::postgresqladapter#set_standard_conforming_strings()","ruby io::buffer#set_string()","ruby module#set_temporary_name()","ruby uri::mailto#set_to()","ruby openssl::pkey::ec::point#set_to_infinity!()","ruby kernel#set_trace_func()","ruby thread#set_trace_func()","ruby uri::ftp#set_typecode()","ruby uri::file#set_user()","ruby uri::generic#set_user()","ruby uri::file#set_userinfo()","ruby uri::generic#set_userinfo()","ruby io::buffer#set_value()","ruby io::buffer#set_values()","ruby rdoc::context#set_visibility_for()","ruby reline::ansi::set_winch_handler()","ruby reline::generalio::set_winch_handler()","ruby reline::windows::set_winch_handler()","ruby string#setbyte()","ruby process::sys::setegid()","ruby process::sys::seteuid()","ruby process::sys::setgid()","ruby file::setgid?()","ruby file::stat#setgid?()","ruby filetest#setgid?()","ruby pathname#setgid?()","ruby etc::setgrent()","ruby process::setpgid()","ruby process::setpgrp()","ruby process::setpriority()","ruby process::setproctitle()","ruby win32ole#setproperty()","ruby etc::setpwent()","ruby process::sys::setregid()","ruby process::sys::setresgid()","ruby process::sys::setresuid()","ruby process::sys::setreuid()","ruby process::sys::setrgid()","ruby process::setrlimit()","ruby process::sys::setruid()","ruby process::setsid()","ruby basicsocket#setsockopt()","ruby openssl::ssl::socketforwarder#setsockopt()","ruby bundler::settings()","ruby process::sys::setuid()","ruby file::setuid?()","ruby file::stat#setuid?()","ruby filetest#setuid?()","ruby pathname#setuid?()","ruby bundler::setup()","ruby coverage::setup()","ruby irb::debug::setup()","ruby openssl::ssl::sslcontext#setup()","ruby rdoc::rubygemshook#setup()","ruby rdoc::rubygemshook#setup()","rails ","ruby drb::drbsslsocket::sslconfig#setup_certificate()","ruby rdoc::options#setup_generator()","rails rails::api::task#setup_horo_variables()","rails activerecord::tasks::databasetasks#setup_initial_database_yaml()","ruby irb::debug::ui#setup_interrupt()","ruby rdoc::rdoc#setup_output_dir()","ruby gem::package#setup_signer()","ruby drb::drbsslsocket::sslconfig#setup_ssl_context()","ruby reline::terminfo::setupterm()","ruby logger#sev_threshold()","ruby logger#sev_threshold=()","ruby prism::rippercompat::sexp()","ruby ripper::sexp()","ruby prism::rippercompat::sexp_raw()","ruby ripper::sexp_raw()","rails actiondispatch::routing::mapper::resources#shallow()","rails actiondispatch::routing::mapper::resources#shallow?()","rails activerecord::connectionadapters::abstractadapter#shard()","rails activerecord::connectionhandling#shard_swapping_prohibited?()","ruby ractor::shareable?()","ruby io::buffer#shared?()","rails activesupport::concurrency::sharelock#sharing()","ruby pp::sharing_detection()","ruby pp::sharing_detection=()","ruby gem::commands::setupcommand#shebang()","ruby gem::installer#shebang()","ruby shellwords::shellescape()","ruby string#shellescape()","ruby array#shelljoin()","ruby shellwords::shelljoin()","ruby shellwords::shellsplit()","ruby string#shellsplit()","ruby shellwords::shellwords()","ruby array#shift()","ruby csv#shift()","ruby env::shift()","ruby gem::requestset::lockfile::tokenizer#shift()","ruby hash#shift()","ruby thread::queue#shift()","ruby thread::sizedqueue#shift()","ruby yaml::dbm#shift()","rails actionview::template#short_identifier()","ruby openssl::asn1::objectid#short_name()","rails actiondispatch::http::mimenegotiation#should_apply_vary_header?()","ruby irb::statement#should_be_handled_by_debugger?()","ruby irb::statement::command#should_be_handled_by_debugger?()","ruby irb::statement::expression#should_be_handled_by_debugger?()","rails activestorage::blobs::proxycontroller#show()","rails activestorage::blobs::redirectcontroller#show()","rails activestorage::diskcontroller#show()","rails activestorage::representations::proxycontroller#show()","rails activestorage::representations::redirectcontroller#show()","rails rails::rails::conductor::actionmailbox::inboundemailscontroller#show()","rails ","ruby reline::ansi::show_cursor()","ruby reline::generalio::show_cursor()","ruby reline::windows::show_cursor()","rails actioncontroller::rescue#show_detailed_exceptions?()","ruby irb::relineinputmethod#show_doc_dialog_proc()","ruby rdoc::servlet#show_documentation()","ruby gem::commands::contentscommand#show_files()","ruby gem::command#show_help()","rails rails::generators::namedbase#show_helper()","ruby gem::command#show_lookup_failure()","ruby gem::commands::ownercommand#show_owners()","ruby gem::commands::setupcommand#show_release_notes()","rails activerecord::connectionadapters::abstractmysqladapter#show_variable()","ruby optionparser::show_version()","ruby array#shuffle()","ruby array#shuffle!()","rails actioncable::subscriptionadapter::base#shutdown()","rails actioncable::subscriptionadapter::postgresql::listener#shutdown()","rails actioncable::subscriptionadapter::redis::listener#shutdown()","ruby basicsocket#shutdown()","ruby openssl::ssl::sslserver#shutdown()","ruby rinda::ringserver#shutdown()","ruby process::gid::sid_available?()","ruby process::uid::sid_available?()","ruby bigdecimal#sign()","ruby gem::commands::certcommand#sign()","ruby gem::s3urisigner#sign()","ruby gem::security::sign()","ruby gem::security::signer#sign()","ruby openssl::netscape::spki#sign()","ruby openssl::ocsp::basicresponse#sign()","ruby openssl::ocsp::request#sign()","ruby openssl::pkcs7::sign()","ruby openssl::pkey::pkey#sign()","ruby openssl::x509::crl#sign()","ruby openssl::x509::certificate#sign()","ruby openssl::x509::request#sign()","ruby gem::gemcutterutilities#sign_in()","ruby openssl::pkey::rsa#sign_pss()","ruby openssl::pkey::pkey#sign_raw()","ruby monitormixin::conditionvariable#signal()","ruby rinda::waittemplateentry#signal()","ruby thread::conditionvariable#signal()","ruby irb::irb#signal_handle()","ruby irb::irb#signal_status()","ruby process::status#signaled?()","ruby ","ruby signal::signame()","ruby prism::parametersnode#signature()","ruby rdoc::tomdoc::signature()","ruby openssl::x509::crl#signature_algorithm()","ruby openssl::x509::certificate#signature_algorithm()","ruby openssl::x509::request#signature_algorithm()","rails actiondispatch::cookies::chainedcookiejars#signed()","ruby openssl::ocsp::request#signed?()","rails activerecord::signedid#signed_id()","rails activestorage::blob#signed_id()","rails activerecord::signedid::classmethods#signed_id_verifier()","rails activerecord::signedid::classmethods#signed_id_verifier=()","rails activerecord::signedid::signed_id_verifier_secret()","rails actiondispatch::cookies::chainedcookiejars#signed_or_encrypted()","ruby openssl::pkcs7::signerinfo#signed_time()","ruby openssl::pkcs7#signers()","ruby signalexception#signo()","rails activesupport::deprecation::reporting#silence()","rails activesupport::loggersilence#silence()","rails activesupport::cache::store#silence!()","rails module#silence_redefinition_of_method()","rails kernel#silence_warnings()","rails activesupport::deprecation::reporting#silenced()","ruby gem::util::silent_system()","rails actionview::helpers::texthelper#simple_format()","ruby reline::lineeditor#simplified_rendering?()","ruby bigmath#sin()","ruby math::sin()","rails activesupport::duration#since()","rails activesupport::timewithzone#since()","rails date#since()","rails datetime#since()","rails time#since()","ruby singleforwardable#single_delegate()","ruby irb::irb#single_line_command?()","ruby prettyprint::singleline_format()","ruby pp::singleline_pp()","ruby object#singleton_class()","ruby module#singleton_class?()","ruby object#singleton_method()","ruby object#singleton_methods()","rails activemodel::naming::singular()","rails activesupport::inflector::inflections#singular()","rails rails::generators::namedbase#singular_name()","rails activemodel::naming::singular_route_key()","rails rails::generators::namedbase#singular_route_name()","rails rails::generators::namedbase#singular_table_name()","rails activesupport::inflector#singularize()","rails string#singularize()","ruby math::sinh()","rails actiondispatch::http::uploadedfile#size()","rails actiondispatch::middlewarestack#size()","rails actiontext::attachmentgallery#size()","rails activerecord::associations::collectionproxy#size()","rails activerecord::connectionadapters::schemacache#size()","rails activerecord::fixtureset#size()","rails activerecord::relation#size()","ruby array#size()","ruby digest::instance#size()","ruby env::size()","ruby enumerator#size()","ruby enumerator::arithmeticsequence#size()","ruby enumerator::chain#size()","ruby enumerator::product#size()","ruby fiddle::cstructentity::size()","ruby fiddle::cunionentity::size()","ruby fiddle::pointer#size()","ruby file#size()","ruby file::size()","ruby file::stat#size()","ruby filetest#size()","ruby gem::availableset#size()","ruby gem::package::tarreader::entry#size()","ruby gem::resolver::requirementlist#size()","ruby hash#size()","ruby io::buffer#size()","ruby integer#size()","ruby matchdata#size()","ruby objectspace::weakmap#size()","ruby pathname#size()","ruby range#size()","ruby rinda::tuple#size()","ruby rinda::tupleentry#size()","ruby set#size()","ruby string#size()","ruby stringio#size()","ruby stringscanner#size()","ruby struct#size()","ruby symbol#size()","ruby tempfile#size()","ruby thread::queue#size()","ruby thread::sizedqueue#size()","ruby fiddle::pointer#size=()","ruby file::size?()","ruby file::stat#size?()","ruby filetest#size?()","ruby pathname#size?()","ruby io::buffer::size_of()","ruby win32ole::method#size_opt_params()","ruby win32ole::method#size_params()","ruby fiddle::importer#sizeof()","ruby argf#skip()","ruby gem::requestset::lockfile::tokenizer#skip()","ruby stringscanner#skip()","rails abstractcontroller::callbacks::classmethods#skip_after_action()","rails abstractcontroller::callbacks::classmethods#skip_around_action()","rails abstractcontroller::callbacks::classmethods#skip_before_action()","ruby csv#skip_blanks?()","ruby csv::parser#skip_blanks?()","rails activesupport::callbacks::classmethods#skip_callback()","ruby rdoc::anymethod#skip_description?()","ruby gem::deprecate::skip_during()","ruby rdoc::parser::ruby#skip_for_variable()","rails actioncontroller::requestforgeryprotection::classmethods#skip_forgery_protection()","ruby irb::debug::skippathhelperforirb#skip_internal_path?()","ruby csv#skip_lines()","ruby csv::parser#skip_lines()","ruby rdoc::parser::ruby#skip_method()","ruby syntaxsuggest::pathnamefrommessage#skip_missing_file_name?()","ruby rdoc::parser::ruby#skip_optional_do_after_expression()","rails actioncontroller::parameterencoding::classmethods#skip_parameter_encoding()","ruby rdoc::parser::ruby#skip_parentheses()","ruby rdoc::parser::rubytools#skip_tkspace()","ruby rdoc::parser::ruby#skip_tkspace_comment()","ruby rdoc::parser::rubytools#skip_tkspace_without_nl()","ruby stringscanner#skip_until()","ruby kernel#sleep()","ruby mutex_m#sleep()","ruby thread::mutex#sleep()","rails actioncontroller::parameters#slice()","rails activerecord::core#slice()","rails activesupport::hashwithindifferentaccess#slice()","rails activesupport::hashwithindifferentaccess#slice()","ruby array#slice()","ruby env::slice()","ruby hash#slice()","ruby io::buffer#slice()","ruby prism::location#slice()","ruby prism::source#slice()","ruby ripper::slice()","ruby string#slice()","ruby symbol#slice()","rails actioncontroller::parameters#slice!()","rails activesupport::hashwithindifferentaccess#slice!()","rails activesupport::hashwithindifferentaccess#slice!()","rails activesupport::multibyte::chars#slice!()","rails hash#slice!()","ruby array#slice!()","ruby string#slice!()","ruby enumerable#slice_after()","ruby enumerator::lazy#slice_after()","ruby enumerable#slice_before()","ruby enumerator::lazy#slice_before()","ruby enumerable#slice_when()","ruby enumerator::lazy#slice_when()","rails actionview::helpers::urlhelper#sms_to()","ruby openssl::asn1::objectid#sn()","ruby rdoc::text#snippet()","ruby socket::sockaddr_in()","ruby socket::sockaddr_un()","ruby file::socket?()","ruby file::stat#socket?()","ruby filetest#socket?()","ruby pathname#socket?()","ruby socket::socketpair()","ruby unixsocket::socketpair()","ruby addrinfo#socktype()","ruby gem::solaris_platform?()","rails activerecord::findermethods#sole()","rails enumerable#sole()","ruby array#sort()","ruby enumerable#sort()","ruby array#sort!()","ruby enumerable#sort_by()","ruby array#sort_by!()","ruby gem::resolver#sort_dependencies()","ruby gem::specification#sort_obj()","ruby gem::platform::sort_priority()","ruby rdoc::context#sort_sections()","ruby gem::availableset#sorted()","ruby syntaxsuggest::priorityqueue#sorted()","rails rails::generators::sorted_groups()","ruby syntaxsuggest::capturecodecontext#sorted_lines()","ruby gem::requestset#sorted_requests()","rails actionmailbox::inboundemail#source()","rails actionview::template#source()","ruby gem::requestset::gemdependencyapi#source()","ruby gem::resolver::installedspecification#source()","ruby json::ext::parser#source()","ruby rdoc::store#source()","ruby regexp#source()","ruby rubyvm::abstractsyntaxtree::node#source()","rails activerecord::encryption::encryptablerecord#source_attribute_from_preserved_attribute()","ruby gem::source_date_epoch()","ruby gem::source_date_epoch_string()","ruby encoding::converter#source_encoding()","ruby encoding::invalidbytesequenceerror#source_encoding()","ruby encoding::undefinedconversionerror#source_encoding()","ruby encoding::invalidbytesequenceerror#source_encoding_name()","ruby encoding::undefinedconversionerror#source_encoding_name()","rails actiondispatch::exceptionwrapper#source_extracts()","ruby irb::irbloader#source_file()","ruby gem::availableset#source_for()","ruby binding#source_location()","ruby method#source_location()","ruby proc#source_location()","ruby unboundmethod#source_location()","ruby win32ole::type#source_ole_types()","ruby gem::basicspecification#source_paths()","rails rails::generators::base::source_root()","rails actiondispatch::exceptionwrapper#source_to_show_id()","ruby gem::sources()","ruby gem::sources=()","ruby json::ext::generator::state#space()","ruby json::ext::generator::state#space=()","ruby json::ext::generator::state#space_before()","ruby json::ext::generator::state#space_before=()","ruby kernel#spawn()","ruby pty::spawn()","ruby process::spawn()","ruby gem::installer#spec()","ruby gem::package#spec()","ruby gem::package::old#spec()","ruby gem::resolver::lockspecification#spec()","ruby gem::spec_cache_dir()","ruby gem::specification#spec_dir()","ruby gem::installer#spec_file()","ruby gem::specification#spec_file()","ruby gem::commands::contentscommand#spec_for()","ruby gem::commands::opencommand#spec_for()","ruby gem::specfetcher#spec_for_dependency()","ruby gem::requestset::lockfile#spec_groups()","ruby gem::nametuple#spec_name()","ruby gem::specification#spec_name()","ruby gem::commands::lockcommand#spec_path()","ruby gem::dependencylist#spec_predecessors()","ruby reline::core#special_prefixes=()","ruby gem::dependency#specific?()","ruby gem::requirement#specific?()","ruby gem::command::specific_extra_args()","ruby gem::command::specific_extra_args_hash()","ruby gem::requestset#specs()","ruby gem::source::git#specs()","ruby gem::requestset#specs_in()","ruby bundler::specs_path()","ruby didyoumean::correctable#spell_checker()","ruby didyoumean::spell_checkers()","rails activesupport::multibyte::chars#split()","rails array#split()","ruby bigdecimal#split()","ruby file::split()","ruby pathname#split()","ruby shellwords::split()","ruby string#split()","ruby uri::split()","ruby uri::rfc2396_parser#split()","ruby uri::rfc2396_parser#split()","ruby reline::unicode::split_by_width()","ruby errorhighlight::spot()","ruby errorhighlight::spotter#spot()","ruby kernel#sprintf()","rails activerecord::logsubscriber#sql()","rails arel::sql()","rails ","rails ","ruby openssl::bn#sqr()","ruby bigdecimal#sqrt()","ruby bigmath#sqrt()","ruby integer::sqrt()","ruby math::sqrt()","ruby string#squeeze()","ruby string#squeeze!()","rails string#squish()","rails string#squish!()","ruby kernel#srand()","ruby random::srand()","ruby win32ole::type#src_type()","ruby openssl::ssl::sslsocket#ssl_version()","ruby openssl::ssl::sslcontext#ssl_version=()","rails actioncontroller::conditionalget#stale?()","rails actiondispatch::session::stalesessioncheck#stale_session_check!()","ruby ","rails actiondispatch::http::url#standard_port()","rails actiondispatch::http::url#standard_port?()","rails actionview::logsubscriber#start()","rails activesupport::logsubscriber#start()","rails activesupport::notifications::fanout#start()","rails activesupport::notifications::fanout::subscribers::eventobject#start()","rails activesupport::notifications::instrumenter#start()","rails activesupport::subscriber#start()","rails rails::console#start()","rails rails::console::start()","rails rails::dbconsole#start()","rails rails::dbconsole::start()","rails rails::server#start()","ruby coverage::start()","ruby date#start()","ruby gc::start()","ruby irb::start()","ruby net::http::start()","ruby net::http#start()","ruby psych::streaming#start()","ruby psych::visitors::yamltree#start()","ruby thread::start()","rails activesupport::notifications::event#start!()","rails ","ruby prism::location#start_character_column()","ruby prism::location#start_character_offset()","ruby rdoc::tokenstream#start_collecting_tokens()","ruby prism::location#start_column()","ruby rdoc::codeobject#start_doc()","rails activesupport::xmlmini_nokogirisax::hashbuilder#start_document()","ruby psych::emitter#start_document()","ruby psych::handler#start_document()","ruby psych::treebuilder#start_document()","rails activesupport::xmlmini_nokogirisax::hashbuilder#start_element()","rails activesupport::concurrency::sharelock#start_exclusive()","ruby prism::location#start_line()","ruby prism::location#start_line_slice()","ruby psych::emitter#start_mapping()","ruby psych::handler#start_mapping()","ruby reline::generalio::start_pasting()","rails actioncontroller::logsubscriber#start_processing()","rails activesupport::dependencies::interlock#start_running()","ruby psych::emitter#start_sequence()","ruby psych::handler#start_sequence()","ruby drb::start_service()","rails activesupport::concurrency::sharelock#start_sharing()","ruby psych::emitter#start_stream()","ruby psych::handler#start_stream()","ruby psych::treebuilder#start_stream()","rails activesupport::dependencies::interlock#start_unloading()","ruby reline::keystroke#start_with?()","ruby string#start_with?()","ruby symbol#start_with?()","ruby net::http#started?()","rails rails::rack::logger#started_request_message()","ruby syntaxsuggest::scanhistory#stash_changes()","rails activerecord::connectionadapters::connectionpool#stat()","ruby csv#stat()","ruby file::stat()","ruby gc::stat()","ruby io#stat()","ruby pathname#stat()","ruby rubyvm::stat()","ruby tracepoint::stat()","ruby gc::stat_heap()","ruby coverage::state()","ruby openssl::ssl::sslsocket#state()","ruby prism::lexcompat::token#state()","ruby ripper::filter#state()","ruby gem::state_file()","ruby gem::configfile#state_file_name()","ruby gem::configfile#state_file_writable?()","ruby gem::state_home()","rails actioncable::connection::base#statistics()","rails ","rails activesupport::cache::memcachestore#stats()","rails activesupport::cache::rediscachestore#stats()","ruby rubyvm::yjit::stats_enabled?()","ruby rubyvm::yjit::stats_string()","ruby openssl::ocsp::basicresponse#status()","ruby openssl::ocsp::response#status()","ruby openssl::timestamp::response#status()","ruby pty::childexited#status()","ruby systemexit#status()","ruby thread#status()","rails actiondispatch::response#status=()","ruby openssl::random::status?()","rails actiondispatch::exceptionwrapper#status_code()","rails actiondispatch::exceptionwrapper::status_code_for_exception()","rails actiondispatch::response#status_message()","ruby openssl::ocsp::response#status_string()","ruby openssl::timestamp::response#status_text()","ruby date#step()","ruby enumerator::arithmeticsequence#step()","ruby numeric#step()","ruby range#step()","rails activerecord::inheritance::classmethods#sti_class_for()","rails activerecord::inheritance::classmethods#sti_name()","ruby file::sticky?()","ruby file::stat#sticky?()","ruby filetest#sticky?()","ruby pathname#sticky?()","rails actioncable::connection::streameventloop#stop()","ruby thread::stop()","ruby syntaxsuggest::pathnamefrommessage#stop?()","ruby thread#stop?()","ruby syntaxsuggest::aroundblockscan#stop_after_kw()","rails actioncable::channel::streams#stop_all_streams()","ruby rdoc::codeobject#stop_doc()","rails activesupport::concurrency::sharelock#stop_exclusive()","ruby drb::drbconn::stop_pool()","ruby drb::stop_service()","ruby drb::drbserver#stop_service()","ruby drb::extserv#stop_service()","rails activesupport::concurrency::sharelock#stop_sharing()","rails actioncable::channel::streams#stop_stream_for()","rails actioncable::channel::streams#stop_stream_from()","ruby process::status#stopped?()","ruby process::status#stopsig()","rails rails::appbuilder#storage()","ruby fiber#storage()","rails ","ruby fiber#storage=()","rails activerecord::store::classmethods#store()","rails activesupport::hashwithindifferentaccess#store()","rails activesupport::hashwithindifferentaccess#store()","ruby env::store()","ruby hash#store()","ruby yaml::dbm#store()","ruby rdoc::anymethod#store=()","ruby rdoc::classmodule#store=()","ruby rdoc::codeobject#store=()","ruby rdoc::constant#store=()","ruby rdoc::methodattr#store=()","ruby rdoc::mixin#store=()","ruby rdoc::rdoc#store=()","rails activerecord::store::classmethods#store_accessor()","ruby rdoc::servlet#store_for()","rails activesupport::descendantstracker::store_inherited()","rails activerecord::store::classmethods#stored_attributes()","ruby psych::nodes::node#stream?()","ruby psych::nodes::stream#stream?()","ruby zlib::zstream#stream_end?()","rails actioncable::channel::streams#stream_for()","rails actioncable::channel::streams#stream_from()","rails actioncable::channel::streams#stream_or_reject_for()","ruby psych::handler#streaming?()","ruby gc::stress()","ruby gc::stress=()","rails activesupport::timewithzone#strftime()","ruby date#strftime()","ruby datetime#strftime()","ruby time#strftime()","ruby ","ruby json::ext::generator::state#strict()","ruby json::ext::generator::state#strict=()","ruby json::ext::generator::state#strict?()","ruby base64#strict_decode64()","ruby base64#strict_encode64()","rails activerecord::querymethods#strict_loading()","rails activerecord::core#strict_loading!()","rails activerecord::core#strict_loading?()","rails activerecord::core#strict_loading_n_plus_one_only?()","rails activerecord::logsubscriber#strict_loading_violation()","rails activemodel::error#strict_match?()","rails activerecord::connectionadapters::abstractmysqladapter#strict_mode?()","ruby gem::package::tarheader::strict_oct()","ruby rdoc::markdown#strike()","ruby io::buffer::string()","ruby matchdata#string()","ruby stringio#string()","ruby stringscanner#string()","ruby stringio#string=()","ruby stringscanner#string=()","rails actiondispatch::flash::flashhash#stringify_array()","rails activesupport::hashwithindifferentaccess#stringify_keys()","rails activesupport::hashwithindifferentaccess#stringify_keys()","rails hash#stringify_keys()","rails activesupport::hashwithindifferentaccess#stringify_keys!()","rails activesupport::hashwithindifferentaccess#stringify_keys!()","rails hash#stringify_keys!()","ruby string#strip()","ruby string#strip!()","ruby gem::yamlserializer#strip_comment()","ruby rdoc::text#strip_hashes()","rails string#strip_heredoc()","rails actionview::helpers::sanitizehelper#strip_links()","ruby rdoc::text#strip_newlines()","ruby rdoc::text#strip_stars()","rails actionview::helpers::sanitizehelper#strip_tags()","ruby rdoc::markdown#strong()","rails actiondispatch::http::cache::response#strong_etag=()","rails actiondispatch::http::cache::response#strong_etag?()","ruby tsort#strongly_connected_components()","ruby tsort::strongly_connected_components()","rails activesupport::timezone#strptime()","ruby date::strptime()","ruby datetime::strptime()","ruby time::strptime()","ruby fiddle::importer#struct()","rails activerecord::querymethods#structurally_compatible?()","rails activerecord::tasks::databasetasks#structure_dump()","rails activerecord::tasks::databasetasks::structure_dump_flags()","rails activerecord::tasks::databasetasks#structure_load()","rails activerecord::tasks::databasetasks::structure_load_flags()","ruby gem::basicspecification#stubbed?()","ruby gem::specification#stubbed?()","ruby gem::specification::stubs()","ruby gem::specification::stubs_for()","rails actionview::helpers::assettaghelper#stylesheet_link_tag()","rails actionview::helpers::asseturlhelper#stylesheet_path()","rails actionview::helpers::asseturlhelper#stylesheet_url()","rails rails::pluginbuilder#stylesheets()","rails ","ruby bigdecimal#sub()","ruby irb::vec#sub()","ruby kernel#sub()","ruby pathname#sub()","ruby string#sub()","ruby string#sub!()","ruby pathname#sub_ext()","ruby net::httpheader#sub_type()","rails activesupport::descendantstracker#subclasses()","rails activesupport::descendantstracker::subclasses()","rails class#subclasses()","rails rails::railtie::subclasses()","ruby class#subclasses()","rails actiondispatch::http::url#subdomain()","ruby resolv::dns::name#subdomain_of?()","rails actiondispatch::http::url#subdomains()","ruby openssl::x509::certificate#subject()","ruby openssl::x509::request#subject()","ruby openssl::x509::certificate#subject=()","ruby openssl::x509::request#subject=()","ruby openssl::x509::extensionfactory#subject_certificate=()","ruby openssl::x509::extension::subjectkeyidentifier#subject_key_identifier()","ruby openssl::x509::extensionfactory#subject_request=()","rails actionview::helpers::formbuilder#submit()","ruby cgi::htmlextension#submit()","rails actionview::helpers::formtaghelper#submit_tag()","rails actioncable::subscriptionadapter::base#subscribe()","rails actioncable::subscriptionadapter::redis::listener::subscribedclient#subscribe()","rails activesupport::errorreporter#subscribe()","rails activesupport::notifications::subscribe()","rails activesupport::notifications::fanout#subscribe()","rails actioncable::channel::base#subscribe_to_channel()","rails actioncable::channel::base#subscribed()","rails activesupport::notifications::subscribed()","rails activesupport::subscriber::subscribers()","rails ","rails actioncable::channel::base#subscription_confirmation_sent?()","rails ","rails actioncable::channel::base#subscription_rejected?()","rails ","rails datetime#subsec()","ruby time#subsec()","ruby set#subset?()","ruby set#subtract()","ruby date#succ()","ruby ipaddr#succ()","ruby integer#succ()","ruby string#succ()","ruby symbol#succ()","ruby string#succ!()","rails actionmailbox::relayer::result#success?()","ruby prism::parseresult#success?()","ruby process::status#success?()","ruby systemexit#success?()","rails activejob::core#successfully_enqueued?()","rails activerecord::dynamicmatchers::findbybang::suffix()","rails activerecord::dynamicmatchers::method::suffix()","ruby gem::suffix_pattern()","ruby gem::suffix_regexp()","ruby gem::suffixes()","ruby gem::specfetcher#suggest_gems_from_name()","ruby gem::licenses::suggestions()","rails activerecord::calculations#sum()","rails enumerable#sum()","ruby array#sum()","ruby enumerable#sum()","ruby string#sum()","ruby optionparser#summarize()","ruby optionparser::list#summarize()","ruby optionparser::switch#summarize()","ruby rdoc::stats#summary()","ruby gem::specification#summary=()","rails dateandtime::calculations#sunday()","ruby date#sunday?()","ruby time#sunday?()","ruby method#super_method()","ruby unboundmethod#super_method()","ruby class#superclass()","ruby rdoc::classmodule#superclass()","ruby rdoc::normalmodule#superclass()","ruby rdoc::classmodule#superclass=()","ruby rdoc::anymethod#superclass_method()","ruby set#superset?()","ruby irb::inputmethod#support_history_saving?()","ruby coverage::supported?()","rails activerecord::connectionadapters::abstractadapter#supports_advisory_locks?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_advisory_locks?()","rails activerecord::connectionadapters::postgresqladapter#supports_advisory_locks?()","rails activerecord::connectionadapters::abstractadapter#supports_bulk_alter?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_bulk_alter?()","rails activerecord::connectionadapters::postgresqladapter#supports_bulk_alter?()","rails activesupport::cache::filestore::supports_cache_versioning?()","rails activesupport::cache::memcachestore::supports_cache_versioning?()","rails activesupport::cache::memorystore::supports_cache_versioning?()","rails activesupport::cache::nullstore::supports_cache_versioning?()","rails activesupport::cache::rediscachestore::supports_cache_versioning?()","rails activerecord::connectionadapters::abstractadapter#supports_check_constraints?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_check_constraints?()","rails activerecord::connectionadapters::postgresqladapter#supports_check_constraints?()","rails activerecord::connectionadapters::sqlite3adapter#supports_check_constraints?()","rails activerecord::connectionadapters::abstractadapter#supports_comments?()","rails activerecord::connectionadapters::mysql2adapter#supports_comments?()","rails activerecord::connectionadapters::postgresqladapter#supports_comments?()","rails activerecord::connectionadapters::abstractadapter#supports_comments_in_create?()","rails activerecord::connectionadapters::mysql2adapter#supports_comments_in_create?()","rails activerecord::connectionadapters::abstractadapter#supports_common_table_expressions?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_common_table_expressions?()","rails activerecord::connectionadapters::postgresqladapter#supports_common_table_expressions?()","rails activerecord::connectionadapters::sqlite3adapter#supports_common_table_expressions?()","rails activerecord::connectionadapters::abstractadapter#supports_concurrent_connections?()","rails activerecord::connectionadapters::sqlite3adapter#supports_concurrent_connections?()","rails activerecord::connectionadapters::abstractadapter#supports_datetime_with_precision?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_datetime_with_precision?()","rails activerecord::connectionadapters::postgresqladapter#supports_datetime_with_precision?()","rails activerecord::connectionadapters::sqlite3adapter#supports_datetime_with_precision?()","rails activerecord::connectionadapters::abstractadapter#supports_ddl_transactions?()","rails activerecord::connectionadapters::postgresqladapter#supports_ddl_transactions?()","rails activerecord::connectionadapters::sqlite3adapter#supports_ddl_transactions?()","rails activerecord::connectionadapters::abstractadapter#supports_deferrable_constraints?()","rails activerecord::connectionadapters::postgresqladapter#supports_deferrable_constraints?()","rails activerecord::connectionadapters::abstractadapter#supports_explain?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_explain?()","rails activerecord::connectionadapters::postgresqladapter#supports_explain?()","rails activerecord::connectionadapters::sqlite3adapter#supports_explain?()","rails activerecord::connectionadapters::abstractadapter#supports_expression_index?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_expression_index?()","rails activerecord::connectionadapters::postgresqladapter#supports_expression_index?()","rails activerecord::connectionadapters::sqlite3adapter#supports_expression_index?()","rails activerecord::connectionadapters::abstractadapter#supports_extensions?()","rails activerecord::connectionadapters::postgresqladapter#supports_extensions?()","rails activerecord::connectionadapters::abstractadapter#supports_foreign_keys?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_foreign_keys?()","rails activerecord::connectionadapters::postgresqladapter#supports_foreign_keys?()","rails activerecord::connectionadapters::sqlite3adapter#supports_foreign_keys?()","rails activerecord::connectionadapters::abstractadapter#supports_foreign_tables?()","rails activerecord::connectionadapters::postgresqladapter#supports_foreign_tables?()","rails activerecord::connectionadapters::abstractadapter#supports_index_sort_order?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_index_sort_order?()","rails activerecord::connectionadapters::postgresqladapter#supports_index_sort_order?()","rails activerecord::connectionadapters::sqlite3adapter#supports_index_sort_order?()","rails activerecord::connectionadapters::abstractadapter#supports_indexes_in_create?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_indexes_in_create?()","rails activerecord::connectionadapters::abstractadapter#supports_insert_conflict_target?()","rails activerecord::connectionadapters::postgresqladapter#supports_insert_conflict_target?()","rails activerecord::connectionadapters::sqlite3adapter#supports_insert_conflict_target?()","rails activerecord::connectionadapters::postgresqladapter#supports_insert_on_conflict?()","rails activerecord::connectionadapters::sqlite3adapter#supports_insert_on_conflict?()","rails activerecord::connectionadapters::abstractadapter#supports_insert_on_duplicate_skip?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_insert_on_duplicate_skip?()","rails activerecord::connectionadapters::postgresqladapter#supports_insert_on_duplicate_skip?()","rails activerecord::connectionadapters::sqlite3adapter#supports_insert_on_duplicate_skip?()","rails activerecord::connectionadapters::abstractadapter#supports_insert_on_duplicate_update?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_insert_on_duplicate_update?()","rails activerecord::connectionadapters::postgresqladapter#supports_insert_on_duplicate_update?()","rails activerecord::connectionadapters::sqlite3adapter#supports_insert_on_duplicate_update?()","rails activerecord::connectionadapters::abstractadapter#supports_insert_returning?()","rails activerecord::connectionadapters::postgresqladapter#supports_insert_returning?()","rails activerecord::connectionadapters::abstractadapter#supports_json?()","rails activerecord::connectionadapters::mysql2adapter#supports_json?()","rails activerecord::connectionadapters::postgresqladapter#supports_json?()","rails activerecord::connectionadapters::sqlite3adapter#supports_json?()","rails activerecord::connectionadapters::abstractadapter#supports_lazy_transactions?()","rails activerecord::connectionadapters::mysql2adapter#supports_lazy_transactions?()","rails activerecord::connectionadapters::postgresqladapter#supports_lazy_transactions?()","rails activerecord::connectionadapters::sqlite3adapter#supports_lazy_transactions?()","rails activerecord::connectionadapters::abstractadapter#supports_materialized_views?()","rails activerecord::connectionadapters::postgresqladapter#supports_materialized_views?()","rails activerecord::connectionadapters::abstractadapter#supports_optimizer_hints?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_optimizer_hints?()","rails activerecord::connectionadapters::postgresqladapter#supports_optimizer_hints?()","rails activerecord::connectionadapters::abstractadapter#supports_partial_index?()","rails activerecord::connectionadapters::postgresqladapter#supports_partial_index?()","rails activerecord::connectionadapters::sqlite3adapter#supports_partial_index?()","rails activerecord::connectionadapters::abstractadapter#supports_partitioned_indexes?()","rails activerecord::connectionadapters::postgresqladapter#supports_partitioned_indexes?()","rails abstractcontroller::base::supports_path?()","rails actionmailer::base::supports_path?()","rails activerecord::connectionadapters::postgresqladapter#supports_pgcrypto_uuid?()","rails activerecord::connectionadapters::abstractadapter#supports_savepoints?()","rails activerecord::connectionadapters::mysql2adapter#supports_savepoints?()","rails activerecord::connectionadapters::postgresqladapter#supports_savepoints?()","rails activerecord::connectionadapters::sqlite3adapter#supports_savepoints?()","rails actionview::template#supports_streaming?()","rails actionview::template::handlers::erb#supports_streaming?()","rails activerecord::connectionadapters::abstractadapter#supports_transaction_isolation?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_transaction_isolation?()","rails activerecord::connectionadapters::postgresqladapter#supports_transaction_isolation?()","rails activerecord::connectionadapters::sqlite3adapter#supports_transaction_isolation?()","rails activerecord::connectionadapters::abstractadapter#supports_validate_constraints?()","rails activerecord::connectionadapters::postgresqladapter#supports_validate_constraints?()","rails activerecord::connectionadapters::abstractadapter#supports_views?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_views?()","rails activerecord::connectionadapters::postgresqladapter#supports_views?()","rails activerecord::connectionadapters::sqlite3adapter#supports_views?()","rails activerecord::connectionadapters::abstractadapter#supports_virtual_columns?()","rails activerecord::connectionadapters::abstractmysqladapter#supports_virtual_columns?()","rails activerecord::connectionadapters::postgresqladapter#supports_virtual_columns?()","rails activerecord::suppressor::classmethods#suppress()","rails kernel#suppress()","ruby rdoc::codeobject#suppress()","rails activerecord::migration#suppress_messages()","ruby rdoc::codeobject#suppressed?()","ruby irb::statement#suppresses_echo?()","ruby irb::statement::command#suppresses_echo?()","ruby irb::statement::expression#suppresses_echo?()","ruby coverage::suspend()","ruby irb::irb#suspend_input_method()","ruby irb::irb#suspend_name()","ruby irb::irb#suspend_workspace()","rails actiondispatch::middlewarestack#swap()","rails rails::configuration::middlewarestackproxy#swap()","ruby string#swapcase()","ruby symbol#swapcase()","ruby string#swapcase!()","ruby irb::jobmanager#switch()","ruby process::gid::switch()","ruby process::uid::switch()","ruby optionparser::switch#switch_name()","ruby fiddle::compositehandler#sym()","ruby fiddle::handle::sym()","ruby fiddle::handle#sym()","ruby fiddle::handle::sym_defined?()","ruby fiddle::handle#sym_defined?()","ruby irb::context#symbol_alias?()","ruby psych::classloader::restricted#symbolize()","rails activesupport::hashwithindifferentaccess#symbolize_keys()","rails activesupport::hashwithindifferentaccess#symbolize_keys()","rails hash#symbolize_keys()","rails hash#symbolize_keys!()","rails actionview::template::types::symbols()","ruby file::symlink()","ruby fileutils::symlink()","ruby file::symlink?()","ruby file::stat#symlink?()","ruby filetest#symlink?()","ruby gem::package::tarreader::entry#symlink?()","ruby pathname#symlink?()","ruby io#sync()","ruby stringio#sync()","ruby zlib::gzipfile#sync()","ruby zlib::inflate#sync()","ruby io#sync=()","ruby stringio#sync=()","ruby zlib::gzipfile#sync=()","ruby zlib::inflate#sync_point?()","rails activesupport::concurrency::loadinterlockawaremonitor#synchronize()","ruby monitor#synchronize()","ruby monitormixin#synchronize()","ruby thread::mutex#synchronize()","ruby ","ruby socket#sysaccept()","ruby tcpserver#sysaccept()","ruby unixserver#sysaccept()","ruby kernel#syscall()","ruby openssl::ssl::sslsocket#sysclose()","ruby etc::sysconf()","ruby etc::sysconfdir()","ruby syslog::logger::syslog()","ruby syslog::logger::syslog=()","ruby io::sysopen()","ruby pathname#sysopen()","ruby io#sysread()","ruby io::generic_readable#sysread()","ruby openssl::ssl::sslsocket#sysread()","ruby io#sysseek()","ruby openssl::pkey::dsa#syssign()","ruby kernel#system()","ruby bundler::system_bindir()","rails rails::appbuilder#system_test()","ruby etc::systmpdir()","ruby openssl::pkey::dsa#sysverify()","ruby io#syswrite()","ruby openssl::ssl::sslsocket#syswrite()","rails abstractcontroller::translation#t()","rails actionview::helpers::translationhelper#t()","ruby csv::table()","rails activerecord::connectionadapters::schemastatements#table_alias_for()","rails activerecord::connectionadapters::databaselimits#table_alias_length()","rails activerecord::connectionadapters::schemastatements#table_comment()","rails activerecord::connectionadapters::schemastatements#table_exists?()","rails activerecord::modelschema::classmethods#table_exists?()","rails activerecord::modelschema::classmethods#table_name()","rails rails::generators::namedbase#table_name()","rails activerecord::modelschema::classmethods#table_name=()","rails activerecord::modelschema::table_name_prefix()","rails activerecord::modelschema::table_name_prefix=()","rails activerecord::modelschema::table_name_suffix()","rails activerecord::modelschema::table_name_suffix=()","rails activerecord::connectionadapters::schemastatements#table_options()","rails activerecord::fixtureset#table_rows()","rails activesupport::inflector#tableize()","rails string#tableize()","rails activerecord::connectionadapters::schemastatements#tables()","rails actioncable::connection::taggedloggerproxy#tag()","rails actionview::helpers::activemodelinstancetag#tag()","rails actionview::helpers::taghelper#tag()","ruby uncaughtthrowerror#tag()","rails activesupport::taggedlogging#tagged()","rails rails::sourceannotationextractor::annotation::tags()","rails activerecord::associations::collectionproxy#take()","rails activerecord::findermethods#take()","ruby array#take()","ruby enumerable#take()","ruby enumerator::lazy#take()","ruby ractor#take()","ruby rinda::tuplespace#take()","ruby rinda::tuplespaceproxy#take()","rails activerecord::findermethods#take!()","ruby reline::unicode::take_range()","ruby array#take_while()","ruby enumerable#take_while()","ruby enumerator::lazy#take_while()","ruby syntaxsuggest::cleandocument#take_while_including()","ruby enumerable#tally()","ruby math::tan()","ruby math::tanh()","ruby kernel#tap()","rails activerecord::associations::collectionproxy#target()","ruby gem::commands::setupcommand#target_bin_path()","rails activerecord::tasks::databasetasks#target_version()","rails ","ruby addrinfo::tcp()","ruby socket::tcp()","ruby socket::tcp_server_loop()","ruby socket::tcp_server_sockets()","rails actionview::helpers::formbuilder#telephone_field()","rails actionview::helpers::formhelper#telephone_field()","rails actionview::helpers::formtaghelper#telephone_field_tag()","ruby argf#tell()","ruby dir#tell()","ruby io#tell()","ruby stringio#tell()","ruby zlib::gzipreader#tell()","ruby zlib::gzipwriter#tell()","rails rails::generators::namedbase#template()","ruby rdoc::options#template_dir_for()","rails actionview::lookupcontext::viewpaths#template_exists?()","rails numeric#terabyte()","rails numeric#terabytes()","ruby getoptlong#terminate()","ruby optionparser#terminate()","ruby optionparser::terminate()","ruby stringscanner#terminate()","ruby thread#terminate()","ruby gem::streamui#terminate_interaction()","ruby gem::userinteraction#terminate_interaction()","ruby getoptlong#terminated?()","ruby process::status#termsig()","rails rails::appbuilder#test()","rails rails::pluginbuilder#test()","ruby kernel#test()","rails rails::pluginbuilder#test_dummy_clean()","rails rails::pluginbuilder#test_dummy_config()","rails rails::pluginbuilder#test_dummy_sprocket_assets()","rails activemodel::lint::tests#test_errors_aref()","rails activemodel::lint::tests#test_model_naming()","rails activemodel::lint::tests#test_persisted?()","rails activemodel::lint::tests#test_to_key()","rails activemodel::lint::tests#test_to_param()","rails activemodel::lint::tests#test_to_partial_path()","ruby ","ruby irb::colorprinter#text()","ruby prettyprint#text()","ruby prettyprint::singleline#text()","ruby rdoc::comment#text=()","rails activestorage::blob#text?()","ruby rdoc::toplevel#text?()","rails actionview::helpers::formbuilder#text_area()","rails actionview::helpers::formhelper#text_area()","rails actionview::helpers::formtaghelper#text_area_tag()","rails actionview::helpers::formbuilder#text_field()","rails actionview::helpers::formhelper#text_field()","ruby cgi::htmlextension#text_field()","rails actionview::helpers::formtaghelper#text_field_tag()","ruby cgi::htmlextension#textarea()","ruby kernel#then()","rails activerecord::associations::collectionproxy#third()","rails activerecord::findermethods#third()","rails array#third()","rails activerecord::findermethods#third!()","rails activerecord::associations::collectionproxy#third_to_last()","rails activerecord::findermethods#third_to_last()","rails array#third_to_last()","rails activerecord::findermethods#third_to_last!()","ruby gem::basicspecification#this()","ruby openssl::ocsp::singleresponse#this_update()","ruby drb::thread()","ruby irb::jobmanager#thread()","rails module#thread_cattr_accessor()","rails module#thread_mattr_accessor()","ruby thread#thread_variable?()","ruby thread#thread_variable_get()","ruby thread#thread_variable_set()","ruby thread#thread_variables()","ruby kernel#throw()","rails activerecord::connectionadapters::abstractadapter#throw_away!()","ruby date#thursday?()","ruby time#thursday?()","rails activesupport::multibyte::chars#tidy_bytes()","rails activesupport::multibyte::unicode#tidy_bytes()","ruby reline::terminfo::tigetflag()","ruby reline::terminfo::tigetnum()","ruby reline::terminfo::tigetstr()","rails activesupport::timewithzone#time()","ruby gem::time()","ruby openssl::ssl::session#time()","ruby openssl::x509::revoked#time()","ruby win32::registry::time2wtime()","ruby openssl::ssl::session#time=()","ruby openssl::x509::revoked#time=()","ruby openssl::x509::store#time=()","ruby openssl::x509::storecontext#time=()","rails actionview::helpers::datehelper#time_ago_in_words()","rails actionview::helpers::formbuilder#time_field()","rails actionview::helpers::formhelper#time_field()","rails actionview::helpers::formtaghelper#time_field_tag()","rails actionview::helpers::datehelper#time_select()","rails actionview::helpers::formbuilder#time_select()","rails actionview::helpers::datehelper#time_tag()","rails actionview::helpers::formoptionshelper#time_zone_options_for_select()","rails actionview::helpers::formbuilder#time_zone_select()","rails actionview::helpers::formoptionshelper#time_zone_select()","ruby io#timeout()","ruby openssl::ssl::session#timeout()","ruby regexp#timeout()","ruby regexp::timeout()","ruby timeout::timeout()","ruby io#timeout=()","ruby openssl::ssl::session#timeout=()","ruby regexp::timeout=()","ruby fiber::scheduler#timeout_after()","ruby resolv::dns#timeouts=()","rails actioncable::connection::streameventloop#timer()","ruby integer#times()","ruby process::times()","ruby socket::ancillarydata#timestamp()","rails activerecord::connectionadapters::table#timestamps()","rails activerecord::connectionadapters::tabledefinition#timestamps()","rails activerecord::connectionadapters::postgresql::columnmethods#timestamptz()","rails activerecord::connectionadapters::mysql::columnmethods#tinyblob()","rails activerecord::connectionadapters::mysql::columnmethods#tinytext()","ruby reline::terminfo::tiparm()","ruby reline::terminfo::stringwithtiparm#tiparm()","ruby rdoc::store#title()","ruby rdoc::store#title=()","rails activesupport::multibyte::chars#titlecase()","rails string#titlecase()","rails activesupport::inflector#titleize()","rails activesupport::multibyte::chars#titleize()","rails string#titleize()","ruby rdoc::parser::ruby#tk_nl?()","rails rails::appbuilder#tmp()","ruby bundler::tmp()","rails ","ruby openssl::ssl::sslcontext#tmp_dh=()","ruby openssl::ssl::sslsocket#tmp_key()","rails activestorage::analyzer#tmpdir()","rails activestorage::previewer#tmpdir()","ruby dir::tmpdir()","rails array#to()","rails string#to()","ruby uri::mailto#to=()","rails actiondispatch::response#to_a()","rails activemodel::errors#to_a()","rails activerecord::relation#to_a()","rails activerecord::result#to_a()","rails activesupport::timewithzone#to_a()","rails rails::paths::path#to_a()","ruby argf#to_a()","ruby array#to_a()","ruby benchmark::tms#to_a()","ruby csv::table#to_a()","ruby env::to_a()","ruby enumerable#to_a()","ruby enumerator::lazy#to_a()","ruby gem::nametuple#to_a()","ruby gem::platform#to_a()","ruby gem::requestset::lockfile::tokenizer#to_a()","ruby gem::sourcelist#to_a()","ruby hash#to_a()","ruby matchdata#to_a()","ruby nilclass#to_a()","ruby openssl::x509::extension#to_a()","ruby openssl::x509::name#to_a()","ruby optionparser#to_a()","ruby range#to_a()","ruby rinda::ringfinger#to_a()","ruby rinda::ringfinger::to_a()","ruby ripper::lexer::elem#to_a()","ruby rubyvm::instructionsequence#to_a()","ruby set#to_a()","ruby struct#to_a()","ruby syntaxsuggest::lexall#to_a()","ruby syntaxsuggest::priorityengulfqueue#to_a()","ruby syntaxsuggest::priorityqueue#to_a()","ruby time#to_a()","ruby yaml::dbm#to_a()","rails mail::message#to_addresses()","rails activerecord::relation#to_ary()","rails activerecord::result#to_ary()","rails rails::paths::path#to_ary()","ruby array#to_ary()","ruby gem::sourcelist#to_ary()","rails actiontext::attachable#to_attachable_partial_path()","ruby gem::nametuple::to_basic()","ruby rubyvm::instructionsequence#to_binary()","ruby integer#to_bn()","ruby openssl::bn#to_bn()","ruby openssl::pkey::ec::point#to_bn()","ruby complex#to_c()","ruby nilclass#to_c()","ruby numeric#to_c()","ruby string#to_c()","rails activesupport::executionwrapper::to_complete()","ruby csv::row#to_csv()","ruby csv::table#to_csv()","ruby bigdecimal#to_d()","ruby complex#to_d()","ruby float#to_d()","ruby integer#to_d()","ruby nilclass#to_d()","ruby rational#to_d()","ruby string#to_d()","rails string#to_date()","ruby date#to_date()","ruby datetime#to_date()","ruby time#to_date()","rails activesupport::timewithzone#to_datetime()","rails string#to_datetime()","ruby date#to_datetime()","ruby datetime#to_datetime()","ruby time#to_datetime()","rails actionview::digestor::node#to_dep_map()","ruby openssl::asn1::asn1data#to_der()","ruby openssl::asn1::constructive#to_der()","ruby openssl::asn1::primitive#to_der()","ruby openssl::netscape::spki#to_der()","ruby openssl::ocsp::basicresponse#to_der()","ruby openssl::ocsp::certificateid#to_der()","ruby openssl::ocsp::request#to_der()","ruby openssl::ocsp::response#to_der()","ruby openssl::ocsp::singleresponse#to_der()","ruby openssl::pkcs12#to_der()","ruby openssl::pkcs7#to_der()","ruby openssl::pkey::dh#to_der()","ruby openssl::pkey::dsa#to_der()","ruby openssl::pkey::ec#to_der()","ruby openssl::pkey::ec::group#to_der()","ruby openssl::pkey::rsa#to_der()","ruby openssl::ssl::session#to_der()","ruby openssl::timestamp::request#to_der()","ruby openssl::timestamp::response#to_der()","ruby openssl::timestamp::tokeninfo#to_der()","ruby openssl::x509::attribute#to_der()","ruby openssl::x509::crl#to_der()","ruby openssl::x509::certificate#to_der()","ruby openssl::x509::extension#to_der()","ruby openssl::x509::name#to_der()","ruby openssl::x509::request#to_der()","ruby openssl::x509::revoked#to_der()","ruby bigdecimal#to_digits()","ruby enumerator::lazy#to_enum()","ruby object#to_enum()","rails activesupport::timewithzone#to_f()","rails datetime#to_f()","ruby bigdecimal#to_f()","ruby complex#to_f()","ruby float#to_f()","ruby integer#to_f()","ruby nilclass#to_f()","ruby rational#to_f()","ruby string#to_f()","ruby time#to_f()","rails activesupport::numericwithformat#to_formatted_s()","rails activesupport::rangewithformat#to_formatted_s()","rails activesupport::timewithzone#to_formatted_s()","rails array#to_formatted_s()","rails date#to_formatted_s()","rails datetime#to_formatted_s()","rails time#to_formatted_s()","rails activesupport::numericwithformat#to_fs()","rails activesupport::rangewithformat#to_fs()","rails activesupport::timewithzone#to_fs()","rails array#to_fs()","rails date#to_fs()","rails datetime#to_fs()","rails time#to_fs()","ruby gem::basicspecification#to_fullpath()","rails actioncontroller::parameters#to_h()","rails activerecord::encryption::properties#to_h()","rails activerecord::encryption::scheme#to_h()","ruby array#to_h()","ruby benchmark::tms#to_h()","ruby csv::row#to_h()","ruby data#to_h()","ruby env::to_h()","ruby enumerable#to_h()","ruby fiddle::cstruct#to_h()","ruby hash#to_h()","ruby json::ext::generator::state#to_h()","ruby nilclass#to_h()","ruby openssl::x509::extension#to_h()","ruby openstruct#to_h()","ruby struct#to_h()","ruby win32ole::record#to_h()","rails actioncontroller::parameters#to_hash()","rails actiondispatch::flash::flashhash#to_hash()","rails activemodel::errors#to_hash()","rails activesupport::hashwithindifferentaccess#to_hash()","rails activesupport::hashwithindifferentaccess#to_hash()","ruby csv::row#to_hash()","ruby env::to_hash()","ruby hash#to_hash()","ruby json::ext::generator::state#to_hash()","ruby json::genericobject#to_hash()","ruby net::httpheader#to_hash()","ruby yaml::dbm#to_hash()","rails actiontext::attachment#to_html()","rails actiontext::content#to_html()","rails actiontext::fragment#to_html()","rails actiontext::trixattachment#to_html()","rails rails::info::to_html()","ruby rdoc::text#to_html()","ruby rdoc::tokenstream::to_html()","rails activesupport::duration#to_i()","rails activesupport::timewithzone#to_i()","rails datetime#to_i()","ruby argf#to_i()","ruby bigdecimal#to_i()","ruby csv#to_i()","ruby complex#to_i()","ruby fiddle::closure#to_i()","ruby fiddle::function#to_i()","ruby fiddle::handle#to_i()","ruby fiddle::pointer#to_i()","ruby float#to_i()","ruby io#to_i()","ruby ipaddr#to_i()","ruby integer#to_i()","ruby nilclass#to_i()","ruby openssl::bn#to_i()","ruby process::status#to_i()","ruby rational#to_i()","ruby string#to_i()","ruby time#to_i()","ruby drb::to_id()","ruby drb::drbidconv#to_id()","ruby drb::drbidconv#to_id()","ruby drb::drbserver#to_id()","ruby bigdecimal#to_int()","ruby fiddle::pointer#to_int()","ruby float#to_int()","ruby integer#to_int()","ruby numeric#to_int()","ruby openssl::bn#to_int()","rails actiondispatch::http::uploadedfile#to_io()","ruby argf#to_io()","ruby csv#to_io()","ruby io#to_io()","ruby openssl::ssl::sslserver#to_io()","ruby zlib::gzipfile#to_io()","rails activestorage::filename#to_json()","ruby bigdecimal#to_json()","ruby complex#to_json()","ruby date#to_json()","ruby datetime#to_json()","ruby exception#to_json()","ruby json::genericobject#to_json()","ruby openstruct#to_json()","ruby psych::to_json()","ruby range#to_json()","ruby rational#to_json()","ruby regexp#to_json()","ruby set#to_json()","ruby struct#to_json()","ruby symbol#to_json()","ruby time#to_json()","rails activemodel::conversion#to_key()","rails activerecord::attributemethods::primarykey#to_key()","ruby uri::mailto#to_mailtext()","rails actionview::helpers::formbuilder#to_model()","rails activemodel::conversion#to_model()","ruby resolv::ipv4#to_name()","ruby resolv::ipv6#to_name()","ruby drb::to_obj()","ruby drb::drbidconv#to_obj()","ruby drb::drbidconv#to_obj()","ruby drb::drbserver#to_obj()","ruby openssl::pkey::ec::point#to_octet_string()","rails activesupport::hashwithindifferentaccess#to_options()","rails activesupport::hashwithindifferentaccess#to_options()","rails hash#to_options()","rails activesupport::hashwithindifferentaccess#to_options!()","rails activesupport::hashwithindifferentaccess#to_options!()","rails hash#to_options!()","ruby win32::sspi::identity#to_p()","ruby win32::sspi::securitybuffer#to_p()","ruby win32::sspi::securityhandle#to_p()","ruby win32::sspi::timestamp#to_p()","rails actioncontroller::parameters#to_param()","rails activemodel::conversion#to_param()","rails activerecord::integration#to_param()","rails activerecord::integration::classmethods#to_param()","rails activesupport::safebuffer#to_param()","rails array#to_param()","rails falseclass#to_param()","rails hash#to_param()","rails nilclass#to_param()","rails object#to_param()","rails trueclass#to_param()","rails actiontext::attachables::contentattachment#to_partial_path()","rails actiontext::attachables::missingattachable::to_partial_path()","rails actiontext::attachables::remoteimage#to_partial_path()","rails actiontext::content#to_partial_path()","rails actionview::helpers::formbuilder#to_partial_path()","rails activemodel::conversion#to_partial_path()","rails actiondispatch::http::uploadedfile#to_path()","rails actiondispatch::response::rackbody#to_path()","rails actionview::filesystemresolver#to_path()","ruby dir#to_path()","ruby io#to_path()","ruby pathname#to_path()","ruby openssl::netscape::spki#to_pem()","ruby openssl::pkcs7#to_pem()","ruby openssl::pkey::dh#to_pem()","ruby openssl::pkey::dsa#to_pem()","ruby openssl::pkey::ec#to_pem()","ruby openssl::pkey::ec::group#to_pem()","ruby openssl::pkey::rsa#to_pem()","ruby openssl::ssl::session#to_pem()","ruby openssl::x509::crl#to_pem()","ruby openssl::x509::certificate#to_pem()","ruby openssl::x509::request#to_pem()","rails actiontext::attachment#to_plain_text()","rails actiontext::content#to_plain_text()","rails actiontext::fragment#to_plain_text()","rails actiontext::richtext#to_plain_text()","rails activesupport::reloader::to_prepare()","rails rails::railtie::configuration#to_prepare()","rails rails::railtie::configuration#to_prepare_blocks()","ruby enumerator::yielder#to_proc()","ruby fiddle::function#to_proc()","ruby hash#to_proc()","ruby method#to_proc()","ruby proc#to_proc()","ruby symbol#to_proc()","ruby fiddle::handle#to_ptr()","ruby fiddle::pointer::to_ptr()","ruby fiddle::structarray#to_ptr()","rails actioncontroller::parameters#to_query()","rails array#to_query()","rails hash#to_query()","rails object#to_query()","rails activesupport::timewithzone#to_r()","ruby bigdecimal#to_r()","ruby complex#to_r()","ruby float#to_r()","ruby integer#to_r()","ruby nilclass#to_r()","ruby rational#to_r()","ruby string#to_r()","ruby time#to_r()","ruby ipaddr#to_range()","rails actiontext::content#to_rendered_html_with_layout()","ruby gem::availableset#to_request_set()","ruby uri::mailto#to_rfc822text()","rails actiontext::attachable#to_rich_text_attributes()","ruby gem::specification#to_ruby()","ruby psych::nodes::node#to_ruby()","ruby gem::specification#to_ruby_for_cache()","rails activesupport::executionwrapper::to_run()","rails actioncontroller::parameters#to_s()","rails actiondispatch::remoteip::getip#to_s()","rails actiontext::attachment#to_s()","rails actiontext::content#to_s()","rails actiontext::fragment#to_s()","rails actiontext::trixattachment#to_s()","rails actionview::filesystemresolver#to_s()","rails actionview::template::sources::file#to_s()","rails actionview::template::types::type#to_s()","rails activemodel::name#to_s()","rails activerecord::connectionadapters::abstractadapter::version#to_s()","rails activerecord::connectionadapters::postgresql::oid::bit::data#to_s()","rails activestorage::filename#to_s()","rails activesupport::duration#to_s()","rails activesupport::safebuffer#to_s()","rails activesupport::timewithzone#to_s()","rails activesupport::timezone#to_s()","rails announcement::version#to_s()","rails mime::nulltype#to_s()","rails mime::type#to_s()","rails rails::generators::appbase::gemfileentry#to_s()","rails rails::info::to_s()","rails rails::sourceannotationextractor::annotation#to_s()","ruby argf#to_s()","ruby addrinfo#to_s()","ruby array#to_s()","ruby benchmark::tms#to_s()","ruby bigdecimal#to_s()","ruby cgi::cookie#to_s()","ruby csv::row#to_s()","ruby csv::table#to_s()","ruby complex#to_s()","ruby data#to_s()","ruby date#to_s()","ruby datetime#to_s()","ruby didyoumean::correctable#to_s()","ruby digest::instance#to_s()","ruby env::to_s()","ruby encoding#to_s()","ruby errorhighlight::coreext#to_s()","ruby exception#to_s()","ruby falseclass#to_s()","ruby fiber#to_s()","ruby fiddle::pointer#to_s()","ruby float#to_s()","ruby gem::gemcutterutilities::webauthnlistener::response#to_s()","ruby gem::platform#to_s()","ruby gem::requestset::lockfile#to_s()","ruby gem::resolver::activationrequest#to_s()","ruby gem::uri#to_s()","ruby gem::version#to_s()","ruby hash#to_s()","ruby io::buffer#to_s()","ruby ipaddr#to_s()","ruby integer#to_s()","ruby matchdata#to_s()","ruby method#to_s()","ruby module#to_s()","ruby nilclass#to_s()","ruby object#to_s()","ruby openssl::bn#to_s()","ruby openssl::config#to_s()","ruby openssl::hmac#to_s()","ruby openssl::netscape::spki#to_s()","ruby openssl::pkcs7#to_s()","ruby openssl::pkey::dh#to_s()","ruby openssl::pkey::dsa#to_s()","ruby openssl::pkey::rsa#to_s()","ruby openssl::x509::crl#to_s()","ruby openssl::x509::certificate#to_s()","ruby openssl::x509::extension#to_s()","ruby openssl::x509::name#to_s()","ruby openssl::x509::request#to_s()","ruby openstruct#to_s()","ruby optionparser#to_s()","ruby optionparser::parseerror#to_s()","ruby pathname#to_s()","ruby proc#to_s()","ruby process::status#to_s()","ruby ractor#to_s()","ruby range#to_s()","ruby rational#to_s()","ruby regexp#to_s()","ruby reline::history#to_s()","ruby resolv::dns::name#to_s()","ruby ripper::lexer::elem#to_s()","ruby set#to_s()","ruby socket::option#to_s()","ruby string#to_s()","ruby struct#to_s()","ruby symbol#to_s()","ruby syntaxsuggest::cleandocument#to_s()","ruby syntaxsuggest::codeblock#to_s()","ruby syntaxsuggest::codeline#to_s()","ruby thread#to_s()","ruby thread::backtrace::location#to_s()","ruby time#to_s()","ruby trueclass#to_s()","ruby uri::ftp#to_s()","ruby uri::generic#to_s()","ruby uri::mailto#to_s()","ruby unboundmethod#to_s()","ruby uncaughtthrowerror#to_s()","ruby win32ole::method#to_s()","ruby win32ole::param#to_s()","ruby win32ole::type#to_s()","ruby win32ole::typelib#to_s()","ruby win32ole::variable#to_s()","ruby win32::sspi::sspiresult#to_s()","rails actionview::helpers::outputsafetyhelper#to_sentence()","rails array#to_sentence()","ruby enumerable#to_set()","ruby set#to_set()","ruby addrinfo#to_sockaddr()","ruby gem::basicspecification#to_spec()","ruby gem::dependency#to_spec()","ruby gem::specification#to_spec()","ruby gem::dependency#to_specs()","rails activerecord::connectionadapters::databasestatements#to_sql()","rails activerecord::relation#to_sql()","rails actionview::template::types::type#to_str()","rails activemodel::name#to_str()","rails mime::type#to_str()","ruby fiddle::pointer#to_str()","ruby string#to_str()","ruby uri::generic#to_str()","ruby ipaddr#to_string()","rails actionview::template::types::type#to_sym()","rails mime::type#to_sym()","ruby string#to_sym()","ruby symbol#to_sym()","rails activesupport::xmlmini#to_tag()","ruby openssl::netscape::spki#to_text()","ruby openssl::pkey::ec::group#to_text()","ruby openssl::pkey::pkey#to_text()","ruby openssl::ssl::session#to_text()","ruby openssl::x509::crl#to_text()","ruby openssl::x509::certificate#to_text()","ruby openssl::x509::request#to_text()","rails activesupport::timewithzone#to_time()","rails date#to_time()","rails datetime#to_time()","rails string#to_time()","rails time#to_time()","ruby date#to_time()","ruby datetime#to_time()","ruby time#to_time()","rails activesupport::to_time_preserves_timezone()","rails activesupport::to_time_preserves_timezone=()","rails actiontext::attachments::trixconversion#to_trix_attachment()","rails actiontext::attachable#to_trix_content_attachment_partial_path()","rails actiontext::attachables::contentattachment#to_trix_content_attachment_partial_path()","rails actiontext::engine#to_trix_content_attachment_partial_path()","rails actiontext::content#to_trix_html()","rails actiontext::richtext#to_trix_html()","ruby exception::to_tty?()","rails actioncontroller::parameters#to_unsafe_h()","rails actioncontroller::parameters#to_unsafe_hash()","ruby openssl::x509::name#to_utf8()","ruby fiddle::pointer#to_value()","ruby argf#to_write_io()","rails array#to_xml()","rails hash#to_xml()","ruby object#to_yaml()","ruby psych::nodes::node#to_yaml()","rails activesupport::timezone#today()","ruby date::today()","rails activesupport::timewithzone#today?()","rails dateandtime::calculations#today?()","ruby kconv::toeuc()","ruby string#toeuc()","rails activerecord::persistence#toggle()","rails activerecord::persistence#toggle!()","ruby kconv::tojis()","ruby string#tojis()","ruby openssl::timestamp::response#token()","ruby win32::sspi::securitybuffer#token()","rails actioncontroller::httpauthentication::token#token_and_options()","ruby openssl::timestamp::response#token_info()","rails actionview::helpers::taghelper#token_list()","ruby rdoc::parser::rubytools#token_listener()","rails actioncontroller::httpauthentication::token#token_params_from()","ruby rdoc::tokenstream#token_stream()","ruby psych::scalarscanner#tokenize()","ruby rdoc::tomdoc#tokenize()","ruby ripper::tokenize()","ruby rubyvm::abstractsyntaxtree::node#tokens()","ruby rdoc::tokenstream#tokens_to_s()","ruby kconv::tolocale()","ruby string#tolocale()","ruby rdoc::comment#tomdoc?()","rails activesupport::timezone#tomorrow()","rails date::tomorrow()","rails dateandtime::calculations#tomorrow()","rails activesupport::timewithzone#tomorrow?()","rails dateandtime::calculations#tomorrow?()","ruby irb::frame#top()","ruby irb::frame::top()","ruby optionparser::top()","ruby optionparser#top()","ruby rdoc::context#top_level()","ruby rdoc::require#top_level()","ruby kconv::tosjis()","ruby string#tosjis()","ruby zlib::zstream#total_in()","ruby zlib::zstream#total_out()","ruby gc::total_time()","ruby gc::profiler::total_time()","rails activerecord::persistence#touch()","ruby fileutils::touch()","rails activerecord::relation#touch_all()","ruby kconv::toutf16()","ruby string#toutf16()","ruby kconv::toutf32()","ruby string#toutf32()","ruby kconv::toutf8()","ruby string#toutf8()","ruby string#tr()","ruby string#tr!()","ruby string#tr_s()","ruby string#tr_s!()","ruby net::http#trace()","ruby tracepoint::trace()","ruby irb::frame#trace_func()","ruby objectspace::trace_object_allocations()","ruby objectspace::trace_object_allocations_clear()","ruby objectspace::trace_object_allocations_debug_start()","ruby objectspace::trace_object_allocations_start()","ruby objectspace::trace_object_allocations_stop()","ruby rubyvm::instructionsequence#trace_points()","rails actiondispatch::exceptionwrapper#trace_to_show()","ruby kernel#trace_var()","rails actiondispatch::exceptionwrapper#traces()","ruby prism::embdoccomment#trailing?()","ruby prism::inlinecomment#trailing?()","ruby syntaxsuggest::codeline#trailing_slash?()","rails activerecord::connectionadapters::databasestatements#transaction()","rails activerecord::transactions::classmethods#transaction()","ruby pstore#transaction()","rails activerecord::connectionadapters::databasestatements#transaction_isolation_levels()","rails activerecord::connectionadapters::databasestatements#transaction_open?()","ruby fiber#transfer()","ruby io::buffer#transfer()","rails activestorage::transformers::transformer#transform()","rails activestorage::variation#transform()","ruby psych::nodes::node#transform()","ruby irb::extendcommand::showdoc::transform_args()","ruby irb::extendcommand::showsource::transform_args()","ruby irb::context#transform_args?()","rails actioncontroller::parameters#transform_keys()","rails activesupport::hashwithindifferentaccess#transform_keys()","rails activesupport::hashwithindifferentaccess#transform_keys()","ruby hash#transform_keys()","rails actioncontroller::parameters#transform_keys!()","rails activesupport::hashwithindifferentaccess#transform_keys!()","rails activesupport::hashwithindifferentaccess#transform_keys!()","ruby hash#transform_keys!()","rails actioncontroller::parameters#transform_values()","rails activesupport::hashwithindifferentaccess#transform_values()","rails activesupport::hashwithindifferentaccess#transform_values()","ruby hash#transform_values()","rails actioncontroller::parameters#transform_values!()","ruby hash#transform_values!()","rails actionmailbox::relayer::result#transient_failure?()","rails abstractcontroller::translation#translate()","rails actionview::helpers::translationhelper#translate()","rails activesupport::inflector#transliterate()","rails actioncable::channel::base#transmit()","ruby array#transpose()","ruby reline::lineeditor#transpose_chars()","ruby reline::lineeditor#transpose_words()","ruby kernel#trap()","ruby signal::trap()","ruby gem::specification#traverse()","ruby openssl::asn1::traverse()","ruby gem::util::traverse_parents()","rails actionview::digestor::tree()","ruby psych::visitors::yamltree#tree()","ruby didyoumean::treespellchecker#tree_depth()","rails ","rails ","ruby reline::face::truecolor?()","rails actionview::helpers::texthelper#truncate()","rails activerecord::connectionadapters::databasestatements#truncate()","rails string#truncate()","ruby bigdecimal#truncate()","ruby file::truncate()","ruby file#truncate()","ruby float#truncate()","ruby integer#truncate()","ruby numeric#truncate()","ruby pathname#truncate()","ruby rational#truncate()","ruby stringio#truncate()","rails activerecord::tasks::databasetasks#truncate_all()","rails string#truncate_bytes()","ruby gem::text#truncate_text()","rails string#truncate_words()","ruby openssl::x509::store#trust=()","ruby openssl::x509::storecontext#trust=()","ruby gem::security::trustdir#trust_cert()","ruby gem::security::trust_dir()","ruby gem::security::trusted_certificates()","rails delegator#try()","rails nilclass#try()","rails object#try()","rails delegator#try!()","rails nilclass#try!()","rails object#try!()","ruby gem::try_activate()","ruby makemakefile#try_const()","ruby array::try_convert()","ruby hash::try_convert()","ruby io::try_convert()","ruby integer::try_convert()","ruby regexp::try_convert()","ruby string::try_convert()","ruby monitor#try_enter()","ruby thread::mutex#try_lock()","ruby monitor#try_mon_enter()","ruby monitormixin#try_mon_enter()","ruby makemakefile#try_type()","ruby openssl::timestamp::response#tsa_certificate()","ruby tsort#tsort()","ruby tsort::tsort()","ruby tsort::tsort_each()","ruby tsort#tsort_each()","rails rails::initializable::collection#tsort_each_child()","ruby gem::dependencylist#tsort_each_child()","ruby tsort#tsort_each_child()","ruby gem::dependencylist#tsort_each_node()","ruby tsort#tsort_each_node()","rails activerecord::connectionadapters::postgresql::columnmethods#tsrange()","rails activerecord::connectionadapters::postgresql::columnmethods#tstzrange()","rails activerecord::connectionadapters::postgresql::columnmethods#tsvector()","ruby gem::silentui::nullio#tty?()","ruby gem::streamui#tty?()","ruby io#tty?()","ruby stringio#tty?()","ruby date#tuesday?()","ruby time#tuesday?()","ruby ","ruby time#tv_nsec()","rails activesupport::timewithzone#tv_sec()","ruby time#tv_sec()","ruby time#tv_usec()","rails actionview::template#type()","rails activerecord::type::json#type()","ruby gem::dependency#type()","ruby gem::resolver::dependencyrequest#type()","ruby objectspace::internalobjectwrapper#type()","ruby openssl::pkcs7#type()","ruby rdoc::classmodule#type()","ruby rdoc::methodattr#type()","ruby rubyvm::abstractsyntaxtree::node#type()","ruby socket::ancillarydata#type()","ruby win32::registry::type2name()","ruby openssl::pkcs7#type=()","rails activerecord::connectionadapters::quoting#type_cast()","rails activerecord::connectionadapters::abstractadapter::type_cast_config_to_boolean()","rails activerecord::connectionadapters::abstractadapter::type_cast_config_to_integer()","rails activerecord::modelschema::classmethods#type_for_attribute()","ruby net::httpheader#type_params()","ruby fiddle::importer#typealias()","ruby uri::ftp#typecode=()","ruby win32ole::type#typekind()","ruby win32ole::type::typelibs()","ruby win32ole::typelib::typelibs()","ruby win32ole::record#typename()","ruby gem::source#typo_squatting?()","ruby erb::util::u()","ruby openssl::bn#ucmp()","ruby addrinfo::udp()","ruby socket::udp_server_loop()","ruby socket::udp_server_loop_on()","ruby socket::udp_server_recv()","ruby socket::udp_server_sockets()","ruby bundler::ui()","ruby gem::ui()","ruby gem::defaultuserinteraction#ui()","ruby gem::defaultuserinteraction::ui()","ruby bundler::ui=()","ruby gem::defaultuserinteraction#ui=()","ruby gem::defaultuserinteraction::ui=()","ruby file::stat#uid()","ruby process::uid()","ruby process::uid=()","rails ","ruby file::umask()","ruby win32ole::event#unadvise()","ruby etc::uname()","ruby method#unbind()","ruby fiber::scheduler#unblock()","ruby bundler::unbundled_env()","ruby bundler::unbundled_exec()","ruby bundler::unbundled_system()","rails actionview::helpers::cachehelper#uncacheable!()","rails activerecord::connectionadapters::querycache#uncached()","rails activerecord::querycache::classmethods#uncached()","ruby csv#unconverted_fields?()","ruby csv::parser#unconverted_fields?()","rails activesupport::inflector::inflections#uncountable()","rails activemodel::name#uncountable?()","rails activemodel::naming::uncountable?()","rails activesupport::inflector::inflections::uncountables#uncountable?()","rails rails::generators::namedbase#uncountable?()","ruby module#undef_method()","rails activemodel::attributemethods::classmethods#undefine_attribute_methods()","ruby objectspace::undefine_finalizer()","ruby module#undefined_instance_methods()","rails activesupport::inflector#underscore()","rails string#underscore()","ruby rdoc::stats#undoc_params()","ruby string#undump()","ruby cgi::escape#unescape()","ruby cgi::util#unescape()","ruby gem::uriformatter#unescape()","ruby uri::rfc2396_parser#unescape()","ruby uri::rfc2396_parser#unescape()","ruby cgi::util#unescapeelement()","ruby cgi::escape#unescapehtml()","ruby cgi::util#unescapehtml()","ruby cgi::escape#unescapeuricomponent()","ruby cgi::util#unescapeuricomponent()","rails activerecord::connectionadapters::postgresql::quoting#unescape_bytea()","ruby cgi::util#unescape_element()","ruby cgi::util#unescape_html()","ruby cgi::escape#unescape_uri_component()","ruby cgi::util#unescape_uri_component()","ruby rdoc::parser::rubytools#unget_tk()","ruby io#ungetbyte()","ruby stringio#ungetbyte()","ruby zlib::gzipreader#ungetbyte()","ruby io#ungetc()","ruby openssl::buffering#ungetc()","ruby reline::ungetc()","ruby reline::ungetc()","ruby reline::ansi::ungetc()","ruby reline::generalio::ungetc()","ruby reline::windows::ungetc()","ruby stringio#ungetc()","ruby zlib::gzipreader#ungetc()","ruby string#unicode_normalize()","ruby string#unicode_normalize!()","ruby string#unicode_normalized?()","ruby ","ruby gem::commands::uninstallcommand#uninstall()","ruby gem::uninstaller#uninstall()","ruby gem::commands::uninstallcommand#uninstall_all()","ruby gem::commands::cleanupcommand#uninstall_dep()","ruby gem::commands::uninstallcommand#uninstall_gem()","ruby gem::uninstaller#uninstall_gem()","ruby gem::commands::setupcommand#uninstall_old_gemcutter()","ruby gem::commands::uninstallcommand#uninstall_specific()","ruby array#union()","ruby fiddle::importer#union()","ruby regexp::union()","ruby set#union()","ruby array#uniq()","ruby enumerable#uniq()","ruby enumerator::lazy#uniq()","rails activerecord::querymethods#uniq!()","ruby array#uniq!()","ruby rdoc::store#unique_classes()","ruby rdoc::store#unique_classes_and_modules()","ruby rdoc::store#unique_modules()","ruby addrinfo::unix()","ruby socket::unix()","ruby addrinfo#unix?()","ruby reline::lineeditor#unix_line_discard()","ruby addrinfo#unix_path()","ruby socket::ancillarydata::unix_rights()","ruby socket::ancillarydata#unix_rights()","ruby socket::unix_server_loop()","ruby socket::unix_server_socket()","ruby reline::lineeditor#unix_word_rubout()","rails activerecord::unknown()","ruby logger#unknown()","ruby syslog::logger#unknown()","ruby dir::unlink()","ruby file::unlink()","ruby pathname#unlink()","ruby tempfile#unlink()","rails activesupport::dependencies::unload_interlock()","rails activesupport::dependencies::interlock#unloading()","ruby net::http#unlock()","ruby thread::mutex#unlock()","rails actioncontroller::requestforgeryprotection#unmask_token()","ruby gem::installer#unpack()","ruby socket::option#unpack()","ruby string#unpack()","ruby string#unpack1()","ruby socket::unpack_sockaddr_in()","ruby socket::unpack_sockaddr_un()","ruby win32::registry::api#unpackdw()","ruby win32::registry::api#unpackhandle()","ruby win32::registry::api#unpackqw()","rails actioncontroller::logsubscriber#unpermitted_parameters()","rails activerecord::connectionadapters::abstractadapter#unprepared_statement()","rails activerecord::connectionadapters::quoting#unquoted_false()","rails activerecord::connectionadapters::quoting#unquoted_true()","ruby drb::extservmanager#unregist()","rails mime::type::unregister()","ruby drb::extservmanager#unregister()","ruby gem::commandmanager#unregister_command()","rails actionmailer::base::unregister_interceptor()","rails actionmailer::base::unregister_interceptors()","rails actionmailer::base::unregister_observer()","rails actionmailer::base::unregister_observers()","rails actionmailer::previews::classmethods#unregister_preview_interceptor()","rails actionmailer::previews::classmethods#unregister_preview_interceptors()","ruby gem::specification::unresolved_deps()","ruby psych::unsafe_load()","ruby psych::unsafe_load_file()","ruby stringscanner#unscan()","rails activerecord::querymethods#unscope()","rails activerecord::scoping::default::classmethods#unscoped()","ruby gem::configfile#unset_api_key!()","rails actiondispatch::middlewarestack#unshift()","rails rails::configuration::middlewarestackproxy#unshift()","rails rails::paths::path#unshift()","ruby array#unshift()","ruby gem::requestset::lockfile::tokenizer#unshift()","rails activerecord::connectionadapters::mysql::columnmethods#unsigned_bigint()","rails activerecord::connectionadapters::mysql::columnmethods#unsigned_decimal()","rails activerecord::connectionadapters::mysql::columnmethods#unsigned_float()","rails activerecord::connectionadapters::mysql::columnmethods#unsigned_integer()","rails actioncable::subscriptionadapter::base#unsubscribe()","rails actioncable::subscriptionadapter::redis::listener::subscribedclient#unsubscribe()","rails activesupport::notifications::unsubscribe()","rails activesupport::notifications::fanout#unsubscribe()","rails activesupport::notifications::fanout::subscribers::matcher::allmessages#unsubscribe!()","rails actioncable::channel::base#unsubscribed()","rails activesupport::duration#until()","ruby kernel#untrace_var()","ruby zlib::gzipreader#unused()","rails actiondispatch::exceptionwrapper#unwrapped_exception()","rails activerecord::migration#up()","rails addservicenametoactivestorageblobs#up()","rails activerecord::migration#up_only()","ruby string#upcase()","ruby symbol#upcase()","ruby string#upcase!()","rails activesupport::inflector#upcase_first()","rails string#upcase_first()","ruby reline::lineeditor#upcase_word()","rails actiontext::fragment#update()","rails activerecord::connectionadapters::databasestatements#update()","rails activerecord::persistence#update()","rails activerecord::persistence::classmethods#update()","rails activestorage::diskcontroller#update()","rails activesupport::hashwithindifferentaccess#update()","rails activesupport::hashwithindifferentaccess#update()","rails rails::generators::activemodel#update()","ruby cgi::session#update()","ruby cgi::session::filestore#update()","ruby cgi::session::memorystore#update()","ruby cgi::session::nullstore#update()","ruby cgi::session::pstore#update()","ruby digest::base#update()","ruby digest::instance#update()","ruby digest::sha2#update()","ruby env::update()","ruby gem::streamui::silentdownloadreporter#update()","ruby gem::streamui::threadeddownloadreporter#update()","ruby hash#update()","ruby openssl::cipher#update()","ruby openssl::digest#update()","ruby openssl::hmac#update()","ruby yaml::dbm#update()","rails activerecord::persistence#update!()","rails activerecord::persistence::classmethods#update!()","ruby rdoc::classmodule#update_aliases()","rails activerecord::batches::batchenumerator#update_all()","rails activerecord::relation#update_all()","rails activerecord::persistence#update_attribute()","ruby gem::source#update_cache?()","ruby gem::package::tarheader#update_checksum()","rails activerecord::persistence#update_column()","rails activerecord::persistence#update_columns()","rails activerecord::countercache::classmethods#update_counters()","rails activerecord::locking::optimistic::classmethods#update_counters()","rails activerecord::relation#update_counters()","ruby rdoc::classmodule#update_extends()","ruby gem::commands::updatecommand#update_gem()","ruby gem::commands::updatecommand#update_gems()","ruby rdoc::classmodule#update_includes()","ruby reline::update_iogate()","ruby reline::update_iogate()","rails activestorage::service#update_metadata()","rails activestorage::service::gcsservice#update_metadata()","ruby rdoc::rdoc#update_output_dir()","ruby rdoc::store#update_parser_of_file()","ruby gem::commands::updatecommand#update_rubygems()","ruby gem::gemcutterutilities#update_scope()","ruby gem::updatesuggestion#update_suggestion()","ruby gem::streamui::silentprogressreporter#updated()","ruby gem::streamui::simpleprogressreporter#updated()","ruby gem::streamui::verboseprogressreporter#updated()","rails activesupport::fileupdatechecker#updated?()","rails actiondispatch::contentsecuritypolicy#upgrade_insecure_requests()","ruby rdoc::context#upgrade_to_class()","rails activestorage::blob#upload()","rails activestorage::service#upload()","rails activestorage::service::azurestorageservice#upload()","rails activestorage::service::diskservice#upload()","rails activestorage::service::gcsservice#upload()","rails activestorage::service::mirrorservice#upload()","rails activestorage::service::s3service#upload()","ruby win32::sspi::securityhandle#upper()","rails activerecord::persistence::classmethods#upsert()","rails activerecord::persistence::classmethods#upsert_all()","ruby date#upto()","ruby integer#upto()","ruby string#upto()","ruby fileutils::uptodate?()","ruby random::urandom()","ruby drb::uri()","ruby drb::drbprotocol::uri_option()","rails actiondispatch::http::url#url()","rails activestorage::blob#url()","rails activestorage::preview#url()","rails activestorage::service#url()","rails activestorage::variant#url()","ruby erb::util::url_encode()","rails actionview::helpers::formbuilder#url_field()","rails actionview::helpers::formhelper#url_field()","rails actionview::helpers::formtaghelper#url_field_tag()","rails actioncontroller::metal#url_for()","rails actiondispatch::http::url::url_for()","rails actiondispatch::routing::urlfor#url_for()","rails actionview::routingurlfor#url_for()","rails activestorage::service#url_for_direct_upload()","rails activestorage::service::azurestorageservice#url_for_direct_upload()","rails activestorage::service::diskservice#url_for_direct_upload()","rails activestorage::service::gcsservice#url_for_direct_upload()","rails activestorage::service::s3service#url_for_direct_upload()","rails actioncontroller::redirecting#url_from()","rails rails::generators::namedbase#url_helper_prefix()","rails actioncontroller::urlfor#url_options()","rails actiondispatch::routing::urlfor#url_options()","rails actionview::helpers::asseturlhelper#url_to_asset()","rails actionview::helpers::asseturlhelper#url_to_audio()","rails actionview::helpers::asseturlhelper#url_to_font()","rails actionview::helpers::asseturlhelper#url_to_image()","rails actionview::helpers::asseturlhelper#url_to_javascript()","rails actionview::helpers::asseturlhelper#url_to_stylesheet()","rails actionview::helpers::asseturlhelper#url_to_video()","ruby random::formatter#urlsafe_base64()","ruby base64#urlsafe_decode64()","ruby base64#urlsafe_encode64()","rails activesupport::timezone::us_zones()","ruby gem::command#usage()","rails rails::command::base::usage_path()","rails rails::generators::base::usage_path()","rails actioncontroller::metal::use()","rails actiondispatch::middlewarestack#use()","rails rails::configuration::middlewarestackproxy#use()","rails actiondispatch::http::mimenegotiation#use_accept_header()","ruby gem::use_gemdeps()","ruby csv::parser#use_headers?()","rails activerecord::connectionadapters::postgresqladapter#use_insert_returning?()","ruby irb::context#use_loader()","ruby irb::context#use_loader=()","ruby irb::context#use_loader?()","ruby rdoc::parser::use_markup()","rails activerecord::connectionadapters::abstractadapter#use_metadata_table?()","ruby gem::use_paths()","ruby syntaxsuggest::use_prism_parser?()","rails actioncontroller::renderers::classmethods#use_renderer()","rails actioncontroller::renderers::classmethods#use_renderers()","ruby net::http#use_ssl=()","ruby net::http#use_ssl?()","ruby bundler::use_system_gems?()","ruby irb::context#use_tracer=()","ruby gem::defaultuserinteraction#use_ui()","ruby gem::defaultuserinteraction::use_ui()","rails time::use_zone()","rails datetime#usec()","ruby time#usec()","ruby module::used_modules()","ruby module::used_refinements()","ruby uri::generic#user()","ruby uri::generic#user=()","ruby gem::request#user_agent()","ruby bundler::user_bundle_path()","ruby bundler::user_cache()","ruby gem::user_dir()","ruby bundler::user_home()","ruby gem::user_home()","rails actioncontroller::httpauthentication::basic#user_name_and_password()","ruby uri::generic#userinfo()","ruby uri::generic#userinfo=()","rails activerecord::databaseconnectionerror::username_error()","rails activesupport::timewithzone#utc()","rails datetime#utc()","ruby time::utc()","ruby time#utc()","rails activesupport::timewithzone#utc?()","rails datetime#utc?()","ruby time#utc?()","rails activesupport::timewithzone#utc_offset()","rails activesupport::timezone#utc_offset()","rails datetime#utc_offset()","ruby time#utc_offset()","rails activesupport::timezone#utc_to_local()","rails activesupport::utc_to_local_returns_utc_offset_times()","rails activesupport::utc_to_local_returns_utc_offset_times=()","rails actionview::helpers::formtaghelper#utf8_enforcer_tag()","ruby file::utime()","ruby pathname#utime()","rails actiondispatch::request#uuid()","rails activerecord::connectionadapters::postgresql::columnmethods#uuid()","ruby random::formatter#uuid()","rails digest::uuid::uuid_from_hash()","rails digest::uuid::uuid_v3()","rails digest::uuid::uuid_v4()","ruby random::formatter#uuid_v4()","rails digest::uuid::uuid_v5()","ruby random::formatter#uuid_v7()","rails activemodel::validations#valid?()","rails activerecord::dynamicmatchers::method#valid?()","rails activerecord::validations#valid?()","ruby io::buffer#valid?()","ruby syntaxsuggest::valid?()","ruby syntaxsuggest::codeblock#valid?()","rails actiondispatch::http::mimenegotiation#valid_accept_header()","rails actioncontroller::requestforgeryprotection#valid_authenticity_token?()","ruby date::valid_civil?()","ruby date::valid_commercial?()","ruby date::valid_date?()","ruby string#valid_encoding?()","ruby date::valid_jd?()","rails activesupport::messageverifier#valid_message?()","ruby date::valid_ordinal?()","rails actioncontroller::requestforgeryprotection#valid_per_form_csrf_token?()","rails actioncontroller::requestforgeryprotection#valid_request_origin?()","ruby syntaxsuggest::valid_without?()","rails activemodel::eachvalidator#validate()","rails activemodel::validations#validate()","rails activemodel::validations::classmethods#validate()","rails activemodel::validator#validate()","rails activerecord::validations#validate()","ruby gem::specification#validate()","ruby gem::specificationpolicy#validate()","rails activemodel::validations#validate!()","rails activerecord::connectionadapters::postgresql::schemastatements#validate_check_constraint()","rails activerecord::encryption::encryptablerecord#validate_column_size()","rails activerecord::connectionadapters::postgresql::altertable#validate_constraint()","rails activerecord::connectionadapters::postgresql::schemastatements#validate_constraint()","ruby gem::specification#validate_dependencies()","rails actioncontroller::httpauthentication::digest#validate_digest_response()","rails activemodel::eachvalidator#validate_each()","rails activerecord::encryption::extendeddeterministicuniquenessvalidator::encrypteduniquenessvalidator#validate_each()","rails activerecord::connectionadapters::postgresql::schemastatements#validate_foreign_key()","ruby gem::specification#validate_metadata()","ruby gem::specificationpolicy#validate_metadata()","rails actioncontroller::httpauthentication::digest#validate_nonce()","ruby gem::specificationpolicy#validate_optional()","ruby gem::specification#validate_permissions()","ruby gem::specificationpolicy#validate_permissions()","ruby gem::specificationpolicy#validate_required!()","ruby gem::specificationpolicy#validate_required_ruby_version()","rails rails::application#validate_secret_key_base()","rails activestorage::attached::model#validate_service_configuration()","rails activerecord::encryption::properties#validate_value_type()","rails activemodel::validations::classmethods#validates()","rails activemodel::validations::classmethods#validates!()","rails activemodel::validations::helpermethods#validates_absence_of()","rails activerecord::validations::classmethods#validates_absence_of()","rails activemodel::validations::helpermethods#validates_acceptance_of()","rails activerecord::validations::classmethods#validates_associated()","rails activemodel::validations::helpermethods#validates_comparison_of()","rails activemodel::validations::helpermethods#validates_confirmation_of()","rails activemodel::validations::classmethods#validates_each()","rails activemodel::validations::helpermethods#validates_exclusion_of()","rails activemodel::validations::helpermethods#validates_format_of()","rails activemodel::validations::helpermethods#validates_inclusion_of()","rails activemodel::validations::helpermethods#validates_length_of()","rails activerecord::validations::classmethods#validates_length_of()","rails activemodel::validations::helpermethods#validates_numericality_of()","rails activerecord::validations::classmethods#validates_numericality_of()","rails activemodel::validations::helpermethods#validates_presence_of()","rails activerecord::validations::classmethods#validates_presence_of()","rails activemodel::validations::helpermethods#validates_size_of()","rails activerecord::validations::classmethods#validates_size_of()","rails activerecord::validations::classmethods#validates_uniqueness_of()","rails activemodel::validations#validates_with()","rails activemodel::validations::classmethods#validates_with()","rails activemodel::validations::classmethods#validators()","rails activemodel::validations::classmethods#validators_on()","rails activerecord::statementcache::partialquerycollector#value()","ruby cgi::cookie#value()","ruby csv::inputrecordseparator::value()","ruby fiddle::importer#value()","ruby net::httpresponse#value()","ruby openssl::x509::attribute#value()","ruby openssl::x509::extension#value()","ruby prism::floatnode#value()","ruby prism::imaginarynode#value()","ruby prism::integernode#value()","ruby prism::lexcompat::token#value()","ruby prism::magiccomment#value()","ruby prism::rationalnode#value()","ruby rinda::tuple#value()","ruby rinda::tupleentry#value()","ruby thread#value()","ruby uncaughtthrowerror#value()","ruby win32ole::variable#value()","ruby win32ole::variant#value()","ruby cgi::cookie#value=()","ruby openssl::x509::attribute#value=()","ruby openssl::x509::extension#value=()","ruby win32ole::variant#value=()","rails actioncontroller::parameters#value?()","ruby env::value?()","ruby hash#value?()","ruby openssl::x509::extension#value_der()","rails actioncontroller::parameters#values()","rails activerecord::relation#values()","rails rails::paths::root#values()","ruby env::values()","ruby hash#values()","ruby io::buffer#values()","ruby objectspace::weakmap#values()","ruby struct#values()","ruby win32::registry#values()","ruby yaml::dbm#values()","rails actioncontroller::parameters#values_at()","rails activerecord::core#values_at()","rails activesupport::hashwithindifferentaccess#values_at()","rails activesupport::hashwithindifferentaccess#values_at()","rails rails::paths::root#values_at()","ruby array#values_at()","ruby csv::row#values_at()","ruby csv::table#values_at()","ruby env::values_at()","ruby hash#values_at()","ruby matchdata#values_at()","ruby stringscanner#values_at()","ruby struct#values_at()","ruby yaml::dbm#values_at()","rails activestorage::blob::representable#variable?()","ruby win32ole::variable#variable_kind()","ruby win32ole::type#variables()","rails actiondispatch::http::mimenegotiation#variant()","rails activestorage::attachment#variant()","rails activestorage::blob::representable#variant()","rails actiondispatch::http::mimenegotiation#variant=()","ruby win32ole::variable#varkind()","ruby win32ole::variant#vartype()","rails rails::appbuilder#vendor()","rails rails::generators::actions#vendor()","ruby optionparser#ver()","ruby drb::drbserver#verbose()","ruby drb::drbserver::verbose()","ruby gem::userinteraction#verbose()","ruby drb::drbserver::verbose=()","ruby drb::drbserver#verbose=()","ruby irb::context#verbose?()","rails activesupport::messageverifier#verified()","rails activesupport::messages::rotator::verifier#verified()","rails actioncontroller::requestforgeryprotection#verified_request?()","rails activesupport::messageverifier#verify()","ruby gem::package#verify()","ruby gem::package::old#verify()","ruby gem::security::policy#verify()","ruby gem::security::trustdir#verify()","ruby openssl::netscape::spki#verify()","ruby openssl::ocsp::basicresponse#verify()","ruby openssl::ocsp::request#verify()","ruby openssl::pkcs7#verify()","ruby openssl::pkey::pkey#verify()","ruby openssl::timestamp::response#verify()","ruby openssl::x509::crl#verify()","ruby openssl::x509::certificate#verify()","ruby openssl::x509::request#verify()","ruby openssl::x509::store#verify()","ruby openssl::x509::storecontext#verify()","rails activerecord::connectionadapters::abstractadapter#verify!()","ruby gem::gemcutterutilities#verify_api_key()","rails actioncontroller::requestforgeryprotection#verify_authenticity_token()","ruby openssl::x509::store#verify_callback=()","ruby gem::request::verify_certificate()","ruby openssl::ssl::verify_certificate_identity()","ruby gem::request::verify_certificate_message()","ruby gc::verify_compaction_references()","ruby gem::package#verify_entry()","ruby gem::package#verify_files()","ruby gc::verify_internal_consistency()","ruby openssl::pkey::rsa#verify_pss()","ruby openssl::pkey::pkey#verify_raw()","ruby openssl::pkey::pkey#verify_recover()","ruby openssl::ssl::sslsocket#verify_result()","rails actioncontroller::requestforgeryprotection#verify_same_origin_request()","ruby gem::security::policy#verify_signatures()","ruby gem::installer#verify_spec()","rails actioncable::version()","rails actionmailbox::version()","rails actionmailer::version()","rails actionpack::version()","rails actiontext::version()","rails actionview::version()","rails activejob::version()","rails activemodel::version()","rails activerecord::version()","rails activestorage::version()","rails activesupport::version()","rails rails::version()","rails rails::generators::appbase::gemfileentry::version()","ruby erb::version()","ruby gem::basicspecification#version()","ruby gem::resolver::activationrequest#version()","ruby gem::resolver::specspecification#version()","ruby gem::unsatisfiabledependencyerror#version()","ruby gem::version#version()","ruby openssl::timestamp::request#version()","ruby openssl::timestamp::tokeninfo#version()","ruby openssl::x509::crl#version()","ruby openssl::x509::certificate#version()","ruby openssl::x509::request#version()","ruby optionparser#version()","ruby win32ole::typelib#version()","rails ","ruby gem::specification#version=()","ruby openssl::timestamp::request#version=()","ruby openssl::x509::crl#version=()","ruby openssl::x509::certificate#version=()","ruby openssl::x509::request#version=()","ruby net::http::version_1_2()","ruby net::http::version_1_2?()","rails rails::appbuilder#version_control()","rails rails::pluginbuilder#version_control()","ruby socket::ifaddr#vhid()","ruby reline::unicode::vi_backward_word()","ruby reline::unicode::vi_big_backward_word()","ruby reline::unicode::vi_big_forward_end_word()","ruby reline::unicode::vi_big_forward_word()","ruby reline::core#vi_editing_mode()","ruby reline::core#vi_editing_mode?()","ruby reline::lineeditor#vi_end_of_transmission()","ruby reline::lineeditor#vi_eof_maybe()","ruby reline::unicode::vi_first_print()","ruby reline::unicode::vi_forward_end_word()","ruby reline::unicode::vi_forward_word()","ruby reline::lineeditor#vi_movement_mode()","rails activestorage::blob#video?()","rails actionview::helpers::asseturlhelper#video_path()","rails actionview::helpers::assettaghelper#video_tag()","rails actionview::helpers::asseturlhelper#video_url()","rails ","rails ","rails ","rails abstractcontroller::rendering#view_assigns()","rails abstractcontroller::caching#view_cache_dependencies()","rails abstractcontroller::caching::classmethods#view_cache_dependency()","rails actionview::rendering#view_context()","rails actionview::rendering#view_context_class()","rails actionview::rendering::classmethods#view_context_class()","rails activerecord::connectionadapters::schemastatements#view_exists?()","rails actionview::viewpaths::classmethods#view_paths()","rails actionview::viewpaths::classmethods#view_paths=()","rails activerecord::connectionadapters::schemastatements#views()","rails actionview::templatepath::virtual()","ruby rdoc::options#visibility=()","ruby syntaxsuggest::codeline#visible?()","ruby win32ole::method#visible?()","ruby win32ole::type#visible?()","ruby win32ole::typelib#visible?()","ruby win32ole::variable#visible?()","ruby syntaxsuggest::codeblock#visible_lines()","ruby gem::safemarshal::visitors::streamprinter#visit()","ruby gem::safemarshal::visitors::toruby#visit()","ruby gem::safemarshal::visitors::visitor#visit()","ruby psych::visitors::yamltree#visit_array()","ruby psych::visitors::yamltree#visit_basicobject()","ruby psych::visitors::yamltree#visit_bigdecimal()","ruby psych::visitors::yamltree#visit_class()","ruby psych::visitors::yamltree#visit_complex()","ruby psych::visitors::yamltree#visit_date()","ruby psych::visitors::yamltree#visit_datetime()","ruby psych::visitors::yamltree#visit_delegator()","ruby psych::visitors::yamltree#visit_encoding()","ruby psych::visitors::yamltree#visit_enumerator()","ruby psych::visitors::yamltree#visit_exception()","ruby psych::visitors::yamltree#visit_falseclass()","ruby psych::visitors::yamltree#visit_float()","ruby psych::visitors::yamltree#visit_hash()","ruby psych::visitors::yamltree#visit_integer()","ruby psych::visitors::yamltree#visit_module()","ruby psych::visitors::yamltree#visit_nameerror()","ruby psych::visitors::yamltree#visit_nilclass()","ruby psych::visitors::yamltree#visit_object()","ruby psych::visitors::emitter#visit_psych_nodes_alias()","ruby psych::visitors::noaliasruby#visit_psych_nodes_alias()","ruby psych::visitors::toruby#visit_psych_nodes_alias()","ruby psych::visitors::emitter#visit_psych_nodes_document()","ruby psych::visitors::toruby#visit_psych_nodes_document()","ruby psych::visitors::emitter#visit_psych_nodes_mapping()","ruby psych::visitors::toruby#visit_psych_nodes_mapping()","ruby psych::visitors::emitter#visit_psych_nodes_scalar()","ruby psych::visitors::toruby#visit_psych_nodes_scalar()","ruby psych::visitors::emitter#visit_psych_nodes_sequence()","ruby psych::visitors::toruby#visit_psych_nodes_sequence()","ruby psych::visitors::emitter#visit_psych_nodes_stream()","ruby psych::visitors::toruby#visit_psych_nodes_stream()","ruby psych::visitors::yamltree#visit_psych_omap()","ruby psych::visitors::yamltree#visit_psych_set()","ruby psych::visitors::yamltree#visit_range()","ruby psych::visitors::yamltree#visit_rational()","ruby psych::visitors::yamltree#visit_regexp()","ruby gem::noaliasyamltree#visit_string()","ruby psych::visitors::yamltree#visit_string()","ruby psych::visitors::yamltree#visit_struct()","ruby psych::visitors::restrictedyamltree#visit_symbol()","ruby psych::visitors::yamltree#visit_symbol()","ruby psych::visitors::yamltree#visit_time()","ruby psych::visitors::yamltree#visit_trueclass()","ruby syntaxsuggest::unvisitedlines#visit_block()","ruby prism::parseresult::newlines#visit_block_node()","ruby prism::rippercompat#visit_call_node()","ruby prism::desugarcompiler#visit_class_variable_and_write_node()","ruby prism::desugarcompiler#visit_class_variable_operator_write_node()","ruby prism::desugarcompiler#visit_class_variable_or_write_node()","ruby prism::desugarcompiler#visit_constant_and_write_node()","ruby prism::desugarcompiler#visit_constant_operator_write_node()","ruby prism::desugarcompiler#visit_constant_or_write_node()","ruby prism::rippercompat#visit_float_node()","ruby prism::desugarcompiler#visit_global_variable_and_write_node()","ruby prism::desugarcompiler#visit_global_variable_operator_write_node()","ruby prism::desugarcompiler#visit_global_variable_or_write_node()","ruby prism::parseresult::newlines#visit_if_node()","ruby prism::rippercompat#visit_imaginary_node()","ruby prism::desugarcompiler#visit_instance_variable_and_write_node()","ruby prism::desugarcompiler#visit_instance_variable_operator_write_node()","ruby prism::desugarcompiler#visit_instance_variable_or_write_node()","ruby prism::rippercompat#visit_integer_node()","ruby prism::parseresult::newlines#visit_lambda_node()","ruby prism::desugarcompiler#visit_local_variable_and_write_node()","ruby prism::desugarcompiler#visit_local_variable_operator_write_node()","ruby prism::desugarcompiler#visit_local_variable_or_write_node()","ruby prism::rippercompat#visit_program_node()","ruby prism::rippercompat#visit_rational_node()","ruby prism::parseresult::newlines#visit_statements_node()","ruby prism::rippercompat#visit_statements_node()","ruby prism::parseresult::newlines#visit_unless_node()","rails activesupport::notifications::fanout#wait()","ruby io#wait()","ruby monitormixin::conditionvariable#wait()","ruby process::wait()","ruby process::status::wait()","ruby ractor::selector#wait()","ruby rinda::waittemplateentry#wait()","ruby thread::conditionvariable#wait()","ruby process::wait2()","ruby monitor#wait_for_cond()","ruby gem::gemcutterutilities::webauthnlistener#wait_for_otp_code()","ruby io#wait_priority()","ruby io#wait_readable()","ruby monitormixin::conditionvariable#wait_until()","ruby monitormixin::conditionvariable#wait_while()","ruby io#wait_writable()","ruby process::waitall()","ruby process::waitpid()","ruby process::waitpid2()","ruby thread#wakeup()","ruby process::warmup()","rails activesupport::deprecation::reporting#warn()","ruby kernel#warn()","ruby logger#warn()","ruby optionparser#warn()","ruby rdoc::options#warn()","ruby rdoc::parser::ruby#warn()","ruby syslog::logger#warn()","ruby warning#warn()","ruby logger#warn!()","ruby logger#warn?()","ruby gem::commands::querycommand#warning_without_suggested_alternatives()","rails rails::railtie::configuration#watchable_dirs()","rails rails::railtie::configuration#watchable_files()","ruby date#wday()","ruby time#wday()","rails actiondispatch::http::cache::response#weak_etag=()","rails actiondispatch::http::cache::response#weak_etag?()","ruby weakref#weakref_alive?()","ruby date#wednesday?()","ruby time#wednesday?()","rails numeric#week()","rails actionview::helpers::formbuilder#week_field()","rails actionview::helpers::formhelper#week_field()","rails actionview::helpers::formtaghelper#week_field_tag()","rails actionview::helpers::formoptionshelper#weekday_options_for_select()","rails actionview::helpers::formbuilder#weekday_select()","rails actionview::helpers::formoptionshelper#weekday_select()","rails numeric#weeks()","rails dateandtime::calculations#weeks_ago()","rails dateandtime::calculations#weeks_since()","ruby gem::command#when_invoked()","rails actioncable::remoteconnections#where()","rails activemodel::errors#where()","rails activerecord::encryption::extendeddeterministicqueries::relationqueries#where()","rails activerecord::querymethods#where()","ruby bundler::which()","ruby gem::commands::updatecommand#which_to_update()","rails activerecord::connectionadapters::connectionhandler#while_preventing_writes()","rails activerecord::connectionhandling#while_preventing_writes()","ruby reline::lineeditor#whole_buffer()","ruby reline::lineeditor#whole_lines()","ruby syntaxsuggest::explainsyntax#why()","ruby gem::dependencylist#why_not_ok?()","ruby irb::debug::ui#width()","ruby reline::lineeditor::dialog#width=()","ruby pp::width_for()","rails activerecord::attributemethods::dirty#will_save_change_to_attribute?()","ruby fiddle::win32_last_error()","ruby fiddle::win32_last_error=()","ruby fiddle::win32_last_socket_error()","ruby fiddle::win32_last_socket_error=()","ruby win32::registry::api#win64?()","ruby reline::ansi::win?()","ruby reline::generalio::win?()","ruby reline::windows::win?()","ruby reline::windows::win_legacy_console?()","ruby gem::win_platform?()","ruby ","ruby gem::installer#windows_stub_script()","ruby io#winsize()","ruby irb::inputmethod#winsize()","ruby io#winsize=()","rails abstractcontroller::railties::routeshelpers::with()","rails actionmailer::parameterized::classmethods#with()","rails activesupport::cache::connectionpoollike#with()","ruby data#with()","ruby optionparser::with()","rails actiontext::attribute#with_all_rich_text()","rails activesupport::xmlmini#with_backend()","ruby bundler::with_clean_env()","ruby makemakefile#with_config()","rails activerecord::connectionadapters::connectionpool#with_connection()","rails activerecord::encryption::scheme#with_context()","rails actioncable::server::worker::activerecordconnectionmanagement#with_database_connections()","rails actiondispatch::routing::mapper::base#with_default_scope()","rails actioncontroller::parameters#with_defaults()","rails actioncontroller::renderer#with_defaults()","rails activesupport::hashwithindifferentaccess#with_defaults()","rails activesupport::hashwithindifferentaccess#with_defaults()","rails hash#with_defaults()","rails actioncontroller::parameters#with_defaults!()","rails activesupport::hashwithindifferentaccess#with_defaults!()","rails activesupport::hashwithindifferentaccess#with_defaults!()","rails hash#with_defaults!()","rails activerecord::encryption::contexts#with_encryption_context()","rails actiontext::attachment#with_full_attributes()","rails rails::generators::actions#with_indentation()","ruby enumerator#with_index()","ruby enumerator::lazy#with_index()","rails activesupport::hashwithindifferentaccess#with_indifferent_access()","rails activesupport::hashwithindifferentaccess#with_indifferent_access()","rails hash#with_indifferent_access()","ruby logger#with_level()","rails activesupport::cache::strategy::localcache#with_local_cache()","rails activerecord::locking::pessimistic#with_lock()","rails exhibit::with_name()","rails exhibit::with_notes()","ruby enumerator#with_object()","rails object#with_options()","ruby bundler::with_original_env()","ruby reline::ansi::with_raw_input()","ruby reline::generalio::with_raw_input()","ruby reline::windows::with_raw_input()","ruby gem::gemcutterutilities#with_response()","rails actiondispatch::routing::mapper::resources#with_scope_level()","ruby bundler::with_unbundled_env()","rails kernel#with_warnings()","rails activerecord::querymethods#without()","rails activesupport::hashwithindifferentaccess#without()","rails activesupport::hashwithindifferentaccess#without()","rails array#without()","rails enumerable#without()","rails activerecord::encryption::contexts#without_encryption()","rails actioncontroller::api::without_modules()","rails actioncontroller::base::without_modules()","rails actionview::helpers::texthelper#word_wrap()","ruby gem::platformmismatch#wordy()","ruby gem::sourcefetchproblem#wordy()","rails actioncable::server::base#worker_pool()","ruby irb::context#workspaces()","ruby file::world_readable?()","ruby file::stat#world_readable?()","ruby filetest#world_readable?()","ruby pathname#world_readable?()","ruby file::world_writable?()","ruby file::stat#world_writable?()","ruby filetest#world_writable?()","ruby pathname#world_writable?()","rails actiontext::fragment::wrap()","rails activestorage::filename::wrap()","rails activestorage::variation::wrap()","rails activesupport::executionwrapper::wrap()","rails activesupport::reloader::wrap()","rails array::wrap()","rails mail::address::wrap()","ruby gem::command#wrap()","ruby gem::package::digestio::wrap()","ruby json::jsonerror::wrap()","ruby rdoc::text#wrap()","ruby zlib::gzipfile::wrap()","ruby reline::lineeditor#wrap_method_call()","rails actioncontroller::paramswrapper::options::classmethods#wrap_parameters()","rails rails::generators::base#wrap_with_namespace()","ruby file::writable?()","ruby file::stat#writable?()","ruby filetest#writable?()","ruby pathname#writable?()","ruby file::writable_real?()","ruby file::stat#writable_real?()","ruby filetest#writable_real?()","ruby pathname#writable_real?()","rails actioncontroller::live::sse#write()","rails actiondispatch::railsentitystore#write()","rails actiondispatch::railsmetastore#write()","rails actiondispatch::response#write()","rails activerecord::migration#write()","rails activesupport::cache::memcachestore#write()","rails activesupport::cache::store#write()","rails activesupport::encryptedconfiguration#write()","rails activesupport::encryptedfile#write()","ruby argf#write()","ruby fiddle::pointer::write()","ruby gem::configfile#write()","ruby gem::package::digestio#write()","ruby gem::package::tarwriter::boundedstream#write()","ruby gem::package::tarwriter::restrictedstream#write()","ruby gem::requestset::lockfile#write()","ruby gem::security::write()","ruby io::write()","ruby io#write()","ruby io::buffer#write()","ruby logger::logdevice#write()","ruby net::writeadapter#write()","ruby openssl::buffering#write()","ruby pathname#write()","ruby rinda::tuplespace#write()","ruby rinda::tuplespaceproxy#write()","ruby stringio#write()","ruby win32::registry#write()","ruby zlib::gzipwriter#write()","rails activerecord::attributemethods::write#write_attribute()","ruby win32::registry#write_bin()","ruby gem::write_binary()","ruby gem::installer#write_build_info_file()","ruby gem::installer#write_cache_file()","ruby gem::installer#write_default_spec()","rails activesupport::cache::memcachestore::duplocalcache::duplocalstore#write_entry()","rails activesupport::cache::strategy::localcache::localstore#write_entry()","rails abstractcontroller::caching::fragments#write_fragment()","ruby csv#write_headers?()","ruby win32::registry#write_i()","rails activesupport::cache::store#write_multi()","ruby io#write_nonblock()","ruby io::generic_writable#write_nonblock()","ruby openssl::buffering#write_nonblock()","ruby rdoc::options#write_options()","rails activerecord::connectionadapters::databasestatements#write_query?()","ruby openssl::random::write_random_file()","ruby win32::registry#write_s()","ruby rinda::ringserver#write_services()","rails actiondispatch::session::cachestore#write_session()","ruby openssl::pkcs7::write_smime()","ruby gem::installer#write_spec()","rails activerecord::store#write_store_attribute()","ruby net::http#write_timeout=()","rails actioncable::connection::streameventloop#writes_pending()","ruby win32::registry::wtime2time()","rails mail::message#x_original_to_addresses()","rails actiondispatch::request#xhr?()","rails activerecord::connectionadapters::postgresql::columnmethods#xml()","rails actiondispatch::request#xml_http_request?()","rails erb::util::xml_name_escape()","rails activesupport::timewithzone#xmlschema()","rails date#xmlschema()","ruby date::xmlschema()","ruby date#xmlschema()","ruby datetime#xmlschema()","ruby datetime::xmlschema()","ruby time#xmlschema()","ruby time::xmlschema()","ruby object#xmp()","ruby io::buffer#xor!()","rails actioncontroller::requestforgeryprotection#xor_byte_strings()","ruby psych::nodes::node#yaml()","ruby object::yaml_tag()","ruby reline::killring#yank()","ruby reline::lineeditor#yank()","ruby gem::commands::yankcommand#yank_gem()","ruby reline::killring#yank_pop()","ruby reline::lineeditor#yank_pop()","rails ","rails ","ruby date#yday()","ruby time#yday()","rails integer#year()","ruby date#year()","ruby time#year()","rails integer#years()","rails dateandtime::calculations#years_ago()","rails dateandtime::calculations#years_since()","rails activesupport::timezone#yesterday()","rails date::yesterday()","rails dateandtime::calculations#yesterday()","rails activesupport::timewithzone#yesterday?()","rails dateandtime::calculations#yesterday?()","ruby fiber::yield()","ruby proc#yield()","ruby ractor::yield()","ruby kernel#yield_self()","rails activesupport::concurrency::sharelock#yield_shares()","ruby rdoc::markupreference#yields_directive()","ruby ","ruby ","ruby zlib::gzipreader::zcat()","rails ","ruby bigdecimal#zero?()","ruby file::zero?()","ruby file::stat#zero?()","ruby filetest#zero?()","ruby float#zero?()","ruby integer#zero?()","ruby numeric#zero?()","ruby openssl::bn#zero?()","ruby pathname#zero?()","ruby array#zip()","ruby enumerable#zip()","ruby enumerator::lazy#zip()","ruby rdoc::parser::zip?()","ruby zlib::zlib_version()","rails activesupport::timewithzone#zone()","rails time::zone()","ruby datetime#zone()","ruby time#zone()","rails time::zone=()","ruby ipaddr#zone_id()","ruby ipaddr#zone_id=()","ruby time::zone_offset()","ruby array#|()","ruby falseclass#|()","ruby io::buffer#|()","ruby ipaddr#|()","ruby integer#|()","ruby json::genericobject#|()","ruby nilclass#|()","ruby ripper::lexer::state#|()","ruby set#|()","ruby trueclass#|()","ruby io::buffer#~()","ruby ipaddr#~()","ruby integer#~()","ruby regexp#~()"],"info":[["!","BasicObject","ruby/classes/BasicObject.html#method-i-21","()","<p>Boolean negate.\n",null,1],["!","Delegator","ruby/classes/Delegator.html#method-i-21","()","<p>Delegates ! to the _<em>getobj</em>_\n",null,1],["!","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-21","(*args)","",null,1],["!=","BasicObject","ruby/classes/BasicObject.html#method-i-21-3D","(p1)","<p>Returns true if two objects are not-equal, otherwise false.\n",null,1],["!=","Delegator","ruby/classes/Delegator.html#method-i-21-3D","(obj)","<p>Returns true if two objects are not considered of equal value.\n",null,1],["!=","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-21-3D","(*args)","",null,1],["!~","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-21~","","<p>Equivalent to <code>String#!~</code>. Match the class name against the given regexp. Returns <code>true</code> if there is no match, …\n",null,0],["!~","Object","ruby/classes/Object.html#method-i-21~","(p1)","<p>Returns true if two objects do not match (using the <em>=~</em> method), otherwise false.\n",null,1],["%","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-25","(other)","<p>Returns the modulo of this Duration by another Duration or Numeric. Numeric values are treated as seconds. …\n",null,0],["%","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-25","(args)","",null,0],["%","BigDecimal","ruby/classes/BigDecimal.html#method-i-25","(p1)","<p>Returns the modulus from dividing by b.\n<p>See BigDecimal#divmod.\n",null,1],["%","Float","ruby/classes/Float.html#method-i-25","(p1)","<p>Returns <code>self</code> modulo <code>other</code> as a float.\n<p>For float <code>f</code> and real number <code>r</code>, these expressions are equivalent: …\n",null,1],["%","Integer","ruby/classes/Integer.html#method-i-25","(p1)","<p>Returns <code>self</code> modulo <code>other</code> as a real number.\n<p>For integer <code>n</code> and real number <code>r</code>, these expressions are equivalent: …\n",null,1],["%","Numeric","ruby/classes/Numeric.html#method-i-25","(p1)","<p>Returns <code>self</code> modulo <code>other</code> as a real number.\n<p>Of the Core and Standard Library classes, only Rational uses …\n",null,1],["%","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-25","(p1)","",null,1],["%","Range","ruby/classes/Range.html#method-i-25","(p1)","<p>Iterates over the elements of <code>self</code>.\n<p>With a block given, calls the block with selected elements of the …\n",null,1],["%","String","ruby/classes/String.html#method-i-25","(p1)","<p>Returns the result of formatting <code>object</code> into the format specification <code>self</code> (see Kernel#sprintf for formatting …\n",null,1],["%file_name%_generator.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/generator/templates/%file_name%_generator_rb_tt.html","","<p>class &lt;%= class_name %&gt;Generator &lt; Rails::Generators::NamedBase\n\n<pre><code>source_root File.expand_path(&quot;templates&quot;, ...\n</code></pre>\n",null,0],["%name%.gemspec.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/%name%_gemspec_tt.html","","<p>require_relative “lib/&lt;%= namespaced_name %&gt;/version”\n<p>Gem::Specification.new do |spec| …\n",null,0],["%namespaced_name%.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/lib/%namespaced_name%_rb_tt.html","","<p>require “&lt;%= namespaced_name %&gt;/version” &lt;% if engine? -%&gt; require “&lt;%= …\n",null,0],["%namespaced_name%_tasks.rake.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/lib/tasks/%namespaced_name%_tasks_rake_tt.html","","<p># desc “Explaining what the task does” # task :&lt;%= underscored_name %&gt; do #   # Task …\n",null,0],["&","Array","ruby/classes/Array.html#method-i-26","(p1)","<p>Returns a new Array containing each element found in both <code>array</code> and Array <code>other_array</code>; duplicates are …\n",null,1],["&","FalseClass","ruby/classes/FalseClass.html#method-i-26","(p1)","<p>Returns <code>false</code>:\n\n<pre><code>false &amp; true       # =&gt; false\nfalse &amp; Object.new # =&gt; false\n</code></pre>\n<p>Argument <code>object</code> is evaluated: …\n",null,1],["&","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-26","(p1)","<p>Generate a new buffer the same size as the source by applying the binary AND operation to the source, …\n",null,1],["&","IPAddr","ruby/classes/IPAddr.html#method-i-26","(other)","<p>Returns a new ipaddr built by bitwise AND.\n",null,1],["&","Integer","ruby/classes/Integer.html#method-i-26","(p1)","<p>Bitwise AND; each bit in the result is 1 if both corresponding bits in <code>self</code> and <code>other</code> are 1, 0 otherwise: …\n",null,1],["&","NilClass","ruby/classes/NilClass.html#method-i-26","(p1)","<p>Returns <code>false</code>:\n\n<pre><code>false &amp; true       # =&gt; false\nfalse &amp; Object.new # =&gt; false\n</code></pre>\n<p>Argument <code>object</code> is evaluated: …\n",null,1],["&","Process::Status","ruby/classes/Process/Status.html#method-i-26","(p1)","<p>This method is deprecated as #to_i value is system-specific; use predicate methods like #exited? or  …\n",null,1],["&","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-26","(i)","",null,1],["&","Set","ruby/classes/Set.html#method-i-26","(enum)","<p>Returns a new set containing elements common to the set and the\ngiven enumerable object.\n\n<pre><code>Set[1, 3, 5] ...\n</code></pre>\n",null,1],["&","TrueClass","ruby/classes/TrueClass.html#method-i-26","(p1)","<p>Returns <code>false</code> if <code>object</code> is <code>false</code> or <code>nil</code>, <code>true</code> otherwise:\n<p>true &amp; Object.new # =&gt; true true &amp; …\n",null,1],["*","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-2A","(other)","<p>Multiplies this Duration by a Numeric and returns a new Duration.\n",null,0],["*","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-2A","(*)","",null,0],["*","Array","ruby/classes/Array.html#method-i-2A","(p1)","<p>When non-negative argument Integer <code>n</code> is given, returns a new Array built by concatenating the <code>n</code> copies …\n",null,1],["*","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-2A","(x)","<p>Returns a new Tms object obtained by memberwise multiplication of the individual times for this Tms object …\n",null,1],["*","BigDecimal","ruby/classes/BigDecimal.html#method-i-2A","(p1)","",null,1],["*","Complex","ruby/classes/Complex.html#method-i-2A","(p1)","<p>Returns the product of <code>self</code> and <code>numeric</code>:\n\n<pre><code>Complex(2, 3)  * Complex(2, 3)  # =&gt; (-5+12i)\nComplex(900)   ...\n</code></pre>\n",null,1],["*","Float","ruby/classes/Float.html#method-i-2A","(p1)","<p>Returns a new Float which is the product of <code>self</code> and <code>other</code>:\n\n<pre><code>f = 3.14\nf * 2              # =&gt; 6.28\nf * ...\n</code></pre>\n",null,1],["*","Integer","ruby/classes/Integer.html#method-i-2A","(p1)","<p>Performs multiplication:\n\n<pre><code>4 * 2              # =&gt; 8\n4 * -2             # =&gt; -8\n-4 * 2             # =&gt; ...\n</code></pre>\n",null,1],["*","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-2A","(p1)","",null,1],["*","Rational","ruby/classes/Rational.html#method-i-2A","(p1)","<p>Performs multiplication.\n\n<pre><code>Rational(2, 3)  * Rational(2, 3)   #=&gt; (4/9)\nRational(900)   * Rational(1)   ...\n</code></pre>\n",null,1],["*","String","ruby/classes/String.html#method-i-2A","(p1)","<p>Returns a new String containing <code>integer</code> copies of <code>self</code>:\n\n<pre><code>&quot;Ho! &quot; * 3 # =&gt; &quot;Ho! Ho! Ho! &quot;\n&quot;Ho! &quot; * 0 # =&gt; ...\n</code></pre>\n",null,1],["**","BigDecimal","ruby/classes/BigDecimal.html#method-i-2A-2A","(p1)","<p>Returns the BigDecimal value of <code>self</code> raised to power <code>other</code>:\n\n<pre><code>b = BigDecimal(&#39;3.14&#39;)\nb ** 2             ...\n</code></pre>\n",null,1],["**","Complex","ruby/classes/Complex.html#method-i-2A-2A","(p1)","<p>Returns <code>self</code> raised to power <code>numeric</code>:\n\n<pre><code>Complex(&#39;i&#39;) ** 2             # =&gt; (-1+0i)\nComplex(-8) ** Rational(1, ...\n</code></pre>\n",null,1],["**","Float","ruby/classes/Float.html#method-i-2A-2A","(p1)","<p>Raises <code>self</code> to the power of <code>other</code>:\n\n<pre><code>f = 3.14\nf ** 2              # =&gt; 9.8596\nf ** -2             # =&gt; 0.1014239928597509 ...\n</code></pre>\n",null,1],["**","Integer","ruby/classes/Integer.html#method-i-2A-2A","(p1)","<p>Raises <code>self</code> to the power of <code>numeric</code>:\n\n<pre><code>2 ** 3              # =&gt; 8\n2 ** -3             # =&gt; (1/8)\n-2 ** 3 ...\n</code></pre>\n",null,1],["**","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-2A-2A","(p1)","",null,1],["**","Rational","ruby/classes/Rational.html#method-i-2A-2A","(p1)","<p>Performs exponentiation.\n\n<pre><code>Rational(2)    ** Rational(3)     #=&gt; (8/1)\nRational(10)   ** -2             ...\n</code></pre>\n",null,1],["+","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-2B","(other)","<p>Adds another Duration or a Numeric to this Duration. Numeric values are treated as seconds.\n",null,0],["+","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-2B","(other)","",null,0],["+","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-2B","(other)","<p>Adds an interval of time to the current object’s time and returns that value as a new TimeWithZone …\n",null,0],["+","Rails::Initializable::Collection","rails/classes/Rails/Initializable/Collection.html#method-i-2B","(other)","",null,0],["+","Array","ruby/classes/Array.html#method-i-2B","(p1)","<p>Returns a new Array containing all elements of <code>array</code> followed by all elements of <code>other_array</code>:\n\n<pre><code>a = [0, ...\n</code></pre>\n",null,1],["+","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-2B","(other)","<p>Returns a new Tms object obtained by memberwise summation of the individual times for this Tms object …\n",null,1],["+","BigDecimal","ruby/classes/BigDecimal.html#method-i-2B","(p1)","<p>Returns the BigDecimal sum of <code>self</code> and <code>value</code>:\n\n<pre><code>b = BigDecimal(&#39;111111.111&#39;) # =&gt; 0.111111111e6\nb + 2   ...\n</code></pre>\n",null,1],["+","Complex","ruby/classes/Complex.html#method-i-2B","(p1)","<p>Returns the sum of <code>self</code> and <code>numeric</code>:\n\n<pre><code>Complex(2, 3)  + Complex(2, 3)  # =&gt; (4+6i)\nComplex(900)   + Complex(1) ...\n</code></pre>\n",null,1],["+","Date","ruby/classes/Date.html#method-i-2B","(p1)","<p>Returns a date object pointing <code>other</code> days after self.  The other should be a numeric value.  If the other …\n",null,1],["+","Enumerator","ruby/classes/Enumerator.html#method-i-2B","(p1)","<p>Returns an enumerator object generated from this enumerator and a given enumerable.\n\n<pre><code>e = (1..3).each + ...\n</code></pre>\n",null,1],["+","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-2B","(p1)","<p>Returns a new pointer instance that has been advanced <code>n</code> bytes.\n",null,1],["+","Float","ruby/classes/Float.html#method-i-2B","(p1)","<p>Returns a new Float which is the sum of <code>self</code> and <code>other</code>:\n\n<pre><code>f = 3.14\nf + 1                 # =&gt; 4.140000000000001 ...\n</code></pre>\n",null,1],["+","Integer","ruby/classes/Integer.html#method-i-2B","(p1)","<p>Performs addition:\n\n<pre><code>2 + 2              # =&gt; 4\n-2 + 2             # =&gt; 0\n-2 + -2            # =&gt; -4\n2 + ...\n</code></pre>\n",null,1],["+","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-2B","(p1)","",null,1],["+","Pathname","ruby/classes/Pathname.html#method-i-2B","(other)","<p>Appends a pathname fragment to <code>self</code> to produce a new Pathname object. Since <code>other</code> is considered as a …\n",null,1],["+","Rational","ruby/classes/Rational.html#method-i-2B","(p1)","<p>Performs addition.\n\n<pre><code>Rational(2, 3)  + Rational(2, 3)   #=&gt; (4/3)\nRational(900)   + Rational(1)      #=&gt; ...\n</code></pre>\n",null,1],["+","Set","ruby/classes/Set.html#method-i-2B","(enum)","",null,1],["+","String","ruby/classes/String.html#method-i-2B","(p1)","<p>Returns a new String containing <code>other_string</code> concatenated to <code>self</code>:\n\n<pre><code>&quot;Hello from &quot; + self.to_s # =&gt; &quot;Hello ...\n</code></pre>\n",null,1],["+","Time","ruby/classes/Time.html#method-i-2B","(p1)","<p>Returns a new <code>Time</code> object whose value is the sum of the numeric value of <code>self</code> and the given <code>numeric</code>: …\n",null,1],["+","URI::Generic","ruby/classes/URI/Generic.html#method-i-2B","(oth)","",null,1],["+@","BigDecimal","ruby/classes/BigDecimal.html#method-i-2B-40","()","<p>Returns <code>self</code>:\n\n<pre><code>+BigDecimal(5)  # =&gt; 0.5e1\n+BigDecimal(-5) # =&gt; -0.5e1\n</code></pre>\n",null,1],["+@","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-2B-40","()","<p>Returns a new Fiddle::Pointer instance that is a dereferenced pointer for this pointer.\n<p>Analogous to the …\n",null,1],["+@","Numeric","ruby/classes/Numeric.html#method-i-2B-40","()","<p>Returns <code>self</code>.\n",null,1],["+@","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-2B-40","()","",null,1],["+@","String","ruby/classes/String.html#method-i-2B-40","()","<p>Returns <code>self</code> if <code>self</code> is not frozen.\n<p>Otherwise returns <code>self.dup</code>, which is not frozen.\n",null,1],["-","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-2D","(other)","<p>Subtracts another Duration or a Numeric from this Duration. Numeric values are treated as seconds.\n",null,0],["-","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-2D","(other)","<p>Subtracts an interval of time and returns a new TimeWithZone object unless the other value <code>acts_like?</code> …\n",null,0],["-","Rails::Engine::Railties","rails/classes/Rails/Engine/Railties.html#method-i-2D","(others)","",null,0],["-","Time","rails/classes/Time.html#method-i-2D","(other)","",null,0],["-","Array","ruby/classes/Array.html#method-i-2D","(p1)","<p>Returns a new Array containing only those elements from <code>array</code> that are not found in Array <code>other_array</code> …\n",null,1],["-","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-2D","(other)","<p>Returns a new Tms object obtained by memberwise subtraction of the individual times for the <code>other</code> Tms …\n",null,1],["-","BigDecimal","ruby/classes/BigDecimal.html#method-i-2D","(p1)","<p>Returns the BigDecimal difference of <code>self</code> and <code>value</code>:\n\n<pre><code>b = BigDecimal(&#39;333333.333&#39;) # =&gt; 0.333333333e6\nb ...\n</code></pre>\n",null,1],["-","Complex","ruby/classes/Complex.html#method-i-2D","(p1)","<p>Returns the difference of <code>self</code> and <code>numeric</code>:\n\n<pre><code>Complex(2, 3)  - Complex(2, 3)  # =&gt; (0+0i)\nComplex(900)  ...\n</code></pre>\n",null,1],["-","Date","ruby/classes/Date.html#method-i-2D","(p1)","<p>Returns the difference between the two dates if the other is a date object.  If the other is a numeric …\n",null,1],["-","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-2D","(p1)","<p>Returns a new pointer instance that has been moved back <code>n</code> bytes.\n",null,1],["-","Float","ruby/classes/Float.html#method-i-2D","(p1)","<p>Returns a new Float which is the difference of <code>self</code> and <code>other</code>:\n\n<pre><code>f = 3.14\nf - 1                 # =&gt; 2.14 ...\n</code></pre>\n",null,1],["-","Integer","ruby/classes/Integer.html#method-i-2D","(p1)","<p>Performs subtraction:\n\n<pre><code>4 - 2              # =&gt; 2\n-4 - 2             # =&gt; -6\n-4 - -2            # =&gt; -2 ...\n</code></pre>\n",null,1],["-","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-2D","(p1)","",null,1],["-","Rational","ruby/classes/Rational.html#method-i-2D","(p1)","<p>Performs subtraction.\n\n<pre><code>Rational(2, 3)  - Rational(2, 3)   #=&gt; (0/1)\nRational(900)   - Rational(1)      ...\n</code></pre>\n",null,1],["-","Set","ruby/classes/Set.html#method-i-2D","(enum)","<p>Returns a new set built by duplicating the set, removing every\nelement that appears in the given enumerable ...\n",null,1],["-","Time","ruby/classes/Time.html#method-i-2D","(p1)","<p>When <code>numeric</code> is given, returns a new <code>Time</code> object whose value is the difference of the numeric value of …\n",null,1],["-","URI::Generic","ruby/classes/URI/Generic.html#method-i-2D","(oth)","",null,1],["-@","ActiveRecord::ConnectionAdapters::Deduplicable","rails/classes/ActiveRecord/ConnectionAdapters/Deduplicable.html#method-i-2D-40","()","",null,0],["-@","BigDecimal","ruby/classes/BigDecimal.html#method-i-2D-40","()","<p>Returns the BigDecimal negation of self:\n\n<pre><code>b0 = BigDecimal(&#39;1.5&#39;)\nb1 = -b0 # =&gt; -0.15e1\nb2 = -b1 # =&gt; 0.15e1\n</code></pre>\n",null,1],["-@","Complex","ruby/classes/Complex.html#method-i-2D-40","()","<p>Returns the negation of <code>self</code>, which is the negation of each of its parts:\n\n<pre><code>-Complex(1, 2)   # =&gt; (-1-2i) ...\n</code></pre>\n",null,1],["-@","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-2D-40","()","<p>Returns a new Fiddle::Pointer instance that is a reference pointer for this pointer.\n<p>Analogous to the …\n",null,1],["-@","Float","ruby/classes/Float.html#method-i-2D-40","()","<p>Returns <code>self</code>, negated.\n",null,1],["-@","Integer","ruby/classes/Integer.html#method-i-2D-40","()","<p>Returns <code>self</code>, negated.\n",null,1],["-@","Numeric","ruby/classes/Numeric.html#method-i-2D-40","()","<p>Unary Minus—Returns the receiver, negated.\n",null,1],["-@","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-2D-40","()","",null,1],["-@","Rational","ruby/classes/Rational.html#method-i-2D-40","()","<p>Negates <code>rat</code>.\n",null,1],["-@","String","ruby/classes/String.html#method-i-2D-40","()","<p>Returns a frozen, possibly pre-existing copy of the string.\n<p>The returned String will be deduplicated as …\n",null,1],["/","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-2F","(other)","<p>Divides this Duration by a Numeric and returns a new Duration.\n",null,0],["/","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-2F","(x)","<p>Returns a new Tms object obtained by memberwise division of the individual times for this Tms object …\n",null,1],["/","BigDecimal","ruby/classes/BigDecimal.html#method-i-2F","(p1)","<p>Divide by the specified value.\n<p>The result precision will be the precision of the larger operand, but its …\n",null,1],["/","Complex","ruby/classes/Complex.html#method-i-2F","(p1)","<p>Returns the quotient of <code>self</code> and <code>numeric</code>:\n\n<pre><code>Complex(2, 3)  / Complex(2, 3)  # =&gt; ((1/1)+(0/1)*i)\nComplex(900) ...\n</code></pre>\n",null,1],["/","Float","ruby/classes/Float.html#method-i-2F","(p1)","<p>Returns a new Float which is the result of dividing <code>self</code> by <code>other</code>:\n\n<pre><code>f = 3.14\nf / 2              # =&gt; 1.57 ...\n</code></pre>\n",null,1],["/","Integer","ruby/classes/Integer.html#method-i-2F","(p1)","<p>Performs division; for integer <code>numeric</code>, truncates the result to an integer:\n\n<pre><code> 4 / 3              # =&gt; 1 ...\n</code></pre>\n",null,1],["/","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-2F","(p1)","<p>Division of OpenSSL::BN instances\n",null,1],["/","Pathname","ruby/classes/Pathname.html#method-i-2F","(other)","",null,1],["/","Rational","ruby/classes/Rational.html#method-i-2F","(p1)","<p>Performs division.\n\n<pre><code>Rational(2, 3)  / Rational(2, 3)   #=&gt; (1/1)\nRational(900)   / Rational(1)      #=&gt; ...\n</code></pre>\n",null,1],["404.html","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...\n</code></pre>\n",null,0],["422.html","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...\n</code></pre>\n",null,0],["500.html","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...\n</code></pre>\n",null,0],["<","BigDecimal","ruby/classes/BigDecimal.html#method-i-3C","(p1)","<p>Returns <code>true</code> if <code>self</code> is less than <code>other</code>, <code>false</code> otherwise:\n\n<pre><code>b = BigDecimal(&#39;1.5&#39;) # =&gt; 0.15e1\nb &lt; 2     ...\n</code></pre>\n",null,1],["<","Comparable","ruby/classes/Comparable.html#method-i-3C","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method, returning true if it returns a value …\n",null,1],["<","Float","ruby/classes/Float.html#method-i-3C","(p1)","<p>Returns <code>true</code> if <code>self</code> is numerically less than <code>other</code>:\n\n<pre><code>2.0 &lt; 3              # =&gt; true\n2.0 &lt; 3.0         ...\n</code></pre>\n",null,1],["<","Hash","ruby/classes/Hash.html#method-i-3C","(p1)","<p>Returns <code>true</code> if <code>hash</code> is a proper subset of <code>other_hash</code>, <code>false</code> otherwise:\n\n<pre><code>h1 = {foo: 0, bar: 1}\nh2 = {foo: ...\n</code></pre>\n",null,1],["<","Integer","ruby/classes/Integer.html#method-i-3C","(p1)","<p>Returns <code>true</code> if the value of <code>self</code> is less than that of <code>other</code>:\n\n<pre><code>  1 &lt; 0              # =&gt; false\n  1 &lt; 1 ...\n</code></pre>\n",null,1],["<","Module","ruby/classes/Module.html#method-i-3C","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em>. Returns <code>false</code> if <em>mod</em> is the same as <em>other</em> or <em>mod</em> is an ancestor …\n",null,1],["<","Set","ruby/classes/Set.html#method-i-3C","(set)","",null,1],["<<","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-3C-3C","(*records)","<p>Adds one or more <code>records</code> to the collection by setting their foreign keys to the association’s primary …\n",null,0],["<<","ActiveRecord::StatementCache::PartialQueryCollector","rails/classes/ActiveRecord/StatementCache/PartialQueryCollector.html#method-i-3C-3C","(str)","",null,0],["<<","ActiveSupport::Inflector::Inflections::Uncountables","rails/classes/ActiveSupport/Inflector/Inflections/Uncountables.html#method-i-3C-3C","(*word)","",null,0],["<<","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-3C-3C","(event)","",null,0],["<<","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-3C-3C","(value)","",null,0],["<<","Mime::Mimes","rails/classes/Mime/Mimes.html#method-i-3C-3C","(type)","",null,0],["<<","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-3C-3C","(path)","",null,0],["<<","Array","ruby/classes/Array.html#method-i-3C-3C","(p1)","<p>Appends <code>object</code> to <code>self</code>; returns <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na &lt;&lt; :baz # =&gt; [:foo, &quot;bar&quot;, 2, :baz]\n</code></pre>\n<p>Appends …\n",null,1],["<<","CSV","ruby/classes/CSV.html#method-i-3C-3C","(row)","<p>Appends a row to <code>self</code>.\n<p>Argument <code>row</code> must be an Array object or a CSV::Row object.\n<p>The output stream must …\n",null,1],["<<","CSV::Row","ruby/classes/CSV/Row.html#method-i-3C-3C","(arg)","<p>Adds a field to <code>self</code>; returns <code>self</code>:\n<p>If the argument is a 2-element Array <code>[header, value]</code>, a field is added …\n",null,1],["<<","CSV::Table","ruby/classes/CSV/Table.html#method-i-3C-3C","(row_or_array)","<p>If <code>row_or_array</code> is a CSV::Row object, it is appended to the table:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["<<","CSV::Writer","ruby/classes/CSV/Writer.html#method-i-3C-3C","(row)","<p>Adds a new row\n",null,1],["<<","Date","ruby/classes/Date.html#method-i-3C-3C","(p1)","<p>Returns a new Date object representing the date <code>n</code> months earlier; <code>n</code> should be a numeric:\n\n<pre><code>(Date.new(2001, ...\n</code></pre>\n",null,1],["<<","Digest::Base","ruby/classes/Digest/Base.html#method-i-3C-3C","(p1)","<p>Update the digest using given <em>string</em> and return <code>self</code>.\n",null,1],["<<","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-3C-3C","(p1)","<p>Updates the digest using a given <em>string</em> and returns self.\n<p>The update() method and the left-shift operator …\n",null,1],["<<","Digest::SHA2","ruby/classes/Digest/SHA2.html#method-i-3C-3C","(str)","",null,1],["<<","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-3C-3C","(o)","",null,1],["<<","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-3C-3C","(obj)","<p>Appends <code>obj</code> to the source list which may be a Gem::Source, Gem::URI or URI String.\n",null,1],["<<","IO","ruby/classes/IO.html#method-i-3C-3C","(p1)","<p>Writes the given <code>object</code> to <code>self</code>, which must be opened for writing (see Access Modes); returns <code>self</code>; if …\n",null,1],["<<","IO::generic_writable","ruby/classes/IO/generic_writable.html#method-i-3C-3C","(p1)","<p>See IO#<<.\n",null,1],["<<","IPAddr","ruby/classes/IPAddr.html#method-i-3C-3C","(num)","<p>Returns a new ipaddr built by bitwise left shift.\n",null,1],["<<","Integer","ruby/classes/Integer.html#method-i-3C-3C","(p1)","<p>Returns <code>self</code> with bits shifted <code>count</code> positions to the left, or to the right if <code>count</code> is negative:\n\n<pre><code>n = ...\n</code></pre>\n",null,1],["<<","Logger","ruby/classes/Logger.html#method-i-3C-3C","(msg)","<p>Writes the given <code>msg</code> to the log with no formatting; returns the number of characters written, or <code>nil</code> …\n",null,1],["<<","Method","ruby/classes/Method.html#method-i-3C-3C","(p1)","<p>Returns a proc that is the composition of this method and the given <em>g</em>. The returned proc takes a variable …\n",null,1],["<<","Net::WriteAdapter","ruby/classes/Net/WriteAdapter.html#method-i-3C-3C","(str)","",null,1],["<<","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-3C-3C","(p1)","",null,1],["<<","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-3C-3C","(s)","<p>Writes <em>s</em> to the stream.  <em>s</em> will be converted to a String using <code>.to_s</code> method.\n",null,1],["<<","OpenSSL::Buffering::Buffer","ruby/classes/OpenSSL/Buffering/Buffer.html#method-i-3C-3C","(string)","",null,1],["<<","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-i-3C-3C","(p1)","<p>Not every message digest can be computed in one single pass. If a message digest is to be computed from …\n",null,1],["<<","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-3C-3C","(p1)","<p>Returns <em>hmac</em> updated with the message to be authenticated. Can be called repeatedly with chunks of the …\n",null,1],["<<","Proc","ruby/classes/Proc.html#method-i-3C-3C","(p1)","<p>Returns a proc that is the composition of this proc and the given <em>g</em>. The returned proc takes a variable …\n",null,1],["<<","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-3C-3C","(object)","",null,1],["<<","Ractor","ruby/classes/Ractor.html#method-i-3C-3C","(obj, move: false)","",null,1],["<<","Reline::History","ruby/classes/Reline/History.html#method-i-3C-3C","(val)","",null,1],["<<","Reline::KillRing::RingBuffer","ruby/classes/Reline/KillRing/RingBuffer.html#method-i-3C-3C","(point)","",null,1],["<<","Set","ruby/classes/Set.html#method-i-3C-3C","(o)","",null,1],["<<","String","ruby/classes/String.html#method-i-3C-3C","(p1)","<p>Concatenates <code>object</code> to <code>self</code> and returns <code>self</code>:\n\n<pre><code>s = &#39;foo&#39;\ns &lt;&lt; &#39;bar&#39; # =&gt; &quot;foobar&quot;\ns          # =&gt; &quot;foobar&quot;\n</code></pre>\n",null,1],["<<","StringScanner","ruby/classes/StringScanner.html#method-i-3C-3C","(p1)","<p>Appends <code>str</code> to the string being scanned. This method does not affect scan pointer.\n\n<pre><code>s = StringScanner.new(&quot;Fri ...\n</code></pre>\n",null,1],["<<","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-3C-3C","(block)","<p>Add a block to the frontier\n<p>This method ensures the frontier always remains sorted (in indentation order) …\n",null,1],["<<","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-3C-3C","(element)","",null,1],["<<","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-3C-3C","(p1)","<p>Pushes the given <code>object</code> to the queue.\n",null,1],["<<","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-3C-3C","(object, non_block = false, timeout: nil)","",null,1],["<<","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-i-3C-3C","(p1)","<p>Inputs <code>string</code> into the deflate stream just like Zlib::Deflate#deflate, but returns the Zlib::Deflate …\n",null,1],["<<","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-3C-3C","(p1)","<p>Same as IO.\n",null,1],["<<","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-i-3C-3C","(p1)","<p>Same as IO.\n",null,1],["<=","BigDecimal","ruby/classes/BigDecimal.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> is less or equal to than <code>other</code>, <code>false</code> otherwise:\n\n<pre><code>b = BigDecimal(&#39;1.5&#39;) # =&gt; 0.15e1 ...\n</code></pre>\n",null,1],["<=","Comparable","ruby/classes/Comparable.html#method-i-3C-3D","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method, returning true if it returns a value …\n",null,1],["<=","Float","ruby/classes/Float.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> is numerically less than or equal to <code>other</code>:\n\n<pre><code>2.0 &lt;= 3              # =&gt; true\n2.0 &lt;= ...\n</code></pre>\n",null,1],["<=","Hash","ruby/classes/Hash.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if <code>hash</code> is a subset of <code>other_hash</code>, <code>false</code> otherwise:\n\n<pre><code>h1 = {foo: 0, bar: 1}\nh2 = {foo: 0, bar: ...\n</code></pre>\n",null,1],["<=","Integer","ruby/classes/Integer.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if the value of <code>self</code> is less than or equal to that of <code>other</code>:\n\n<pre><code>1 &lt;= 0              # =&gt; false ...\n</code></pre>\n",null,1],["<=","Module","ruby/classes/Module.html#method-i-3C-3D","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em> or is the same as <em>other</em>. Returns <code>nil</code> if there’s no relationship …\n",null,1],["<=","Set","ruby/classes/Set.html#method-i-3C-3D","(set)","",null,1],["<=>","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-3C-3D-3E","","<p>Equivalent to <code>String#&lt;=&gt;</code>.\n\n<pre><code>class BlogPost\n  extend ActiveModel::Naming\nend\n\nBlogPost.model_name &lt;=&gt; ...\n</code></pre>\n",null,0],["<=>","ActiveRecord::ConnectionAdapters::AbstractAdapter::Version","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter/Version.html#method-i-3C-3D-3E","(version_string)","",null,0],["<=>","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-3C-3D-3E","(other_object)","<p>Allows sort on objects\n",null,0],["<=>","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-3C-3D-3E","(other)","<p>Compares one Duration with another or a Numeric to this Duration. Numeric values are treated as seconds. …\n",null,0],["<=>","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-3C-3D-3E","(other)","<p>Use the time in UTC for comparisons.\n",null,0],["<=>","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-3C-3D-3E","(zone)","<p>Compare this time zone to the parameter. The two are compared first on their offsets, and then by name. …\n",null,0],["<=>","Date","rails/classes/Date.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","DateTime","rails/classes/DateTime.html#method-i-3C-3D-3E","(other)","<p>Layers additional behavior on DateTime#&lt;=&gt; so that Time and ActiveSupport::TimeWithZone instances …\n",null,0],["<=>","Time","rails/classes/Time.html#method-i-3C-3D-3E","(other)","",null,0],["<=>","Array","ruby/classes/Array.html#method-i-3C-3D-3E","(p1)","<p>Returns -1, 0, or 1 as <code>self</code> is less than, equal to, or greater than <code>other_array</code>. For each index <code>i</code> in …\n",null,1],["<=>","BigDecimal","ruby/classes/BigDecimal.html#method-i-3C-3D-3E","(p1)","<p>The comparison operator. a &lt;=&gt; b is 0 if a == b, 1 if a &gt; b, -1 if a &lt; b.\n",null,1],["<=>","Complex","ruby/classes/Complex.html#method-i-3C-3D-3E","(p1)","<p>Returns:\n<p><code>self.real &lt;=&gt; object.real</code> if both of the following are true:\n<p><code>self.imag == 0</code>.\n",null,1],["<=>","Date","ruby/classes/Date.html#method-i-3C-3D-3E","(p1)","<p>Compares <code>self</code> and <code>other</code>, returning:\n<p><code>-1</code> if <code>other</code> is larger.\n<p><code>0</code> if the two are equal.\n",null,1],["<=>","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-3C-3D-3E","(p1)","<p>Returns -1 if less than, 0 if equal to, 1 if greater than <code>other</code>.\n<p>Returns nil if <code>ptr</code> cannot be compared …\n",null,1],["<=>","File::Stat","ruby/classes/File/Stat.html#method-i-3C-3D-3E","(p1)","<p>Compares File::Stat objects by comparing their respective modification times.\n<p><code>nil</code> is returned if <code>other_stat</code> …\n",null,1],["<=>","Float","ruby/classes/Float.html#method-i-3C-3D-3E","(p1)","<p>Returns a value that depends on the numeric relation between <code>self</code> and <code>other</code>:\n<p>-1, if <code>self</code> is less than …\n",null,1],["<=>","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-3C-3D-3E","(other)","<p>Dependencies are ordered by name.\n",null,1],["<=>","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-3C-3D-3E","(other)","",null,1],["<=>","Gem::Source","ruby/classes/Gem/Source.html#method-i-3C-3D-3E","(other)","<p>Sources are ordered by installation preference.\n",null,1],["<=>","Gem::Source::Git","ruby/classes/Gem/Source/Git.html#method-i-3C-3D-3E","(other)","",null,1],["<=>","Gem::Source::Installed","ruby/classes/Gem/Source/Installed.html#method-i-3C-3D-3E","(other)","<p>Installed sources sort before all other sources\n",null,1],["<=>","Gem::Source::Local","ruby/classes/Gem/Source/Local.html#method-i-3C-3D-3E","(other)","<p>Local sorts before Gem::Source and after Gem::Source::Installed\n",null,1],["<=>","Gem::Source::SpecificFile","ruby/classes/Gem/Source/SpecificFile.html#method-i-3C-3D-3E","(other)","<p>Orders this source against <code>other</code>.\n<p>If <code>other</code> is a SpecificFile from a different gem name <code>nil</code> is returned. …\n",null,1],["<=>","Gem::Source::Vendor","ruby/classes/Gem/Source/Vendor.html#method-i-3C-3D-3E","(other)","",null,1],["<=>","Gem::Version","ruby/classes/Gem/Version.html#method-i-3C-3D-3E","(other)","<p>Compares this version with <code>other</code> returning -1, 0, or 1 if the other version is larger, the same, or smaller …\n",null,1],["<=>","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-3C-3D-3E","(p1)","<p>Buffers are compared by size and exact contents of the memory they are referencing using <code>memcmp</code>.\n",null,1],["<=>","IPAddr","ruby/classes/IPAddr.html#method-i-3C-3D-3E","(other)","<p>Compares the ipaddr with another.\n",null,1],["<=>","IRB::Notifier::LeveledNotifier","ruby/classes/IRB/Notifier/LeveledNotifier.html#method-i-3C-3D-3E","(other)","<p>Compares the level of this notifier object with the given <code>other</code> notifier.\n<p>See the Comparable module for …\n",null,1],["<=>","Integer","ruby/classes/Integer.html#method-i-3C-3D-3E","(p1)","<p>Returns:\n<p>-1, if <code>self</code> is less than <code>other</code>.\n<p>0, if <code>self</code> is equal to <code>other</code>.\n",null,1],["<=>","Module","ruby/classes/Module.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, +1 or nil depending on whether <code>module</code> includes <code>other_module</code>, they are the …\n",null,1],["<=>","Numeric","ruby/classes/Numeric.html#method-i-3C-3D-3E","(p1)","<p>Returns zero if <code>self</code> is the same as <code>other</code>, <code>nil</code> otherwise.\n<p>No subclass in the Ruby Core or Standard Library …\n",null,1],["<=>","Object","ruby/classes/Object.html#method-i-3C-3D-3E","(p1)","<p>Returns 0 if <code>obj</code> and <code>other</code> are the same object or <code>obj == other</code>, otherwise nil.\n<p>The #&lt;=&gt; is used …\n",null,1],["<=>","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-3C-3D-3E","(p1)","",null,1],["<=>","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-3C-3D-3E","(p1)","<p>Compares this Name with <em>other</em> and returns <code>0</code> if they are the same and <code>-1</code> or <code>+1</code> if they are greater or …\n",null,1],["<=>","Pathname","ruby/classes/Pathname.html#method-i-3C-3D-3E","(p1)","<p>Provides a case-sensitive comparison operator for pathnames.\n\n<pre><code>Pathname.new(&#39;/usr&#39;) &lt;=&gt; Pathname.new(&#39;/usr/bin&#39;) ...\n</code></pre>\n",null,1],["<=>","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-3C-3D-3E","(other)","<p>Order by #singleton then #new_name\n",null,1],["<=>","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-3C-3D-3E","(other)","<p>Constants are ordered by name\n",null,1],["<=>","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-3C-3D-3E","(other)","<p>Contexts are sorted by full_name\n",null,1],["<=>","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-3C-3D-3E","(other)","<p>Order by #singleton then #name\n",null,1],["<=>","RDoc::Mixin","ruby/classes/RDoc/Mixin.html#method-i-3C-3D-3E","(other)","<p>Mixins are sorted by name\n",null,1],["<=>","Rational","ruby/classes/Rational.html#method-i-3C-3D-3E","(p1)","<p>Returns -1, 0, or +1 depending on whether <code>rational</code> is less than, equal to, or greater than <code>numeric</code>.\n<p><code>nil</code> …\n",null,1],["<=>","Set","ruby/classes/Set.html#method-i-3C-3D-3E","(set)","<p>Returns 0 if the set are equal,\n-1 / +1 if the set is a proper subset / superset of the given set,\nor ...\n",null,1],["<=>","String","ruby/classes/String.html#method-i-3C-3D-3E","(p1)","<p>Compares <code>self</code> and <code>other_string</code>, returning:\n<p>-1 if <code>other_string</code> is larger.\n<p>0 if the two are equal.\n",null,1],["<=>","Symbol","ruby/classes/Symbol.html#method-i-3C-3D-3E","(p1)","<p>If <code>object</code> is a symbol, returns the equivalent of <code>symbol.to_s &lt;=&gt; object.to_s</code>:\n\n<pre><code>:bar &lt;=&gt; :foo # =&gt; ...\n</code></pre>\n",null,1],["<=>","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-3C-3D-3E","(other)","<p>This is used for frontier ordering, we are searching from the largest indentation to the smallest. This …\n",null,1],["<=>","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-3C-3D-3E","(other)","<p>Comparison operator, needed for equality and sorting\n",null,1],["<=>","Time","ruby/classes/Time.html#method-i-3C-3D-3E","(p1)","<p>Compares <code>self</code> with <code>other_time</code>; returns:\n<p><code>-1</code>, if <code>self</code> is less than <code>other_time</code>.\n<p><code>0</code>, if <code>self</code> is equal to <code>other_time</code> …\n",null,1],["==","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-3D-3D","(other)","<p>Returns true if another <code>Parameters</code> object contains the same content and permitted flag.\n",null,0],["==","ActionDispatch::MiddlewareStack::Middleware","rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-3D-3D","(middleware)","",null,0],["==","ActionText::Content","rails/classes/ActionText/Content.html#method-i-3D-3D","(other)","",null,0],["==","ActionView::FileSystemResolver","rails/classes/ActionView/FileSystemResolver.html#method-i-3D-3D","(resolver)","",null,0],["==","ActionView::Template::Types::Type","rails/classes/ActionView/Template/Types/Type.html#method-i-3D-3D","(type)","",null,0],["==","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-3D-3D","","<p>Equivalent to <code>String#==</code>. Returns <code>true</code> if the class name and <code>other</code> are equal, otherwise <code>false</code>.\n\n<pre><code>class BlogPost ...\n</code></pre>\n",null,0],["==","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-3D-3D","(other)","",null,0],["==","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-3D-3D","(other)","",null,0],["==","ActiveModel::Validations::AcceptanceValidator::LazilyDefineAttributes","rails/classes/ActiveModel/Validations/AcceptanceValidator/LazilyDefineAttributes.html#method-i-3D-3D","(other)","",null,0],["==","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-3D-3D","(other)","<p>Equivalent to <code>Array#==</code>. Returns <code>true</code> if the two arrays contain the same number of elements and if each …\n",null,0],["==","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-3D-3D","(comparison_object)","<p>Returns true if <code>comparison_object</code> is the same exact object, or <code>comparison_object</code> is of the same type …\n",null,0],["==","ActiveRecord::Encryption::Message","rails/classes/ActiveRecord/Encryption/Message.html#method-i-3D-3D","(other_message)","",null,0],["==","ActiveRecord::Reflection::MacroReflection","rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-3D-3D","(other_aggregation)","<p>Returns <code>true</code> if <code>self</code> and <code>other_aggregation</code> have the same <code>name</code> attribute, <code>active_record</code> attribute, and …\n",null,0],["==","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-3D-3D","(other)","<p>Compares two relations for equality.\n",null,0],["==","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if <code>other</code> is also a Duration instance with the same <code>value</code>, or if <code>other == value</code>.\n",null,0],["==","Mail::Address","rails/classes/Mail/Address.html#method-i-3D-3D","(other_address)","",null,0],["==","Mime::Type","rails/classes/Mime/Type.html#method-i-3D-3D","(mime_type)","",null,0],["==","Array","ruby/classes/Array.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if both <code>array.size == other_array.size</code> and for each index <code>i</code> in <code>array</code>, <code>array[i] == other_array[i]</code> …\n",null,1],["==","BasicObject","ruby/classes/BasicObject.html#method-i-3D-3D","(p1)","<p>Equality — At the Object level, #== returns <code>true</code> only if <code>obj</code> and <code>other</code> are the same object.  Typically …\n",null,1],["==","BigDecimal","ruby/classes/BigDecimal.html#method-i-3D-3D","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,1],["==","CSV::Row","ruby/classes/CSV/Row.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if <code>other</code> is a /CSV::Row that has the same fields (headers and values) in the same order …\n",null,1],["==","CSV::Table","ruby/classes/CSV/Table.html#method-i-3D-3D","(other)","<p>Returns <code>true</code> if all each row of <code>self</code> <code>==</code> the corresponding row of <code>other_table</code>, otherwise, <code>false</code>.\n<p>The access …\n",null,1],["==","Comparable","ruby/classes/Comparable.html#method-i-3D-3D","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method, returning true if it returns 0. Also …\n",null,1],["==","Complex","ruby/classes/Complex.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>self.real == object.real</code> and <code>self.imag == object.imag</code>:\n\n<pre><code>Complex(2, 3)  == Complex(2.0, ...\n</code></pre>\n",null,1],["==","Data","ruby/classes/Data.html#method-i-3D-3D","(p1)","<p>Returns  <code>true</code> if <code>other</code> is the same class as <code>self</code>, and all members are equal.\n<p>Examples:\n\n<pre><code>Measure = Data.define(:amount, ...\n</code></pre>\n",null,1],["==","Delegator","ruby/classes/Delegator.html#method-i-3D-3D","(obj)","<p>Returns true if two objects are considered of equal value.\n",null,1],["==","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-3D-3D","(p1)","<p>If a string is given, checks whether it is equal to the hex-encoded hash value of the digest object. …\n",null,1],["==","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-3D-3D","(p1)","",null,1],["==","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <code>obj</code> is an Enumerator::ArithmeticSequence, has equivalent begin, end, step, and  …\n",null,1],["==","Exception","ruby/classes/Exception.html#method-i-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not an Exception, returns <code>false</code>. Otherwise, returns <code>true</code> if <em>exc</em> and <em>obj</em> share same …\n",null,1],["==","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-3D-3D","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise returns false.\n",null,1],["==","Float","ruby/classes/Float.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>other</code> has the same value as <code>self</code>, <code>false</code> otherwise:\n\n<pre><code>2.0 == 2              # =&gt; true\n2.0 ...\n</code></pre>\n",null,1],["==","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-3D-3D","(other)","<p>Compare with <code>other</code>. Supports another NameTuple or an Array in the [name, version, platform] format.\n",null,1],["==","Gem::Platform","ruby/classes/Gem/Platform.html#method-i-3D-3D","(other)","<p>Is <code>other</code> equal to this platform?  Two platforms are equal if they have the same CPU, OS and version. …\n",null,1],["==","Gem::Resolver::IndexSpecification","ruby/classes/Gem/Resolver/IndexSpecification.html#method-i-3D-3D","(other)","",null,1],["==","Hash","ruby/classes/Hash.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if all of the following are true:\n<p><code>object</code> is a Hash object.\n<p><code>hash</code> and <code>object</code> have the same keys …\n",null,1],["==","IPAddr","ruby/classes/IPAddr.html#method-i-3D-3D","(other)","<p>Returns true if two ipaddrs are equal.\n",null,1],["==","Integer","ruby/classes/Integer.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> is numerically equal to <code>other</code>; <code>false</code> otherwise.\n\n<pre><code>1 == 2     #=&gt; false\n1 == 1.0   #=&gt; ...\n</code></pre>\n",null,1],["==","MatchData","ruby/classes/MatchData.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>object</code> is another MatchData object whose target string, regexp, match, and captures are …\n",null,1],["==","Method","ruby/classes/Method.html#method-i-3D-3D","(p1)","<p>Two method objects are equal if they are bound to the same object and refer to the same method definition …\n",null,1],["==","Module","ruby/classes/Module.html#method-i-3D-3D","(p1)","<p>Equality — At the Object level, #== returns <code>true</code> only if <code>obj</code> and <code>other</code> are the same object.  Typically …\n",null,1],["==","OpenSSL::ASN1::ObjectId","ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <em>other_oid</em> is the same as <em>oid</em>\n",null,1],["==","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as <em>bn</em>. Contrast this with OpenSSL::BN#eql?, which requires …\n",null,1],["==","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-3D-3D","(other)","<p>Securely compare with another HMAC instance in constant time.\n",null,1],["==","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if the two groups use the same curve and have the same parameters, <code>false</code> otherwise.\n",null,1],["==","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-3D-3D","(p1)","",null,1],["==","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if the two Session is the same, <code>false</code> if not.\n",null,1],["==","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-i-3D-3D","(other)","",null,1],["==","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-3D-3D","(other)","",null,1],["==","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-3D-3D","(p1)","<p>Compares the two certificates. Note that this takes into account all fields, not just the issuer name …\n",null,1],["==","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-3D-3D","(other)","",null,1],["==","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-3D-3D","(other)","",null,1],["==","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-3D-3D","(other)","",null,1],["==","OpenStruct","ruby/classes/OpenStruct.html#method-i-3D-3D","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is equal to <code>other</code> when <code>other</code> is an OpenStruct …\n",null,1],["==","Pathname","ruby/classes/Pathname.html#method-i-3D-3D","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is string-based. Be aware that two different paths …\n",null,1],["==","Prism::Location","ruby/classes/Prism/Location.html#method-i-3D-3D","(other)","<p>Returns true if the given other location is equal to this location.\n",null,1],["==","Prism::Token","ruby/classes/Prism/Token.html#method-i-3D-3D","(other)","<p>Returns true if the given other token is equal to this token.\n",null,1],["==","Proc","ruby/classes/Proc.html#method-i-3D-3D","(p1)","<p>Two procs are the same if, and only if, they were created from the same code block.\n\n<pre><code>def return_block(&amp;block) ...\n</code></pre>\n",null,1],["==","Process::Status","ruby/classes/Process/Status.html#method-i-3D-3D","(p1)","<p>Returns whether the value of #to_i == <code>other</code>:\n\n<pre><code>`cat /nop`\nstat = $?                # =&gt; #&lt;Process::Status: ...\n</code></pre>\n",null,1],["==","RDoc::Attr","ruby/classes/RDoc/Attr.html#method-i-3D-3D","(other)","<p>Attributes are equal when their names, singleton and rw are identical\n",null,1],["==","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-3D-3D","(other)","<p>Constants are equal when their #parent and #name is the same\n",null,1],["==","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-3D-3D","(other)","<p>An RDoc::TopLevel is equal to another with the same relative_name\n",null,1],["==","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-3D-3D","(*args)","",null,1],["==","Random","ruby/classes/Random.html#method-i-3D-3D","(p1)","<p>Returns true if the two generators have the same internal state, otherwise false.  Equivalent generators …\n",null,1],["==","Range","ruby/classes/Range.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if and only if:\n<p><code>other</code> is a range.\n<p><code>other.begin == self.begin</code>.\n",null,1],["==","Rational","ruby/classes/Rational.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>rat</code> equals <code>object</code> numerically.\n\n<pre><code>Rational(2, 3)  == Rational(2, 3)   #=&gt; true\nRational(5) ...\n</code></pre>\n",null,1],["==","Regexp","ruby/classes/Regexp.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>object</code> is another Regexp whose pattern, flags, and encoding are the same as <code>self</code>, <code>false</code> …\n",null,1],["==","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-3D-3D","(i)","",null,1],["==","Set","ruby/classes/Set.html#method-i-3D-3D","(other)","<p>Returns true if two sets are equal. The equality of each couple\nof elements is defined according to  ...\n",null,1],["==","String","ruby/classes/String.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>object</code> has the same length and content; as <code>self</code>; <code>false</code> otherwise:\n\n<pre><code>s = &#39;foo&#39;\ns == &#39;foo&#39; ...\n</code></pre>\n",null,1],["==","Struct","ruby/classes/Struct.html#method-i-3D-3D","(p1)","<p>Returns  <code>true</code> if and only if the following are true; otherwise returns <code>false</code>:\n<p><code>other.class == self.class</code> …\n",null,1],["==","Symbol","ruby/classes/Symbol.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <code>object</code> is the same object as <code>self</code>, <code>false</code> otherwise.\n",null,1],["==","URI::Generic","ruby/classes/URI/Generic.html#method-i-3D-3D","(oth)","<p>Compares two URIs.\n",null,1],["==","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-3D-3D","(p1)","<p>Two unbound method objects are equal if they refer to the same method definition.\n\n<pre><code>Array.instance_method(:each_slice) ...\n</code></pre>\n",null,1],["==","Win32::SSPI::SSPIResult","ruby/classes/Win32/SSPI/SSPIResult.html#method-i-3D-3D","(other)","",null,1],["===","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-3D-3D-3D","","<p>Equivalent to <code>#==</code>.\n\n<pre><code>class BlogPost\n  extend ActiveModel::Naming\nend\n\nBlogPost.model_name === &#39;BlogPost&#39; ...\n</code></pre>\n",null,0],["===","ActiveSupport::CompareWithRange","rails/classes/ActiveSupport/CompareWithRange.html#method-i-3D-3D-3D","(value)","<p>Extends the default Range#=== to support range comparisons.\n\n<pre><code>(1..5) === (1..5)  # =&gt; true\n(1..5) === (2..3) ...\n</code></pre>\n",null,0],["===","ActiveSupport::Notifications::Fanout::Subscribers::Matcher::AllMessages","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Matcher/AllMessages.html#method-i-3D-3D-3D","(name)","",null,0],["===","Mime::Type","rails/classes/Mime/Type.html#method-i-3D-3D-3D","(list)","",null,0],["===","Time","rails/classes/Time.html#method-c-3D-3D-3D","(other)","<p>Overriding case equality method so that it returns true for ActiveSupport::TimeWithZone instances\n",null,0],["===","BigDecimal","ruby/classes/BigDecimal.html#method-i-3D-3D-3D","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,1],["===","Date","ruby/classes/Date.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> and <code>other</code> represent the same date, <code>false</code> if not, <code>nil</code> if the two are not comparable. …\n",null,1],["===","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <code>obj</code> is an Enumerator::ArithmeticSequence, has equivalent begin, end, step, and  …\n",null,1],["===","FalseClass","ruby/classes/FalseClass.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> or <code>false</code>.\n<p>Like Object#==, if <code>object</code> is an instance of Object (and not an instance of one …\n",null,1],["===","Float","ruby/classes/Float.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>other</code> has the same value as <code>self</code>, <code>false</code> otherwise:\n\n<pre><code>2.0 == 2              # =&gt; true\n2.0 ...\n</code></pre>\n",null,1],["===","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-3D-3D-3D","(other)","",null,1],["===","Gem::Platform","ruby/classes/Gem/Platform.html#method-i-3D-3D-3D","(other)","<p>Does <code>other</code> match this platform?  Two platforms match if they have the same CPU, or either has a CPU of …\n",null,1],["===","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-3D-3D-3D","(version)","",null,1],["===","IPAddr","ruby/classes/IPAddr.html#method-i-3D-3D-3D","(other)","",null,1],["===","Integer","ruby/classes/Integer.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> is numerically equal to <code>other</code>; <code>false</code> otherwise.\n\n<pre><code>1 == 2     #=&gt; false\n1 == 1.0   #=&gt; ...\n</code></pre>\n",null,1],["===","Method","ruby/classes/Method.html#method-i-3D-3D-3D","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the method’s return value.\n\n<pre><code>m = 12.method(&quot;+&quot;) ...\n</code></pre>\n",null,1],["===","Module","ruby/classes/Module.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—Returns <code>true</code> if <em>obj</em> is an instance of <em>mod</em> or an instance of one of <em>mod</em>’s descendants. …\n",null,1],["===","NilClass","ruby/classes/NilClass.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> or <code>false</code>.\n<p>Like Object#==, if <code>object</code> is an instance of Object (and not an instance of one …\n",null,1],["===","Object","ruby/classes/Object.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> or <code>false</code>.\n<p>Like Object#==, if <code>object</code> is an instance of Object (and not an instance of one …\n",null,1],["===","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as <em>bn</em>. Contrast this with OpenSSL::BN#eql?, which requires …\n",null,1],["===","Pathname","ruby/classes/Pathname.html#method-i-3D-3D-3D","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is string-based. Be aware that two different paths …\n",null,1],["===","Proc","ruby/classes/Proc.html#method-i-3D-3D-3D","(*args)","<p>Invokes the block, setting the block’s parameters to the values in <em>params</em> using something close to …\n",null,1],["===","Range","ruby/classes/Range.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>object</code> is between <code>self.begin</code> and <code>self.end</code>. <code>false</code> otherwise:\n\n<pre><code>(1..4) === 2       # =&gt; true ...\n</code></pre>\n",null,1],["===","Regexp","ruby/classes/Regexp.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> finds a match in <code>string</code>:\n\n<pre><code>/^[a-z]*$/ === &#39;HELLO&#39; # =&gt; false\n/^[A-Z]*$/ === &#39;HELLO&#39; ...\n</code></pre>\n",null,1],["===","Rinda::DRbObjectTemplate","ruby/classes/Rinda/DRbObjectTemplate.html#method-i-3D-3D-3D","(ro)","<p>This DRbObjectTemplate matches <code>ro</code> if the remote object’s drburi and drbref are the same.  <code>nil</code> is …\n",null,1],["===","Rinda::Template","ruby/classes/Rinda/Template.html#method-i-3D-3D-3D","(tuple)","<p>Alias for #match.\n",null,1],["===","Rinda::TemplateEntry","ruby/classes/Rinda/TemplateEntry.html#method-i-3D-3D-3D","(tuple)","",null,1],["===","Set","ruby/classes/Set.html#method-i-3D-3D-3D","(o)","<p>Returns true if the given object is a member of the set,\nand false otherwise.\n<p>Used in case statements: …\n",null,1],["===","String","ruby/classes/String.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>object</code> has the same length and content; as <code>self</code>; <code>false</code> otherwise:\n\n<pre><code>s = &#39;foo&#39;\ns == &#39;foo&#39; ...\n</code></pre>\n",null,1],["===","Symbol","ruby/classes/Symbol.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <code>object</code> is the same object as <code>self</code>, <code>false</code> otherwise.\n",null,1],["===","SystemCallError","ruby/classes/SystemCallError.html#method-c-3D-3D-3D","(p1)","<p>Return <code>true</code> if the receiver is a generic <code>SystemCallError</code>, or if the error numbers <code>self</code> and <em>other</em> are …\n",null,1],["===","TrueClass","ruby/classes/TrueClass.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> or <code>false</code>.\n<p>Like Object#==, if <code>object</code> is an instance of Object (and not an instance of one …\n",null,1],["=~","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-3D~","","<p>Equivalent to <code>String#=~</code>. Match the class name against the given regexp. Returns the position where the …\n",null,0],["=~","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-3D~","(re)","<p>Compare #name and TZInfo identifier to a supplied regexp, returning <code>true</code> if a match is found.\n",null,0],["=~","Mime::Type","rails/classes/Mime/Type.html#method-i-3D~","(mime_type)","",null,0],["=~","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-3D~","(other)","<p>Uses this dependency as a pattern to compare to <code>other</code>. This dependency will match if the name matches …\n",null,1],["=~","Gem::Platform","ruby/classes/Gem/Platform.html#method-i-3D~","(other)","<p>Does <code>other</code> match this platform?  If <code>other</code> is a String it will be converted to a Gem::Platform first. …\n",null,1],["=~","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-3D~","(version)","",null,1],["=~","NilClass","ruby/classes/NilClass.html#method-i-3D~","(p1)","<p>Returns <code>nil</code>.\n<p>This method makes it useful to write:\n\n<pre><code>while gets =~ /re/\n  # ...\nend\n</code></pre>\n",null,1],["=~","Regexp","ruby/classes/Regexp.html#method-i-3D~","(p1)","<p>Returns the integer index (in characters) of the first match for <code>self</code> and <code>string</code>, or <code>nil</code> if none; also …\n",null,1],["=~","String","ruby/classes/String.html#method-i-3D~","(p1)","<p>Returns the Integer index of the first substring that matches the given <code>regexp</code>, or <code>nil</code> if no match found: …\n",null,1],["=~","Symbol","ruby/classes/Symbol.html#method-i-3D~","(p1)","<p>Equivalent to <code>symbol.to_s =~ object</code>, including possible updates to global variables; see String#=~.\n",null,1],[">","BigDecimal","ruby/classes/BigDecimal.html#method-i-3E","(p1)","<p>Returns <code>true</code> if <code>self</code> is greater than <code>other</code>, <code>false</code> otherwise:\n\n<pre><code>b = BigDecimal(&#39;1.5&#39;)\nb &gt; 1              ...\n</code></pre>\n",null,1],[">","Comparable","ruby/classes/Comparable.html#method-i-3E","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method, returning true if it returns a value …\n",null,1],[">","Float","ruby/classes/Float.html#method-i-3E","(p1)","<p>Returns <code>true</code> if <code>self</code> is numerically greater than <code>other</code>:\n\n<pre><code>2.0 &gt; 1              # =&gt; true\n2.0 &gt; 1.0      ...\n</code></pre>\n",null,1],[">","Hash","ruby/classes/Hash.html#method-i-3E","(p1)","<p>Returns <code>true</code> if <code>hash</code> is a proper superset of <code>other_hash</code>, <code>false</code> otherwise:\n\n<pre><code>h1 = {foo: 0, bar: 1, baz: 2} ...\n</code></pre>\n",null,1],[">","Integer","ruby/classes/Integer.html#method-i-3E","(p1)","<p>Returns <code>true</code> if the value of <code>self</code> is greater than that of <code>other</code>:\n\n<pre><code>  1 &gt; 0              # =&gt; true\n  1 &gt; ...\n</code></pre>\n",null,1],[">","Module","ruby/classes/Module.html#method-i-3E","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>. Returns <code>false</code> if <em>mod</em> is the same as <em>other</em> or <em>mod</em> is a descendant …\n",null,1],[">","Set","ruby/classes/Set.html#method-i-3E","(set)","",null,1],[">=","BigDecimal","ruby/classes/BigDecimal.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> is greater than or equal to <code>other</code>, <code>false</code> otherwise:\n\n<pre><code>b = BigDecimal(&#39;1.5&#39;)\nb &gt;= 1 ...\n</code></pre>\n",null,1],[">=","Comparable","ruby/classes/Comparable.html#method-i-3E-3D","(p1)","<p>Compares two objects based on the receiver’s <code>&lt;=&gt;</code> method, returning true if it returns a value …\n",null,1],[">=","Float","ruby/classes/Float.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if <code>self</code> is numerically greater than or equal to <code>other</code>:\n\n<pre><code>2.0 &gt;= 1              # =&gt; true\n2.0 ...\n</code></pre>\n",null,1],[">=","Hash","ruby/classes/Hash.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if <code>hash</code> is a superset of <code>other_hash</code>, <code>false</code> otherwise:\n\n<pre><code>h1 = {foo: 0, bar: 1, baz: 2}\nh2 = ...\n</code></pre>\n",null,1],[">=","Integer","ruby/classes/Integer.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if the value of <code>self</code> is greater than or equal to that of <code>other</code>:\n\n<pre><code>1 &gt;= 0              # =&gt; ...\n</code></pre>\n",null,1],[">=","Module","ruby/classes/Module.html#method-i-3E-3D","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>, or the two modules are the same. Returns <code>nil</code> if there’s …\n",null,1],[">=","Set","ruby/classes/Set.html#method-i-3E-3D","(set)","",null,1],[">>","Date","ruby/classes/Date.html#method-i-3E-3E","(p1)","<p>Returns a new Date object representing the date <code>n</code> months later; <code>n</code> should be a numeric:\n\n<pre><code>(Date.new(2001, ...\n</code></pre>\n",null,1],[">>","IPAddr","ruby/classes/IPAddr.html#method-i-3E-3E","(num)","<p>Returns a new ipaddr built by bitwise right-shift.\n",null,1],[">>","Integer","ruby/classes/Integer.html#method-i-3E-3E","(p1)","<p>Returns <code>self</code> with bits shifted <code>count</code> positions to the right, or to the left if <code>count</code> is negative:\n\n<pre><code>n = ...\n</code></pre>\n",null,1],[">>","Method","ruby/classes/Method.html#method-i-3E-3E","(p1)","<p>Returns a proc that is the composition of this method and the given <em>g</em>. The returned proc takes a variable …\n",null,1],[">>","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-3E-3E","(p1)","",null,1],[">>","Proc","ruby/classes/Proc.html#method-i-3E-3E","(p1)","<p>Returns a proc that is the composition of this proc and the given <em>g</em>. The returned proc takes a variable …\n",null,1],[">>","Process::Status","ruby/classes/Process/Status.html#method-i-3E-3E","(p1)","<p>This method is deprecated as #to_i value is system-specific; use predicate methods like #exited? or  …\n",null,1],["ACL","","ruby/classes/ACL.html","","<p>Simple Access Control Lists.\n<p>Access control lists are composed of “allow” and “deny” …\n",null,1],["ACL::ACLEntry","","ruby/classes/ACL/ACLEntry.html","","<p>An entry in an ACL\n",null,1],["ACL::ACLList","","ruby/classes/ACL/ACLList.html","","<p>A list of ACLEntry objects.  Used to implement the allow and deny halves of an ACL\n",null,1],["ARGF","","ruby/classes/ARGF.html","","<p>ARGF is a stream designed for use in scripts that process files given as command-line arguments or passed …\n",null,1],["Abbrev","","ruby/classes/Abbrev.html","","<p>Calculates the set of unambiguous abbreviations for a given set of strings.\n\n<pre><code>require &#39;abbrev&#39;\nrequire &#39;pp&#39; ...\n</code></pre>\n",null,1],["AbstractController","","rails/classes/AbstractController.html","","",null,0],["AbstractController::ActionNotFound","","rails/classes/AbstractController/ActionNotFound.html","","<p>Raised when a non-existing controller action is triggered.\n",null,0],["AbstractController::Base","","rails/classes/AbstractController/Base.html","","<p>AbstractController::Base is a low-level API. Nobody should be using it directly, and subclasses (like …\n",null,0],["AbstractController::Caching","","rails/classes/AbstractController/Caching.html","","",null,0],["AbstractController::Caching::ClassMethods","","rails/classes/AbstractController/Caching/ClassMethods.html","","",null,0],["AbstractController::Caching::ConfigMethods","","rails/classes/AbstractController/Caching/ConfigMethods.html","","",null,0],["AbstractController::Caching::Fragments","","rails/classes/AbstractController/Caching/Fragments.html","","<p>Fragment caching is used for caching various blocks within views without caching the entire action as …\n",null,0],["AbstractController::Caching::Fragments::ClassMethods","","rails/classes/AbstractController/Caching/Fragments/ClassMethods.html","","",null,0],["AbstractController::Callbacks","","rails/classes/AbstractController/Callbacks.html","","<p>Abstract Controller Callbacks\n<p>Abstract Controller provides hooks during the life cycle of a controller …\n",null,0],["AbstractController::Callbacks::ClassMethods","","rails/classes/AbstractController/Callbacks/ClassMethods.html","","",null,0],["AbstractController::Collector","","rails/classes/AbstractController/Collector.html","","",null,0],["AbstractController::DoubleRenderError","","rails/classes/AbstractController/DoubleRenderError.html","","",null,0],["AbstractController::Helpers","","rails/classes/AbstractController/Helpers.html","","",null,0],["AbstractController::Helpers::ClassMethods","","rails/classes/AbstractController/Helpers/ClassMethods.html","","",null,0],["AbstractController::Helpers::MissingHelperError","","rails/classes/AbstractController/Helpers/MissingHelperError.html","","",null,0],["AbstractController::Railties","","rails/classes/AbstractController/Railties.html","","",null,0],["AbstractController::Railties::RoutesHelpers","","rails/classes/AbstractController/Railties/RoutesHelpers.html","","",null,0],["AbstractController::Rendering","","rails/classes/AbstractController/Rendering.html","","",null,0],["AbstractController::Translation","","rails/classes/AbstractController/Translation.html","","",null,0],["AbstractController::UrlFor","","rails/classes/AbstractController/UrlFor.html","","<p>Includes <code>url_for</code> into the host class (e.g. an abstract controller or mailer). The class has to provide …\n",null,0],["AbstractController::UrlFor::ClassMethods","","rails/classes/AbstractController/UrlFor/ClassMethods.html","","",null,0],["ActionCable","","rails/classes/ActionCable.html","","",null,0],["ActionCable::Channel","","rails/classes/ActionCable/Channel.html","","",null,0],["ActionCable::Channel::Base","","rails/classes/ActionCable/Channel/Base.html","","<p>The channel provides the basic structure of grouping behavior into logical units when communicating over …\n",null,0],["ActionCable::Channel::Broadcasting","","rails/classes/ActionCable/Channel/Broadcasting.html","","",null,0],["ActionCable::Channel::Broadcasting::ClassMethods","","rails/classes/ActionCable/Channel/Broadcasting/ClassMethods.html","","",null,0],["ActionCable::Channel::Callbacks","","rails/classes/ActionCable/Channel/Callbacks.html","","",null,0],["ActionCable::Channel::Callbacks::ClassMethods","","rails/classes/ActionCable/Channel/Callbacks/ClassMethods.html","","",null,0],["ActionCable::Channel::Naming","","rails/classes/ActionCable/Channel/Naming.html","","",null,0],["ActionCable::Channel::Naming::ClassMethods","","rails/classes/ActionCable/Channel/Naming/ClassMethods.html","","",null,0],["ActionCable::Channel::PeriodicTimers","","rails/classes/ActionCable/Channel/PeriodicTimers.html","","",null,0],["ActionCable::Channel::PeriodicTimers::ClassMethods","","rails/classes/ActionCable/Channel/PeriodicTimers/ClassMethods.html","","",null,0],["ActionCable::Channel::Streams","","rails/classes/ActionCable/Channel/Streams.html","","<p>Streams allow channels to route broadcastings to the subscriber. A broadcasting is, as discussed elsewhere, …\n",null,0],["ActionCable::Connection","","rails/classes/ActionCable/Connection.html","","",null,0],["ActionCable::Connection::Authorization","","rails/classes/ActionCable/Connection/Authorization.html","","",null,0],["ActionCable::Connection::Authorization::UnauthorizedError","","rails/classes/ActionCable/Connection/Authorization/UnauthorizedError.html","","",null,0],["ActionCable::Connection::Base","","rails/classes/ActionCable/Connection/Base.html","","<p>For every WebSocket connection the Action Cable server accepts, a Connection object will be instantiated. …\n",null,0],["ActionCable::Connection::Identification","","rails/classes/ActionCable/Connection/Identification.html","","",null,0],["ActionCable::Connection::Identification::ClassMethods","","rails/classes/ActionCable/Connection/Identification/ClassMethods.html","","",null,0],["ActionCable::Connection::InternalChannel","","rails/classes/ActionCable/Connection/InternalChannel.html","","<p>Makes it possible for the RemoteConnection to disconnect a specific connection.\n",null,0],["ActionCable::Connection::StreamEventLoop","","rails/classes/ActionCable/Connection/StreamEventLoop.html","","",null,0],["ActionCable::Connection::TaggedLoggerProxy","","rails/classes/ActionCable/Connection/TaggedLoggerProxy.html","","<p>Allows the use of per-connection tags against the server logger. This wouldn’t work using the traditional …\n",null,0],["ActionCable::Helpers","","rails/classes/ActionCable/Helpers.html","","",null,0],["ActionCable::Helpers::ActionCableHelper","","rails/classes/ActionCable/Helpers/ActionCableHelper.html","","",null,0],["ActionCable::RemoteConnections","","rails/classes/ActionCable/RemoteConnections.html","","<p>If you need to disconnect a given connection, you can go through the RemoteConnections. You can find …\n",null,0],["ActionCable::RemoteConnections::RemoteConnection","","rails/classes/ActionCable/RemoteConnections/RemoteConnection.html","","<p>Represents a single remote connection found via <code>ActionCable.server.remote_connections.where(*)</code>. Exists …\n",null,0],["ActionCable::RemoteConnections::RemoteConnection::InvalidIdentifiersError","","rails/classes/ActionCable/RemoteConnections/RemoteConnection/InvalidIdentifiersError.html","","",null,0],["ActionCable::Server","","rails/classes/ActionCable/Server.html","","",null,0],["ActionCable::Server::Base","","rails/classes/ActionCable/Server/Base.html","","<p>A singleton ActionCable::Server instance is available via ActionCable.server. It’s used by the Rack …\n",null,0],["ActionCable::Server::Broadcasting","","rails/classes/ActionCable/Server/Broadcasting.html","","<p>Broadcasting is how other parts of your application can send messages to a channel’s subscribers. …\n",null,0],["ActionCable::Server::Broadcasting::Broadcaster","","rails/classes/ActionCable/Server/Broadcasting/Broadcaster.html","","",null,0],["ActionCable::Server::Configuration","","rails/classes/ActionCable/Server/Configuration.html","","<p>An instance of this configuration object is available via ActionCable.server.config, which allows you …\n",null,0],["ActionCable::Server::Worker","","rails/classes/ActionCable/Server/Worker.html","","",null,0],["ActionCable::Server::Worker::ActiveRecordConnectionManagement","","rails/classes/ActionCable/Server/Worker/ActiveRecordConnectionManagement.html","","",null,0],["ActionCable::SubscriptionAdapter","","rails/classes/ActionCable/SubscriptionAdapter.html","","",null,0],["ActionCable::SubscriptionAdapter::Async","","rails/classes/ActionCable/SubscriptionAdapter/Async.html","","",null,0],["ActionCable::SubscriptionAdapter::Async::AsyncSubscriberMap","","rails/classes/ActionCable/SubscriptionAdapter/Async/AsyncSubscriberMap.html","","",null,0],["ActionCable::SubscriptionAdapter::Base","","rails/classes/ActionCable/SubscriptionAdapter/Base.html","","",null,0],["ActionCable::SubscriptionAdapter::PostgreSQL","","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL.html","","",null,0],["ActionCable::SubscriptionAdapter::PostgreSQL::Listener","","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL/Listener.html","","",null,0],["ActionCable::SubscriptionAdapter::Redis","","rails/classes/ActionCable/SubscriptionAdapter/Redis.html","","",null,0],["ActionCable::SubscriptionAdapter::Redis::Listener","","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener.html","","",null,0],["ActionCable::SubscriptionAdapter::Redis::Listener::SubscribedClient","","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener/SubscribedClient.html","","",null,0],["ActionCable::SubscriptionAdapter::SubscriberMap","","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html","","",null,0],["ActionCable::VERSION","","rails/classes/ActionCable/VERSION.html","","",null,0],["ActionController","","rails/classes/ActionController.html","","",null,0],["ActionController::API","","rails/classes/ActionController/API.html","","<p>API Controller is a lightweight version of ActionController::Base, created for applications that don’t …\n",null,0],["ActionController::ApiRendering","","rails/classes/ActionController/ApiRendering.html","","",null,0],["ActionController::Base","","rails/classes/ActionController/Base.html","","<p>Action Controllers are the core of a web request in Rails. They are made up of one or more actions that …\n",null,0],["ActionController::Caching","","rails/classes/ActionController/Caching.html","","<p>Caching is a cheap way of speeding up slow applications by keeping the result of calculations, renderings, …\n",null,0],["ActionController::ConditionalGet","","rails/classes/ActionController/ConditionalGet.html","","",null,0],["ActionController::ConditionalGet::ClassMethods","","rails/classes/ActionController/ConditionalGet/ClassMethods.html","","",null,0],["ActionController::ContentSecurityPolicy","","rails/classes/ActionController/ContentSecurityPolicy.html","","",null,0],["ActionController::ContentSecurityPolicy::ClassMethods","","rails/classes/ActionController/ContentSecurityPolicy/ClassMethods.html","","",null,0],["ActionController::Cookies","","rails/classes/ActionController/Cookies.html","","",null,0],["ActionController::DataStreaming","","rails/classes/ActionController/DataStreaming.html","","<p>Methods for sending arbitrary data and for streaming files to the browser, instead of rendering.\n",null,0],["ActionController::DefaultHeaders","","rails/classes/ActionController/DefaultHeaders.html","","<p>Allows configuring default headers that will be automatically merged into each response.\n",null,0],["ActionController::DefaultHeaders::ClassMethods","","rails/classes/ActionController/DefaultHeaders/ClassMethods.html","","",null,0],["ActionController::EtagWithFlash","","rails/classes/ActionController/EtagWithFlash.html","","<p>When you’re using the flash, it’s generally used as a conditional on the view. This means the …\n",null,0],["ActionController::EtagWithTemplateDigest","","rails/classes/ActionController/EtagWithTemplateDigest.html","","<p>When our views change, they should bubble up into HTTP cache freshness and bust browser caches. So the …\n",null,0],["ActionController::Flash","","rails/classes/ActionController/Flash.html","","",null,0],["ActionController::Flash::ClassMethods","","rails/classes/ActionController/Flash/ClassMethods.html","","",null,0],["ActionController::FormBuilder","","rails/classes/ActionController/FormBuilder.html","","<p>Override the default form builder for all views rendered by this controller and any of its descendants. …\n",null,0],["ActionController::FormBuilder::ClassMethods","","rails/classes/ActionController/FormBuilder/ClassMethods.html","","",null,0],["ActionController::Head","","rails/classes/ActionController/Head.html","","",null,0],["ActionController::Helpers","","rails/classes/ActionController/Helpers.html","","<p>The Rails framework provides a large number of helpers for working with assets, dates, forms, numbers …\n",null,0],["ActionController::Helpers::ClassMethods","","rails/classes/ActionController/Helpers/ClassMethods.html","","",null,0],["ActionController::HttpAuthentication","","rails/classes/ActionController/HttpAuthentication.html","","<p>HTTP Basic, Digest, and Token authentication.\n",null,0],["ActionController::HttpAuthentication::Basic","","rails/classes/ActionController/HttpAuthentication/Basic.html","","<p>HTTP Basic authentication\n<p>Simple Basic example\n\n<pre><code> class PostsController &lt; ApplicationController\n   http_basic_authenticate_with ...\n</code></pre>\n",null,0],["ActionController::HttpAuthentication::Basic::ControllerMethods","","rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html","","",null,0],["ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","","rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html","","",null,0],["ActionController::HttpAuthentication::Digest","","rails/classes/ActionController/HttpAuthentication/Digest.html","","<p>HTTP Digest authentication\n<p>Simple Digest example\n\n<pre><code>require &quot;openssl&quot;\nclass PostsController &lt; ApplicationController ...\n</code></pre>\n",null,0],["ActionController::HttpAuthentication::Digest::ControllerMethods","","rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html","","",null,0],["ActionController::HttpAuthentication::Token","","rails/classes/ActionController/HttpAuthentication/Token.html","","<p>HTTP Token authentication\n<p>Simple Token example\n\n<pre><code>class PostsController &lt; ApplicationController\n  TOKEN = ...\n</code></pre>\n",null,0],["ActionController::HttpAuthentication::Token::ControllerMethods","","rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html","","",null,0],["ActionController::ImplicitRender","","rails/classes/ActionController/ImplicitRender.html","","<p>Handles implicit rendering for a controller action that does not explicitly respond with <code>render</code>, <code>respond_to</code> …\n",null,0],["ActionController::Instrumentation","","rails/classes/ActionController/Instrumentation.html","","<p>Adds instrumentation to several ends in ActionController::Base. It also provides some hooks related with …\n",null,0],["ActionController::Instrumentation::ClassMethods","","rails/classes/ActionController/Instrumentation/ClassMethods.html","","",null,0],["ActionController::Live","","rails/classes/ActionController/Live.html","","<p>Mix this module into your controller, and all actions in that controller will be able to stream data …\n",null,0],["ActionController::Live::ClassMethods","","rails/classes/ActionController/Live/ClassMethods.html","","",null,0],["ActionController::Live::ClientDisconnected","","rails/classes/ActionController/Live/ClientDisconnected.html","","",null,0],["ActionController::Live::SSE","","rails/classes/ActionController/Live/SSE.html","","<p>This class provides the ability to write an SSE (Server Sent Event) to an IO stream. The class is initialized …\n",null,0],["ActionController::LogSubscriber","","rails/classes/ActionController/LogSubscriber.html","","",null,0],["ActionController::Logging","","rails/classes/ActionController/Logging.html","","",null,0],["ActionController::Logging::ClassMethods","","rails/classes/ActionController/Logging/ClassMethods.html","","",null,0],["ActionController::Metal","","rails/classes/ActionController/Metal.html","","<p><code>ActionController::Metal</code> is the simplest possible controller, providing a valid Rack interface without …\n",null,0],["ActionController::MimeResponds","","rails/classes/ActionController/MimeResponds.html","","",null,0],["ActionController::MimeResponds::Collector","","rails/classes/ActionController/MimeResponds/Collector.html","","<p>A container for responses available from the current controller for requests for different mime-types …\n",null,0],["ActionController::MissingRenderer","","rails/classes/ActionController/MissingRenderer.html","","<p>See <code>Responder#api_behavior</code>\n",null,0],["ActionController::ParameterEncoding","","rails/classes/ActionController/ParameterEncoding.html","","<p>Specify binary encoding for parameters for a given action.\n",null,0],["ActionController::ParameterEncoding::ClassMethods","","rails/classes/ActionController/ParameterEncoding/ClassMethods.html","","",null,0],["ActionController::ParameterMissing","","rails/classes/ActionController/ParameterMissing.html","","<p>Raised when a required parameter is missing.\n\n<pre><code>params = ActionController::Parameters.new(a: {})\nparams.fetch(:b) ...\n</code></pre>\n",null,0],["ActionController::Parameters","","rails/classes/ActionController/Parameters.html","","<p>Action Controller Parameters\n<p>Allows you to choose which attributes should be permitted for mass updating …\n",null,0],["ActionController::ParamsWrapper","","rails/classes/ActionController/ParamsWrapper.html","","<p>Wraps the parameters hash into a nested hash. This will allow clients to submit requests without having …\n",null,0],["ActionController::ParamsWrapper::Options","","rails/classes/ActionController/ParamsWrapper/Options.html","","",null,0],["ActionController::ParamsWrapper::Options::ClassMethods","","rails/classes/ActionController/ParamsWrapper/Options/ClassMethods.html","","",null,0],["ActionController::PermissionsPolicy","","rails/classes/ActionController/PermissionsPolicy.html","","",null,0],["ActionController::PermissionsPolicy::ClassMethods","","rails/classes/ActionController/PermissionsPolicy/ClassMethods.html","","",null,0],["ActionController::Railties","","rails/classes/ActionController/Railties.html","","",null,0],["ActionController::Railties::Helpers","","rails/classes/ActionController/Railties/Helpers.html","","",null,0],["ActionController::Redirecting","","rails/classes/ActionController/Redirecting.html","","",null,0],["ActionController::Redirecting::UnsafeRedirectError","","rails/classes/ActionController/Redirecting/UnsafeRedirectError.html","","",null,0],["ActionController::Renderer","","rails/classes/ActionController/Renderer.html","","<p>ActionController::Renderer allows you to render arbitrary templates without requirement of being in controller …\n",null,0],["ActionController::Renderers","","rails/classes/ActionController/Renderers.html","","",null,0],["ActionController::Renderers::All","","rails/classes/ActionController/Renderers/All.html","","<p>Used in ActionController::Base and ActionController::API to include all renderers by default.\n",null,0],["ActionController::Renderers::ClassMethods","","rails/classes/ActionController/Renderers/ClassMethods.html","","",null,0],["ActionController::Rendering","","rails/classes/ActionController/Rendering.html","","",null,0],["ActionController::Rendering::ClassMethods","","rails/classes/ActionController/Rendering/ClassMethods.html","","",null,0],["ActionController::RequestForgeryProtection","","rails/classes/ActionController/RequestForgeryProtection.html","","<p>Controller actions are protected from Cross-Site Request Forgery (CSRF) attacks by including a token …\n",null,0],["ActionController::RequestForgeryProtection::ClassMethods","","rails/classes/ActionController/RequestForgeryProtection/ClassMethods.html","","",null,0],["ActionController::RequestForgeryProtection::ProtectionMethods","","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods.html","","",null,0],["ActionController::RequestForgeryProtection::ProtectionMethods::Exception","","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/Exception.html","","",null,0],["ActionController::RequestForgeryProtection::ProtectionMethods::NullSession","","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/NullSession.html","","",null,0],["ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession","","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/ResetSession.html","","",null,0],["ActionController::Rescue","","rails/classes/ActionController/Rescue.html","","<p>This module is responsible for providing rescue_from to controllers, wrapping actions to handle configured …\n",null,0],["ActionController::RespondToMismatchError","","rails/classes/ActionController/RespondToMismatchError.html","","<p>Raised when a nested respond_to is triggered and the content types of each are incompatible. For example: …\n",null,0],["ActionController::Streaming","","rails/classes/ActionController/Streaming.html","","<p>Allows views to be streamed back to the client as they are rendered.\n<p>By default, Rails renders views by …\n",null,0],["ActionController::StrongParameters","","rails/classes/ActionController/StrongParameters.html","","<p>Strong Parameters\n<p>It provides an interface for protecting attributes from end-user assignment. This makes …\n",null,0],["ActionController::UnfilteredParameters","","rails/classes/ActionController/UnfilteredParameters.html","","<p>Raised when a Parameters instance is not marked as permitted and an operation to transform it to hash …\n",null,0],["ActionController::UnpermittedParameters","","rails/classes/ActionController/UnpermittedParameters.html","","<p>Raised when a supplied parameter is not expected and ActionController::Parameters.action_on_unpermitted_parameters …\n",null,0],["ActionController::UrlFor","","rails/classes/ActionController/UrlFor.html","","<p>Includes <code>url_for</code> into the host class. The class has to provide a <code>RouteSet</code> by implementing the <code>_routes</code> …\n",null,0],["ActionDispatch","","rails/classes/ActionDispatch.html","","",null,0],["ActionDispatch::Callbacks","","rails/classes/ActionDispatch/Callbacks.html","","<p>Provides callbacks to be executed before and after dispatching the request.\n",null,0],["ActionDispatch::ContentSecurityPolicy","","rails/classes/ActionDispatch/ContentSecurityPolicy.html","","<p>Configures the HTTP Content-Security-Policy response header to help protect against XSS and injection …\n",null,0],["ActionDispatch::ContentSecurityPolicy::Middleware","","rails/classes/ActionDispatch/ContentSecurityPolicy/Middleware.html","","",null,0],["ActionDispatch::ContentSecurityPolicy::Request","","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html","","",null,0],["ActionDispatch::Cookies","","rails/classes/ActionDispatch/Cookies.html","","<p>Read and write data to cookies through ActionController::Base#cookies.\n<p>When reading cookie data, the data …\n",null,0],["ActionDispatch::Cookies::ChainedCookieJars","","rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html","","<p>Include in a cookie jar to allow chaining, e.g. <code>cookies.permanent.signed</code>.\n",null,0],["ActionDispatch::DebugExceptions","","rails/classes/ActionDispatch/DebugExceptions.html","","<p>This middleware is responsible for logging exceptions and showing a debugging page in case the request …\n",null,0],["ActionDispatch::DebugLocks","","rails/classes/ActionDispatch/DebugLocks.html","","<p>This middleware can be used to diagnose deadlocks in the autoload interlock.\n<p>To use it, insert it near …\n",null,0],["ActionDispatch::ExceptionWrapper","","rails/classes/ActionDispatch/ExceptionWrapper.html","","",null,0],["ActionDispatch::Executor","","rails/classes/ActionDispatch/Executor.html","","",null,0],["ActionDispatch::FileHandler","","rails/classes/ActionDispatch/FileHandler.html","","<p>This endpoint serves static files from disk using <code>Rack::File</code>.\n<p>URL paths are matched with static files …\n",null,0],["ActionDispatch::Flash","","rails/classes/ActionDispatch/Flash.html","","<p>The flash provides a way to pass temporary primitive-types (String, Array, Hash) between actions. Anything …\n",null,0],["ActionDispatch::Flash::FlashHash","","rails/classes/ActionDispatch/Flash/FlashHash.html","","",null,0],["ActionDispatch::Flash::RequestMethods","","rails/classes/ActionDispatch/Flash/RequestMethods.html","","",null,0],["ActionDispatch::HostAuthorization","","rails/classes/ActionDispatch/HostAuthorization.html","","<p>This middleware guards from DNS rebinding attacks by explicitly permitting the hosts a request can be …\n",null,0],["ActionDispatch::Http","","rails/classes/ActionDispatch/Http.html","","",null,0],["ActionDispatch::Http::Cache","","rails/classes/ActionDispatch/Http/Cache.html","","",null,0],["ActionDispatch::Http::Cache::Request","","rails/classes/ActionDispatch/Http/Cache/Request.html","","",null,0],["ActionDispatch::Http::Cache::Response","","rails/classes/ActionDispatch/Http/Cache/Response.html","","",null,0],["ActionDispatch::Http::FilterParameters","","rails/classes/ActionDispatch/Http/FilterParameters.html","","<p>Allows you to specify sensitive query string and POST parameters to filter from the request log.\n\n<pre><code># Replaces ...\n</code></pre>\n",null,0],["ActionDispatch::Http::FilterRedirect","","rails/classes/ActionDispatch/Http/FilterRedirect.html","","",null,0],["ActionDispatch::Http::Headers","","rails/classes/ActionDispatch/Http/Headers.html","","<p>Provides access to the request’s HTTP headers from the environment.\n\n<pre><code>env     = { &quot;CONTENT_TYPE&quot; =&gt; ...\n</code></pre>\n",null,0],["ActionDispatch::Http::MimeNegotiation","","rails/classes/ActionDispatch/Http/MimeNegotiation.html","","",null,0],["ActionDispatch::Http::MimeNegotiation::InvalidType","","rails/classes/ActionDispatch/Http/MimeNegotiation/InvalidType.html","","",null,0],["ActionDispatch::Http::Parameters","","rails/classes/ActionDispatch/Http/Parameters.html","","",null,0],["ActionDispatch::Http::Parameters::ClassMethods","","rails/classes/ActionDispatch/Http/Parameters/ClassMethods.html","","",null,0],["ActionDispatch::Http::Parameters::ParseError","","rails/classes/ActionDispatch/Http/Parameters/ParseError.html","","<p>Raised when raw data from the request cannot be parsed by the parser defined for request’s content …\n",null,0],["ActionDispatch::Http::URL","","rails/classes/ActionDispatch/Http/URL.html","","",null,0],["ActionDispatch::Http::UploadedFile","","rails/classes/ActionDispatch/Http/UploadedFile.html","","<p>Models uploaded files.\n<p>The actual file is accessible via the <code>tempfile</code> accessor, though some of its interface …\n",null,0],["ActionDispatch::IllegalStateError","","rails/classes/ActionDispatch/IllegalStateError.html","","",null,0],["ActionDispatch::Journey","","rails/classes/ActionDispatch/Journey.html","","",null,0],["ActionDispatch::Journey::Format","","rails/classes/ActionDispatch/Journey/Format.html","","",null,0],["ActionDispatch::Journey::Formatter","","rails/classes/ActionDispatch/Journey/Formatter.html","","",null,0],["ActionDispatch::Journey::Formatter::MissingRoute","","rails/classes/ActionDispatch/Journey/Formatter/MissingRoute.html","","",null,0],["ActionDispatch::Journey::Formatter::RouteWithParams","","rails/classes/ActionDispatch/Journey/Formatter/RouteWithParams.html","","",null,0],["ActionDispatch::Journey::Parser","","rails/classes/ActionDispatch/Journey/Parser.html","","",null,0],["ActionDispatch::Journey::Route","","rails/classes/ActionDispatch/Journey/Route.html","","",null,0],["ActionDispatch::Journey::Route::VerbMatchers","","rails/classes/ActionDispatch/Journey/Route/VerbMatchers.html","","",null,0],["ActionDispatch::Journey::Route::VerbMatchers::All","","rails/classes/ActionDispatch/Journey/Route/VerbMatchers/All.html","","",null,0],["ActionDispatch::Journey::Route::VerbMatchers::Unknown","","rails/classes/ActionDispatch/Journey/Route/VerbMatchers/Unknown.html","","",null,0],["ActionDispatch::MiddlewareStack","","rails/classes/ActionDispatch/MiddlewareStack.html","","",null,0],["ActionDispatch::MiddlewareStack::InstrumentationProxy","","rails/classes/ActionDispatch/MiddlewareStack/InstrumentationProxy.html","","<p>This class is used to instrument the execution of a single middleware. It proxies the <code>call</code> method transparently …\n",null,0],["ActionDispatch::MiddlewareStack::Middleware","","rails/classes/ActionDispatch/MiddlewareStack/Middleware.html","","",null,0],["ActionDispatch::MissingController","","rails/classes/ActionDispatch/MissingController.html","","",null,0],["ActionDispatch::PermissionsPolicy","","rails/classes/ActionDispatch/PermissionsPolicy.html","","<p>Configures the HTTP Feature-Policy response header to specify which browser features the current document …\n",null,0],["ActionDispatch::PermissionsPolicy::Middleware","","rails/classes/ActionDispatch/PermissionsPolicy/Middleware.html","","",null,0],["ActionDispatch::PermissionsPolicy::Request","","rails/classes/ActionDispatch/PermissionsPolicy/Request.html","","",null,0],["ActionDispatch::PublicExceptions","","rails/classes/ActionDispatch/PublicExceptions.html","","<p>When called, this middleware renders an error page. By default if an HTML response is expected it will …\n",null,0],["ActionDispatch::RailsEntityStore","","rails/classes/ActionDispatch/RailsEntityStore.html","","",null,0],["ActionDispatch::RailsMetaStore","","rails/classes/ActionDispatch/RailsMetaStore.html","","",null,0],["ActionDispatch::Reloader","","rails/classes/ActionDispatch/Reloader.html","","<p>ActionDispatch::Reloader wraps the request with callbacks provided by ActiveSupport::Reloader callbacks, …\n",null,0],["ActionDispatch::RemoteIp","","rails/classes/ActionDispatch/RemoteIp.html","","<p>This middleware calculates the IP address of the remote client that is making the request. It does this …\n",null,0],["ActionDispatch::RemoteIp::GetIp","","rails/classes/ActionDispatch/RemoteIp/GetIp.html","","<p>The GetIp class exists as a way to defer processing of the request data into an actual IP address. If …\n",null,0],["ActionDispatch::RemoteIp::IpSpoofAttackError","","rails/classes/ActionDispatch/RemoteIp/IpSpoofAttackError.html","","",null,0],["ActionDispatch::Request","","rails/classes/ActionDispatch/Request.html","","",null,0],["ActionDispatch::RequestCookieMethods","","rails/classes/ActionDispatch/RequestCookieMethods.html","","",null,0],["ActionDispatch::RequestId","","rails/classes/ActionDispatch/RequestId.html","","<p>Makes a unique request id available to the <code>action_dispatch.request_id</code> env variable (which is then accessible …\n",null,0],["ActionDispatch::Response","","rails/classes/ActionDispatch/Response.html","","<p>Represents an HTTP response generated by a controller action. Use it to retrieve the current state of …\n",null,0],["ActionDispatch::Response::RackBody","","rails/classes/ActionDispatch/Response/RackBody.html","","",null,0],["ActionDispatch::Routing","","rails/classes/ActionDispatch/Routing.html","","<p>The routing module provides URL rewriting in native Ruby. It’s a way to redirect incoming requests …\n",null,0],["ActionDispatch::Routing::ConsoleFormatter","","rails/classes/ActionDispatch/Routing/ConsoleFormatter.html","","",null,0],["ActionDispatch::Routing::ConsoleFormatter::Base","","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Base.html","","",null,0],["ActionDispatch::Routing::ConsoleFormatter::Expanded","","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Expanded.html","","",null,0],["ActionDispatch::Routing::ConsoleFormatter::Sheet","","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Sheet.html","","",null,0],["ActionDispatch::Routing::HtmlTableFormatter","","rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html","","",null,0],["ActionDispatch::Routing::Mapper","","rails/classes/ActionDispatch/Routing/Mapper.html","","",null,0],["ActionDispatch::Routing::Mapper::Base","","rails/classes/ActionDispatch/Routing/Mapper/Base.html","","",null,0],["ActionDispatch::Routing::Mapper::Concerns","","rails/classes/ActionDispatch/Routing/Mapper/Concerns.html","","<p>Routing Concerns allow you to declare common routes that can be reused inside others resources and routes. …\n",null,0],["ActionDispatch::Routing::Mapper::CustomUrls","","rails/classes/ActionDispatch/Routing/Mapper/CustomUrls.html","","",null,0],["ActionDispatch::Routing::Mapper::HttpHelpers","","rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html","","",null,0],["ActionDispatch::Routing::Mapper::Resources","","rails/classes/ActionDispatch/Routing/Mapper/Resources.html","","<p>Resource routing allows you to quickly declare all of the common routes for a given resourceful controller. …\n",null,0],["ActionDispatch::Routing::Mapper::Scoping","","rails/classes/ActionDispatch/Routing/Mapper/Scoping.html","","<p>You may wish to organize groups of controllers under a namespace. Most commonly, you might group a number …\n",null,0],["ActionDispatch::Routing::PathRedirect","","rails/classes/ActionDispatch/Routing/PathRedirect.html","","",null,0],["ActionDispatch::Routing::PolymorphicRoutes","","rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html","","<p>Polymorphic URL helpers are methods for smart resolution to a named route call when given an Active  …\n",null,0],["ActionDispatch::Routing::Redirection","","rails/classes/ActionDispatch/Routing/Redirection.html","","",null,0],["ActionDispatch::Routing::RouteSet","","rails/classes/ActionDispatch/Routing/RouteSet.html","","",null,0],["ActionDispatch::Routing::RouteSet::CustomUrlHelper","","rails/classes/ActionDispatch/Routing/RouteSet/CustomUrlHelper.html","","",null,0],["ActionDispatch::Routing::RouteSet::Dispatcher","","rails/classes/ActionDispatch/Routing/RouteSet/Dispatcher.html","","",null,0],["ActionDispatch::Routing::RouteSet::Generator","","rails/classes/ActionDispatch/Routing/RouteSet/Generator.html","","",null,0],["ActionDispatch::Routing::RouteSet::MountedHelpers","","rails/classes/ActionDispatch/Routing/RouteSet/MountedHelpers.html","","",null,0],["ActionDispatch::Routing::RouteSet::NamedRouteCollection","","rails/classes/ActionDispatch/Routing/RouteSet/NamedRouteCollection.html","","",null,0],["ActionDispatch::Routing::RouteSet::NamedRouteCollection::UrlHelper","","rails/classes/ActionDispatch/Routing/RouteSet/NamedRouteCollection/UrlHelper.html","","",null,0],["ActionDispatch::Routing::RouteSet::NamedRouteCollection::UrlHelper::OptimizedUrlHelper","","rails/classes/ActionDispatch/Routing/RouteSet/NamedRouteCollection/UrlHelper/OptimizedUrlHelper.html","","",null,0],["ActionDispatch::Routing::RouteSet::StaticDispatcher","","rails/classes/ActionDispatch/Routing/RouteSet/StaticDispatcher.html","","",null,0],["ActionDispatch::Routing::UrlFor","","rails/classes/ActionDispatch/Routing/UrlFor.html","","<p>In <code>config/routes.rb</code> you define URL-to-controller mappings, but the reverse is also possible: a URL can …\n",null,0],["ActionDispatch::SSL","","rails/classes/ActionDispatch/SSL.html","","<p>This middleware is added to the stack when <code>config.force_ssl = true</code>, and is passed the options set in …\n",null,0],["ActionDispatch::ServerTiming","","rails/classes/ActionDispatch/ServerTiming.html","","",null,0],["ActionDispatch::Session","","rails/classes/ActionDispatch/Session.html","","",null,0],["ActionDispatch::Session::AbstractSecureStore","","rails/classes/ActionDispatch/Session/AbstractSecureStore.html","","",null,0],["ActionDispatch::Session::AbstractStore","","rails/classes/ActionDispatch/Session/AbstractStore.html","","",null,0],["ActionDispatch::Session::CacheStore","","rails/classes/ActionDispatch/Session/CacheStore.html","","<p>A session store that uses an ActiveSupport::Cache::Store to store the sessions. This store is most useful …\n",null,0],["ActionDispatch::Session::Compatibility","","rails/classes/ActionDispatch/Session/Compatibility.html","","",null,0],["ActionDispatch::Session::CookieStore","","rails/classes/ActionDispatch/Session/CookieStore.html","","<p>This cookie-based session store is the Rails default. It is dramatically faster than the alternatives. …\n",null,0],["ActionDispatch::Session::CookieStore::SessionId","","rails/classes/ActionDispatch/Session/CookieStore/SessionId.html","","",null,0],["ActionDispatch::Session::MemCacheStore","","rails/classes/ActionDispatch/Session/MemCacheStore.html","","<p>A session store that uses MemCache to implement storage.\n<p>Options\n<p><code>expire_after</code>  - The length of time a session …\n",null,0],["ActionDispatch::Session::StaleSessionCheck","","rails/classes/ActionDispatch/Session/StaleSessionCheck.html","","",null,0],["ActionDispatch::ShowExceptions","","rails/classes/ActionDispatch/ShowExceptions.html","","<p>This middleware rescues any exception returned by the application and calls an exceptions app that will …\n",null,0],["ActionDispatch::Static","","rails/classes/ActionDispatch/Static.html","","<p>This middleware serves static files from disk, if available. If no file is found, it hands off to the …\n",null,0],["ActionMailbox","","rails/classes/ActionMailbox.html","","",null,0],["ActionMailbox::Base","","rails/classes/ActionMailbox/Base.html","","<p>The base class for all application mailboxes. Not intended to be inherited from directly. Inherit from …\n",null,0],["ActionMailbox::BaseController","","rails/classes/ActionMailbox/BaseController.html","","<p>The base class for all Action Mailbox ingress controllers.\n",null,0],["ActionMailbox::Callbacks","","rails/classes/ActionMailbox/Callbacks.html","","<p>Defines the callbacks related to processing.\n",null,0],["ActionMailbox::Engine","","rails/classes/ActionMailbox/Engine.html","","",null,0],["ActionMailbox::Generators","","rails/classes/ActionMailbox/Generators.html","","",null,0],["ActionMailbox::Generators::InstallGenerator","","rails/classes/ActionMailbox/Generators/InstallGenerator.html","","",null,0],["ActionMailbox::InboundEmail","","rails/classes/ActionMailbox/InboundEmail.html","","<p>The <code>InboundEmail</code> is an Active Record that keeps a reference to the raw email stored in Active Storage …\n",null,0],["ActionMailbox::InboundEmail::Incineratable","","rails/classes/ActionMailbox/InboundEmail/Incineratable.html","","<p>Ensure that the <code>InboundEmail</code> is automatically scheduled for later incineration if the status has been …\n",null,0],["ActionMailbox::InboundEmail::Incineratable::Incineration","","rails/classes/ActionMailbox/InboundEmail/Incineratable/Incineration.html","","<p>Command class for carrying out the actual incineration of the <code>InboundMail</code> that’s been scheduled for …\n",null,0],["ActionMailbox::InboundEmail::MessageId","","rails/classes/ActionMailbox/InboundEmail/MessageId.html","","<p>The <code>Message-ID</code> as specified by rfc822 is supposed to be a unique identifier for that individual email. …\n",null,0],["ActionMailbox::InboundEmail::Routable","","rails/classes/ActionMailbox/InboundEmail/Routable.html","","<p>A newly received <code>InboundEmail</code> will not be routed synchronously as part of ingress controller’s receival. …\n",null,0],["ActionMailbox::InboundEmails","","rails/classes/ActionMailbox/InboundEmails.html","","",null,0],["ActionMailbox::IncinerationJob","","rails/classes/ActionMailbox/IncinerationJob.html","","<p>You can configure when this <code>IncinerationJob</code> will be run as a time-after-processing using the <code>config.action_mailbox.incinerate_after</code> …\n",null,0],["ActionMailbox::Ingresses","","rails/classes/ActionMailbox/Ingresses.html","","",null,0],["ActionMailbox::Ingresses::Mailgun","","rails/classes/ActionMailbox/Ingresses/Mailgun.html","","",null,0],["ActionMailbox::Ingresses::Mailgun::InboundEmailsController","","rails/classes/ActionMailbox/Ingresses/Mailgun/InboundEmailsController.html","","<p>Ingests inbound emails from Mailgun. Requires the following parameters:\n<p><code>body-mime</code>: The full RFC 822 message …\n",null,0],["ActionMailbox::Ingresses::Mailgun::InboundEmailsController::Authenticator","","rails/classes/ActionMailbox/Ingresses/Mailgun/InboundEmailsController/Authenticator.html","","",null,0],["ActionMailbox::Ingresses::Mandrill","","rails/classes/ActionMailbox/Ingresses/Mandrill.html","","",null,0],["ActionMailbox::Ingresses::Mandrill::InboundEmailsController","","rails/classes/ActionMailbox/Ingresses/Mandrill/InboundEmailsController.html","","<p>Ingests inbound emails from Mandrill.\n<p>Requires a <code>mandrill_events</code> parameter containing a JSON array of …\n",null,0],["ActionMailbox::Ingresses::Mandrill::InboundEmailsController::Authenticator","","rails/classes/ActionMailbox/Ingresses/Mandrill/InboundEmailsController/Authenticator.html","","",null,0],["ActionMailbox::Ingresses::Postmark","","rails/classes/ActionMailbox/Ingresses/Postmark.html","","",null,0],["ActionMailbox::Ingresses::Postmark::InboundEmailsController","","rails/classes/ActionMailbox/Ingresses/Postmark/InboundEmailsController.html","","<p>Ingests inbound emails from Postmark. Requires a <code>RawEmail</code> parameter containing a full RFC 822 message. …\n",null,0],["ActionMailbox::Ingresses::Relay","","rails/classes/ActionMailbox/Ingresses/Relay.html","","",null,0],["ActionMailbox::Ingresses::Relay::InboundEmailsController","","rails/classes/ActionMailbox/Ingresses/Relay/InboundEmailsController.html","","<p>Ingests inbound emails relayed from an SMTP server.\n<p>Authenticates requests using HTTP basic access authentication. …\n",null,0],["ActionMailbox::Ingresses::Sendgrid","","rails/classes/ActionMailbox/Ingresses/Sendgrid.html","","",null,0],["ActionMailbox::Ingresses::Sendgrid::InboundEmailsController","","rails/classes/ActionMailbox/Ingresses/Sendgrid/InboundEmailsController.html","","<p>Ingests inbound emails from SendGrid. Requires an <code>email</code> parameter containing a full RFC 822 message. …\n",null,0],["ActionMailbox::Relayer","","rails/classes/ActionMailbox/Relayer.html","","",null,0],["ActionMailbox::Relayer::Result","","rails/classes/ActionMailbox/Relayer/Result.html","","",null,0],["ActionMailbox::Router","","rails/classes/ActionMailbox/Router.html","","<p>Encapsulates the routes that live on the ApplicationMailbox and performs the actual routing when an  …\n",null,0],["ActionMailbox::Router::Route","","rails/classes/ActionMailbox/Router/Route.html","","<p>Encapsulates a route, which can then be matched against an inbound_email and provide a lookup of the …\n",null,0],["ActionMailbox::Router::RoutingError","","rails/classes/ActionMailbox/Router/RoutingError.html","","",null,0],["ActionMailbox::Routing","","rails/classes/ActionMailbox/Routing.html","","<p>See ActionMailbox::Base for how to specify routing.\n",null,0],["ActionMailbox::RoutingJob","","rails/classes/ActionMailbox/RoutingJob.html","","<p>Routing a new InboundEmail is an asynchronous operation, which allows the ingress controllers to quickly …\n",null,0],["ActionMailbox::VERSION","","rails/classes/ActionMailbox/VERSION.html","","",null,0],["ActionMailer","","rails/classes/ActionMailer.html","","",null,0],["ActionMailer::Base","","rails/classes/ActionMailer/Base.html","","<p>Action Mailer allows you to send email from your application using a mailer model and views.\n<p>Mailer Models …\n",null,0],["ActionMailer::Base::LateAttachmentsProxy","","rails/classes/ActionMailer/Base/LateAttachmentsProxy.html","","",null,0],["ActionMailer::Collector","","rails/classes/ActionMailer/Collector.html","","",null,0],["ActionMailer::DeliveryMethods","","rails/classes/ActionMailer/DeliveryMethods.html","","<p>This module handles everything related to mail delivery, from registering new delivery methods to configuring …\n",null,0],["ActionMailer::DeliveryMethods::ClassMethods","","rails/classes/ActionMailer/DeliveryMethods/ClassMethods.html","","<p>Helpers for creating and wrapping delivery behavior, used by DeliveryMethods.\n",null,0],["ActionMailer::InlinePreviewInterceptor","","rails/classes/ActionMailer/InlinePreviewInterceptor.html","","<p>Implements a mailer preview interceptor that converts image tag src attributes that use inline cid: style …\n",null,0],["ActionMailer::LogSubscriber","","rails/classes/ActionMailer/LogSubscriber.html","","<p>Implements the ActiveSupport::LogSubscriber for logging notifications when email is delivered or received. …\n",null,0],["ActionMailer::MailHelper","","rails/classes/ActionMailer/MailHelper.html","","<p>Provides helper methods for ActionMailer::Base that can be used for easily formatting messages, accessing …\n",null,0],["ActionMailer::MessageDelivery","","rails/classes/ActionMailer/MessageDelivery.html","","<p>The <code>ActionMailer::MessageDelivery</code> class is used by ActionMailer::Base when creating a new mailer. <code>MessageDelivery</code> …\n",null,0],["ActionMailer::Parameterized","","rails/classes/ActionMailer/Parameterized.html","","<p>Provides the option to parameterize mailers in order to share instance variable setup, processing, and …\n",null,0],["ActionMailer::Parameterized::ClassMethods","","rails/classes/ActionMailer/Parameterized/ClassMethods.html","","",null,0],["ActionMailer::Preview","","rails/classes/ActionMailer/Preview.html","","",null,0],["ActionMailer::Previews","","rails/classes/ActionMailer/Previews.html","","",null,0],["ActionMailer::Previews::ClassMethods","","rails/classes/ActionMailer/Previews/ClassMethods.html","","",null,0],["ActionMailer::Rescuable","","rails/classes/ActionMailer/Rescuable.html","","<p>Provides rescue_from for mailers. Wraps mailer action processing, mail job processing, and mail delivery …\n",null,0],["ActionMailer::VERSION","","rails/classes/ActionMailer/VERSION.html","","",null,0],["ActionPack","","rails/classes/ActionPack.html","","",null,0],["ActionPack::VERSION","","rails/classes/ActionPack/VERSION.html","","",null,0],["ActionText","","rails/classes/ActionText.html","","",null,0],["ActionText::Attachable","","rails/classes/ActionText/Attachable.html","","",null,0],["ActionText::Attachables","","rails/classes/ActionText/Attachables.html","","",null,0],["ActionText::Attachables::ContentAttachment","","rails/classes/ActionText/Attachables/ContentAttachment.html","","",null,0],["ActionText::Attachables::MissingAttachable","","rails/classes/ActionText/Attachables/MissingAttachable.html","","",null,0],["ActionText::Attachables::RemoteImage","","rails/classes/ActionText/Attachables/RemoteImage.html","","",null,0],["ActionText::Attachment","","rails/classes/ActionText/Attachment.html","","",null,0],["ActionText::AttachmentGallery","","rails/classes/ActionText/AttachmentGallery.html","","",null,0],["ActionText::Attachments","","rails/classes/ActionText/Attachments.html","","",null,0],["ActionText::Attachments::Caching","","rails/classes/ActionText/Attachments/Caching.html","","",null,0],["ActionText::Attachments::Minification","","rails/classes/ActionText/Attachments/Minification.html","","",null,0],["ActionText::Attachments::TrixConversion","","rails/classes/ActionText/Attachments/TrixConversion.html","","",null,0],["ActionText::Attribute","","rails/classes/ActionText/Attribute.html","","",null,0],["ActionText::Content","","rails/classes/ActionText/Content.html","","",null,0],["ActionText::ContentHelper","","rails/classes/ActionText/ContentHelper.html","","",null,0],["ActionText::EncryptedRichText","","rails/classes/ActionText/EncryptedRichText.html","","",null,0],["ActionText::Encryption","","rails/classes/ActionText/Encryption.html","","",null,0],["ActionText::Engine","","rails/classes/ActionText/Engine.html","","",null,0],["ActionText::FixtureSet","","rails/classes/ActionText/FixtureSet.html","","<p>Fixtures are a way of organizing data that you want to test against; in short, sample data.\n<p>To learn more …\n",null,0],["ActionText::Fragment","","rails/classes/ActionText/Fragment.html","","",null,0],["ActionText::Generators","","rails/classes/ActionText/Generators.html","","",null,0],["ActionText::Generators::InstallGenerator","","rails/classes/ActionText/Generators/InstallGenerator.html","","",null,0],["ActionText::HtmlConversion","","rails/classes/ActionText/HtmlConversion.html","","",null,0],["ActionText::PlainTextConversion","","rails/classes/ActionText/PlainTextConversion.html","","",null,0],["ActionText::RichText","","rails/classes/ActionText/RichText.html","","<p>The RichText record holds the content produced by the Trix editor in a serialized <code>body</code> attribute. It …\n",null,0],["ActionText::Serialization","","rails/classes/ActionText/Serialization.html","","",null,0],["ActionText::TagHelper","","rails/classes/ActionText/TagHelper.html","","",null,0],["ActionText::TrixAttachment","","rails/classes/ActionText/TrixAttachment.html","","",null,0],["ActionText::VERSION","","rails/classes/ActionText/VERSION.html","","",null,0],["ActionView","","rails/classes/ActionView.html","","",null,0],["ActionView::AbstractRenderer","","rails/classes/ActionView/AbstractRenderer.html","","",null,0],["ActionView::AbstractRenderer::RenderedCollection","","rails/classes/ActionView/AbstractRenderer/RenderedCollection.html","","",null,0],["ActionView::AbstractRenderer::RenderedCollection::EmptyCollection","","rails/classes/ActionView/AbstractRenderer/RenderedCollection/EmptyCollection.html","","",null,0],["ActionView::Base","","rails/classes/ActionView/Base.html","","<p>Action View Base\n<p>Action View templates can be written in several ways. If the template file has a <code>.erb</code> …\n",null,0],["ActionView::CacheExpiry","","rails/classes/ActionView/CacheExpiry.html","","",null,0],["ActionView::CacheExpiry::Executor","","rails/classes/ActionView/CacheExpiry/Executor.html","","",null,0],["ActionView::CacheExpiry::ViewModificationWatcher","","rails/classes/ActionView/CacheExpiry/ViewModificationWatcher.html","","",null,0],["ActionView::Context","","rails/classes/ActionView/Context.html","","<p>Action View Context\n<p>Action View contexts are supplied to Action Controller to render a template. The default …\n",null,0],["ActionView::Digestor","","rails/classes/ActionView/Digestor.html","","",null,0],["ActionView::Digestor::Injected","","rails/classes/ActionView/Digestor/Injected.html","","",null,0],["ActionView::Digestor::Missing","","rails/classes/ActionView/Digestor/Missing.html","","",null,0],["ActionView::Digestor::Node","","rails/classes/ActionView/Digestor/Node.html","","",null,0],["ActionView::Digestor::NullLogger","","rails/classes/ActionView/Digestor/NullLogger.html","","",null,0],["ActionView::Digestor::Partial","","rails/classes/ActionView/Digestor/Partial.html","","",null,0],["ActionView::FileSystemResolver","","rails/classes/ActionView/FileSystemResolver.html","","<p>A resolver that loads files from the filesystem.\n",null,0],["ActionView::Helpers","","rails/classes/ActionView/Helpers.html","","",null,0],["ActionView::Helpers::ActiveModelHelper","","rails/classes/ActionView/Helpers/ActiveModelHelper.html","","",null,0],["ActionView::Helpers::ActiveModelInstanceTag","","rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html","","",null,0],["ActionView::Helpers::AssetTagHelper","","rails/classes/ActionView/Helpers/AssetTagHelper.html","","<p>This module provides methods for generating HTML that links views to assets such as images, JavaScripts …\n",null,0],["ActionView::Helpers::AssetUrlHelper","","rails/classes/ActionView/Helpers/AssetUrlHelper.html","","<p>This module provides methods for generating asset paths and URLs.\n\n<pre><code>image_path(&quot;rails.png&quot;)\n# =&gt; &quot;/assets/rails.png&quot; ...\n</code></pre>\n",null,0],["ActionView::Helpers::AtomFeedHelper","","rails/classes/ActionView/Helpers/AtomFeedHelper.html","","",null,0],["ActionView::Helpers::CacheHelper","","rails/classes/ActionView/Helpers/CacheHelper.html","","",null,0],["ActionView::Helpers::CacheHelper::UncacheableFragmentError","","rails/classes/ActionView/Helpers/CacheHelper/UncacheableFragmentError.html","","",null,0],["ActionView::Helpers::CaptureHelper","","rails/classes/ActionView/Helpers/CaptureHelper.html","","<p>CaptureHelper exposes methods to let you extract generated markup which can be used in other parts of …\n",null,0],["ActionView::Helpers::CspHelper","","rails/classes/ActionView/Helpers/CspHelper.html","","",null,0],["ActionView::Helpers::CsrfHelper","","rails/classes/ActionView/Helpers/CsrfHelper.html","","",null,0],["ActionView::Helpers::DateHelper","","rails/classes/ActionView/Helpers/DateHelper.html","","<p>Action View Date Helpers\n<p>The Date Helper primarily creates select/option tags for different kinds of dates …\n",null,0],["ActionView::Helpers::DebugHelper","","rails/classes/ActionView/Helpers/DebugHelper.html","","",null,0],["ActionView::Helpers::FormBuilder","","rails/classes/ActionView/Helpers/FormBuilder.html","","<p>A <code>FormBuilder</code> object is associated with a particular model object and allows you to generate fields associated …\n",null,0],["ActionView::Helpers::FormHelper","","rails/classes/ActionView/Helpers/FormHelper.html","","<p>Form helpers are designed to make working with resources much easier compared to using vanilla HTML. …\n",null,0],["ActionView::Helpers::FormOptionsHelper","","rails/classes/ActionView/Helpers/FormOptionsHelper.html","","<p>Provides a number of methods for turning different kinds of containers into a set of option tags.\n<p>The …\n",null,0],["ActionView::Helpers::FormTagHelper","","rails/classes/ActionView/Helpers/FormTagHelper.html","","<p>Provides a number of methods for creating form tags that don’t rely on an Active Record object assigned …\n",null,0],["ActionView::Helpers::JavaScriptHelper","","rails/classes/ActionView/Helpers/JavaScriptHelper.html","","",null,0],["ActionView::Helpers::NumberHelper","","rails/classes/ActionView/Helpers/NumberHelper.html","","<p>Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers, …\n",null,0],["ActionView::Helpers::NumberHelper::InvalidNumberError","","rails/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html","","<p>Raised when argument <code>number</code> param given to the helpers is invalid and the option <code>:raise</code> is set to  <code>true</code> …\n",null,0],["ActionView::Helpers::OutputSafetyHelper","","rails/classes/ActionView/Helpers/OutputSafetyHelper.html","","",null,0],["ActionView::Helpers::RenderingHelper","","rails/classes/ActionView/Helpers/RenderingHelper.html","","<p>Action View Rendering\n<p>Implements methods that allow rendering from a view context. In order to use this …\n",null,0],["ActionView::Helpers::SanitizeHelper","","rails/classes/ActionView/Helpers/SanitizeHelper.html","","<p>The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements. These …\n",null,0],["ActionView::Helpers::TagHelper","","rails/classes/ActionView/Helpers/TagHelper.html","","<p>Provides methods to generate HTML tags programmatically both as a modern HTML5 compliant builder style …\n",null,0],["ActionView::Helpers::Tags","","rails/classes/ActionView/Helpers/Tags.html","","",null,0],["ActionView::Helpers::Tags::ActionText","","rails/classes/ActionView/Helpers/Tags/ActionText.html","","",null,0],["ActionView::Helpers::TextHelper","","rails/classes/ActionView/Helpers/TextHelper.html","","<p>The TextHelper module provides a set of methods for filtering, formatting and transforming strings, which …\n",null,0],["ActionView::Helpers::TranslationHelper","","rails/classes/ActionView/Helpers/TranslationHelper.html","","",null,0],["ActionView::Helpers::UrlHelper","","rails/classes/ActionView/Helpers/UrlHelper.html","","<p>Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see …\n",null,0],["ActionView::Helpers::UrlHelper::ClassMethods","","rails/classes/ActionView/Helpers/UrlHelper/ClassMethods.html","","",null,0],["ActionView::Layouts","","rails/classes/ActionView/Layouts.html","","<p>Layouts reverse the common pattern of including shared headers and footers in many templates to isolate …\n",null,0],["ActionView::Layouts::ClassMethods","","rails/classes/ActionView/Layouts/ClassMethods.html","","",null,0],["ActionView::LogSubscriber","","rails/classes/ActionView/LogSubscriber.html","","<p>Action View Log Subscriber\n<p>Provides functionality so that Rails can output logs from Action View.\n",null,0],["ActionView::LookupContext","","rails/classes/ActionView/LookupContext.html","","",null,0],["ActionView::LookupContext::DetailsCache","","rails/classes/ActionView/LookupContext/DetailsCache.html","","<p>Add caching behavior on top of Details.\n",null,0],["ActionView::LookupContext::ViewPaths","","rails/classes/ActionView/LookupContext/ViewPaths.html","","<p>Helpers related to template lookup using the lookup context information.\n",null,0],["ActionView::PartialIteration","","rails/classes/ActionView/PartialIteration.html","","",null,0],["ActionView::PartialRenderer","","rails/classes/ActionView/PartialRenderer.html","","<p>Action View Partials\n<p>There’s also a convenience method for rendering sub templates within the current …\n",null,0],["ActionView::RecordIdentifier","","rails/classes/ActionView/RecordIdentifier.html","","<p>RecordIdentifier encapsulates methods used by various ActionView helpers to associate records with DOM …\n",null,0],["ActionView::Renderer","","rails/classes/ActionView/Renderer.html","","<p>This is the main entry point for rendering. It basically delegates to other objects like TemplateRenderer …\n",null,0],["ActionView::Rendering","","rails/classes/ActionView/Rendering.html","","",null,0],["ActionView::Rendering::ClassMethods","","rails/classes/ActionView/Rendering/ClassMethods.html","","",null,0],["ActionView::Resolver","","rails/classes/ActionView/Resolver.html","","<p>Action View Resolver\n",null,0],["ActionView::RoutingUrlFor","","rails/classes/ActionView/RoutingUrlFor.html","","",null,0],["ActionView::Template","","rails/classes/ActionView/Template.html","","<p>Action View Template\n<p>Action View Renderable Template for objects that respond to #render_in\n",null,0],["ActionView::Template::Handlers","","rails/classes/ActionView/Template/Handlers.html","","",null,0],["ActionView::Template::Handlers::Builder","","rails/classes/ActionView/Template/Handlers/Builder.html","","",null,0],["ActionView::Template::Handlers::ERB","","rails/classes/ActionView/Template/Handlers/ERB.html","","",null,0],["ActionView::Template::Handlers::Html","","rails/classes/ActionView/Template/Handlers/Html.html","","",null,0],["ActionView::Template::Handlers::Raw","","rails/classes/ActionView/Template/Handlers/Raw.html","","",null,0],["ActionView::Template::Sources","","rails/classes/ActionView/Template/Sources.html","","",null,0],["ActionView::Template::Sources::File","","rails/classes/ActionView/Template/Sources/File.html","","",null,0],["ActionView::Template::Types","","rails/classes/ActionView/Template/Types.html","","",null,0],["ActionView::Template::Types::Type","","rails/classes/ActionView/Template/Types/Type.html","","",null,0],["ActionView::TemplateDetails","","rails/classes/ActionView/TemplateDetails.html","","",null,0],["ActionView::TemplateDetails::Requested","","rails/classes/ActionView/TemplateDetails/Requested.html","","",null,0],["ActionView::TemplatePath","","rails/classes/ActionView/TemplatePath.html","","<p>Represents a template path within ActionView’s lookup and rendering system, like “users/show” …\n",null,0],["ActionView::UnboundTemplate","","rails/classes/ActionView/UnboundTemplate.html","","",null,0],["ActionView::VERSION","","rails/classes/ActionView/VERSION.html","","",null,0],["ActionView::ViewPaths","","rails/classes/ActionView/ViewPaths.html","","",null,0],["ActionView::ViewPaths::ClassMethods","","rails/classes/ActionView/ViewPaths/ClassMethods.html","","",null,0],["ActiveJob","","rails/classes/ActiveJob.html","","",null,0],["ActiveJob::Arguments","","rails/classes/ActiveJob/Arguments.html","","",null,0],["ActiveJob::Arguments::Hash","","rails/classes/ActiveJob/Arguments/Hash.html","","",null,0],["ActiveJob::Base","","rails/classes/ActiveJob/Base.html","","<p>Active Job\n<p>Active Job objects can be configured to work with different backend queuing frameworks. To …\n",null,0],["ActiveJob::Callbacks","","rails/classes/ActiveJob/Callbacks.html","","<p>Active Job Callbacks\n<p>Active Job provides hooks during the life cycle of a job. Callbacks allow you to …\n",null,0],["ActiveJob::Callbacks::ClassMethods","","rails/classes/ActiveJob/Callbacks/ClassMethods.html","","<p>These methods will be included into any Active Job object, adding callbacks for <code>perform</code> and <code>enqueue</code> methods. …\n",null,0],["ActiveJob::Core","","rails/classes/ActiveJob/Core.html","","<p>Provides general behavior that will be included into every Active Job object that inherits from ActiveJob::Base …\n",null,0],["ActiveJob::Core::ClassMethods","","rails/classes/ActiveJob/Core/ClassMethods.html","","<p>These methods will be included into any Active Job object, adding helpers for de/serialization and creation …\n",null,0],["ActiveJob::DeserializationError","","rails/classes/ActiveJob/DeserializationError.html","","<p>Raised when an exception is raised during job arguments deserialization.\n<p>Wraps the original exception …\n",null,0],["ActiveJob::EnqueueError","","rails/classes/ActiveJob/EnqueueError.html","","<p>Can be raised by adapters if they wish to communicate to the caller a reason why the adapter was unexpectedly …\n",null,0],["ActiveJob::Enqueuing","","rails/classes/ActiveJob/Enqueuing.html","","",null,0],["ActiveJob::Enqueuing::ClassMethods","","rails/classes/ActiveJob/Enqueuing/ClassMethods.html","","<p>Includes the <code>perform_later</code> method for job initialization.\n",null,0],["ActiveJob::Exceptions","","rails/classes/ActiveJob/Exceptions.html","","<p>Provides behavior for retrying and discarding jobs on exceptions.\n",null,0],["ActiveJob::Exceptions::ClassMethods","","rails/classes/ActiveJob/Exceptions/ClassMethods.html","","",null,0],["ActiveJob::Execution","","rails/classes/ActiveJob/Execution.html","","<p>Active Job Execution\n<p>Provides methods to execute jobs immediately, and wraps job execution so that exceptions …\n",null,0],["ActiveJob::Execution::ClassMethods","","rails/classes/ActiveJob/Execution/ClassMethods.html","","<p>Includes methods for executing and performing jobs instantly.\n",null,0],["ActiveJob::QueueAdapter","","rails/classes/ActiveJob/QueueAdapter.html","","",null,0],["ActiveJob::QueueAdapter::ClassMethods","","rails/classes/ActiveJob/QueueAdapter/ClassMethods.html","","<p>Includes the setter method for changing the active queue adapter.\n",null,0],["ActiveJob::QueueAdapters","","rails/classes/ActiveJob/QueueAdapters.html","","<p>Active Job adapters\n<p>Active Job has adapters for the following queuing backends:\n<p>Backburner\n",null,0],["ActiveJob::QueueAdapters::AsyncAdapter","","rails/classes/ActiveJob/QueueAdapters/AsyncAdapter.html","","<p>Active Job Async adapter\n<p>The Async adapter runs jobs with an in-process thread pool.\n<p>This is the default …\n",null,0],["ActiveJob::QueueAdapters::BackburnerAdapter","","rails/classes/ActiveJob/QueueAdapters/BackburnerAdapter.html","","<p>Backburner adapter for Active Job\n<p>Backburner is a beanstalkd-powered job queue that can handle a very …\n",null,0],["ActiveJob::QueueAdapters::DelayedJobAdapter","","rails/classes/ActiveJob/QueueAdapters/DelayedJobAdapter.html","","<p>Delayed Job adapter for Active Job\n<p>Delayed::Job (or DJ) encapsulates the common pattern of asynchronously …\n",null,0],["ActiveJob::QueueAdapters::InlineAdapter","","rails/classes/ActiveJob/QueueAdapters/InlineAdapter.html","","<p>Active Job Inline adapter\n<p>When enqueuing jobs with the Inline adapter the job will be executed immediately. …\n",null,0],["ActiveJob::QueueAdapters::QueAdapter","","rails/classes/ActiveJob/QueueAdapters/QueAdapter.html","","<p>Que adapter for Active Job\n<p>Que is a high-performance alternative to DelayedJob or QueueClassic that improves …\n",null,0],["ActiveJob::QueueAdapters::QueueClassicAdapter","","rails/classes/ActiveJob/QueueAdapters/QueueClassicAdapter.html","","<p>queue_classic adapter for Active Job\n<p>queue_classic provides a simple interface to a PostgreSQL-backed …\n",null,0],["ActiveJob::QueueAdapters::ResqueAdapter","","rails/classes/ActiveJob/QueueAdapters/ResqueAdapter.html","","<p>Resque adapter for Active Job\n<p>Resque (pronounced like “rescue”) is a Redis-backed library for …\n",null,0],["ActiveJob::QueueAdapters::SidekiqAdapter","","rails/classes/ActiveJob/QueueAdapters/SidekiqAdapter.html","","<p>Sidekiq adapter for Active Job\n<p>Simple, efficient background processing for Ruby. Sidekiq uses threads …\n",null,0],["ActiveJob::QueueAdapters::SneakersAdapter","","rails/classes/ActiveJob/QueueAdapters/SneakersAdapter.html","","<p>Sneakers adapter for Active Job\n<p>A high-performance RabbitMQ background processing framework for Ruby. …\n",null,0],["ActiveJob::QueueAdapters::SuckerPunchAdapter","","rails/classes/ActiveJob/QueueAdapters/SuckerPunchAdapter.html","","<p>Sucker Punch adapter for Active Job\n<p>Sucker Punch is a single-process Ruby asynchronous processing library. …\n",null,0],["ActiveJob::QueueName","","rails/classes/ActiveJob/QueueName.html","","",null,0],["ActiveJob::QueueName::ClassMethods","","rails/classes/ActiveJob/QueueName/ClassMethods.html","","<p>Includes the ability to override the default queue name and prefix.\n",null,0],["ActiveJob::QueuePriority","","rails/classes/ActiveJob/QueuePriority.html","","",null,0],["ActiveJob::QueuePriority::ClassMethods","","rails/classes/ActiveJob/QueuePriority/ClassMethods.html","","<p>Includes the ability to override the default queue priority.\n",null,0],["ActiveJob::SerializationError","","rails/classes/ActiveJob/SerializationError.html","","<p>Raised when an unsupported argument type is set as a job argument. We currently support String, Integer …\n",null,0],["ActiveJob::Serializers","","rails/classes/ActiveJob/Serializers.html","","",null,0],["ActiveJob::Serializers::ObjectSerializer","","rails/classes/ActiveJob/Serializers/ObjectSerializer.html","","<p>Base class for serializing and deserializing custom objects.\n<p>Example:\n\n<pre><code>class MoneySerializer &lt; ActiveJob::Serializers::ObjectSerializer ...\n</code></pre>\n",null,0],["ActiveJob::Serializers::RangeSerializer","","rails/classes/ActiveJob/Serializers/RangeSerializer.html","","",null,0],["ActiveJob::VERSION","","rails/classes/ActiveJob/VERSION.html","","",null,0],["ActiveModel","","rails/classes/ActiveModel.html","","",null,0],["ActiveModel::API","","rails/classes/ActiveModel/API.html","","<p>Active Model API\n<p>Includes the required interface for an object to interact with Action Pack and Action …\n",null,0],["ActiveModel::AttributeAssignment","","rails/classes/ActiveModel/AttributeAssignment.html","","",null,0],["ActiveModel::AttributeMethods","","rails/classes/ActiveModel/AttributeMethods.html","","<p>Active Model Attribute Methods\n<p>Provides a way to add prefixes and suffixes to your methods as well as …\n",null,0],["ActiveModel::AttributeMethods::ClassMethods","","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html","","",null,0],["ActiveModel::Attributes","","rails/classes/ActiveModel/Attributes.html","","",null,0],["ActiveModel::Attributes::ClassMethods","","rails/classes/ActiveModel/Attributes/ClassMethods.html","","",null,0],["ActiveModel::Callbacks","","rails/classes/ActiveModel/Callbacks.html","","<p>Active Model Callbacks\n<p>Provides an interface for any class to have Active Record like callbacks.\n<p>Like the …\n",null,0],["ActiveModel::Conversion","","rails/classes/ActiveModel/Conversion.html","","<p>Active Model Conversion\n<p>Handles default conversions: to_model, to_key, to_param, and to_partial_path. …\n",null,0],["ActiveModel::Dirty","","rails/classes/ActiveModel/Dirty.html","","<p>Active Model Dirty\n<p>Provides a way to track changes in your object in the same way as Active Record does. …\n",null,0],["ActiveModel::EachValidator","","rails/classes/ActiveModel/EachValidator.html","","<p><code>EachValidator</code> is a validator which iterates through the attributes given in the options hash invoking …\n",null,0],["ActiveModel::Error","","rails/classes/ActiveModel/Error.html","","<p>Active Model Error\n<p>Represents one single error\n",null,0],["ActiveModel::Errors","","rails/classes/ActiveModel/Errors.html","","<p>Active Model Errors\n<p>Provides error related functionalities you can include in your object for handling …\n",null,0],["ActiveModel::ForbiddenAttributesError","","rails/classes/ActiveModel/ForbiddenAttributesError.html","","<p>Raised when forbidden attributes are used for mass assignment.\n\n<pre><code>class Person &lt; ActiveRecord::Base\nend\n ...\n</code></pre>\n",null,0],["ActiveModel::Lint","","rails/classes/ActiveModel/Lint.html","","",null,0],["ActiveModel::Lint::Tests","","rails/classes/ActiveModel/Lint/Tests.html","","<p>Active Model Lint Tests\n<p>You can test whether an object is compliant with the Active Model API by including …\n",null,0],["ActiveModel::MissingAttributeError","","rails/classes/ActiveModel/MissingAttributeError.html","","<p>Raised when an attribute is not defined.\n\n<pre><code>class User &lt; ActiveRecord::Base\n  has_many :pets\nend\n\nuser = ...\n</code></pre>\n",null,0],["ActiveModel::Model","","rails/classes/ActiveModel/Model.html","","<p>Active Model Basic Model\n<p>Allows implementing models similar to ActiveRecord::Base. Includes ActiveModel::API …\n",null,0],["ActiveModel::Name","","rails/classes/ActiveModel/Name.html","","",null,0],["ActiveModel::Naming","","rails/classes/ActiveModel/Naming.html","","<p>Active Model Naming\n<p>Creates a <code>model_name</code> method on your object.\n<p>To implement, just extend ActiveModel::Naming …\n",null,0],["ActiveModel::NestedError","","rails/classes/ActiveModel/NestedError.html","","",null,0],["ActiveModel::RangeError","","rails/classes/ActiveModel/RangeError.html","","<p>Raised when attribute values are out of range.\n",null,0],["ActiveModel::SecurePassword","","rails/classes/ActiveModel/SecurePassword.html","","",null,0],["ActiveModel::SecurePassword::ClassMethods","","rails/classes/ActiveModel/SecurePassword/ClassMethods.html","","",null,0],["ActiveModel::SecurePassword::InstanceMethodsOnActivation","","rails/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html","","",null,0],["ActiveModel::Serialization","","rails/classes/ActiveModel/Serialization.html","","<p>Active Model Serialization\n<p>Provides a basic serialization to a serializable_hash for your objects.\n<p>A minimal …\n",null,0],["ActiveModel::Serializers","","rails/classes/ActiveModel/Serializers.html","","",null,0],["ActiveModel::Serializers::JSON","","rails/classes/ActiveModel/Serializers/JSON.html","","<p>Active Model JSON Serializer\n",null,0],["ActiveModel::StrictValidationFailed","","rails/classes/ActiveModel/StrictValidationFailed.html","","<p>Raised when a validation cannot be corrected by end users and are considered exceptional.\n\n<pre><code>class Person ...\n</code></pre>\n",null,0],["ActiveModel::Translation","","rails/classes/ActiveModel/Translation.html","","<p>Active Model Translation\n<p>Provides integration between your object and the Rails internationalization (i18n) …\n",null,0],["ActiveModel::Type","","rails/classes/ActiveModel/Type.html","","",null,0],["ActiveModel::Type::Boolean","","rails/classes/ActiveModel/Type/Boolean.html","","<p>Active Model Type Boolean\n<p>A class that behaves like a boolean type, including rules for coercion of user …\n",null,0],["ActiveModel::Type::Helpers","","rails/classes/ActiveModel/Type/Helpers.html","","",null,0],["ActiveModel::Type::Helpers::AcceptsMultiparameterTime","","rails/classes/ActiveModel/Type/Helpers/AcceptsMultiparameterTime.html","","",null,0],["ActiveModel::Type::Helpers::AcceptsMultiparameterTime::InstanceMethods","","rails/classes/ActiveModel/Type/Helpers/AcceptsMultiparameterTime/InstanceMethods.html","","",null,0],["ActiveModel::Type::Helpers::Mutable","","rails/classes/ActiveModel/Type/Helpers/Mutable.html","","",null,0],["ActiveModel::Type::Helpers::Numeric","","rails/classes/ActiveModel/Type/Helpers/Numeric.html","","",null,0],["ActiveModel::Type::Helpers::TimeValue","","rails/classes/ActiveModel/Type/Helpers/TimeValue.html","","",null,0],["ActiveModel::Type::Helpers::Timezone","","rails/classes/ActiveModel/Type/Helpers/Timezone.html","","",null,0],["ActiveModel::Type::Value","","rails/classes/ActiveModel/Type/Value.html","","",null,0],["ActiveModel::UnknownAttributeError","","rails/classes/ActiveModel/UnknownAttributeError.html","","<p>Raised when unknown attributes are supplied via mass assignment.\n\n<pre><code>class Person\n  include ActiveModel::AttributeAssignment ...\n</code></pre>\n",null,0],["ActiveModel::VERSION","","rails/classes/ActiveModel/VERSION.html","","",null,0],["ActiveModel::ValidationError","","rails/classes/ActiveModel/ValidationError.html","","<p>Active Model ValidationError\n<p>Raised by <code>validate!</code> when the model is invalid. Use the <code>model</code> method to retrieve …\n",null,0],["ActiveModel::Validations","","rails/classes/ActiveModel/Validations.html","","<p>Active Model Validations\n<p>Provides a full validation framework to your objects.\n<p>A minimal implementation …\n",null,0],["ActiveModel::Validations::AcceptanceValidator","","rails/classes/ActiveModel/Validations/AcceptanceValidator.html","","",null,0],["ActiveModel::Validations::AcceptanceValidator::LazilyDefineAttributes","","rails/classes/ActiveModel/Validations/AcceptanceValidator/LazilyDefineAttributes.html","","",null,0],["ActiveModel::Validations::Callbacks","","rails/classes/ActiveModel/Validations/Callbacks.html","","<p>Active Model Validation Callbacks\n<p>Provides an interface for any class to have <code>before_validation</code> and <code>after_validation</code> …\n",null,0],["ActiveModel::Validations::Callbacks::ClassMethods","","rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html","","",null,0],["ActiveModel::Validations::ClassMethods","","rails/classes/ActiveModel/Validations/ClassMethods.html","","",null,0],["ActiveModel::Validations::HelperMethods","","rails/classes/ActiveModel/Validations/HelperMethods.html","","",null,0],["ActiveModel::Validator","","rails/classes/ActiveModel/Validator.html","","<p>Active Model Validator\n<p>A simple base class that can be used along with ActiveModel::Validations::ClassMethods.validates_with …\n",null,0],["ActiveRecord","","rails/classes/ActiveRecord.html","","",null,0],["ActiveRecord::ActiveJobRequiredError","","rails/classes/ActiveRecord/ActiveJobRequiredError.html","","<p>Raised when trying to use a feature in Active Record which requires Active Job but the gem is not present. …\n",null,0],["ActiveRecord::ActiveRecordError","","rails/classes/ActiveRecord/ActiveRecordError.html","","<p>Active Record Errors\n<p>Generic Active Record exception class.\n",null,0],["ActiveRecord::AdapterNotFound","","rails/classes/ActiveRecord/AdapterNotFound.html","","<p>Raised when Active Record cannot find database adapter specified in <code>config/database.yml</code> or programmatically. …\n",null,0],["ActiveRecord::AdapterNotSpecified","","rails/classes/ActiveRecord/AdapterNotSpecified.html","","<p>Raised when adapter not specified on connection (or configuration file <code>config/database.yml</code> misses adapter …\n",null,0],["ActiveRecord::AdapterTimeout","","rails/classes/ActiveRecord/AdapterTimeout.html","","<p>AdapterTimeout will be raised when database clients times out while waiting from the server.\n",null,0],["ActiveRecord::Aggregations","","rails/classes/ActiveRecord/Aggregations.html","","<p>See ActiveRecord::Aggregations::ClassMethods for documentation\n",null,0],["ActiveRecord::Aggregations::ClassMethods","","rails/classes/ActiveRecord/Aggregations/ClassMethods.html","","<p>Active Record implements aggregation through a macro-like class method called #composed_of for representing …\n",null,0],["ActiveRecord::AssociationTypeMismatch","","rails/classes/ActiveRecord/AssociationTypeMismatch.html","","<p>Raised when an object assigned to an association has an incorrect type.\n\n<pre><code>class Ticket &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["ActiveRecord::Associations","","rails/classes/ActiveRecord/Associations.html","","",null,0],["ActiveRecord::Associations::ClassMethods","","rails/classes/ActiveRecord/Associations/ClassMethods.html","","<p>Associations are a set of macro-like class methods for tying objects together through foreign keys.  …\n",null,0],["ActiveRecord::Associations::CollectionProxy","","rails/classes/ActiveRecord/Associations/CollectionProxy.html","","<p>Collection proxies in Active Record are middlemen between an <code>association</code>, and its <code>target</code> result set. …\n",null,0],["ActiveRecord::Associations::Preloader","","rails/classes/ActiveRecord/Associations/Preloader.html","","",null,0],["ActiveRecord::Associations::Preloader::Association","","rails/classes/ActiveRecord/Associations/Preloader/Association.html","","",null,0],["ActiveRecord::Associations::Preloader::Association::LoaderQuery","","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderQuery.html","","",null,0],["ActiveRecord::Associations::Preloader::Association::LoaderRecords","","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderRecords.html","","",null,0],["ActiveRecord::AsynchronousQueryInsideTransactionError","","rails/classes/ActiveRecord/AsynchronousQueryInsideTransactionError.html","","<p>AsynchronousQueryInsideTransactionError will be raised when attempting to perform an asynchronous query …\n",null,0],["ActiveRecord::AttributeAssignment","","rails/classes/ActiveRecord/AttributeAssignment.html","","",null,0],["ActiveRecord::AttributeAssignmentError","","rails/classes/ActiveRecord/AttributeAssignmentError.html","","<p>Raised when an error occurred while doing a mass assignment to an attribute through the ActiveRecord::Base#attributes= …\n",null,0],["ActiveRecord::AttributeMethods","","rails/classes/ActiveRecord/AttributeMethods.html","","<p>Active Record Attribute Methods\n",null,0],["ActiveRecord::AttributeMethods::BeforeTypeCast","","rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html","","<p>Active Record Attribute Methods Before Type Cast\n<p>ActiveRecord::AttributeMethods::BeforeTypeCast provides …\n",null,0],["ActiveRecord::AttributeMethods::ClassMethods","","rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::Dirty","","rails/classes/ActiveRecord/AttributeMethods/Dirty.html","","",null,0],["ActiveRecord::AttributeMethods::Dirty::ClassMethods","","rails/classes/ActiveRecord/AttributeMethods/Dirty/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::PrimaryKey","","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html","","",null,0],["ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::Query","","rails/classes/ActiveRecord/AttributeMethods/Query.html","","",null,0],["ActiveRecord::AttributeMethods::Read","","rails/classes/ActiveRecord/AttributeMethods/Read.html","","",null,0],["ActiveRecord::AttributeMethods::Serialization","","rails/classes/ActiveRecord/AttributeMethods/Serialization.html","","",null,0],["ActiveRecord::AttributeMethods::Serialization::ClassMethods","","rails/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html","","",null,0],["ActiveRecord::AttributeMethods::Serialization::ColumnNotSerializableError","","rails/classes/ActiveRecord/AttributeMethods/Serialization/ColumnNotSerializableError.html","","",null,0],["ActiveRecord::AttributeMethods::TimeZoneConversion","","rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion.html","","",null,0],["ActiveRecord::AttributeMethods::Write","","rails/classes/ActiveRecord/AttributeMethods/Write.html","","",null,0],["ActiveRecord::Attributes","","rails/classes/ActiveRecord/Attributes.html","","<p>See ActiveRecord::Attributes::ClassMethods for documentation\n",null,0],["ActiveRecord::Attributes::ClassMethods","","rails/classes/ActiveRecord/Attributes/ClassMethods.html","","",null,0],["ActiveRecord::AutosaveAssociation","","rails/classes/ActiveRecord/AutosaveAssociation.html","","<p>Active Record Autosave Association\n<p>AutosaveAssociation is a module that takes care of automatically saving …\n",null,0],["ActiveRecord::Base","","rails/classes/ActiveRecord/Base.html","","<p>Active Record\n<p>Active Record objects don’t specify their attributes directly, but rather infer them …\n",null,0],["ActiveRecord::Batches","","rails/classes/ActiveRecord/Batches.html","","",null,0],["ActiveRecord::Batches::BatchEnumerator","","rails/classes/ActiveRecord/Batches/BatchEnumerator.html","","",null,0],["ActiveRecord::Calculations","","rails/classes/ActiveRecord/Calculations.html","","",null,0],["ActiveRecord::Callbacks","","rails/classes/ActiveRecord/Callbacks.html","","<p>Active Record Callbacks\n<p>Callbacks are hooks into the life cycle of an Active Record object that allow …\n",null,0],["ActiveRecord::Callbacks::ClassMethods","","rails/classes/ActiveRecord/Callbacks/ClassMethods.html","","",null,0],["ActiveRecord::ConfigurationError","","rails/classes/ActiveRecord/ConfigurationError.html","","<p>Raised when association is being configured improperly or user tries to use offset and limit together …\n",null,0],["ActiveRecord::ConnectionAdapters","","rails/classes/ActiveRecord/ConnectionAdapters.html","","",null,0],["ActiveRecord::ConnectionAdapters::AbstractAdapter","","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html","","<p>Active Record supports multiple database systems. AbstractAdapter and related classes form the abstraction …\n",null,0],["ActiveRecord::ConnectionAdapters::AbstractAdapter::Version","","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter/Version.html","","",null,0],["ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html","","",null,0],["ActiveRecord::ConnectionAdapters::Column","","rails/classes/ActiveRecord/ConnectionAdapters/Column.html","","",null,0],["ActiveRecord::ConnectionAdapters::ColumnMethods","","rails/classes/ActiveRecord/ConnectionAdapters/ColumnMethods.html","","",null,0],["ActiveRecord::ConnectionAdapters::ConnectionHandler","","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html","","<p>ConnectionHandler is a collection of ConnectionPool objects. It is used for keeping separate connection …\n",null,0],["ActiveRecord::ConnectionAdapters::ConnectionPool","","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html","","<p>Connection pool base class for managing Active Record database connections.\n<p>Introduction\n<p>A connection pool …\n",null,0],["ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html","","<p>Threadsafe, fair, LIFO queue.  Meant to be used by ConnectionPool with which it shares a Monitor.\n",null,0],["ActiveRecord::ConnectionAdapters::ConnectionPool::Reaper","","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Reaper.html","","<p>Every <code>frequency</code> seconds, the reaper will call <code>reap</code> and <code>flush</code> on <code>pool</code>. A reaper instantiated with a zero …\n",null,0],["ActiveRecord::ConnectionAdapters::DatabaseLimits","","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html","","",null,0],["ActiveRecord::ConnectionAdapters::DatabaseStatements","","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::Deduplicable","","rails/classes/ActiveRecord/ConnectionAdapters/Deduplicable.html","","",null,0],["ActiveRecord::ConnectionAdapters::Deduplicable::ClassMethods","","rails/classes/ActiveRecord/ConnectionAdapters/Deduplicable/ClassMethods.html","","",null,0],["ActiveRecord::ConnectionAdapters::MySQL","","rails/classes/ActiveRecord/ConnectionAdapters/MySQL.html","","",null,0],["ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html","","",null,0],["ActiveRecord::ConnectionAdapters::MySQL::DatabaseStatements","","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/DatabaseStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::MySQL::Table","","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/Table.html","","",null,0],["ActiveRecord::ConnectionAdapters::MySQL::TableDefinition","","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/TableDefinition.html","","",null,0],["ActiveRecord::ConnectionAdapters::Mysql2Adapter","","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html","","",null,0],["ActiveRecord::ConnectionAdapters::NullColumn","","rails/classes/ActiveRecord/ConnectionAdapters/NullColumn.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::AlterTable","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/AlterTable.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::DatabaseStatements","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/DatabaseStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::OID","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/OID.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Bit","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/OID/Bit.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Bit::Data","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/OID/Bit/Data.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting::IntegerOutOf64BitRange","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting/IntegerOutOf64BitRange.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::Table","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Table.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::TableDefinition","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/TableDefinition.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQL::TypeMetadata","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/TypeMetadata.html","","",null,0],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html","","<p>The PostgreSQL adapter works with the native C (github.com/ged/ruby-pg) driver.\n<p>Options:\n<p><code>:host</code> - Defaults …\n",null,0],["ActiveRecord::ConnectionAdapters::QueryCache","","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html","","",null,0],["ActiveRecord::ConnectionAdapters::QueryCache::ConnectionPoolConfiguration","","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache/ConnectionPoolConfiguration.html","","",null,0],["ActiveRecord::ConnectionAdapters::Quoting","","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html","","",null,0],["ActiveRecord::ConnectionAdapters::RealTransaction","","rails/classes/ActiveRecord/ConnectionAdapters/RealTransaction.html","","",null,0],["ActiveRecord::ConnectionAdapters::SQLite3","","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3.html","","",null,0],["ActiveRecord::ConnectionAdapters::SQLite3::DatabaseStatements","","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3/DatabaseStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::SQLite3::TableDefinition","","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3/TableDefinition.html","","",null,0],["ActiveRecord::ConnectionAdapters::SQLite3Adapter","","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html","","<p>The SQLite3 adapter works with the sqlite3-ruby drivers (available as gem from rubygems.org/gems/sqlite3 …\n",null,0],["ActiveRecord::ConnectionAdapters::SavepointTransaction","","rails/classes/ActiveRecord/ConnectionAdapters/SavepointTransaction.html","","",null,0],["ActiveRecord::ConnectionAdapters::Savepoints","","rails/classes/ActiveRecord/ConnectionAdapters/Savepoints.html","","",null,0],["ActiveRecord::ConnectionAdapters::SchemaCache","","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html","","",null,0],["ActiveRecord::ConnectionAdapters::SchemaStatements","","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html","","",null,0],["ActiveRecord::ConnectionAdapters::SqlTypeMetadata","","rails/classes/ActiveRecord/ConnectionAdapters/SqlTypeMetadata.html","","",null,0],["ActiveRecord::ConnectionAdapters::Table","","rails/classes/ActiveRecord/ConnectionAdapters/Table.html","","<p>Represents an SQL table in an abstract way for updating a table. Also see TableDefinition and connection.create_table …\n",null,0],["ActiveRecord::ConnectionAdapters::TableDefinition","","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html","","<p>Represents the schema of an SQL table in an abstract way. This class provides methods for manipulating …\n",null,0],["ActiveRecord::ConnectionAdapters::TransactionState","","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html","","",null,0],["ActiveRecord::ConnectionHandling","","rails/classes/ActiveRecord/ConnectionHandling.html","","",null,0],["ActiveRecord::ConnectionNotEstablished","","rails/classes/ActiveRecord/ConnectionNotEstablished.html","","<p>Raised when connection to the database could not been established (for example when ActiveRecord::Base.connection= …\n",null,0],["ActiveRecord::ConnectionTimeoutError","","rails/classes/ActiveRecord/ConnectionTimeoutError.html","","<p>Raised when a connection could not be obtained within the connection acquisition timeout period: because …\n",null,0],["ActiveRecord::Core","","rails/classes/ActiveRecord/Core.html","","",null,0],["ActiveRecord::Core::ClassMethods","","rails/classes/ActiveRecord/Core/ClassMethods.html","","",null,0],["ActiveRecord::Core::InspectionMask","","rails/classes/ActiveRecord/Core/InspectionMask.html","","",null,0],["ActiveRecord::CounterCache","","rails/classes/ActiveRecord/CounterCache.html","","<p>Active Record Counter Cache\n",null,0],["ActiveRecord::CounterCache::ClassMethods","","rails/classes/ActiveRecord/CounterCache/ClassMethods.html","","",null,0],["ActiveRecord::DangerousAttributeError","","rails/classes/ActiveRecord/DangerousAttributeError.html","","<p>Raised when attribute has a name reserved by Active Record (when attribute has name of one of Active …\n",null,0],["ActiveRecord::DatabaseAlreadyExists","","rails/classes/ActiveRecord/DatabaseAlreadyExists.html","","<p>Raised when creating a database if it exists.\n",null,0],["ActiveRecord::DatabaseConfigurations","","rails/classes/ActiveRecord/DatabaseConfigurations.html","","<p>ActiveRecord::DatabaseConfigurations returns an array of DatabaseConfig objects (either a HashConfig …\n",null,0],["ActiveRecord::DatabaseConfigurations::HashConfig","","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html","","<p>A HashConfig object is created for each database configuration entry that is created from a hash.\n<p>A hash …\n",null,0],["ActiveRecord::DatabaseConfigurations::InvalidConfigurationError","","rails/classes/ActiveRecord/DatabaseConfigurations/InvalidConfigurationError.html","","",null,0],["ActiveRecord::DatabaseConfigurations::UrlConfig","","rails/classes/ActiveRecord/DatabaseConfigurations/UrlConfig.html","","<p>A UrlConfig object is created for each database configuration entry that is created from a URL. This …\n",null,0],["ActiveRecord::DatabaseConnectionError","","rails/classes/ActiveRecord/DatabaseConnectionError.html","","<p>Raised when connection to the database could not been established because it was not able to connect …\n",null,0],["ActiveRecord::Deadlocked","","rails/classes/ActiveRecord/Deadlocked.html","","<p>Deadlocked will be raised when a transaction is rolled back by the database when a deadlock is encountered. …\n",null,0],["ActiveRecord::DelegatedType","","rails/classes/ActiveRecord/DelegatedType.html","","<p>Delegated types\n<p>Class hierarchies can map to relational database tables in many ways. Active Record, for …\n",null,0],["ActiveRecord::DestroyAssociationAsyncError","","rails/classes/ActiveRecord/DestroyAssociationAsyncError.html","","",null,0],["ActiveRecord::DestroyAssociationAsyncJob","","rails/classes/ActiveRecord/DestroyAssociationAsyncJob.html","","<p>Job to destroy the records associated with a destroyed record in background.\n",null,0],["ActiveRecord::DynamicMatchers","","rails/classes/ActiveRecord/DynamicMatchers.html","","",null,0],["ActiveRecord::DynamicMatchers::FindBy","","rails/classes/ActiveRecord/DynamicMatchers/FindBy.html","","",null,0],["ActiveRecord::DynamicMatchers::FindByBang","","rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html","","",null,0],["ActiveRecord::DynamicMatchers::Method","","rails/classes/ActiveRecord/DynamicMatchers/Method.html","","",null,0],["ActiveRecord::EagerLoadPolymorphicError","","rails/classes/ActiveRecord/EagerLoadPolymorphicError.html","","<p>This error is raised when trying to eager load a polymorphic association using a JOIN. Eager loading …\n",null,0],["ActiveRecord::Encryption","","rails/classes/ActiveRecord/Encryption.html","","",null,0],["ActiveRecord::Encryption::Cipher","","rails/classes/ActiveRecord/Encryption/Cipher.html","","<p>The algorithm used for encrypting and decrypting <code>Message</code> objects.\n<p>It uses AES-256-GCM. It will generate …\n",null,0],["ActiveRecord::Encryption::Cipher::Aes256Gcm","","rails/classes/ActiveRecord/Encryption/Cipher/Aes256Gcm.html","","<p>A 256-GCM cipher.\n<p>By default it will use random initialization vectors. For deterministic encryption, …\n",null,0],["ActiveRecord::Encryption::Config","","rails/classes/ActiveRecord/Encryption/Config.html","","<p>Container of configuration options\n",null,0],["ActiveRecord::Encryption::Configurable","","rails/classes/ActiveRecord/Encryption/Configurable.html","","<p>Configuration API for ActiveRecord::Encryption\n",null,0],["ActiveRecord::Encryption::Context","","rails/classes/ActiveRecord/Encryption/Context.html","","<p>An encryption context configures the different entities used to perform encryption:\n<p>A key provider\n<p>A key …\n",null,0],["ActiveRecord::Encryption::Contexts","","rails/classes/ActiveRecord/Encryption/Contexts.html","","<p>ActiveRecord::Encryption uses encryption contexts to configure the different entities used to encrypt/decrypt …\n",null,0],["ActiveRecord::Encryption::DerivedSecretKeyProvider","","rails/classes/ActiveRecord/Encryption/DerivedSecretKeyProvider.html","","<p>A KeyProvider that derives keys from passwords.\n",null,0],["ActiveRecord::Encryption::DeterministicKeyProvider","","rails/classes/ActiveRecord/Encryption/DeterministicKeyProvider.html","","<p>A KeyProvider that derives keys from passwords.\n",null,0],["ActiveRecord::Encryption::EncryptableRecord","","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html","","<p>This is the concern mixed in Active Record models to make them encryptable. It adds the <code>encrypts</code> attribute …\n",null,0],["ActiveRecord::Encryption::EncryptedAttributeType","","rails/classes/ActiveRecord/Encryption/EncryptedAttributeType.html","","<p>An ActiveModel::Type::Value that encrypts/decrypts strings of text.\n<p>This is the central piece that connects …\n",null,0],["ActiveRecord::Encryption::EncryptedFixtures","","rails/classes/ActiveRecord/Encryption/EncryptedFixtures.html","","",null,0],["ActiveRecord::Encryption::EncryptingOnlyEncryptor","","rails/classes/ActiveRecord/Encryption/EncryptingOnlyEncryptor.html","","<p>An encryptor that can encrypt data but can’t decrypt it.\n",null,0],["ActiveRecord::Encryption::Encryptor","","rails/classes/ActiveRecord/Encryption/Encryptor.html","","<p>An encryptor exposes the encryption API that ActiveRecord::Encryption::EncryptedAttributeType uses for …\n",null,0],["ActiveRecord::Encryption::EnvelopeEncryptionKeyProvider","","rails/classes/ActiveRecord/Encryption/EnvelopeEncryptionKeyProvider.html","","<p>Implements a simple envelope encryption approach where:\n<p>It generates a random data-encryption key for …\n",null,0],["ActiveRecord::Encryption::Errors","","rails/classes/ActiveRecord/Encryption/Errors.html","","",null,0],["ActiveRecord::Encryption::Errors::Base","","rails/classes/ActiveRecord/Encryption/Errors/Base.html","","",null,0],["ActiveRecord::Encryption::Errors::Configuration","","rails/classes/ActiveRecord/Encryption/Errors/Configuration.html","","",null,0],["ActiveRecord::Encryption::Errors::Decryption","","rails/classes/ActiveRecord/Encryption/Errors/Decryption.html","","",null,0],["ActiveRecord::Encryption::Errors::Encoding","","rails/classes/ActiveRecord/Encryption/Errors/Encoding.html","","",null,0],["ActiveRecord::Encryption::Errors::EncryptedContentIntegrity","","rails/classes/ActiveRecord/Encryption/Errors/EncryptedContentIntegrity.html","","",null,0],["ActiveRecord::Encryption::Errors::Encryption","","rails/classes/ActiveRecord/Encryption/Errors/Encryption.html","","",null,0],["ActiveRecord::Encryption::Errors::ForbiddenClass","","rails/classes/ActiveRecord/Encryption/Errors/ForbiddenClass.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicQueries","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries.html","","<p>Automatically expand encrypted arguments to support querying both encrypted and unencrypted data\n<p>Active …\n",null,0],["ActiveRecord::Encryption::ExtendedDeterministicQueries::AdditionalValue","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/AdditionalValue.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicQueries::CoreQueries","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/CoreQueries.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicQueries::EncryptedQueryArgumentProcessor","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/EncryptedQueryArgumentProcessor.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicQueries::ExtendedEncryptableType","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/ExtendedEncryptableType.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicQueries::InWithAdditionalValues","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/InWithAdditionalValues.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicQueries::RelationQueries","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/RelationQueries.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicUniquenessValidator","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicUniquenessValidator.html","","",null,0],["ActiveRecord::Encryption::ExtendedDeterministicUniquenessValidator::EncryptedUniquenessValidator","","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicUniquenessValidator/EncryptedUniquenessValidator.html","","",null,0],["ActiveRecord::Encryption::Key","","rails/classes/ActiveRecord/Encryption/Key.html","","<p>A key is a container for a given <code>secret</code>\n<p>Optionally, it can include <code>public_tags</code>. These tags are meant to …\n",null,0],["ActiveRecord::Encryption::KeyGenerator","","rails/classes/ActiveRecord/Encryption/KeyGenerator.html","","<p>Utility for generating and deriving random keys.\n",null,0],["ActiveRecord::Encryption::KeyProvider","","rails/classes/ActiveRecord/Encryption/KeyProvider.html","","<p>A <code>KeyProvider</code> serves keys:\n<p>An encryption key\n<p>A list of potential decryption keys. Serving multiple decryption …\n",null,0],["ActiveRecord::Encryption::Message","","rails/classes/ActiveRecord/Encryption/Message.html","","<p>A message defines the structure of the data we store in encrypted attributes. It contains:\n<p>An encrypted …\n",null,0],["ActiveRecord::Encryption::MessageSerializer","","rails/classes/ActiveRecord/Encryption/MessageSerializer.html","","<p>A message serializer that serializes <code>Messages</code> with JSON.\n<p>The generated structure is pretty simple:\n\n<pre><code>{\n  ...\n</code></pre>\n",null,0],["ActiveRecord::Encryption::NullEncryptor","","rails/classes/ActiveRecord/Encryption/NullEncryptor.html","","<p>An encryptor that won’t decrypt or encrypt. It will just return the passed values\n",null,0],["ActiveRecord::Encryption::Properties","","rails/classes/ActiveRecord/Encryption/Properties.html","","<p>This is a wrapper for a hash of encryption properties. It is used by <code>Key</code> (public tags) and <code>Message</code> (headers). …\n",null,0],["ActiveRecord::Encryption::ReadOnlyNullEncryptor","","rails/classes/ActiveRecord/Encryption/ReadOnlyNullEncryptor.html","","<p>A <code>NullEncryptor</code> that will raise an error when trying to encrypt data\n<p>This is useful when you want to reveal …\n",null,0],["ActiveRecord::Encryption::Scheme","","rails/classes/ActiveRecord/Encryption/Scheme.html","","<p>A container of attribute encryption options.\n<p>It validates and serves attribute encryption options.\n<p>See …\n",null,0],["ActiveRecord::Enum","","rails/classes/ActiveRecord/Enum.html","","<p>Declare an enum attribute where the values map to integers in the database, but can be queried by name. …\n",null,0],["ActiveRecord::EnvironmentMismatchError","","rails/classes/ActiveRecord/EnvironmentMismatchError.html","","",null,0],["ActiveRecord::ExclusiveConnectionTimeoutError","","rails/classes/ActiveRecord/ExclusiveConnectionTimeoutError.html","","<p>Raised when a pool was unable to get ahold of all its connections to perform a “group” action …\n",null,0],["ActiveRecord::Explain","","rails/classes/ActiveRecord/Explain.html","","",null,0],["ActiveRecord::Faker","","rails/classes/ActiveRecord/Faker.html","","",null,0],["ActiveRecord::FinderMethods","","rails/classes/ActiveRecord/FinderMethods.html","","",null,0],["ActiveRecord::FixtureSet","","rails/classes/ActiveRecord/FixtureSet.html","","<p>Fixtures are a way of organizing data that you want to test against; in short, sample data.\n<p>They are stored …\n",null,0],["ActiveRecord::FixtureSet::ClassCache","","rails/classes/ActiveRecord/FixtureSet/ClassCache.html","","",null,0],["ActiveRecord::FutureResult","","rails/classes/ActiveRecord/FutureResult.html","","",null,0],["ActiveRecord::FutureResult::EventBuffer","","rails/classes/ActiveRecord/FutureResult/EventBuffer.html","","",null,0],["ActiveRecord::Generators","","rails/classes/ActiveRecord/Generators.html","","",null,0],["ActiveRecord::Generators::Migration","","rails/classes/ActiveRecord/Generators/Migration.html","","",null,0],["ActiveRecord::Generators::Migration::ClassMethods","","rails/classes/ActiveRecord/Generators/Migration/ClassMethods.html","","",null,0],["ActiveRecord::ImmutableRelation","","rails/classes/ActiveRecord/ImmutableRelation.html","","<p>Raised when a relation cannot be mutated because it’s already loaded.\n\n<pre><code>class Task &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["ActiveRecord::Inheritance","","rails/classes/ActiveRecord/Inheritance.html","","<p>Single table inheritance\n<p>Active Record allows inheritance by storing the name of the class in a column …\n",null,0],["ActiveRecord::Inheritance::ClassMethods","","rails/classes/ActiveRecord/Inheritance/ClassMethods.html","","",null,0],["ActiveRecord::Integration","","rails/classes/ActiveRecord/Integration.html","","",null,0],["ActiveRecord::Integration::ClassMethods","","rails/classes/ActiveRecord/Integration/ClassMethods.html","","",null,0],["ActiveRecord::InvalidForeignKey","","rails/classes/ActiveRecord/InvalidForeignKey.html","","<p>Raised when a record cannot be inserted or updated because it references a non-existent record, or when …\n",null,0],["ActiveRecord::IrreversibleMigration","","rails/classes/ActiveRecord/IrreversibleMigration.html","","<p>Exception that can be raised to stop migrations from being rolled back. For example the following migration …\n",null,0],["ActiveRecord::IrreversibleOrderError","","rails/classes/ActiveRecord/IrreversibleOrderError.html","","<p>IrreversibleOrderError is raised when a relation’s order is too complex for <code>reverse_order</code> to automatically …\n",null,0],["ActiveRecord::LockWaitTimeout","","rails/classes/ActiveRecord/LockWaitTimeout.html","","<p>LockWaitTimeout will be raised when lock wait timeout exceeded.\n",null,0],["ActiveRecord::Locking","","rails/classes/ActiveRecord/Locking.html","","",null,0],["ActiveRecord::Locking::Optimistic","","rails/classes/ActiveRecord/Locking/Optimistic.html","","<p>What is Optimistic Locking\n<p>Optimistic locking allows multiple users to access the same record for edits, …\n",null,0],["ActiveRecord::Locking::Optimistic::ClassMethods","","rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html","","",null,0],["ActiveRecord::Locking::Pessimistic","","rails/classes/ActiveRecord/Locking/Pessimistic.html","","<p>Locking::Pessimistic provides support for row-level locking using SELECT … FOR UPDATE and other lock …\n",null,0],["ActiveRecord::LogSubscriber","","rails/classes/ActiveRecord/LogSubscriber.html","","",null,0],["ActiveRecord::Middleware","","rails/classes/ActiveRecord/Middleware.html","","",null,0],["ActiveRecord::Middleware::DatabaseSelector","","rails/classes/ActiveRecord/Middleware/DatabaseSelector.html","","<p>The DatabaseSelector Middleware provides a framework for automatically swapping from the primary to the …\n",null,0],["ActiveRecord::Middleware::ShardSelector","","rails/classes/ActiveRecord/Middleware/ShardSelector.html","","<p>The ShardSelector Middleware provides a framework for automatically swapping shards. Rails provides a …\n",null,0],["ActiveRecord::Migration","","rails/classes/ActiveRecord/Migration.html","","<p>Active Record Migrations\n<p>Migrations can manage the evolution of a schema used by several physical databases. …\n",null,0],["ActiveRecord::Migration::CheckPending","","rails/classes/ActiveRecord/Migration/CheckPending.html","","<p>This class is used to verify that all migrations have been run before loading a web page if <code>config.active_record.migration_error</code> …\n",null,0],["ActiveRecord::Migration::CommandRecorder","","rails/classes/ActiveRecord/Migration/CommandRecorder.html","","<p><code>ActiveRecord::Migration::CommandRecorder</code> records commands done during a migration and knows how to reverse …\n",null,0],["ActiveRecord::Migration::Compatibility","","rails/classes/ActiveRecord/Migration/Compatibility.html","","",null,0],["ActiveRecord::Migration::Compatibility::V4_2","","rails/classes/ActiveRecord/Migration/Compatibility/V4_2.html","","",null,0],["ActiveRecord::Migration::Compatibility::V4_2::TableDefinition","","rails/classes/ActiveRecord/Migration/Compatibility/V4_2/TableDefinition.html","","",null,0],["ActiveRecord::Migration::Compatibility::V5_0","","rails/classes/ActiveRecord/Migration/Compatibility/V5_0.html","","",null,0],["ActiveRecord::Migration::Compatibility::V5_0::TableDefinition","","rails/classes/ActiveRecord/Migration/Compatibility/V5_0/TableDefinition.html","","",null,0],["ActiveRecord::Migration::Compatibility::V5_1","","rails/classes/ActiveRecord/Migration/Compatibility/V5_1.html","","",null,0],["ActiveRecord::Migration::Compatibility::V5_2","","rails/classes/ActiveRecord/Migration/Compatibility/V5_2.html","","",null,0],["ActiveRecord::Migration::Compatibility::V5_2::CommandRecorder","","rails/classes/ActiveRecord/Migration/Compatibility/V5_2/CommandRecorder.html","","",null,0],["ActiveRecord::Migration::Compatibility::V5_2::TableDefinition","","rails/classes/ActiveRecord/Migration/Compatibility/V5_2/TableDefinition.html","","",null,0],["ActiveRecord::Migration::Compatibility::V6_0","","rails/classes/ActiveRecord/Migration/Compatibility/V6_0.html","","",null,0],["ActiveRecord::Migration::Compatibility::V6_0::ReferenceDefinition","","rails/classes/ActiveRecord/Migration/Compatibility/V6_0/ReferenceDefinition.html","","",null,0],["ActiveRecord::Migration::Compatibility::V6_0::TableDefinition","","rails/classes/ActiveRecord/Migration/Compatibility/V6_0/TableDefinition.html","","",null,0],["ActiveRecord::Migration::Compatibility::V6_1","","rails/classes/ActiveRecord/Migration/Compatibility/V6_1.html","","",null,0],["ActiveRecord::Migration::Compatibility::V6_1::PostgreSQLCompat","","rails/classes/ActiveRecord/Migration/Compatibility/V6_1/PostgreSQLCompat.html","","",null,0],["ActiveRecord::Migration::Compatibility::V6_1::TableDefinition","","rails/classes/ActiveRecord/Migration/Compatibility/V6_1/TableDefinition.html","","",null,0],["ActiveRecord::MigrationContext","","rails/classes/ActiveRecord/MigrationContext.html","","<p>MigrationContext sets the context in which a migration is run.\n<p>A migration context requires the path to …\n",null,0],["ActiveRecord::MismatchedForeignKey","","rails/classes/ActiveRecord/MismatchedForeignKey.html","","<p>Raised when a foreign key constraint cannot be added because the column type does not match the referenced …\n",null,0],["ActiveRecord::ModelSchema","","rails/classes/ActiveRecord/ModelSchema.html","","",null,0],["ActiveRecord::ModelSchema::ClassMethods","","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html","","",null,0],["ActiveRecord::MultiparameterAssignmentErrors","","rails/classes/ActiveRecord/MultiparameterAssignmentErrors.html","","<p>Raised when there are multiple errors while doing a mass assignment through the ActiveRecord::Base#attributes= …\n",null,0],["ActiveRecord::NestedAttributes","","rails/classes/ActiveRecord/NestedAttributes.html","","",null,0],["ActiveRecord::NestedAttributes::ClassMethods","","rails/classes/ActiveRecord/NestedAttributes/ClassMethods.html","","<p>Active Record Nested Attributes\n<p>Nested attributes allow you to save attributes on associated records through …\n",null,0],["ActiveRecord::NestedAttributes::TooManyRecords","","rails/classes/ActiveRecord/NestedAttributes/TooManyRecords.html","","",null,0],["ActiveRecord::NoDatabaseError","","rails/classes/ActiveRecord/NoDatabaseError.html","","<p>Raised when a given database does not exist.\n",null,0],["ActiveRecord::NoTouching","","rails/classes/ActiveRecord/NoTouching.html","","<p>Active Record No Touching\n",null,0],["ActiveRecord::NoTouching::ClassMethods","","rails/classes/ActiveRecord/NoTouching/ClassMethods.html","","",null,0],["ActiveRecord::NotNullViolation","","rails/classes/ActiveRecord/NotNullViolation.html","","<p>Raised when a record cannot be inserted or updated because it would violate a not null constraint.\n",null,0],["ActiveRecord::Persistence","","rails/classes/ActiveRecord/Persistence.html","","<p>Active Record Persistence\n",null,0],["ActiveRecord::Persistence::ClassMethods","","rails/classes/ActiveRecord/Persistence/ClassMethods.html","","",null,0],["ActiveRecord::PreparedStatementCacheExpired","","rails/classes/ActiveRecord/PreparedStatementCacheExpired.html","","<p>Raised when PostgreSQL returns ‘cached plan must not change result type’ and we cannot retry …\n",null,0],["ActiveRecord::PreparedStatementInvalid","","rails/classes/ActiveRecord/PreparedStatementInvalid.html","","<p>Raised when the number of placeholders in an SQL fragment passed to ActiveRecord::Base.where does not …\n",null,0],["ActiveRecord::QueryAborted","","rails/classes/ActiveRecord/QueryAborted.html","","<p>Superclass for errors that have been aborted (either by client or server).\n",null,0],["ActiveRecord::QueryCache","","rails/classes/ActiveRecord/QueryCache.html","","<p>Active Record Query Cache\n",null,0],["ActiveRecord::QueryCache::ClassMethods","","rails/classes/ActiveRecord/QueryCache/ClassMethods.html","","",null,0],["ActiveRecord::QueryCanceled","","rails/classes/ActiveRecord/QueryCanceled.html","","<p>QueryCanceled will be raised when canceling statement due to user request.\n",null,0],["ActiveRecord::QueryLogs","","rails/classes/ActiveRecord/QueryLogs.html","","<p>Active Record Query Logs\n<p>Automatically tag SQL queries with runtime information.\n<p>Default tags available …\n",null,0],["ActiveRecord::QueryMethods","","rails/classes/ActiveRecord/QueryMethods.html","","",null,0],["ActiveRecord::QueryMethods::WhereChain","","rails/classes/ActiveRecord/QueryMethods/WhereChain.html","","<p>WhereChain objects act as placeholder for queries in which <code>where</code> does not have any parameter. In this …\n",null,0],["ActiveRecord::Querying","","rails/classes/ActiveRecord/Querying.html","","",null,0],["ActiveRecord::RangeError","","rails/classes/ActiveRecord/RangeError.html","","<p>Raised when values that executed are out of range.\n",null,0],["ActiveRecord::ReadOnlyError","","rails/classes/ActiveRecord/ReadOnlyError.html","","<p>Raised when a write to the database is attempted on a read only connection.\n",null,0],["ActiveRecord::ReadOnlyRecord","","rails/classes/ActiveRecord/ReadOnlyRecord.html","","<p>Raised on attempt to update record that is instantiated as read only.\n",null,0],["ActiveRecord::ReadonlyAttributes","","rails/classes/ActiveRecord/ReadonlyAttributes.html","","",null,0],["ActiveRecord::ReadonlyAttributes::ClassMethods","","rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html","","",null,0],["ActiveRecord::RecordInvalid","","rails/classes/ActiveRecord/RecordInvalid.html","","<p>Active Record RecordInvalid\n<p>Raised by ActiveRecord::Base#save! and ActiveRecord::Base#create! when the …\n",null,0],["ActiveRecord::RecordNotDestroyed","","rails/classes/ActiveRecord/RecordNotDestroyed.html","","<p>Raised by ActiveRecord::Base#destroy! when a call to #destroy would return false.\n\n<pre><code>begin\n  complex_operation_that_internally_calls_destroy! ...\n</code></pre>\n",null,0],["ActiveRecord::RecordNotFound","","rails/classes/ActiveRecord/RecordNotFound.html","","<p>Raised when Active Record cannot find a record by given id or set of ids.\n",null,0],["ActiveRecord::RecordNotSaved","","rails/classes/ActiveRecord/RecordNotSaved.html","","<p>Raised by ActiveRecord::Base#save! and ActiveRecord::Base.create! methods when a record is invalid and …\n",null,0],["ActiveRecord::RecordNotUnique","","rails/classes/ActiveRecord/RecordNotUnique.html","","<p>Raised when a record cannot be inserted or updated because it would violate a uniqueness constraint. …\n",null,0],["ActiveRecord::Reflection","","rails/classes/ActiveRecord/Reflection.html","","",null,0],["ActiveRecord::Reflection::ClassMethods","","rails/classes/ActiveRecord/Reflection/ClassMethods.html","","<p>Reflection enables the ability to examine the associations and aggregations of Active Record classes …\n",null,0],["ActiveRecord::Reflection::MacroReflection","","rails/classes/ActiveRecord/Reflection/MacroReflection.html","","<p>Base class for AggregateReflection and AssociationReflection. Objects of AggregateReflection and AssociationReflection …\n",null,0],["ActiveRecord::Relation","","rails/classes/ActiveRecord/Relation.html","","<p>Active Record Relation\n",null,0],["ActiveRecord::Relation::RecordFetchWarning","","rails/classes/ActiveRecord/Relation/RecordFetchWarning.html","","",null,0],["ActiveRecord::Result","","rails/classes/ActiveRecord/Result.html","","<p>This class encapsulates a result returned from calling #exec_query on any database connection adapter. …\n",null,0],["ActiveRecord::Rollback","","rails/classes/ActiveRecord/Rollback.html","","<p>ActiveRecord::Base.transaction uses this exception to distinguish a deliberate rollback from other exceptional …\n",null,0],["ActiveRecord::Sanitization","","rails/classes/ActiveRecord/Sanitization.html","","",null,0],["ActiveRecord::Sanitization::ClassMethods","","rails/classes/ActiveRecord/Sanitization/ClassMethods.html","","",null,0],["ActiveRecord::Schema","","rails/classes/ActiveRecord/Schema.html","","<p>Active Record Schema\n<p>Allows programmers to programmatically define a schema in a portable DSL. This means …\n",null,0],["ActiveRecord::Schema::Definition","","rails/classes/ActiveRecord/Schema/Definition.html","","",null,0],["ActiveRecord::Schema::Definition::ClassMethods","","rails/classes/ActiveRecord/Schema/Definition/ClassMethods.html","","",null,0],["ActiveRecord::Scoping","","rails/classes/ActiveRecord/Scoping.html","","<p>Active Record Named Scopes\n",null,0],["ActiveRecord::Scoping::Default","","rails/classes/ActiveRecord/Scoping/Default.html","","",null,0],["ActiveRecord::Scoping::Default::ClassMethods","","rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html","","",null,0],["ActiveRecord::Scoping::Named","","rails/classes/ActiveRecord/Scoping/Named.html","","",null,0],["ActiveRecord::Scoping::Named::ClassMethods","","rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html","","",null,0],["ActiveRecord::SecureToken","","rails/classes/ActiveRecord/SecureToken.html","","",null,0],["ActiveRecord::SecureToken::ClassMethods","","rails/classes/ActiveRecord/SecureToken/ClassMethods.html","","",null,0],["ActiveRecord::SecureToken::MinimumLengthError","","rails/classes/ActiveRecord/SecureToken/MinimumLengthError.html","","",null,0],["ActiveRecord::Serialization","","rails/classes/ActiveRecord/Serialization.html","","<p>Active Record Serialization\n",null,0],["ActiveRecord::SerializationFailure","","rails/classes/ActiveRecord/SerializationFailure.html","","<p>SerializationFailure will be raised when a transaction is rolled back by the database due to a serialization …\n",null,0],["ActiveRecord::SerializationTypeMismatch","","rails/classes/ActiveRecord/SerializationTypeMismatch.html","","<p>Raised when unserialized object’s type mismatches one specified for serializable field.\n",null,0],["ActiveRecord::SignedId","","rails/classes/ActiveRecord/SignedId.html","","<p>Active Record Signed Id\n",null,0],["ActiveRecord::SignedId::ClassMethods","","rails/classes/ActiveRecord/SignedId/ClassMethods.html","","",null,0],["ActiveRecord::SoleRecordExceeded","","rails/classes/ActiveRecord/SoleRecordExceeded.html","","<p>Raised when Active Record finds multiple records but only expected one.\n",null,0],["ActiveRecord::SpawnMethods","","rails/classes/ActiveRecord/SpawnMethods.html","","",null,0],["ActiveRecord::StaleObjectError","","rails/classes/ActiveRecord/StaleObjectError.html","","<p>Raised on attempt to save stale record. Record is stale when it’s being saved in another query after …\n",null,0],["ActiveRecord::StatementCache","","rails/classes/ActiveRecord/StatementCache.html","","",null,0],["ActiveRecord::StatementCache::PartialQueryCollector","","rails/classes/ActiveRecord/StatementCache/PartialQueryCollector.html","","",null,0],["ActiveRecord::StatementInvalid","","rails/classes/ActiveRecord/StatementInvalid.html","","<p>Superclass for all database execution errors.\n<p>Wraps the underlying database error as <code>cause</code>.\n",null,0],["ActiveRecord::StatementTimeout","","rails/classes/ActiveRecord/StatementTimeout.html","","<p>StatementTimeout will be raised when statement timeout exceeded.\n",null,0],["ActiveRecord::Store","","rails/classes/ActiveRecord/Store.html","","<p>Store gives you a thin wrapper around serialize for the purpose of storing hashes in a single column. …\n",null,0],["ActiveRecord::Store::ClassMethods","","rails/classes/ActiveRecord/Store/ClassMethods.html","","",null,0],["ActiveRecord::StrictLoadingViolationError","","rails/classes/ActiveRecord/StrictLoadingViolationError.html","","<p>Raised on attempt to lazily load records that are marked as strict loading.\n",null,0],["ActiveRecord::SubclassNotFound","","rails/classes/ActiveRecord/SubclassNotFound.html","","<p>Raised when the single-table inheritance mechanism fails to locate the subclass (for example due to improper …\n",null,0],["ActiveRecord::Suppressor","","rails/classes/ActiveRecord/Suppressor.html","","<p>ActiveRecord::Suppressor prevents the receiver from being saved during a given block.\n<p>For example, here’s …\n",null,0],["ActiveRecord::Suppressor::ClassMethods","","rails/classes/ActiveRecord/Suppressor/ClassMethods.html","","",null,0],["ActiveRecord::TableNotSpecified","","rails/classes/ActiveRecord/TableNotSpecified.html","","<p>Raised when a model makes a query but it has not specified an associated table.\n",null,0],["ActiveRecord::Tasks","","rails/classes/ActiveRecord/Tasks.html","","",null,0],["ActiveRecord::Tasks::DatabaseTasks","","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html","","<p>ActiveRecord::Tasks::DatabaseTasks is a utility class, which encapsulates logic behind common tasks used …\n",null,0],["ActiveRecord::Timestamp","","rails/classes/ActiveRecord/Timestamp.html","","<p>Active Record Timestamp\n<p>Active Record automatically timestamps create and update operations if the table …\n",null,0],["ActiveRecord::TransactionIsolationError","","rails/classes/ActiveRecord/TransactionIsolationError.html","","<p>TransactionIsolationError will be raised under the following conditions:\n<p>The adapter does not support …\n",null,0],["ActiveRecord::TransactionRollbackError","","rails/classes/ActiveRecord/TransactionRollbackError.html","","<p>TransactionRollbackError will be raised when a transaction is rolled back by the database due to a serialization …\n",null,0],["ActiveRecord::Transactions","","rails/classes/ActiveRecord/Transactions.html","","<p>See ActiveRecord::Transactions::ClassMethods for documentation.\n",null,0],["ActiveRecord::Transactions::ClassMethods","","rails/classes/ActiveRecord/Transactions/ClassMethods.html","","<p>Active Record Transactions\n<p>Transactions are protective blocks where SQL statements are only permanent …\n",null,0],["ActiveRecord::Translation","","rails/classes/ActiveRecord/Translation.html","","",null,0],["ActiveRecord::Type","","rails/classes/ActiveRecord/Type.html","","",null,0],["ActiveRecord::Type::BigInteger","","rails/classes/ActiveModel/Type/BigInteger.html","","",null,0],["ActiveRecord::Type::Binary","","rails/classes/ActiveModel/Type/Binary.html","","",null,0],["ActiveRecord::Type::Boolean","","rails/classes/ActiveModel/Type/Boolean.html","","<p>Active Model Type Boolean\n<p>A class that behaves like a boolean type, including rules for coercion of user …\n",null,0],["ActiveRecord::Type::Date","","rails/classes/ActiveRecord/Type/Date.html","","",null,0],["ActiveRecord::Type::DateTime","","rails/classes/ActiveRecord/Type/DateTime.html","","",null,0],["ActiveRecord::Type::Decimal","","rails/classes/ActiveModel/Type/Decimal.html","","",null,0],["ActiveRecord::Type::Float","","rails/classes/ActiveModel/Type/Float.html","","",null,0],["ActiveRecord::Type::ImmutableString","","rails/classes/ActiveModel/Type/ImmutableString.html","","",null,0],["ActiveRecord::Type::Integer","","rails/classes/ActiveModel/Type/Integer.html","","",null,0],["ActiveRecord::Type::Internal","","rails/classes/ActiveRecord/Type/Internal.html","","",null,0],["ActiveRecord::Type::Internal::Timezone","","rails/classes/ActiveRecord/Type/Internal/Timezone.html","","",null,0],["ActiveRecord::Type::Json","","rails/classes/ActiveRecord/Type/Json.html","","",null,0],["ActiveRecord::Type::String","","rails/classes/ActiveModel/Type/String.html","","",null,0],["ActiveRecord::Type::Time","","rails/classes/ActiveRecord/Type/Time.html","","",null,0],["ActiveRecord::Type::Value","","rails/classes/ActiveModel/Type/Value.html","","",null,0],["ActiveRecord::UnknownAttributeError","","rails/classes/ActiveModel/UnknownAttributeError.html","","<p>Raised when unknown attributes are supplied via mass assignment.\n\n<pre><code>class Person\n  include ActiveModel::AttributeAssignment ...\n</code></pre>\n",null,0],["ActiveRecord::UnknownAttributeReference","","rails/classes/ActiveRecord/UnknownAttributeReference.html","","<p>UnknownAttributeReference is raised when an unknown and potentially unsafe value is passed to a query …\n",null,0],["ActiveRecord::UnknownPrimaryKey","","rails/classes/ActiveRecord/UnknownPrimaryKey.html","","<p>Raised when a primary key is needed, but not specified in the schema or model.\n",null,0],["ActiveRecord::VERSION","","rails/classes/ActiveRecord/VERSION.html","","",null,0],["ActiveRecord::Validations","","rails/classes/ActiveRecord/Validations.html","","<p>Active Record Validations\n<p>Active Record includes the majority of its validations from ActiveModel::Validations …\n",null,0],["ActiveRecord::Validations::ClassMethods","","rails/classes/ActiveRecord/Validations/ClassMethods.html","","",null,0],["ActiveRecord::ValueTooLong","","rails/classes/ActiveRecord/ValueTooLong.html","","<p>Raised when a record cannot be inserted or updated because a value too long for a column type.\n",null,0],["ActiveRecord::WrappedDatabaseException","","rails/classes/ActiveRecord/WrappedDatabaseException.html","","<p>Defunct wrapper class kept for compatibility. StatementInvalid wraps the original exception now.\n",null,0],["ActiveStorage","","rails/classes/ActiveStorage.html","","",null,0],["ActiveStorage::AnalyzeJob","","rails/classes/ActiveStorage/AnalyzeJob.html","","<p>Provides asynchronous analysis of ActiveStorage::Blob records via ActiveStorage::Blob#analyze_later. …\n",null,0],["ActiveStorage::Analyzer","","rails/classes/ActiveStorage/Analyzer.html","","<p>This is an abstract base class for analyzers, which extract metadata from blobs. See ActiveStorage::Analyzer::VideoAnalyzer …\n",null,0],["ActiveStorage::Analyzer::AudioAnalyzer","","rails/classes/ActiveStorage/Analyzer/AudioAnalyzer.html","","<p>Extracts duration (seconds) and bit_rate (bits/s) from an audio blob.\n<p>Example:\n\n<pre><code>ActiveStorage::Analyzer::AudioAnalyzer.new(blob).metadata ...\n</code></pre>\n",null,0],["ActiveStorage::Analyzer::ImageAnalyzer","","rails/classes/ActiveStorage/Analyzer/ImageAnalyzer.html","","<p>This is an abstract base class for image analyzers, which extract width and height from an image blob. …\n",null,0],["ActiveStorage::Analyzer::ImageAnalyzer::ImageMagick","","rails/classes/ActiveStorage/Analyzer/ImageAnalyzer/ImageMagick.html","","<p>This analyzer relies on the third-party MiniMagick gem. MiniMagick requires the ImageMagick system library. …\n",null,0],["ActiveStorage::Analyzer::ImageAnalyzer::Vips","","rails/classes/ActiveStorage/Analyzer/ImageAnalyzer/Vips.html","","<p>This analyzer relies on the third-party ruby-vips gem. Ruby-vips requires the libvips system library. …\n",null,0],["ActiveStorage::Analyzer::VideoAnalyzer","","rails/classes/ActiveStorage/Analyzer/VideoAnalyzer.html","","<p>Extracts the following from a video blob:\n<p>Width (pixels)\n<p>Height (pixels)\n",null,0],["ActiveStorage::Attached","","rails/classes/ActiveStorage/Attached.html","","<p>Abstract base class for the concrete ActiveStorage::Attached::One and ActiveStorage::Attached::Many classes …\n",null,0],["ActiveStorage::Attached::Many","","rails/classes/ActiveStorage/Attached/Many.html","","<p>Decorated proxy object representing of multiple attachments to a model.\n",null,0],["ActiveStorage::Attached::Model","","rails/classes/ActiveStorage/Attached/Model.html","","<p>Provides the class-level DSL for declaring an Active Record model’s attachments.\n",null,0],["ActiveStorage::Attached::One","","rails/classes/ActiveStorage/Attached/One.html","","<p>Representation of a single attachment to a model.\n",null,0],["ActiveStorage::Attachment","","rails/classes/ActiveStorage/Attachment.html","","<p>Attachments associate records with blobs. Usually that’s a one record-many blobs relationship, but …\n",null,0],["ActiveStorage::BaseController","","rails/classes/ActiveStorage/BaseController.html","","<p>The base class for all Active Storage controllers.\n",null,0],["ActiveStorage::BaseJob","","rails/classes/ActiveStorage/BaseJob.html","","",null,0],["ActiveStorage::Blob","","rails/classes/ActiveStorage/Blob.html","","<p>A blob is a record that contains the metadata about a file and a key for where that file resides on the …\n",null,0],["ActiveStorage::Blob::Analyzable","","rails/classes/ActiveStorage/Blob/Analyzable.html","","",null,0],["ActiveStorage::Blob::Identifiable","","rails/classes/ActiveStorage/Blob/Identifiable.html","","",null,0],["ActiveStorage::Blob::Representable","","rails/classes/ActiveStorage/Blob/Representable.html","","",null,0],["ActiveStorage::Blobs","","rails/classes/ActiveStorage/Blobs.html","","",null,0],["ActiveStorage::Blobs::ProxyController","","rails/classes/ActiveStorage/Blobs/ProxyController.html","","<p>Proxy files through application. This avoids having a redirect and makes files easier to cache.\n<p>WARNING: …\n",null,0],["ActiveStorage::Blobs::RedirectController","","rails/classes/ActiveStorage/Blobs/RedirectController.html","","<p>Take a signed permanent reference for a blob and turn it into an expiring service URL for download.\n<p>WARNING: …\n",null,0],["ActiveStorage::DirectUploadsController","","rails/classes/ActiveStorage/DirectUploadsController.html","","<p>Creates a new blob on the server side in anticipation of a direct-to-service upload from the client side. …\n",null,0],["ActiveStorage::DisableSession","","rails/classes/ActiveStorage/DisableSession.html","","<p>This concern disables the session in order to allow caching by default in some CDNs as CloudFlare.\n",null,0],["ActiveStorage::DiskController","","rails/classes/ActiveStorage/DiskController.html","","<p>Serves files stored with the disk service in the same way that the cloud services do. This means using …\n",null,0],["ActiveStorage::Error","","rails/classes/ActiveStorage/Error.html","","<p>Generic base class for all Active Storage exceptions.\n",null,0],["ActiveStorage::FileNotFoundError","","rails/classes/ActiveStorage/FileNotFoundError.html","","<p>Raised when ActiveStorage::Blob#download is called on a blob where the backing file is no longer present …\n",null,0],["ActiveStorage::Filename","","rails/classes/ActiveStorage/Filename.html","","<p>Encapsulates a string representing a filename to provide convenient access to parts of it and sanitization. …\n",null,0],["ActiveStorage::FixtureSet","","rails/classes/ActiveStorage/FixtureSet.html","","<p>Fixtures are a way of organizing data that you want to test against; in short, sample data.\n<p>To learn more …\n",null,0],["ActiveStorage::IntegrityError","","rails/classes/ActiveStorage/IntegrityError.html","","<p>Raised when uploaded or downloaded data does not match a precomputed checksum. Indicates that a network …\n",null,0],["ActiveStorage::InvariableError","","rails/classes/ActiveStorage/InvariableError.html","","<p>Raised when ActiveStorage::Blob#variant is called on a blob that isn’t variable. Use ActiveStorage::Blob#variable? …\n",null,0],["ActiveStorage::LogSubscriber","","rails/classes/ActiveStorage/LogSubscriber.html","","",null,0],["ActiveStorage::MirrorJob","","rails/classes/ActiveStorage/MirrorJob.html","","<p>Provides asynchronous mirroring of directly-uploaded blobs.\n",null,0],["ActiveStorage::Preview","","rails/classes/ActiveStorage/Preview.html","","<p>Some non-image blobs can be previewed: that is, they can be presented as images. A video blob can be …\n",null,0],["ActiveStorage::Preview::UnprocessedError","","rails/classes/ActiveStorage/Preview/UnprocessedError.html","","",null,0],["ActiveStorage::PreviewError","","rails/classes/ActiveStorage/PreviewError.html","","<p>Raised when a Previewer is unable to generate a preview image.\n",null,0],["ActiveStorage::Previewer","","rails/classes/ActiveStorage/Previewer.html","","<p>This is an abstract base class for previewers, which generate images from blobs. See ActiveStorage::Previewer::MuPDFPreviewer …\n",null,0],["ActiveStorage::Previewer::MuPDFPreviewer","","rails/classes/ActiveStorage/Previewer/MuPDFPreviewer.html","","",null,0],["ActiveStorage::Previewer::PopplerPDFPreviewer","","rails/classes/ActiveStorage/Previewer/PopplerPDFPreviewer.html","","",null,0],["ActiveStorage::Previewer::VideoPreviewer","","rails/classes/ActiveStorage/Previewer/VideoPreviewer.html","","",null,0],["ActiveStorage::PurgeJob","","rails/classes/ActiveStorage/PurgeJob.html","","<p>Provides asynchronous purging of ActiveStorage::Blob records via ActiveStorage::Blob#purge_later.\n",null,0],["ActiveStorage::Reflection","","rails/classes/ActiveStorage/Reflection.html","","",null,0],["ActiveStorage::Reflection::ActiveRecordExtensions","","rails/classes/ActiveStorage/Reflection/ActiveRecordExtensions.html","","",null,0],["ActiveStorage::Reflection::ActiveRecordExtensions::ClassMethods","","rails/classes/ActiveStorage/Reflection/ActiveRecordExtensions/ClassMethods.html","","",null,0],["ActiveStorage::Representations","","rails/classes/ActiveStorage/Representations.html","","",null,0],["ActiveStorage::Representations::ProxyController","","rails/classes/ActiveStorage/Representations/ProxyController.html","","<p>Proxy files through application. This avoids having a redirect and makes files easier to cache.\n<p>WARNING: …\n",null,0],["ActiveStorage::Representations::RedirectController","","rails/classes/ActiveStorage/Representations/RedirectController.html","","<p>Take a signed permanent reference for a blob representation and turn it into an expiring service URL …\n",null,0],["ActiveStorage::Service","","rails/classes/ActiveStorage/Service.html","","<p>Abstract class serving as an interface for concrete services.\n<p>The available services are:\n<p><code>Disk</code>, to manage …\n",null,0],["ActiveStorage::Service::AzureStorageService","","rails/classes/ActiveStorage/Service/AzureStorageService.html","","<p>Wraps the Microsoft Azure Storage Blob Service as an Active Storage service. See ActiveStorage::Service …\n",null,0],["ActiveStorage::Service::DiskService","","rails/classes/ActiveStorage/Service/DiskService.html","","<p>Wraps a local disk path as an Active Storage service. See ActiveStorage::Service for the generic API …\n",null,0],["ActiveStorage::Service::GCSService","","rails/classes/ActiveStorage/Service/GCSService.html","","<p>Wraps the Google Cloud Storage as an Active Storage service. See ActiveStorage::Service for the generic …\n",null,0],["ActiveStorage::Service::GCSService::MetadataServerError","","rails/classes/ActiveStorage/Service/GCSService/MetadataServerError.html","","",null,0],["ActiveStorage::Service::GCSService::MetadataServerNotFoundError","","rails/classes/ActiveStorage/Service/GCSService/MetadataServerNotFoundError.html","","",null,0],["ActiveStorage::Service::MirrorService","","rails/classes/ActiveStorage/Service/MirrorService.html","","<p>Wraps a set of mirror services and provides a single ActiveStorage::Service object that will all have …\n",null,0],["ActiveStorage::Service::S3Service","","rails/classes/ActiveStorage/Service/S3Service.html","","<p>Wraps the Amazon Simple Storage Service (S3) as an Active Storage service. See ActiveStorage::Service …\n",null,0],["ActiveStorage::SetCurrent","","rails/classes/ActiveStorage/SetCurrent.html","","<p>Sets the <code>ActiveStorage::Current.url_options</code> attribute, which the disk service uses to generate URLs. …\n",null,0],["ActiveStorage::Streaming","","rails/classes/ActiveStorage/Streaming.html","","",null,0],["ActiveStorage::Transformers","","rails/classes/ActiveStorage/Transformers.html","","",null,0],["ActiveStorage::Transformers::ImageProcessingTransformer","","rails/classes/ActiveStorage/Transformers/ImageProcessingTransformer.html","","",null,0],["ActiveStorage::Transformers::ImageProcessingTransformer::UnsupportedImageProcessingArgument","","rails/classes/ActiveStorage/Transformers/ImageProcessingTransformer/UnsupportedImageProcessingArgument.html","","",null,0],["ActiveStorage::Transformers::ImageProcessingTransformer::UnsupportedImageProcessingMethod","","rails/classes/ActiveStorage/Transformers/ImageProcessingTransformer/UnsupportedImageProcessingMethod.html","","",null,0],["ActiveStorage::Transformers::Transformer","","rails/classes/ActiveStorage/Transformers/Transformer.html","","<p>A Transformer applies a set of transformations to an image.\n<p>The following concrete subclasses are included …\n",null,0],["ActiveStorage::UnpreviewableError","","rails/classes/ActiveStorage/UnpreviewableError.html","","<p>Raised when ActiveStorage::Blob#preview is called on a blob that isn’t previewable. Use ActiveStorage::Blob#previewable? …\n",null,0],["ActiveStorage::UnrepresentableError","","rails/classes/ActiveStorage/UnrepresentableError.html","","<p>Raised when ActiveStorage::Blob#representation is called on a blob that isn’t representable. Use …\n",null,0],["ActiveStorage::VERSION","","rails/classes/ActiveStorage/VERSION.html","","",null,0],["ActiveStorage::Variant","","rails/classes/ActiveStorage/Variant.html","","<p>Image blobs can have variants that are the result of a set of transformations applied to the original. …\n",null,0],["ActiveStorage::VariantRecord","","rails/classes/ActiveStorage/VariantRecord.html","","",null,0],["ActiveStorage::VariantWithRecord","","rails/classes/ActiveStorage/VariantWithRecord.html","","<p>Like an ActiveStorage::Variant, but keeps detail about the variant in the database as an ActiveStorage::VariantRecord …\n",null,0],["ActiveStorage::Variation","","rails/classes/ActiveStorage/Variation.html","","<p>A set of transformations that can be applied to a blob to create a variant. This class is exposed via …\n",null,0],["ActiveSupport","","rails/classes/ActiveSupport.html","","",null,0],["ActiveSupport::ActionableError","","rails/classes/ActiveSupport/ActionableError.html","","<p>Actionable errors lets you define actions to resolve an error.\n<p>To make an error actionable, include the …\n",null,0],["ActiveSupport::ActionableError::ClassMethods","","rails/classes/ActiveSupport/ActionableError/ClassMethods.html","","",null,0],["ActiveSupport::ActionableError::NonActionable","","rails/classes/ActiveSupport/ActionableError/NonActionable.html","","",null,0],["ActiveSupport::ArrayInquirer","","rails/classes/ActiveSupport/ArrayInquirer.html","","<p>Wrapping an array in an <code>ArrayInquirer</code> gives a friendlier way to check its string-like contents:\n\n<pre><code>variants ...\n</code></pre>\n",null,0],["ActiveSupport::Autoload","","rails/classes/ActiveSupport/Autoload.html","","<p>Autoload and eager load conveniences for your library.\n<p>This module allows you to define autoloads based …\n",null,0],["ActiveSupport::BacktraceCleaner","","rails/classes/ActiveSupport/BacktraceCleaner.html","","<p>Backtraces often include many lines that are not relevant for the context under review. This makes it …\n",null,0],["ActiveSupport::Benchmarkable","","rails/classes/ActiveSupport/Benchmarkable.html","","",null,0],["ActiveSupport::Cache","","rails/classes/ActiveSupport/Cache.html","","<p>See ActiveSupport::Cache::Store for documentation.\n",null,0],["ActiveSupport::Cache::Coders","","rails/classes/ActiveSupport/Cache/Coders.html","","",null,0],["ActiveSupport::Cache::Coders::Loader","","rails/classes/ActiveSupport/Cache/Coders/Loader.html","","",null,0],["ActiveSupport::Cache::Coders::Rails61Coder","","rails/classes/ActiveSupport/Cache/Coders/Rails61Coder.html","","",null,0],["ActiveSupport::Cache::Coders::Rails70Coder","","rails/classes/ActiveSupport/Cache/Coders/Rails70Coder.html","","",null,0],["ActiveSupport::Cache::ConnectionPoolLike","","rails/classes/ActiveSupport/Cache/ConnectionPoolLike.html","","",null,0],["ActiveSupport::Cache::FileStore","","rails/classes/ActiveSupport/Cache/FileStore.html","","<p>A cache store implementation which stores everything on the filesystem.\n<p>FileStore implements the Strategy::LocalCache …\n",null,0],["ActiveSupport::Cache::MemCacheStore","","rails/classes/ActiveSupport/Cache/MemCacheStore.html","","<p>A cache store implementation which stores data in Memcached: memcached.org\n<p>This is currently the most …\n",null,0],["ActiveSupport::Cache::MemCacheStore::Coders","","rails/classes/ActiveSupport/Cache/MemCacheStore/Coders.html","","",null,0],["ActiveSupport::Cache::MemCacheStore::Coders::Loader","","rails/classes/ActiveSupport/Cache/MemCacheStore/Coders/Loader.html","","",null,0],["ActiveSupport::Cache::MemCacheStore::Coders::Rails61Coder","","rails/classes/ActiveSupport/Cache/MemCacheStore/Coders/Rails61Coder.html","","",null,0],["ActiveSupport::Cache::MemCacheStore::Coders::Rails70Coder","","rails/classes/ActiveSupport/Cache/MemCacheStore/Coders/Rails70Coder.html","","",null,0],["ActiveSupport::Cache::MemCacheStore::DupLocalCache","","rails/classes/ActiveSupport/Cache/MemCacheStore/DupLocalCache.html","","",null,0],["ActiveSupport::Cache::MemCacheStore::DupLocalCache::DupLocalStore","","rails/classes/ActiveSupport/Cache/MemCacheStore/DupLocalCache/DupLocalStore.html","","",null,0],["ActiveSupport::Cache::MemoryStore","","rails/classes/ActiveSupport/Cache/MemoryStore.html","","<p>A cache store implementation which stores everything into memory in the same process. If you’re running …\n",null,0],["ActiveSupport::Cache::NullStore","","rails/classes/ActiveSupport/Cache/NullStore.html","","<p>A cache store implementation which doesn’t actually store anything. Useful in development and test …\n",null,0],["ActiveSupport::Cache::RedisCacheStore","","rails/classes/ActiveSupport/Cache/RedisCacheStore.html","","<p>Redis cache store.\n<p>Deployment note: Take care to use a *dedicated Redis cache* rather than pointing this …\n",null,0],["ActiveSupport::Cache::Store","","rails/classes/ActiveSupport/Cache/Store.html","","<p>An abstract cache store class. There are multiple cache store implementations, each having its own additional …\n",null,0],["ActiveSupport::Cache::Strategy","","rails/classes/ActiveSupport/Cache/Strategy.html","","",null,0],["ActiveSupport::Cache::Strategy::LocalCache","","rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html","","<p>Caches that implement LocalCache will be backed by an in-memory cache for the duration of a block. Repeated …\n",null,0],["ActiveSupport::Cache::Strategy::LocalCache::LocalStore","","rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html","","<p>Simple memory backed cache. This cache is not thread safe and is intended only for serving as a temporary …\n",null,0],["ActiveSupport::CachingKeyGenerator","","rails/classes/ActiveSupport/CachingKeyGenerator.html","","<p>CachingKeyGenerator is a wrapper around KeyGenerator which allows users to avoid re-executing the key …\n",null,0],["ActiveSupport::Callbacks","","rails/classes/ActiveSupport/Callbacks.html","","<p>Callbacks are code hooks that are run at key points in an object’s life cycle. The typical use case …\n",null,0],["ActiveSupport::Callbacks::CallTemplate","","rails/classes/ActiveSupport/Callbacks/CallTemplate.html","","",null,0],["ActiveSupport::Callbacks::CallTemplate::InstanceExec0","","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec0.html","","",null,0],["ActiveSupport::Callbacks::CallTemplate::InstanceExec1","","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec1.html","","",null,0],["ActiveSupport::Callbacks::CallTemplate::InstanceExec2","","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec2.html","","",null,0],["ActiveSupport::Callbacks::CallTemplate::MethodCall","","rails/classes/ActiveSupport/Callbacks/CallTemplate/MethodCall.html","","",null,0],["ActiveSupport::Callbacks::CallTemplate::ObjectCall","","rails/classes/ActiveSupport/Callbacks/CallTemplate/ObjectCall.html","","",null,0],["ActiveSupport::Callbacks::CallTemplate::ProcCall","","rails/classes/ActiveSupport/Callbacks/CallTemplate/ProcCall.html","","",null,0],["ActiveSupport::Callbacks::ClassMethods","","rails/classes/ActiveSupport/Callbacks/ClassMethods.html","","",null,0],["ActiveSupport::Callbacks::Conditionals","","rails/classes/ActiveSupport/Callbacks/Conditionals.html","","",null,0],["ActiveSupport::Callbacks::Conditionals::Value","","rails/classes/ActiveSupport/Callbacks/Conditionals/Value.html","","",null,0],["ActiveSupport::Callbacks::Filters","","rails/classes/ActiveSupport/Callbacks/Filters.html","","",null,0],["ActiveSupport::Callbacks::Filters::After","","rails/classes/ActiveSupport/Callbacks/Filters/After.html","","",null,0],["ActiveSupport::Callbacks::Filters::Before","","rails/classes/ActiveSupport/Callbacks/Filters/Before.html","","",null,0],["ActiveSupport::CodeGenerator","","rails/classes/ActiveSupport/CodeGenerator.html","","",null,0],["ActiveSupport::CodeGenerator::MethodSet","","rails/classes/ActiveSupport/CodeGenerator/MethodSet.html","","",null,0],["ActiveSupport::CompareWithRange","","rails/classes/ActiveSupport/CompareWithRange.html","","",null,0],["ActiveSupport::Concern","","rails/classes/ActiveSupport/Concern.html","","<p>A typical module looks like this:\n\n<pre><code>module M\n  def self.included(base)\n    base.extend ClassMethods\n    ...\n</code></pre>\n",null,0],["ActiveSupport::Concurrency","","rails/classes/ActiveSupport/Concurrency.html","","",null,0],["ActiveSupport::Concurrency::LoadInterlockAwareMonitor","","rails/classes/ActiveSupport/Concurrency/LoadInterlockAwareMonitor.html","","<p>A monitor that will permit dependency loading while blocked waiting for the lock.\n",null,0],["ActiveSupport::Concurrency::ShareLock","","rails/classes/ActiveSupport/Concurrency/ShareLock.html","","<p>A share/exclusive lock, otherwise known as a read/write lock.\n<p>en.wikipedia.org/wiki/Readers%E2%80%93writer_lock …\n",null,0],["ActiveSupport::Configurable","","rails/classes/ActiveSupport/Configurable.html","","<p>Configurable provides a <code>config</code> method to store and retrieve configuration options as an OrderedOptions …\n",null,0],["ActiveSupport::Configurable::ClassMethods","","rails/classes/ActiveSupport/Configurable/ClassMethods.html","","",null,0],["ActiveSupport::Configurable::Configuration","","rails/classes/ActiveSupport/Configurable/Configuration.html","","",null,0],["ActiveSupport::ConfigurationFile","","rails/classes/ActiveSupport/ConfigurationFile.html","","",null,0],["ActiveSupport::ConfigurationFile::FormatError","","rails/classes/ActiveSupport/ConfigurationFile/FormatError.html","","",null,0],["ActiveSupport::CurrentAttributes","","rails/classes/ActiveSupport/CurrentAttributes.html","","<p>Abstract super class that provides a thread-isolated attributes singleton, which resets automatically …\n",null,0],["ActiveSupport::Dependencies","","rails/classes/ActiveSupport/Dependencies.html","","",null,0],["ActiveSupport::Dependencies::Interlock","","rails/classes/ActiveSupport/Dependencies/Interlock.html","","",null,0],["ActiveSupport::Dependencies::RequireDependency","","rails/classes/ActiveSupport/Dependencies/RequireDependency.html","","",null,0],["ActiveSupport::Deprecation","","rails/classes/ActiveSupport/Deprecation.html","","<p>Deprecation specifies the API used by Rails to deprecate methods, instance variables, objects, and constants. …\n",null,0],["ActiveSupport::Deprecation::Behavior","","rails/classes/ActiveSupport/Deprecation/Behavior.html","","<p>Behavior module allows to determine how to display deprecation messages. You can create a custom behavior …\n",null,0],["ActiveSupport::Deprecation::DeprecatedConstantAccessor","","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantAccessor.html","","<p>DeprecatedConstantAccessor transforms a constant into a deprecated one by hooking <code>const_missing</code>.\n<p>It takes …\n",null,0],["ActiveSupport::Deprecation::DeprecatedConstantProxy","","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html","","<p>DeprecatedConstantProxy transforms a constant into a deprecated one. It takes the names of an old (deprecated) …\n",null,0],["ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy","","rails/classes/ActiveSupport/Deprecation/DeprecatedInstanceVariableProxy.html","","<p>DeprecatedInstanceVariableProxy transforms an instance variable into a deprecated one. It takes an instance …\n",null,0],["ActiveSupport::Deprecation::DeprecatedObjectProxy","","rails/classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html","","<p>DeprecatedObjectProxy transforms an object into a deprecated one. It takes an object, a deprecation message, …\n",null,0],["ActiveSupport::Deprecation::Disallowed","","rails/classes/ActiveSupport/Deprecation/Disallowed.html","","",null,0],["ActiveSupport::Deprecation::MethodWrapper","","rails/classes/ActiveSupport/Deprecation/MethodWrapper.html","","",null,0],["ActiveSupport::Deprecation::Reporting","","rails/classes/ActiveSupport/Deprecation/Reporting.html","","",null,0],["ActiveSupport::DeprecationException","","rails/classes/ActiveSupport/DeprecationException.html","","<p>Raised when ActiveSupport::Deprecation::Behavior#behavior is set with <code>:raise</code>. You would set <code>:raise</code>, as …\n",null,0],["ActiveSupport::DescendantsTracker","","rails/classes/ActiveSupport/DescendantsTracker.html","","<p>This module provides an internal implementation to track descendants which is faster than iterating through …\n",null,0],["ActiveSupport::Duration","","rails/classes/ActiveSupport/Duration.html","","<p>Provides accurate date and time measurements using Date#advance and Time#advance, respectively. It mainly …\n",null,0],["ActiveSupport::Duration::ISO8601Parser","","rails/classes/ActiveSupport/Duration/ISO8601Parser.html","","",null,0],["ActiveSupport::Duration::ISO8601Parser::ParsingError","","rails/classes/ActiveSupport/Duration/ISO8601Parser/ParsingError.html","","",null,0],["ActiveSupport::EncryptedConfiguration","","rails/classes/ActiveSupport/EncryptedConfiguration.html","","<p>Provides convenience methods on top of EncryptedFile to access values stored as encrypted YAML.\n<p>Values …\n",null,0],["ActiveSupport::EncryptedFile","","rails/classes/ActiveSupport/EncryptedFile.html","","",null,0],["ActiveSupport::EncryptedFile::InvalidKeyLengthError","","rails/classes/ActiveSupport/EncryptedFile/InvalidKeyLengthError.html","","",null,0],["ActiveSupport::EncryptedFile::MissingContentError","","rails/classes/ActiveSupport/EncryptedFile/MissingContentError.html","","",null,0],["ActiveSupport::EncryptedFile::MissingKeyError","","rails/classes/ActiveSupport/EncryptedFile/MissingKeyError.html","","",null,0],["ActiveSupport::EnumerableCoreExt","","rails/classes/ActiveSupport/EnumerableCoreExt.html","","",null,0],["ActiveSupport::EnumerableCoreExt::Constants","","rails/classes/ActiveSupport/EnumerableCoreExt/Constants.html","","",null,0],["ActiveSupport::ErrorReporter","","rails/classes/ActiveSupport/ErrorReporter.html","","<p><code>ActiveSupport::ErrorReporter</code> is a common interface for error reporting services.\n<p>To rescue and report …\n",null,0],["ActiveSupport::EventedFileUpdateChecker","","rails/classes/ActiveSupport/EventedFileUpdateChecker.html","","",null,0],["ActiveSupport::EventedFileUpdateChecker::Core","","rails/classes/ActiveSupport/EventedFileUpdateChecker/Core.html","","",null,0],["ActiveSupport::ExecutionWrapper","","rails/classes/ActiveSupport/ExecutionWrapper.html","","",null,0],["ActiveSupport::Executor","","rails/classes/ActiveSupport/Executor.html","","",null,0],["ActiveSupport::FileUpdateChecker","","rails/classes/ActiveSupport/FileUpdateChecker.html","","<p>FileUpdateChecker specifies the API used by Rails to watch files and control reloading. The API depends …\n",null,0],["ActiveSupport::ForkTracker","","rails/classes/ActiveSupport/ForkTracker.html","","",null,0],["ActiveSupport::ForkTracker::CoreExt","","rails/classes/ActiveSupport/ForkTracker/CoreExt.html","","",null,0],["ActiveSupport::ForkTracker::CoreExtPrivate","","rails/classes/ActiveSupport/ForkTracker/CoreExtPrivate.html","","",null,0],["ActiveSupport::ForkTracker::ModernCoreExt","","rails/classes/ActiveSupport/ForkTracker/ModernCoreExt.html","","",null,0],["ActiveSupport::Gzip","","rails/classes/ActiveSupport/Gzip.html","","<p>A convenient wrapper for the zlib standard library that allows compression/decompression of strings with …\n",null,0],["ActiveSupport::Gzip::Stream","","rails/classes/ActiveSupport/Gzip/Stream.html","","",null,0],["ActiveSupport::HashWithIndifferentAccess","","rails/classes/ActiveSupport/HashWithIndifferentAccess.html","","<p>Implements a hash where keys <code>:foo</code> and <code>&quot;foo&quot;</code> are considered to be the same.\n\n<pre><code>rgb = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["ActiveSupport::HashWithIndifferentAccess","","rails/classes/ActiveSupport/HashWithIndifferentAccess.html","","<p>Implements a hash where keys <code>:foo</code> and <code>&quot;foo&quot;</code> are considered to be the same.\n\n<pre><code>rgb = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["ActiveSupport::Inflector","","rails/classes/ActiveSupport/Inflector.html","","<p>The Inflector transforms words from singular to plural, class names to table names, modularized class …\n",null,0],["ActiveSupport::Inflector::Inflections","","rails/classes/ActiveSupport/Inflector/Inflections.html","","<p>A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify …\n",null,0],["ActiveSupport::Inflector::Inflections::Uncountables","","rails/classes/ActiveSupport/Inflector/Inflections/Uncountables.html","","",null,0],["ActiveSupport::InheritableOptions","","rails/classes/ActiveSupport/InheritableOptions.html","","<p><code>InheritableOptions</code> provides a constructor to build an OrderedOptions hash inherited from another hash. …\n",null,0],["ActiveSupport::JSON","","rails/classes/ActiveSupport/JSON.html","","",null,0],["ActiveSupport::KeyGenerator","","rails/classes/ActiveSupport/KeyGenerator.html","","<p>KeyGenerator is a simple wrapper around OpenSSL’s implementation of PBKDF2. It can be used to derive …\n",null,0],["ActiveSupport::LazyLoadHooks","","rails/classes/ActiveSupport/LazyLoadHooks.html","","<p>LazyLoadHooks allows Rails to lazily load a lot of components and thus making the app boot faster. Because …\n",null,0],["ActiveSupport::LogSubscriber","","rails/classes/ActiveSupport/LogSubscriber.html","","<p><code>ActiveSupport::LogSubscriber</code> is an object set to consume ActiveSupport::Notifications with the sole purpose …\n",null,0],["ActiveSupport::Logger","","rails/classes/ActiveSupport/Logger.html","","",null,0],["ActiveSupport::Logger::SimpleFormatter","","rails/classes/ActiveSupport/Logger/SimpleFormatter.html","","<p>Simple formatter which only displays the message.\n",null,0],["ActiveSupport::LoggerSilence","","rails/classes/ActiveSupport/LoggerSilence.html","","",null,0],["ActiveSupport::MessageEncryptor","","rails/classes/ActiveSupport/MessageEncryptor.html","","<p>MessageEncryptor is a simple way to encrypt values which get stored somewhere you don’t trust.\n<p>The …\n",null,0],["ActiveSupport::MessageEncryptor::InvalidMessage","","rails/classes/ActiveSupport/MessageEncryptor/InvalidMessage.html","","",null,0],["ActiveSupport::MessageVerifier","","rails/classes/ActiveSupport/MessageVerifier.html","","<p><code>MessageVerifier</code> makes it easy to generate and verify messages which are signed to prevent tampering. …\n",null,0],["ActiveSupport::MessageVerifier::InvalidSignature","","rails/classes/ActiveSupport/MessageVerifier/InvalidSignature.html","","",null,0],["ActiveSupport::Messages","","rails/classes/ActiveSupport/Messages.html","","",null,0],["ActiveSupport::Messages::Rotator","","rails/classes/ActiveSupport/Messages/Rotator.html","","",null,0],["ActiveSupport::Messages::Rotator::Encryptor","","rails/classes/ActiveSupport/Messages/Rotator/Encryptor.html","","",null,0],["ActiveSupport::Messages::Rotator::Verifier","","rails/classes/ActiveSupport/Messages/Rotator/Verifier.html","","",null,0],["ActiveSupport::Multibyte","","rails/classes/ActiveSupport/Multibyte.html","","",null,0],["ActiveSupport::Multibyte::Chars","","rails/classes/ActiveSupport/Multibyte/Chars.html","","<p>Chars enables you to work transparently with UTF-8 encoding in the Ruby String class without having extensive …\n",null,0],["ActiveSupport::Multibyte::Unicode","","rails/classes/ActiveSupport/Multibyte/Unicode.html","","",null,0],["ActiveSupport::Notifications","","rails/classes/ActiveSupport/Notifications.html","","<p>Notifications\n<p><code>ActiveSupport::Notifications</code> provides an instrumentation API for Ruby.\n<p>Instrumenters\n",null,0],["ActiveSupport::Notifications::Event","","rails/classes/ActiveSupport/Notifications/Event.html","","",null,0],["ActiveSupport::Notifications::Fanout","","rails/classes/ActiveSupport/Notifications/Fanout.html","","<p>This is a default queue implementation that ships with Notifications. It just pushes events to all registered …\n",null,0],["ActiveSupport::Notifications::Fanout::Subscribers","","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers.html","","",null,0],["ActiveSupport::Notifications::Fanout::Subscribers::EventObject","","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/EventObject.html","","",null,0],["ActiveSupport::Notifications::Fanout::Subscribers::Matcher","","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Matcher.html","","",null,0],["ActiveSupport::Notifications::Fanout::Subscribers::Matcher::AllMessages","","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Matcher/AllMessages.html","","",null,0],["ActiveSupport::Notifications::InstrumentationSubscriberError","","rails/classes/ActiveSupport/Notifications/InstrumentationSubscriberError.html","","",null,0],["ActiveSupport::Notifications::Instrumenter","","rails/classes/ActiveSupport/Notifications/Instrumenter.html","","<p>Instrumenters are stored in a thread local.\n",null,0],["ActiveSupport::NumberHelper","","rails/classes/ActiveSupport/NumberHelper.html","","",null,0],["ActiveSupport::NumericWithFormat","","rails/classes/ActiveSupport/NumericWithFormat.html","","",null,0],["ActiveSupport::OrderedOptions","","rails/classes/ActiveSupport/OrderedOptions.html","","<p><code>OrderedOptions</code> inherits from <code>Hash</code> and provides dynamic accessor methods.\n<p>With a <code>Hash</code>, key-value pairs …\n",null,0],["ActiveSupport::ParameterFilter","","rails/classes/ActiveSupport/ParameterFilter.html","","<p><code>ParameterFilter</code> replaces values in a <code>Hash</code>-like object if their keys match one of the specified filters. …\n",null,0],["ActiveSupport::PerThreadRegistry","","rails/classes/ActiveSupport/PerThreadRegistry.html","","<p>NOTE: This approach has been deprecated for end-user code in favor of thread_mattr_accessor and friends. …\n",null,0],["ActiveSupport::ProxyObject","","rails/classes/ActiveSupport/ProxyObject.html","","<p>A class with no predefined methods that behaves similarly to Builder’s BlankSlate. Used for proxy …\n",null,0],["ActiveSupport::RangeWithFormat","","rails/classes/ActiveSupport/RangeWithFormat.html","","",null,0],["ActiveSupport::Reloader","","rails/classes/ActiveSupport/Reloader.html","","",null,0],["ActiveSupport::Rescuable","","rails/classes/ActiveSupport/Rescuable.html","","<p>Rescuable module adds support for easier exception handling.\n",null,0],["ActiveSupport::Rescuable::ClassMethods","","rails/classes/ActiveSupport/Rescuable/ClassMethods.html","","",null,0],["ActiveSupport::SafeBuffer","","rails/classes/ActiveSupport/SafeBuffer.html","","",null,0],["ActiveSupport::SafeBuffer::SafeConcatError","","rails/classes/ActiveSupport/SafeBuffer/SafeConcatError.html","","<p>Raised when ActiveSupport::SafeBuffer#safe_concat is called on unsafe buffers.\n",null,0],["ActiveSupport::SecureCompareRotator","","rails/classes/ActiveSupport/SecureCompareRotator.html","","<p>The ActiveSupport::SecureCompareRotator is a wrapper around ActiveSupport::SecurityUtils.secure_compare …\n",null,0],["ActiveSupport::SecurityUtils","","rails/classes/ActiveSupport/SecurityUtils.html","","",null,0],["ActiveSupport::StringInquirer","","rails/classes/ActiveSupport/StringInquirer.html","","<p>Wrapping a string in this class gives you a prettier way to test for equality. The value returned by …\n",null,0],["ActiveSupport::Subscriber","","rails/classes/ActiveSupport/Subscriber.html","","<p>ActiveSupport::Subscriber is an object set to consume ActiveSupport::Notifications. The subscriber dispatches …\n",null,0],["ActiveSupport::TaggedLogging","","rails/classes/ActiveSupport/TaggedLogging.html","","<p>Wraps any standard Logger object to provide tagging capabilities.\n<p>May be called with a block:\n\n<pre><code>logger = ...\n</code></pre>\n",null,0],["ActiveSupport::TimeWithZone","","rails/classes/ActiveSupport/TimeWithZone.html","","<p>A Time-like class that can represent a time in any time zone. Necessary because standard Ruby Time instances …\n",null,0],["ActiveSupport::TimeZone","","rails/classes/ActiveSupport/TimeZone.html","","<p>The TimeZone class serves as a wrapper around <code>TZInfo::Timezone</code> instances. It allows us to do the following: …\n",null,0],["ActiveSupport::VERSION","","rails/classes/ActiveSupport/VERSION.html","","",null,0],["ActiveSupport::XMLConverter","","rails/classes/ActiveSupport/XMLConverter.html","","",null,0],["ActiveSupport::XMLConverter::DisallowedType","","rails/classes/ActiveSupport/XMLConverter/DisallowedType.html","","<p>Raised if the XML contains attributes with type=“yaml” or type=“symbol”. Read Hash#from_xml …\n",null,0],["ActiveSupport::XmlMini","","rails/classes/ActiveSupport/XmlMini.html","","<p>XmlMini\n<p>To use the much faster libxml parser:\n\n<pre><code>gem &#39;libxml-ruby&#39;, &#39;=0.9.7&#39;\nXmlMini.backend = &#39;LibXML&#39;\n</code></pre>\n",null,0],["ActiveSupport::XmlMini_LibXMLSAX","","rails/classes/ActiveSupport/XmlMini_LibXMLSAX.html","","",null,0],["ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using SAX events.\n",null,0],["ActiveSupport::XmlMini_NokogiriSAX","","rails/classes/ActiveSupport/XmlMini_NokogiriSAX.html","","",null,0],["ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using SAX events.\n",null,0],["AddServiceNameToActiveStorageBlobs","","rails/classes/AddServiceNameToActiveStorageBlobs.html","","",null,0],["Addrinfo","","ruby/classes/Addrinfo.html","","<p>The Addrinfo class maps <code>struct addrinfo</code> to ruby.  This structure identifies an Internet host and a service. …\n",null,1],["Announcement","","rails/classes/Announcement.html","","",null,0],["Announcement::Version","","rails/classes/Announcement/Version.html","","",null,0],["ApplicationCable","","rails/classes/ApplicationCable.html","","",null,0],["ApplicationCable::Channel","","rails/classes/ApplicationCable/Channel.html","","",null,0],["ApplicationCable::Connection","","rails/classes/ApplicationCable/Connection.html","","",null,0],["Arel","","rails/classes/Arel.html","","",null,0],["Arel::AliasPredication","","rails/classes/Arel/AliasPredication.html","","",null,0],["Arel::ArelError","","rails/classes/Arel/ArelError.html","","",null,0],["Arel::Attributes","","rails/classes/Arel/Attributes.html","","",null,0],["Arel::Attributes::Attribute","","rails/classes/Arel/Attributes/Attribute.html","","",null,0],["Arel::Collectors","","rails/classes/Arel/Collectors.html","","",null,0],["Arel::Collectors::Bind","","rails/classes/Arel/Collectors/Bind.html","","",null,0],["Arel::Collectors::Composite","","rails/classes/Arel/Collectors/Composite.html","","",null,0],["Arel::Collectors::PlainString","","rails/classes/Arel/Collectors/PlainString.html","","",null,0],["Arel::Collectors::SQLString","","rails/classes/Arel/Collectors/SQLString.html","","",null,0],["Arel::Collectors::SubstituteBinds","","rails/classes/Arel/Collectors/SubstituteBinds.html","","",null,0],["Arel::Crud","","rails/classes/Arel/Crud.html","","",null,0],["Arel::DeleteManager","","rails/classes/Arel/DeleteManager.html","","",null,0],["Arel::EmptyJoinError","","rails/classes/Arel/EmptyJoinError.html","","",null,0],["Arel::Expressions","","rails/classes/Arel/Expressions.html","","",null,0],["Arel::FactoryMethods","","rails/classes/Arel/FactoryMethods.html","","",null,0],["Arel::FilterPredications","","rails/classes/Arel/FilterPredications.html","","",null,0],["Arel::InsertManager","","rails/classes/Arel/InsertManager.html","","",null,0],["Arel::Math","","rails/classes/Arel/Math.html","","",null,0],["Arel::Nodes","","rails/classes/Arel/Nodes.html","","",null,0],["Arel::Nodes::Addition","","rails/classes/Arel/Nodes/Addition.html","","",null,0],["Arel::Nodes::And","","rails/classes/Arel/Nodes/And.html","","",null,0],["Arel::Nodes::Ascending","","rails/classes/Arel/Nodes/Ascending.html","","",null,0],["Arel::Nodes::Between","","rails/classes/Arel/Nodes/Between.html","","",null,0],["Arel::Nodes::Binary","","rails/classes/Arel/Nodes/Binary.html","","",null,0],["Arel::Nodes::BindParam","","rails/classes/Arel/Nodes/BindParam.html","","",null,0],["Arel::Nodes::BitwiseAnd","","rails/classes/Arel/Nodes/BitwiseAnd.html","","",null,0],["Arel::Nodes::BitwiseNot","","rails/classes/Arel/Nodes/BitwiseNot.html","","",null,0],["Arel::Nodes::BitwiseOr","","rails/classes/Arel/Nodes/BitwiseOr.html","","",null,0],["Arel::Nodes::BitwiseShiftLeft","","rails/classes/Arel/Nodes/BitwiseShiftLeft.html","","",null,0],["Arel::Nodes::BitwiseShiftRight","","rails/classes/Arel/Nodes/BitwiseShiftRight.html","","",null,0],["Arel::Nodes::BitwiseXor","","rails/classes/Arel/Nodes/BitwiseXor.html","","",null,0],["Arel::Nodes::Case","","rails/classes/Arel/Nodes/Case.html","","",null,0],["Arel::Nodes::Comment","","rails/classes/Arel/Nodes/Comment.html","","",null,0],["Arel::Nodes::Concat","","rails/classes/Arel/Nodes/Concat.html","","",null,0],["Arel::Nodes::Contains","","rails/classes/Arel/Nodes/Contains.html","","",null,0],["Arel::Nodes::Count","","rails/classes/Arel/Nodes/Count.html","","",null,0],["Arel::Nodes::CurrentRow","","rails/classes/Arel/Nodes/CurrentRow.html","","",null,0],["Arel::Nodes::DeleteStatement","","rails/classes/Arel/Nodes/DeleteStatement.html","","",null,0],["Arel::Nodes::Descending","","rails/classes/Arel/Nodes/Descending.html","","",null,0],["Arel::Nodes::Distinct","","rails/classes/Arel/Nodes/Distinct.html","","",null,0],["Arel::Nodes::Division","","rails/classes/Arel/Nodes/Division.html","","",null,0],["Arel::Nodes::DoesNotMatch","","rails/classes/Arel/Nodes/DoesNotMatch.html","","",null,0],["Arel::Nodes::Equality","","rails/classes/Arel/Nodes/Equality.html","","",null,0],["Arel::Nodes::Extract","","rails/classes/Arel/Nodes/Extract.html","","",null,0],["Arel::Nodes::False","","rails/classes/Arel/Nodes/False.html","","",null,0],["Arel::Nodes::FetchAttribute","","rails/classes/Arel/Nodes/FetchAttribute.html","","",null,0],["Arel::Nodes::Filter","","rails/classes/Arel/Nodes/Filter.html","","",null,0],["Arel::Nodes::Following","","rails/classes/Arel/Nodes/Following.html","","",null,0],["Arel::Nodes::FullOuterJoin","","rails/classes/Arel/Nodes/FullOuterJoin.html","","",null,0],["Arel::Nodes::Function","","rails/classes/Arel/Nodes/Function.html","","",null,0],["Arel::Nodes::GreaterThan","","rails/classes/Arel/Nodes/GreaterThan.html","","",null,0],["Arel::Nodes::GreaterThanOrEqual","","rails/classes/Arel/Nodes/GreaterThanOrEqual.html","","",null,0],["Arel::Nodes::Grouping","","rails/classes/Arel/Nodes/Grouping.html","","",null,0],["Arel::Nodes::HomogeneousIn","","rails/classes/Arel/Nodes/HomogeneousIn.html","","",null,0],["Arel::Nodes::In","","rails/classes/Arel/Nodes/In.html","","",null,0],["Arel::Nodes::InfixOperation","","rails/classes/Arel/Nodes/InfixOperation.html","","",null,0],["Arel::Nodes::InnerJoin","","rails/classes/Arel/Nodes/InnerJoin.html","","",null,0],["Arel::Nodes::InsertStatement","","rails/classes/Arel/Nodes/InsertStatement.html","","",null,0],["Arel::Nodes::IsDistinctFrom","","rails/classes/Arel/Nodes/IsDistinctFrom.html","","",null,0],["Arel::Nodes::IsNotDistinctFrom","","rails/classes/Arel/Nodes/IsNotDistinctFrom.html","","",null,0],["Arel::Nodes::JoinSource","","rails/classes/Arel/Nodes/JoinSource.html","","",null,0],["Arel::Nodes::LessThan","","rails/classes/Arel/Nodes/LessThan.html","","",null,0],["Arel::Nodes::LessThanOrEqual","","rails/classes/Arel/Nodes/LessThanOrEqual.html","","",null,0],["Arel::Nodes::Matches","","rails/classes/Arel/Nodes/Matches.html","","",null,0],["Arel::Nodes::Multiplication","","rails/classes/Arel/Nodes/Multiplication.html","","",null,0],["Arel::Nodes::NamedFunction","","rails/classes/Arel/Nodes/NamedFunction.html","","",null,0],["Arel::Nodes::NamedWindow","","rails/classes/Arel/Nodes/NamedWindow.html","","",null,0],["Arel::Nodes::Node","","rails/classes/Arel/Nodes/Node.html","","",null,0],["Arel::Nodes::NodeExpression","","rails/classes/Arel/Nodes/NodeExpression.html","","",null,0],["Arel::Nodes::NotEqual","","rails/classes/Arel/Nodes/NotEqual.html","","",null,0],["Arel::Nodes::NotIn","","rails/classes/Arel/Nodes/NotIn.html","","",null,0],["Arel::Nodes::NotRegexp","","rails/classes/Arel/Nodes/NotRegexp.html","","",null,0],["Arel::Nodes::NullsFirst","","rails/classes/Arel/Nodes/NullsFirst.html","","",null,0],["Arel::Nodes::NullsLast","","rails/classes/Arel/Nodes/NullsLast.html","","",null,0],["Arel::Nodes::Or","","rails/classes/Arel/Nodes/Or.html","","",null,0],["Arel::Nodes::Ordering","","rails/classes/Arel/Nodes/Ordering.html","","",null,0],["Arel::Nodes::OuterJoin","","rails/classes/Arel/Nodes/OuterJoin.html","","",null,0],["Arel::Nodes::Over","","rails/classes/Arel/Nodes/Over.html","","",null,0],["Arel::Nodes::Overlaps","","rails/classes/Arel/Nodes/Overlaps.html","","",null,0],["Arel::Nodes::Preceding","","rails/classes/Arel/Nodes/Preceding.html","","",null,0],["Arel::Nodes::Range","","rails/classes/Arel/Nodes/Range.html","","",null,0],["Arel::Nodes::Regexp","","rails/classes/Arel/Nodes/Regexp.html","","",null,0],["Arel::Nodes::RightOuterJoin","","rails/classes/Arel/Nodes/RightOuterJoin.html","","",null,0],["Arel::Nodes::Rows","","rails/classes/Arel/Nodes/Rows.html","","",null,0],["Arel::Nodes::SelectCore","","rails/classes/Arel/Nodes/SelectCore.html","","",null,0],["Arel::Nodes::SelectStatement","","rails/classes/Arel/Nodes/SelectStatement.html","","",null,0],["Arel::Nodes::SqlLiteral","","rails/classes/Arel/Nodes/SqlLiteral.html","","",null,0],["Arel::Nodes::StringJoin","","rails/classes/Arel/Nodes/StringJoin.html","","",null,0],["Arel::Nodes::Subtraction","","rails/classes/Arel/Nodes/Subtraction.html","","",null,0],["Arel::Nodes::TableAlias","","rails/classes/Arel/Nodes/TableAlias.html","","",null,0],["Arel::Nodes::True","","rails/classes/Arel/Nodes/True.html","","",null,0],["Arel::Nodes::Unary","","rails/classes/Arel/Nodes/Unary.html","","",null,0],["Arel::Nodes::UnaryOperation","","rails/classes/Arel/Nodes/UnaryOperation.html","","",null,0],["Arel::Nodes::UnqualifiedColumn","","rails/classes/Arel/Nodes/UnqualifiedColumn.html","","",null,0],["Arel::Nodes::UpdateStatement","","rails/classes/Arel/Nodes/UpdateStatement.html","","",null,0],["Arel::Nodes::ValuesList","","rails/classes/Arel/Nodes/ValuesList.html","","",null,0],["Arel::Nodes::Window","","rails/classes/Arel/Nodes/Window.html","","",null,0],["Arel::Nodes::With","","rails/classes/Arel/Nodes/With.html","","",null,0],["Arel::Nodes::WithRecursive","","rails/classes/Arel/Nodes/WithRecursive.html","","",null,0],["Arel::OrderPredications","","rails/classes/Arel/OrderPredications.html","","",null,0],["Arel::Predications","","rails/classes/Arel/Predications.html","","",null,0],["Arel::SelectManager","","rails/classes/Arel/SelectManager.html","","",null,0],["Arel::Table","","rails/classes/Arel/Table.html","","",null,0],["Arel::TreeManager","","rails/classes/Arel/TreeManager.html","","",null,0],["Arel::TreeManager::StatementMethods","","rails/classes/Arel/TreeManager/StatementMethods.html","","",null,0],["Arel::UpdateManager","","rails/classes/Arel/UpdateManager.html","","",null,0],["Arel::Visitors","","rails/classes/Arel/Visitors.html","","",null,0],["Arel::Visitors::Dot","","rails/classes/Arel/Visitors/Dot.html","","",null,0],["Arel::Visitors::MySQL","","rails/classes/Arel/Visitors/MySQL.html","","",null,0],["Arel::Visitors::PostgreSQL","","rails/classes/Arel/Visitors/PostgreSQL.html","","",null,0],["Arel::Visitors::SQLite","","rails/classes/Arel/Visitors/SQLite.html","","",null,0],["Arel::Visitors::ToSql","","rails/classes/Arel/Visitors/ToSql.html","","",null,0],["Arel::Visitors::UnsupportedVisitError","","rails/classes/Arel/Visitors/UnsupportedVisitError.html","","",null,0],["Arel::Visitors::Visitor","","rails/classes/Arel/Visitors/Visitor.html","","",null,0],["Arel::WindowPredications","","rails/classes/Arel/WindowPredications.html","","",null,0],["ArgumentError","","ruby/classes/ArgumentError.html","","<p>Raised when the arguments are wrong and there isn’t a more specific Exception class.\n<p>Ex: passing the …\n",null,1],["Array","","rails/classes/Array.html","","",null,0],["Array","","ruby/classes/Array.html","","<p>An Array is an ordered, integer-indexed collection of objects, called <em>elements</em>. Any object (even another …\n",null,1],["Array","Kernel","ruby/classes/Kernel.html#method-i-Array","(p1)","<p>Returns an array converted from <code>object</code>.\n<p>Tries to convert <code>object</code> to an array using <code>to_ary</code> first and <code>to_a</code> …\n",null,1],["BANNER.js","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/BANNER_js.html","","<p>/* Unobtrusive JavaScript github.com/rails/rails/blob/main/actionview/app/assets/javascripts Released …\n",null,0],["Base64","","ruby/classes/Base64.html","","<p>Module Base64 provides methods for:\n<p>Encoding a binary string (containing non-ASCII characters) as a string …\n",null,1],["BasicObject","","ruby/classes/BasicObject.html","","<p>BasicObject is the parent class of all classes in Ruby.  It’s an explicit blank class.\n<p>BasicObject …\n",null,1],["BasicSocket","","ruby/classes/BasicSocket.html","","<p>BasicSocket is the super class for all the Socket classes.\n",null,1],["Benchmark","","rails/classes/Benchmark.html","","",null,0],["Benchmark","","ruby/classes/Benchmark.html","","<p>The Benchmark module provides methods to measure and report the time used to execute Ruby code.\n<p>Measure …\n",null,1],["Benchmark::Tms","","ruby/classes/Benchmark/Tms.html","","<p>A data object, representing the times associated with a benchmark measurement.\n",null,1],["BigDecimal","","rails/classes/BigDecimal.html","","",null,0],["BigDecimal","","ruby/classes/BigDecimal.html","","<p>BigDecimal provides arbitrary-precision floating point decimal arithmetic.\n<p>Introduction\n<p>Ruby provides built-in …\n",null,1],["BigDecimal","Kernel","ruby/classes/Kernel.html#method-i-BigDecimal","(p1, p2 = v2, p3 = {})","<p>Returns the BigDecimal converted from <code>value</code> with a precision of <code>ndigits</code> decimal digits.\n<p>When <code>ndigits</code> is …\n",null,1],["BigMath","","ruby/classes/BigMath.html","","<p>Provides mathematical functions.\n<p>Example:\n\n<pre><code>require &quot;bigdecimal/math&quot;\n\ninclude BigMath\n\na = BigDecimal((PI(100)/2).to_s) ...\n</code></pre>\n",null,1],["Binding","","ruby/classes/Binding.html","","<p>Objects of class Binding encapsulate the execution context at some particular place in the code and retain …\n",null,1],["Brewfile","","rails/files/rails/Brewfile.html","","<p># frozen_string_literal: true\n<p>tap “homebrew/core” tap “homebrew/bundle” tap “homebrew/services” …\n",null,0],["Bundler","","ruby/classes/Bundler.html","","<p>Bundler provides a consistent environment for Ruby projects by tracking and installing the exact gems …\n",null,1],["CGI","","ruby/classes/CGI.html","","<p>Overview\n<p>The Common Gateway Interface (CGI) is a simple protocol for passing an HTTP request from a web …\n",null,1],["CGI::Cookie","","ruby/classes/CGI/Cookie.html","","<p>Class representing an HTTP cookie.\n<p>In addition to its specific fields and methods, a Cookie instance is …\n",null,1],["CGI::Escape","","ruby/classes/CGI/Escape.html","","",null,1],["CGI::HTML3","","ruby/classes/CGI/HTML3.html","","",null,1],["CGI::HTML4","","ruby/classes/CGI/HTML4.html","","",null,1],["CGI::HTML4Fr","","ruby/classes/CGI/HTML4Fr.html","","",null,1],["CGI::HTML4Tr","","ruby/classes/CGI/HTML4Tr.html","","",null,1],["CGI::HTML5","","ruby/classes/CGI/HTML5.html","","",null,1],["CGI::HtmlExtension","","ruby/classes/CGI/HtmlExtension.html","","<p>Mixin module providing HTML generation methods.\n<p>For example,\n\n<pre><code>cgi.a(&quot;http://www.example.com&quot;) { &quot;Example&quot; ...\n</code></pre>\n",null,1],["CGI::InvalidEncoding","","ruby/classes/CGI/InvalidEncoding.html","","<p>Exception raised when there is an invalid encoding detected\n",null,1],["CGI::QueryExtension","","ruby/classes/CGI/QueryExtension.html","","<p>Mixin module that provides the following:\n<p>Access to the CGI environment variables as methods.  See documentation …\n",null,1],["CGI::Session","","ruby/classes/CGI/Session.html","","<p>Overview\n<p>This file provides the CGI::Session class, which provides session support for CGI scripts.   …\n",null,1],["CGI::Session::FileStore","","ruby/classes/CGI/Session/FileStore.html","","<p>File-based session storage class.\n<p>Implements session storage as a flat file of ‘key=value’ values. …\n",null,1],["CGI::Session::MemoryStore","","ruby/classes/CGI/Session/MemoryStore.html","","<p>In-memory session storage class.\n<p>Implements session storage as a global in-memory hash.  Session data …\n",null,1],["CGI::Session::NullStore","","ruby/classes/CGI/Session/NullStore.html","","<p>Dummy session storage class.\n<p>Implements session storage place holder.  No actual storage will be done. …\n",null,1],["CGI::Session::PStore","","ruby/classes/CGI/Session/PStore.html","","<p>PStore-based session storage class.\n<p>This builds upon the top-level PStore class provided by the library …\n",null,1],["CGI::Util","","ruby/classes/CGI/Util.html","","",null,1],["CHANGELOG","","rails/files/rails/railties/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/activestorage/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/activerecord/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/activemodel/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/activejob/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/activesupport/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/actionmailer/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/actionview/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/actionmailbox/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/actioncable/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/actionpack/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>No changes.\n\n<p>Rails 7.0.8.2 (May 16, 2024)\n",null,0],["CHANGELOG","","rails/files/rails/actiontext/CHANGELOG_md.html","","<p>Rails 7.0.8.3 (May 17, 2024)\n<p>Fix vendored trix.css to be correct file.\n<em>Hartley McGuire</em>\n",null,0],["CODE_OF_CONDUCT","","rails/files/rails/CODE_OF_CONDUCT_md.html","","<p>Contributor Code of Conduct\n<p>The Rails team is committed to fostering a welcoming community.\n<p><strong>Our Code of</strong> …\n",null,0],["CONTRIBUTING","","rails/files/rails/CONTRIBUTING_md.html","","<p><img src=\"https://badge.buildkite.com/ab1152b6a1f6a61d3ea4ec5b3eece8d4c2b830998459c75352.svg?branch=main\"> …\n",null,0],["COPYING","","ruby/files/ruby/COPYING.html","","<p>Ruby is copyrighted free software by Yukihiro Matsumoto &lt;matz@netlab.jp&gt;. You can redistribute …\n",null,1],["COPYING.ja","","ruby/files/ruby/COPYING_ja.html","","<p>本プログラムはフリーソフトウェアです．2-clause BSDL または以下に示す条件で本プログラムを再配布できます 2-clause BSDLについてはBSDLファイルを参照して下さい．\n<p>複製は制限なく自由です． …\n",null,1],["CSV","","ruby/classes/CSV.html","","<p>CSV\n<p>CSV Data\n<p>CSV (comma-separated values) data is a text representation of a table:\n",null,1],["CSV","Object","ruby/classes/Object.html#method-i-CSV","(*args, **options, &block)","<p>Passes <code>args</code> to CSV::instance.\n\n<pre><code>CSV(&quot;CSV,data&quot;).read\n  #=&gt; [[&quot;CSV&quot;, &quot;data&quot;]]\n</code></pre>\n<p>If a block is given, the instance …\n",null,1],["CSV::FieldsConverter","","ruby/classes/CSV/FieldsConverter.html","","<p>Note: Don’t use this class directly. This is an internal class.\n",null,1],["CSV::InputRecordSeparator","","ruby/classes/CSV/InputRecordSeparator.html","","",null,1],["CSV::InvalidEncodingError","","ruby/classes/CSV/InvalidEncodingError.html","","<p>The error thrown when the parser encounters invalid encoding in CSV.\n",null,1],["CSV::MalformedCSVError","","ruby/classes/CSV/MalformedCSVError.html","","<p>The error thrown when the parser encounters illegal CSV formatting.\n",null,1],["CSV::Parser","","ruby/classes/CSV/Parser.html","","<p>Note: Don’t use this class directly. This is an internal class.\n",null,1],["CSV::Parser::InputsScanner","","ruby/classes/CSV/Parser/InputsScanner.html","","<p>CSV::InputsScanner receives IO inputs, encoding and the chunk_size. It also controls the life cycle of …\n",null,1],["CSV::Parser::InvalidEncoding","","ruby/classes/CSV/Parser/InvalidEncoding.html","","<p>Raised when encoding is invalid.\n",null,1],["CSV::Parser::Scanner","","ruby/classes/CSV/Parser/Scanner.html","","<p>CSV::Scanner receives a CSV output, scans it and return the content. It also controls the life cycle …\n",null,1],["CSV::Parser::UnexpectedError","","ruby/classes/CSV/Parser/UnexpectedError.html","","<p>Raised when unexpected case is happen.\n",null,1],["CSV::Row","","ruby/classes/CSV/Row.html","","<p>CSV::Row\n<p>A CSV::Row instance represents a CSV table row. (see class CSV).\n<p>The instance may have:\n",null,1],["CSV::Table","","ruby/classes/CSV/Table.html","","<p>CSV::Table\n<p>A CSV::Table instance represents CSV data. (see class CSV).\n<p>The instance may have:\n",null,1],["CSV::Writer","","ruby/classes/CSV/Writer.html","","<p>Note: Don’t use this class directly. This is an internal class.\n",null,1],["Class","","rails/classes/Class.html","","",null,0],["Class","","ruby/classes/Class.html","","<p>Extends any Class to include <em>json_creatable?</em> method.\n<p>Classes in Ruby are first-class objects—each is …\n",null,1],["CloseKey","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-CloseKey","(hkey)","",null,1],["ClosedQueueError","","ruby/classes/ClosedQueueError.html","","<p>The exception class which will be raised when pushing into a closed Queue.  See Thread::Queue#close and …\n",null,1],["CodeTools","","rails/classes/CodeTools.html","","",null,0],["CodeTools::Profiler","","rails/classes/CodeTools/Profiler.html","","",null,0],["CodeTools::Profiler::RequireProfiler","","rails/classes/CodeTools/Profiler/RequireProfiler.html","","",null,0],["Comparable","","ruby/classes/Comparable.html","","<p>The Comparable mixin is used by classes whose objects may be ordered. The class must define the <code>&lt;=&gt;</code> …\n",null,1],["Complex","","ruby/classes/Complex.html","","<p>A Complex object houses a pair of values, given when the object is created as either <em>rectangular coordinates</em> …\n",null,1],["Complex","Kernel","ruby/classes/Kernel.html#method-i-Complex","(p1, p2 = v2, p3 = {})","<p>Returns a new Complex object if the arguments are valid; otherwise raises an exception if <code>exception</code> is …\n",null,1],["Continuation","","ruby/classes/Continuation.html","","<p>Continuation objects are generated by Kernel#callcc, after having +require+d <em>continuation</em>. They hold …\n",null,1],["CoreExtensions","","ruby/classes/CoreExtensions.html","","",null,1],["CoreExtensions::TCPSocketExt","","ruby/classes/CoreExtensions/TCPSocketExt.html","","",null,1],["CoreExtensions::TCPSocketExt::Initializer","","ruby/classes/CoreExtensions/TCPSocketExt/Initializer.html","","",null,1],["Coverage","","ruby/classes/Coverage.html","","<p>Coverage provides coverage measurement feature for Ruby. This feature is experimental, so these APIs …\n",null,1],["CreateActionMailboxTables","","rails/classes/CreateActionMailboxTables.html","","",null,0],["CreateActionTextTables","","rails/classes/CreateActionTextTables.html","","",null,0],["CreateActiveStorageTables","","rails/classes/CreateActiveStorageTables.html","","",null,0],["CreateActiveStorageVariantRecords","","rails/classes/CreateActiveStorageVariantRecords.html","","",null,0],["CreateKey","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-CreateKey","(hkey, name, opt, desired)","",null,1],["CurrentContext","IRB","ruby/classes/IRB.html#method-c-CurrentContext","()","<p>The current IRB::Context of the session, see IRB.conf\n\n<pre><code>irb\nirb(main):001:0&gt; IRB.CurrentContext.irb_name ...\n</code></pre>\n",null,1],["DRb","","ruby/classes/DRb.html","","<p>Overview\n<p>dRuby is a distributed object system for Ruby.  It is written in pure Ruby and uses its own protocol. …\n",null,1],["DRb::DRbArray","","ruby/classes/DRb/DRbArray.html","","<p>An Array wrapper that can be sent to another server via DRb.\n<p>All entries in the array will be dumped or …\n",null,1],["DRb::DRbBadScheme","","ruby/classes/DRb/DRbBadScheme.html","","<p>Error raised by a dRuby protocol when it doesn’t support the scheme specified in a URI.  See DRb::DRbProtocol …\n",null,1],["DRb::DRbBadURI","","ruby/classes/DRb/DRbBadURI.html","","<p>Error raised by the DRbProtocol module when it cannot find any protocol implementation support the scheme …\n",null,1],["DRb::DRbConn","","ruby/classes/DRb/DRbConn.html","","<p>Class handling the connection between a DRbObject and the server the real object lives on.\n<p>This class …\n",null,1],["DRb::DRbConnError","","ruby/classes/DRb/DRbConnError.html","","<p>Error raised when an error occurs on the underlying communication protocol.\n",null,1],["DRb::DRbError","","ruby/classes/DRb/DRbError.html","","<p>Superclass of all errors raised in the DRb module.\n",null,1],["DRb::DRbIdConv","","ruby/classes/DRb/DRbIdConv.html","","<p>Class responsible for converting between an object and its id.\n<p>This, the default implementation, uses …\n",null,1],["DRb::DRbIdConv","","ruby/classes/DRb/DRbIdConv.html","","<p>Class responsible for converting between an object and its id.\n<p>This, the default implementation, uses …\n",null,1],["DRb::DRbMessage","","ruby/classes/DRb/DRbMessage.html","","<p>Handler for sending and receiving drb messages.\n<p>This takes care of the low-level marshalling and unmarshalling …\n",null,1],["DRb::DRbObject","","ruby/classes/DRb/DRbObject.html","","<p>Object wrapping a reference to a remote drb object.\n<p>Method calls on this object are relayed to the remote …\n",null,1],["DRb::DRbObject","","ruby/classes/DRb/DRbObject.html","","<p>Object wrapping a reference to a remote drb object.\n<p>Method calls on this object are relayed to the remote …\n",null,1],["DRb::DRbObservable","","ruby/classes/DRb/DRbObservable.html","","<p>The Observable module extended to DRb.  See Observable for details.\n",null,1],["DRb::DRbProtocol","","ruby/classes/DRb/DRbProtocol.html","","<p>Module managing the underlying network protocol(s) used by drb.\n<p>By default, drb uses the DRbTCPSocket …\n",null,1],["DRb::DRbRemoteError","","ruby/classes/DRb/DRbRemoteError.html","","<p>An exception wrapping an error object\n",null,1],["DRb::DRbSSLSocket","","ruby/classes/DRb/DRbSSLSocket.html","","<p>The protocol for DRb over an SSL socket\n<p>The URI for a DRb socket over SSL is: <code>drbssl://&lt;host&gt;:&lt;port&gt;?&lt;option&gt;</code> …\n",null,1],["DRb::DRbSSLSocket::SSLConfig","","ruby/classes/DRb/DRbSSLSocket/SSLConfig.html","","<p>SSLConfig handles the needed SSL information for establishing a DRbSSLSocket connection, including generating …\n",null,1],["DRb::DRbServer","","ruby/classes/DRb/DRbServer.html","","<p>Class representing a drb server instance.\n<p>A DRbServer must be running in the local process before any …\n",null,1],["DRb::DRbServer::InvokeMethod18Mixin","","ruby/classes/DRb/DRbServer/InvokeMethod18Mixin.html","","",null,1],["DRb::DRbServerNotFound","","ruby/classes/DRb/DRbServerNotFound.html","","<p>Error raised by the DRb module when an attempt is made to refer to the context’s current drb server …\n",null,1],["DRb::DRbTCPSocket","","ruby/classes/DRb/DRbTCPSocket.html","","<p>The default drb protocol which communicates over a TCP socket.\n<p>The DRb TCP protocol URI looks like: <code>druby://&lt;host&gt;:&lt;port&gt;?&lt;option&gt;</code> …\n",null,1],["DRb::DRbUNIXSocket","","ruby/classes/DRb/DRbUNIXSocket.html","","<p>Implements DRb over a UNIX socket\n<p>DRb UNIX socket URIs look like <code>drbunix:&lt;path&gt;?&lt;option&gt;</code>. …\n",null,1],["DRb::DRbUndumped","","ruby/classes/DRb/DRbUndumped.html","","<p>Mixin module making an object undumpable or unmarshallable.\n<p>If an object which includes this module is …\n",null,1],["DRb::DRbUndumped","","ruby/classes/DRb/DRbUndumped.html","","<p>Mixin module making an object undumpable or unmarshallable.\n<p>If an object which includes this module is …\n",null,1],["DRb::DRbUnknown","","ruby/classes/DRb/DRbUnknown.html","","<p>Class wrapping a marshalled object whose type is unknown locally.\n<p>If an object is returned by a method …\n",null,1],["DRb::DRbUnknownError","","ruby/classes/DRb/DRbUnknownError.html","","<p>An exception wrapping a DRb::DRbUnknown object\n",null,1],["DRb::ExtServ","","ruby/classes/DRb/ExtServ.html","","",null,1],["DRb::ExtServManager","","ruby/classes/DRb/ExtServManager.html","","",null,1],["DRb::GW","","ruby/classes/DRb/GW.html","","<p>The GW provides a synchronized store for participants in the gateway to communicate.\n",null,1],["DRb::GWIdConv","","ruby/classes/DRb/GWIdConv.html","","<p>Gateway id conversion forms a gateway between different DRb protocols or networks.\n<p>The gateway needs to …\n",null,1],["DRb::ThreadObject","","ruby/classes/DRb/ThreadObject.html","","",null,1],["DRb::TimerIdConv","","ruby/classes/DRb/TimerIdConv.html","","<p>Timer id conversion keeps objects alive for a certain amount of time after their last access.  The default …\n",null,1],["DRb::TimerIdConv::TimerHolder2","","ruby/classes/DRb/TimerIdConv/TimerHolder2.html","","",null,1],["DRb::TimerIdConv::TimerHolder2::InvalidIndexError","","ruby/classes/DRb/TimerIdConv/TimerHolder2/InvalidIndexError.html","","",null,1],["DRb::WeakIdConv","","ruby/classes/DRb/WeakIdConv.html","","<p>To use WeakIdConv:\n\n<pre><code>DRb.start_service(nil, nil, {:idconv =&gt; DRb::WeakIdConv.new})\n</code></pre>\n",null,1],["DRb::WeakIdConv::WeakSet","","ruby/classes/DRb/WeakIdConv/WeakSet.html","","",null,1],["Data","","ruby/classes/Data.html","","<p>Class Data provides a convenient way to define simple classes for value-alike objects.\n<p>The simplest example …\n",null,1],["Date","","rails/classes/Date.html","","",null,0],["Date","","ruby/classes/Date.html","","<p>Class Date provides methods for storing and manipulating calendar dates.\n<p>Consider using class Time instead …\n",null,1],["Date::Error","","ruby/classes/Date/Error.html","","<p>Exception for invalid date/time\n",null,1],["DateAndTime","","rails/classes/DateAndTime.html","","",null,0],["DateAndTime::Calculations","","rails/classes/DateAndTime/Calculations.html","","",null,0],["DateAndTime::Compatibility","","rails/classes/DateAndTime/Compatibility.html","","",null,0],["DateAndTime::Zones","","rails/classes/DateAndTime/Zones.html","","",null,0],["DateTime","","rails/classes/DateTime.html","","",null,0],["DateTime","","ruby/classes/DateTime.html","","<p>DateTime\n<p>A subclass of Date that easily handles date, hour, minute, second, and offset.\n<p>DateTime class …\n",null,1],["DelegateClass","Object","ruby/classes/Object.html#method-i-DelegateClass","(superclass, &block)","<p>The primary interface to this library.  Use to setup delegation when defining your class.\n\n<pre><code>class MyClass ...\n</code></pre>\n",null,1],["Delegator","","rails/classes/Delegator.html","","",null,0],["Delegator","","ruby/classes/Delegator.html","","<p>This library provides three different ways to delegate method calls to an object.  The easiest to use …\n",null,1],["DeleteKey","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-DeleteKey","(hkey, name)","",null,1],["DeleteValue","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-DeleteValue","(hkey, name)","",null,1],["DidYouMean","","ruby/classes/DidYouMean.html","","<p>The <code>DidYouMean</code> gem adds functionality to suggest possible method/class names upon errors such as <code>NameError</code> …\n",null,1],["DidYouMean::ClassNameChecker","","ruby/classes/DidYouMean/ClassNameChecker.html","","",null,1],["DidYouMean::ClassNameChecker::ClassName","","ruby/classes/DidYouMean/ClassNameChecker/ClassName.html","","",null,1],["DidYouMean::Correctable","","ruby/classes/DidYouMean/Correctable.html","","",null,1],["DidYouMean::Formatter","","ruby/classes/DidYouMean/Formatter.html","","<p>The <code>DidYouMean::Formatter</code> is the basic, default formatter for the gem. The formatter responds to the …\n",null,1],["DidYouMean::Jaro","","ruby/classes/DidYouMean/Jaro.html","","",null,1],["DidYouMean::JaroWinkler","","ruby/classes/DidYouMean/JaroWinkler.html","","",null,1],["DidYouMean::KeyErrorChecker","","ruby/classes/DidYouMean/KeyErrorChecker.html","","",null,1],["DidYouMean::MethodNameChecker","","ruby/classes/DidYouMean/MethodNameChecker.html","","",null,1],["DidYouMean::NullChecker","","ruby/classes/DidYouMean/NullChecker.html","","",null,1],["DidYouMean::PatternKeyNameChecker","","ruby/classes/DidYouMean/PatternKeyNameChecker.html","","",null,1],["DidYouMean::PlainFormatter","","ruby/classes/DidYouMean/Formatter.html","","<p>The <code>DidYouMean::Formatter</code> is the basic, default formatter for the gem. The formatter responds to the …\n",null,1],["DidYouMean::RequirePathChecker","","ruby/classes/DidYouMean/RequirePathChecker.html","","",null,1],["DidYouMean::SpellChecker","","ruby/classes/DidYouMean/SpellChecker.html","","",null,1],["DidYouMean::TreeSpellChecker","","ruby/classes/DidYouMean/TreeSpellChecker.html","","<p>spell checker for a dictionary that has a tree structure, see doc/tree_spell_checker_api.md\n",null,1],["DidYouMean::VariableNameChecker","","ruby/classes/DidYouMean/VariableNameChecker.html","","",null,1],["DidYouMean::VerboseFormatter","","ruby/classes/DidYouMean/Formatter.html","","<p>The <code>DidYouMean::Formatter</code> is the basic, default formatter for the gem. The formatter responds to the …\n",null,1],["Digest","","rails/classes/Digest.html","","",null,0],["Digest","","ruby/classes/Digest.html","","<p>This module provides a framework for message digest libraries.\n<p>You may want to look at OpenSSL::Digest …\n",null,1],["Digest","Object","ruby/classes/Object.html#method-i-Digest","(name)","<p>Returns a Digest subclass by <code>name</code> in a thread-safe manner even when on-demand loading is involved.\n\n<pre><code>require ...\n</code></pre>\n",null,1],["Digest","OpenSSL","ruby/classes/OpenSSL.html#method-c-Digest","(name)","<p>Returns a Digest subclass by <em>name</em>\n\n<pre><code>require &#39;openssl&#39;\n\nOpenSSL::Digest(&quot;MD5&quot;)\n# =&gt; OpenSSL::Digest::MD5 ...\n</code></pre>\n",null,1],["Digest::Base","","ruby/classes/Digest/Base.html","","<p>This abstract class provides a common interface to message digest implementation classes written in  …\n",null,1],["Digest::Class","","ruby/classes/Digest/Class.html","","<p>This module stands as a base class for digest implementation classes.\n",null,1],["Digest::Instance","","ruby/classes/Digest/Instance.html","","<p>This module provides instance methods for a digest implementation object to calculate message digest …\n",null,1],["Digest::MD5","","ruby/classes/Digest/MD5.html","","<p>A class for calculating message digests using the MD5 Message-Digest Algorithm by RSA Data Security, …\n",null,1],["Digest::RMD160","","ruby/classes/Digest/RMD160.html","","<p>A class for calculating message digests using RIPEMD-160 cryptographic hash function, designed by Hans …\n",null,1],["Digest::SHA1","","ruby/classes/Digest/SHA1.html","","<p>A class for calculating message digests using the SHA-1 Secure Hash Algorithm by NIST (the US’ National …\n",null,1],["Digest::SHA2","","ruby/classes/Digest/SHA2.html","","<p>A meta digest provider class for SHA256, SHA384 and SHA512.\n<p>FIPS 180-2 describes SHA2 family of digest …\n",null,1],["Digest::UUID","","rails/classes/Digest/UUID.html","","",null,0],["Dir","","ruby/classes/Dir.html","","<p>An object of class Dir represents a directory in the underlying file system.\n<p>It consists mainly of:\n<p>A string …\n",null,1],["E","BigMath","ruby/classes/BigMath.html#method-i-E","(prec)","<p>Computes e (the base of natural logarithms) to the specified number of digits of precision, <code>numeric</code>. …\n",null,1],["ENV","","ruby/classes/ENV.html","","<p>ENV is a hash-like accessor for environment variables.\n<p>Interaction with the Operating System\n<p>The ENV object …\n",null,1],["EOFError","","ruby/classes/EOFError.html","","<p>Raised by some IO operations when reaching the end of file. Many IO methods exist in two forms,\n<p>one that …\n",null,1],["ERB","","rails/classes/ERB.html","","",null,0],["ERB","","ruby/classes/ERB.html","","<p>ERB – Ruby Templating\n<p>Introduction\n<p>ERB provides an easy to use but powerful templating system for Ruby …\n",null,1],["ERB::DefMethod","","ruby/classes/ERB/DefMethod.html","","",null,1],["ERB::Escape","","ruby/classes/ERB/Escape.html","","",null,1],["ERB::Util","","rails/classes/ERB/Util.html","","",null,0],["ERB::Util","","ruby/classes/ERB/Util.html","","",null,1],["Encoding","","ruby/classes/Encoding.html","","<p>An Encoding instance represents a character encoding usable in Ruby. It is defined as a constant under …\n",null,1],["Encoding::CompatibilityError","","ruby/classes/Encoding/CompatibilityError.html","","<p>Raised by Encoding and String methods when the source encoding is incompatible with the target encoding. …\n",null,1],["Encoding::Converter","","ruby/classes/Encoding/Converter.html","","<p>Encoding conversion class.\n",null,1],["Encoding::ConverterNotFoundError","","ruby/classes/Encoding/ConverterNotFoundError.html","","<p>Raised by transcoding methods when a named encoding does not correspond with a known converter.\n",null,1],["Encoding::InvalidByteSequenceError","","ruby/classes/Encoding/InvalidByteSequenceError.html","","<p>Raised by Encoding and String methods when the string being transcoded contains a byte invalid for the …\n",null,1],["Encoding::UndefinedConversionError","","ruby/classes/Encoding/UndefinedConversionError.html","","<p>Raised by Encoding and String methods when a transcoding operation fails.\n",null,1],["EncodingError","","ruby/classes/EncodingError.html","","<p>EncodingError is the base class for encoding errors.\n",null,1],["English","","ruby/classes/English.html","","<p>Include the English library file in a Ruby script, and you can reference the global variables such as …\n",null,1],["EnumKey","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-EnumKey","(hkey, index)","",null,1],["EnumValue","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-EnumValue","(hkey, index)","",null,1],["Enumerable","","rails/classes/Enumerable.html","","",null,0],["Enumerable","","ruby/classes/Enumerable.html","","<p>What’s Here\n<p>Module Enumerable provides methods that are useful to a collection class for:\n<p>Querying …\n",null,1],["Enumerable::SoleItemExpectedError","","rails/classes/Enumerable/SoleItemExpectedError.html","","<p>Error generated by <code>sole</code> when called on an enumerable that doesn’t have exactly one item.\n",null,0],["Enumerator","","ruby/classes/Enumerator.html","","<p>A class which allows both internal and external iteration.\n<p>An Enumerator can be created by the following …\n",null,1],["Enumerator::ArithmeticSequence","","ruby/classes/Enumerator/ArithmeticSequence.html","","<p>Enumerator::ArithmeticSequence is a subclass of Enumerator, that is a representation of sequences of …\n",null,1],["Enumerator::Chain","","ruby/classes/Enumerator/Chain.html","","<p>Enumerator::Chain is a subclass of Enumerator, which represents a chain of enumerables that works as …\n",null,1],["Enumerator::Generator","","ruby/classes/Enumerator/Generator.html","","<p>Generator\n",null,1],["Enumerator::Lazy","","ruby/classes/Enumerator/Lazy.html","","<p>Enumerator::Lazy is a special type of Enumerator, that allows constructing chains of operations without …\n",null,1],["Enumerator::Producer","","ruby/classes/Enumerator/Producer.html","","<p>Producer\n",null,1],["Enumerator::Product","","ruby/classes/Enumerator/Product.html","","<p>Enumerator::Product generates a Cartesian product of any number of enumerable objects.  Iterating over …\n",null,1],["Enumerator::Yielder","","ruby/classes/Enumerator/Yielder.html","","<p>Yielder\n",null,1],["Errno","","ruby/classes/Errno.html","","<p>Ruby exception objects are subclasses of Exception.  However, operating systems typically report errors …\n",null,1],["ErrorHighlight","","ruby/classes/ErrorHighlight.html","","",null,1],["ErrorHighlight::CoreExt","","ruby/classes/ErrorHighlight/CoreExt.html","","",null,1],["ErrorHighlight::DefaultFormatter","","ruby/classes/ErrorHighlight/DefaultFormatter.html","","",null,1],["ErrorHighlight::Spotter","","ruby/classes/ErrorHighlight/Spotter.html","","",null,1],["ErrorHighlight::Spotter::NonAscii","","ruby/classes/ErrorHighlight/Spotter/NonAscii.html","","",null,1],["Etc","","ruby/classes/Etc.html","","<p>The Etc module provides access to information typically stored in files in the <code>/etc</code> directory on Unix …\n",null,1],["Etc::Group","","ruby/classes/Etc/Group.html","","<p>Group is a placeholder Struct for user group database on Unix systems.\n<p>The struct contains the following …\n",null,1],["Etc::Passwd","","ruby/classes/Etc/Passwd.html","","<p>Passwd is a placeholder Struct for user database on Unix systems.\n<p>The struct contains the following members …\n",null,1],["Exception","","rails/classes/Exception.html","","",null,0],["Exception","","ruby/classes/Exception.html","","<p>Class Exception and its subclasses are used to communicate between Kernel#raise and <code>rescue</code> statements …\n",null,1],["Exhibit","","rails/classes/Exhibit.html","","",null,0],["FalseClass","","rails/classes/FalseClass.html","","",null,0],["FalseClass","","ruby/classes/FalseClass.html","","<p>The global value <code>false</code> is the only instance of class FalseClass and represents a logically false value …\n",null,1],["Fcntl","","ruby/classes/Fcntl.html","","",null,1],["Fiber","","ruby/classes/Fiber.html","","<p>Fibers are primitives for implementing light weight cooperative concurrency in Ruby. Basically they are …\n",null,1],["Fiber::Pool","","ruby/classes/Fiber/Pool.html","","",null,1],["Fiber::Scheduler","","ruby/classes/Fiber/Scheduler.html","","<p>This is not an existing class, but documentation of the interface that Scheduler object should comply …\n",null,1],["FiberError","","ruby/classes/FiberError.html","","<p>Raised when an invalid operation is attempted on a Fiber, in particular when attempting to call/resume …\n",null,1],["Fiddle","","ruby/classes/Fiddle.html","","<p>A libffi wrapper for Ruby.\n<p>Description\n<p>Fiddle is an extension to translate a foreign function interface …\n",null,1],["Fiddle::BasicTypes","","ruby/classes/Fiddle/BasicTypes.html","","<p>Adds basic type aliases to the including class for use with Fiddle::Importer.\n<p>The aliases added are <code>uint</code> …\n",null,1],["Fiddle::CParser","","ruby/classes/Fiddle/CParser.html","","<p>A mixin that provides methods for parsing C struct and prototype signatures.\n<p>Example\n\n<pre><code>require &#39;fiddle/import&#39; ...\n</code></pre>\n",null,1],["Fiddle::CStruct","","ruby/classes/Fiddle/CStruct.html","","<p>A base class for objects representing a C structure\n",null,1],["Fiddle::CStructBuilder","","ruby/classes/Fiddle/CStructBuilder.html","","<p>Used to construct C classes (CUnion, CStruct, etc)\n<p>Fiddle::Importer#struct and Fiddle::Importer#union …\n",null,1],["Fiddle::CStructEntity","","ruby/classes/Fiddle/CStructEntity.html","","<p>A pointer to a C structure\n",null,1],["Fiddle::CUnion","","ruby/classes/Fiddle/CUnion.html","","<p>A base class for objects representing a C union\n",null,1],["Fiddle::CUnionEntity","","ruby/classes/Fiddle/CUnionEntity.html","","<p>A pointer to a C union\n",null,1],["Fiddle::ClearedReferenceError","","ruby/classes/Fiddle/ClearedReferenceError.html","","<p>Cleared reference exception\n",null,1],["Fiddle::Closure","","ruby/classes/Fiddle/Closure.html","","<p>Description\n<p>An FFI closure wrapper, for handling callbacks.\n<p>Example\n",null,1],["Fiddle::Closure::BlockCaller","","ruby/classes/Fiddle/Closure/BlockCaller.html","","<p>Extends Fiddle::Closure to allow for building the closure in a block\n",null,1],["Fiddle::CompositeHandler","","ruby/classes/Fiddle/CompositeHandler.html","","<p>Used internally by Fiddle::Importer\n",null,1],["Fiddle::DLError","","ruby/classes/Fiddle/DLError.html","","<p>standard dynamic load exception\n",null,1],["Fiddle::Error","","ruby/classes/Fiddle/Error.html","","<p>Generic error class for Fiddle\n",null,1],["Fiddle::Function","","ruby/classes/Fiddle/Function.html","","<p>Description\n<p>A representation of a C function\n<p>Examples\n",null,1],["Fiddle::Handle","","ruby/classes/Fiddle/Handle.html","","<p>The Fiddle::Handle is the manner to access the dynamic library\n<p>Example\n<p>Setup\n",null,1],["Fiddle::Importer","","ruby/classes/Fiddle/Importer.html","","<p>A DSL that provides the means to dynamically load libraries and build modules around them including calling …\n",null,1],["Fiddle::Pinned","","ruby/classes/Fiddle/Pinned.html","","",null,1],["Fiddle::Pointer","","ruby/classes/Fiddle/Pointer.html","","<p>Fiddle::Pointer is a class to handle C pointers\n",null,1],["Fiddle::StructArray","","ruby/classes/Fiddle/StructArray.html","","<p>Wrapper for arrays within a struct\n",null,1],["Fiddle::Types","","ruby/classes/Fiddle/Types.html","","",null,1],["Fiddle::Win32Types","","ruby/classes/Fiddle/Win32Types.html","","<p>Adds Windows type aliases to the including class for use with Fiddle::Importer.\n<p>The aliases added are: …\n",null,1],["File","","rails/classes/File.html","","",null,0],["File","","ruby/classes/File.html","","<p>A File object is a representation of a file in the underlying platform.\n<p>Class File extends module FileTest …\n",null,1],["File::File::Constants","","ruby/classes/File/File/Constants.html","","<p>Document-module: File::Constants\n<p>Module <code>File::Constants</code> defines file-related constants.\n<p>There are two families …\n",null,1],["File::Stat","","ruby/classes/File/Stat.html","","<p>Objects of class File::Stat encapsulate common status information for File objects. The information is …\n",null,1],["FileTest","","ruby/classes/FileTest.html","","<p>FileTest implements file test operations similar to those used in File::Stat. It exists as a standalone …\n",null,1],["FileUtils","","ruby/classes/FileUtils.html","","<p>Namespace for file utility methods for copying, moving, removing, etc.\n<p>What’s Here\n<p>First, what’s elsewhere. …\n",null,1],["FileUtils::DryRun","","ruby/classes/FileUtils/DryRun.html","","<p>This module has all methods of FileUtils module, but never changes files/directories, with printing message …\n",null,1],["FileUtils::NoWrite","","ruby/classes/FileUtils/NoWrite.html","","<p>This module has all methods of FileUtils module, but never changes files/directories.  This equates to …\n",null,1],["FileUtils::StreamUtils_","","ruby/classes/FileUtils/StreamUtils_.html","","",null,1],["FileUtils::Verbose","","ruby/classes/FileUtils/Verbose.html","","<p>This module has all methods of FileUtils module, but it outputs messages before acting.  This equates …\n",null,1],["Find","","ruby/classes/Find.html","","<p>The <code>Find</code> module supports the top-down traversal of a set of file paths.\n<p>For example, to total the size …\n",null,1],["Float","","rails/classes/Float.html","","",null,0],["Float","","ruby/classes/Float.html","","<p>A Float object represents a sometimes-inexact real number using the native architecture’s double-precision …\n",null,1],["Float","Kernel","ruby/classes/Kernel.html#method-i-Float","(arg, exception: true)","<p>Returns <em>arg</em> converted to a float. Numeric types are converted directly, and with exception to String …\n",null,1],["FloatDomainError","","ruby/classes/FloatDomainError.html","","<p>Raised when attempting to convert special float values (in particular <code>Infinity</code> or <code>NaN</code>) to numerical classes …\n",null,1],["FlushKey","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-FlushKey","(hkey)","",null,1],["Forwardable","","ruby/classes/Forwardable.html","","<p>The Forwardable module provides delegation of specified methods to a designated object, using the methods …\n",null,1],["FrozenError","","ruby/classes/FrozenError.html","","<p>Raised when there is an attempt to modify a frozen object.\n\n<pre><code>[1, 2, 3].freeze &lt;&lt; 4\n</code></pre>\n<p><em>raises the exception:</em> …\n",null,1],["GC","","ruby/classes/GC.html","","<p>The GC module provides an interface to Ruby’s mark and sweep garbage collection mechanism.\n<p>Some of …\n",null,1],["GC::Profiler","","ruby/classes/GC/Profiler.html","","<p>The GC profiler provides access to information on GC runs including time, length and object space size. …\n",null,1],["GET","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-GET","()","<p>Override Rack’s GET method to support indifferent access.\n",null,0],["Gem","","ruby/classes/Gem.html","","<p>RubyGems is the Ruby standard for publishing and managing third party libraries.\n<p>For user documentation, …\n",null,1],["Gem::AvailableSet","","ruby/classes/Gem/AvailableSet.html","","",null,1],["Gem::BUNDLED_GEMS","","ruby/classes/Gem/BUNDLED_GEMS.html","","",null,1],["Gem::BasicSpecification","","ruby/classes/Gem/BasicSpecification.html","","<p>BasicSpecification is an abstract class which implements some common code used by both Specification …\n",null,1],["Gem::BundlerVersionFinder","","ruby/classes/Gem/BundlerVersionFinder.html","","",null,1],["Gem::CIDetector","","ruby/classes/Gem/CIDetector.html","","",null,1],["Gem::Command","","ruby/classes/Gem/Command.html","","<p>Base class for all Gem commands.  When creating a new gem command, define #initialize, #execute, #arguments …\n",null,1],["Gem::CommandLineError","","ruby/classes/Gem/CommandLineError.html","","",null,1],["Gem::CommandManager","","ruby/classes/Gem/CommandManager.html","","<p>The command manager registers and installs all the individual sub-commands supported by the gem command. …\n",null,1],["Gem::Commands","","ruby/classes/Gem/Commands.html","","<p>Commands will be placed in this namespace\n",null,1],["Gem::Commands::BuildCommand","","ruby/classes/Gem/Commands/BuildCommand.html","","",null,1],["Gem::Commands::CertCommand","","ruby/classes/Gem/Commands/CertCommand.html","","",null,1],["Gem::Commands::CheckCommand","","ruby/classes/Gem/Commands/CheckCommand.html","","",null,1],["Gem::Commands::CleanupCommand","","ruby/classes/Gem/Commands/CleanupCommand.html","","",null,1],["Gem::Commands::ContentsCommand","","ruby/classes/Gem/Commands/ContentsCommand.html","","",null,1],["Gem::Commands::DependencyCommand","","ruby/classes/Gem/Commands/DependencyCommand.html","","",null,1],["Gem::Commands::EnvironmentCommand","","ruby/classes/Gem/Commands/EnvironmentCommand.html","","",null,1],["Gem::Commands::ExecCommand","","ruby/classes/Gem/Commands/ExecCommand.html","","",null,1],["Gem::Commands::FetchCommand","","ruby/classes/Gem/Commands/FetchCommand.html","","",null,1],["Gem::Commands::GenerateIndexCommand","","ruby/classes/Gem/Commands/GenerateIndexCommand.html","","",null,1],["Gem::Commands::GenerateIndexCommand::RubygemsTrampoline","","ruby/classes/Gem/Commands/GenerateIndexCommand/RubygemsTrampoline.html","","",null,1],["Gem::Commands::HelpCommand","","ruby/classes/Gem/Commands/HelpCommand.html","","",null,1],["Gem::Commands::InfoCommand","","ruby/classes/Gem/Commands/InfoCommand.html","","",null,1],["Gem::Commands::InstallCommand","","ruby/classes/Gem/Commands/InstallCommand.html","","<p>Gem installer command line tool\n<p>See ‘gem help install`\n",null,1],["Gem::Commands::ListCommand","","ruby/classes/Gem/Commands/ListCommand.html","","<p>Searches for gems starting with the supplied argument.\n",null,1],["Gem::Commands::LockCommand","","ruby/classes/Gem/Commands/LockCommand.html","","",null,1],["Gem::Commands::MirrorCommand","","ruby/classes/Gem/Commands/MirrorCommand.html","","",null,1],["Gem::Commands::OpenCommand","","ruby/classes/Gem/Commands/OpenCommand.html","","",null,1],["Gem::Commands::OutdatedCommand","","ruby/classes/Gem/Commands/OutdatedCommand.html","","",null,1],["Gem::Commands::OwnerCommand","","ruby/classes/Gem/Commands/OwnerCommand.html","","",null,1],["Gem::Commands::PristineCommand","","ruby/classes/Gem/Commands/PristineCommand.html","","",null,1],["Gem::Commands::PushCommand","","ruby/classes/Gem/Commands/PushCommand.html","","",null,1],["Gem::Commands::QueryCommand","","ruby/classes/Gem/Commands/QueryCommand.html","","",null,1],["Gem::Commands::RdocCommand","","ruby/classes/Gem/Commands/RdocCommand.html","","",null,1],["Gem::Commands::RebuildCommand","","ruby/classes/Gem/Commands/RebuildCommand.html","","",null,1],["Gem::Commands::SearchCommand","","ruby/classes/Gem/Commands/SearchCommand.html","","",null,1],["Gem::Commands::ServerCommand","","ruby/classes/Gem/Commands/ServerCommand.html","","",null,1],["Gem::Commands::SetupCommand","","ruby/classes/Gem/Commands/SetupCommand.html","","<p>Installs RubyGems itself.  This command is ordinarily only available from a RubyGems checkout or tarball. …\n",null,1],["Gem::Commands::SetupCommand::MakeDirs","","ruby/classes/Gem/Commands/SetupCommand/MakeDirs.html","","",null,1],["Gem::Commands::SigninCommand","","ruby/classes/Gem/Commands/SigninCommand.html","","",null,1],["Gem::Commands::SignoutCommand","","ruby/classes/Gem/Commands/SignoutCommand.html","","",null,1],["Gem::Commands::SourcesCommand","","ruby/classes/Gem/Commands/SourcesCommand.html","","",null,1],["Gem::Commands::SpecificationCommand","","ruby/classes/Gem/Commands/SpecificationCommand.html","","",null,1],["Gem::Commands::StaleCommand","","ruby/classes/Gem/Commands/StaleCommand.html","","",null,1],["Gem::Commands::UninstallCommand","","ruby/classes/Gem/Commands/UninstallCommand.html","","<p>Gem uninstaller command line tool\n<p>See ‘gem help uninstall`\n",null,1],["Gem::Commands::UnpackCommand","","ruby/classes/Gem/Commands/UnpackCommand.html","","",null,1],["Gem::Commands::UpdateCommand","","ruby/classes/Gem/Commands/UpdateCommand.html","","",null,1],["Gem::Commands::WhichCommand","","ruby/classes/Gem/Commands/WhichCommand.html","","",null,1],["Gem::Commands::YankCommand","","ruby/classes/Gem/Commands/YankCommand.html","","",null,1],["Gem::ConfigFile","","ruby/classes/Gem/ConfigFile.html","","<p>Gem::ConfigFile RubyGems options and gem command options from gemrc.\n<p>gemrc is a YAML file that uses strings …\n",null,1],["Gem::ConflictError","","ruby/classes/Gem/ConflictError.html","","<p>Raised when there are conflicting gem specs loaded\n",null,1],["Gem::ConsoleUI","","ruby/classes/Gem/ConsoleUI.html","","<p>Subclass of StreamUI that instantiates the user interaction using $stdin, $stdout, and $stderr.\n",null,1],["Gem::DefaultUserInteraction","","ruby/classes/Gem/DefaultUserInteraction.html","","<p>Module that defines the default UserInteraction.  Any class including this module will have access to …\n",null,1],["Gem::Dependency","","ruby/classes/Gem/Dependency.html","","<p>The Dependency class holds a Gem name and a Gem::Requirement.\n",null,1],["Gem::DependencyError","","ruby/classes/Gem/DependencyError.html","","",null,1],["Gem::DependencyInstaller","","ruby/classes/Gem/DependencyInstaller.html","","<p>Installs a gem along with all its dependencies from local and remote gems.\n",null,1],["Gem::DependencyList","","ruby/classes/Gem/DependencyList.html","","<p>Gem::DependencyList is used for installing and uninstalling gems in the correct order to avoid conflicts. …\n",null,1],["Gem::DependencyRemovalException","","ruby/classes/Gem/DependencyRemovalException.html","","",null,1],["Gem::DependencyResolutionError","","ruby/classes/Gem/DependencyResolutionError.html","","<p>Raised by Gem::Resolver when a Gem::Dependency::Conflict reaches the toplevel.  Indicates which dependencies …\n",null,1],["Gem::Deprecate","","ruby/classes/Gem/Deprecate.html","","<p>Provides 3 methods for declaring when something is going away.\n<p>+deprecate(name, repl, year, month)+:\n\n<pre><code>Indicate ...\n</code></pre>\n",null,1],["Gem::Doctor","","ruby/classes/Gem/Doctor.html","","<p>Cleans up after a partially-failed uninstall or for an invalid Gem::Specification.\n<p>If a specification …\n",null,1],["Gem::DocumentError","","ruby/classes/Gem/DocumentError.html","","",null,1],["Gem::EndOfYAMLException","","ruby/classes/Gem/EndOfYAMLException.html","","<p>Potentially raised when a specification is validated.\n",null,1],["Gem::ErrorReason","","ruby/classes/Gem/ErrorReason.html","","",null,1],["Gem::Exception","","ruby/classes/Gem/Exception.html","","<p>Base exception class for RubyGems.  All exception raised by RubyGems are a subclass of this one.\n",null,1],["Gem::Ext","","ruby/classes/Gem/Ext.html","","<p>Classes for building C extensions live here.\n",null,1],["Gem::Ext::BuildError","","ruby/classes/Gem/Ext/BuildError.html","","",null,1],["Gem::Ext::Builder","","ruby/classes/Gem/Ext/Builder.html","","",null,1],["Gem::Ext::CargoBuilder","","ruby/classes/Gem/Ext/CargoBuilder.html","","<p>This class is used by rubygems to build Rust extensions. It is a thin-wrapper over the ‘cargo rustc` …\n",null,1],["Gem::Ext::CargoBuilder::DylibNotFoundError","","ruby/classes/Gem/Ext/CargoBuilder/DylibNotFoundError.html","","<p>Error raised when no cdylib artifact was created\n",null,1],["Gem::Ext::CargoBuilder::LinkFlagConverter","","ruby/classes/Gem/Ext/CargoBuilder/LinkFlagConverter.html","","<p>Converts Ruby link flags into something cargo understands\n",null,1],["Gem::Ext::CmakeBuilder","","ruby/classes/Gem/Ext/CmakeBuilder.html","","",null,1],["Gem::Ext::ConfigureBuilder","","ruby/classes/Gem/Ext/ConfigureBuilder.html","","",null,1],["Gem::Ext::ExtConfBuilder","","ruby/classes/Gem/Ext/ExtConfBuilder.html","","",null,1],["Gem::Ext::RakeBuilder","","ruby/classes/Gem/Ext/RakeBuilder.html","","",null,1],["Gem::FilePermissionError","","ruby/classes/Gem/FilePermissionError.html","","<p>Signals that a file permission error is preventing the user from operating on the given directory.\n",null,1],["Gem::FormatException","","ruby/classes/Gem/FormatException.html","","<p>Used to raise parsing and loading errors\n",null,1],["Gem::GemNotFoundException","","ruby/classes/Gem/GemNotFoundException.html","","",null,1],["Gem::GemNotInHomeException","","ruby/classes/Gem/GemNotInHomeException.html","","<p>Raised when attempting to uninstall a gem that isn’t in GEM_HOME.\n",null,1],["Gem::GemRunner","","ruby/classes/Gem/GemRunner.html","","<p>Run an instance of the gem program.\n<p>Gem::GemRunner is only intended for internal use by RubyGems itself. …\n",null,1],["Gem::GemcutterUtilities","","ruby/classes/Gem/GemcutterUtilities.html","","<p>Utility methods for using the RubyGems API.\n<p>The WebauthnListener class retrieves an OTP after a user successfully …\n",null,1],["Gem::GemcutterUtilities::WebauthnListener","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener.html","","",null,1],["Gem::GemcutterUtilities::WebauthnListener::BadRequestResponse","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/BadRequestResponse.html","","",null,1],["Gem::GemcutterUtilities::WebauthnListener::MethodNotAllowedResponse","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/MethodNotAllowedResponse.html","","",null,1],["Gem::GemcutterUtilities::WebauthnListener::NoContentResponse","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/NoContentResponse.html","","",null,1],["Gem::GemcutterUtilities::WebauthnListener::NotFoundResponse","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/NotFoundResponse.html","","",null,1],["Gem::GemcutterUtilities::WebauthnListener::OkResponse","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/OkResponse.html","","",null,1],["Gem::GemcutterUtilities::WebauthnListener::Response","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/Response.html","","",null,1],["Gem::GemcutterUtilities::WebauthnListener::SocketResponder","","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/SocketResponder.html","","",null,1],["Gem::GemcutterUtilities::WebauthnPoller","","ruby/classes/Gem/GemcutterUtilities/WebauthnPoller.html","","",null,1],["Gem::GemspecHelpers","","ruby/classes/Gem/GemspecHelpers.html","","<p>Mixin methods for commands that work with gemspecs.\n",null,1],["Gem::ImpossibleDependenciesError","","ruby/classes/Gem/ImpossibleDependenciesError.html","","<p>Raised by Gem::Resolver when dependencies conflict and create the inability to find a valid possible …\n",null,1],["Gem::InstallError","","ruby/classes/Gem/InstallError.html","","",null,1],["Gem::InstallUpdateOptions","","ruby/classes/Gem/InstallUpdateOptions.html","","<p>Mixin methods for install and update options for Gem::Commands\n",null,1],["Gem::Installer","","ruby/classes/Gem/Installer.html","","<p>The installer installs the files contained in the .gem into the Gem.home.\n<p>Gem::Installer does the work …\n",null,1],["Gem::Installer::FakePackage","","ruby/classes/Gem/Installer/FakePackage.html","","",null,1],["Gem::InstallerUninstallerUtils","","ruby/classes/Gem/InstallerUninstallerUtils.html","","<p>Helper methods for both Gem::Installer and Gem::Uninstaller\n",null,1],["Gem::InvalidSpecificationException","","ruby/classes/Gem/InvalidSpecificationException.html","","<p>Potentially raised when a specification is validated.\n",null,1],["Gem::Licenses","","ruby/classes/Gem/Licenses.html","","",null,1],["Gem::LoadError","","ruby/classes/Gem/LoadError.html","","<p>Raised when RubyGems is unable to load or activate a gem.  Contains the name and version requirements …\n",null,1],["Gem::LocalRemoteOptions","","ruby/classes/Gem/LocalRemoteOptions.html","","<p>Mixin methods for local and remote Gem::Command options.\n",null,1],["Gem::MissingSpecError","","ruby/classes/Gem/MissingSpecError.html","","<p>Raised when trying to activate a gem, and that gem does not exist on the system.  Instead of rescuing …\n",null,1],["Gem::MissingSpecVersionError","","ruby/classes/Gem/MissingSpecVersionError.html","","<p>Raised when trying to activate a gem, and the gem exists on the system, but not the requested version. …\n",null,1],["Gem::NameTuple","","ruby/classes/Gem/NameTuple.html","","<p>Represents a gem of name <code>name</code> at <code>version</code> of <code>platform</code>. These wrap the data returned from the indexes. …\n",null,1],["Gem::NoAliasYAMLTree","","ruby/classes/Gem/NoAliasYAMLTree.html","","",null,1],["Gem::OperationNotSupportedError","","ruby/classes/Gem/OperationNotSupportedError.html","","",null,1],["Gem::Package","","ruby/classes/Gem/Package.html","","<p>Example using a Gem::Package\n<p>Builds a .gem file given a Gem::Specification. A .gem file is a tarball which …\n",null,1],["Gem::Package::DigestIO","","ruby/classes/Gem/Package/DigestIO.html","","<p>IO wrapper that creates digests of contents written to the IO it wraps.\n",null,1],["Gem::Package::Error","","ruby/classes/Gem/Package/Error.html","","",null,1],["Gem::Package::FormatError","","ruby/classes/Gem/Package/FormatError.html","","",null,1],["Gem::Package::NonSeekableIO","","ruby/classes/Gem/Package/NonSeekableIO.html","","",null,1],["Gem::Package::Old","","ruby/classes/Gem/Package/Old.html","","<p>The format class knows the guts of the ancient .gem file format and provides the capability to read such …\n",null,1],["Gem::Package::PathError","","ruby/classes/Gem/Package/PathError.html","","",null,1],["Gem::Package::SymlinkError","","ruby/classes/Gem/Package/SymlinkError.html","","",null,1],["Gem::Package::TarHeader","","ruby/classes/Gem/Package/TarHeader.html","","<p>A header for a tar file\n",null,1],["Gem::Package::TarInvalidError","","ruby/classes/Gem/Package/TarInvalidError.html","","<p>Raised when a tar file is corrupt\n",null,1],["Gem::Package::TarReader","","ruby/classes/Gem/Package/TarReader.html","","<p>TarReader reads tar files and allows iteration over their items\n",null,1],["Gem::Package::TarReader::Entry","","ruby/classes/Gem/Package/TarReader/Entry.html","","<p>Class for reading entries out of a tar file\n",null,1],["Gem::Package::TarWriter","","ruby/classes/Gem/Package/TarWriter.html","","<p>Allows writing of tar files\n",null,1],["Gem::Package::TarWriter::BoundedStream","","ruby/classes/Gem/Package/TarWriter/BoundedStream.html","","<p>IO wrapper that allows writing a limited amount of data\n",null,1],["Gem::Package::TarWriter::FileOverflow","","ruby/classes/Gem/Package/TarWriter/FileOverflow.html","","",null,1],["Gem::Package::TarWriter::RestrictedStream","","ruby/classes/Gem/Package/TarWriter/RestrictedStream.html","","<p>IO wrapper that provides only #write\n",null,1],["Gem::Package::TooLongFileName","","ruby/classes/Gem/Package/TooLongFileName.html","","",null,1],["Gem::PackageTask","","ruby/classes/Gem/PackageTask.html","","<p>Create a package based upon a Gem::Specification.  Gem packages, as well as zip files and tar/gzipped …\n",null,1],["Gem::PathSupport","","ruby/classes/Gem/PathSupport.html","","<p>Gem::PathSupport facilitates the GEM_HOME and GEM_PATH environment settings to the rest of RubyGems. …\n",null,1],["Gem::Platform","","ruby/classes/Gem/Platform.html","","<p>TruffleRuby &gt;= 24 defines REUSE_AS_BINARY_ON_TRUFFLERUBY in defaults/truffleruby. However, TruffleRuby …\n",null,1],["Gem::PlatformMismatch","","ruby/classes/Gem/PlatformMismatch.html","","<p>Generated when trying to lookup a gem to indicate that the gem was found, but that it isn’t usable …\n",null,1],["Gem::QueryUtils","","ruby/classes/Gem/QueryUtils.html","","",null,1],["Gem::RemoteError","","ruby/classes/Gem/RemoteError.html","","<p>Signals that a remote operation cannot be conducted, probably due to not being connected (or just not …\n",null,1],["Gem::RemoteFetcher","","ruby/classes/Gem/RemoteFetcher.html","","<p>RemoteFetcher handles the details of fetching gems and gem information from a remote source.\n",null,1],["Gem::RemoteFetcher::FetchError","","ruby/classes/Gem/RemoteFetcher/FetchError.html","","<p>A FetchError exception wraps up the various possible IO and HTTP failures that could happen while downloading …\n",null,1],["Gem::RemoteFetcher::UnknownHostError","","ruby/classes/Gem/RemoteFetcher/UnknownHostError.html","","<p>A FetchError that indicates that the reason for not being able to fetch data was that the host could …\n",null,1],["Gem::RemoteInstallationCancelled","","ruby/classes/Gem/RemoteInstallationCancelled.html","","",null,1],["Gem::RemoteInstallationSkipped","","ruby/classes/Gem/RemoteInstallationSkipped.html","","",null,1],["Gem::RemoteSourceException","","ruby/classes/Gem/RemoteSourceException.html","","<p>Represents an error communicating via HTTP.\n",null,1],["Gem::Request","","ruby/classes/Gem/Request.html","","",null,1],["Gem::RequestSet","","ruby/classes/Gem/RequestSet.html","","<p>A RequestSet groups a request to activate a set of dependencies.\n\n<pre><code>nokogiri = Gem::Dependency.new &#39;nokogiri&#39;, ...\n</code></pre>\n",null,1],["Gem::RequestSet::GemDependencyAPI","","ruby/classes/Gem/RequestSet/GemDependencyAPI.html","","<p>A semi-compatible DSL for the Bundler Gemfile and Isolate gem dependencies files.\n<p>To work with both the …\n",null,1],["Gem::RequestSet::Lockfile","","ruby/classes/Gem/RequestSet/Lockfile.html","","<p>Parses a gem.deps.rb.lock file and constructs a LockSet containing the dependencies found inside.  If …\n",null,1],["Gem::RequestSet::Lockfile::ParseError","","ruby/classes/Gem/RequestSet/Lockfile/ParseError.html","","<p>Raised when a lockfile cannot be parsed\n",null,1],["Gem::RequestSet::Lockfile::Parser","","ruby/classes/Gem/RequestSet/Lockfile/Parser.html","","",null,1],["Gem::RequestSet::Lockfile::Tokenizer","","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html","","",null,1],["Gem::Requirement","","ruby/classes/Gem/Requirement.html","","<p>A Requirement is a set of one or more version restrictions. It supports a few (<code>=, !=, &gt;, &lt;, &gt;=,</code> …\n",null,1],["Gem::Requirement::BadRequirementError","","ruby/classes/Gem/Requirement/BadRequirementError.html","","<p>Raised when a bad requirement is encountered\n",null,1],["Gem::Resolver","","ruby/classes/Gem/Resolver.html","","<p>Given a set of Gem::Dependency objects as <code>needed</code> and a way to query the set of available specs via <code>set</code> …\n",null,1],["Gem::Resolver::APISet","","ruby/classes/Gem/Resolver/APISet.html","","<p>The global rubygems pool, available via the rubygems.org API. Returns instances of APISpecification. …\n",null,1],["Gem::Resolver::APISet::GemParser","","ruby/classes/Gem/Resolver/APISet/GemParser.html","","",null,1],["Gem::Resolver::APISpecification","","ruby/classes/Gem/Resolver/APISpecification.html","","<p>Represents a specification retrieved via the rubygems.org API.\n<p>This is used to avoid loading the full …\n",null,1],["Gem::Resolver::ActivationRequest","","ruby/classes/Gem/Resolver/ActivationRequest.html","","<p>Specifies a Specification object that should be activated.  Also contains a dependency that was used …\n",null,1],["Gem::Resolver::BestSet","","ruby/classes/Gem/Resolver/BestSet.html","","<p>The BestSet chooses the best available method to query a remote index.\n<p>It combines IndexSet and APISet …\n",null,1],["Gem::Resolver::ComposedSet","","ruby/classes/Gem/Resolver/ComposedSet.html","","<p>A ComposedSet allows multiple sets to be queried like a single set.\n<p>To create a composed set with any …\n",null,1],["Gem::Resolver::Conflict","","ruby/classes/Gem/Resolver/Conflict.html","","<p>Used internally to indicate that a dependency conflicted with a spec that would be activated.\n",null,1],["Gem::Resolver::CurrentSet","","ruby/classes/Gem/Resolver/CurrentSet.html","","<p>A set which represents the installed gems. Respects all the normal settings that control where to look …\n",null,1],["Gem::Resolver::DependencyRequest","","ruby/classes/Gem/Resolver/DependencyRequest.html","","<p>Used Internally. Wraps a Dependency object to also track which spec contained the Dependency.\n",null,1],["Gem::Resolver::GitSet","","ruby/classes/Gem/Resolver/GitSet.html","","<p>A GitSet represents gems that are sourced from git repositories.\n<p>This is used for gem dependency file …\n",null,1],["Gem::Resolver::GitSpecification","","ruby/classes/Gem/Resolver/GitSpecification.html","","<p>A GitSpecification represents a gem that is sourced from a git repository and is being loaded through …\n",null,1],["Gem::Resolver::IndexSet","","ruby/classes/Gem/Resolver/IndexSet.html","","<p>The global rubygems pool represented via the traditional source index.\n",null,1],["Gem::Resolver::IndexSpecification","","ruby/classes/Gem/Resolver/IndexSpecification.html","","<p>Represents a possible Specification object returned from IndexSet.  Used to delay needed to download …\n",null,1],["Gem::Resolver::InstalledSpecification","","ruby/classes/Gem/Resolver/InstalledSpecification.html","","<p>An InstalledSpecification represents a gem that is already installed locally.\n",null,1],["Gem::Resolver::InstallerSet","","ruby/classes/Gem/Resolver/InstallerSet.html","","<p>A set of gems for installation sourced from remote sources and local .gem files\n",null,1],["Gem::Resolver::LocalSpecification","","ruby/classes/Gem/Resolver/LocalSpecification.html","","<p>A LocalSpecification comes from a .gem file on the local filesystem.\n",null,1],["Gem::Resolver::LockSet","","ruby/classes/Gem/Resolver/LockSet.html","","<p>A set of gems from a gem dependencies lockfile.\n",null,1],["Gem::Resolver::LockSpecification","","ruby/classes/Gem/Resolver/LockSpecification.html","","<p>The LockSpecification comes from a lockfile (Gem::RequestSet::Lockfile).\n<p>A LockSpecification’s dependency …\n",null,1],["Gem::Resolver::RequirementList","","ruby/classes/Gem/Resolver/RequirementList.html","","<p>The RequirementList is used to hold the requirements being considered while resolving a set of gems. …\n",null,1],["Gem::Resolver::Set","","ruby/classes/Gem/Resolver/Set.html","","<p>Resolver sets are used to look up specifications (and their dependencies) used in resolution.  This set …\n",null,1],["Gem::Resolver::SourceSet","","ruby/classes/Gem/Resolver/SourceSet.html","","<p>The SourceSet chooses the best available method to query a remote index.\n<p>Kind off like BestSet but filters …\n",null,1],["Gem::Resolver::SpecSpecification","","ruby/classes/Gem/Resolver/SpecSpecification.html","","<p>The Resolver::SpecSpecification contains common functionality for Resolver specifications that are backed …\n",null,1],["Gem::Resolver::Specification","","ruby/classes/Gem/Resolver/Specification.html","","<p>A Resolver::Specification contains a subset of the information contained in a Gem::Specification.  Only …\n",null,1],["Gem::Resolver::Stats","","ruby/classes/Gem/Resolver/Stats.html","","",null,1],["Gem::Resolver::VendorSet","","ruby/classes/Gem/Resolver/VendorSet.html","","<p>A VendorSet represents gems that have been unpacked into a specific directory that contains a gemspec. …\n",null,1],["Gem::Resolver::VendorSpecification","","ruby/classes/Gem/Resolver/VendorSpecification.html","","<p>A VendorSpecification represents a gem that has been unpacked into a project and is being loaded through …\n",null,1],["Gem::RubyVersionMismatch","","ruby/classes/Gem/RubyVersionMismatch.html","","<p>Raised when a gem dependencies file specifies a ruby version that does not match the current version. …\n",null,1],["Gem::RuntimeRequirementNotMetError","","ruby/classes/Gem/RuntimeRequirementNotMetError.html","","",null,1],["Gem::S3URISigner","","ruby/classes/Gem/S3URISigner.html","","<p>S3URISigner implements AWS SigV4 for S3 Source to avoid a dependency on the aws-sdk-* gems More on AWS …\n",null,1],["Gem::S3URISigner::ConfigurationError","","ruby/classes/Gem/S3URISigner/ConfigurationError.html","","",null,1],["Gem::S3URISigner::InstanceProfileError","","ruby/classes/Gem/S3URISigner/InstanceProfileError.html","","",null,1],["Gem::SafeMarshal","","ruby/classes/Gem/SafeMarshal.html","","<p>This module is used for safely loading Marshal specs from a gem.  The ‘safe_load` method defined on this …\n",null,1],["Gem::SafeMarshal::Elements","","ruby/classes/Gem/SafeMarshal/Elements.html","","",null,1],["Gem::SafeMarshal::Elements::Array","","ruby/classes/Gem/SafeMarshal/Elements/Array.html","","",null,1],["Gem::SafeMarshal::Elements::Bignum","","ruby/classes/Gem/SafeMarshal/Elements/Bignum.html","","",null,1],["Gem::SafeMarshal::Elements::Element","","ruby/classes/Gem/SafeMarshal/Elements/Element.html","","",null,1],["Gem::SafeMarshal::Elements::False","","ruby/classes/Gem/SafeMarshal/Elements/False.html","","",null,1],["Gem::SafeMarshal::Elements::Float","","ruby/classes/Gem/SafeMarshal/Elements/Float.html","","",null,1],["Gem::SafeMarshal::Elements::Hash","","ruby/classes/Gem/SafeMarshal/Elements/Hash.html","","",null,1],["Gem::SafeMarshal::Elements::HashWithDefaultValue","","ruby/classes/Gem/SafeMarshal/Elements/HashWithDefaultValue.html","","",null,1],["Gem::SafeMarshal::Elements::Integer","","ruby/classes/Gem/SafeMarshal/Elements/Integer.html","","",null,1],["Gem::SafeMarshal::Elements::Nil","","ruby/classes/Gem/SafeMarshal/Elements/Nil.html","","",null,1],["Gem::SafeMarshal::Elements::Object","","ruby/classes/Gem/SafeMarshal/Elements/Object.html","","",null,1],["Gem::SafeMarshal::Elements::ObjectLink","","ruby/classes/Gem/SafeMarshal/Elements/ObjectLink.html","","",null,1],["Gem::SafeMarshal::Elements::String","","ruby/classes/Gem/SafeMarshal/Elements/String.html","","",null,1],["Gem::SafeMarshal::Elements::Symbol","","ruby/classes/Gem/SafeMarshal/Elements/Symbol.html","","",null,1],["Gem::SafeMarshal::Elements::SymbolLink","","ruby/classes/Gem/SafeMarshal/Elements/SymbolLink.html","","",null,1],["Gem::SafeMarshal::Elements::True","","ruby/classes/Gem/SafeMarshal/Elements/True.html","","",null,1],["Gem::SafeMarshal::Elements::UserClass","","ruby/classes/Gem/SafeMarshal/Elements/UserClass.html","","",null,1],["Gem::SafeMarshal::Elements::UserDefined","","ruby/classes/Gem/SafeMarshal/Elements/UserDefined.html","","",null,1],["Gem::SafeMarshal::Elements::UserMarshal","","ruby/classes/Gem/SafeMarshal/Elements/UserMarshal.html","","",null,1],["Gem::SafeMarshal::Elements::WithIvars","","ruby/classes/Gem/SafeMarshal/Elements/WithIvars.html","","",null,1],["Gem::SafeMarshal::Reader","","ruby/classes/Gem/SafeMarshal/Reader.html","","",null,1],["Gem::SafeMarshal::Reader::EOFError","","ruby/classes/Gem/SafeMarshal/Reader/EOFError.html","","",null,1],["Gem::SafeMarshal::Reader::Error","","ruby/classes/Gem/SafeMarshal/Reader/Error.html","","",null,1],["Gem::SafeMarshal::Reader::NotImplementedError","","ruby/classes/Gem/SafeMarshal/Reader/NotImplementedError.html","","",null,1],["Gem::SafeMarshal::Reader::UnconsumedBytesError","","ruby/classes/Gem/SafeMarshal/Reader/UnconsumedBytesError.html","","",null,1],["Gem::SafeMarshal::Reader::UnsupportedVersionError","","ruby/classes/Gem/SafeMarshal/Reader/UnsupportedVersionError.html","","",null,1],["Gem::SafeMarshal::Visitors","","ruby/classes/Gem/SafeMarshal/Visitors.html","","",null,1],["Gem::SafeMarshal::Visitors::StreamPrinter","","ruby/classes/Gem/SafeMarshal/Visitors/StreamPrinter.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::Error","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/Error.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::FormatError","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/FormatError.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::MethodCallError","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/MethodCallError.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::RationalCompat","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/RationalCompat.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::UnpermittedClassError","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnpermittedClassError.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::UnpermittedIvarError","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnpermittedIvarError.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::UnpermittedSymbolError","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnpermittedSymbolError.html","","",null,1],["Gem::SafeMarshal::Visitors::ToRuby::UnsupportedError","","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnsupportedError.html","","",null,1],["Gem::SafeMarshal::Visitors::Visitor","","ruby/classes/Gem/SafeMarshal/Visitors/Visitor.html","","",null,1],["Gem::SafeYAML","","ruby/classes/Gem/SafeYAML.html","","<p>This module is used for safely loading YAML specs from a gem.  The ‘safe_load` method defined on this …\n",null,1],["Gem::Security","","ruby/classes/Gem/Security.html","","<p>Signing gems\n<p>The Gem::Security implements cryptographic signatures for gems.  The section below is a step-by-step …\n",null,1],["Gem::Security::Exception","","ruby/classes/Gem/Security/Exception.html","","<p>Gem::Security default exception type\n",null,1],["Gem::Security::Policy","","ruby/classes/Gem/Security/Policy.html","","<p>A Gem::Security::Policy object encapsulates the settings for verifying signed gem files.  This is the …\n",null,1],["Gem::Security::Signer","","ruby/classes/Gem/Security/Signer.html","","",null,1],["Gem::Security::TrustDir","","ruby/classes/Gem/Security/TrustDir.html","","<p>The TrustDir manages the trusted certificates for gem signature verification.\n",null,1],["Gem::SecurityOption","","ruby/classes/Gem/SecurityOption.html","","<p>Mixin methods for security option for Gem::Commands\n",null,1],["Gem::SilentUI","","ruby/classes/Gem/SilentUI.html","","<p>SilentUI is a UI choice that is absolutely silent.\n",null,1],["Gem::SilentUI::NullIO","","ruby/classes/Gem/SilentUI/NullIO.html","","<p>An absolutely silent IO.\n",null,1],["Gem::Source","","ruby/classes/Gem/Source.html","","<p>A Source knows how to list and fetch gems from a RubyGems marshal index.\n<p>There are other Source subclasses …\n",null,1],["Gem::Source::Git","","ruby/classes/Gem/Source/Git.html","","<p>A git gem for use in a gem dependencies file.\n<p>Example:\n\n<pre><code>source =\n  Gem::Source::Git.new &#39;rake&#39;, &#39;git@example:rake.git&#39;, ...\n</code></pre>\n",null,1],["Gem::Source::Installed","","ruby/classes/Gem/Source/Installed.html","","<p>Represents an installed gem.  This is used for dependency resolution.\n",null,1],["Gem::Source::Local","","ruby/classes/Gem/Source/Local.html","","<p>The local source finds gems in the current directory for fulfilling dependencies.\n",null,1],["Gem::Source::Lock","","ruby/classes/Gem/Source/Lock.html","","<p>A Lock source wraps an installed gem’s source and sorts before other sources during dependency resolution. …\n",null,1],["Gem::Source::SpecificFile","","ruby/classes/Gem/Source/SpecificFile.html","","<p>A source representing a single .gem file.  This is used for installation of local gems.\n",null,1],["Gem::Source::Vendor","","ruby/classes/Gem/Source/Vendor.html","","<p>This represents a vendored source that is similar to an installed gem.\n",null,1],["Gem::SourceFetchProblem","","ruby/classes/Gem/SourceFetchProblem.html","","<p>An error that indicates we weren’t able to fetch some data from a source\n",null,1],["Gem::SourceList","","ruby/classes/Gem/SourceList.html","","<p>The SourceList represents the sources rubygems has been configured to use. A source may be created from …\n",null,1],["Gem::SpecFetcher","","ruby/classes/Gem/SpecFetcher.html","","<p>SpecFetcher handles metadata updates from remote gem repositories.\n",null,1],["Gem::SpecificGemNotFoundException","","ruby/classes/Gem/SpecificGemNotFoundException.html","","<p>Raised by the DependencyInstaller when a specific gem cannot be found\n",null,1],["Gem::Specification","","ruby/classes/Gem/Specification.html","","<p>The Specification class contains the information for a gem.  Typically defined in a .gemspec file or …\n",null,1],["Gem::SpecificationPolicy","","ruby/classes/Gem/SpecificationPolicy.html","","",null,1],["Gem::StreamUI","","ruby/classes/Gem/StreamUI.html","","<p>Gem::StreamUI implements a simple stream based user interface.\n",null,1],["Gem::StreamUI::SilentDownloadReporter","","ruby/classes/Gem/StreamUI/SilentDownloadReporter.html","","<p>An absolutely silent download reporter.\n",null,1],["Gem::StreamUI::SilentProgressReporter","","ruby/classes/Gem/StreamUI/SilentProgressReporter.html","","<p>An absolutely silent progress reporter.\n",null,1],["Gem::StreamUI::SimpleProgressReporter","","ruby/classes/Gem/StreamUI/SimpleProgressReporter.html","","<p>A basic dotted progress reporter.\n",null,1],["Gem::StreamUI::ThreadedDownloadReporter","","ruby/classes/Gem/StreamUI/ThreadedDownloadReporter.html","","<p>A progress reporter that behaves nicely with threaded downloading.\n",null,1],["Gem::StreamUI::VerboseProgressReporter","","ruby/classes/Gem/StreamUI/VerboseProgressReporter.html","","<p>A progress reporter that prints out messages about the current progress.\n",null,1],["Gem::StubSpecification","","ruby/classes/Gem/StubSpecification.html","","<p>Gem::StubSpecification reads the stub: line from the gemspec.  This prevents us having to eval the entire …\n",null,1],["Gem::SystemExitException","","ruby/classes/Gem/SystemExitException.html","","<p>Raised to indicate that a system exit should occur with the specified exit_code\n",null,1],["Gem::Text","","ruby/classes/Gem/Text.html","","<p>A collection of text-wrangling methods\n",null,1],["Gem::UninstallError","","ruby/classes/Gem/UninstallError.html","","<p>Raised when removing a gem with the uninstall command fails\n",null,1],["Gem::Uninstaller","","ruby/classes/Gem/Uninstaller.html","","<p>An Uninstaller.\n<p>The uninstaller fires pre and post uninstall hooks.  Hooks can be added either through …\n",null,1],["Gem::UnknownCommandError","","ruby/classes/Gem/UnknownCommandError.html","","",null,1],["Gem::UnknownCommandSpellChecker","","ruby/classes/Gem/UnknownCommandSpellChecker.html","","",null,1],["Gem::UnsatisfiableDependencyError","","ruby/classes/Gem/UnsatisfiableDependencyError.html","","<p>Raised by Resolver when a dependency requests a gem for which there is no spec.\n",null,1],["Gem::UpdateSuggestion","","ruby/classes/Gem/UpdateSuggestion.html","","<p>Mixin methods for Gem::Command to promote available RubyGems update\n",null,1],["Gem::Uri","","ruby/classes/Gem/Uri.html","","<p>The Uri handles rubygems source URIs.\n",null,1],["Gem::UriFormatter","","ruby/classes/Gem/UriFormatter.html","","<p>The UriFormatter handles URIs from user-input and escaping.\n\n<pre><code>uf = Gem::UriFormatter.new &#39;example.com&#39;\n ...\n</code></pre>\n",null,1],["Gem::UserInteraction","","ruby/classes/Gem/UserInteraction.html","","<p>UserInteraction allows RubyGems to interact with the user through standard methods that can be replaced …\n",null,1],["Gem::Util","","ruby/classes/Gem/Util.html","","<p>This module contains various utility methods as module methods.\n",null,1],["Gem::Validator","","ruby/classes/Gem/Validator.html","","<p>Validator performs various gem file and gem database validation\n",null,1],["Gem::VerificationError","","ruby/classes/Gem/VerificationError.html","","<p>Raised by Gem::Validator when something is not right in a gem.\n",null,1],["Gem::Version","","ruby/classes/Gem/Version.html","","<p>The Version class processes string versions into comparable values. A version string should normally …\n",null,1],["Gem::VersionOption","","ruby/classes/Gem/VersionOption.html","","<p>Mixin methods for –version and –platform Gem::Command options.\n",null,1],["Gem::WebauthnVerificationError","","ruby/classes/Gem/WebauthnVerificationError.html","","<p>Raised by Gem::WebauthnListener when an error occurs during security device verification.\n",null,1],["Gem::YAMLSerializer","","ruby/classes/Gem/YAMLSerializer.html","","<p>A stub yaml serializer that can handle only hashes and strings (as of now).\n",null,1],["Gemfile","","rails/files/rails/Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p>git_source(:github) { |repo| “github.com/#{repo}.git …\n",null,0],["Gemfile.lock","","rails/files/rails/Gemfile_lock.html","","<p>GIT\n\n<pre><code>remote: https://github.com/brianmario/mysql2.git\nrevision: bab4969264250abca836e85a9c332c42be573dfc ...\n</code></pre>\n",null,0],["Gemfile.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/Gemfile_tt.html","","<p>source “rubygems.org” git_source(:github) { |repo| “github.com/#{repo}.git” }\n<p>ruby …\n",null,0],["Gemfile.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/Gemfile_tt.html","","<p>source “rubygems.org” git_source(:github) { |repo| “github.com/#{repo}.git” } &lt;% …\n",null,0],["GetoptLong","","ruby/classes/GetoptLong.html","","<p>Class GetoptLong provides parsing both for options and for regular arguments.\n<p>Using GetoptLong, you can …\n",null,1],["GetoptLong::AmbiguousOption","","ruby/classes/GetoptLong/AmbiguousOption.html","","",null,1],["GetoptLong::Error","","ruby/classes/GetoptLong/Error.html","","<p>Error types.\n",null,1],["GetoptLong::InvalidOption","","ruby/classes/GetoptLong/InvalidOption.html","","",null,1],["GetoptLong::MissingArgument","","ruby/classes/GetoptLong/MissingArgument.html","","",null,1],["GetoptLong::NeedlessArgument","","ruby/classes/GetoptLong/NeedlessArgument.html","","",null,1],["Hash","","rails/classes/Hash.html","","",null,0],["Hash","","ruby/classes/Hash.html","","<p>A Hash maps each of its unique keys to a specific value.\n<p>A Hash has certain similarities to an Array, …\n",null,1],["Hash","Kernel","ruby/classes/Kernel.html#method-i-Hash","(p1)","<p>Returns a hash converted from <code>object</code>.\n<p>If <code>object</code> is:\n<p>A hash, returns <code>object</code>.\n",null,1],["IO","","rails/classes/IO.html","","",null,0],["IO","","ruby/classes/IO.html","","<p>An instance of class IO (commonly called a <em>stream</em>) represents an input/output stream in the underlying …\n",null,1],["IO::Buffer","","ruby/classes/IO/Buffer.html","","<p>IO::Buffer is a efficient zero-copy buffer for input/output. There are typical use cases:\n<p>Create an empty …\n",null,1],["IO::Buffer::AccessError","","ruby/classes/IO/Buffer/AccessError.html","","<p>Raised when you try to write to a read-only buffer, or resize an external buffer.\n",null,1],["IO::Buffer::AllocationError","","ruby/classes/IO/Buffer/AllocationError.html","","<p>Raised when the buffer cannot be allocated for some reason, or you try to use a buffer that’s not …\n",null,1],["IO::Buffer::InvalidatedError","","ruby/classes/IO/Buffer/InvalidatedError.html","","<p>Raised if you try to access a buffer slice which no longer references a valid memory range of the underlying …\n",null,1],["IO::Buffer::LockedError","","ruby/classes/IO/Buffer/LockedError.html","","<p>Raised when an operation would resize or re-allocate a locked buffer.\n",null,1],["IO::Buffer::MaskError","","ruby/classes/IO/Buffer/MaskError.html","","<p>Raised if the mask given to a binary operation is invalid, e.g. zero length or overlaps the target buffer. …\n",null,1],["IO::EAGAINWaitReadable","","ruby/classes/IO/EAGAINWaitReadable.html","","<p>exception to wait for reading by EAGAIN. see IO.select.\n",null,1],["IO::EAGAINWaitWritable","","ruby/classes/IO/EAGAINWaitWritable.html","","<p>exception to wait for writing by EAGAIN. see IO.select.\n",null,1],["IO::EINPROGRESSWaitReadable","","ruby/classes/IO/EINPROGRESSWaitReadable.html","","<p>exception to wait for reading by EINPROGRESS. see IO.select.\n",null,1],["IO::EINPROGRESSWaitWritable","","ruby/classes/IO/EINPROGRESSWaitWritable.html","","<p>exception to wait for writing by EINPROGRESS. see IO.select.\n",null,1],["IO::EWOULDBLOCKWaitReadable","","ruby/classes/IO/EWOULDBLOCKWaitReadable.html","","<p>exception to wait for reading by EWOULDBLOCK. see IO.select.\n",null,1],["IO::EWOULDBLOCKWaitWritable","","ruby/classes/IO/EWOULDBLOCKWaitWritable.html","","<p>exception to wait for writing by EWOULDBLOCK. see IO.select.\n",null,1],["IO::TimeoutError","","ruby/classes/IO/TimeoutError.html","","<p>Can be raised by IO operations when IO#timeout= is set.\n",null,1],["IO::WaitReadable","","ruby/classes/IO/WaitReadable.html","","<p>exception to wait for reading. see IO.select.\n",null,1],["IO::WaitWritable","","ruby/classes/IO/WaitWritable.html","","<p>exception to wait for writing. see IO.select.\n",null,1],["IO::generic_readable","","ruby/classes/IO/generic_readable.html","","",null,1],["IO::generic_writable","","ruby/classes/IO/generic_writable.html","","",null,1],["IOError","","ruby/classes/IOError.html","","<p>Raised when an IO operation fails.\n\n<pre><code>File.open(&quot;/etc/hosts&quot;) {|f| f &lt;&lt; &quot;example&quot;}\n  #=&gt; IOError: not opened ...\n</code></pre>\n",null,1],["IPAddr","","ruby/classes/IPAddr.html","","<p>IPAddr provides a set of methods to manipulate an IP address.  Both IPv4 and IPv6 are supported.\n<p>Example …\n",null,1],["IPAddr::AddressFamilyError","","ruby/classes/IPAddr/AddressFamilyError.html","","<p>Raised when the address family is invalid such as an address with an unsupported family, an address with …\n",null,1],["IPAddr::Error","","ruby/classes/IPAddr/Error.html","","<p>Generic IPAddr related error. Exceptions raised in this class should inherit from Error.\n",null,1],["IPAddr::InvalidAddressError","","ruby/classes/IPAddr/InvalidAddressError.html","","<p>Raised when the provided IP address is an invalid address.\n",null,1],["IPAddr::InvalidPrefixError","","ruby/classes/IPAddr/InvalidPrefixError.html","","<p>Raised when the address is an invalid length.\n",null,1],["IPSocket","","ruby/classes/IPSocket.html","","<p>IPSocket is the super class of TCPSocket and UDPSocket.\n",null,1],["IRB","","ruby/classes/IRB.html","","<p>IRB\n<p>Module IRB (“Interactive Ruby”) provides a shell-like interface that supports user interaction …\n",null,1],["IRB::Abort","","ruby/classes/IRB/Abort.html","","<p>An exception raised by IRB.irb_abort\n",null,1],["IRB::CantChangeBinding","","ruby/classes/IRB/CantChangeBinding.html","","",null,1],["IRB::CantReturnToNormalMode","","ruby/classes/IRB/CantReturnToNormalMode.html","","",null,1],["IRB::Canvas","","ruby/classes/IRB/Canvas.html","","",null,1],["IRB::Color","","ruby/classes/IRB/Color.html","","",null,1],["IRB::Color::SymbolState","","ruby/classes/IRB/Color/SymbolState.html","","<p>A class to manage a state to know whether the current token is for Symbol or not.\n",null,1],["IRB::ColorPrinter","","ruby/classes/IRB/ColorPrinter.html","","",null,1],["IRB::Context","","ruby/classes/IRB/Context.html","","<p>A class that wraps the current state of the irb session, including the configuration of IRB.conf.\n",null,1],["IRB::ContextExtender","","ruby/classes/IRB/ContextExtender.html","","<p>Extends methods for the Context module\n",null,1],["IRB::Debug","","ruby/classes/IRB/Debug.html","","",null,1],["IRB::Debug::DEBUGGER__","","ruby/classes/IRB/Debug/DEBUGGER__.html","","",null,1],["IRB::Debug::SkipPathHelperForIRB","","ruby/classes/IRB/Debug/SkipPathHelperForIRB.html","","",null,1],["IRB::Debug::UI","","ruby/classes/IRB/Debug/UI.html","","",null,1],["IRB::EvalHistory","","ruby/classes/IRB/EvalHistory.html","","<p>Represents history of results of previously evaluated commands.\n<p>Available via <code>__</code> variable, only if <code>IRB.conf[:EVAL_HISTORY]</code> …\n",null,1],["IRB::ExtendCommand","","ruby/classes/IRB/ExtendCommand.html","","",null,1],["IRB::ExtendCommand::Backtrace","","ruby/classes/IRB/ExtendCommand/Backtrace.html","","",null,1],["IRB::ExtendCommand::Break","","ruby/classes/IRB/ExtendCommand/Break.html","","",null,1],["IRB::ExtendCommand::Catch","","ruby/classes/IRB/ExtendCommand/Catch.html","","",null,1],["IRB::ExtendCommand::ChangeWorkspace","","ruby/classes/IRB/ExtendCommand/ChangeWorkspace.html","","",null,1],["IRB::ExtendCommand::CommandArgumentError","","ruby/classes/IRB/ExtendCommand/CommandArgumentError.html","","",null,1],["IRB::ExtendCommand::Continue","","ruby/classes/IRB/ExtendCommand/Continue.html","","",null,1],["IRB::ExtendCommand::CurrentWorkingWorkspace","","ruby/classes/IRB/ExtendCommand/CurrentWorkingWorkspace.html","","",null,1],["IRB::ExtendCommand::Debug","","ruby/classes/IRB/ExtendCommand/Debug.html","","",null,1],["IRB::ExtendCommand::DebugCommand","","ruby/classes/IRB/ExtendCommand/DebugCommand.html","","",null,1],["IRB::ExtendCommand::Delete","","ruby/classes/IRB/ExtendCommand/Delete.html","","",null,1],["IRB::ExtendCommand::Edit","","ruby/classes/IRB/ExtendCommand/Edit.html","","",null,1],["IRB::ExtendCommand::Finish","","ruby/classes/IRB/ExtendCommand/Finish.html","","",null,1],["IRB::ExtendCommand::Foreground","","ruby/classes/IRB/ExtendCommand/Foreground.html","","",null,1],["IRB::ExtendCommand::Help","","ruby/classes/IRB/ExtendCommand/Help.html","","",null,1],["IRB::ExtendCommand::History","","ruby/classes/IRB/ExtendCommand/History.html","","",null,1],["IRB::ExtendCommand::Info","","ruby/classes/IRB/ExtendCommand/Info.html","","",null,1],["IRB::ExtendCommand::IrbCommand","","ruby/classes/IRB/ExtendCommand/IrbCommand.html","","",null,1],["IRB::ExtendCommand::IrbInfo","","ruby/classes/IRB/ExtendCommand/IrbInfo.html","","",null,1],["IRB::ExtendCommand::Jobs","","ruby/classes/IRB/ExtendCommand/Jobs.html","","",null,1],["IRB::ExtendCommand::Kill","","ruby/classes/IRB/ExtendCommand/Kill.html","","",null,1],["IRB::ExtendCommand::Load","","ruby/classes/IRB/ExtendCommand/Load.html","","",null,1],["IRB::ExtendCommand::LoaderCommand","","ruby/classes/IRB/ExtendCommand/LoaderCommand.html","","",null,1],["IRB::ExtendCommand::Ls","","ruby/classes/IRB/ExtendCommand/Ls.html","","",null,1],["IRB::ExtendCommand::Ls::Output","","ruby/classes/IRB/ExtendCommand/Ls/Output.html","","",null,1],["IRB::ExtendCommand::Measure","","ruby/classes/IRB/ExtendCommand/Measure.html","","",null,1],["IRB::ExtendCommand::MultiIRBCommand","","ruby/classes/IRB/ExtendCommand/MultiIRBCommand.html","","",null,1],["IRB::ExtendCommand::Next","","ruby/classes/IRB/ExtendCommand/Next.html","","",null,1],["IRB::ExtendCommand::Nop","","ruby/classes/IRB/ExtendCommand/Nop.html","","",null,1],["IRB::ExtendCommand::PopWorkspace","","ruby/classes/IRB/ExtendCommand/PopWorkspace.html","","",null,1],["IRB::ExtendCommand::PushWorkspace","","ruby/classes/IRB/ExtendCommand/PushWorkspace.html","","",null,1],["IRB::ExtendCommand::Require","","ruby/classes/IRB/ExtendCommand/Require.html","","",null,1],["IRB::ExtendCommand::ShowCmds","","ruby/classes/IRB/ExtendCommand/ShowCmds.html","","",null,1],["IRB::ExtendCommand::ShowDoc","","ruby/classes/IRB/ExtendCommand/ShowDoc.html","","",null,1],["IRB::ExtendCommand::ShowSource","","ruby/classes/IRB/ExtendCommand/ShowSource.html","","",null,1],["IRB::ExtendCommand::Source","","ruby/classes/IRB/ExtendCommand/Source.html","","",null,1],["IRB::ExtendCommand::Step","","ruby/classes/IRB/ExtendCommand/Step.html","","",null,1],["IRB::ExtendCommand::Whereami","","ruby/classes/IRB/ExtendCommand/Whereami.html","","",null,1],["IRB::ExtendCommand::Workspaces","","ruby/classes/IRB/ExtendCommand/Workspaces.html","","",null,1],["IRB::ExtendCommandBundle","","ruby/classes/IRB/ExtendCommandBundle.html","","<p>Installs the default irb extensions command bundle.\n",null,1],["IRB::FileInputMethod","","ruby/classes/IRB/FileInputMethod.html","","<p>Use a File for IO with irb, see InputMethod\n",null,1],["IRB::Frame","","ruby/classes/IRB/Frame.html","","",null,1],["IRB::Frame::FrameOverflow","","ruby/classes/IRB/Frame/FrameOverflow.html","","",null,1],["IRB::Frame::FrameUnderflow","","ruby/classes/IRB/Frame/FrameUnderflow.html","","",null,1],["IRB::IllegalParameter","","ruby/classes/IRB/IllegalParameter.html","","",null,1],["IRB::IllegalRCGenerator","","ruby/classes/IRB/IllegalRCGenerator.html","","",null,1],["IRB::InputCompletor","","ruby/classes/IRB/InputCompletor.html","","",null,1],["IRB::InputMethod","","ruby/classes/IRB/InputMethod.html","","",null,1],["IRB::Inspector","","ruby/classes/IRB/Inspector.html","","<p>An irb inspector\n<p>In order to create your own custom inspector there are two things you should be aware …\n",null,1],["IRB::Irb","","ruby/classes/IRB/Irb.html","","",null,1],["IRB::IrbAlreadyDead","","ruby/classes/IRB/IrbAlreadyDead.html","","",null,1],["IRB::IrbLoader","","ruby/classes/IRB/IrbLoader.html","","<p>Provides a few commands for loading files within an irb session.\n<p>See ExtendCommandBundle for more information. …\n",null,1],["IRB::IrbSwitchedToCurrentThread","","ruby/classes/IRB/IrbSwitchedToCurrentThread.html","","",null,1],["IRB::JobManager","","ruby/classes/IRB/JobManager.html","","",null,1],["IRB::LoadAbort","","ruby/classes/IRB/LoadAbort.html","","<p>Raised in the event of an exception in a file loaded from an Irb session\n",null,1],["IRB::Locale","","ruby/classes/IRB/Locale.html","","",null,1],["IRB::NestingParser","","ruby/classes/IRB/NestingParser.html","","",null,1],["IRB::NoSuchJob","","ruby/classes/IRB/NoSuchJob.html","","",null,1],["IRB::NotImplementedError","","ruby/classes/IRB/NotImplementedError.html","","",null,1],["IRB::Notifier","","ruby/classes/IRB/Notifier.html","","<p>An output formatter used internally by the lexer.\n",null,1],["IRB::Notifier::AbstractNotifier","","ruby/classes/IRB/Notifier/AbstractNotifier.html","","<p>An abstract class, or superclass, for CompositeNotifier and LeveledNotifier to inherit. It provides several …\n",null,1],["IRB::Notifier::CompositeNotifier","","ruby/classes/IRB/Notifier/CompositeNotifier.html","","<p>A class that can be used to create a group of notifier objects with the intent of representing a leveled …\n",null,1],["IRB::Notifier::ErrUndefinedNotifier","","ruby/classes/IRB/Notifier/ErrUndefinedNotifier.html","","",null,1],["IRB::Notifier::ErrUnrecognizedLevel","","ruby/classes/IRB/Notifier/ErrUnrecognizedLevel.html","","",null,1],["IRB::Notifier::LeveledNotifier","","ruby/classes/IRB/Notifier/LeveledNotifier.html","","<p>A leveled notifier is comparable to the composite group from CompositeNotifier#notifiers.\n",null,1],["IRB::Notifier::NoMsgNotifier","","ruby/classes/IRB/Notifier/NoMsgNotifier.html","","<p>NoMsgNotifier is a LeveledNotifier that’s used as the default notifier when creating a new CompositeNotifier …\n",null,1],["IRB::OutputMethod","","ruby/classes/IRB/OutputMethod.html","","<p>An abstract output class for IO in irb. This is mainly used internally by IRB::Notifier. You can define …\n",null,1],["IRB::OutputMethod::NotImplementedError","","ruby/classes/IRB/OutputMethod/NotImplementedError.html","","",null,1],["IRB::Pager","","ruby/classes/IRB/Pager.html","","<p>The implementation of this class is borrowed from RDoc’s lib/rdoc/ri/driver.rb. Please do NOT use …\n",null,1],["IRB::ReadlineInputMethod","","ruby/classes/IRB/ReadlineInputMethod.html","","",null,1],["IRB::ReidlineInputMethod","","ruby/classes/IRB/ReidlineInputMethod.html","","",null,1],["IRB::RelineInputMethod","","ruby/classes/IRB/RelineInputMethod.html","","",null,1],["IRB::RubyLex","","ruby/classes/IRB/RubyLex.html","","",null,1],["IRB::RubyLex::TerminateLineInput","","ruby/classes/IRB/RubyLex/TerminateLineInput.html","","",null,1],["IRB::RubyModel","","ruby/classes/IRB/RubyModel.html","","",null,1],["IRB::SourceFinder","","ruby/classes/IRB/SourceFinder.html","","",null,1],["IRB::Statement","","ruby/classes/IRB/Statement.html","","",null,1],["IRB::Statement::Command","","ruby/classes/IRB/Statement/Command.html","","",null,1],["IRB::Statement::Expression","","ruby/classes/IRB/Statement/Expression.html","","",null,1],["IRB::StdioInputMethod","","ruby/classes/IRB/StdioInputMethod.html","","",null,1],["IRB::StdioOutputMethod","","ruby/classes/IRB/StdioOutputMethod.html","","<p>A standard output printer\n",null,1],["IRB::UndefinedPromptMode","","ruby/classes/IRB/UndefinedPromptMode.html","","",null,1],["IRB::UnrecognizedSwitch","","ruby/classes/IRB/UnrecognizedSwitch.html","","",null,1],["IRB::Vec","","ruby/classes/IRB/Vec.html","","",null,1],["IRB::WorkSpace","","ruby/classes/IRB/WorkSpace.html","","",null,1],["IndexError","","ruby/classes/IndexError.html","","<p>Raised when the given index is invalid.\n\n<pre><code>a = [:foo, :bar]\na.fetch(0)   #=&gt; :foo\na[4]         #=&gt; nil\na.fetch(4) ...\n</code></pre>\n",null,1],["Integer","","rails/classes/Integer.html","","",null,0],["Integer","","ruby/classes/Integer.html","","<p>An Integer object represents an integer value.\n<p>You can create an Integer object explicitly with:\n<p>An integer …\n",null,1],["Integer","Kernel","ruby/classes/Kernel.html#method-i-Integer","(arg, base = 0, exception: true)","<p>Returns an integer converted from <code>object</code>.\n<p>Tries to convert <code>object</code> to an integer using <code>to_int</code> first and …\n",null,1],["Interrupt","","ruby/classes/Interrupt.html","","<p>Raised when the interrupt signal is received, typically because the user has pressed Control-C (on most …\n",null,1],["JSON","","ruby/classes/JSON.html","","<p>JavaScript Object Notation (JSON)\n<p>JSON is a lightweight data-interchange format.\n<p>A JSON value is one of …\n",null,1],["JSON::CircularDatastructure","","ruby/classes/JSON/CircularDatastructure.html","","",null,1],["JSON::Ext","","ruby/classes/JSON/Ext.html","","<p>This module holds all the modules/classes that implement JSON’s functionality as C extensions.\n",null,1],["JSON::Ext::Generator","","ruby/classes/JSON/Ext/Generator.html","","<p>This is the JSON generator implemented as a C extension. It can be configured to be used by setting\n\n<pre><code>JSON.generator ...\n</code></pre>\n",null,1],["JSON::Ext::Generator::State","","ruby/classes/JSON/Ext/Generator/State.html","","",null,1],["JSON::Ext::Parser","","ruby/classes/JSON/Ext/Parser.html","","<p>This is the JSON parser implemented as a C extension. It can be configured to be used by setting\n\n<pre><code>JSON.parser ...\n</code></pre>\n",null,1],["JSON::GeneratorError","","ruby/classes/JSON/GeneratorError.html","","<p>This exception is raised if a generator or unparser error occurs.\n",null,1],["JSON::GenericObject","","ruby/classes/JSON/GenericObject.html","","",null,1],["JSON::JSONError","","ruby/classes/JSON/JSONError.html","","<p>The base exception for JSON errors.\n",null,1],["JSON::MissingUnicodeSupport","","ruby/classes/JSON/MissingUnicodeSupport.html","","<p>This exception is raised if the required unicode support is missing on the system. Usually this means …\n",null,1],["JSON::NestingError","","ruby/classes/JSON/NestingError.html","","<p>This exception is raised if the nesting of parsed data structures is too deep.\n",null,1],["JSON::ParserError","","ruby/classes/JSON/ParserError.html","","<p>This exception is raised if a parser error occurs.\n",null,1],["Jacobian","","ruby/classes/Jacobian.html","","<p>require ‘bigdecimal/jacobian’\n<p>Provides methods to compute the Jacobian matrix of a set of equations …\n",null,1],["JobManager","IRB","ruby/classes/IRB.html#method-c-JobManager","()","<p>The current JobManager in the session\n",null,1],["Kconv","","ruby/classes/Kconv.html","","<p>Kanji Converter for Ruby.\n",null,1],["Kernel","","rails/classes/Kernel.html","","",null,0],["Kernel","","ruby/classes/Kernel.html","","<p>The Kernel module is included by class Object, so its methods are available in every Ruby object.\n<p>The …\n",null,1],["KeyError","","ruby/classes/KeyError.html","","<p>Raised when the specified key is not found. It is a subclass of IndexError.\n\n<pre><code>h = {&quot;foo&quot; =&gt; :bar}\nh.fetch(&quot;foo&quot;) ...\n</code></pre>\n",null,1],["LEGAL","","ruby/files/ruby/LEGAL.html","","<p>LEGAL NOTICE INFORMATION\n<p>All the files in this distribution are covered under either the Ruby’s license …\n",null,1],["LOG_MASK","Syslog::Macros","ruby/classes/Syslog/Macros.html#method-i-LOG_MASK","(p1)","<p>Generates a mask bit for a priority level. See #mask=\n",null,1],["LOG_UPTO","Syslog::Macros","ruby/classes/Syslog/Macros.html#method-i-LOG_UPTO","(p1)","<p>Generates a mask value for priority levels at or below the level specified. See #mask=\n",null,1],["LUSolve","","ruby/classes/LUSolve.html","","<p>Solves a*x = b for x, using LU decomposition.\n",null,1],["LoadError","","rails/classes/LoadError.html","","",null,0],["LoadError","","ruby/classes/LoadError.html","","<p>Raised when a file required (a Ruby script, extension library, …) fails to load.\n\n<pre><code>require &#39;this/file/does/not/exist&#39;\n</code></pre>\n",null,1],["LocalJumpError","","ruby/classes/LocalJumpError.html","","<p>Raised when Ruby can’t yield as requested.\n<p>A typical scenario is attempting to yield when no block …\n",null,1],["Logger","","ruby/classes/Logger.html","","<p>Class Logger provides a simple but sophisticated logging utility that you can use to create one or more …\n",null,1],["Logger::Formatter","","ruby/classes/Logger/Formatter.html","","<p>Default formatter for log messages.\n",null,1],["Logger::LogDevice","","ruby/classes/Logger/LogDevice.html","","<p>Device used for logging messages.\n",null,1],["Logger::Period","","ruby/classes/Logger/Period.html","","",null,1],["Logger::Severity","","ruby/classes/Logger/Severity.html","","<p>Logging severity.\n",null,1],["MIT-LICENSE","","rails/files/rails/actionview/MIT-LICENSE.html","","<p>Copyright © 2004-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/actionview/app/assets/javascripts/MIT-LICENSE.html","","<p>Copyright © 2007-2022 Rails Core team\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n",null,0],["MIT-LICENSE","","rails/files/rails/activerecord/MIT-LICENSE.html","","<p>Copyright © 2004-2022 David Heinemeier Hansson\n<p>Arel originally copyright © 2007-2016 Nick Kallen, …\n",null,0],["MIT-LICENSE","","rails/files/rails/MIT-LICENSE.html","","<p>Copyright © 2005-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/activesupport/MIT-LICENSE.html","","<p>Copyright © 2005-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/actionpack/MIT-LICENSE.html","","<p>Copyright © 2004-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/actionmailbox/MIT-LICENSE.html","","<p>MIT License\n<p>Copyright © 2018-2022 Basecamp, LLC\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/actiontext/MIT-LICENSE.html","","<p>MIT License\n<p>Copyright © 2020-2022 Basecamp, LLC\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/actioncable/MIT-LICENSE.html","","<p>Copyright © 2015-2022 Basecamp, LLC\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n",null,0],["MIT-LICENSE","","rails/files/rails/activestorage/MIT-LICENSE.html","","<p>Copyright © 2017-2022 David Heinemeier Hansson, Basecamp\n<p>Permission is hereby granted, free of charge, …\n",null,0],["MIT-LICENSE","","rails/files/rails/railties/MIT-LICENSE.html","","<p>Copyright © 2004-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/activemodel/MIT-LICENSE.html","","<p>Copyright © 2004-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/activejob/MIT-LICENSE.html","","<p>Copyright © 2014-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE","","rails/files/rails/actionmailer/MIT-LICENSE.html","","<p>Copyright © 2004-2022 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,0],["MIT-LICENSE.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/MIT-LICENSE_tt.html","","<p>Copyright &lt;%= Date.today.year %&gt; &lt;%= author %&gt;\n<p>Permission is hereby granted, free of charge, …\n",null,0],["Mail","","rails/classes/Mail.html","","",null,0],["Mail::Address","","rails/classes/Mail/Address.html","","",null,0],["Mail::Message","","rails/classes/Mail/Message.html","","",null,0],["MakeMakefile","","ruby/classes/MakeMakefile.html","","<p>mkmf.rb is used by Ruby C extensions to generate a Makefile which will correctly compile and link the …\n",null,1],["MakeMakefile::Logging","","ruby/classes/MakeMakefile/Logging.html","","",null,1],["MakeMakefile::RbConfig","","ruby/classes/MakeMakefile/RbConfig.html","","",null,1],["Marshal","","ruby/classes/Marshal.html","","<p>The marshaling library converts collections of Ruby objects into a byte stream, allowing them to be stored …\n",null,1],["MatchData","","ruby/classes/MatchData.html","","<p>MatchData encapsulates the result of matching a Regexp against string. It is returned by Regexp#match …\n",null,1],["Math","","ruby/classes/Math.html","","<p>Module Math provides methods for basic trigonometric, logarithmic, and transcendental functions, and …\n",null,1],["Math::DomainError","","ruby/classes/Math/DomainError.html","","<p>Raised when a mathematical function is evaluated outside of its domain of definition.\n<p>For example, since …\n",null,1],["Method","","rails/classes/Method.html","","",null,0],["Method","","ruby/classes/Method.html","","<p>Method objects are created by Object#method, and are associated with a particular object (not just with …\n",null,1],["Mime","","rails/classes/Mime.html","","",null,0],["Mime::AllType","","rails/classes/Mime/AllType.html","","",null,0],["Mime::Mimes","","rails/classes/Mime/Mimes.html","","",null,0],["Mime::NullType","","rails/classes/Mime/NullType.html","","",null,0],["Mime::Type","","rails/classes/Mime/Type.html","","<p>Encapsulates the notion of a MIME type. Can be used at render time, for example, with:\n\n<pre><code>class PostsController ...\n</code></pre>\n",null,0],["Mime::Type::InvalidMimeType","","rails/classes/Mime/Type/InvalidMimeType.html","","",null,0],["Module","","rails/classes/Module.html","","<p>Attribute Accessors\n<p>Extends the module object with class/module and instance accessors for class/module …\n",null,0],["Module","","ruby/classes/Module.html","","<p>A Module is a collection of methods and constants. The methods in a module may be instance methods or …\n",null,1],["Module::Concerning","","rails/classes/Module/Concerning.html","","<p>Bite-sized separation of concerns\n<p>We often find ourselves with a medium-sized chunk of behavior that we’d …\n",null,0],["Module::DelegationError","","rails/classes/Module/DelegationError.html","","<p>Error generated by <code>delegate</code> when a method is called on <code>nil</code> and <code>allow_nil</code> option is not used.\n",null,0],["Monitor","","ruby/classes/Monitor.html","","<p>Use the Monitor class when you want to have a lock object for blocks with mutual exclusion.\n\n<pre><code>require &#39;monitor&#39; ...\n</code></pre>\n",null,1],["MonitorMixin","","ruby/classes/MonitorMixin.html","","<p>In concurrent programming, a monitor is an object or module intended to be used safely by more than one …\n",null,1],["MonitorMixin::ConditionVariable","","ruby/classes/MonitorMixin/ConditionVariable.html","","<p>FIXME: This isn’t documented in Nutshell.\n<p>Since MonitorMixin.new_cond returns a ConditionVariable …\n",null,1],["Mutex_m","","ruby/classes/Mutex_m.html","","<p>mutex_m.rb\n<p>When ‘mutex_m’ is required, any object that extends or includes Mutex_m will be treated …\n",null,1],["NEWS","","ruby/files/ruby/NEWS_md.html","","<p>NEWS for Ruby 3.3.0\n<p>This document is a list of user-visible feature changes\nsince the <strong>3.2.0</strong> release, except ...\n",null,1],["NEWS-1.8.7","","ruby/files/ruby/doc/NEWS/NEWS-1_8_7.html","","<p>NEWS for Ruby 1.8.7\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-1.9.1","","ruby/files/ruby/doc/NEWS/NEWS-1_9_1.html","","<p>NEWS for Ruby 1.9.1\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-1.9.2","","ruby/files/ruby/doc/NEWS/NEWS-1_9_2.html","","<p>NEWS for Ruby 1.9.2\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-1.9.3","","ruby/files/ruby/doc/NEWS/NEWS-1_9_3.html","","<p>NEWS for Ruby 1.9.3\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.0.0","","ruby/files/ruby/doc/NEWS/NEWS-2_0_0.html","","<p>NEWS for Ruby 2.0.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.1.0","","ruby/files/ruby/doc/NEWS/NEWS-2_1_0.html","","<p>NEWS for Ruby 2.1.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.2.0","","ruby/files/ruby/doc/NEWS/NEWS-2_2_0.html","","<p>NEWS for Ruby 2.2.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.3.0","","ruby/files/ruby/doc/NEWS/NEWS-2_3_0.html","","<p>NEWS for Ruby 2.3.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.4.0","","ruby/files/ruby/doc/NEWS/NEWS-2_4_0.html","","<p>NEWS for Ruby 2.4.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.5.0","","ruby/files/ruby/doc/NEWS/NEWS-2_5_0.html","","<p>NEWS for Ruby 2.5.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.6.0","","ruby/files/ruby/doc/NEWS/NEWS-2_6_0.html","","<p>NEWS for Ruby 2.6.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-2.7.0","","ruby/files/ruby/doc/NEWS/NEWS-2_7_0.html","","<p>NEWS for Ruby 2.7.0\n<p>This document is a list of user visible feature changes made between releases except …\n",null,1],["NEWS-3.0.0","","ruby/files/ruby/doc/NEWS/NEWS-3_0_0_md.html","","<p>NEWS for Ruby 3.0.0\n<p>This document is a list of user visible feature changes\nsince the <strong>2.7.0</strong> release, except ...\n",null,1],["NEWS-3.1.0","","ruby/files/ruby/doc/NEWS/NEWS-3_1_0_md.html","","<p>NEWS for Ruby 3.1.0\n<p>This document is a list of user-visible feature changes\nsince the <strong>3.0.0</strong> release, except ...\n",null,1],["NEWS-3.2.0","","ruby/files/ruby/doc/NEWS/NEWS-3_2_0_md.html","","<p>NEWS for Ruby 3.2.0\n<p>This document is a list of user-visible feature changes\nsince the <strong>3.1.0</strong> release, except ...\n",null,1],["NKF","","ruby/classes/NKF.html","","<p>NKF - Ruby extension for Network Kanji Filter\n<p>Description\n<p>This is a Ruby Extension version of nkf (Network …\n",null,1],["NameError","","rails/classes/NameError.html","","",null,0],["NameError","","ruby/classes/NameError.html","","<p>Raised when a given name is invalid or undefined.\n\n<pre><code>puts foo\n</code></pre>\n<p><em>raises the exception:</em>\n",null,1],["Net","","ruby/classes/Net.html","","",null,1],["Net::HTTP","","ruby/classes/Net/HTTP.html","","<p>Class Net::HTTP provides a rich library that implements the client in a client-server model that uses …\n",null,1],["Net::HTTP::Copy","","ruby/classes/Net/HTTP/Copy.html","","<p>Class for representing WebDAV method COPY:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Delete","","ruby/classes/Net/HTTP/Delete.html","","<p>Class for representing HTTP method DELETE:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Get","","ruby/classes/Net/HTTP/Get.html","","<p>Class for representing HTTP method GET:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname = ...\n</code></pre>\n",null,1],["Net::HTTP::Head","","ruby/classes/Net/HTTP/Head.html","","<p>Class for representing HTTP method HEAD:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname = ...\n</code></pre>\n",null,1],["Net::HTTP::Lock","","ruby/classes/Net/HTTP/Lock.html","","<p>Class for representing WebDAV method LOCK:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Mkcol","","ruby/classes/Net/HTTP/Mkcol.html","","<p>Class for representing WebDAV method MKCOL:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Move","","ruby/classes/Net/HTTP/Move.html","","<p>Class for representing WebDAV method MOVE:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Options","","ruby/classes/Net/HTTP/Options.html","","<p>Class for representing HTTP method OPTIONS:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Patch","","ruby/classes/Net/HTTP/Patch.html","","<p>Class for representing HTTP method PATCH:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Post","","ruby/classes/Net/HTTP/Post.html","","<p>Class for representing HTTP method POST:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname = ...\n</code></pre>\n",null,1],["Net::HTTP::Propfind","","ruby/classes/Net/HTTP/Propfind.html","","<p>Class for representing WebDAV method PROPFIND:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Proppatch","","ruby/classes/Net/HTTP/Proppatch.html","","<p>Class for representing WebDAV method PROPPATCH:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Put","","ruby/classes/Net/HTTP/Put.html","","<p>Class for representing HTTP method PUT:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname = ...\n</code></pre>\n",null,1],["Net::HTTP::Trace","","ruby/classes/Net/HTTP/Trace.html","","<p>Class for representing HTTP method TRACE:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTP::Unlock","","ruby/classes/Net/HTTP/Unlock.html","","<p>Class for representing WebDAV method UNLOCK:\n\n<pre><code>require &#39;net/http&#39;\nuri = URI(&#39;http://example.com&#39;)\nhostname ...\n</code></pre>\n",null,1],["Net::HTTPAccepted","","ruby/classes/Net/HTTPAccepted.html","","<p>Response class for <code>Accepted</code> responses (status code 202).\n<p>The <code>Accepted</code> response indicates that the server …\n",null,1],["Net::HTTPAlreadyReported","","ruby/classes/Net/HTTPAlreadyReported.html","","<p>Response class for <code>Already Reported (WebDAV)</code> responses (status code 208).\n<p>The <code>Already Reported (WebDAV)</code> …\n",null,1],["Net::HTTPBadGateway","","ruby/classes/Net/HTTPBadGateway.html","","<p>Response class for <code>Bad Gateway</code> responses (status code 502).\n<p>The server was acting as a gateway or proxy …\n",null,1],["Net::HTTPBadRequest","","ruby/classes/Net/HTTPBadRequest.html","","<p>Response class for <code>Bad Request</code> responses (status code 400).\n<p>The server cannot or will not process the …\n",null,1],["Net::HTTPBadResponse","","ruby/classes/Net/HTTPBadResponse.html","","",null,1],["Net::HTTPClientError","","ruby/classes/Net/HTTPClientError.html","","<p>Parent class for client error (4xx) HTTP response classes.\n<p>A client error response indicates that the …\n",null,1],["Net::HTTPClientException","","ruby/classes/Net/HTTPClientException.html","","",null,1],["Net::HTTPConflict","","ruby/classes/Net/HTTPConflict.html","","<p>Response class for <code>Conflict</code> responses (status code 409).\n<p>The request could not be processed because of …\n",null,1],["Net::HTTPContinue","","ruby/classes/Net/HTTPContinue.html","","<p>Response class for <code>Continue</code> responses (status code 100).\n<p>A <code>Continue</code> response indicates that the server …\n",null,1],["Net::HTTPCreated","","ruby/classes/Net/HTTPCreated.html","","<p>Response class for <code>Created</code> responses (status code 201).\n<p>The <code>Created</code> response indicates that the server …\n",null,1],["Net::HTTPEarlyHints","","ruby/classes/Net/HTTPEarlyHints.html","","<p>Response class for <code>Early Hints</code> responses (status code 103).\n<p>The <code>Early Hints</code> indicates that the server …\n",null,1],["Net::HTTPError","","ruby/classes/Net/HTTPError.html","","",null,1],["Net::HTTPExceptions","","ruby/classes/Net/HTTPExceptions.html","","<p>Net::HTTP exception class. You cannot use Net::HTTPExceptions directly; instead, you must use its subclasses. …\n",null,1],["Net::HTTPExpectationFailed","","ruby/classes/Net/HTTPExpectationFailed.html","","<p>Response class for <code>Expectation Failed</code> responses (status code 417).\n<p>The server cannot meet the requirements …\n",null,1],["Net::HTTPFailedDependency","","ruby/classes/Net/HTTPFailedDependency.html","","<p>Response class for <code>Failed Dependency (WebDAV)</code> responses (status code 424).\n<p>The request failed because …\n",null,1],["Net::HTTPFatalError","","ruby/classes/Net/HTTPFatalError.html","","",null,1],["Net::HTTPForbidden","","ruby/classes/Net/HTTPForbidden.html","","<p>Response class for <code>Forbidden</code> responses (status code 403).\n<p>The request contained valid data and was understood …\n",null,1],["Net::HTTPFound","","ruby/classes/Net/HTTPFound.html","","<p>Response class for <code>Found</code> responses (status code 302).\n<p>The <code>Found</code> response indicates that the client should …\n",null,1],["Net::HTTPGatewayTimeOut","","ruby/classes/Net/HTTPGatewayTimeout.html","","<p>Response class for <code>Gateway Timeout</code> responses (status code 504).\n<p>The server was acting as a gateway or …\n",null,1],["Net::HTTPGatewayTimeout","","ruby/classes/Net/HTTPGatewayTimeout.html","","<p>Response class for <code>Gateway Timeout</code> responses (status code 504).\n<p>The server was acting as a gateway or …\n",null,1],["Net::HTTPGenericRequest","","ruby/classes/Net/HTTPGenericRequest.html","","<p>HTTPGenericRequest is the parent of the Net::HTTPRequest class.\n<p>Do not use this directly; instead, use …\n",null,1],["Net::HTTPGone","","ruby/classes/Net/HTTPGone.html","","<p>Response class for <code>Gone</code> responses (status code 410).\n<p>The resource requested was previously in use but …\n",null,1],["Net::HTTPHeader","","ruby/classes/Net/HTTPHeader.html","","<p>The HTTPHeader module provides access to HTTP headers.\n<p>The module is included in:\n<p>Net::HTTPGenericRequest …\n",null,1],["Net::HTTPHeaderSyntaxError","","ruby/classes/Net/HTTPHeaderSyntaxError.html","","",null,1],["Net::HTTPIMUsed","","ruby/classes/Net/HTTPIMUsed.html","","<p>Response class for <code>IM Used</code> responses (status code 226).\n<p>The <code>IM Used</code> response indicates that the server …\n",null,1],["Net::HTTPInformation","","ruby/classes/Net/HTTPInformation.html","","<p>Parent class for informational (1xx) HTTP response classes.\n<p>An informational response indicates that the …\n",null,1],["Net::HTTPInsufficientStorage","","ruby/classes/Net/HTTPInsufficientStorage.html","","<p>Response class for <code>Insufficient Storage (WebDAV)</code> responses (status code 507).\n<p>The server is unable to …\n",null,1],["Net::HTTPInternalServerError","","ruby/classes/Net/HTTPInternalServerError.html","","<p>Response class for <code>Internal Server Error</code> responses (status code 500).\n<p>An unexpected condition was encountered …\n",null,1],["Net::HTTPLengthRequired","","ruby/classes/Net/HTTPLengthRequired.html","","<p>Response class for <code>Length Required</code> responses (status code 411).\n<p>The request did not specify the length …\n",null,1],["Net::HTTPLocked","","ruby/classes/Net/HTTPLocked.html","","<p>Response class for <code>Locked (WebDAV)</code> responses (status code 423).\n<p>The requested resource is locked.\n<p>References: …\n",null,1],["Net::HTTPLoopDetected","","ruby/classes/Net/HTTPLoopDetected.html","","<p>Response class for <code>Loop Detected (WebDAV)</code> responses (status code 508).\n<p>The server detected an infinite …\n",null,1],["Net::HTTPMethodNotAllowed","","ruby/classes/Net/HTTPMethodNotAllowed.html","","<p>Response class for <code>Method Not Allowed</code> responses (status code 405).\n<p>The request method is not supported …\n",null,1],["Net::HTTPMisdirectedRequest","","ruby/classes/Net/HTTPMisdirectedRequest.html","","<p>Response class for <code>Misdirected Request</code> responses (status code 421).\n<p>The request was directed at a server …\n",null,1],["Net::HTTPMovedPermanently","","ruby/classes/Net/HTTPMovedPermanently.html","","<p>Response class for <code>Moved Permanently</code> responses (status code 301).\n<p>The <code>Moved Permanently</code> response indicates …\n",null,1],["Net::HTTPMovedTemporarily","","ruby/classes/Net/HTTPFound.html","","<p>Response class for <code>Found</code> responses (status code 302).\n<p>The <code>Found</code> response indicates that the client should …\n",null,1],["Net::HTTPMultiStatus","","ruby/classes/Net/HTTPMultiStatus.html","","<p>Response class for <code>Multi-Status (WebDAV)</code> responses (status code 207).\n<p>The <code>Multi-Status (WebDAV)</code> response …\n",null,1],["Net::HTTPMultipleChoice","","ruby/classes/Net/HTTPMultipleChoices.html","","<p>Response class for <code>Multiple Choices</code> responses (status code 300).\n<p>The <code>Multiple Choices</code> response indicates …\n",null,1],["Net::HTTPMultipleChoices","","ruby/classes/Net/HTTPMultipleChoices.html","","<p>Response class for <code>Multiple Choices</code> responses (status code 300).\n<p>The <code>Multiple Choices</code> response indicates …\n",null,1],["Net::HTTPNetworkAuthenticationRequired","","ruby/classes/Net/HTTPNetworkAuthenticationRequired.html","","<p>Response class for <code>Network Authentication Required</code> responses (status code 511).\n<p>The client needs to authenticate …\n",null,1],["Net::HTTPNoContent","","ruby/classes/Net/HTTPNoContent.html","","<p>Response class for <code>No Content</code> responses (status code 204).\n<p>The <code>No Content</code> response indicates that the …\n",null,1],["Net::HTTPNonAuthoritativeInformation","","ruby/classes/Net/HTTPNonAuthoritativeInformation.html","","<p>Response class for <code>Non-Authoritative Information</code> responses (status code 203).\n<p>The <code>Non-Authoritative Information</code> …\n",null,1],["Net::HTTPNotAcceptable","","ruby/classes/Net/HTTPNotAcceptable.html","","<p>Response class for <code>Not Acceptable</code> responses (status code 406).\n<p>The requested resource is capable of generating …\n",null,1],["Net::HTTPNotExtended","","ruby/classes/Net/HTTPNotExtended.html","","<p>Response class for <code>Not Extended</code> responses (status code 510).\n<p>Further extensions to the request are required …\n",null,1],["Net::HTTPNotFound","","ruby/classes/Net/HTTPNotFound.html","","<p>Response class for <code>Not Found</code> responses (status code 404).\n<p>The requested resource could not be found but …\n",null,1],["Net::HTTPNotImplemented","","ruby/classes/Net/HTTPNotImplemented.html","","<p>Response class for <code>Not Implemented</code> responses (status code 501).\n<p>The server either does not recognize the …\n",null,1],["Net::HTTPNotModified","","ruby/classes/Net/HTTPNotModified.html","","<p>Response class for <code>Not Modified</code> responses (status code 304).\n<p>Indicates that the resource has not been …\n",null,1],["Net::HTTPOK","","ruby/classes/Net/HTTPOK.html","","<p>Response class for <code>OK</code> responses (status code 200).\n<p>The <code>OK</code> response indicates that the server has received …\n",null,1],["Net::HTTPPartialContent","","ruby/classes/Net/HTTPPartialContent.html","","<p>Response class for <code>Partial Content</code> responses (status code 206).\n<p>The <code>Partial Content</code> response indicates …\n",null,1],["Net::HTTPPayloadTooLarge","","ruby/classes/Net/HTTPPayloadTooLarge.html","","<p>Response class for <code>Payload Too Large</code> responses (status code 413).\n<p>The request is larger than the server …\n",null,1],["Net::HTTPPaymentRequired","","ruby/classes/Net/HTTPPaymentRequired.html","","<p>Response class for <code>Payment Required</code> responses (status code 402).\n<p>Reserved for future use.\n<p>References:\n",null,1],["Net::HTTPPermanentRedirect","","ruby/classes/Net/HTTPPermanentRedirect.html","","<p>Response class for <code>Permanent Redirect</code> responses (status code 308).\n<p>This and all future requests should …\n",null,1],["Net::HTTPPreconditionFailed","","ruby/classes/Net/HTTPPreconditionFailed.html","","<p>Response class for <code>Precondition Failed</code> responses (status code 412).\n<p>The server does not meet one of the …\n",null,1],["Net::HTTPPreconditionRequired","","ruby/classes/Net/HTTPPreconditionRequired.html","","<p>Response class for <code>Precondition Required</code> responses (status code 428).\n<p>The origin server requires the request …\n",null,1],["Net::HTTPProcessing","","ruby/classes/Net/HTTPProcessing.html","","<p>Response class for <code>Processing</code> responses (status code 102).\n<p>The <code>Processing</code> response indicates that the …\n",null,1],["Net::HTTPProxyAuthenticationRequired","","ruby/classes/Net/HTTPProxyAuthenticationRequired.html","","<p>Response class for <code>Proxy Authentication Required</code> responses (status code 407).\n<p>The client must first authenticate …\n",null,1],["Net::HTTPRangeNotSatisfiable","","ruby/classes/Net/HTTPRangeNotSatisfiable.html","","<p>Response class for <code>Range Not Satisfiable</code> responses (status code 416).\n<p>The request entity has a media type …\n",null,1],["Net::HTTPRedirection","","ruby/classes/Net/HTTPRedirection.html","","<p>Parent class for redirection (3xx) HTTP response classes.\n<p>A redirection response indicates the client …\n",null,1],["Net::HTTPRequest","","ruby/classes/Net/HTTPRequest.html","","<p>This class is the base class for Net::HTTP request classes. The class should not be used directly; instead …\n",null,1],["Net::HTTPRequestEntityTooLarge","","ruby/classes/Net/HTTPPayloadTooLarge.html","","<p>Response class for <code>Payload Too Large</code> responses (status code 413).\n<p>The request is larger than the server …\n",null,1],["Net::HTTPRequestHeaderFieldsTooLarge","","ruby/classes/Net/HTTPRequestHeaderFieldsTooLarge.html","","<p>Response class for <code>Request Header Fields Too Large</code> responses (status code 431).\n<p>An individual header field …\n",null,1],["Net::HTTPRequestTimeOut","","ruby/classes/Net/HTTPRequestTimeout.html","","<p>Response class for <code>Request Timeout</code> responses (status code 408).\n<p>The server timed out waiting for the request. …\n",null,1],["Net::HTTPRequestTimeout","","ruby/classes/Net/HTTPRequestTimeout.html","","<p>Response class for <code>Request Timeout</code> responses (status code 408).\n<p>The server timed out waiting for the request. …\n",null,1],["Net::HTTPRequestURITooLarge","","ruby/classes/Net/HTTPRequestURITooLong.html","","<p>Response class for <code>URI Too Long</code> responses (status code 414).\n<p>The URI provided was too long for the server …\n",null,1],["Net::HTTPRequestURITooLong","","ruby/classes/Net/HTTPURITooLong.html","","<p>Response class for <code>URI Too Long</code> responses (status code 414).\n<p>The URI provided was too long for the server …\n",null,1],["Net::HTTPRequestedRangeNotSatisfiable","","ruby/classes/Net/HTTPRangeNotSatisfiable.html","","<p>Response class for <code>Range Not Satisfiable</code> responses (status code 416).\n<p>The request entity has a media type …\n",null,1],["Net::HTTPResetContent","","ruby/classes/Net/HTTPResetContent.html","","<p>Response class for <code>Reset Content</code> responses (status code 205).\n<p>The <code>Reset Content</code> response indicates that …\n",null,1],["Net::HTTPResponse","","ruby/classes/Net/HTTPResponse.html","","<p>This class is the base class for Net::HTTP response classes.\n<p>About the Examples\n<p>Returned Responses\n",null,1],["Net::HTTPRetriableError","","ruby/classes/Net/HTTPRetriableError.html","","",null,1],["Net::HTTPSeeOther","","ruby/classes/Net/HTTPSeeOther.html","","<p>Response class for <code>See Other</code> responses (status code 303).\n<p>The response to the request can be found under …\n",null,1],["Net::HTTPServerError","","ruby/classes/Net/HTTPServerError.html","","<p>Parent class for server error (5xx) HTTP response classes.\n<p>A server error response indicates that the …\n",null,1],["Net::HTTPServiceUnavailable","","ruby/classes/Net/HTTPServiceUnavailable.html","","<p>Response class for <code>Service Unavailable</code> responses (status code 503).\n<p>The server cannot handle the request …\n",null,1],["Net::HTTPSuccess","","ruby/classes/Net/HTTPSuccess.html","","<p>Parent class for success (2xx) HTTP response classes.\n<p>A success response indicates the action requested …\n",null,1],["Net::HTTPSwitchProtocol","","ruby/classes/Net/HTTPSwitchProtocol.html","","<p>Response class for <code>Switching Protocol</code> responses (status code 101).\n<p>The &lt;tt&gt;Switching Protocol&lt;tt&gt; …\n",null,1],["Net::HTTPTemporaryRedirect","","ruby/classes/Net/HTTPTemporaryRedirect.html","","<p>Response class for <code>Temporary Redirect</code> responses (status code 307).\n<p>The request should be repeated with …\n",null,1],["Net::HTTPTooManyRequests","","ruby/classes/Net/HTTPTooManyRequests.html","","<p>Response class for <code>Too Many Requests</code> responses (status code 429).\n<p>The user has sent too many requests …\n",null,1],["Net::HTTPURITooLong","","ruby/classes/Net/HTTPURITooLong.html","","<p>Response class for <code>URI Too Long</code> responses (status code 414).\n<p>The URI provided was too long for the server …\n",null,1],["Net::HTTPUnauthorized","","ruby/classes/Net/HTTPUnauthorized.html","","<p>Response class for <code>Unauthorized</code> responses (status code 401).\n<p>Authentication is required, but either was …\n",null,1],["Net::HTTPUnavailableForLegalReasons","","ruby/classes/Net/HTTPUnavailableForLegalReasons.html","","<p>Response class for <code>Unavailable For Legal Reasons</code> responses (status code 451).\n<p>A server operator has received …\n",null,1],["Net::HTTPUnknownResponse","","ruby/classes/Net/HTTPUnknownResponse.html","","",null,1],["Net::HTTPUnprocessableEntity","","ruby/classes/Net/HTTPUnprocessableEntity.html","","<p>Response class for <code>Unprocessable Entity</code> responses (status code 422).\n<p>The request was well-formed but had …\n",null,1],["Net::HTTPUnsupportedMediaType","","ruby/classes/Net/HTTPUnsupportedMediaType.html","","<p>Response class for <code>Unsupported Media Type</code> responses (status code 415).\n<p>The request entity has a media …\n",null,1],["Net::HTTPUpgradeRequired","","ruby/classes/Net/HTTPUpgradeRequired.html","","<p>Response class for <code>Upgrade Required</code> responses (status code 426).\n<p>The client should switch to the protocol …\n",null,1],["Net::HTTPUseProxy","","ruby/classes/Net/HTTPUseProxy.html","","<p>Response class for <code>Use Proxy</code> responses (status code 305).\n<p>The requested resource is available only through …\n",null,1],["Net::HTTPVariantAlsoNegotiates","","ruby/classes/Net/HTTPVariantAlsoNegotiates.html","","<p>Response class for <code>Variant Also Negotiates</code> responses (status code 506).\n<p>Transparent content negotiation …\n",null,1],["Net::HTTPVersionNotSupported","","ruby/classes/Net/HTTPVersionNotSupported.html","","<p>Response class for <code>HTTP Version Not Supported</code> responses (status code 505).\n<p>The server does not support …\n",null,1],["Net::OpenTimeout","","ruby/classes/Net/OpenTimeout.html","","<p>OpenTimeout, a subclass of Timeout::Error, is raised if a connection cannot be created within the open_timeout. …\n",null,1],["Net::ProtoAuthError","","ruby/classes/Net/ProtoAuthError.html","","",null,1],["Net::ProtoCommandError","","ruby/classes/Net/ProtoCommandError.html","","",null,1],["Net::ProtoFatalError","","ruby/classes/Net/ProtoFatalError.html","","",null,1],["Net::ProtoRetriableError","","ruby/classes/Net/ProtoRetriableError.html","","",null,1],["Net::ProtoServerError","","ruby/classes/Net/ProtoServerError.html","","",null,1],["Net::ProtoSyntaxError","","ruby/classes/Net/ProtoSyntaxError.html","","",null,1],["Net::ProtoUnknownError","","ruby/classes/Net/ProtoUnknownError.html","","",null,1],["Net::ProtocRetryError","","ruby/classes/Net/ProtocRetryError.html","","",null,1],["Net::ProtocolError","","ruby/classes/Net/ProtocolError.html","","",null,1],["Net::ReadTimeout","","ruby/classes/Net/ReadTimeout.html","","<p>ReadTimeout, a subclass of Timeout::Error, is raised if a chunk of the response cannot be read within …\n",null,1],["Net::WriteAdapter","","ruby/classes/Net/WriteAdapter.html","","<p>The writer adapter class\n",null,1],["Net::WriteTimeout","","ruby/classes/Net/WriteTimeout.html","","<p>WriteTimeout, a subclass of Timeout::Error, is raised if a chunk of the response cannot be written within …\n",null,1],["Newton","","ruby/classes/Newton.html","","<p>newton.rb\n<p>Solves the nonlinear algebraic equation system f = 0 by Newton’s method. This program is …\n",null,1],["NilClass","","rails/classes/NilClass.html","","",null,0],["NilClass","","ruby/classes/NilClass.html","","<p>The class of the singleton object <code>nil</code>.\n<p>Several of its methods act as operators:\n<p>#&amp;\n",null,1],["NoMatchingPatternError","","ruby/classes/NoMatchingPatternError.html","","",null,1],["NoMatchingPatternKeyError","","ruby/classes/NoMatchingPatternKeyError.html","","",null,1],["NoMemoryError","","ruby/classes/NoMemoryError.html","","<p>Raised when memory allocation fails.\n",null,1],["NoMethodError","","ruby/classes/NoMethodError.html","","<p>Raised when a method is called on a receiver which doesn’t have it defined and also fails to respond …\n",null,1],["NotImplementedError","","ruby/classes/NotImplementedError.html","","<p>Raised when a feature is not implemented on the current platform. For example, methods depending on the …\n",null,1],["Numeric","","rails/classes/Numeric.html","","",null,0],["Numeric","","ruby/classes/Numeric.html","","<p>Numeric is the class from which all higher-level numeric classes should inherit.\n<p>Numeric allows instantiation …\n",null,1],["OLEProperty","","ruby/classes/OLEProperty.html","","<p>OLEProperty helper class of Property with arguments.\n",null,1],["Object","","rails/classes/Object.html","","",null,0],["Object","","ruby/classes/Object.html","","<p>Object is the default root of all Ruby objects.  Object inherits from BasicObject which allows creating …\n",null,1],["Object::RubyLex","","ruby/classes/IRB/RubyLex.html","","",null,1],["ObjectSpace","","ruby/classes/ObjectSpace.html","","<p>The objspace library extends the ObjectSpace module and adds several methods to get internal statistic …\n",null,1],["ObjectSpace::InternalObjectWrapper","","ruby/classes/ObjectSpace/InternalObjectWrapper.html","","<p>This class is used as a return value from ObjectSpace::reachable_objects_from.\n<p>When ObjectSpace::reachable_objects_from …\n",null,1],["ObjectSpace::WeakKeyMap","","ruby/classes/ObjectSpace/WeakKeyMap.html","","<p>An ObjectSpace::WeakKeyMap is a key-value map that holds weak references to its keys, so they can be …\n",null,1],["ObjectSpace::WeakMap","","ruby/classes/ObjectSpace/WeakMap.html","","<p>An ObjectSpace::WeakMap is a key-value map that holds weak references to its keys and values, so they …\n",null,1],["Observable","","ruby/classes/Observable.html","","<p>The Observer pattern (also known as publish/subscribe) provides a simple mechanism for one object to …\n",null,1],["Open3","","ruby/classes/Open3.html","","<p>Module Open3 supports creating child processes with access to their $stdin, $stdout, and $stderr streams. …\n",null,1],["OpenKey","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-OpenKey","(hkey, name, opt, desired)","",null,1],["OpenSSL","","ruby/classes/OpenSSL.html","","<p>OpenSSL provides SSL, TLS and general purpose cryptography.  It wraps the OpenSSL library.\n<p>Examples\n<p>All …\n",null,1],["OpenSSL::ASN1","","ruby/classes/OpenSSL/ASN1.html","","<p>Abstract Syntax Notation One (or ASN.1) is a notation syntax to describe data structures and is defined …\n",null,1],["OpenSSL::ASN1::ASN1Data","","ruby/classes/OpenSSL/ASN1/ASN1Data.html","","<p>The top-level class representing any ASN.1 object. When parsed by ASN1.decode, tagged values are always …\n",null,1],["OpenSSL::ASN1::ASN1Error","","ruby/classes/OpenSSL/ASN1/ASN1Error.html","","<p>Generic error class for all errors raised in ASN1 and any of the classes defined in it.\n",null,1],["OpenSSL::ASN1::Constructive","","ruby/classes/OpenSSL/ASN1/Constructive.html","","<p>The parent class for all constructed encodings. The <em>value</em> attribute of a Constructive is always an Array …\n",null,1],["OpenSSL::ASN1::ObjectId","","ruby/classes/OpenSSL/ASN1/ObjectId.html","","<p>Represents the primitive object id for OpenSSL::ASN1\n",null,1],["OpenSSL::ASN1::Primitive","","ruby/classes/OpenSSL/ASN1/Primitive.html","","<p>The parent class for all primitive encodings. Attributes are the same as for ASN1Data, with the addition …\n",null,1],["OpenSSL::BN","","ruby/classes/OpenSSL/BN.html","","",null,1],["OpenSSL::BNError","","ruby/classes/OpenSSL/BNError.html","","<p>Generic Error for all of OpenSSL::BN (big num)\n",null,1],["OpenSSL::Buffering","","ruby/classes/OpenSSL/Buffering.html","","<p>OpenSSL IO buffering mix-in module.\n<p>This module allows an OpenSSL::SSL::SSLSocket to behave like an IO …\n",null,1],["OpenSSL::Buffering::Buffer","","ruby/classes/OpenSSL/Buffering/Buffer.html","","<p>A buffer which will retain binary encoding.\n",null,1],["OpenSSL::Cipher","","ruby/classes/OpenSSL/Cipher.html","","<p>Provides symmetric algorithms for encryption and decryption. The algorithms that are available depend …\n",null,1],["OpenSSL::Cipher::Cipher","","ruby/classes/OpenSSL/Cipher/Cipher.html","","<p>Deprecated.\n<p>This class is only provided for backwards compatibility. Use OpenSSL::Cipher.\n",null,1],["OpenSSL::Cipher::CipherError","","ruby/classes/OpenSSL/Cipher/CipherError.html","","",null,1],["OpenSSL::Config","","ruby/classes/OpenSSL/Config.html","","<p>Configuration for the openssl library.\n<p>Many system’s installation of openssl library will depend on …\n",null,1],["OpenSSL::ConfigError","","ruby/classes/OpenSSL/ConfigError.html","","<p>General error for openssl library configuration files. Including formatting, parsing errors, etc.\n",null,1],["OpenSSL::Digest","","ruby/classes/OpenSSL/Digest.html","","<p>OpenSSL::Digest allows you to compute message digests (sometimes interchangeably called “hashes”) …\n",null,1],["OpenSSL::Digest::DigestError","","ruby/classes/OpenSSL/Digest/DigestError.html","","<p>Generic Exception class that is raised if an error occurs during a Digest operation.\n",null,1],["OpenSSL::Engine","","ruby/classes/OpenSSL/Engine.html","","<p>This class is the access to openssl’s ENGINE cryptographic module implementation.\n<p>See also, www.openssl.org/docs/crypto/engine.html …\n",null,1],["OpenSSL::Engine::EngineError","","ruby/classes/OpenSSL/Engine/EngineError.html","","<p>This is the generic exception for OpenSSL::Engine related errors\n",null,1],["OpenSSL::HMAC","","ruby/classes/OpenSSL/HMAC.html","","<p>OpenSSL::HMAC allows computing Hash-based Message Authentication Code (HMAC). It is a type of message …\n",null,1],["OpenSSL::HMACError","","ruby/classes/OpenSSL/HMACError.html","","<p>Document-class: OpenSSL::HMAC\n<p>OpenSSL::HMAC allows computing Hash-based Message Authentication Code ( …\n",null,1],["OpenSSL::KDF","","ruby/classes/OpenSSL/KDF.html","","<p>Provides functionality of various KDFs (key derivation function).\n<p>KDF is typically used for securely deriving …\n",null,1],["OpenSSL::KDF::KDFError","","ruby/classes/OpenSSL/KDF/KDFError.html","","<p>Generic exception class raised if an error occurs in OpenSSL::KDF module.\n",null,1],["OpenSSL::Marshal","","ruby/classes/OpenSSL/Marshal.html","","",null,1],["OpenSSL::Marshal::ClassMethods","","ruby/classes/OpenSSL/Marshal/ClassMethods.html","","",null,1],["OpenSSL::Netscape","","ruby/classes/OpenSSL/Netscape.html","","<p>OpenSSL::Netscape is a namespace for SPKI (Simple Public Key Infrastructure) which implements Signed …\n",null,1],["OpenSSL::Netscape::SPKI","","ruby/classes/OpenSSL/Netscape/SPKI.html","","<p>A Simple Public Key Infrastructure implementation (pronounced “spooky”). The structure is defined …\n",null,1],["OpenSSL::Netscape::SPKIError","","ruby/classes/OpenSSL/Netscape/SPKIError.html","","<p>Generic Exception class that is raised if an error occurs during an operation on an instance of OpenSSL::Netscape::SPKI …\n",null,1],["OpenSSL::OCSP","","ruby/classes/OpenSSL/OCSP.html","","<p>OpenSSL::OCSP implements Online Certificate Status Protocol requests and responses.\n<p>Creating and sending …\n",null,1],["OpenSSL::OCSP::BasicResponse","","ruby/classes/OpenSSL/OCSP/BasicResponse.html","","<p>An OpenSSL::OCSP::BasicResponse contains the status of a certificate check which is created from an  …\n",null,1],["OpenSSL::OCSP::CertificateId","","ruby/classes/OpenSSL/OCSP/CertificateId.html","","<p>An OpenSSL::OCSP::CertificateId identifies a certificate to the CA so that a status check can be performed. …\n",null,1],["OpenSSL::OCSP::OCSPError","","ruby/classes/OpenSSL/OCSP/OCSPError.html","","<p>OCSP error class.\n",null,1],["OpenSSL::OCSP::Request","","ruby/classes/OpenSSL/OCSP/Request.html","","<p>An OpenSSL::OCSP::Request contains the certificate information for determining if a certificate has been …\n",null,1],["OpenSSL::OCSP::Response","","ruby/classes/OpenSSL/OCSP/Response.html","","<p>An OpenSSL::OCSP::Response contains the status of a certificate check which is created from an OpenSSL::OCSP::Request …\n",null,1],["OpenSSL::OCSP::SingleResponse","","ruby/classes/OpenSSL/OCSP/SingleResponse.html","","<p>An OpenSSL::OCSP::SingleResponse represents an OCSP SingleResponse structure, which contains the basic …\n",null,1],["OpenSSL::OpenSSLError","","ruby/classes/OpenSSL/OpenSSLError.html","","<p>Generic error, common for all classes under OpenSSL module\n",null,1],["OpenSSL::PKCS12","","ruby/classes/OpenSSL/PKCS12.html","","<p>Defines a file format commonly used to store private keys with accompanying public key certificates, …\n",null,1],["OpenSSL::PKCS12::PKCS12Error","","ruby/classes/OpenSSL/PKCS12/PKCS12Error.html","","",null,1],["OpenSSL::PKCS5","","ruby/classes/OpenSSL/PKCS5.html","","",null,1],["OpenSSL::PKCS7","","ruby/classes/OpenSSL/PKCS7.html","","",null,1],["OpenSSL::PKCS7::PKCS7Error","","ruby/classes/OpenSSL/PKCS7/PKCS7Error.html","","",null,1],["OpenSSL::PKCS7::RecipientInfo","","ruby/classes/OpenSSL/PKCS7/RecipientInfo.html","","",null,1],["OpenSSL::PKCS7::SignerInfo","","ruby/classes/OpenSSL/PKCS7/SignerInfo.html","","",null,1],["OpenSSL::PKey","","ruby/classes/OpenSSL/PKey.html","","<p>Asymmetric Public Key Algorithms\n<p>Asymmetric public key algorithms solve the problem of establishing and …\n",null,1],["OpenSSL::PKey::DH","","ruby/classes/OpenSSL/PKey/DH.html","","<p>An implementation of the Diffie-Hellman key exchange protocol based on discrete logarithms in finite …\n",null,1],["OpenSSL::PKey::DHError","","ruby/classes/OpenSSL/PKey/DHError.html","","<p>Generic exception that is raised if an operation on a DH PKey fails unexpectedly or in case an instantiation …\n",null,1],["OpenSSL::PKey::DSA","","ruby/classes/OpenSSL/PKey/DSA.html","","<p>DSA, the Digital Signature Algorithm, is specified in NIST’s FIPS 186-3. It is an asymmetric public …\n",null,1],["OpenSSL::PKey::DSAError","","ruby/classes/OpenSSL/PKey/DSAError.html","","<p>Generic exception that is raised if an operation on a DSA PKey fails unexpectedly or in case an instantiation …\n",null,1],["OpenSSL::PKey::EC","","ruby/classes/OpenSSL/PKey/EC.html","","<p>OpenSSL::PKey::EC provides access to Elliptic Curve Digital Signature Algorithm (ECDSA) and Elliptic …\n",null,1],["OpenSSL::PKey::EC::Group","","ruby/classes/OpenSSL/PKey/EC/Group.html","","",null,1],["OpenSSL::PKey::EC::Group::Error","","ruby/classes/OpenSSL/PKey/EC/Group/Error.html","","",null,1],["OpenSSL::PKey::EC::Point","","ruby/classes/OpenSSL/PKey/EC/Point.html","","",null,1],["OpenSSL::PKey::EC::Point::Error","","ruby/classes/OpenSSL/PKey/EC/Point/Error.html","","",null,1],["OpenSSL::PKey::ECError","","ruby/classes/OpenSSL/PKey/ECError.html","","",null,1],["OpenSSL::PKey::PKey","","ruby/classes/OpenSSL/PKey/PKey.html","","<p>An abstract class that bundles signature creation (PKey#sign) and validation (PKey#verify) that is common …\n",null,1],["OpenSSL::PKey::PKeyError","","ruby/classes/OpenSSL/PKey/PKeyError.html","","<p>Raised when errors occur during PKey#sign or PKey#verify.\n",null,1],["OpenSSL::PKey::RSA","","ruby/classes/OpenSSL/PKey/RSA.html","","<p>RSA is an asymmetric public key algorithm that has been formalized in RFC 3447. It is in widespread use …\n",null,1],["OpenSSL::PKey::RSAError","","ruby/classes/OpenSSL/PKey/RSAError.html","","<p>Generic exception that is raised if an operation on an RSA PKey fails unexpectedly or in case an instantiation …\n",null,1],["OpenSSL::Random","","ruby/classes/OpenSSL/Random.html","","",null,1],["OpenSSL::Random::RandomError","","ruby/classes/OpenSSL/Random/RandomError.html","","",null,1],["OpenSSL::SSL","","ruby/classes/OpenSSL/SSL.html","","<p>Use SSLContext to set up the parameters for a TLS (former SSL) connection. Both client and server TLS …\n",null,1],["OpenSSL::SSL::SSLContext","","ruby/classes/OpenSSL/SSL/SSLContext.html","","<p>An SSLContext is used to set various options regarding certificates, algorithms, verification, session …\n",null,1],["OpenSSL::SSL::SSLError","","ruby/classes/OpenSSL/SSL/SSLError.html","","<p>Generic error class raised by SSLSocket and SSLContext.\n",null,1],["OpenSSL::SSL::SSLErrorWaitReadable","","ruby/classes/OpenSSL/SSL/SSLErrorWaitReadable.html","","",null,1],["OpenSSL::SSL::SSLErrorWaitWritable","","ruby/classes/OpenSSL/SSL/SSLErrorWaitWritable.html","","",null,1],["OpenSSL::SSL::SSLServer","","ruby/classes/OpenSSL/SSL/SSLServer.html","","<p>SSLServer represents a TCP/IP server socket with Secure Sockets Layer.\n",null,1],["OpenSSL::SSL::SSLSocket","","ruby/classes/OpenSSL/SSL/SSLSocket.html","","",null,1],["OpenSSL::SSL::Session","","ruby/classes/OpenSSL/SSL/Session.html","","",null,1],["OpenSSL::SSL::Session::SessionError","","ruby/classes/OpenSSL/SSL/Session/SessionError.html","","",null,1],["OpenSSL::SSL::SocketForwarder","","ruby/classes/OpenSSL/SSL/SocketForwarder.html","","",null,1],["OpenSSL::Timestamp","","ruby/classes/OpenSSL/Timestamp.html","","<p>Provides classes and methods to request, create and validate RFC3161-compliant timestamps. Request may …\n",null,1],["OpenSSL::Timestamp::Factory","","ruby/classes/OpenSSL/Timestamp/Factory.html","","<p>Used to generate a Response from scratch.\n<p>Please bear in mind that the implementation will always apply …\n",null,1],["OpenSSL::Timestamp::Request","","ruby/classes/OpenSSL/Timestamp/Request.html","","<p>Allows to create timestamp requests or parse existing ones. A Request is also needed for creating timestamps …\n",null,1],["OpenSSL::Timestamp::Response","","ruby/classes/OpenSSL/Timestamp/Response.html","","<p>Immutable and read-only representation of a timestamp response returned from a timestamp server after …\n",null,1],["OpenSSL::Timestamp::TimestampError","","ruby/classes/OpenSSL/Timestamp/TimestampError.html","","<p>Generic exception class of the Timestamp module.\n",null,1],["OpenSSL::Timestamp::TokenInfo","","ruby/classes/OpenSSL/Timestamp/TokenInfo.html","","<p>Immutable and read-only representation of a timestamp token info from a Response.\n",null,1],["OpenSSL::X509","","ruby/classes/OpenSSL/X509.html","","",null,1],["OpenSSL::X509::Attribute","","ruby/classes/OpenSSL/X509/Attribute.html","","",null,1],["OpenSSL::X509::AttributeError","","ruby/classes/OpenSSL/X509/AttributeError.html","","",null,1],["OpenSSL::X509::CRL","","ruby/classes/OpenSSL/X509/CRL.html","","",null,1],["OpenSSL::X509::CRLError","","ruby/classes/OpenSSL/X509/CRLError.html","","",null,1],["OpenSSL::X509::Certificate","","ruby/classes/OpenSSL/X509/Certificate.html","","<p>Implementation of an X.509 certificate as specified in RFC 5280. Provides access to a certificate’s …\n",null,1],["OpenSSL::X509::CertificateError","","ruby/classes/OpenSSL/X509/CertificateError.html","","",null,1],["OpenSSL::X509::Extension","","ruby/classes/OpenSSL/X509/Extension.html","","",null,1],["OpenSSL::X509::Extension::AuthorityInfoAccess","","ruby/classes/OpenSSL/X509/Extension/AuthorityInfoAccess.html","","",null,1],["OpenSSL::X509::Extension::AuthorityKeyIdentifier","","ruby/classes/OpenSSL/X509/Extension/AuthorityKeyIdentifier.html","","",null,1],["OpenSSL::X509::Extension::CRLDistributionPoints","","ruby/classes/OpenSSL/X509/Extension/CRLDistributionPoints.html","","",null,1],["OpenSSL::X509::Extension::Helpers","","ruby/classes/OpenSSL/X509/Extension/Helpers.html","","",null,1],["OpenSSL::X509::Extension::SubjectKeyIdentifier","","ruby/classes/OpenSSL/X509/Extension/SubjectKeyIdentifier.html","","",null,1],["OpenSSL::X509::ExtensionError","","ruby/classes/OpenSSL/X509/ExtensionError.html","","",null,1],["OpenSSL::X509::ExtensionFactory","","ruby/classes/OpenSSL/X509/ExtensionFactory.html","","",null,1],["OpenSSL::X509::Name","","ruby/classes/OpenSSL/X509/Name.html","","<p>An X.509 name represents a hostname, email address or other entity associated with a public key.\n<p>You can …\n",null,1],["OpenSSL::X509::Name::RFC2253DN","","ruby/classes/OpenSSL/X509/Name/RFC2253DN.html","","",null,1],["OpenSSL::X509::NameError","","ruby/classes/OpenSSL/X509/NameError.html","","",null,1],["OpenSSL::X509::Request","","ruby/classes/OpenSSL/X509/Request.html","","",null,1],["OpenSSL::X509::RequestError","","ruby/classes/OpenSSL/X509/RequestError.html","","",null,1],["OpenSSL::X509::Revoked","","ruby/classes/OpenSSL/X509/Revoked.html","","",null,1],["OpenSSL::X509::RevokedError","","ruby/classes/OpenSSL/X509/RevokedError.html","","",null,1],["OpenSSL::X509::Store","","ruby/classes/OpenSSL/X509/Store.html","","<p>The X509 certificate store holds trusted CA certificates used to verify peer certificates.\n<p>The easiest …\n",null,1],["OpenSSL::X509::StoreContext","","ruby/classes/OpenSSL/X509/StoreContext.html","","<p>A StoreContext is used while validating a single certificate and holds the status involved.\n",null,1],["OpenSSL::X509::StoreError","","ruby/classes/OpenSSL/X509/StoreError.html","","",null,1],["OpenStruct","","ruby/classes/OpenStruct.html","","<p>An OpenStruct is a data structure, similar to a Hash, that allows the definition of arbitrary attributes …\n",null,1],["OpenURI","","ruby/classes/OpenURI.html","","<p>OpenURI is an easy-to-use wrapper for Net::HTTP, Net::HTTPS and Net::FTP.\n<p>Example\n<p>It is possible to open …\n",null,1],["OpenURI::HTTPError","","ruby/classes/OpenURI/HTTPError.html","","",null,1],["OpenURI::HTTPRedirect","","ruby/classes/OpenURI/HTTPRedirect.html","","<p>Raised on redirection, only occurs when <code>redirect</code> option for HTTP is <code>false</code>.\n",null,1],["OpenURI::Meta","","ruby/classes/OpenURI/Meta.html","","<p>Mixin for holding meta-information.\n",null,1],["OpenURI::OpenRead","","ruby/classes/OpenURI/OpenRead.html","","<p>Mixin for HTTP and FTP URIs.\n",null,1],["OpenURI::TooManyRedirects","","ruby/classes/OpenURI/TooManyRedirects.html","","",null,1],["OptionParser","","ruby/classes/OptionParser.html","","<p>OptionParser\n<p>New to <code>OptionParser</code>?\n<p>See the Tutorial.\n",null,1],["OptionParser::AC","","ruby/classes/OptionParser/AC.html","","",null,1],["OptionParser::Acceptables","","ruby/classes/OptionParser/Acceptables.html","","<p>Acceptable argument classes. Now contains DecimalInteger, OctalInteger and DecimalNumeric. See Acceptable …\n",null,1],["OptionParser::AmbiguousArgument","","ruby/classes/OptionParser/AmbiguousArgument.html","","<p>Raises when the given argument word can’t be completed uniquely.\n",null,1],["OptionParser::AmbiguousOption","","ruby/classes/OptionParser/AmbiguousOption.html","","<p>Raises when ambiguously completable string is encountered.\n",null,1],["OptionParser::Arguable","","ruby/classes/OptionParser/Arguable.html","","<p>Extends command line arguments array (ARGV) to parse itself.\n",null,1],["OptionParser::CompletingHash","","ruby/classes/OptionParser/CompletingHash.html","","<p>Hash with completion search feature. See OptionParser::Completion.\n",null,1],["OptionParser::Completion","","ruby/classes/OptionParser/Completion.html","","<p>Keyword completion module.  This allows partial arguments to be specified and resolved against a list …\n",null,1],["OptionParser::InvalidArgument","","ruby/classes/OptionParser/InvalidArgument.html","","<p>Raises when the given argument does not match required format.\n",null,1],["OptionParser::InvalidOption","","ruby/classes/OptionParser/InvalidOption.html","","<p>Raises when switch is undefined.\n",null,1],["OptionParser::List","","ruby/classes/OptionParser/List.html","","<p>Simple option list providing mapping from short and/or long option string to OptionParser::Switch and …\n",null,1],["OptionParser::MissingArgument","","ruby/classes/OptionParser/MissingArgument.html","","<p>Raises when a switch with mandatory argument has no argument.\n",null,1],["OptionParser::NeedlessArgument","","ruby/classes/OptionParser/NeedlessArgument.html","","<p>Raises when there is an argument for a switch which takes no argument.\n",null,1],["OptionParser::OptionMap","","ruby/classes/OptionParser/OptionMap.html","","<p>Map from option/keyword string to object with completion.\n",null,1],["OptionParser::ParseError","","ruby/classes/OptionParser/ParseError.html","","<p>Base class of exceptions from OptionParser.\n",null,1],["OptionParser::Switch","","ruby/classes/OptionParser/Switch.html","","<p>Individual switch class.  Not important to the user.\n<p>Defined within Switch are several Switch-derived …\n",null,1],["OptionParser::Switch::NoArgument","","ruby/classes/OptionParser/Switch/NoArgument.html","","<p>Switch that takes no arguments.\n",null,1],["OptionParser::Switch::OptionalArgument","","ruby/classes/OptionParser/Switch/OptionalArgument.html","","<p>Switch that can omit argument.\n",null,1],["OptionParser::Switch::PlacedArgument","","ruby/classes/OptionParser/Switch/PlacedArgument.html","","<p>Switch that takes an argument, which does not begin with ‘-’ or is ‘-’.\n",null,1],["OptionParser::Switch::RequiredArgument","","ruby/classes/OptionParser/Switch/RequiredArgument.html","","<p>Switch that takes an argument.\n",null,1],["PI","BigMath","ruby/classes/BigMath.html#method-i-PI","(prec)","<p>Computes the value of pi to the specified number of digits of precision, <code>numeric</code>.\n\n<pre><code>BigMath.PI(10).to_s ...\n</code></pre>\n",null,1],["POST","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-POST","()","<p>Override Rack’s POST method to support indifferent access.\n",null,0],["PP","","ruby/classes/PP.html","","<p>A pretty-printer for Ruby objects.\n<p>What PP Does\n<p>Standard output by #p returns this:\n",null,1],["PP::PPMethods","","ruby/classes/PP/PPMethods.html","","",null,1],["PStore","","ruby/classes/PStore.html","","<p>PStore implements a file based persistence mechanism based on a Hash. User code can store hierarchies …\n",null,1],["PStore::Error","","ruby/classes/PStore/Error.html","","<p>The error type thrown by all PStore methods.\n",null,1],["PTY","","ruby/classes/PTY.html","","<p>Creates and manages pseudo terminals (PTYs).  See also en.wikipedia.org/wiki/Pseudo_terminal\n<p>PTY allows …\n",null,1],["PTY::ChildExited","","ruby/classes/PTY/ChildExited.html","","<p>Thrown when PTY::check is called for a pid that represents a process that has exited.\n",null,1],["Pathname","","rails/classes/Pathname.html","","",null,0],["Pathname","","ruby/classes/Pathname.html","","<p>Pathname represents the name of a file or directory on the filesystem, but not the file itself.\n<p>The pathname …\n",null,1],["Pathname","Kernel","ruby/classes/Kernel.html#method-i-Pathname","(p1)","<p>Creates a new Pathname object from the given string, <code>path</code>, and returns pathname object.\n<p>In order to use …\n",null,1],["Person","","rails/classes/Person.html","","",null,0],["PrettyPrint","","ruby/classes/PrettyPrint.html","","<p>This class implements a pretty printing algorithm. It finds line breaks and nice indentations for grouped …\n",null,1],["PrettyPrint::SingleLine","","ruby/classes/PrettyPrint/SingleLine.html","","<p>PrettyPrint::SingleLine is used by PrettyPrint.singleline_format\n<p>It is passed to be similar to a PrettyPrint …\n",null,1],["Prism","","ruby/classes/Prism.html","","<p>The Prism Ruby parser.\n<p>“Parsing Ruby is suddenly manageable!”\n\n<pre><code>- You, hopefully\n</code></pre>\n",null,1],["Prism::Comment","","ruby/classes/Prism/Comment.html","","<p>This represents a comment that was encountered during parsing. It is the base class for all comment types. …\n",null,1],["Prism::ConstantPathNode","","ruby/classes/Prism/ConstantPathNode.html","","",null,1],["Prism::ConstantPathNode::DynamicPartsInConstantPathError","","ruby/classes/Prism/ConstantPathNode/DynamicPartsInConstantPathError.html","","<p>An error class raised when dynamic parts are found while computing a constant path’s full name.  …\n",null,1],["Prism::ConstantPathTargetNode","","ruby/classes/Prism/ConstantPathTargetNode.html","","",null,1],["Prism::ConstantReadNode","","ruby/classes/Prism/ConstantReadNode.html","","",null,1],["Prism::Debug","","ruby/classes/Prism/Debug.html","","<p>This module is used for testing and debugging and is not meant to be used by consumers of this library. …\n",null,1],["Prism::DesugarCompiler","","ruby/classes/Prism/DesugarCompiler.html","","<p>DesugarCompiler is a compiler that desugars Ruby code into a more primitive form. This is useful for …\n",null,1],["Prism::EmbDocComment","","ruby/classes/Prism/EmbDocComment.html","","<p>EmbDocComment objects correspond to comments that are surrounded by =begin and =end.\n",null,1],["Prism::FloatNode","","ruby/classes/Prism/FloatNode.html","","",null,1],["Prism::ImaginaryNode","","ruby/classes/Prism/ImaginaryNode.html","","",null,1],["Prism::InlineComment","","ruby/classes/Prism/InlineComment.html","","<p>InlineComment objects are the most common. They correspond to comments in the source file like this one …\n",null,1],["Prism::IntegerNode","","ruby/classes/Prism/IntegerNode.html","","",null,1],["Prism::InterpolatedMatchLastLineNode","","ruby/classes/Prism/InterpolatedMatchLastLineNode.html","","",null,1],["Prism::InterpolatedRegularExpressionNode","","ruby/classes/Prism/InterpolatedRegularExpressionNode.html","","",null,1],["Prism::InterpolatedStringNode","","ruby/classes/Prism/InterpolatedStringNode.html","","",null,1],["Prism::InterpolatedXStringNode","","ruby/classes/Prism/InterpolatedXStringNode.html","","",null,1],["Prism::LexCompat","","ruby/classes/Prism/LexCompat.html","","",null,1],["Prism::LexCompat::EndContentToken","","ruby/classes/Prism/LexCompat/EndContentToken.html","","<p>Ripper doesn’t include the rest of the token in the event, so we need to trim it down to just the …\n",null,1],["Prism::LexCompat::IdentToken","","ruby/classes/Prism/LexCompat/IdentToken.html","","<p>Ident tokens for the most part are exactly the same, except sometimes we know an ident is a local when …\n",null,1],["Prism::LexCompat::IgnoreStateToken","","ruby/classes/Prism/LexCompat/IgnoreStateToken.html","","<p>Tokens where state should be ignored used for :on_comment, :on_heredoc_end, :on_embexpr_end\n",null,1],["Prism::LexCompat::IgnoredNewlineToken","","ruby/classes/Prism/LexCompat/IgnoredNewlineToken.html","","<p>Ignored newlines can occasionally have a LABEL state attached to them, so we compare the state differently …\n",null,1],["Prism::LexCompat::ParamToken","","ruby/classes/Prism/LexCompat/ParamToken.html","","<p>If we have an identifier that follows a method name like:\n\n<pre><code>def foo bar\n</code></pre>\n<p>then Ripper will mark bar as END|LABEL …\n",null,1],["Prism::LexCompat::Token","","ruby/classes/Prism/LexCompat/Token.html","","<p>When we produce tokens, we produce the same arrays that Ripper does. However, we add a couple of convenience …\n",null,1],["Prism::Location","","ruby/classes/Prism/Location.html","","<p>This represents a location in the source.\n",null,1],["Prism::MagicComment","","ruby/classes/Prism/MagicComment.html","","<p>This represents a magic comment that was encountered during parsing.\n",null,1],["Prism::MatchLastLineNode","","ruby/classes/Prism/MatchLastLineNode.html","","",null,1],["Prism::Pack","","ruby/classes/Prism/Pack.html","","<p>A parser for the pack template language.\n",null,1],["Prism::Pack::Directive","","ruby/classes/Prism/Pack/Directive.html","","<p>A directive in the pack template language.\n",null,1],["Prism::Pack::Format","","ruby/classes/Prism/Pack/Format.html","","<p>The result of parsing a pack template.\n",null,1],["Prism::ParametersNode","","ruby/classes/Prism/ParametersNode.html","","",null,1],["Prism::ParseError","","ruby/classes/Prism/ParseError.html","","<p>This represents an error that was encountered during parsing.\n",null,1],["Prism::ParseResult","","ruby/classes/Prism/ParseResult.html","","<p>This represents the result of a call to ::parse or ::parse_file. It contains the AST, any comments that …\n",null,1],["Prism::ParseResult::Comments","","ruby/classes/Prism/ParseResult/Comments.html","","<p>When we’ve parsed the source, we have both the syntax tree and the list of comments that we found …\n",null,1],["Prism::ParseResult::Newlines","","ruby/classes/Prism/ParseResult/Newlines.html","","<p>The :line tracepoint event gets fired whenever the Ruby VM encounters an expression on a new line. The …\n",null,1],["Prism::ParseWarning","","ruby/classes/Prism/ParseWarning.html","","<p>This represents a warning that was encountered during parsing.\n",null,1],["Prism::Pattern","","ruby/classes/Prism/Pattern.html","","<p>A pattern is an object that wraps a Ruby pattern matching expression. The expression would normally be …\n",null,1],["Prism::Pattern::CompilationError","","ruby/classes/Prism/Pattern/CompilationError.html","","<p>Raised when the query given to a pattern is either invalid Ruby syntax or is using syntax that we don’t …\n",null,1],["Prism::RationalNode","","ruby/classes/Prism/RationalNode.html","","",null,1],["Prism::RegularExpressionNode","","ruby/classes/Prism/RegularExpressionNode.html","","",null,1],["Prism::RipperCompat","","ruby/classes/Prism/RipperCompat.html","","<p>Note: This integration is not finished, and therefore still has many inconsistencies with Ripper. If …\n",null,1],["Prism::RipperCompat::SexpBuilder","","ruby/classes/Prism/RipperCompat/SexpBuilder.html","","<p>This class mirrors the ::Ripper::SexpBuilder subclass of ::Ripper that returns the arrays of [type, *children]. …\n",null,1],["Prism::RipperCompat::SexpBuilderPP","","ruby/classes/Prism/RipperCompat/SexpBuilderPP.html","","<p>This class mirrors the ::Ripper::SexpBuilderPP subclass of ::Ripper that returns the same values as  …\n",null,1],["Prism::Source","","ruby/classes/Prism/Source.html","","<p>This represents a source of Ruby code that has been parsed. It is used in conjunction with locations …\n",null,1],["Prism::StringNode","","ruby/classes/Prism/StringNode.html","","",null,1],["Prism::Token","","ruby/classes/Prism/Token.html","","<p>This represents a token from the Ruby source.\n",null,1],["Prism::XStringNode","","ruby/classes/Prism/XStringNode.html","","",null,1],["Proc","","ruby/classes/Proc.html","","<p>A <code>Proc</code> object is an encapsulation of a block of code, which can be stored in a local variable, passed …\n",null,1],["Process","","rails/classes/Process.html","","",null,0],["Process","","ruby/classes/Process.html","","<p>Module <code>Process</code> represents a process in the underlying operating system. Its methods support management …\n",null,1],["Process::GID","","ruby/classes/Process/GID.html","","<p>The Process::GID module contains a collection of module functions which can be used to portably get, …\n",null,1],["Process::Status","","ruby/classes/Process/Status.html","","<p>A Process::Status contains information about a system process.\n<p>Thread-local variable <code>$?</code> is initially  …\n",null,1],["Process::Sys","","ruby/classes/Process/Sys.html","","<p>The Process::Sys module contains UID and GID functions which provide direct bindings to the system calls …\n",null,1],["Process::UID","","ruby/classes/Process/UID.html","","<p>The Process::UID module contains a collection of module functions which can be used to portably get, …\n",null,1],["Psych","","ruby/classes/Psych.html","","<p>Overview\n<p>Psych is a YAML parser and emitter. Psych leverages libyaml [Home page: pyyaml.org/wiki/LibYAML …\n",null,1],["Psych::AliasesNotEnabled","","ruby/classes/Psych/AliasesNotEnabled.html","","<p>Subclasses ‘BadAlias` for backwards compatibility\n",null,1],["Psych::AnchorNotDefined","","ruby/classes/Psych/AnchorNotDefined.html","","<p>Subclasses ‘BadAlias` for backwards compatibility\n",null,1],["Psych::BadAlias","","ruby/classes/Psych/BadAlias.html","","",null,1],["Psych::ClassLoader","","ruby/classes/Psych/ClassLoader.html","","",null,1],["Psych::ClassLoader::Restricted","","ruby/classes/Psych/ClassLoader/Restricted.html","","",null,1],["Psych::Coder","","ruby/classes/Psych/Coder.html","","<p>If an object defines <code>encode_with</code>, then an instance of Psych::Coder will be passed to the method when …\n",null,1],["Psych::Config","","ruby/classes/Psych/Config.html","","",null,1],["Psych::DisallowedClass","","ruby/classes/Psych/DisallowedClass.html","","",null,1],["Psych::Emitter","","ruby/classes/Psych/Emitter.html","","",null,1],["Psych::Exception","","ruby/classes/Psych/Exception.html","","",null,1],["Psych::Handler","","ruby/classes/Psych/Handler.html","","<p>Psych::Handler is an abstract base class that defines the events used when dealing with Psych::Parser …\n",null,1],["Psych::Handler::DumperOptions","","ruby/classes/Psych/Handler/DumperOptions.html","","<p>Configuration options for dumping YAML.\n",null,1],["Psych::Handlers","","ruby/classes/Psych/Handlers.html","","",null,1],["Psych::Handlers::Recorder","","ruby/classes/Psych/Handlers/Recorder.html","","<p>This handler will capture an event and record the event.  Recorder events are available vial Psych::Handlers::Recorder#events …\n",null,1],["Psych::JSON","","ruby/classes/Psych/JSON.html","","",null,1],["Psych::JSON::Stream","","ruby/classes/Psych/JSON/Stream.html","","",null,1],["Psych::JSON::TreeBuilder","","ruby/classes/Psych/JSON/TreeBuilder.html","","<p>Psych::JSON::TreeBuilder is an event based AST builder.  Events are sent to an instance of Psych::JSON::TreeBuilder …\n",null,1],["Psych::Nodes","","ruby/classes/Psych/Nodes.html","","<p>Overview\n<p>When using Psych.load to deserialize a YAML document, the document is translated to an intermediary …\n",null,1],["Psych::Nodes::Alias","","ruby/classes/Psych/Nodes/Alias.html","","<p>This class represents a YAML Alias. It points to an <code>anchor</code>.\n<p>A Psych::Nodes::Alias is a terminal node and …\n",null,1],["Psych::Nodes::Document","","ruby/classes/Psych/Nodes/Document.html","","<p>This represents a YAML Document.  This node must be a child of Psych::Nodes::Stream.  A Psych::Nodes::Document …\n",null,1],["Psych::Nodes::Mapping","","ruby/classes/Psych/Nodes/Mapping.html","","<p>This class represents a YAML Mapping.\n<p>A Psych::Nodes::Mapping node may have 0 or more children, but must …\n",null,1],["Psych::Nodes::Node","","ruby/classes/Psych/Nodes/Node.html","","<p>The base class for any Node in a YAML parse tree.  This class should never be instantiated.\n",null,1],["Psych::Nodes::Scalar","","ruby/classes/Psych/Nodes/Scalar.html","","<p>This class represents a YAML Scalar.\n<p>This node type is a terminal node and should not have any children. …\n",null,1],["Psych::Nodes::Sequence","","ruby/classes/Psych/Nodes/Sequence.html","","<p>This class represents a YAML sequence.\n<p>A YAML sequence is basically a list, and looks like this:\n\n<pre><code>%YAML ...\n</code></pre>\n",null,1],["Psych::Nodes::Stream","","ruby/classes/Psych/Nodes/Stream.html","","<p>Represents a YAML stream.  This is the root node for any YAML parse tree.  This node must have one or …\n",null,1],["Psych::Omap","","ruby/classes/Psych/Omap.html","","",null,1],["Psych::Parser","","ruby/classes/Psych/Parser.html","","<p>YAML event parser class.  This class parses a YAML document and calls events on the handler that is passed …\n",null,1],["Psych::Parser::Mark","","ruby/classes/Psych/Parser/Mark.html","","",null,1],["Psych::ScalarScanner","","ruby/classes/Psych/ScalarScanner.html","","<p>Scan scalars for built in types\n",null,1],["Psych::Set","","ruby/classes/Psych/Set.html","","",null,1],["Psych::Stream","","ruby/classes/Psych/Stream.html","","<p>Psych::Stream is a streaming YAML emitter.  It will not buffer your YAML, but send it straight to an …\n",null,1],["Psych::Streaming","","ruby/classes/Psych/Streaming.html","","",null,1],["Psych::Streaming::ClassMethods","","ruby/classes/Psych/Streaming/ClassMethods.html","","",null,1],["Psych::SyntaxError","","ruby/classes/Psych/SyntaxError.html","","",null,1],["Psych::TreeBuilder","","ruby/classes/Psych/TreeBuilder.html","","<p>This class works in conjunction with Psych::Parser to build an in-memory parse tree that represents a …\n",null,1],["Psych::Visitors","","ruby/classes/Psych/Visitors.html","","",null,1],["Psych::Visitors::DepthFirst","","ruby/classes/Psych/Visitors/DepthFirst.html","","",null,1],["Psych::Visitors::Emitter","","ruby/classes/Psych/Visitors/Emitter.html","","",null,1],["Psych::Visitors::JSONTree","","ruby/classes/Psych/Visitors/JSONTree.html","","",null,1],["Psych::Visitors::NoAliasRuby","","ruby/classes/Psych/Visitors/NoAliasRuby.html","","",null,1],["Psych::Visitors::RestrictedYAMLTree","","ruby/classes/Psych/Visitors/RestrictedYAMLTree.html","","",null,1],["Psych::Visitors::ToRuby","","ruby/classes/Psych/Visitors/ToRuby.html","","<p>This class walks a YAML AST, converting each node to Ruby\n",null,1],["Psych::Visitors::Visitor","","ruby/classes/Psych/Visitors/Visitor.html","","",null,1],["Psych::Visitors::YAMLTree","","ruby/classes/Psych/Visitors/YAMLTree.html","","<p>YAMLTree builds a YAML ast given a Ruby object.  For example:\n\n<pre><code>builder = Psych::Visitors::YAMLTree.new ...\n</code></pre>\n",null,1],["QueryInfoKey","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-QueryInfoKey","(hkey)","",null,1],["QueryValue","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-QueryValue","(hkey, name)","",null,1],["RAILS_VERSION","","rails/files/rails/RAILS_VERSION.html","","<p>7.0.8.3\n",null,0],["RDOC_MAIN","","rails/files/rails/railties/RDOC_MAIN_rdoc.html","","<p>Welcome to Rails\n<p>What’s Rails\n<p>Rails is a web-application framework that includes everything needed …\n",null,0],["RDoc","","rails/classes/RDoc.html","","",null,0],["RDoc","","ruby/classes/RDoc.html","","<p>RDoc produces documentation for Ruby source files by parsing the source and extracting the definition …\n",null,1],["RDoc","","ruby/classes/RDoc.html","","<p>Gem::RDoc provides methods to generate RDoc and ri data for installed gems upon gem installation.\n<p>This …\n",null,1],["RDoc::Alias","","ruby/classes/RDoc/Alias.html","","<p>Represent an alias, which is an old_name/new_name pair associated with a particular context\n",null,1],["RDoc::AnonClass","","ruby/classes/RDoc/AnonClass.html","","<p>An anonymous class like:\n\n<pre><code>c = Class.new do end\n</code></pre>\n<p>AnonClass is currently not used.\n",null,1],["RDoc::AnyMethod","","ruby/classes/RDoc/AnyMethod.html","","<p>AnyMethod is the base class for objects representing methods\n",null,1],["RDoc::Attr","","ruby/classes/RDoc/Attr.html","","<p>An attribute created by #attr, #attr_reader, #attr_writer or #attr_accessor\n",null,1],["RDoc::ClassModule","","ruby/classes/RDoc/ClassModule.html","","<p>ClassModule is the base class for objects representing either a class or a module.\n",null,1],["RDoc::CodeObject","","ruby/classes/RDoc/CodeObject.html","","<p>Base class for the RDoc code tree.\n<p>We contain the common stuff for contexts (which are containers) and …\n",null,1],["RDoc::Comment","","ruby/classes/RDoc/Comment.html","","<p>A comment holds the text comment for a RDoc::CodeObject and provides a unified way of cleaning it up …\n",null,1],["RDoc::Constant","","ruby/classes/RDoc/Constant.html","","<p>A constant\n",null,1],["RDoc::Context","","ruby/classes/RDoc/Context.html","","<p>A Context is something that can hold modules, classes, methods, attributes, aliases, requires, and includes. …\n",null,1],["RDoc::CrossReference","","ruby/classes/RDoc/CrossReference.html","","<p>RDoc::CrossReference is a reusable way to create cross references for names.\n",null,1],["RDoc::ERBIO","","ruby/classes/RDoc/ERBIO.html","","<p>A subclass of ERB that writes directly to an IO.  Credit to Aaron Patterson and Masatoshi SEKI.\n<p>To use: …\n",null,1],["RDoc::ERBPartial","","ruby/classes/RDoc/ERBPartial.html","","<p>Allows an ERB template to be rendered in the context (binding) of an existing ERB template evaluation. …\n",null,1],["RDoc::Encoding","","ruby/classes/RDoc/Encoding.html","","<p>This class is a wrapper around File IO and Encoding that helps RDoc load files and convert them to the …\n",null,1],["RDoc::Error","","ruby/classes/RDoc/Error.html","","<p>Exception thrown by any rdoc error.\n",null,1],["RDoc::Extend","","ruby/classes/RDoc/Extend.html","","<p>A Module extension to a class with #extend\n\n<pre><code>RDoc::Extend.new &#39;Enumerable&#39;, &#39;comment ...&#39;\n</code></pre>\n",null,1],["RDoc::Generator","","rails/classes/RDoc/Generator.html","","",null,0],["RDoc::Generator","","ruby/classes/RDoc/Generator.html","","<p>RDoc uses generators to turn parsed source code in the form of an RDoc::CodeObject tree into some form …\n",null,1],["RDoc::GhostMethod","","ruby/classes/RDoc/GhostMethod.html","","<p>GhostMethod represents a method referenced only by a comment\n",null,1],["RDoc::I18n","","ruby/classes/RDoc/I18n.html","","<p>This module provides i18n related features.\n",null,1],["RDoc::Include","","ruby/classes/RDoc/Include.html","","<p>A Module included in a class with #include\n\n<pre><code>RDoc::Include.new &#39;Enumerable&#39;, &#39;comment ...&#39;\n</code></pre>\n",null,1],["RDoc::Markdown","","ruby/classes/RDoc/Markdown.html","","<p>RDoc::Markdown as described by the markdown syntax.\n<p>To choose Markdown as your only default format see …\n",null,1],["RDoc::Markdown::MemoEntry","","ruby/classes/RDoc/Markdown/MemoEntry.html","","",null,1],["RDoc::Markdown::ParseError","","ruby/classes/RDoc/Markdown/ParseError.html","","",null,1],["RDoc::Markdown::RuleInfo","","ruby/classes/RDoc/Markdown/RuleInfo.html","","",null,1],["RDoc::Markup","","ruby/classes/RDoc/Markup.html","","<p>RDoc::Markup parses plain text documents and attempts to decompose them into their constituent parts. …\n",null,1],["RDoc::MarkupReference","","ruby/classes/RDoc/MarkupReference.html","","<p>Class RDoc::MarkupReference exists only to provide a suitable home for a reference document for RDoc …\n",null,1],["RDoc::MarkupReference::DummyClass","","ruby/classes/RDoc/MarkupReference/DummyClass.html","","<p>example class\n",null,1],["RDoc::MarkupReference::DummyModule","","ruby/classes/RDoc/MarkupReference/DummyModule.html","","<p>example module\n",null,1],["RDoc::MetaMethod","","ruby/classes/RDoc/MetaMethod.html","","<p>MetaMethod represents a meta-programmed method\n",null,1],["RDoc::MethodAttr","","ruby/classes/RDoc/MethodAttr.html","","<p>Abstract class representing either a method or an attribute.\n",null,1],["RDoc::Mixin","","ruby/classes/RDoc/Mixin.html","","<p>A Mixin adds features from a module into another context.  RDoc::Include and RDoc::Extend are both mixins. …\n",null,1],["RDoc::NormalClass","","ruby/classes/RDoc/NormalClass.html","","<p>A normal class, neither singleton nor anonymous\n",null,1],["RDoc::NormalModule","","ruby/classes/RDoc/NormalModule.html","","<p>A normal module, like NormalClass\n",null,1],["RDoc::Options","","ruby/classes/RDoc/Options.html","","<p>RDoc::Options handles the parsing and storage of options\n<p>Saved Options\n<p>You can save some options like the …\n",null,1],["RDoc::Parser","","ruby/classes/RDoc/Parser.html","","<p>A parser is simple a class that subclasses RDoc::Parser and implements #scan to fill in an RDoc::TopLevel …\n",null,1],["RDoc::Parser::C","","ruby/classes/RDoc/Parser/C.html","","<p>RDoc::Parser::C attempts to parse C extension files.  It looks for the standard patterns that you find …\n",null,1],["RDoc::Parser::ChangeLog","","ruby/classes/RDoc/Parser/ChangeLog.html","","<p>A ChangeLog file parser.\n<p>This parser converts a ChangeLog into an RDoc::Markup::Document.  When viewed …\n",null,1],["RDoc::Parser::ChangeLog::Git","","ruby/classes/RDoc/Parser/ChangeLog/Git.html","","<p>The extension for Git commit log\n",null,1],["RDoc::Parser::Markdown","","ruby/classes/RDoc/Parser/Markdown.html","","<p>Parse a Markdown format file.  The parsed RDoc::Markup::Document is attached as a file comment.\n",null,1],["RDoc::Parser::RD","","ruby/classes/RDoc/Parser/RD.html","","<p>Parse a RD format file.  The parsed RDoc::Markup::Document is attached as a file comment.\n",null,1],["RDoc::Parser::RipperStateLex","","ruby/classes/RDoc/Parser/RipperStateLex.html","","<p>Wrapper for Ripper lex states\n",null,1],["RDoc::Parser::RipperStateLex::InnerStateLex","","ruby/classes/RDoc/Parser/RipperStateLex/InnerStateLex.html","","",null,1],["RDoc::Parser::Ruby","","ruby/classes/RDoc/Parser/Ruby.html","","<p>Extracts code elements from a source file returning a TopLevel object containing the constituent file …\n",null,1],["RDoc::Parser::RubyTools","","ruby/classes/RDoc/Parser/RubyTools.html","","<p>Collection of methods for writing parsers\n",null,1],["RDoc::Parser::Simple","","ruby/classes/RDoc/Parser/Simple.html","","<p>Parse a non-source file. We basically take the whole thing as one big comment.\n",null,1],["RDoc::Parser::Text","","ruby/classes/RDoc/Parser/Text.html","","<p>Indicates this parser is text and doesn’t contain code constructs.\n<p>Include this module in a RDoc::Parser …\n",null,1],["RDoc::RD","","ruby/classes/RDoc/RD.html","","<p>RDoc::RD implements the RD format from the rdtool gem.\n<p>To choose RD as your only default format see RDoc::Options@Saved+Options …\n",null,1],["RDoc::RDoc","","ruby/classes/RDoc/RDoc.html","","<p>This is the driver for generating RDoc output.  It handles file parsing and generation of output.\n<p>To use …\n",null,1],["RDoc::RI","","ruby/classes/RDoc/RI.html","","<p>Namespace for the ri command line tool’s implementation.\n<p>See <code>ri --help</code> for details.\n",null,1],["RDoc::RI::Error","","ruby/classes/RDoc/RI/Error.html","","<p>Base RI error class\n",null,1],["RDoc::Require","","ruby/classes/RDoc/Require.html","","<p>A file loaded by #require\n",null,1],["RDoc::RubygemsHook","","ruby/classes/RDoc/RubygemsHook.html","","<p>Gem::RDoc provides methods to generate RDoc and ri data for installed gems upon gem installation.\n<p>This …\n",null,1],["RDoc::Servlet","","ruby/classes/RDoc/Servlet.html","","<p>This is a WEBrick servlet that allows you to browse ri documentation.\n<p>You can show documentation through …\n",null,1],["RDoc::SingleClass","","ruby/classes/RDoc/SingleClass.html","","<p>A singleton class\n",null,1],["RDoc::Stats","","ruby/classes/RDoc/Stats.html","","<p>RDoc statistics collector which prints a summary and report of a project’s documentation totals. …\n",null,1],["RDoc::Store","","ruby/classes/RDoc/Store.html","","<p>A set of rdoc data for a single project (gem, path, etc.).\n<p>The store manages reading and writing ri data …\n",null,1],["RDoc::Store::Error","","ruby/classes/RDoc/Store/Error.html","","<p>Errors raised from loading or saving the store\n",null,1],["RDoc::Store::MissingFileError","","ruby/classes/RDoc/Store/MissingFileError.html","","<p>Raised when a stored file for a class, module, page or method is missing.\n",null,1],["RDoc::Task","","ruby/classes/RDoc/Task.html","","<p>RDoc::Task creates the following rake tasks to generate and clean up RDoc output:\n<p>rdoc &mdash; Main task for this …\n",null,1],["RDoc::Text","","ruby/classes/RDoc/Text.html","","<p>Methods for manipulating comment text\n",null,1],["RDoc::TokenStream","","ruby/classes/RDoc/TokenStream.html","","<p>A TokenStream is a list of tokens, gathered during the parse of some entity (say a method). Entities …\n",null,1],["RDoc::TomDoc","","ruby/classes/RDoc/TomDoc.html","","<p>A parser for TomDoc based on TomDoc 1.0.0-rc1 (02adef9b5a)\n<p>The TomDoc specification can be found at:\n<p>tomdoc.org …\n",null,1],["RDoc::TopLevel","","ruby/classes/RDoc/TopLevel.html","","<p>A TopLevel context is a representation of the contents of a single file\n",null,1],["README","","rails/files/rails/actionpack/README_rdoc.html","","<p>Action Pack – From request to response\n<p>Action Pack is a framework for handling and responding to web …\n",null,0],["README","","rails/files/rails/tools/README_md.html","","<p>Rails dev tools\n<p>This is a collection of utilities used for Rails internal development.\nThey aren&#39;t ...\n",null,0],["README","","rails/files/rails/README_md.html","","<p>Welcome to Rails\n<p>What’s Rails?\n<p>Rails is a web-application framework that includes everything needed …\n",null,0],["README","","rails/files/rails/actioncable/README_md.html","","<p>Action Cable – Integrated WebSockets for Rails\n<p>Action Cable seamlessly integrates WebSockets with the …\n",null,0],["README","","rails/files/rails/actionmailbox/README_md.html","","<p>Action Mailbox\n<p>Action Mailbox routes incoming emails to controller-like mailboxes for processing in Rails …\n",null,0],["README","","rails/files/rails/actionmailer/README_rdoc.html","","<p>Action Mailer – Easy email delivery and testing\n<p>Action Mailer is a framework for designing email service …\n",null,0],["README","","rails/files/rails/actiontext/README_md.html","","<p>Action Text\n<p>Action Text brings rich text content and editing to Rails. It includes the Trix editor that …\n",null,0],["README","","rails/files/rails/actionview/README_rdoc.html","","<p>Action View\n<p>Action View is a framework for handling view template lookup and rendering, and provides view …\n",null,0],["README","","rails/files/rails/actionview/app/assets/javascripts/README_md.html","","<p>Ruby on Rails unobtrusive scripting adapter\n<p>This unobtrusive scripting support file is developed for the …\n",null,0],["README","","rails/files/rails/activejob/README_md.html","","<p>Active Job – Make work happen later\n<p>Active Job is a framework for declaring jobs and making them run on …\n",null,0],["README","","rails/files/rails/activemodel/README_rdoc.html","","<p>Active Model – model interfaces for Rails\n<p>Active Model provides a known set of interfaces for usage in …\n",null,0],["README","","rails/files/rails/activerecord/README_rdoc.html","","<p>Active Record – Object-relational mapping in Rails\n<p>Active Record connects classes to relational database …\n",null,0],["README","","rails/files/rails/railties/README_rdoc.html","","<p>Railties – Gluing the Engine to the Rails\n<p>Railties is responsible for gluing all frameworks together. …\n",null,0],["README","","rails/files/rails/activestorage/README_md.html","","<p>Active Storage\n<p>Active Storage makes it simple to upload and reference files in cloud services like Amazon …\n",null,0],["README","","rails/files/rails/activesupport/README_rdoc.html","","<p>Active Support – Utility classes and Ruby extensions from Rails\n<p>Active Support is a collection of utility …\n",null,0],["README","","ruby/files/ruby/README_md.html","","<p><img src=\"https://github.com/ruby/ruby/workflows/MinGW/badge.svg\">\n<img src=\"https://github.com/ruby/ruby/workflows/RJIT/badge.svg\"> ...\n",null,1],["README.ja","","ruby/files/ruby/README_ja_md.html","","<p><img src=\"https://github.com/ruby/ruby/workflows/MinGW/badge.svg\">\n<img src=\"https://github.com/ruby/ruby/workflows/RJIT/badge.svg\"> ...\n",null,1],["README.md.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/README_md_tt.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and ...\n",null,0],["README.md.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/README_md_tt.html","","<p>&lt;%= camelized_modules %&gt;\n<p>Short description and motivation.\n<p>Usage\n",null,0],["RELEASING_RAILS","","rails/files/rails/RELEASING_RAILS_md.html","","<p>Releasing Rails\n<p>In this document, we’ll cover the steps necessary to release Rails. Each\nsection contains ...\n",null,0],["RUNNING_UJS_TESTS","","rails/files/rails/actionview/RUNNING_UJS_TESTS_rdoc.html","","<p>Running UJS tests\n<p>Ensure that you can build the project by running:\n\n<pre><code>rake ujs:server\n</code></pre>\n",null,0],["RUNNING_UNIT_TESTS","","rails/files/rails/actionview/RUNNING_UNIT_TESTS_rdoc.html","","<p>Running with Rake\n<p>The easiest way to run the unit tests is through Rake. The default task runs the entire …\n",null,0],["RUNNING_UNIT_TESTS","","rails/files/rails/activerecord/RUNNING_UNIT_TESTS_rdoc.html","","<p>Setup\n<p>If you don’t have an environment for running tests, read edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#setting-up-a-development-environment …\n",null,0],["Rack","","rails/classes/Rack.html","","",null,0],["Rack::Cache","","rails/classes/Rack/Cache.html","","",null,0],["Rack::Cache::EntityStore","","rails/classes/Rack/Cache/EntityStore.html","","",null,0],["Rack::Cache::MetaStore","","rails/classes/Rack/Cache/MetaStore.html","","",null,0],["Ractor","","ruby/classes/Ractor.html","","<p>Ractor is an Actor-model abstraction for Ruby that provides thread-safe parallel execution.\n<p>Ractor.new …\n",null,1],["Ractor::ClosedError","","ruby/classes/Ractor/ClosedError.html","","<p>Raised when an attempt is made to send a message to a closed port, or to retrieve a message from a closed …\n",null,1],["Ractor::Error","","ruby/classes/Ractor/Error.html","","",null,1],["Ractor::IsolationError","","ruby/classes/Ractor/IsolationError.html","","",null,1],["Ractor::MovedError","","ruby/classes/Ractor/MovedError.html","","<p>Raised on an attempt to access an object which was moved in Ractor#send or Ractor.yield.\n\n<pre><code>r = Ractor.new ...\n</code></pre>\n",null,1],["Ractor::MovedObject","","ruby/classes/Ractor/MovedObject.html","","<p>A special object which replaces any value that was moved to another ractor in Ractor#send or Ractor.yield …\n",null,1],["Ractor::RemoteError","","ruby/classes/Ractor/RemoteError.html","","<p>Raised on attempt to Ractor#take if there was an uncaught exception in the Ractor. Its <code>cause</code> will contain …\n",null,1],["Ractor::Selector","","ruby/classes/Ractor/Selector.html","","",null,1],["Ractor::UnsafeError","","ruby/classes/Ractor/UnsafeError.html","","",null,1],["Rails","","rails/classes/Rails.html","","",null,0],["Rails::API","","rails/classes/Rails/API.html","","",null,0],["Rails::API::EdgeTask","","rails/classes/Rails/API/EdgeTask.html","","",null,0],["Rails::API::RepoTask","","rails/classes/Rails/API/RepoTask.html","","",null,0],["Rails::API::StableTask","","rails/classes/Rails/API/StableTask.html","","",null,0],["Rails::API::Task","","rails/classes/Rails/API/Task.html","","",null,0],["Rails::AppBuilder","","rails/classes/Rails/AppBuilder.html","","<p>The application builder allows you to override elements of the application generator without being forced …\n",null,0],["Rails::Application","","rails/classes/Rails/Application.html","","<p>An Engine with the responsibility of coordinating the whole boot process.\n<p>Initialization\n<p>Rails::Application …\n",null,0],["Rails::Application::Bootstrap","","rails/classes/Rails/Application/Bootstrap.html","","",null,0],["Rails::Application::Configuration","","rails/classes/Rails/Application/Configuration.html","","",null,0],["Rails::Application::DefaultMiddlewareStack","","rails/classes/Rails/Application/DefaultMiddlewareStack.html","","",null,0],["Rails::Application::Finisher","","rails/classes/Rails/Application/Finisher.html","","",null,0],["Rails::Application::RoutesReloader","","rails/classes/Rails/Application/RoutesReloader.html","","",null,0],["Rails::BacktraceCleaner","","rails/classes/Rails/BacktraceCleaner.html","","",null,0],["Rails::Command","","rails/classes/Rails/Command.html","","",null,0],["Rails::Command::Actions","","rails/classes/Rails/Command/Actions.html","","",null,0],["Rails::Command::Base","","rails/classes/Rails/Command/Base.html","","",null,0],["Rails::Command::Db","","rails/classes/Rails/Command/Db.html","","",null,0],["Rails::Command::Db::System","","rails/classes/Rails/Command/Db/System.html","","",null,0],["Rails::Command::Helpers","","rails/classes/Rails/Command/Helpers.html","","",null,0],["Rails::Command::Helpers::Editor","","rails/classes/Rails/Command/Helpers/Editor.html","","",null,0],["Rails::Conductor","","rails/classes/Rails/Conductor.html","","",null,0],["Rails::Conductor::BaseController","","rails/classes/Rails/Conductor/BaseController.html","","<p>TODO: Move this to Rails::Conductor gem\n",null,0],["Rails::Configuration","","rails/classes/Rails/Configuration.html","","",null,0],["Rails::Configuration::MiddlewareStackProxy","","rails/classes/Rails/Configuration/MiddlewareStackProxy.html","","<p>MiddlewareStackProxy is a proxy for the Rails middleware stack that allows you to configure middlewares …\n",null,0],["Rails::Console","","rails/classes/Rails/Console.html","","",null,0],["Rails::Console::BacktraceCleaner","","rails/classes/Rails/Console/BacktraceCleaner.html","","",null,0],["Rails::ConsoleMethods","","rails/classes/Rails/ConsoleMethods.html","","",null,0],["Rails::DBConsole","","rails/classes/Rails/DBConsole.html","","",null,0],["Rails::Engine","","rails/classes/Rails/Engine.html","","<p><code>Rails::Engine</code> allows you to wrap a specific Rails application or subset of functionality and share it …\n",null,0],["Rails::Engine::Configuration","","rails/classes/Rails/Engine/Configuration.html","","",null,0],["Rails::Engine::Railties","","rails/classes/Rails/Engine/Railties.html","","",null,0],["Rails::Engine::Updater","","rails/classes/Rails/Engine/Updater.html","","",null,0],["Rails::Generators","","rails/classes/Rails/Generators.html","","",null,0],["Rails::Generators::Actions","","rails/classes/Rails/Generators/Actions.html","","",null,0],["Rails::Generators::ActiveModel","","rails/classes/Rails/Generators/ActiveModel.html","","<p>ActiveModel is a class to be implemented by each ORM to allow Rails to generate customized controller …\n",null,0],["Rails::Generators::AppBase","","rails/classes/Rails/Generators/AppBase.html","","",null,0],["Rails::Generators::AppBase::GemfileEntry","","rails/classes/Rails/Generators/AppBase/GemfileEntry.html","","",null,0],["Rails::Generators::AppGenerator","","rails/classes/Rails/Generators/AppGenerator.html","","",null,0],["Rails::Generators::Base","","rails/classes/Rails/Generators/Base.html","","",null,0],["Rails::Generators::BenchmarkGenerator","","rails/classes/Rails/Generators/BenchmarkGenerator.html","","",null,0],["Rails::Generators::ChannelGenerator","","rails/classes/Rails/Generators/ChannelGenerator.html","","",null,0],["Rails::Generators::Db","","rails/classes/Rails/Generators/Db.html","","",null,0],["Rails::Generators::Db::System","","rails/classes/Rails/Generators/Db/System.html","","",null,0],["Rails::Generators::MailboxGenerator","","rails/classes/Rails/Generators/MailboxGenerator.html","","",null,0],["Rails::Generators::MailerGenerator","","rails/classes/Rails/Generators/MailerGenerator.html","","",null,0],["Rails::Generators::Migration","","rails/classes/Rails/Generators/Migration.html","","<p>Holds common methods for migrations. It assumes that migrations have the [0-9]*_name format and can be …\n",null,0],["Rails::Generators::NamedBase","","rails/classes/Rails/Generators/NamedBase.html","","",null,0],["Rails::Info","","rails/classes/Rails/Info.html","","<p>This module helps build the runtime properties that are displayed in Rails::InfoController responses. …\n",null,0],["Rails::Initializable","","rails/classes/Rails/Initializable.html","","",null,0],["Rails::Initializable::ClassMethods","","rails/classes/Rails/Initializable/ClassMethods.html","","",null,0],["Rails::Initializable::Collection","","rails/classes/Rails/Initializable/Collection.html","","",null,0],["Rails::Initializable::Initializer","","rails/classes/Rails/Initializable/Initializer.html","","",null,0],["Rails::Paths","","rails/classes/Rails/Paths.html","","",null,0],["Rails::Paths::Path","","rails/classes/Rails/Paths/Path.html","","",null,0],["Rails::Paths::Root","","rails/classes/Rails/Paths/Root.html","","<p>This object is an extended hash that behaves as root of the <code>Rails::Paths</code> system. It allows you to collect …\n",null,0],["Rails::PluginBuilder","","rails/classes/Rails/PluginBuilder.html","","<p>The plugin builder allows you to override elements of the plugin generator without being forced to reverse …\n",null,0],["Rails::Rack","","rails/classes/Rails/Rack.html","","",null,0],["Rails::Rack::Logger","","rails/classes/Rails/Rack/Logger.html","","<p>Sets log tags, logs the request, calls the app, and flushes the logs.\n<p>Log tags (<code>taggers</code>) can be an Array …\n",null,0],["Rails::Rails","","rails/classes/Rails/Rails.html","","",null,0],["Rails::Rails::Conductor","","rails/classes/Rails/Rails/Conductor.html","","",null,0],["Rails::Rails::Conductor::ActionMailbox","","rails/classes/Rails/Rails/Conductor/ActionMailbox.html","","",null,0],["Rails::Rails::Conductor::ActionMailbox::InboundEmails","","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmails.html","","",null,0],["Rails::Rails::Conductor::ActionMailbox::InboundEmails::SourcesController","","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmails/SourcesController.html","","",null,0],["Rails::Rails::Conductor::ActionMailbox::InboundEmailsController","","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmailsController.html","","",null,0],["Rails::Rails::Conductor::ActionMailbox::IncineratesController","","rails/classes/Rails/Rails/Conductor/ActionMailbox/IncineratesController.html","","<p>Incinerating will destroy an email that is due and has already been processed.\n",null,0],["Rails::Rails::Conductor::ActionMailbox::ReroutesController","","rails/classes/Rails/Rails/Conductor/ActionMailbox/ReroutesController.html","","<p>Rerouting will run routing and processing on an email that has already been, or attempted to be, processed. …\n",null,0],["Rails::Railtie","","rails/classes/Rails/Railtie.html","","<p><code>Rails::Railtie</code> is the core of the Rails framework and provides several hooks to extend Rails and/or modify …\n",null,0],["Rails::Railtie::Configurable","","rails/classes/Rails/Railtie/Configurable.html","","",null,0],["Rails::Railtie::Configurable::ClassMethods","","rails/classes/Rails/Railtie/Configurable/ClassMethods.html","","",null,0],["Rails::Railtie::Configuration","","rails/classes/Rails/Railtie/Configuration.html","","",null,0],["Rails::Secrets","","rails/classes/Rails/Secrets.html","","",null,0],["Rails::Secrets::MissingKeyError","","rails/classes/Rails/Secrets/MissingKeyError.html","","",null,0],["Rails::Server","","rails/classes/Rails/Server.html","","",null,0],["Rails::Server::Options","","rails/classes/Rails/Server/Options.html","","",null,0],["Rails::SourceAnnotationExtractor","","rails/classes/Rails/SourceAnnotationExtractor.html","","<p>Implements the logic behind <code>Rails::Command::NotesCommand</code>. See <code>rails notes --help</code> for usage information. …\n",null,0],["Rails::SourceAnnotationExtractor::Annotation","","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html","","",null,0],["Rails::VERSION","","rails/classes/Rails/VERSION.html","","",null,0],["Rake","","ruby/classes/Rake.html","","",null,1],["Rakefile","","rails/files/rails/railties/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “shellwords” require “rake/testtask”\n<p>task default: …\n",null,0],["Rakefile","","rails/files/rails/actionmailer/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “rake/testtask”\n<p>desc “Default Task” task default: …\n",null,0],["Rakefile","","rails/files/rails/activemodel/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “rake/testtask”\n<p>task default: :test\n",null,0],["Rakefile","","rails/files/rails/activerecord/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “shellwords” require “rake/testtask”\n<p>require_relative …\n",null,0],["Rakefile","","rails/files/rails/activestorage/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/setup” require “bundler/gem_tasks” …\n",null,0],["Rakefile","","rails/files/rails/actiontext/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/setup” require “bundler/gem_tasks” …\n",null,0],["Rakefile","","rails/files/rails/actionpack/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “rake/testtask”\n<p>test_files = FileList[“test/<strong>*/</strong>_test.rb”] …\n",null,0],["Rakefile","","rails/files/rails/actionview/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “rake/testtask” require “fileutils” require …\n",null,0],["Rakefile","","rails/files/rails/activesupport/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “rake/testtask”\n<p>task default: :test\n",null,0],["Rakefile","","rails/files/rails/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “net/http”\n<p>$:.unshift __dir__ require “tasks/release” …\n",null,0],["Rakefile","","rails/files/rails/actioncable/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “base64” require “rake/testtask” require “pathname” …\n",null,0],["Rakefile","","rails/files/rails/actionmailbox/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/setup” require “bundler/gem_tasks” …\n",null,0],["Rakefile","","rails/files/rails/activejob/Rakefile.html","","<p># frozen_string_literal: true\n<p>require “rake/testtask”\n<p>ACTIVEJOB_ADAPTERS = %w(async inline delayed_job …\n",null,0],["Rakefile.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/Rakefile_tt.html","","<p>require “bundler/setup” &lt;% if engine? &amp;&amp; !options &amp;&amp; with_dummy_app? -%&gt; …\n",null,0],["Rakefile.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/Rakefile_tt.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for example lib/tasks/capistrano.rake …\n",null,0],["Random","","ruby/classes/Random.html","","<p>Random provides an interface to Ruby’s pseudo-random number generator, or PRNG.  The PRNG produces …\n",null,1],["Random::Formatter","","ruby/classes/Random/Formatter.html","","<p>Random number formatter.\n<p>Formats generated random numbers in many manners. When <code>&#39;random/formatter&#39;</code> …\n",null,1],["Range","","rails/classes/Range.html","","",null,0],["Range","","ruby/classes/Range.html","","<p>A Range object represents a collection of values that are between given begin and end values.\n<p>You can …\n",null,1],["RangeError","","ruby/classes/RangeError.html","","<p>Raised when a given numerical value is out of range.\n\n<pre><code>[1, 2, 3].drop(1 &lt;&lt; 100)\n</code></pre>\n<p><em>raises the exception:</em>\n",null,1],["Rational","","ruby/classes/Rational.html","","<p>A rational number can be represented as a pair of integer numbers: a/b (b&gt;0), where a is the numerator …\n",null,1],["Rational","Kernel","ruby/classes/Kernel.html#method-i-Rational","(p1, p2 = v2, p3 = {})","<p>Returns <code>x/y</code> or <code>arg</code> as a Rational.\n\n<pre><code>Rational(2, 3)   #=&gt; (2/3)\nRational(5)      #=&gt; (5/1)\nRational(0.5) ...\n</code></pre>\n",null,1],["Readline","","ruby/classes/Readline.html","","",null,1],["Refinement","","ruby/classes/Refinement.html","","",null,1],["Regexp","","rails/classes/Regexp.html","","",null,0],["Regexp","","ruby/classes/Regexp.html","","<p>A regular expression (also called a <em>regexp</em>) is a <em>match pattern</em> (also simply called a <em>pattern</em>).\n<p>A common …\n",null,1],["Regexp::TimeoutError","","ruby/classes/Regexp/TimeoutError.html","","",null,1],["RegexpError","","ruby/classes/RegexpError.html","","<p>Raised when given an invalid regexp expression.\n\n<pre><code>Regexp.new(&quot;?&quot;)\n</code></pre>\n<p><em>raises the exception:</em>\n",null,1],["Reline","","ruby/classes/Reline.html","","",null,1],["Reline::ANSI","","ruby/classes/Reline/ANSI.html","","",null,1],["Reline::Config","","ruby/classes/Reline/Config.html","","",null,1],["Reline::Config::InvalidInputrc","","ruby/classes/Reline/Config/InvalidInputrc.html","","",null,1],["Reline::ConfigEncodingConversionError","","ruby/classes/Reline/ConfigEncodingConversionError.html","","",null,1],["Reline::Core","","ruby/classes/Reline/Core.html","","",null,1],["Reline::Face","","ruby/classes/Reline/Face.html","","",null,1],["Reline::Face::Config","","ruby/classes/Reline/Face/Config.html","","",null,1],["Reline::GeneralIO","","ruby/classes/Reline/GeneralIO.html","","",null,1],["Reline::History","","ruby/classes/Reline/History.html","","",null,1],["Reline::KeyActor","","ruby/classes/Reline/KeyActor.html","","",null,1],["Reline::KeyActor::Base","","ruby/classes/Reline/KeyActor/Base.html","","",null,1],["Reline::KeyActor::Emacs","","ruby/classes/Reline/KeyActor/Emacs.html","","",null,1],["Reline::KeyActor::ViCommand","","ruby/classes/Reline/KeyActor/ViCommand.html","","",null,1],["Reline::KeyActor::ViInsert","","ruby/classes/Reline/KeyActor/ViInsert.html","","",null,1],["Reline::KeyStroke","","ruby/classes/Reline/KeyStroke.html","","",null,1],["Reline::KillRing","","ruby/classes/Reline/KillRing.html","","",null,1],["Reline::KillRing::RingBuffer","","ruby/classes/Reline/KillRing/RingBuffer.html","","",null,1],["Reline::KillRing::State","","ruby/classes/Reline/KillRing/State.html","","",null,1],["Reline::LineEditor","","ruby/classes/Reline/LineEditor.html","","",null,1],["Reline::LineEditor::CompletionState","","ruby/classes/Reline/LineEditor/CompletionState.html","","",null,1],["Reline::LineEditor::Dialog","","ruby/classes/Reline/LineEditor/Dialog.html","","",null,1],["Reline::LineEditor::DialogProcScope","","ruby/classes/Reline/LineEditor/DialogProcScope.html","","",null,1],["Reline::Terminfo","","ruby/classes/Reline/Terminfo.html","","",null,1],["Reline::Terminfo::StringWithTiparm","","ruby/classes/Reline/Terminfo/StringWithTiparm.html","","",null,1],["Reline::Terminfo::TerminfoError","","ruby/classes/Reline/Terminfo/TerminfoError.html","","",null,1],["Reline::Unicode","","ruby/classes/Reline/Unicode.html","","",null,1],["Reline::Unicode::EastAsianWidth","","ruby/classes/Reline/Unicode/EastAsianWidth.html","","",null,1],["Reline::Windows","","ruby/classes/Reline/Windows.html","","",null,1],["Reline::Windows::KeyEventRecord","","ruby/classes/Reline/Windows/KeyEventRecord.html","","",null,1],["Reline::Windows::Win32API","","ruby/classes/Reline/Windows/Win32API.html","","",null,1],["RemoveNotNullOnActiveStorageBlobsChecksum","","rails/classes/RemoveNotNullOnActiveStorageBlobsChecksum.html","","",null,0],["Resolv","","ruby/classes/Resolv.html","","<p>\n\n<pre><code>Windows NT\n</code></pre>\n<p>\n",null,1],["Resolv","","ruby/classes/Resolv.html","","<p>Resolv is a thread-aware DNS resolver library written in Ruby.  Resolv can handle multiple DNS requests …\n",null,1],["Resolv::DNS","","ruby/classes/Resolv/DNS.html","","<p>Resolv::DNS is a DNS stub resolver.\n<p>Information taken from the following places:\n<p>STD0013\n",null,1],["Resolv::DNS::Config","","ruby/classes/Resolv/DNS/Config.html","","",null,1],["Resolv::DNS::Config::NXDomain","","ruby/classes/Resolv/DNS/Config/NXDomain.html","","<p>Indicates no such domain was found.\n",null,1],["Resolv::DNS::Config::OtherResolvError","","ruby/classes/Resolv/DNS/Config/OtherResolvError.html","","<p>Indicates some other unhandled resolver error was encountered.\n",null,1],["Resolv::DNS::DecodeError","","ruby/classes/Resolv/DNS/DecodeError.html","","<p>Indicates that the DNS response was unable to be decoded.\n",null,1],["Resolv::DNS::EncodeError","","ruby/classes/Resolv/DNS/EncodeError.html","","<p>Indicates that the DNS request was unable to be encoded.\n",null,1],["Resolv::DNS::Name","","ruby/classes/Resolv/DNS/Name.html","","<p>A representation of a DNS name.\n",null,1],["Resolv::DNS::Query","","ruby/classes/Resolv/DNS/Query.html","","<p>A DNS query abstract class.\n",null,1],["Resolv::DNS::Requester","","ruby/classes/Resolv/DNS/Requester.html","","",null,1],["Resolv::DNS::Requester::RequestError","","ruby/classes/Resolv/DNS/Requester/RequestError.html","","<p>Indicates a problem with the DNS request.\n",null,1],["Resolv::DNS::Resource","","ruby/classes/Resolv/DNS/Resource.html","","<p>A DNS resource abstract class.\n",null,1],["Resolv::DNS::Resource::ANY","","ruby/classes/Resolv/DNS/Resource/ANY.html","","<p>A Query type requesting any RR.\n",null,1],["Resolv::DNS::Resource::CNAME","","ruby/classes/Resolv/DNS/Resource/CNAME.html","","<p>The canonical name for an alias.\n",null,1],["Resolv::DNS::Resource::DomainName","","ruby/classes/Resolv/DNS/Resource/DomainName.html","","<p>Domain Name resource abstract class.\n",null,1],["Resolv::DNS::Resource::Generic","","ruby/classes/Resolv/DNS/Resource/Generic.html","","<p>A generic resource abstract class.\n",null,1],["Resolv::DNS::Resource::HINFO","","ruby/classes/Resolv/DNS/Resource/HINFO.html","","<p>Host Information resource.\n",null,1],["Resolv::DNS::Resource::IN","","ruby/classes/Resolv/DNS/Resource/IN.html","","<p>module IN contains ARPA Internet specific RRs.\n",null,1],["Resolv::DNS::Resource::IN::A","","ruby/classes/Resolv/DNS/Resource/IN/A.html","","<p>IPv4 Address resource\n",null,1],["Resolv::DNS::Resource::IN::AAAA","","ruby/classes/Resolv/DNS/Resource/IN/AAAA.html","","<p>An IPv6 address record.\n",null,1],["Resolv::DNS::Resource::IN::HTTPS","","ruby/classes/Resolv/DNS/Resource/IN/HTTPS.html","","<p>HTTPS resource record [RFC9460]\n",null,1],["Resolv::DNS::Resource::IN::SRV","","ruby/classes/Resolv/DNS/Resource/IN/SRV.html","","<p>SRV resource record defined in RFC 2782\n<p>These records identify the hostname and port that a service is …\n",null,1],["Resolv::DNS::Resource::IN::SVCB","","ruby/classes/Resolv/DNS/Resource/IN/SVCB.html","","<p>SVCB resource record [RFC9460]\n",null,1],["Resolv::DNS::Resource::IN::ServiceBinding","","ruby/classes/Resolv/DNS/Resource/IN/ServiceBinding.html","","<p>Common implementation for SVCB-compatible resource records.\n",null,1],["Resolv::DNS::Resource::IN::WKS","","ruby/classes/Resolv/DNS/Resource/IN/WKS.html","","<p>Well Known Service resource.\n",null,1],["Resolv::DNS::Resource::LOC","","ruby/classes/Resolv/DNS/Resource/LOC.html","","<p>Location resource\n",null,1],["Resolv::DNS::Resource::MINFO","","ruby/classes/Resolv/DNS/Resource/MINFO.html","","<p>Mailing list or mailbox information.\n",null,1],["Resolv::DNS::Resource::MX","","ruby/classes/Resolv/DNS/Resource/MX.html","","<p>Mail Exchanger resource.\n",null,1],["Resolv::DNS::Resource::NS","","ruby/classes/Resolv/DNS/Resource/NS.html","","<p>An authoritative name server.\n",null,1],["Resolv::DNS::Resource::PTR","","ruby/classes/Resolv/DNS/Resource/PTR.html","","<p>A Pointer to another DNS name.\n",null,1],["Resolv::DNS::Resource::SOA","","ruby/classes/Resolv/DNS/Resource/SOA.html","","<p>Start Of Authority resource.\n",null,1],["Resolv::DNS::Resource::TXT","","ruby/classes/Resolv/DNS/Resource/TXT.html","","<p>Unstructured text resource.\n",null,1],["Resolv::DNS::SvcParam","","ruby/classes/Resolv/DNS/SvcParam.html","","<p>Base class for SvcParam. [RFC9460]\n",null,1],["Resolv::DNS::SvcParam::ALPN","","ruby/classes/Resolv/DNS/SvcParam/ALPN.html","","<p>“alpn” SvcParam – Additional supported protocols\n",null,1],["Resolv::DNS::SvcParam::DoHPath","","ruby/classes/Resolv/DNS/SvcParam/DoHPath.html","","<p>“dohpath” SvcParam – DNS over HTTPS path template [RFC9461]\n",null,1],["Resolv::DNS::SvcParam::Generic","","ruby/classes/Resolv/DNS/SvcParam/Generic.html","","<p>Generic SvcParam abstract class.\n",null,1],["Resolv::DNS::SvcParam::IPv4Hint","","ruby/classes/Resolv/DNS/SvcParam/IPv4Hint.html","","<p>“ipv4hint” SvcParam – IPv4 address hints\n",null,1],["Resolv::DNS::SvcParam::IPv6Hint","","ruby/classes/Resolv/DNS/SvcParam/IPv6Hint.html","","<p>“ipv6hint” SvcParam – IPv6 address hints\n",null,1],["Resolv::DNS::SvcParam::Mandatory","","ruby/classes/Resolv/DNS/SvcParam/Mandatory.html","","<p>“mandatory” SvcParam – Mandatory keys in service binding RR\n",null,1],["Resolv::DNS::SvcParam::NoDefaultALPN","","ruby/classes/Resolv/DNS/SvcParam/NoDefaultALPN.html","","<p>“no-default-alpn” SvcParam – No support for default protocol\n",null,1],["Resolv::DNS::SvcParam::Port","","ruby/classes/Resolv/DNS/SvcParam/Port.html","","<p>“port” SvcParam – Port for alternative endpoint\n",null,1],["Resolv::DNS::SvcParams","","ruby/classes/Resolv/DNS/SvcParams.html","","<p>SvcParams for service binding RRs. [RFC9460]\n",null,1],["Resolv::Hosts","","ruby/classes/Resolv/Hosts.html","","<p>Resolv::Hosts is a hostname resolver that uses the system hosts file.\n",null,1],["Resolv::IPv4","","ruby/classes/Resolv/IPv4.html","","<p>A Resolv::DNS IPv4 address.\n",null,1],["Resolv::IPv6","","ruby/classes/Resolv/IPv6.html","","<p>A Resolv::DNS IPv6 address.\n",null,1],["Resolv::LOC","","ruby/classes/Resolv/LOC.html","","",null,1],["Resolv::LOC::Alt","","ruby/classes/Resolv/LOC/Alt.html","","<p>A Resolv::LOC::Alt\n",null,1],["Resolv::LOC::Coord","","ruby/classes/Resolv/LOC/Coord.html","","<p>A Resolv::LOC::Coord\n",null,1],["Resolv::LOC::Size","","ruby/classes/Resolv/LOC/Size.html","","<p>A Resolv::LOC::Size\n",null,1],["Resolv::MDNS","","ruby/classes/Resolv/MDNS.html","","<p>Resolv::MDNS is a one-shot Multicast DNS (mDNS) resolver.  It blindly makes queries to the mDNS addresses …\n",null,1],["Resolv::ResolvError","","ruby/classes/Resolv/ResolvError.html","","<p>Indicates a failure to resolve a name or address.\n",null,1],["Resolv::ResolvTimeout","","ruby/classes/Resolv/ResolvTimeout.html","","<p>Indicates a timeout resolving a name or address.\n",null,1],["Resolv::SZ","","ruby/classes/Resolv/SZ.html","","",null,1],["Rinda","","ruby/classes/Rinda.html","","<p>A module to implement the Linda distributed computing paradigm in Ruby.\n<p>Rinda is part of DRb (dRuby). …\n",null,1],["Rinda::DRbObjectTemplate","","ruby/classes/Rinda/DRbObjectTemplate.html","","<p><em>Documentation?</em>\n",null,1],["Rinda::InvalidHashTupleKey","","ruby/classes/Rinda/InvalidHashTupleKey.html","","<p>Raised when a hash-based tuple has an invalid key.\n",null,1],["Rinda::NotifyTemplateEntry","","ruby/classes/Rinda/NotifyTemplateEntry.html","","<p>A NotifyTemplateEntry is returned by TupleSpace#notify and is notified of TupleSpace changes.  You may …\n",null,1],["Rinda::RequestCanceledError","","ruby/classes/Rinda/RequestCanceledError.html","","<p>Raised when trying to use a canceled tuple.\n",null,1],["Rinda::RequestExpiredError","","ruby/classes/Rinda/RequestExpiredError.html","","<p>Raised when trying to use an expired tuple.\n",null,1],["Rinda::RindaError","","ruby/classes/Rinda/RindaError.html","","<p>Rinda error base class\n",null,1],["Rinda::RingFinger","","ruby/classes/Rinda/RingFinger.html","","<p>RingFinger is used by RingServer clients to discover the RingServer’s TupleSpace.  Typically, all …\n",null,1],["Rinda::RingProvider","","ruby/classes/Rinda/RingProvider.html","","<p>RingProvider uses a RingServer advertised TupleSpace as a name service. TupleSpace clients can register …\n",null,1],["Rinda::RingServer","","ruby/classes/Rinda/RingServer.html","","<p>A RingServer allows a Rinda::TupleSpace to be located via UDP broadcasts. Default service location uses …\n",null,1],["Rinda::SimpleRenewer","","ruby/classes/Rinda/SimpleRenewer.html","","<p>An SimpleRenewer allows a TupleSpace to check if a TupleEntry is still alive.\n",null,1],["Rinda::Template","","ruby/classes/Rinda/Template.html","","<p>Templates are used to match tuples in Rinda.\n",null,1],["Rinda::TemplateEntry","","ruby/classes/Rinda/TemplateEntry.html","","<p>A TemplateEntry is a Template together with expiry and cancellation data.\n",null,1],["Rinda::Tuple","","ruby/classes/Rinda/Tuple.html","","<p>A tuple is the elementary object in Rinda programming. Tuples may be matched against templates if the …\n",null,1],["Rinda::TupleBag","","ruby/classes/Rinda/TupleBag.html","","<p>TupleBag is an unordered collection of tuples. It is the basis of Tuplespace.\n",null,1],["Rinda::TupleBag::TupleBin","","ruby/classes/Rinda/TupleBag/TupleBin.html","","",null,1],["Rinda::TupleEntry","","ruby/classes/Rinda/TupleEntry.html","","<p>A TupleEntry is a Tuple (i.e. a possible entry in some Tuplespace) together with expiry and cancellation …\n",null,1],["Rinda::TupleSpace","","ruby/classes/Rinda/TupleSpace.html","","<p>The Tuplespace manages access to the tuples it contains, ensuring mutual exclusion requirements are met. …\n",null,1],["Rinda::TupleSpaceProxy","","ruby/classes/Rinda/TupleSpaceProxy.html","","<p>TupleSpaceProxy allows a remote Tuplespace to appear as local.\n",null,1],["Rinda::WaitTemplateEntry","","ruby/classes/Rinda/WaitTemplateEntry.html","","<p><em>Documentation?</em>\n",null,1],["Ripper","","ruby/classes/Ripper.html","","<p>Ripper is a Ruby script parser.\n<p>You can get information from the parser with event-based style. Information …\n",null,1],["Ripper::Filter","","ruby/classes/Ripper/Filter.html","","<p>This class handles only scanner events, which are dispatched in the ‘right’ order (same with …\n",null,1],["Ripper::Lexer","","ruby/classes/Ripper/Lexer.html","","",null,1],["Ripper::Lexer::Elem","","ruby/classes/Ripper/Lexer/Elem.html","","",null,1],["Ripper::Lexer::State","","ruby/classes/Ripper/Lexer/State.html","","",null,1],["RubyVM","","ruby/classes/RubyVM.html","","<p>The RubyVM module only exists on MRI. <code>RubyVM</code> is not defined in other Ruby implementations such as JRuby …\n",null,1],["RubyVM::AbstractSyntaxTree","","ruby/classes/RubyVM/AbstractSyntaxTree.html","","<p>AbstractSyntaxTree provides methods to parse Ruby code into abstract syntax trees. The nodes in the tree …\n",null,1],["RubyVM::AbstractSyntaxTree::Node","","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html","","<p>RubyVM::AbstractSyntaxTree::Node instances are created by parse methods in RubyVM::AbstractSyntaxTree …\n",null,1],["RubyVM::InstructionSequence","","ruby/classes/RubyVM/InstructionSequence.html","","<p>The InstructionSequence class represents a compiled sequence of instructions for the Virtual Machine …\n",null,1],["RubyVM::RJIT","","ruby/classes/RubyVM/RJIT.html","","",null,1],["RubyVM::YJIT","","ruby/classes/RubyVM/YJIT.html","","<p>This module allows for introspection of YJIT, CRuby’s just-in-time compiler.\nEverything in the module ...\n",null,1],["RuntimeError","","ruby/classes/RuntimeError.html","","<p>A generic error class raised when an invalid operation is attempted. Kernel#raise will raise a RuntimeError …\n",null,1],["SOCKSSocket","","ruby/classes/SOCKSSocket.html","","<p>SOCKS is an Internet protocol that routes packets between a client and a server through a proxy server. …\n",null,1],["ScriptError","","ruby/classes/ScriptError.html","","<p>ScriptError is the superclass for errors raised when a script can not be executed because of a <code>LoadError</code> …\n",null,1],["SecureRandom","","rails/classes/SecureRandom.html","","",null,0],["SecureRandom","","ruby/classes/SecureRandom.html","","<p>Secure random number generator interface.\n<p>This library is an interface to secure random number generators …\n",null,1],["SecurityError","","ruby/classes/SecurityError.html","","<p>No longer used by internal code.\n",null,1],["Set","","ruby/classes/Set.html","","<p>This library provides the Set class, which implements a collection\nof unordered values with no duplicates. ...\n",null,1],["SetValue","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-SetValue","(hkey, name, type, data, size)","",null,1],["Shellwords","","ruby/classes/Shellwords.html","","<p>Manipulates strings like the UNIX Bourne shell\n<p>This module manipulates strings according to the word parsing …\n",null,1],["Signal","","ruby/classes/Signal.html","","<p>Many operating systems allow signals to be sent to running processes. Some signals have a defined effect …\n",null,1],["SignalException","","ruby/classes/SignalException.html","","<p>Raised when a signal is received.\n\n<pre><code>begin\n  Process.kill(&#39;HUP&#39;,Process.pid)\n  sleep # wait for receiver ...\n</code></pre>\n",null,1],["SimpleDelegator","","ruby/classes/SimpleDelegator.html","","<p>A concrete implementation of Delegator, this class provides the means to delegate all supported method …\n",null,1],["SingleForwardable","","ruby/classes/SingleForwardable.html","","<p>SingleForwardable can be used to setup delegation at the object level as well.\n\n<pre><code>printer = String.new\nprinter.extend ...\n</code></pre>\n",null,1],["Singleton","","rails/classes/Singleton.html","","",null,0],["Singleton","","ruby/classes/Singleton.html","","<p>The Singleton module implements the Singleton pattern.\n<p>Usage\n<p>To use Singleton, include the module in your …\n",null,1],["Socket","","ruby/classes/Socket.html","","<p>Class <code>Socket</code> provides access to the underlying operating system socket implementations.  It can be used …\n",null,1],["Socket::AncillaryData","","ruby/classes/Socket/AncillaryData.html","","<p>Socket::AncillaryData represents the ancillary data (control information) used by sendmsg and recvmsg …\n",null,1],["Socket::Ifaddr","","ruby/classes/Socket/Ifaddr.html","","<p>Socket::Ifaddr represents a result of getifaddrs() function.\n",null,1],["Socket::Option","","ruby/classes/Socket/Option.html","","<p>Socket::Option represents a socket option used by BasicSocket#getsockopt and BasicSocket#setsockopt. …\n",null,1],["Socket::ResolutionError","","ruby/classes/Socket/ResolutionError.html","","<p>ResolutionError is the error class for socket name resolution.\n",null,1],["Socket::UDPSource","","ruby/classes/Socket/UDPSource.html","","<p>UDP/IP address information used by Socket.udp_server_loop.\n",null,1],["SocketError","","ruby/classes/SocketError.html","","<p>SocketError is the error class for socket.\n",null,1],["StandardError","","ruby/classes/StandardError.html","","<p>The most standard error types are subclasses of StandardError. A rescue clause without an explicit Exception …\n",null,1],["StopIteration","","ruby/classes/StopIteration.html","","<p>Raised to stop the iteration, in particular by Enumerator#next. It is rescued by Kernel#loop.\n\n<pre><code>loop do ...\n</code></pre>\n",null,1],["String","","rails/classes/String.html","","<p>String inflections define new methods on the String class to transform names for different purposes. …\n",null,0],["String","","ruby/classes/String.html","","<p>A String object has an arbitrary sequence of bytes, typically representing text or binary data. A String …\n",null,1],["String","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-String","(mes)","",null,1],["String","Kernel","ruby/classes/Kernel.html#method-i-String","(p1)","<p>Returns a string converted from <code>object</code>.\n<p>Tries to convert <code>object</code> to a string using <code>to_str</code> first and <code>to_s</code> …\n",null,1],["StringIO","","ruby/classes/StringIO.html","","<p>IO streams for strings, with access similar to IO; see IO.\n<p>About the Examples\n<p>Examples on this page assume …\n",null,1],["StringScanner","","ruby/classes/StringScanner.html","","<p>StringScanner provides for lexical scanning operations on a String.  Here is an example of its usage: …\n",null,1],["StringScanner::Error","","ruby/classes/StringScanner/Error.html","","",null,1],["Struct","","ruby/classes/Struct.html","","<p>Class Struct provides a convenient way to create a simple class that can store and fetch values.\n<p>This …\n",null,1],["Symbol","","rails/classes/Symbol.html","","",null,0],["Symbol","","ruby/classes/Symbol.html","","<p>Symbol objects represent named identifiers inside the Ruby interpreter.\n<p>You can create a Symbol object …\n",null,1],["SyntaxError","","ruby/classes/SyntaxError.html","","<p>Raised when encountering Ruby code with an invalid syntax.\n\n<pre><code>eval(&quot;1+1=2&quot;)\n</code></pre>\n<p><em>raises the exception:</em>\n",null,1],["SyntaxSuggest","","ruby/classes/SyntaxSuggest.html","","",null,1],["SyntaxSuggest::AroundBlockScan","","ruby/classes/SyntaxSuggest/AroundBlockScan.html","","<p>This class is useful for exploring contents before and after a block\n<p>It searches above and below the passed …\n",null,1],["SyntaxSuggest::BlockExpand","","ruby/classes/SyntaxSuggest/BlockExpand.html","","<p>This class is responsible for taking a code block that exists at a far indentaion and then iteratively …\n",null,1],["SyntaxSuggest::Capture","","ruby/classes/SyntaxSuggest/Capture.html","","",null,1],["SyntaxSuggest::Capture::BeforeAfterKeywordEnds","","ruby/classes/SyntaxSuggest/Capture/BeforeAfterKeywordEnds.html","","<p>Shows surrounding kw/end pairs\n<p>The purpose of showing these extra pairs is due to cases of ambiguity when …\n",null,1],["SyntaxSuggest::Capture::FallingIndentLines","","ruby/classes/SyntaxSuggest/Capture/FallingIndentLines.html","","<p>Shows the context around code provided by “falling” indentation\n<p>If this is the original code …\n",null,1],["SyntaxSuggest::CaptureCodeContext","","ruby/classes/SyntaxSuggest/CaptureCodeContext.html","","<p>Turns a “invalid block(s)” into useful context\n<p>There are three main phases in the algorithm: …\n",null,1],["SyntaxSuggest::CleanDocument","","ruby/classes/SyntaxSuggest/CleanDocument.html","","<p>Parses and sanitizes source into a lexically aware document\n<p>Internally the document is represented by …\n",null,1],["SyntaxSuggest::Cli","","ruby/classes/SyntaxSuggest/Cli.html","","<p>All the logic of the exe/syntax_suggest CLI in one handy spot\n\n<pre><code>Cli.new(argv: [&quot;--help&quot;]).call\nCli.new(argv: ...\n</code></pre>\n",null,1],["SyntaxSuggest::CodeBlock","","ruby/classes/SyntaxSuggest/CodeBlock.html","","<p>Multiple lines form a singular CodeBlock\n<p>Source code is made of multiple CodeBlocks.\n<p>Example:\n",null,1],["SyntaxSuggest::CodeFrontier","","ruby/classes/SyntaxSuggest/CodeFrontier.html","","<p>There are three main phases in the algorithm:\n<p>Sanitize/format input source\n<p>Search for invalid blocks\n",null,1],["SyntaxSuggest::CodeLine","","ruby/classes/SyntaxSuggest/CodeLine.html","","<p>Represents a single line of code of a given source file\n<p>This object contains metadata about the line such …\n",null,1],["SyntaxSuggest::CodeSearch","","ruby/classes/SyntaxSuggest/CodeSearch.html","","<p>Searches code for a syntax error\n<p>There are three main phases in the algorithm:\n<p>Sanitize/format input source …\n",null,1],["SyntaxSuggest::DisplayCodeWithLineNumbers","","ruby/classes/SyntaxSuggest/DisplayCodeWithLineNumbers.html","","<p>Outputs code with highlighted lines\n<p>Whatever is passed to this class will be rendered even if it is “marked …\n",null,1],["SyntaxSuggest::DisplayInvalidBlocks","","ruby/classes/SyntaxSuggest/DisplayInvalidBlocks.html","","<p>Used for formatting invalid blocks\n",null,1],["SyntaxSuggest::Error","","ruby/classes/SyntaxSuggest/Error.html","","",null,1],["SyntaxSuggest::ExplainSyntax","","ruby/classes/SyntaxSuggest/ExplainSyntax.html","","<p>Explains syntax errors based on their source\n<p>example:\n\n<pre><code>source = &quot;def foo; puts &#39;lol&#39;&quot; # Note missing end ...\n</code></pre>\n",null,1],["SyntaxSuggest::GetParseErrors","","ruby/classes/SyntaxSuggest/GetParseErrors.html","","",null,1],["SyntaxSuggest::LeftRightLexCount","","ruby/classes/SyntaxSuggest/LeftRightLexCount.html","","<p>Find mis-matched syntax based on lexical count\n<p>Used for detecting missing pairs of elements each keyword …\n",null,1],["SyntaxSuggest::LexAll","","ruby/classes/SyntaxSuggest/LexAll.html","","<p>Ripper.lex is not guaranteed to lex the entire source document\n<p>This class guarantees the whole document …\n",null,1],["SyntaxSuggest::LexValue","","ruby/classes/SyntaxSuggest/LexValue.html","","<p>Value object for accessing lex values\n<p>This lex:\n\n<pre><code>[1, 0], :on_ident, &quot;describe&quot;, CMDARG\n</code></pre>\n",null,1],["SyntaxSuggest::MiniStringIO","","ruby/classes/SyntaxSuggest/MiniStringIO.html","","<p>Mini String IO [Private]\n<p>Acts like a StringIO with reduced API, but without having to require that class. …\n",null,1],["SyntaxSuggest::ParseBlocksFromIndentLine","","ruby/classes/SyntaxSuggest/ParseBlocksFromIndentLine.html","","<p>This class is responsible for generating initial code blocks that will then later be expanded.\n<p>The biggest …\n",null,1],["SyntaxSuggest::PathnameFromMessage","","ruby/classes/SyntaxSuggest/PathnameFromMessage.html","","<p>Converts a SyntaxError message to a path\n<p>Handles the case where the filename has a colon in it such as …\n",null,1],["SyntaxSuggest::PriorityEngulfQueue","","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html","","<p>Keeps track of what elements are in the queue in priority and also ensures that when one element engulfs/covers/eats …\n",null,1],["SyntaxSuggest::PriorityQueue","","ruby/classes/SyntaxSuggest/PriorityQueue.html","","<p>Holds elements in a priority heap on insert\n<p>Instead of constantly calling ‘sort!`, put the element where …\n",null,1],["SyntaxSuggest::RipperErrors","","ruby/classes/SyntaxSuggest/RipperErrors.html","","<p>Capture parse errors from Ripper\n<p>Prism returns the errors with their messages, but Ripper does not. To …\n",null,1],["SyntaxSuggest::ScanHistory","","ruby/classes/SyntaxSuggest/ScanHistory.html","","<p>Scans up/down from the given block\n<p>You can try out a change, stash it, or commit it to save for later …\n",null,1],["SyntaxSuggest::UnvisitedLines","","ruby/classes/SyntaxSuggest/UnvisitedLines.html","","<p>Tracks which lines various code blocks have expanded to and which are still unexplored\n",null,1],["Syslog","","ruby/classes/Syslog.html","","<p>The syslog package provides a Ruby interface to the POSIX system logging facility.\n<p>Syslog messages are …\n",null,1],["Syslog::Constants","","ruby/classes/Syslog/Constants.html","","",null,1],["Syslog::Facility","","ruby/classes/Syslog/Facility.html","","",null,1],["Syslog::Level","","ruby/classes/Syslog/Level.html","","",null,1],["Syslog::Logger","","ruby/classes/Syslog/Logger.html","","<p>Syslog::Logger is a Logger work-alike that logs via syslog instead of to a file.  You can use Syslog::Logger …\n",null,1],["Syslog::Logger::Formatter","","ruby/classes/Syslog/Logger/Formatter.html","","<p>Default formatter for log messages.\n",null,1],["Syslog::Macros","","ruby/classes/Syslog/Macros.html","","",null,1],["Syslog::Option","","ruby/classes/Syslog/Option.html","","",null,1],["SystemCallError","","ruby/classes/SystemCallError.html","","<p>SystemCallError is the base class for all low-level platform-dependent errors.\n<p>The errors available on …\n",null,1],["SystemExit","","ruby/classes/SystemExit.html","","<p>Raised by <code>exit</code> to initiate the termination of the script.\n",null,1],["SystemStackError","","ruby/classes/SystemStackError.html","","<p>Raised in case of a stack overflow.\n\n<pre><code>def me_myself_and_i\n  me_myself_and_i\nend\nme_myself_and_i\n</code></pre>\n<p><em>raises the</em> …\n",null,1],["TCPServer","","ruby/classes/TCPServer.html","","<p>TCPServer represents a TCP/IP server socket.\n<p>A simple TCP server may look like:\n\n<pre><code>require &#39;socket&#39;\n\nserver ...\n</code></pre>\n",null,1],["TCPSocket","","ruby/classes/TCPSocket.html","","<p>TCPSocket represents a TCP/IP client socket.\n<p>A simple client may look like:\n\n<pre><code>require &#39;socket&#39;\n\ns = TCPSocket.new ...\n</code></pre>\n",null,1],["TSort","","ruby/classes/TSort.html","","<p>TSort implements topological sorting using Tarjan’s algorithm for strongly connected components. …\n",null,1],["TSort::Cyclic","","ruby/classes/TSort/Cyclic.html","","",null,1],["Tempfile","","ruby/classes/Tempfile.html","","<p>A utility class for managing temporary files. When you create a Tempfile object, it will create a temporary …\n",null,1],["Thread","","ruby/classes/Thread.html","","<p>Threads are the Ruby implementation for a concurrent programming model.\n<p>Programs that require multiple …\n",null,1],["Thread::Backtrace","","ruby/classes/Thread/Backtrace.html","","<p>An internal representation of the backtrace. The user will never interact with objects of this class …\n",null,1],["Thread::Backtrace::Location","","ruby/classes/Thread/Backtrace/Location.html","","<p>An object representation of a stack frame, initialized by Kernel#caller_locations.\n<p>For example:\n\n<pre><code># caller_locations.rb ...\n</code></pre>\n",null,1],["Thread::ConditionVariable","","ruby/classes/Thread/ConditionVariable.html","","<p>ConditionVariable objects augment class Mutex. Using condition variables, it is possible to suspend while …\n",null,1],["Thread::Mutex","","ruby/classes/Thread/Mutex.html","","<p>Thread::Mutex implements a simple semaphore that can be used to coordinate access to shared data from …\n",null,1],["Thread::Queue","","ruby/classes/Thread/Queue.html","","<p>The Thread::Queue class implements multi-producer, multi-consumer queues.  It is especially useful in …\n",null,1],["Thread::SizedQueue","","ruby/classes/Thread/SizedQueue.html","","<p>This class represents queues of specified size capacity.  The push operation may be blocked if the capacity …\n",null,1],["ThreadError","","ruby/classes/ThreadError.html","","<p>Raised when an invalid operation is attempted on a thread.\n<p>For example, when no other thread has been …\n",null,1],["ThreadGroup","","ruby/classes/ThreadGroup.html","","<p>ThreadGroup provides a means of keeping track of a number of threads as a group.\n<p>A given Thread object …\n",null,1],["Time","","rails/classes/Time.html","","",null,0],["Time","","ruby/classes/Time.html","","<p>A <code>Time</code> object represents a date and time:\n\n<pre><code>Time.new(2000, 1, 1, 0, 0, 0) # =&gt; 2000-01-01 00:00:00 -0600\n</code></pre>\n",null,1],["Timeout","","ruby/classes/Timeout.html","","<p>Timeout long-running blocks\n<p>Synopsis\n\n<pre><code>require &#39;timeout&#39;\nstatus = Timeout::timeout(5) {\n  # Something that ...\n</code></pre>\n",null,1],["Timeout::Error","","ruby/classes/Timeout/Error.html","","<p>Raised by Timeout.timeout when the block times out.\n",null,1],["Timeout::ExitException","","ruby/classes/Timeout/ExitException.html","","<p>Internal error raised to when a timeout is triggered.\n",null,1],["Timeout::Request","","ruby/classes/Timeout/Request.html","","",null,1],["TracePoint","","ruby/classes/TracePoint.html","","<p>A class that provides the functionality of Kernel#set_trace_func in a nice Object-Oriented API.\n<p>Example …\n",null,1],["TrueClass","","rails/classes/TrueClass.html","","",null,0],["TrueClass","","ruby/classes/TrueClass.html","","<p>The class of the singleton object <code>true</code>.\n<p>Several of its methods act as operators:\n<p>#&amp;\n",null,1],["TypeError","","ruby/classes/TypeError.html","","<p>Raised when encountering an object that is not of the expected type.\n\n<pre><code>[1, 2, 3].first(&quot;two&quot;)\n</code></pre>\n<p><em>raises the</em> …\n",null,1],["UDPSocket","","ruby/classes/UDPSocket.html","","<p>UDPSocket represents a UDP/IP socket.\n",null,1],["UNIXServer","","ruby/classes/UNIXServer.html","","<p>UNIXServer represents a UNIX domain stream server socket.\n",null,1],["UNIXSocket","","ruby/classes/UNIXSocket.html","","<p>UNIXSocket represents a UNIX domain stream client socket.\n",null,1],["URI","","rails/classes/URI.html","","",null,0],["URI","","ruby/classes/URI.html","","<p>URI is a module providing classes to handle Uniform Resource Identifiers (RFC2396).\n<p>Features\n<p>Uniform way …\n",null,1],["URI","Kernel","ruby/classes/Kernel.html#method-c-URI","(uri)","<p>Returns a URI object derived from the given <code>uri</code>, which may be a URI string or an existing URI object: …\n",null,1],["URI::BadURIError","","ruby/classes/URI/BadURIError.html","","<p>URI is valid, bad usage is not.\n",null,1],["URI::Error","","ruby/classes/URI/Error.html","","<p>Base class for all URI exceptions.\n",null,1],["URI::FTP","","ruby/classes/URI/FTP.html","","<p>FTP URI syntax is defined by RFC1738 section 3.2.\n<p>This class will be redesigned because of difference …\n",null,1],["URI::File","","ruby/classes/URI/File.html","","<p>The “file” URI is defined by RFC8089.\n",null,1],["URI::Generic","","ruby/classes/URI/Generic.html","","<p>Base class for all URI classes. Implements generic URI syntax as per RFC 2396.\n",null,1],["URI::HTTP","","ruby/classes/URI/HTTP.html","","<p>The syntax of HTTP URIs is defined in RFC1738 section 3.3.\n<p>Note that the Ruby URI library allows HTTP …\n",null,1],["URI::HTTPS","","ruby/classes/URI/HTTPS.html","","<p>The default port for HTTPS URIs is 443, and the scheme is ‘https:’ rather than ‘http:’. …\n",null,1],["URI::InvalidComponentError","","ruby/classes/URI/InvalidComponentError.html","","<p>Not a URI component.\n",null,1],["URI::InvalidURIError","","ruby/classes/URI/InvalidURIError.html","","<p>Not a URI.\n",null,1],["URI::LDAP","","ruby/classes/URI/LDAP.html","","<p>LDAP URI SCHEMA (described in RFC2255).\n",null,1],["URI::LDAPS","","ruby/classes/URI/LDAPS.html","","<p>The default port for LDAPS URIs is 636, and the scheme is ‘ldaps:’ rather than ‘ldap:’. …\n",null,1],["URI::MailTo","","ruby/classes/URI/MailTo.html","","<p>RFC6068, the mailto URL scheme.\n",null,1],["URI::Parser","","ruby/classes/URI/RFC2396_Parser.html","","<p>Class that parses String’s into URI’s.\n<p>It contains a Hash set of patterns and Regexp’s that …\n",null,1],["URI::REGEXP","","ruby/classes/URI/RFC2396_REGEXP.html","","<p>Includes URI::REGEXP::PATTERN\n",null,1],["URI::RFC2396_Parser","","ruby/classes/URI/RFC2396_Parser.html","","<p>Class that parses String’s into URI’s.\n<p>It contains a Hash set of patterns and Regexp’s that …\n",null,1],["URI::RFC2396_REGEXP","","ruby/classes/URI/RFC2396_REGEXP.html","","<p>Includes URI::REGEXP::PATTERN\n",null,1],["URI::RFC2396_REGEXP::PATTERN","","ruby/classes/URI/RFC2396_REGEXP/PATTERN.html","","<p>Patterns used to parse URI’s\n",null,1],["URI::Schemes","","ruby/classes/URI/Schemes.html","","",null,1],["URI::WS","","ruby/classes/URI/WS.html","","<p>The syntax of WS URIs is defined in RFC6455 section 3.\n<p>Note that the Ruby URI library allows WS URLs containing …\n",null,1],["URI::WSS","","ruby/classes/URI/WSS.html","","<p>The default port for WSS URIs is 443, and the scheme is ‘wss:’ rather than ‘ws:’. Other …\n",null,1],["USAGE","","rails/files/rails/railties/lib/rails/commands/credentials/USAGE.html","","<p>Storing Encrypted Credentials in Source Control\n<p>The Rails ‘credentials` commands provide access to encrypted …\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/task/USAGE.html","","<p>Description:\n\n<pre><code>Generates a new Rake task. Pass the namespace name, and a list of tasks as arguments.\n\nThis ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/scaffold_controller/USAGE.html","","<p>Description:\n\n<pre><code>Generates a scaffolded controller, its seven RESTful actions and related\nviews. Pass the ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/scaffold/USAGE.html","","<p>Description:\n\n<pre><code>Scaffolds an entire resource, from model and migration to controller and\nviews, along with ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/resource/USAGE.html","","<p>Description:\n\n<pre><code>Generates a new resource including an empty model and controller suitable\nfor a RESTful, ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/plugin/USAGE.html","","<p>Description:\n\n<pre><code>The &#39;rails plugin new&#39; command creates a skeleton for developing any\nkind of Rails extension ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/model/USAGE.html","","<p>Description:\n\n<pre><code>Generates a new model. Pass the model name, either CamelCased or\nunder_scored, and an optional ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/commands/encrypted/USAGE.html","","<p>Storing Encrypted Files in Source Control\n<p>The Rails ‘encrypted` commands provide access to encrypted files …\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/commands/help/USAGE.html","","<p>The most common rails commands are:\n\n<pre><code>generate     Generate new code (short-cut alias: &quot;g&quot;)\nconsole     ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/commands/runner/USAGE.html","","<p>Examples:\n<p>Run ‘puts Rails.env` after loading the app:\n\n<pre><code>&lt;%= executable %&gt; &#39;puts Rails.env&#39;\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/commands/secrets/USAGE.html","","<p>** DEPRECATED **\n<p>Rails 5.2 has introduced a new ‘credentials` API that replaces Rails secrets. Please …\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/app/USAGE.html","","<p>Description:\n\n<pre><code>The &#39;rails new&#39; command creates a new Rails application with a default\ndirectory structure ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/actionmailer/lib/rails/generators/mailer/USAGE.html","","<p>Description:\n<p>\n\n<pre><code>Generates a new mailer and its views. Passes the mailer name, either\nCamelCased or under_scored, ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/actionmailbox/lib/rails/generators/mailbox/USAGE.html","","<p>Description:\n<p>\n\n<pre><code>Generates a new mailbox class in app/mailboxes and invokes your template\nengine and test ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/actioncable/lib/rails/generators/channel/USAGE.html","","<p>Description:\n<p>\n\n<pre><code>Generates a new cable channel for the server (in Ruby) and client (in JavaScript).\nPass the ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/benchmark/USAGE.html","","<p>Description:\n\n<pre><code>Generate benchmarks to compare performance optimizations.\n\nMakes use of the `benchmark-ips` ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/controller/USAGE.html","","<p>Description:\n\n<pre><code>Generates a new controller and its views. Pass the controller name, either\nCamelCased or ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/generator/USAGE.html","","<p>Description:\n\n<pre><code>Generates a new generator at lib/generators. Pass the generator name as an argument,\neither ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/helper/USAGE.html","","<p>Description:\n\n<pre><code>Generates a new helper. Pass the helper name, either CamelCased\nor under_scored.\n\nTo create ...\n</code></pre>\n",null,0],["USAGE","","rails/files/rails/railties/lib/rails/generators/rails/migration/USAGE.html","","<p>Description:\n\n<pre><code>Generates a new database migration. Pass the migration name, either\nCamelCased or under_scored, ...\n</code></pre>\n",null,0],["USAGE.tt","","rails/files/rails/railties/lib/rails/generators/rails/generator/templates/USAGE_tt.html","","<p>Description:\n\n<pre><code>Explain the generator\n</code></pre>\n<p>Example:\n",null,0],["UnboundMethod","","rails/classes/UnboundMethod.html","","",null,0],["UnboundMethod","","ruby/classes/UnboundMethod.html","","<p>Ruby supports two forms of objectified methods. Class Method is used to represent methods that are associated …\n",null,1],["UncaughtThrowError","","ruby/classes/UncaughtThrowError.html","","<p>Raised when <code>throw</code> is called with a <em>tag</em> which does not have corresponding <code>catch</code> block.\n\n<pre><code>throw &quot;foo&quot;, &quot;bar&quot;\n</code></pre>\n",null,1],["UnicodeNormalize","","ruby/classes/UnicodeNormalize.html","","<p>define UnicodeNormalize module here so that we don’t have to look it up\n",null,1],["User","","rails/classes/User.html","","",null,0],["WIN32OLE","","ruby/classes/WIN32OLE.html","","<p>WIN32OLE\n<p><code>WIN32OLE</code> objects represent OLE Automation object in Ruby.\n<p>By using WIN32OLE, you can access OLE …\n",null,1],["WIN32OLE::Event","","ruby/classes/WIN32OLE/Event.html","","",null,1],["WIN32OLE::Method","","ruby/classes/WIN32OLE/Method.html","","",null,1],["WIN32OLE::Param","","ruby/classes/WIN32OLE/Param.html","","",null,1],["WIN32OLE::Record","","ruby/classes/WIN32OLE/Record.html","","",null,1],["WIN32OLE::Type","","ruby/classes/WIN32OLE/Type.html","","",null,1],["WIN32OLE::Typelib","","ruby/classes/WIN32OLE/Typelib.html","","",null,1],["WIN32OLE::VARIANT","","ruby/classes/WIN32OLE/VARIANT.html","","<p>The WIN32OLE::VARIANT module includes constants of VARIANT type constants. The constants is used when …\n",null,1],["WIN32OLE::Variable","","ruby/classes/WIN32OLE/Variable.html","","",null,1],["WIN32OLE::Variant","","ruby/classes/WIN32OLE/Variant.html","","",null,1],["WIN32OLEQueryInterfaceError","","ruby/classes/WIN32OLEQueryInterfaceError.html","","",null,1],["WIN32OLERuntimeError","","ruby/classes/WIN32OLERuntimeError.html","","<p>Raised when OLE processing failed.\n<p>EX:\n\n<pre><code>obj = WIN32OLE.new(&quot;NonExistProgID&quot;)\n</code></pre>\n",null,1],["Warning","","ruby/classes/Warning.html","","<p>The Warning module contains a single method named #warn, and the module extends itself, making Warning.warn …\n",null,1],["WeakRef","","ruby/classes/WeakRef.html","","<p>Weak Reference class that allows a referenced object to be garbage-collected.\n<p>A WeakRef may be used exactly …\n",null,1],["WeakRef::RefError","","ruby/classes/WeakRef/RefError.html","","<p>RefError is raised when a referenced object has been recycled by the garbage collector\n",null,1],["Win32","","ruby/classes/Win32.html","","<p>Implements bindings to Win32 SSPI functions, focused on authentication to a proxy server over HTTP.\n",null,1],["Win32::Registry","","ruby/classes/Win32/Registry.html","","",null,1],["Win32::Registry::API","","ruby/classes/Win32/Registry/API.html","","<p>Win32 APIs\n",null,1],["Win32::Registry::Constants","","ruby/classes/Win32/Registry/Constants.html","","<p>For detail, see the MSDN.\n<p>— HKEY_*\n\n<pre><code>Predefined key ((*handle*)).\nThese are Integer, not Win32::Registry.\n</code></pre>\n",null,1],["Win32::Registry::Error","","ruby/classes/Win32/Registry/Error.html","","<p>Error\n",null,1],["Win32::Registry::Error::Kernel32","","ruby/classes/Win32/Registry/Error/Kernel32.html","","",null,1],["Win32::Registry::PredefinedKey","","ruby/classes/Win32/Registry/PredefinedKey.html","","<p>Predefined Keys\n",null,1],["Win32::SSPI","","ruby/classes/Win32/SSPI.html","","",null,1],["Win32::SSPI::API","","ruby/classes/Win32/SSPI/API.html","","<p>Win32 API Functions. Uses Win32API to bind methods to constants contained in class.\n",null,1],["Win32::SSPI::Identity","","ruby/classes/Win32/SSPI/Identity.html","","<p>SEC_WINNT_AUTH_IDENTITY structure\n",null,1],["Win32::SSPI::NegotiateAuth","","ruby/classes/Win32/SSPI/NegotiateAuth.html","","<p>Handles “Negotiate” type authentication. Geared towards authenticating with a proxy server …\n",null,1],["Win32::SSPI::SSPIResult","","ruby/classes/Win32/SSPI/SSPIResult.html","","<p>Takes a return result from an SSPI function and interprets the value.\n",null,1],["Win32::SSPI::SecurityBuffer","","ruby/classes/Win32/SSPI/SecurityBuffer.html","","<p>Creates binary representations of a SecBufferDesc structure, including the SecBuffer contained inside. …\n",null,1],["Win32::SSPI::SecurityHandle","","ruby/classes/Win32/SSPI/SecurityHandle.html","","<p>SecHandle struct\n",null,1],["Win32::SSPI::TimeStamp","","ruby/classes/Win32/SSPI/TimeStamp.html","","<p>TimeStamp struct\n",null,1],["XMP","","ruby/classes/XMP.html","","<p>An example printer for irb.\n<p>It’s much like the standard library PrettyPrint, that shows the value …\n",null,1],["XMP::StringInputMethod","","ruby/classes/XMP/StringInputMethod.html","","<p>A custom InputMethod class used by XMP for evaluating string io.\n",null,1],["YAML","","ruby/classes/YAML.html","","<p>YAML Ain’t Markup Language\n<p>This module provides a Ruby interface for data serialization in YAML format. …\n",null,1],["YAML::DBM","","ruby/classes/YAML/DBM.html","","<p>YAML + DBM = YDBM\n<p>YAML::DBM provides the same interface as ::DBM.\n<p>However, while DBM only allows strings …\n",null,1],["YAML::Store","","ruby/classes/YAML/Store.html","","<p>YAML::Store provides the same functionality as PStore, except it uses YAML to dump objects instead of …\n",null,1],["ZeroDivisionError","","ruby/classes/ZeroDivisionError.html","","<p>Raised when attempting to divide an integer by 0.\n\n<pre><code>42 / 0   #=&gt; ZeroDivisionError: divided by 0\n</code></pre>\n<p>Note that …\n",null,1],["Zlib","","ruby/classes/Zlib.html","","<p>This module provides access to the zlib library. Zlib is designed to be a portable, free, general-purpose, …\n",null,1],["Zlib::BufError","","ruby/classes/Zlib/BufError.html","","<p>Subclass of Zlib::Error when zlib returns a Z_BUF_ERROR.\n<p>Usually if no progress is possible.\n",null,1],["Zlib::DataError","","ruby/classes/Zlib/DataError.html","","<p>Subclass of Zlib::Error when zlib returns a Z_DATA_ERROR.\n<p>Usually if a stream was prematurely freed.\n",null,1],["Zlib::Deflate","","ruby/classes/Zlib/Deflate.html","","<p>Zlib::Deflate is the class for compressing data.  See Zlib::ZStream for more information.\n",null,1],["Zlib::Error","","ruby/classes/Zlib/Error.html","","<p>The superclass for all exceptions raised by Ruby/zlib.\n<p>The following exceptions are defined as subclasses …\n",null,1],["Zlib::GzipFile","","ruby/classes/Zlib/GzipFile.html","","<p>Zlib::GzipFile is an abstract class for handling a gzip formatted compressed file. The operations are …\n",null,1],["Zlib::GzipFile::CRCError","","ruby/classes/Zlib/GzipFile/CRCError.html","","<p>Raised when the CRC checksum recorded in gzip file footer is not equivalent to the CRC checksum of the …\n",null,1],["Zlib::GzipFile::Error","","ruby/classes/Zlib/GzipFile/Error.html","","<p>Base class of errors that occur when processing GZIP files.\n",null,1],["Zlib::GzipFile::LengthError","","ruby/classes/Zlib/GzipFile/LengthError.html","","<p>Raised when the data length recorded in the gzip file footer is not equivalent to the length of the actual …\n",null,1],["Zlib::GzipFile::NoFooter","","ruby/classes/Zlib/GzipFile/NoFooter.html","","<p>Raised when gzip file footer is not found.\n",null,1],["Zlib::GzipReader","","ruby/classes/Zlib/GzipReader.html","","<p>Zlib::GzipReader is the class for reading a gzipped file.  GzipReader should be used as an IO, or -IO-like, …\n",null,1],["Zlib::GzipWriter","","ruby/classes/Zlib/GzipWriter.html","","<p>Zlib::GzipWriter is a class for writing gzipped files.  GzipWriter should be used with an instance of …\n",null,1],["Zlib::InProgressError","","ruby/classes/Zlib/InProgressError.html","","<p>Subclass of Zlib::Error. This error is raised when the zlib stream is currently in progress.\n<p>For example: …\n",null,1],["Zlib::Inflate","","ruby/classes/Zlib/Inflate.html","","<p>Zlib:Inflate is the class for decompressing compressed data.  Unlike Zlib::Deflate, an instance of this …\n",null,1],["Zlib::MemError","","ruby/classes/Zlib/MemError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_MEM_ERROR, usually if there was not enough memory.\n",null,1],["Zlib::NeedDict","","ruby/classes/Zlib/NeedDict.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_NEED_DICT if a preset dictionary is needed at this point. …\n",null,1],["Zlib::StreamEnd","","ruby/classes/Zlib/StreamEnd.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_STREAM_END is return if the end of the compressed data has …\n",null,1],["Zlib::StreamError","","ruby/classes/Zlib/StreamError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_STREAM_ERROR, usually if the stream state was inconsistent. …\n",null,1],["Zlib::VersionError","","ruby/classes/Zlib/VersionError.html","","<p>Subclass of Zlib::Error\n<p>When zlib returns a Z_VERSION_ERROR, usually if the zlib library version is incompatible …\n",null,1],["Zlib::ZStream","","ruby/classes/Zlib/ZStream.html","","<p>Zlib::ZStream is the abstract class for the stream which handles the compressed data. The operations …\n",null,1],["[]","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-5B-5D","(key)","<p>Returns a parameter for the given <code>key</code>. If not found, returns <code>nil</code>.\n\n<pre><code>params = ActionController::Parameters.new(person: ...\n</code></pre>\n",null,0],["[]","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-5B-5D","(k)","",null,0],["[]","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-5B-5D","(key)","<p>Returns the value for the given key mapped to @env.\n",null,0],["[]","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-5B-5D","(i)","",null,0],["[]","ActionView::Template::Types","rails/classes/ActionView/Template/Types.html#method-c-5B-5D","(type)","",null,0],["[]","ActionView::Template::Types::Type","rails/classes/ActionView/Template/Types/Type.html#method-c-5B-5D","(type)","",null,0],["[]","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-5B-5D","(attribute)","<p>When passed a symbol or a name of a method, returns an array of errors for the method.\n\n<pre><code>person.errors[:name] ...\n</code></pre>\n",null,0],["[]","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-5B-5D","(attr_name)","<p>Returns the value of the attribute identified by <code>attr_name</code> after it has been typecast (for example, “2004-12-12” …\n",null,0],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-5B-5D","(name)","<p>Returns a ColumnDefinition for the column with name <code>name</code>.\n",null,0],["[]","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-i-5B-5D","(x)","",null,0],["[]","ActiveRecord::FixtureSet::ClassCache","rails/classes/ActiveRecord/FixtureSet/ClassCache.html#method-i-5B-5D","(fs_name)","",null,0],["[]","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-c-5B-5D","(version)","",null,0],["[]","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-5B-5D","(idx)","",null,0],["[]","ActiveRecord::Schema","rails/classes/ActiveRecord/Schema.html#method-c-5B-5D","(version)","",null,0],["[]","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D","(key)","<p>Same as <code>Hash#[]</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["[]","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D","(key)","<p>Same as <code>Hash#[]</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["[]","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-5B-5D","(*args)","",null,0],["[]","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-5B-5D","(*args)","",null,0],["[]","ActiveSupport::OrderedOptions","rails/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D","(key)","",null,0],["[]","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-5B-5D","(*args)","",null,0],["[]","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-5B-5D","(arg)","<p>Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of …\n",null,0],["[]","Mime","rails/classes/Mime.html#method-c-5B-5D","(type)","",null,0],["[]","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-5B-5D","(path)","",null,0],["[]","Array","ruby/classes/Array.html#method-i-5B-5D","(*args)","<p>Returns elements from <code>self</code>; does not modify <code>self</code>.\n<p>When a single Integer argument <code>index</code> is given, returns …\n",null,1],["[]","Array","ruby/classes/Array.html#method-c-5B-5D","(*args)","<p>Returns a new array populated with the given objects.\n\n<pre><code>Array.[]( 1, &#39;a&#39;, /^A/)  # =&gt; [1, &quot;a&quot;, /^A/]\nArray[ ...\n</code></pre>\n",null,1],["[]","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-5B-5D","(key)","<p>Get the value for the parameter with a given key.\n<p>If the parameter has multiple values, only the first …\n",null,1],["[]","CGI::Session","ruby/classes/CGI/Session.html#method-i-5B-5D","(key)","<p>Retrieve the session data for key <code>key</code>.\n",null,1],["[]","CSV::Row","ruby/classes/CSV/Row.html#method-i-5B-5D","(header_or_index, minimum_index = 0)","",null,1],["[]","CSV::Table","ruby/classes/CSV/Table.html#method-i-5B-5D","(index_or_header)","<p>Returns data from the table;  does not modify the table.\n<p>Fetch a Row by Its Integer Index &mdash; \n<p>Form: <code>table[n]</code> …\n",null,1],["[]","Continuation","ruby/classes/Continuation.html#method-i-5B-5D","(*args)","<p>Invokes the continuation. The program continues from the end of the #callcc block. If no arguments are …\n",null,1],["[]","DRb::DRbSSLSocket::SSLConfig","ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-5B-5D","(key)","<p>A convenience method to access the values like a Hash\n",null,1],["[]","DRb::GW","ruby/classes/DRb/GW.html#method-i-5B-5D","(key)","<p>Retrieves <code>key</code> from the GW\n",null,1],["[]","Dir","ruby/classes/Dir.html#method-c-5B-5D","(*args, base: nil, sort: true)","<p>Calls Dir.glob with argument <code>patterns</code> and the values of keyword arguments <code>base</code> and <code>sort</code>; returns the …\n",null,1],["[]","ENV","ruby/classes/ENV.html#method-c-5B-5D","(p1)","<p>Returns the value for the environment variable <code>name</code> if it exists:\n\n<pre><code>ENV[&#39;foo&#39;] = &#39;0&#39;\nENV[&#39;foo&#39;] # =&gt; &quot;0&quot;\n</code></pre>\n",null,1],["[]","Fiber","ruby/classes/Fiber.html#method-c-5B-5D","(p1)","<p>Returns the value of the fiber storage variable identified by <code>key</code>.\n<p>The <code>key</code> must be a symbol, and the value …\n",null,1],["[]","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-i-5B-5D","(*args)","<p>Fetch struct member <code>name</code> if only one argument is specified. If two arguments are specified, the first …\n",null,1],["[]","Fiddle::CompositeHandler","ruby/classes/Fiddle/CompositeHandler.html#method-i-5B-5D","(symbol)","<p>See Fiddle::CompositeHandler.sym\n",null,1],["[]","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-c-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.  The function is searched via dlsym on RTLD_NEXT …\n",null,1],["[]","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-5B-5D","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,1],["[]","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-5B-5D","(name)","<p>Returns the function mapped to <code>name</code>, that was created by either Fiddle::Importer.extern or Fiddle::Importer.bind …\n",null,1],["[]","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-c-5B-5D","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it as a Fiddle::Pointer object.\n",null,1],["[]","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-5B-5D","(p1, p2 = v2)","<p>Returns integer stored at <em>index</em>.\n<p>If <em>start</em> and <em>length</em> are given, a string containing the bytes from <em>start</em> …\n",null,1],["[]","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-5B-5D","(command_name)","<p>Returns a Command instance for <code>command_name</code>\n",null,1],["[]","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-5B-5D","(key)","<p>Return the configuration information for <code>key</code>.\n",null,1],["[]","Hash","ruby/classes/Hash.html#method-c-5B-5D","(*args)","<p>Returns a new Hash object populated with the given objects, if any. See Hash::new.\n<p>With no argument, returns …\n",null,1],["[]","Hash","ruby/classes/Hash.html#method-i-5B-5D","(p1)","<p>Returns the value associated with the given <code>key</code>, if found:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh[:foo] # =&gt; 0\n</code></pre>\n",null,1],["[]","IRB::EvalHistory","ruby/classes/IRB/EvalHistory.html#method-i-5B-5D","(idx)","<p>Get one item of the content (both positive and negative indexes work).\n",null,1],["[]","Integer","ruby/classes/Integer.html#method-i-5B-5D","(*args)","<p>Returns a slice of bits from <code>self</code>.\n<p>With argument <code>offset</code>, returns the bit at the given offset, where offset …\n",null,1],["[]","JSON","ruby/classes/JSON.html#method-c-5B-5D","(object, opts = {})","<p>If <code>object</code> is a String, calls JSON.parse with <code>object</code> and <code>opts</code> (see method #parse):\n\n<pre><code>json = &#39;[0, 1, null]&#39; ...\n</code></pre>\n",null,1],["[]","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-5B-5D","(p1)","<p>Returns the value returned by method <code>name</code>.\n",null,1],["[]","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-i-5B-5D","(name)","",null,1],["[]","MatchData","ruby/classes/MatchData.html#method-i-5B-5D","(p1, p2 = v2)","<p>When arguments <code>index</code>, +start and <code>length</code>, or <code>range</code> are given, returns match and captures in the style …\n",null,1],["[]","Method","ruby/classes/Method.html#method-i-5B-5D","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the method’s return value.\n\n<pre><code>m = 12.method(&quot;+&quot;) ...\n</code></pre>\n",null,1],["[]","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-5B-5D","(key)","<p>Returns the string field value for the case-insensitive field <code>key</code>, or <code>nil</code> if there is no such key; see …\n",null,1],["[]","OLEProperty","ruby/classes/OLEProperty.html#method-i-5B-5D","(*args)","",null,1],["[]","ObjectSpace::WeakKeyMap","ruby/classes/ObjectSpace/WeakKeyMap.html#method-i-5B-5D","(p1)","<p>Returns the value associated with the given <code>key</code> if found.\n<p>If <code>key</code> is not found, returns <code>nil</code>.\n",null,1],["[]","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-5B-5D","(p1)","<p>Returns the value associated with the given <code>key</code> if found.\n<p>If <code>key</code> is not found, returns <code>nil</code>.\n",null,1],["[]","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-i-5B-5D","(p1)","<p>Gets all key-value pairs in a specific <em>section</em> from the current configuration.\n<p>Given the following configurating …\n",null,1],["[]","OpenStruct","ruby/classes/OpenStruct.html#method-i-5B-5D","(name)","<p>Returns the value of an attribute, or <code>nil</code> if there is no such attribute.\n\n<pre><code>require &quot;ostruct&quot;\nperson = OpenStruct.new(&quot;name&quot; ...\n</code></pre>\n",null,1],["[]","PStore","ruby/classes/PStore.html#method-i-5B-5D","(key)","<p>Returns the value for the given <code>key</code> if the key exists. <code>nil</code> otherwise; if not <code>nil</code>, the returned value …\n",null,1],["[]","Proc","ruby/classes/Proc.html#method-i-5B-5D","(*args)","<p>Invokes the block, setting the block’s parameters to the values in <em>params</em> using something close to …\n",null,1],["[]","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-5B-5D","(k)","",null,1],["[]","Ractor","ruby/classes/Ractor.html#method-i-5B-5D","(sym)","<p>get a value from ractor-local storage\n",null,1],["[]","Reline::Face","ruby/classes/Reline/Face.html#method-c-5B-5D","(name)","",null,1],["[]","Reline::Face::Config","ruby/classes/Reline/Face/Config.html#method-i-5B-5D","(name)","",null,1],["[]","Reline::History","ruby/classes/Reline/History.html#method-i-5B-5D","(index)","",null,1],["[]","Resolv::DNS::SvcParams","ruby/classes/Resolv/DNS/SvcParams.html#method-i-5B-5D","(key)","<p>Get SvcParam for the given <code>key</code> in this list.\n",null,1],["[]","Rinda::Tuple","ruby/classes/Rinda/Tuple.html#method-i-5B-5D","(k)","<p>Accessor method for elements of the tuple.\n",null,1],["[]","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-5B-5D","(key)","<p>Retrieves <code>key</code> from the tuple.\n",null,1],["[]","Ripper::Lexer::Elem","ruby/classes/Ripper/Lexer/Elem.html#method-i-5B-5D","(index)","",null,1],["[]","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-5B-5D","(index)","",null,1],["[]","Set","ruby/classes/Set.html#method-c-5B-5D","(*ary)","<p>Creates a new set containing the given objects.\n\n<pre><code>Set[1, 2]                   # =&gt; #&lt;Set: {1, 2}&gt;\nSet[1, ...\n</code></pre>\n",null,1],["[]","String","ruby/classes/String.html#method-i-5B-5D","(*args)","<p>Returns the substring of <code>self</code> specified by the arguments. See examples at String Slices.\n",null,1],["[]","StringScanner","ruby/classes/StringScanner.html#method-i-5B-5D","(p1)","<p>Returns the n-th subgroup in the most recent match.\n\n<pre><code>s = StringScanner.new(&quot;Fri Dec 12 1975 14:39&quot;)\ns.scan(/(\\w+) ...\n</code></pre>\n",null,1],["[]","Struct","ruby/classes/Struct.html#method-i-5B-5D","(p1)","<p>Returns a value from <code>self</code>.\n<p>With symbol or string argument <code>name</code> given, returns the value for the named …\n",null,1],["[]","Symbol","ruby/classes/Symbol.html#method-i-5B-5D","(*args)","<p>Equivalent to <code>symbol.to_s[]</code>; see String#[].\n",null,1],["[]","SyntaxSuggest::LexAll","ruby/classes/SyntaxSuggest/LexAll.html#method-i-5B-5D","(index)","",null,1],["[]","Thread","ruby/classes/Thread.html#method-i-5B-5D","(p1)","<p>Attribute Reference—Returns the value of a fiber-local variable (current thread’s root fiber if …\n",null,1],["[]","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-5B-5D","(*args)","<p>Returns the value of Collection specified by a1, a2,.…\n\n<pre><code>dict = WIN32OLE.new(&#39;Scripting.Dictionary&#39;)\ndict.add(&#39;ruby&#39;, ...\n</code></pre>\n",null,1],["[]","WIN32OLE::Variant","ruby/classes/WIN32OLE/Variant.html#method-i-5B-5D","(*args)","<p>Returns the element of WIN32OLE_VARIANT object(OLE array). This method is available only when the variant …\n",null,1],["[]","Warning","ruby/classes/Warning.html#method-c-5B-5D","(p1)","<p>Returns the flag to show the warning messages for <code>category</code>. Supported categories are:\n<p><code>:deprecated</code>  &mdash; deprecation …\n",null,1],["[]","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-5B-5D","(name, *rtype)","<p>Read a registry value named name and return its value data. The class of the value is the same as the …\n",null,1],["[]","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-5B-5D","( key )","<p>Return value associated with <code>key</code> from database.\n<p>Returns <code>nil</code> if there is no such <code>key</code>.\n<p>See #fetch for more …\n",null,1],["[]=","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a value to a given <code>key</code>. The given key may still get filtered out when #permit is called.\n",null,0],["[]=","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-5B-5D-3D","(k, v)","",null,0],["[]=","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-5B-5D-3D","(key, value)","<p>Sets the given value for the key mapped to @env.\n",null,0],["[]=","ActionMailer::Base::LateAttachmentsProxy","rails/classes/ActionMailer/Base/LateAttachmentsProxy.html#method-i-5B-5D-3D","(_name, _content)","",null,0],["[]=","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-5B-5D-3D","(attr_name, value)","<p>Updates the attribute identified by <code>attr_name</code> with the specified <code>value</code>.\n\n<pre><code>class Person &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["[]=","ActiveRecord::Encryption::Properties","rails/classes/ActiveRecord/Encryption/Properties.html#method-i-5B-5D-3D","(key, value)","<p>Set a value for a given key\n<p>It will raise an <code>EncryptedContentIntegrity</code> if the value exists\n",null,0],["[]=","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-i-5B-5D-3D","(k, v)","",null,0],["[]=","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new\nhash[:key] = &#39;value&#39;\n</code></pre>\n",null,0],["[]=","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new\nhash[:key] = &#39;value&#39;\n</code></pre>\n",null,0],["[]=","ActiveSupport::OrderedOptions","rails/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D-3D","(key, value)","",null,0],["[]=","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-5B-5D-3D","(*args)","",null,0],["[]=","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-5B-5D-3D","(path, value)","",null,0],["[]=","Array","ruby/classes/Array.html#method-i-5B-5D-3D","(*args)","<p>Assigns elements in <code>self</code>; returns the given <code>object</code>.\n<p>When Integer argument <code>index</code> is given, assigns <code>object</code> …\n",null,1],["[]=","CGI::Session","ruby/classes/CGI/Session.html#method-i-5B-5D-3D","(key, val)","<p>Set the session data for key <code>key</code>.\n",null,1],["[]=","CSV::Row","ruby/classes/CSV/Row.html#method-i-5B-5D-3D","(*args)","<p>Assigns the field value for the given <code>index</code> or <code>header</code>; returns <code>value</code>.\n<p>Assign field value by Integer index: …\n",null,1],["[]=","CSV::Table","ruby/classes/CSV/Table.html#method-i-5B-5D-3D","(index_or_header, value)","<p>Puts data onto the table.\n<p>Set a Row by Its Integer Index &mdash; \n<p>Form: <code>table[n] = row</code>, <code>n</code> an Integer, <code>row</code> a CSV::Row …\n",null,1],["[]=","DRb::GW","ruby/classes/DRb/GW.html#method-i-5B-5D-3D","(key, v)","<p>Stores value <code>v</code> at <code>key</code> in the GW\n",null,1],["[]=","ENV","ruby/classes/ENV.html#method-c-5B-5D-3D","(p1, p2)","<p>Creates, updates, or deletes the named environment variable, returning the value. Both <code>name</code> and <code>value</code> …\n",null,1],["[]=","Fiber","ruby/classes/Fiber.html#method-c-5B-5D-3D","(p1, p2)","<p>Assign <code>value</code> to the fiber storage variable identified by <code>key</code>. The variable is created if it doesn’t …\n",null,1],["[]=","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-i-5B-5D-3D","(*args)","<p>Set struct member <code>name</code>, to value <code>val</code>. If more arguments are specified, writes the string of bytes to …\n",null,1],["[]=","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-5B-5D-3D","(p1, p2, p3 = v3)","<p>Set the value at <code>index</code> to <code>int</code>.\n<p>Or, set the memory at <code>start</code> until <code>length</code> with the contents of <code>string</code>, the …\n",null,1],["[]=","Fiddle::StructArray","ruby/classes/Fiddle/StructArray.html#method-i-5B-5D-3D","(index, value)","",null,1],["[]=","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-5B-5D-3D","(key, value)","<p>Set configuration option <code>key</code> to <code>value</code>.\n",null,1],["[]=","Hash","ruby/classes/Hash.html#method-i-5B-5D-3D","(p1, p2)","<p>Associates the given <code>value</code> with the given <code>key</code>; returns <code>value</code>.\n<p>If the given <code>key</code> exists, replaces its value …\n",null,1],["[]=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-5B-5D-3D","(p1, p2)","<p>Sets the attribute name to value.\n",null,1],["[]=","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-i-5B-5D-3D","(name, value)","",null,1],["[]=","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-5B-5D-3D","(key, val)","<p>Sets the value for the case-insensitive <code>key</code> to <code>val</code>, overwriting the previous value if the field exists; …\n",null,1],["[]=","OLEProperty","ruby/classes/OLEProperty.html#method-i-5B-5D-3D","(*args)","",null,1],["[]=","ObjectSpace::WeakKeyMap","ruby/classes/ObjectSpace/WeakKeyMap.html#method-i-5B-5D-3D","(p1, p2)","<p>Associates the given <code>value</code> with the given <code>key</code>\n<p>The reference to <code>key</code> is weak, so when there is no other …\n",null,1],["[]=","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-5B-5D-3D","(p1, p2)","<p>Associates the given <code>value</code> with the given <code>key</code>.\n<p>If the given <code>key</code> exists, replaces its value with the given …\n",null,1],["[]=","OpenStruct","ruby/classes/OpenStruct.html#method-i-5B-5D-3D","(name, value)","<p>Sets the value of an attribute.\n\n<pre><code>require &quot;ostruct&quot;\nperson = OpenStruct.new(&quot;name&quot; =&gt; &quot;John Smith&quot;, &quot;age&quot; ...\n</code></pre>\n",null,1],["[]=","PStore","ruby/classes/PStore.html#method-i-5B-5D-3D","(key, value)","<p>Creates or replaces the value for the given <code>key</code>:\n\n<pre><code>example_store do |store|\n  temp.transaction do\n    temp[:bat] ...\n</code></pre>\n",null,1],["[]=","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-5B-5D-3D","(k, v)","",null,1],["[]=","Ractor","ruby/classes/Ractor.html#method-i-5B-5D-3D","(sym, val)","<p>set a value in ractor-local storage\n",null,1],["[]=","Reline::History","ruby/classes/Reline/History.html#method-i-5B-5D-3D","(index, val)","",null,1],["[]=","String","ruby/classes/String.html#method-i-5B-5D-3D","(*args)","<p>Replaces all, some, or none of the contents of <code>self</code>; returns <code>new_string</code>. See String Slices.\n<p>A few examples: …\n",null,1],["[]=","Struct","ruby/classes/Struct.html#method-i-5B-5D-3D","(p1, p2)","<p>Assigns a value to a member.\n<p>With symbol or string argument <code>name</code> given, assigns the given <code>value</code> to the …\n",null,1],["[]=","Thread","ruby/classes/Thread.html#method-i-5B-5D-3D","(p1, p2)","<p>Attribute Assignment—Sets or creates the value of a fiber-local variable, using either a symbol or …\n",null,1],["[]=","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-5B-5D-3D","(*args)","<p>Sets the value to WIN32OLE object specified by a1, a2, …\n\n<pre><code>dict = WIN32OLE.new(&#39;Scripting.Dictionary&#39;) ...\n</code></pre>\n",null,1],["[]=","WIN32OLE::Variant","ruby/classes/WIN32OLE/Variant.html#method-i-5B-5D-3D","(*args)","<p>Set the element of WIN32OLE_VARIANT object(OLE array) to val. This method is available only when the …\n",null,1],["[]=","Warning","ruby/classes/Warning.html#method-c-5B-5D-3D","(p1, p2)","<p>Sets the warning flags for <code>category</code>. See Warning.[] for the categories.\n",null,1],["[]=","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-5B-5D-3D","(name, rtype, value = nil)","<p>Write value to a registry value named name.\n<p>If wtype is specified, the value type is it. Otherwise, the …\n",null,1],["[]=","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-5B-5D-3D","( key, val )","<p>Set <code>key</code> to <code>value</code> in database.\n<p><code>value</code> will be converted to YAML before storage.\n<p>See #store for more information. …\n",null,1],["^","FalseClass","ruby/classes/FalseClass.html#method-i-5E","(p1)","<p>Returns <code>false</code> if <code>object</code> is <code>nil</code> or <code>false</code>, <code>true</code> otherwise:\n\n<pre><code>nil ^ nil        # =&gt; false\nnil ^ false      ...\n</code></pre>\n",null,1],["^","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-5E","(p1)","<p>Generate a new buffer the same size as the source by applying the binary XOR operation to the source, …\n",null,1],["^","Integer","ruby/classes/Integer.html#method-i-5E","(p1)","<p>Bitwise EXCLUSIVE OR; each bit in the result is 1 if the corresponding bits in <code>self</code> and <code>other</code> are different, …\n",null,1],["^","NilClass","ruby/classes/NilClass.html#method-i-5E","(p1)","<p>Returns <code>false</code> if <code>object</code> is <code>nil</code> or <code>false</code>, <code>true</code> otherwise:\n\n<pre><code>nil ^ nil        # =&gt; false\nnil ^ false      ...\n</code></pre>\n",null,1],["^","Set","ruby/classes/Set.html#method-i-5E","(enum)","<p>Returns a new set containing elements exclusive between the set\nand the given enumerable object. <code>(set</code> ...\n",null,1],["^","TrueClass","ruby/classes/TrueClass.html#method-i-5E","(p1)","<p>Returns <code>true</code> if <code>object</code> is <code>false</code> or <code>nil</code>, <code>false</code> otherwise:\n\n<pre><code>true ^ Object.new # =&gt; false\ntrue ^ false    ...\n</code></pre>\n",null,1],["__callee__","Kernel","ruby/classes/Kernel.html#method-i-__callee__","()","<p>Returns the called name of the current method as a Symbol. If called outside of a method, it returns …\n",null,1],["__dir__","Kernel","ruby/classes/Kernel.html#method-i-__dir__","()","<p>Returns the canonicalized absolute path of the directory of the file from which this method is called. …\n",null,1],["__drbref","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-__drbref","()","<p>Get the reference of the object, if local.\n",null,1],["__drbref","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-__drbref","()","<p>Get the reference of the object, if local.\n",null,1],["__drburi","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-__drburi","()","<p>Get the URI of the remote object.\n",null,1],["__drburi","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-__drburi","()","<p>Get the URI of the remote object.\n",null,1],["__evaluate__","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-i-__evaluate__","(context, statements, file = nil, line = nil)","",null,1],["__exit__","IRB::Context","ruby/classes/IRB/Context.html#method-i-__exit__","(ret = 0)","",null,1],["__getobj__","Delegator","ruby/classes/Delegator.html#method-i-__getobj__","()","<p>This method must be overridden by subclasses and should return the object method calls are being delegated …\n",null,1],["__getobj__","SimpleDelegator","ruby/classes/SimpleDelegator.html#method-i-__getobj__","()","<p>Returns the current object method calls are being delegated to.\n",null,1],["__id__","BasicObject","ruby/classes/BasicObject.html#method-i-__id__","()","<p>Returns an integer identifier for <code>obj</code>.\n<p>The same number will be returned on all calls to <code>object_id</code> for …\n",null,1],["__id__","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-__id__","(*args)","",null,1],["__method__","Kernel","ruby/classes/Kernel.html#method-i-__method__","()","<p>Returns the name at the definition of the current method as a Symbol. If called outside of a method, …\n",null,1],["__raise__","Delegator","ruby/classes/Delegator.html#method-i-__raise__","","",null,1],["__send__","BasicObject","ruby/classes/BasicObject.html#method-i-__send__","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments specified. When the method is identified …\n",null,1],["__send__","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-__send__","(*args)","",null,1],["__setobj__","Delegator","ruby/classes/Delegator.html#method-i-__setobj__","(obj)","<p>This method must be overridden by subclasses and change the object delegate to <em>obj</em>.\n",null,1],["__setobj__","SimpleDelegator","ruby/classes/SimpleDelegator.html#method-i-__setobj__","(obj)","<p>Changes the delegate object to <em>obj</em>.\n<p>It’s important to note that this does <strong>not</strong> cause SimpleDelegator’s …\n",null,1],["_call_seq","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-_call_seq","()","<p>call_seq without deduplication and alias lookup.\n",null,1],["_current_page?","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-_current_page-3F","(options = nil, check_parameters: false, **options_as_kwargs)","",null,0],["_dump","ActionText::Serialization","rails/classes/ActionText/Serialization.html#method-i-_dump","(*)","",null,0],["_dump","BigDecimal","ruby/classes/BigDecimal.html#method-i-_dump","(p1 = v1)","<p>Returns a string representing the marshalling of <code>self</code>. See module Marshal.\n\n<pre><code>inf = BigDecimal(&#39;Infinity&#39;) ...\n</code></pre>\n",null,1],["_dump","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-_dump","(lv)","<p>Marshall this object.\n<p>The URI and ref of the object are marshalled.\n",null,1],["_dump","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-_dump","(lv)","<p>Marshall this object.\n<p>The URI and ref of the object are marshalled.\n",null,1],["_dump","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-_dump","(limit)","<p>Dump only crucial instance variables.\n",null,1],["_dump","OpenSSL::Marshal","ruby/classes/OpenSSL/Marshal.html#method-i-_dump","(_level)","",null,1],["_dump","Singleton","ruby/classes/Singleton.html#method-i-_dump","(depth = -1)","<p>By default, do not retain any state when marshalling.\n",null,1],["_dump","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-_dump","(depth)","<p>marshalling is not allowed\n",null,1],["_enumerable_collect","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_collect","()","<p>Like Enumerable#map, but chains operation to be lazy-evaluated.\n\n<pre><code>(1..Float::INFINITY).lazy.map {|i| i**2 ...\n</code></pre>\n",null,1],["_enumerable_collect_concat","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_collect_concat","()","<p>Returns a new lazy enumerator with the concatenated results of running <code>block</code> once for every element in …\n",null,1],["_enumerable_drop","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_drop","(p1)","<p>Like Enumerable#drop, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_drop_while","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_drop_while","()","<p>Like Enumerable#drop_while, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_filter","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_filter","()","<p>Like Enumerable#select, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_filter_map","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_filter_map","()","<p>Like Enumerable#filter_map, but chains operation to be lazy-evaluated.\n\n<pre><code>(1..).lazy.filter_map { |i| i * ...\n</code></pre>\n",null,1],["_enumerable_find_all","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_find_all","()","<p>Like Enumerable#select, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_flat_map","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_flat_map","()","<p>Returns a new lazy enumerator with the concatenated results of running <code>block</code> once for every element in …\n",null,1],["_enumerable_grep","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_grep","(p1)","<p>Like Enumerable#grep, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_grep_v","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_grep_v","(p1)","<p>Like Enumerable#grep_v, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_map","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_map","()","<p>Like Enumerable#map, but chains operation to be lazy-evaluated.\n\n<pre><code>(1..Float::INFINITY).lazy.map {|i| i**2 ...\n</code></pre>\n",null,1],["_enumerable_reject","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_reject","()","<p>Like Enumerable#reject, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_select","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_select","()","<p>Like Enumerable#select, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_take","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_take","(p1)","<p>Like Enumerable#take, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_take_while","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_take_while","()","<p>Like Enumerable#take_while, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_uniq","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_uniq","()","<p>Like Enumerable#uniq, but chains operation to be lazy-evaluated.\n",null,1],["_enumerable_zip","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-_enumerable_zip","(*args)","<p>Like Enumerable#zip, but chains operation to be lazy-evaluated. However, if a block is given to zip, …\n",null,1],["_execute","DRb::ThreadObject","ruby/classes/DRb/ThreadObject.html#method-i-_execute","()","",null,1],["_fork","ActiveSupport::ForkTracker::ModernCoreExt","rails/classes/ActiveSupport/ForkTracker/ModernCoreExt.html#method-i-_fork","()","",null,0],["_fork","Process","ruby/classes/Process.html#method-c-_fork","()","<p>An internal API for fork. Do not call this method directly. Currently, this is called via Kernel#fork …\n",null,1],["_form.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/scaffold/templates/_form_html_erb_tt.html","","<p>&lt;%%= form_with(model: &lt;%= model_resource_name %&gt;) do |form| %&gt;\n\n<pre><code>&lt;%% if &lt;%= singular_table_name ...\n</code></pre>\n",null,0],["_get","ActiveSupport::OrderedOptions","rails/classes/ActiveSupport/OrderedOptions.html#method-i-_get","(key)","",null,0],["_getproperty","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-_getproperty","(p1, p2, p3)","<p>Runs the early binding method to get property. The 1st argument specifies dispatch ID, the 2nd argument …\n",null,1],["_gets_noecho","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-_gets_noecho","()","",null,1],["_helpers","AbstractController::Helpers","rails/classes/AbstractController/Helpers.html#method-i-_helpers","()","",null,0],["_helpers","ActionView::Rendering::ClassMethods","rails/classes/ActionView/Rendering/ClassMethods.html#method-i-_helpers","()","",null,0],["_helpers_for_modification","AbstractController::Helpers::ClassMethods","rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-_helpers_for_modification","()","",null,0],["_httpdate","Date","ruby/classes/Date.html#method-c-_httpdate","(p1, p2 = {})","<p>Returns a hash of values parsed from <code>string</code>, which should be a valid HTTP date format:\n\n<pre><code>d = Date.new(2001, ...\n</code></pre>\n",null,1],["_insert_callbacks","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks","(callbacks, block = nil)","<p>Take callback names and an optional callback proc, normalize them, then call the block with each callback. …\n",null,0],["_invoke","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-_invoke","(p1, p2, p3)","<p>Runs the early binding method. The 1st argument specifies dispatch ID, the 2nd argument specifies the …\n",null,1],["_iso8601","Date","ruby/classes/Date.html#method-c-_iso8601","(p1, p2 = {})","<p>Returns a hash of values parsed from <code>string</code>, which should contain an ISO 8601 formatted date:\n\n<pre><code>d = Date.new(2001, ...\n</code></pre>\n",null,1],["_jisx0301","Date","ruby/classes/Date.html#method-c-_jisx0301","(p1, p2 = {})","<p>Returns a hash of values parsed from <code>string</code>, which should be a valid JIS X 0301 date format:\n\n<pre><code>d = Date.new(2001, ...\n</code></pre>\n",null,1],["_layout_for","ActionView::Context","rails/classes/ActionView/Context.html#method-i-_layout_for","(name = nil)","<p>Encapsulates the interaction with the view flow so it returns the correct buffer on <code>yield</code>. This is usually …\n",null,0],["_layout_for","ActionView::Helpers::RenderingHelper","rails/classes/ActionView/Helpers/RenderingHelper.html#method-i-_layout_for","(*args, &block)","<p>Overrides _layout_for in the context object so it supports the case a block is passed to a partial.  …\n",null,0],["_load","BigDecimal","ruby/classes/BigDecimal.html#method-c-_load","(p1)","<p>Internal method used to provide marshalling support. See the Marshal module.\n",null,1],["_load","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-_load","(s)","<p>Unmarshall a marshalled DRbObject.\n<p>If the referenced object is located within the local server, then the …\n",null,1],["_load","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-_load","(s)","<p>Unmarshall a marshalled DRbObject.\n<p>If the referenced object is located within the local server, then the …\n",null,1],["_load","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-_load","(str)","<p>Load custom marshal format, re-initializing defaults as needed\n",null,1],["_load","OpenSSL::Marshal::ClassMethods","ruby/classes/OpenSSL/Marshal/ClassMethods.html#method-i-_load","(string)","",null,1],["_load","Singleton","ruby/classes/Singleton.html#method-c-_load","","<p>By default calls instance(). Override to retain singleton state.\n",null,1],["_normalize_args","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-_normalize_args","(action = nil, options = {})","<p>Normalize args by converting <code>render &quot;foo&quot;</code> to <code>render :action =&gt; &quot;foo&quot;</code> and <code>render</code> …\n",null,0],["_normalize_callback_options","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_normalize_callback_options","(options)","<p>If <code>:only</code> or <code>:except</code> are used, convert the options into the <code>:if</code> and <code>:unless</code> options of ActiveSupport::Callbacks …\n",null,0],["_normalize_options","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-_normalize_options","(options)","<p>Normalize options.\n",null,0],["_parse","Date","ruby/classes/Date.html#method-c-_parse","(*args)","<p><strong>Note</strong>: This method recognizes many forms in <code>string</code>, but it is not a validator. For formats, see “Specialized …\n",null,1],["_prepare_context","ActionView::Context","rails/classes/ActionView/Context.html#method-i-_prepare_context","()","<p>Prepares the context by setting the appropriate instance variables.\n",null,0],["_process_options","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-_process_options","(options)","<p>Process extra options.\n",null,0],["_render_to_body_with_renderer","ActionController::Renderers","rails/classes/ActionController/Renderers.html#method-i-_render_to_body_with_renderer","(options)","",null,0],["_render_with_renderer_method_name","ActionController::Renderers","rails/classes/ActionController/Renderers.html#method-c-_render_with_renderer_method_name","(key)","",null,0],["_rfc2822","Date","ruby/classes/Date.html#method-c-_rfc2822","(p1, p2 = {})","<p>Returns a hash of values parsed from <code>string</code>, which should be a valid RFC 2822 date format:\n\n<pre><code>d = Date.new(2001, ...\n</code></pre>\n",null,1],["_rfc3339","Date","ruby/classes/Date.html#method-c-_rfc3339","(p1, p2 = {})","<p>Returns a hash of values parsed from <code>string</code>, which should be a valid RFC 3339 format:\n\n<pre><code>d = Date.new(2001, ...\n</code></pre>\n",null,1],["_rfc822","Date","ruby/classes/Date.html#method-c-_rfc822","(p1, p2 = {})","<p>Returns a hash of values parsed from <code>string</code>, which should be a valid RFC 2822 date format:\n\n<pre><code>d = Date.new(2001, ...\n</code></pre>\n",null,1],["_routes","AbstractController::UrlFor","rails/classes/AbstractController/UrlFor.html#method-i-_routes","()","",null,0],["_routes","AbstractController::UrlFor::ClassMethods","rails/classes/AbstractController/UrlFor/ClassMethods.html#method-i-_routes","()","",null,0],["_routes","ActionView::Rendering::ClassMethods","rails/classes/ActionView/Rendering/ClassMethods.html#method-i-_routes","()","",null,0],["_routes_context","ActionDispatch::Routing::UrlFor","rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-_routes_context","()","",null,0],["_run","ActionView::Base","rails/classes/ActionView/Base.html#method-i-_run","(method, template, locals, buffer, add_to_stack: true, &block)","",null,0],["_segments","Gem::Version","ruby/classes/Gem/Version.html#method-i-_segments","()","",null,1],["_set_detail","ActionView::LookupContext::DetailsCache","rails/classes/ActionView/LookupContext/DetailsCache.html#method-i-_set_detail","(key, value)","",null,0],["_set_last_value","IRB::Context","ruby/classes/IRB/Context.html#method-i-_set_last_value","(value)","<p>See #set_last_value\n",null,1],["_set_wrapper_options","ActionController::ParamsWrapper::Options::ClassMethods","rails/classes/ActionController/ParamsWrapper/Options/ClassMethods.html#method-i-_set_wrapper_options","(options)","",null,0],["_setproperty","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-_setproperty","(p1, p2, p3)","<p>Runs the early binding method to set property. The 1st argument specifies dispatch ID, the 2nd argument …\n",null,1],["_sorted_requirements","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-_sorted_requirements","()","",null,1],["_strptime","Date","ruby/classes/Date.html#method-c-_strptime","(*args)","<p>Returns a hash of values parsed from <code>string</code> according to the given <code>format</code>:\n\n<pre><code>Date._strptime(&#39;2001-02-03&#39;, ...\n</code></pre>\n",null,1],["_strptime","DateTime","ruby/classes/DateTime.html#method-c-_strptime","(*args)","<p>Parses the given representation of date and time with the given template, and returns a hash of parsed …\n",null,1],["_tilde_requirements","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-_tilde_requirements","()","",null,1],["_to_partial_path","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-c-_to_partial_path","()","",null,0],["_url_for_modules","ActionView::Helpers::UrlHelper::ClassMethods","rails/classes/ActionView/Helpers/UrlHelper/ClassMethods.html#method-i-_url_for_modules","()","",null,0],["_view_paths","ActionView::ViewPaths::ClassMethods","rails/classes/ActionView/ViewPaths/ClassMethods.html#method-i-_view_paths","()","",null,0],["_view_paths=","ActionView::ViewPaths::ClassMethods","rails/classes/ActionView/ViewPaths/ClassMethods.html#method-i-_view_paths-3D","(paths)","",null,0],["_wait","Ractor::Selector","ruby/classes/Ractor/Selector.html#method-i-_wait","(p1, p2, p3, p4)","",null,1],["_with_routes","ActionDispatch::Routing::UrlFor","rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-_with_routes","(routes)","",null,0],["_xmlschema","Date","ruby/classes/Date.html#method-c-_xmlschema","(p1, p2 = {})","<p>Returns a hash of values parsed from <code>string</code>, which should be a valid XML date format:\n\n<pre><code>d = Date.new(2001, ...\n</code></pre>\n",null,1],["`","Kernel","ruby/classes/Kernel.html#method-i-60","(p1)","<p>Returns the <code>$stdout</code> output from running <code>command</code> in a subshell; sets global variable <code>$?</code> to the process …\n",null,1],["a","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-a","(href = \"\")","<p>Generate an Anchor element as a string.\n<p><code>href</code> can either be a string, giving the URL for the HREF attribute, …\n",null,1],["abbrev","Abbrev","ruby/classes/Abbrev.html#method-c-abbrev","(words, pattern = nil)","<p>Given a set of strings, calculate the set of unambiguous abbreviations for those strings, and return …\n",null,1],["abbrev","Array","ruby/classes/Array.html#method-i-abbrev","(pattern = nil)","<p>Calculates the set of unambiguous abbreviations for the strings in <code>self</code>.\n\n<pre><code>require &#39;abbrev&#39;\n%w{ car cone ...\n</code></pre>\n",null,1],["abbreviate","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-abbreviate","()","<p>Abbreviate the spec for downloading.  Abbreviated specs are only used for searching, downloading and …\n",null,1],["abort","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-abort","()","",null,0],["abort","Kernel","ruby/classes/Kernel.html#method-i-abort","(*args)","<p>Terminates execution immediately, effectively by calling <code>Kernel.exit(false)</code>.\n<p>If string argument <code>msg</code> is …\n",null,1],["abort","OptionParser","ruby/classes/OptionParser.html#method-i-abort","(mesg = $!)","",null,1],["abort","PStore","ruby/classes/PStore.html#method-i-abort","()","<p>Exits the current transaction block, discarding any changes specified in the transaction block.\n<p>Raises …\n",null,1],["abort","Process","ruby/classes/Process.html#method-c-abort","(*args)","<p>Terminates execution immediately, effectively by calling <code>Kernel.exit(false)</code>.\n<p>If string argument <code>msg</code> is …\n",null,1],["abort_on_exception","Thread","ruby/classes/Thread.html#method-c-abort_on_exception","()","<p>Returns the status of the global “abort on exception” condition.\n<p>The default is <code>false</code>.\n<p>When set …\n",null,1],["abort_on_exception","Thread","ruby/classes/Thread.html#method-i-abort_on_exception","()","<p>Returns the status of the thread-local “abort on exception” condition for this <code>thr</code>.\n<p>The default …\n",null,1],["abort_on_exception=","Thread","ruby/classes/Thread.html#method-i-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, if this <code>thr</code> is aborted by an exception, the raised exception will be re-raised in the …\n",null,1],["abort_on_exception=","Thread","ruby/classes/Thread.html#method-c-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, if any thread is aborted by an exception, the raised exception will be re-raised in …\n",null,1],["abs","BigDecimal","ruby/classes/BigDecimal.html#method-i-abs","()","<p>Returns the BigDecimal absolute value of <code>self</code>:\n\n<pre><code>BigDecimal(&#39;5&#39;).abs  # =&gt; 0.5e1\nBigDecimal(&#39;-3&#39;).abs # ...\n</code></pre>\n",null,1],["abs","Complex","ruby/classes/Complex.html#method-i-abs","()","<p>Returns the absolute value (magnitude) for <code>self</code>; see polar coordinates:\n\n<pre><code>Complex.polar(-1, 0).abs # =&gt; ...\n</code></pre>\n",null,1],["abs","Float","ruby/classes/Float.html#method-i-abs","()","<p>Returns the absolute value of <code>self</code>:\n\n<pre><code>(-34.56).abs # =&gt; 34.56\n-34.56.abs   # =&gt; 34.56\n34.56.abs    # =&gt; ...\n</code></pre>\n",null,1],["abs","Integer","ruby/classes/Integer.html#method-i-abs","()","<p>Returns the absolute value of <code>self</code>.\n\n<pre><code>(-12345).abs # =&gt; 12345\n-12345.abs   # =&gt; 12345\n12345.abs    # =&gt; ...\n</code></pre>\n",null,1],["abs","Numeric","ruby/classes/Numeric.html#method-i-abs","()","<p>Returns the absolute value of <code>self</code>.\n\n<pre><code>12.abs        #=&gt; 12\n(-34.56).abs  #=&gt; 34.56\n-34.56.abs    #=&gt; 34.56\n</code></pre>\n",null,1],["abs","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-abs","()","",null,1],["abs","Rational","ruby/classes/Rational.html#method-i-abs","()","<p>Returns the absolute value of <code>rat</code>.\n\n<pre><code>(1/2r).abs    #=&gt; (1/2)\n(-1/2r).abs   #=&gt; (1/2)\n</code></pre>\n",null,1],["abs2","Complex","ruby/classes/Complex.html#method-i-abs2","()","<p>Returns square of the absolute value (magnitude) for <code>self</code>; see polar coordinates:\n\n<pre><code>Complex.polar(2, 2).abs2 ...\n</code></pre>\n",null,1],["abs2","Numeric","ruby/classes/Numeric.html#method-i-abs2","()","<p>Returns the square of <code>self</code>.\n",null,1],["absolute","URI::Generic","ruby/classes/URI/Generic.html#method-i-absolute","()","",null,1],["absolute?","Pathname","ruby/classes/Pathname.html#method-i-absolute-3F","()","<p>Predicate method for testing whether a path is absolute.\n<p>It returns <code>true</code> if the pathname begins with a …\n",null,1],["absolute?","Resolv::DNS::Name","ruby/classes/Resolv/DNS/Name.html#method-i-absolute-3F","()","<p>True if this name is absolute.\n",null,1],["absolute?","URI::Generic","ruby/classes/URI/Generic.html#method-i-absolute-3F","()","<p>Returns true if URI has a scheme (e.g. http:// or https://) specified.\n",null,1],["absolute_path","File","ruby/classes/File.html#method-c-absolute_path","(*args)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced from the current working directory …\n",null,1],["absolute_path","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-absolute_path","()","<p>Returns the absolute path of this instruction sequence.\n<p><code>nil</code> if the iseq was evaluated from a string.\n<p>For …\n",null,1],["absolute_path","Thread::Backtrace::Location","ruby/classes/Thread/Backtrace/Location.html#method-i-absolute_path","()","<p>Returns the full file path of this frame.\n<p>Same as #path, except that it will return absolute path even …\n",null,1],["absolute_path?","File","ruby/classes/File.html#method-c-absolute_path-3F","(p1)","<p>Returns <code>true</code> if <code>file_name</code> is an absolute path, and <code>false</code> otherwise.\n\n<pre><code>File.absolute_path?(&quot;c:/foo&quot;)     ...\n</code></pre>\n",null,1],["abstract!","AbstractController::Base","rails/classes/AbstractController/Base.html#method-c-abstract-21","()","<p>Define a controller as abstract. See internal_methods for more details.\n",null,0],["abstract_base_class.rb.tt","","rails/files/rails/activerecord/lib/rails/generators/active_record/model/templates/abstract_base_class_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= abstract_class_name %&gt; &lt; ApplicationRecord\n\n<pre><code>self.abstract_class ...\n</code></pre>\n",null,0],["abstract_class?","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-abstract_class-3F","()","<p>Returns whether this class is an abstract class or not.\n",null,0],["abstract_railtie?","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-abstract_railtie-3F","()","",null,0],["ac_arg_disable","OptionParser::AC","ruby/classes/OptionParser/AC.html#method-i-ac_arg_disable","(name, help_string, &block)","",null,1],["ac_arg_enable","OptionParser::AC","ruby/classes/OptionParser/AC.html#method-i-ac_arg_enable","(name, help_string, &block)","",null,1],["ac_arg_with","OptionParser::AC","ruby/classes/OptionParser/AC.html#method-i-ac_arg_with","(name, help_string, &block)","",null,1],["accept","DRb::DRbSSLSocket::SSLConfig","ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-accept","(tcp)","<p>Accept connection to IO <code>tcp</code>, with context of the current certificate configuration\n",null,1],["accept","OpenSSL::SSL::SSLServer","ruby/classes/OpenSSL/SSL/SSLServer.html#method-i-accept","()","<p>Works similar to TCPServer#accept.\n",null,1],["accept","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-accept","()","<p>Waits for a SSL/TLS client to initiate a handshake.\n",null,1],["accept","OptionParser","ruby/classes/OptionParser.html#method-i-accept","(*args, &blk)","<p>Directs to accept specified class <code>t</code>. The argument string is passed to the block in which it should be …\n",null,1],["accept","OptionParser","ruby/classes/OptionParser.html#method-c-accept","(*args, &blk)","<p>See #accept.\n",null,1],["accept","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-accept","(t, pat = /.*/m, &block)","<p>See OptionParser.accept.\n",null,1],["accept","Psych::Visitors::JSONTree","ruby/classes/Psych/Visitors/JSONTree.html#method-i-accept","(target)","",null,1],["accept","Psych::Visitors::RestrictedYAMLTree","ruby/classes/Psych/Visitors/RestrictedYAMLTree.html#method-i-accept","(target)","",null,1],["accept","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-i-accept","(target)","",null,1],["accept","Psych::Visitors::Visitor","ruby/classes/Psych/Visitors/Visitor.html#method-i-accept","(target)","",null,1],["accept","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-accept","(target)","",null,1],["accept","Socket","ruby/classes/Socket.html#method-i-accept","()","<p>Accepts a next connection. Returns a new Socket object and Addrinfo object.\n\n<pre><code>serv = Socket.new(:INET, :STREAM, ...\n</code></pre>\n",null,1],["accept","TCPServer","ruby/classes/TCPServer.html#method-i-accept","()","<p>Accepts an incoming connection. It returns a new TCPSocket object.\n\n<pre><code>TCPServer.open(&quot;127.0.0.1&quot;, 14641) ...\n</code></pre>\n",null,1],["accept","UNIXServer","ruby/classes/UNIXServer.html#method-i-accept","()","<p>Accepts an incoming connection. It returns a new UNIXSocket object.\n\n<pre><code>UNIXServer.open(&quot;/tmp/sock&quot;) {|serv| ...\n</code></pre>\n",null,1],["accept?","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-c-accept-3F","(blob)","<p>Implement this method in a concrete subclass. Have it return true when given a blob from which the analyzer …\n",null,0],["accept?","ActiveStorage::Analyzer::AudioAnalyzer","rails/classes/ActiveStorage/Analyzer/AudioAnalyzer.html#method-c-accept-3F","(blob)","",null,0],["accept?","ActiveStorage::Analyzer::ImageAnalyzer","rails/classes/ActiveStorage/Analyzer/ImageAnalyzer.html#method-c-accept-3F","(blob)","",null,0],["accept?","ActiveStorage::Analyzer::ImageAnalyzer::ImageMagick","rails/classes/ActiveStorage/Analyzer/ImageAnalyzer/ImageMagick.html#method-c-accept-3F","(blob)","",null,0],["accept?","ActiveStorage::Analyzer::ImageAnalyzer::Vips","rails/classes/ActiveStorage/Analyzer/ImageAnalyzer/Vips.html#method-c-accept-3F","(blob)","",null,0],["accept?","ActiveStorage::Analyzer::VideoAnalyzer","rails/classes/ActiveStorage/Analyzer/VideoAnalyzer.html#method-c-accept-3F","(blob)","",null,0],["accept?","ActiveStorage::Previewer","rails/classes/ActiveStorage/Previewer.html#method-c-accept-3F","(blob)","<p>Implement this method in a concrete subclass. Have it return true when given a blob from which the previewer …\n",null,0],["accept?","ActiveStorage::Previewer::MuPDFPreviewer","rails/classes/ActiveStorage/Previewer/MuPDFPreviewer.html#method-c-accept-3F","(blob)","",null,0],["accept?","ActiveStorage::Previewer::PopplerPDFPreviewer","rails/classes/ActiveStorage/Previewer/PopplerPDFPreviewer.html#method-c-accept-3F","(blob)","",null,0],["accept?","ActiveStorage::Previewer::VideoPreviewer","rails/classes/ActiveStorage/Previewer/VideoPreviewer.html#method-c-accept-3F","(blob)","",null,0],["accept_charset","CGI","ruby/classes/CGI.html#method-c-accept_charset","()","<p>Return the accept character set for all new CGI instances.\n",null,1],["accept_charset=","CGI","ruby/classes/CGI.html#method-c-accept_charset-3D","(accept_charset)","<p>Set the accept character set for all new CGI instances.\n",null,1],["accept_loop","Socket","ruby/classes/Socket.html#method-c-accept_loop","(*sockets)","<p>yield socket and client address for each a connection accepted via given sockets.\n<p>The arguments are a …\n",null,1],["accept_nonblock","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-accept_nonblock","(p1 = {})","<p>Initiates the SSL/TLS handshake as a server in non-blocking manner.\n\n<pre><code># emulates blocking accept\nbegin\n ...\n</code></pre>\n",null,1],["accept_nonblock","Socket","ruby/classes/Socket.html#method-i-accept_nonblock","(exception: true)","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for the underlying file descriptor. …\n",null,1],["accept_nonblock","TCPServer","ruby/classes/TCPServer.html#method-i-accept_nonblock","(exception: true)","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for the underlying file descriptor. …\n",null,1],["accept_nonblock","UNIXServer","ruby/classes/UNIXServer.html#method-i-accept_nonblock","(exception: true)","<p>Accepts an incoming connection using accept(2) after O_NONBLOCK is set for the underlying file descriptor. …\n",null,1],["accept_uri_http","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-accept_uri_http","()","<p>Allows Gem::OptionParser to handle HTTP URIs.\n",null,1],["accepts","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-accepts","()","<p>Returns the accepted MIME type for the request.\n",null,0],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","rails/classes/ActiveRecord/NestedAttributes/ClassMethods.html#method-i-accepts_nested_attributes_for","(*attr_names)","<p>Defines an attributes writer for the specified association(s).\n<p>Supported options:\n<p>:allow_destroy &mdash; If true, …\n",null,0],["accessed_fields","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-accessed_fields","()","<p>Returns the name of all database fields which have been read from this model. This can be useful in development …\n",null,0],["accessor","ActiveRecord::Type::Json","rails/classes/ActiveRecord/Type/Json.html#method-i-accessor","()","",null,0],["acos","Math","ruby/classes/Math.html#method-c-acos","(p1)","<p>Returns the arc cosine of <code>x</code>.\n<p>Domain: <code>[-1, 1]</code>.\n<p>Range: <code>[0, PI]</code>.\n",null,1],["acosh","Math","ruby/classes/Math.html#method-c-acosh","(p1)","<p>Returns the inverse hyperbolic cosine of <code>x</code>.\n<p>Domain: <code>[1, INFINITY]</code>.\n<p>Range: <code>[0, INFINITY]</code>.\n",null,1],["acronym","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-acronym","(word)","<p>Specifies a new acronym. An acronym must be specified as it will appear in a camelized string. An underscore …\n",null,0],["action","ActionController::Metal","rails/classes/ActionController/Metal.html#method-c-action","(name)","<p>Returns a Rack endpoint for the given action name.\n",null,0],["action","ActiveSupport::ActionableError::ClassMethods","rails/classes/ActiveSupport/ActionableError/ClassMethods.html#method-i-action","(name, &block)","<p>Defines an action that can resolve the error.\n\n<pre><code>class PendingMigrationError &lt; MigrationError\n  include ActiveSupport::ActionableError ...\n</code></pre>\n",null,0],["action_cable.js","","rails/files/rails/actioncable/app/assets/javascripts/action_cable_js.html","","<p>(function(global, factory) {\n\n<pre><code>typeof exports === &quot;object&quot; &amp;&amp; typeof module !== &quot;undefined&quot; ? factory(exports) ...\n</code></pre>\n",null,0],["action_cable_meta_tag","ActionCable::Helpers::ActionCableHelper","rails/classes/ActionCable/Helpers/ActionCableHelper.html#method-i-action_cable_meta_tag","()","<p>Returns an “action-cable-url” meta tag with the value of the URL specified in your configuration. …\n",null,0],["action_has_layout?","ActionView::Layouts","rails/classes/ActionView/Layouts.html#method-i-action_has_layout-3F","()","<p>Controls whether an action should be rendered using a layout. If you want to disable any <code>layout</code> settings …\n",null,0],["action_methods","AbstractController::Base","rails/classes/AbstractController/Base.html#method-c-action_methods","()","<p>A list of method names that should be considered actions. This includes all public instance methods on …\n",null,0],["action_methods","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-action_methods","()","<p>Delegates to the class’s ::action_methods.\n",null,0],["action_methods","AbstractController::UrlFor::ClassMethods","rails/classes/AbstractController/UrlFor/ClassMethods.html#method-i-action_methods","()","",null,0],["action_methods","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-c-action_methods","()","<p>A list of method names that should be considered actions. This includes all public instance methods on …\n",null,0],["action_name","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-action_name","","<p>Returns the name of the action this controller is processing.\n",null,0],["actioncable.esm.js","","rails/files/rails/actioncable/app/assets/javascripts/actioncable_esm_js.html","","<p>var adapters = {\n\n<pre><code>logger: self.console,\nWebSocket: self.WebSocket\n</code></pre>\n<p>};\n",null,0],["actioncable.js","","rails/files/rails/actioncable/app/assets/javascripts/actioncable_js.html","","<p>(function(global, factory) {\n\n<pre><code>typeof exports === &quot;object&quot; &amp;&amp; typeof module !== &quot;undefined&quot; ? factory(exports) ...\n</code></pre>\n",null,0],["actiontext.css","","rails/files/rails/actiontext/lib/generators/action_text/install/templates/actiontext_css.html","","<p>/*\n\n<pre><code>* Provides a drop-in pointer for the default Trix stylesheet that will format the toolbar and\n* the ...\n</code></pre>\n",null,0],["actiontext.js","","rails/files/rails/actiontext/app/assets/javascripts/actiontext_js.html","","<p>var commonjsGlobal = typeof globalThis !== ‘undefined’ ? globalThis : typeof window !== ‘undefined’ …\n",null,0],["actiontext.rake","","rails/files/rails/actiontext/lib/tasks/actiontext_rake.html","","<p># frozen_string_literal: true\n<p>desc “Copy over the migration, stylesheet, and JavaScript files” …\n",null,0],["activate","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-activate","()","<p>Activate this spec, registering it as a loaded spec and adding it’s lib paths to $LOAD_PATH. Returns …\n",null,1],["activate","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-activate","(session, on_fork: false)","",null,1],["activate_dependencies","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-activate_dependencies","()","<p>Activate all unambiguously resolved runtime dependencies of this spec. Add any ambiguous dependencies …\n",null,1],["activated?","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-activated-3F","()","<p>True when the gem has been activated\n",null,1],["activated_gem_paths","Gem","ruby/classes/Gem.html#method-c-activated_gem_paths","()","<p>The number of paths in the +$LOAD_PATH+ from activated gems. Used to prioritize <code>-I</code> and <code>ENV[&#39;RUBYLIB&#39;]</code> …\n",null,1],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-active-3F","()","<p>Checks whether the connection to the database is still active. This includes checking whether the database …\n",null,0],["active?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-active-3F","()","",null,0],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-active-3F","()","<p>Is this connection alive and ready for queries?\n",null,0],["active?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-active-3F","()","",null,0],["active?","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-active-3F","()","",null,1],["active_connection?","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-active_connection-3F","()","<p>Returns true if there is an open connection being used for the current thread.\n<p>This method only works …\n",null,0],["active_connections?","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-active_connections-3F","(role = ActiveRecord::Base.current_role)","<p>Returns true if there are any active connections among the connection pools that the ConnectionHandler …\n",null,0],["active_primary_key","ActiveRecord::Encryption::EnvelopeEncryptionKeyProvider","rails/classes/ActiveRecord/Encryption/EnvelopeEncryptionKeyProvider.html#method-i-active_primary_key","()","",null,0],["activestorage.esm.js","","rails/files/rails/activestorage/app/assets/javascripts/activestorage_esm_js.html","","<p>var sparkMd5 = {\n\n<pre><code>exports: {}\n</code></pre>\n<p>};\n",null,0],["activestorage.js","","rails/files/rails/activestorage/app/assets/javascripts/activestorage_js.html","","<p>(function(global, factory) {\n\n<pre><code>typeof exports === &quot;object&quot; &amp;&amp; typeof module !== &quot;undefined&quot; ? factory(exports) ...\n</code></pre>\n",null,0],["activestorage.rake","","rails/files/rails/activestorage/lib/tasks/activestorage_rake.html","","<p># frozen_string_literal: true\n<p>namespace :active_storage do\n\n<pre><code># Prevent migration installation task from showing ...\n</code></pre>\n",null,0],["acts_like?","Object","rails/classes/Object.html#method-i-acts_like-3F","(duck)","<p>Provides a way to check whether some class acts like some other class based on the existence of an appropriately-named …\n",null,0],["acts_like_date?","Date","rails/classes/Date.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,0],["acts_like_date?","DateTime","rails/classes/DateTime.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,0],["acts_like_string?","String","rails/classes/String.html#method-i-acts_like_string-3F","()","<p>Enables more predictable duck-typing on String-like classes. See <code>Object#acts_like?</code>.\n",null,0],["acts_like_time?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-acts_like_time-3F","()","<p>So that <code>self</code> <code>acts_like?(:time)</code>.\n",null,0],["acts_like_time?","DateTime","rails/classes/DateTime.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,0],["acts_like_time?","Time","rails/classes/Time.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,0],["adapter","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-adapter","()","",null,0],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-adapter_name","()","<p>Returns the human-readable name of the adapter. Use mixed case - one can always use downcase if needed. …\n",null,0],["adapters.js","","rails/files/rails/actioncable/app/javascript/action_cable/adapters_js.html","","<p>export default {\n\n<pre><code>logger: self.console,\nWebSocket: self.WebSocket\n</code></pre>\n<p>}\n",null,0],["add","ActionController::Renderers","rails/classes/ActionController/Renderers.html#method-c-add","(key, &block)","<p>Adds a new renderer to call within controller actions. A renderer is invoked by passing its name as an …\n",null,0],["add","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-add","(key, value)","<p>Add a value to a multivalued header like <code>Vary</code> or <code>Accept-Encoding</code>.\n",null,0],["add","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-add","(attribute, type = :invalid, **options)","<p>Adds a new error of <code>type</code> on <code>attribute</code>. More than one error can be added to the same <code>attribute</code>. If no …\n",null,0],["add","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-add","(element)","<p>Add <code>element</code> to the queue.  Never blocks.\n",null,0],["add","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-add","(table_name)","<p>Add internal cache for table with <code>table_name</code>.\n",null,0],["add","ActiveRecord::Encryption::Properties","rails/classes/ActiveRecord/Encryption/Properties.html#method-i-add","(other_properties)","",null,0],["add","ActiveSupport::Inflector::Inflections::Uncountables","rails/classes/ActiveSupport/Inflector/Inflections/Uncountables.html#method-i-add","(words)","",null,0],["add","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-add","(path, options = {})","",null,0],["add","ACL::ACLList","ruby/classes/ACL/ACLList.html#method-i-add","(str)","<p>Adds <code>str</code> as an ACLEntry in this list\n",null,1],["add","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-add","()","<p>Returns a new Tms object whose times are the sum of the times for this Tms object, plus the time required …\n",null,1],["add","BigDecimal","ruby/classes/BigDecimal.html#method-i-add","(p1, p2)","<p>Returns the BigDecimal sum of <code>self</code> and <code>value</code> with a precision of <code>ndigits</code> decimal digits.\n<p>When <code>ndigits</code> …\n",null,1],["add","DRb::WeakIdConv::WeakSet","ruby/classes/DRb/WeakIdConv/WeakSet.html#method-i-add","(obj)","",null,1],["add","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-add","(spec, source)","",null,1],["add","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-add","(*gemspecs)","<p>Adds <code>gemspecs</code> to the dependency list.\n",null,1],["add","Gem::Resolver::RequirementList","ruby/classes/Gem/Resolver/RequirementList.html#method-i-add","(req)","<p>Adds Resolver::DependencyRequest <code>req</code> to this requirements list.\n",null,1],["add","Logger","ruby/classes/Logger.html#method-i-add","(severity, message = nil, progname = nil)","<p>Creates a log entry, which may or may not be written to the log, depending on the entry’s severity …\n",null,1],["add","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-add","(p1)","<p>Performs elliptic curve point addition.\n",null,1],["add","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-add","(k, v)","",null,1],["add","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add","(klass, name, comment)","<p>Adds an item of type <code>klass</code> with the given <code>name</code> and <code>comment</code> to the context.\n<p>Currently only RDoc::Extend …\n",null,1],["add","Ractor::Selector","ruby/classes/Ractor/Selector.html#method-i-add","(p1)","",null,1],["add","Resolv::DNS::SvcParams","ruby/classes/Resolv/DNS/SvcParams.html#method-i-add","(param)","<p>Add the SvcParam <code>param</code> to this list, overwriting the existing one with the same key.\n",null,1],["add","Rinda::TupleBag::TupleBin","ruby/classes/Rinda/TupleBag/TupleBin.html#method-i-add","(tuple)","",null,1],["add","Set","ruby/classes/Set.html#method-i-add","(o)","<p>Adds the given object to the set and returns self. Use <code>merge</code> to\nadd many elements at once.\n\n<pre><code>Set[1, 2].add(3) ...\n</code></pre>\n",null,1],["add","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-i-add","(severity, message = nil, progname = nil, &block)","<p>Almost duplicates Logger#add.  <code>progname</code> is ignored.\n",null,1],["add","ThreadGroup","ruby/classes/ThreadGroup.html#method-i-add","(p1)","<p>Adds the given <code>thread</code> to this group, removing it from any other group to which it may have previously …\n",null,1],["add!","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-add-21","(&blk)","<p>An in-place version of #add. Changes the times of this Tms object by making it the sum of the times for …\n",null,1],["add?","Set","ruby/classes/Set.html#method-i-add-3F","(o)","<p>Adds the given object to the set and returns self. If the\nobject is already in the set, returns nil. ...\n",null,1],["add_GIT","Gem::RequestSet::Lockfile","ruby/classes/Gem/RequestSet/Lockfile.html#method-i-add_GIT","(out, git_requests)","",null,1],["add_action_mailbox_production_environment_config","ActionMailbox::Generators::InstallGenerator","rails/classes/ActionMailbox/Generators/InstallGenerator.html#method-i-add_action_mailbox_production_environment_config","()","",null,0],["add_alias","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-add_alias","(an_alias, context = nil)","<p>Adds <code>an_alias</code> as an alias for this method in <code>context</code>.\n",null,1],["add_alias","RDoc::Attr","ruby/classes/RDoc/Attr.html#method-i-add_alias","(an_alias, context)","<p>Add <code>an_alias</code> as an attribute in <code>context</code>.\n",null,1],["add_alias","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_alias","(an_alias)","<p>Adds <code>an_alias</code> that is automatically resolved\n",null,1],["add_alias","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-add_alias","(an_alias, context)","<p>Abstract method. Contexts in their building phase call this to register a new alias for this known method/attribute. …\n",null,1],["add_alias","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-add_alias","(var_name, class_obj, old_name, new_name, comment)","<p>Add alias, either from a direct alias definition, or from two method that reference the same function. …\n",null,1],["add_alias","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-add_alias","(as)","<p>Records the parsing of an alias <code>as</code>.\n",null,1],["add_alias","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-add_alias","(an_alias)","<p>Adds <code>an_alias</code> to <code>Object</code> instead of <code>self</code>.\n",null,1],["add_always_install","Gem::Resolver::InstallerSet","ruby/classes/Gem/Resolver/InstallerSet.html#method-i-add_always_install","(dependency)","<p>Looks up the latest specification for <code>dependency</code> and adds it to the always_install list.\n",null,1],["add_attribute","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-add_attribute","(p1)","",null,1],["add_attribute","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_attribute","(attribute)","<p>Adds <code>attribute</code> if not already there. If it is (as method(s) or attribute), updates the comment if it …\n",null,1],["add_attribute","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-add_attribute","(attribute)","<p>Records the parsing of an attribute <code>attribute</code>\n",null,1],["add_belongs_to","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_belongs_to","(table_name, ref_name, **options)","",null,0],["add_bind","ActiveRecord::StatementCache::PartialQueryCollector","rails/classes/ActiveRecord/StatementCache/PartialQueryCollector.html#method-i-add_bind","(obj)","",null,0],["add_bindir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-add_bindir","(executables)","<p>Returns an array with bindir attached to each executable in the <code>executables</code> list\n",null,1],["add_binds","ActiveRecord::StatementCache::PartialQueryCollector","rails/classes/ActiveRecord/StatementCache/PartialQueryCollector.html#method-i-add_binds","(binds, proc_for_binds = nil)","",null,0],["add_bulk_threshold_option","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_bulk_threshold_option","()","<p>Add the –bulk-threshold option\n",null,1],["add_c_enclosure","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-add_c_enclosure","(variable, namespace)","<p>Adds <code>module</code> as an enclosure (namespace) for the given <code>variable</code> for C files.\n",null,1],["add_c_variables","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-add_c_variables","(c_parser)","<p>Adds C variables from an RDoc::Parser::C\n",null,1],["add_cert","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-add_cert","(p1)","<p>Adds the OpenSSL::X509::Certificate <em>cert</em> to the certificate store.\n<p>See also the man page X509_STORE_add_cert …\n",null,1],["add_certid","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-add_certid","(p1)","<p>Adds <em>certificate_id</em> to the request.\n",null,1],["add_certificate","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-add_certificate","(p1)","",null,1],["add_certificate","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-add_certificate","(p1, p2, p3 = v3)","<p>Adds a certificate to the context. <em>pkey</em> must be a corresponding private key with <em>certificate</em>.\n<p>Multiple …\n",null,1],["add_channel","ActionCable::SubscriptionAdapter::PostgreSQL::Listener","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL/Listener.html#method-i-add_channel","(channel, on_success)","",null,0],["add_channel","ActionCable::SubscriptionAdapter::Redis::Listener","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener.html#method-i-add_channel","(channel, on_success)","",null,0],["add_channel","ActionCable::SubscriptionAdapter::SubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html#method-i-add_channel","(channel, on_success)","",null,0],["add_check_constraint","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_check_constraint","(table_name, expression, **options)","<p>Adds a new check constraint to the table. <code>expression</code> is a String representation of verifiable boolean …\n",null,0],["add_checksums","Gem::Package","ruby/classes/Gem/Package.html#method-i-add_checksums","(tar)","<p>Adds a checksum for each entry in the gem to checksums.yaml.gz.\n",null,1],["add_child","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-add_child","(state)","",null,0],["add_class","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_class","(class_type, given_name, superclass = '::Object')","<p>Adds a class named <code>given_name</code> with <code>superclass</code>.\n<p>Both <code>given_name</code> and <code>superclass</code> may contain ‘::’, …\n",null,1],["add_class","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-add_class","(klass)","<p>Records the parsing of a class <code>klass</code>\n",null,1],["add_class_or_module","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_class_or_module","(mod, self_hash, all_hash)","<p>Adds the class or module <code>mod</code> to the modules or classes Hash <code>self_hash</code>, and to <code>all_hash</code> (either <code>TopLevel::modules_hash</code> …\n",null,1],["add_clear_sources_option","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_clear_sources_option","()","<p>Add the –clear-sources option\n",null,1],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column","(table_name, column_name, type, **options)","<p>Add a new <code>type</code> column named <code>column_name</code> to <code>table_name</code>.\n<p>See ActiveRecord::ConnectionAdapters::TableDefinition.column …\n",null,0],["add_comment","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-add_comment","(comment, location)","<p>Adds <code>comment</code> to this ClassModule’s list of comments at <code>location</code>.  This method is preferred over  …\n",null,1],["add_common_option","Gem::Command","ruby/classes/Gem/Command.html#method-c-add_common_option","(*args, &handler)","",null,1],["add_constant","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_constant","(constant)","<p>Adds <code>constant</code> if not already there. If it is, updates the comment, value and/or is_alias_for of the known …\n",null,1],["add_constant","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-add_constant","(constant)","<p>Records the parsing of <code>constant</code>\n",null,1],["add_constant","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-add_constant","(constant)","<p>Adds <code>constant</code> to <code>Object</code> instead of <code>self</code>.\n",null,1],["add_converter","CSV::FieldsConverter","ruby/classes/CSV/FieldsConverter.html#method-i-add_converter","(name=nil, &converter)","",null,1],["add_crl","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-add_crl","(p1)","",null,1],["add_crl","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-add_crl","(p1)","<p>Adds the OpenSSL::X509::CRL <em>crl</em> to the store.\n<p>See also the man page X509_STORE_add_crl(3).\n",null,1],["add_data","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-add_data","(p1)","",null,1],["add_default_key_binding","Reline::Config","ruby/classes/Reline/Config.html#method-i-add_default_key_binding","(keystroke, target)","",null,1],["add_default_key_binding_by_keymap","Reline::Config","ruby/classes/Reline/Config.html#method-i-add_default_key_binding_by_keymap","(keymap, keystroke, target)","",null,1],["add_delivery_method","ActionMailer::DeliveryMethods::ClassMethods","rails/classes/ActionMailer/DeliveryMethods/ClassMethods.html#method-i-add_delivery_method","(symbol, klass, default_options = {})","<p>Adds a new delivery method through the given class using the given symbol as alias and the default options …\n",null,0],["add_dependency","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-add_dependency","(gem, *requirements)","",null,1],["add_development_dependency","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-add_development_dependency","(gem, *requirements)","<p>Adds a development dependency named <code>gem</code> with <code>requirements</code> to this gem.\n<p>Usage:\n\n<pre><code>spec.add_development_dependency ...\n</code></pre>\n",null,1],["add_dialog_proc","Reline::Core","ruby/classes/Reline/Core.html#method-i-add_dialog_proc","(name_sym, p, context = nil)","",null,1],["add_dialog_proc","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-add_dialog_proc","(name, p, context = nil)","",null,1],["add_dictionary","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-i-add_dictionary","(p1)","<p>Provide the inflate stream with a dictionary that may be required in the future.  Multiple dictionaries …\n",null,1],["add_entry","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-add_entry","(p1, p2, p3 = v3, p4 = {})","<p>Adds a new entry with the given <em>oid</em> and <em>value</em> to this name.  The <em>oid</em> is an object identifier defined …\n",null,1],["add_event_subscriber","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-c-add_event_subscriber","(event)","",null,0],["add_extend","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_extend","(ext)","<p>Adds extension module <code>ext</code> which should be an RDoc::Extend\n",null,1],["add_extension","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-add_extension","(p1)","",null,1],["add_extension","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-add_extension","(p1)","",null,1],["add_extension","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-add_extension","(p1)","",null,1],["add_extra_args","Gem::Command","ruby/classes/Gem/Command.html#method-i-add_extra_args","(args)","<p>Adds extra args from ~/.gemrc\n",null,1],["add_field","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-add_field","(key, val)","<p>Adds value <code>val</code> to the value array for field <code>key</code> if the field exists; creates the field with the given …\n",null,1],["add_file","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-add_file","(name, mode)","<p>Adds file <code>name</code> with permissions <code>mode</code>, and yields an IO for writing the file to\n",null,1],["add_file","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-add_file","(p1)","<p>Adds the certificates in <em>file</em> to the certificate store. <em>file</em> is the path to the file, and the file contains …\n",null,1],["add_file","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-add_file","(file)","<p>Records the parsing of <code>file</code>\n",null,1],["add_file","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-add_file","(absolute_name, relative_name: absolute_name, parser: nil)","<p>Adds the file with <code>name</code> as an RDoc::TopLevel to the store.  Returns the created RDoc::TopLevel.\n",null,1],["add_file_digest","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-add_file_digest","(name, mode, digest_algorithms)","<p>Adds <code>name</code> with permissions <code>mode</code> to the tar, yielding <code>io</code> for writing the file.  The <code>digest_algorithm</code> is …\n",null,1],["add_file_signed","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-add_file_signed","(name, mode, signer)","<p>Adds <code>name</code> with permissions <code>mode</code> to the tar, yielding <code>io</code> for writing the file.  The <code>signer</code> is used to …\n",null,1],["add_file_simple","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-add_file_simple","(name, mode, size)","<p>Add file <code>name</code> with permissions <code>mode</code> <code>size</code> bytes long.  Yields an IO to write the file to.\n",null,1],["add_filter","ActiveSupport::BacktraceCleaner","rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_filter","(&block)","<p>Adds a filter from the block provided. Each line in the backtrace will be mapped against this filter. …\n",null,0],["add_flash_types","ActionController::Flash::ClassMethods","rails/classes/ActionController/Flash/ClassMethods.html#method-i-add_flash_types","(*types)","<p>Creates new flash types. You can pass as many types as you want to create flash types other than the …\n",null,0],["add_foreign_key","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_foreign_key","(from_table, to_table, **options)","<p>Adds a new foreign key. <code>from_table</code> is the table with the key column, <code>to_table</code> contains the referenced …\n",null,0],["add_generator","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-c-add_generator","(klass)","<p>Add <code>klass</code> that can generate output after parsing\n",null,1],["add_html","RDoc::Markup","ruby/classes/RDoc/Markup.html#method-i-add_html","(tag, name)","<p>Add to the sequences recognized as general markup.\n",null,1],["add_include","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_include","(include)","<p>Adds included module <code>include</code> which should be an RDoc::Include\n",null,1],["add_include","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-add_include","(include)","<p>Adds <code>include</code> to <code>Object</code> instead of <code>self</code>.\n",null,1],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index","(table_name, column_name, **options)","<p>Adds a new index to the table. <code>column_name</code> can be a single Symbol, or an Array of Symbols.\n<p>The index will …\n",null,0],["add_install_update_options","Gem::InstallUpdateOptions","ruby/classes/Gem/InstallUpdateOptions.html#method-i-add_install_update_options","()","<p>Add the install/update options to the option parser.\n",null,1],["add_key_option","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-add_key_option","()","<p>Add the –key option\n",null,1],["add_length_validation_for_encrypted_columns","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-add_length_validation_for_encrypted_columns","()","",null,0],["add_local","Gem::Resolver::InstallerSet","ruby/classes/Gem/Resolver/InstallerSet.html#method-i-add_local","(dep_name, spec, source)","<p>Adds a local gem requested using <code>dep_name</code> with the given <code>spec</code> that can be loaded and installed using …\n",null,1],["add_local_remote_options","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_local_remote_options","()","<p>Add local/remote options to the command line parser.\n",null,1],["add_method","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_method","(method)","<p>Adds <code>method</code> if not already there. If it is (as method or attribute), updates the comment if it was empty. …\n",null,1],["add_method","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-add_method","(method)","<p>Records the parsing of <code>method</code>\n",null,1],["add_method","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-add_method","(method)","<p>Adds <code>method</code> to <code>Object</code> instead of <code>self</code>.\n",null,1],["add_module","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_module","(class_type, name)","<p>Adds a module named <code>name</code>.  If RDoc already knows <code>name</code> is a class then that class is returned instead. …\n",null,1],["add_module","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-add_module","(mod)","<p>Records the parsing of a module <code>mod</code>\n",null,1],["add_module_alias","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_module_alias","(from, from_name, to, file)","<p>Adds an alias from <code>from</code> (a class or module) to <code>name</code> which was defined in <code>file</code>.\n",null,1],["add_module_by_normal_module","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_module_by_normal_module","(mod)","<p>Adds a module by <code>RDoc::NormalModule</code> instance. See also #add_module.\n",null,1],["add_nonce","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-add_nonce","(p1 = v1)","<p>Adds <em>nonce</em> to this response.  If no nonce was provided a random nonce will be added.\n",null,1],["add_nonce","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-add_nonce","(p1 = v1)","<p>Adds a <em>nonce</em> to the OCSP request.  If no nonce is given a random one will be generated.\n<p>The nonce is used …\n",null,1],["add_observer","Observable","ruby/classes/Observable.html#method-i-add_observer","(observer, func=:update)","<p>Add <code>observer</code> as an observer on this object. So that it will receive notifications.\n<p><code>observer</code> &mdash; the object …\n",null,1],["add_oneshot_key_binding","Reline::Config","ruby/classes/Reline/Config.html#method-i-add_oneshot_key_binding","(keystroke, target)","",null,1],["add_option","Gem::Command","ruby/classes/Gem/Command.html#method-i-add_option","(*opts)","<p>Add a command-line option and handler to the command.\n<p>See Gem::OptionParser#make_switch for an explanation …\n",null,1],["add_otp_option","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-add_otp_option","()","<p>Add the –otp option\n",null,1],["add_owners","Gem::Commands::OwnerCommand","ruby/classes/Gem/Commands/OwnerCommand.html#method-i-add_owners","(name, owners)","",null,1],["add_path","Gem::Commands::EnvironmentCommand","ruby/classes/Gem/Commands/EnvironmentCommand.html#method-i-add_path","(out, path)","",null,1],["add_path","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-add_path","(p1)","<p>Adds <em>path</em> as the hash dir to be looked up by the store.\n<p>See also the man page X509_LOOKUP_hash_dir(3). …\n",null,1],["add_platform","Gem::PlatformMismatch","ruby/classes/Gem/PlatformMismatch.html#method-i-add_platform","(platform)","<p>append a platform to the list of mismatched platforms.\n<p>Platforms are added via this instead of injected …\n",null,1],["add_platform_option","Gem::VersionOption","ruby/classes/Gem/VersionOption.html#method-i-add_platform_option","(task = command, *wrap)","<p>Add the –platform option to the option parser.\n",null,1],["add_prerelease_option","Gem::VersionOption","ruby/classes/Gem/VersionOption.html#method-i-add_prerelease_option","(*wrap)","<p>Add the –prerelease option to the option parser.\n",null,1],["add_protocol","DRb::DRbProtocol","ruby/classes/DRb/DRbProtocol.html#method-c-add_protocol","(prot)","<p>Add a new protocol to the DRbProtocol module.\n",null,1],["add_proxy_option","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_proxy_option","()","<p>Add the –http-proxy option\n",null,1],["add_query_options","Gem::QueryUtils","ruby/classes/Gem/QueryUtils.html#method-i-add_query_options","()","",null,1],["add_recipient","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-add_recipient","(p1)","",null,1],["add_reference","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_reference","(table_name, ref_name, **options)","<p>Adds a reference. The reference column is a bigint by default, the <code>:type</code> option can be used to specify …\n",null,0],["add_regexp_handling","RDoc::Markup","ruby/classes/RDoc/Markup.html#method-i-add_regexp_handling","(pattern, name)","<p>Add to other inline sequences.  For example, we could add WikiWords using something like:\n\n<pre><code>parser.add_regexp_handling(/\\b([A-Z][a-z]+[A-Z]\\w+)/, ...\n</code></pre>\n",null,1],["add_renderer","ActionController","rails/classes/ActionController.html#method-c-add_renderer","(key, &block)","<p>See Renderers.add\n",null,0],["add_require","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_require","(require)","<p>Adds <code>require</code> to this context’s top level\n",null,1],["add_revoked","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-add_revoked","(p1)","",null,1],["add_route","ActionMailbox::Router","rails/classes/ActionMailbox/Router.html#method-i-add_route","(address, to:)","",null,0],["add_routes","ActionMailbox::Router","rails/classes/ActionMailbox/Router.html#method-i-add_routes","(routes)","",null,0],["add_row","CSV","ruby/classes/CSV.html#method-i-add_row","(row)","",null,1],["add_runtime_dependency","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-add_runtime_dependency","(gem, *requirements)","<p>Adds a runtime dependency named <code>gem</code> with <code>requirements</code> to this gem.\n<p>Usage:\n\n<pre><code>spec.add_runtime_dependency &#39;example&#39;, ...\n</code></pre>\n",null,1],["add_section","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_section","(title, comment = nil)","<p>Returns a section with <code>title</code>, creating it if it doesn’t already exist. <code>comment</code> will be appended to …\n",null,1],["add_security_option","Gem::SecurityOption","ruby/classes/Gem/SecurityOption.html#method-i-add_security_option","()","",null,1],["add_self_to_load_path","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-add_self_to_load_path","()","<p>Adds this spec’s require paths to LOAD_PATH, in the proper location.\n",null,1],["add_shebang_option!","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-add_shebang_option-21","()","<p>Small macro to add ruby as an option to the generator with proper default value plus an instance helper …\n",null,0],["add_signer","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-add_signer","(p1)","",null,1],["add_silencer","ActiveSupport::BacktraceCleaner","rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_silencer","(&block)","<p>Adds a silencer from the block provided. If the silencer returns <code>true</code> for a given line, it will be excluded …\n",null,0],["add_source","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-add_source","(source, options = {}, &block)","<p>Add the given source to <code>Gemfile</code>\n<p>If block is given, gem entries in block are wrapped into the source group. …\n",null,0],["add_source_gem","Gem::Resolver::SourceSet","ruby/classes/Gem/Resolver/SourceSet.html#method-i-add_source_gem","(name, source)","",null,1],["add_source_option","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_source_option","()","<p>Add the –source option\n",null,1],["add_spec","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-add_spec","(spec)","<p>Adds <code>spec</code> to the known specifications, keeping the collection properly sorted.\n",null,1],["add_specific_extra_args","Gem::Command","ruby/classes/Gem/Command.html#method-c-add_specific_extra_args","(cmd,args)","<p>Add a list of extra arguments for the given command.  <code>args</code> may be an array or a string to be split on …\n",null,1],["add_status","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-add_status","(p1, p2, p3, p4, p5, p6, p7)","<p>Adds a certificate status for <em>certificate_id</em>. <em>status</em> is the status, and must be one of these:\n<p>OpenSSL::OCSP::V_CERTSTATUS_GOOD …\n",null,1],["add_stress_to_class","GC","ruby/classes/GC.html#method-c-add_stress_to_class","(*args)","<p>Raises NoMemoryError when allocating an instance of the given classes.\n",null,1],["add_subscriber","ActionCable::SubscriptionAdapter::Async::AsyncSubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/Async/AsyncSubscriberMap.html#method-i-add_subscriber","(*)","",null,0],["add_subscriber","ActionCable::SubscriptionAdapter::SubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html#method-i-add_subscriber","(channel, subscriber, on_success)","",null,0],["add_symlink","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-add_symlink","(name, target, mode)","<p>Adds symlink <code>name</code> with permissions <code>mode</code>, linking to <code>target</code>.\n",null,1],["add_tags","ActionCable::Connection::TaggedLoggerProxy","rails/classes/ActionCable/Connection/TaggedLoggerProxy.html#method-i-add_tags","(*tags)","",null,0],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_timestamps","(table_name, **options)","<p>Adds timestamps (<code>created_at</code> and <code>updated_at</code>) columns to <code>table_name</code>. Additional options (like <code>:null</code>) are …\n",null,0],["add_to","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-add_to","(array, thing)","<p>Adds <code>thing</code> to the collection <code>array</code>\n",null,1],["add_to_classes_or_modules","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-add_to_classes_or_modules","(mod)","<p>Adds class or module <code>mod</code>. Used in the building phase by the Ruby parser.\n",null,1],["add_to_load_path","Gem","ruby/classes/Gem.html#method-c-add_to_load_path","(*paths)","<p>Add a list of paths to the $LOAD_PATH at the proper place.\n",null,1],["add_token","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-i-add_token","(token)","<p>Adds one <code>token</code> to the collected tokens\n",null,1],["add_token_listener","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-add_token_listener","(obj)","<p>Adds a token listener <code>obj</code>, but you should probably use token_listener\n",null,1],["add_tokens","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-i-add_tokens","(tokens)","<p>Adds <code>tokens</code> to the collected tokens\n",null,1],["add_trace_func","Thread","ruby/classes/Thread.html#method-i-add_trace_func","(p1)","<p>Adds <em>proc</em> as a handler for tracing.\n<p>See Thread#set_trace_func and Kernel#set_trace_func.\n",null,1],["add_transaction_record","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-add_transaction_record","(record, ensure_finalize = true)","<p>Register a record with the current transaction so that its after_commit and after_rollback callbacks …\n",null,0],["add_update_sources_option","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-add_update_sources_option","()","<p>Add the –update-sources option\n",null,1],["add_version_option","Gem::VersionOption","ruby/classes/Gem/VersionOption.html#method-i-add_version_option","(task = command, *wrap)","<p>Add the –version option to the option parser.\n",null,1],["add_word_pair","RDoc::Markup","ruby/classes/RDoc/Markup.html#method-i-add_word_pair","(start, stop, name)","<p>Add to the sequences used to add formatting to an individual word (such as <strong>bold</strong>).  Matching entries will …\n",null,1],["added?","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-added-3F","(attribute, type = :invalid, options = {})","<p>Returns <code>true</code> if an error matches provided <code>attribute</code> and <code>type</code>, or <code>false</code> otherwise. <code>type</code> is treated the …\n",null,0],["additional_message","OptionParser","ruby/classes/OptionParser.html#method-i-additional_message","(typ, opt)","<p>Returns additional info.\n",null,1],["addr","IPSocket","ruby/classes/IPSocket.html#method-i-addr","(*args)","<p>Returns the local address as an array which contains address_family, port, hostname and numeric_address. …\n",null,1],["addr","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-addr","()","",null,1],["addr","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-addr","()","<p>Returns the address of <em>ifaddr</em>. nil is returned if address is not available in <em>ifaddr</em>.\n",null,1],["addr","UNIXSocket","ruby/classes/UNIXSocket.html#method-i-addr","()","<p>Returns the local address as an array which contains address_family and unix_path.\n<p>Example\n\n<pre><code>serv = UNIXServer.new(&quot;/tmp/sock&quot;) ...\n</code></pre>\n",null,1],["address_resolve","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-address_resolve","(p1)","<p>Invoked by any method that performs a non-reverse DNS lookup. The most notable method is Addrinfo.getaddrinfo …\n",null,1],["adler","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-adler","()","<p>Returns the adler-32 checksum.\n",null,1],["adler32","Zlib","ruby/classes/Zlib.html#method-c-adler32","(*args)","<p>Calculates Adler-32 checksum for <code>string</code>, and returns updated value of <code>adler</code>. If <code>string</code> is omitted, it …\n",null,1],["adler32_combine","Zlib","ruby/classes/Zlib.html#method-c-adler32_combine","(p1, p2, p3)","<p>Combine two Adler-32 check values in to one.  <code>adler1</code> is the first Adler-32 value, <code>adler2</code> is the second …\n",null,1],["advance","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days according to the proleptic …\n",null,0],["advance","Date","rails/classes/Date.html#method-i-advance","(options)","<p>Provides precise Date calculations for years, months, and days. The <code>options</code> parameter takes a hash with …\n",null,0],["advance","DateTime","rails/classes/DateTime.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days. The <code>options</code> parameter takes …\n",null,0],["advance","Time","rails/classes/Time.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days according to the proleptic …\n",null,0],["advise","IO","ruby/classes/IO.html#method-i-advise","(p1, p2 = v2, p3 = v3)","<p>Invokes Posix system call posix_fadvise(2), which announces an intention to access data from the current …\n",null,1],["afamily","Addrinfo","ruby/classes/Addrinfo.html#method-i-afamily","()","<p>returns the address family as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).afamily == Socket::AF_INET #=&gt; ...\n</code></pre>\n",null,1],["after","ActionDispatch::Callbacks","rails/classes/ActionDispatch/Callbacks.html#method-c-after","(*args, &block)","",null,0],["after","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-after","(time = ::Time.current)","",null,0],["after","Rails::Initializable::Initializer","rails/classes/Rails/Initializable/Initializer.html#method-i-after","()","",null,0],["after?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-after-3F","(date_or_time)","<p>Returns true if the date/time falls after <code>date_or_time</code>.\n",null,0],["after_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-after_action","","<p>Append a callback after actions. See _insert_callbacks for parameter details.\n",null,0],["after_bundle","Rails::Generators::AppGenerator","rails/classes/Rails/Generators/AppGenerator.html#method-i-after_bundle","(&block)","<p>Registers a callback to be executed after bundle binstubs have run.\n\n<pre><code>after_bundle do\n  git add: &#39;.&#39;\nend\n</code></pre>\n",null,0],["after_class_unload","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-c-after_class_unload","(*args, &block)","<p>Registers a callback that will run immediately after the classes are unloaded.\n",null,0],["after_commit","ActiveRecord::Transactions::ClassMethods","rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_commit","(*args, &block)","<p>This callback is called after a record has been created, updated, or destroyed.\n<p>You can specify that the …\n",null,0],["after_create","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_create","","<p>Registers a callback to be called after a record is created. See ActiveRecord::Callbacks for more information. …\n",null,0],["after_create_commit","ActiveRecord::Transactions::ClassMethods","rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_create_commit","(*args, &block)","<p>Shortcut for <code>after_commit :hook, on: :create</code>.\n",null,0],["after_destroy","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_destroy","","<p>Registers a callback to be called after a record is destroyed. See ActiveRecord::Callbacks for more information. …\n",null,0],["after_destroy_commit","ActiveRecord::Transactions::ClassMethods","rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_destroy_commit","(*args, &block)","<p>Shortcut for <code>after_commit :hook, on: :destroy</code>.\n",null,0],["after_enqueue","ActiveJob::Callbacks::ClassMethods","rails/classes/ActiveJob/Callbacks/ClassMethods.html#method-i-after_enqueue","(*filters, &blk)","<p>Defines a callback that will get called right after the job is enqueued.\n\n<pre><code>class VideoProcessJob &lt; ActiveJob::Base ...\n</code></pre>\n",null,0],["after_find","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_find","","<p>Registers a callback to be called after a record is instantiated via a finder. See ActiveRecord::Callbacks …\n",null,0],["after_fork_parent","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-after_fork_parent","()","",null,1],["after_initialize","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_initialize","","<p>Registers a callback to be called after a record is instantiated. See ActiveRecord::Callbacks for more …\n",null,0],["after_initialize","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-after_initialize","(&block)","<p>Last configurable block to run. Called after frameworks initialize.\n",null,0],["after_perform","ActiveJob::Callbacks::ClassMethods","rails/classes/ActiveJob/Callbacks/ClassMethods.html#method-i-after_perform","(*filters, &blk)","<p>Defines a callback that will get called right after the job’s perform method has finished.\n\n<pre><code>class VideoProcessJob ...\n</code></pre>\n",null,0],["after_processing","ActionMailbox::Callbacks","rails/classes/ActionMailbox/Callbacks.html#method-i-after_processing","(*methods, &block)","",null,0],["after_reset","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-c-after_reset","(&block)","",null,0],["after_rollback","ActiveRecord::Transactions::ClassMethods","rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_rollback","(*args, &block)","<p>This callback is called after a create, update, or destroy are rolled back.\n<p>Please check the documentation …\n",null,0],["after_save","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_save","","<p>Registers a callback to be called after a record is saved. See ActiveRecord::Callbacks for more information. …\n",null,0],["after_save_commit","ActiveRecord::Transactions::ClassMethods","rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_save_commit","(*args, &block)","<p>Shortcut for <code>after_commit :hook, on: [ :create, :update ]</code>.\n",null,0],["after_subscribe","ActionCable::Channel::Callbacks::ClassMethods","rails/classes/ActionCable/Channel/Callbacks/ClassMethods.html#method-i-after_subscribe","(*methods, &block)","",null,0],["after_touch","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_touch","","<p>Registers a callback to be called after a record is touched. See ActiveRecord::Callbacks for more information. …\n",null,0],["after_unsubscribe","ActionCable::Channel::Callbacks::ClassMethods","rails/classes/ActionCable/Channel/Callbacks/ClassMethods.html#method-i-after_unsubscribe","(*methods, &block)","",null,0],["after_update","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_update","","<p>Registers a callback to be called after a record is updated. See ActiveRecord::Callbacks for more information. …\n",null,0],["after_update_commit","ActiveRecord::Transactions::ClassMethods","rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_update_commit","(*args, &block)","<p>Shortcut for <code>after_commit :hook, on: :update</code>.\n",null,0],["after_validation","ActiveModel::Validations::Callbacks::ClassMethods","rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-after_validation","(*args, &block)","<p>Defines a callback that will get called right after validation.\n\n<pre><code>class Person\n  include ActiveModel::Validations ...\n</code></pre>\n",null,0],["ago","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-ago","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the past as this Duration represents.\n",null,0],["ago","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-ago","(other)","<p>Subtracts an interval of time from the current object’s time and returns the result as a new TimeWithZone …\n",null,0],["ago","Date","rails/classes/Date.html#method-i-ago","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the …\n",null,0],["ago","DateTime","rails/classes/DateTime.html#method-i-ago","(seconds)","<p>Returns a new DateTime representing the time a number of seconds ago. Do not use this method in combination …\n",null,0],["ago","Time","rails/classes/Time.html#method-i-ago","(seconds)","<p>Returns a new Time representing the time a number of seconds ago, this is basically a wrapper around …\n",null,0],["ajax.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/utils/ajax_coffee.html","","<p>#= require ./csp #= require ./csrf #= require ./event\n<p>{ cspNonce, CSRFProtection, fire } = Rails\n<p>AcceptHeaders …\n",null,0],["ajd","Date","ruby/classes/Date.html#method-i-ajd","()","<p>Returns the astronomical Julian day number.  This is a fractional number, which is not adjusted by the …\n",null,1],["alert","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert","()","<p>Convenience accessor for <code>flash[:alert]</code>.\n",null,0],["alert","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-alert","(statement, question=nil)","<p>Display an informational alert.  Will ask <code>question</code> if it is not nil.\n",null,1],["alert","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-alert","(statement, question = nil)","<p>Displays an alert <code>statement</code>.  Asks a <code>question</code> if given.\n",null,1],["alert=","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert-3D","(message)","<p>Convenience accessor for <code>flash[:alert]=</code>.\n",null,0],["alert_error","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-alert_error","(statement, question=nil)","<p>Display an error message in a location expected to get error messages. Will ask <code>question</code> if it is not …\n",null,1],["alert_error","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-alert_error","(statement, question = nil)","<p>Displays an error <code>statement</code> to the error output location.  Asks a <code>question</code> if given.\n",null,1],["alert_warning","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-alert_warning","(statement, question=nil)","<p>Display a warning on stderr.  Will ask <code>question</code> if it is not nil.\n",null,1],["alert_warning","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-alert_warning","(statement, question = nil)","<p>Displays a warning <code>statement</code> to the warning output location.  Asks a <code>question</code> if given.\n",null,1],["algorithm","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-algorithm","()","<p>Returns the ‘short name’ of the object identifier that represents the algorithm that was used …\n",null,1],["algorithm","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-algorithm","()","<p>Returns the ‘short name’ of the object identifier representing the algorithm that was used to …\n",null,1],["algorithm=","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-algorithm-3D","(p1)","<p>Allows to set the object identifier  or the ‘short name’ of the algorithm that was used to create …\n",null,1],["alias","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-alias","(p1)","<p>Emit an alias with <code>anchor</code>.\n<p>See Psych::Handler#alias\n",null,1],["alias","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-alias","(anchor)","<p>Called when an alias is found to <code>anchor</code>.  <code>anchor</code> will be the name of the anchor found.\n<p>Example\n<p>Here we …\n",null,1],["alias","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-i-alias","(anchor)","",null,1],["alias?","Psych::Nodes::Alias","ruby/classes/Psych/Nodes/Alias.html#method-i-alias-3F","()","",null,1],["alias?","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-alias-3F","()","",null,1],["alias_attribute","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-alias_attribute","(new_name, old_name)","<p>Allows you to make aliases for attributes.\n\n<pre><code>class Person\n  include ActiveModel::AttributeMethods\n\n  attr_accessor ...\n</code></pre>\n",null,0],["alias_attribute","Module","rails/classes/Module.html#method-i-alias_attribute","(new_name, old_name)","<p>Allows you to make aliases for attributes, which includes getter, setter, and a predicate.\n\n<pre><code>class Content ...\n</code></pre>\n",null,0],["alias_extension","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-alias_extension","(old_ext, new_ext)","<p>Alias an extension to another extension. After this call, files ending “new_ext” will be parsed …\n",null,1],["alias_method","Module","ruby/classes/Module.html#method-i-alias_method","(p1, p2)","<p>Makes <em>new_name</em> a new copy of the method <em>old_name</em>. This can be used to retain access to methods that are …\n",null,1],["alias_mode?","Resolv::DNS::Resource::IN::ServiceBinding","ruby/classes/Resolv/DNS/Resource/IN/ServiceBinding.html#method-i-alias_mode-3F","()","<p>Whether this RR is in AliasMode.\n",null,1],["aliases","Encoding","ruby/classes/Encoding.html#method-c-aliases","()","<p>Returns the hash of available encoding alias and original encoding name.\n\n<pre><code>Encoding.aliases\n#=&gt; {&quot;BINARY&quot;=&gt;&quot;ASCII-8BIT&quot;, ...\n</code></pre>\n",null,1],["alien","Gem::Validator","ruby/classes/Gem/Validator.html#method-i-alien","(gems=[])","<p>Checks the gem directory for the following potential inconsistencies/problems:\n<p>Checksum gem itself\n<p>For …\n",null,1],["alignment","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-c-alignment","(types)","",null,1],["alive?","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-alive-3F","()","<p>Is this server alive?\n",null,1],["alive?","DRb::ExtServ","ruby/classes/DRb/ExtServ.html#method-i-alive-3F","()","",null,1],["alive?","DRb::ThreadObject","ruby/classes/DRb/ThreadObject.html#method-i-alive-3F","()","",null,1],["alive?","Fiber","ruby/classes/Fiber.html#method-i-alive-3F","()","<p>Returns true if the fiber can still be resumed (or transferred to). After finishing execution of the …\n",null,1],["alive?","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-alive-3F","()","<p>A TupleEntry is dead when it is canceled or expired.\n",null,1],["alive?","Thread","ruby/classes/Thread.html#method-i-alive-3F","()","<p>Returns <code>true</code> if <code>thr</code> is running or sleeping.\n\n<pre><code>thr = Thread.new { }\nthr.join                #=&gt; #&lt;Thread:0x401b3fb0 ...\n</code></pre>\n",null,1],["all","ActionController::MimeResponds::Collector","rails/classes/ActionController/MimeResponds/Collector.html#method-i-all","(*args, &block)","",null,0],["all","ActionMailer::Collector","rails/classes/ActionMailer/Collector.html#method-i-all","(*args, &block)","",null,0],["all","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-all","()","<p>Returns all mailer preview classes.\n",null,0],["all","ActiveRecord::Scoping::Named::ClassMethods","rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-all","()","<p>Returns an ActiveRecord::Relation scope object.\n\n<pre><code>posts = Post.all\nposts.size # Fires &quot;select count(*) from ...\n</code></pre>\n",null,0],["all","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-all","()","<p>Returns an array of all TimeZone objects. There are multiple TimeZone objects per time zone, in many …\n",null,0],["all","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-c-all","(klass)","<p>GET index\n",null,0],["all","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-all","()","<p>Returns all specifications. This method is discouraged from use. You probably want to use one of the …\n",null,1],["all=","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-all-3D","(specs)","<p>Sets the known specs to <code>specs</code>. Not guaranteed to work for you in the future. Use at your own risk. Caveat …\n",null,1],["all?","Mime::AllType","rails/classes/Mime/AllType.html#method-i-all-3F","()","",null,0],["all?","Mime::Type","rails/classes/Mime/Type.html#method-i-all-3F","()","",null,0],["all?","Array","ruby/classes/Array.html#method-i-all-3F","(*args)","<p>Returns <code>true</code> if all elements of <code>self</code> meet a given criterion.\n<p>If <code>self</code> has no element, returns <code>true</code> and …\n",null,1],["all?","Enumerable","ruby/classes/Enumerable.html#method-i-all-3F","(*args)","<p>Returns whether every element meets a given criterion.\n<p>If <code>self</code> has no element, returns <code>true</code> and argument …\n",null,1],["all_classes","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-all_classes","()","<p>Returns all classes discovered by RDoc\n",null,1],["all_classes_and_modules","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-all_classes_and_modules","()","<p>Returns all classes and modules discovered by RDoc\n",null,1],["all_commands_info","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-c-all_commands_info","()","",null,1],["all_connection_pools","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-all_connection_pools","()","",null,0],["all_day","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-all_day","()","<p>Returns a Range representing the whole day of the current date/time.\n",null,0],["all_files","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-all_files","()","<p>All TopLevels known to RDoc\n",null,1],["all_foreign_keys_valid?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-all_foreign_keys_valid-3F","()","<p>Override to check all foreign key constraints in a database.\n",null,0],["all_helpers_from_path","ActionController::Helpers::ClassMethods","rails/classes/ActionController/Helpers/ClassMethods.html#method-i-all_helpers_from_path","(path)","<p>Returns a list of helper names in a given path.\n\n<pre><code>ActionController::Base.all_helpers_from_path &#39;app/helpers&#39; ...\n</code></pre>\n",null,0],["all_modules","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-all_modules","()","<p>Returns all modules discovered by RDoc\n",null,1],["all_month","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-all_month","()","<p>Returns a Range representing the whole month of the current date/time.\n",null,0],["all_names","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-all_names","()","<p>Return full names of all specs in sorted order.\n",null,1],["all_paths","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-all_paths","()","",null,0],["all_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-all_quarter","()","<p>Returns a Range representing the whole quarter of the current date/time.\n",null,0],["all_specs","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-all_specs","()","",null,1],["all_symbols","Symbol","ruby/classes/Symbol.html#method-c-all_symbols","()","<p>Returns an array of all symbols currently in Ruby’s symbol table:\n\n<pre><code>Symbol.all_symbols.size    # =&gt; ...\n</code></pre>\n",null,1],["all_tokens","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-all_tokens","()","<p>Returns all tokens for the input script regardless the receiver node. Returns <code>nil</code> if <code>keep_tokens</code> is not …\n",null,1],["all_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-all_week","(start_day = Date.beginning_of_week)","<p>Returns a Range representing the whole week of the current date/time. Week starts on start_day, default …\n",null,0],["all_year","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-all_year","()","<p>Returns a Range representing the whole year of the current date/time.\n",null,0],["allbits?","Integer","ruby/classes/Integer.html#method-i-allbits-3F","(p1)","<p>Returns <code>true</code> if all bits that are set (=1) in <code>mask</code> are also set in <code>self</code>; returns <code>false</code> otherwise.\n<p>Example …\n",null,1],["allbits?","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-allbits-3F","(i)","",null,1],["allocate","Class","ruby/classes/Class.html#method-i-allocate","()","<p>Allocates space for a new object of <em>class</em>’s class and does not call initialize on the new instance. …\n",null,1],["allocation_class_path","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-allocation_class_path","(p1)","<p>Returns the class for the given <code>object</code>.\n\n<pre><code>class A\n  def foo\n    ObjectSpace::trace_object_allocations do ...\n</code></pre>\n",null,1],["allocation_generation","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-allocation_generation","(p1)","<p>Returns garbage collector generation for the given <code>object</code>.\n\n<pre><code>class B\n  include ObjectSpace\n\n  def foo\n  ...\n</code></pre>\n",null,1],["allocation_method_id","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-allocation_method_id","(p1)","<p>Returns the method identifier for the given <code>object</code>.\n\n<pre><code>class A\n  include ObjectSpace\n\n  def foo\n    trace_object_allocations ...\n</code></pre>\n",null,1],["allocation_sourcefile","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-allocation_sourcefile","(p1)","<p>Returns the source file origin from the given <code>object</code>.\n<p>See ::trace_object_allocations for more information …\n",null,1],["allocation_sourceline","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-allocation_sourceline","(p1)","<p>Returns the original line from source for from the given <code>object</code>.\n<p>See ::trace_object_allocations for more …\n",null,1],["allocations","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-allocations","()","<p>Returns the number of allocations made since the call to <code>start!</code> and the call to <code>finish!</code>\n",null,0],["allow","ActiveSupport::Deprecation::Reporting","rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-allow","(allowed_warnings = :all, if: true, &block)","<p>Allow previously disallowed deprecation warnings within the block. <code>allowed_warnings</code> can be an array containing …\n",null,0],["allow_addr?","ACL","ruby/classes/ACL.html#method-i-allow_addr-3F","(addr)","<p>Allow connections from addrinfo <code>addr</code>?  It must be formatted like Socket#peeraddr:\n\n<pre><code>[&quot;AF_INET&quot;, 10, &quot;lc630&quot;, ...\n</code></pre>\n",null,1],["allow_missing?","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-allow_missing-3F","(dependency)","",null,1],["allow_nan?","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-allow_nan-3F","()","<p>Returns true, if NaN, Infinity, and -Infinity should be generated, otherwise returns false.\n",null,1],["allow_reentry","TracePoint","ruby/classes/TracePoint.html#method-c-allow_reentry","()","<p>In general, while a TracePoint callback is running, other registered callbacks are not called to avoid …\n",null,1],["allow_socket?","ACL","ruby/classes/ACL.html#method-i-allow_socket-3F","(soc)","<p>Allow connections from Socket <code>soc</code>?\n",null,1],["alphanumeric","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-alphanumeric","(n = nil, chars: ALPHANUMERIC)","<p>Generate a random alphanumeric string.\n<p>The argument <em>n</em> specifies the length, in characters, of the alphanumeric …\n",null,1],["alpn_protocol","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-alpn_protocol","()","<p>Returns the ALPN protocol string that was finally selected by the server during the handshake.\n",null,1],["alt_name_or_x509_entry","Gem::Security","ruby/classes/Gem/Security.html#method-c-alt_name_or_x509_entry","(certificate, x509_entry)","",null,1],["ambiguous_width","Reline::Core","ruby/classes/Reline/Core.html#method-i-ambiguous_width","()","",null,1],["amjd","Date","ruby/classes/Date.html#method-i-amjd","()","<p>Returns the astronomical modified Julian day number.  This is a fractional number, which is not adjusted …\n",null,1],["analyze","ActiveStorage::Blob::Analyzable","rails/classes/ActiveStorage/Blob/Analyzable.html#method-i-analyze","()","<p>Extracts and stores metadata from the file associated with this blob using a relevant analyzer. Active …\n",null,0],["analyze_later","ActiveStorage::Blob::Analyzable","rails/classes/ActiveStorage/Blob/Analyzable.html#method-i-analyze_later","()","<p>Enqueues an ActiveStorage::AnalyzeJob which calls #analyze, or calls #analyze inline based on analyzer …\n",null,0],["analyze_later?","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-c-analyze_later-3F","()","<p>Implement this method in concrete subclasses. It will determine if blob analysis should be done in a …\n",null,0],["analyzed?","ActiveStorage::Blob::Analyzable","rails/classes/ActiveStorage/Blob/Analyzable.html#method-i-analyzed-3F","()","<p>Returns true if the blob has been analyzed.\n",null,0],["ancestors","Module","ruby/classes/Module.html#method-i-ancestors","()","<p>Returns a list of modules included/prepended in <em>mod</em> (including <em>mod</em> itself).\n\n<pre><code>module Mod\n  include Math ...\n</code></pre>\n",null,1],["ancestors","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-ancestors","()","<p>Ancestors list for this ClassModule: the list of included modules (classes will add their superclass …\n",null,1],["ancestors","RDoc::NormalClass","ruby/classes/RDoc/NormalClass.html#method-i-ancestors","()","<p>The ancestors of this class including modules.  Unlike Module#ancestors, this class is not included in …\n",null,1],["ancestors","RDoc::SingleClass","ruby/classes/RDoc/SingleClass.html#method-i-ancestors","()","<p>Adds the superclass to the included modules.\n",null,1],["ancestors","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-ancestors","()","<p>Ancestors cache accessor.  Maps a klass name to an Array of its ancestors in this store.  If Foo in this …\n",null,1],["and","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-and","(other)","<p>Returns a new relation, which is the logical intersection of this relation and the one passed as an argument. …\n",null,0],["and!","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-and-21","(p1)","<p>Modify the source buffer in place by applying the binary AND operation to the source, using the mask, …\n",null,1],["angle","Complex","ruby/classes/Complex.html#method-i-angle","()","<p>Returns the argument (angle) for <code>self</code> in radians; see polar coordinates:\n\n<pre><code>Complex.polar(3, Math::PI/2).arg ...\n</code></pre>\n",null,1],["angle","Float","ruby/classes/Float.html#method-i-angle","()","<p>Returns 0 if <code>self</code> is positive, Math::PI otherwise.\n",null,1],["angle","Numeric","ruby/classes/Numeric.html#method-i-angle","()","<p>Returns zero if <code>self</code> is positive, Math::PI otherwise.\n",null,1],["annotate","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-annotate","(*args)","<p>Adds an SQL comment to queries generated from this relation. For example:\n\n<pre><code>User.annotate(&quot;selecting user ...\n</code></pre>\n",null,0],["annotations","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-annotations","()","",null,0],["announce","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-announce","(message)","",null,0],["anonymous?","Module","rails/classes/Module.html#method-i-anonymous-3F","()","<p>A module may or may not have a name.\n\n<pre><code>module M; end\nM.name # =&gt; &quot;M&quot;\n\nm = Module.new\nm.name # =&gt; nil\n</code></pre>\n<p><code>anonymous?</code> …\n",null,0],["any","ActionController::MimeResponds::Collector","rails/classes/ActionController/MimeResponds/Collector.html#method-i-any","(*args, &block)","",null,0],["any","ActionMailer::Collector","rails/classes/ActionMailer/Collector.html#method-i-any","(*args, &block)","",null,0],["any?","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-any-3F","(name, prefixes = [], partial = false)","",null,0],["any?","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-any-3F","","<p>Returns <code>true</code> if the collection is not empty.\n\n<pre><code>class Person &lt; ActiveRecord::Base\n  has_many :pets\nend\n\nperson.pets.count ...\n</code></pre>\n",null,0],["any?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-any-3F","()","<p>Returns true if there are any records.\n",null,0],["any?","ActiveSupport::ArrayInquirer","rails/classes/ActiveSupport/ArrayInquirer.html#method-i-any-3F","(*candidates)","<p>Passes each element of <code>candidates</code> collection to ArrayInquirer collection. The method returns true if …\n",null,0],["any?","Array","ruby/classes/Array.html#method-i-any-3F","(*args)","<p>Returns <code>true</code> if any element of <code>self</code> meets a given criterion.\n<p>If <code>self</code> has no element, returns <code>false</code> and …\n",null,1],["any?","Enumerable","ruby/classes/Enumerable.html#method-i-any-3F","(*args)","<p>Returns whether any element meets a given criterion.\n<p>If <code>self</code> has no element, returns <code>false</code> and argument …\n",null,1],["any?","Hash","ruby/classes/Hash.html#method-i-any-3F","(*args)","<p>Returns <code>true</code> if any element satisfies a given criterion; <code>false</code> otherwise.\n<p>If <code>self</code> has no element, returns …\n",null,1],["any_authenticity_token_valid?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-any_authenticity_token_valid-3F","()","<p>Checks if any of the authenticity tokens from the request are valid.\n",null,0],["any_content","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-any_content","(includes = true)","<p>Is there any content?\n<p>This means any of: comment, aliases, methods, attributes, external aliases, require, …\n",null,1],["any_response?","ActionController::MimeResponds::Collector","rails/classes/ActionController/MimeResponds/Collector.html#method-i-any_response-3F","()","",null,0],["any_templates?","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-any_templates-3F","(name, prefixes = [], partial = false)","",null,0],["any_waiting?","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-any_waiting-3F","()","<p>Test if any threads are currently waiting on the queue.\n",null,0],["anybits?","Integer","ruby/classes/Integer.html#method-i-anybits-3F","(p1)","<p>Returns <code>true</code> if any bit that is set (=1) in <code>mask</code> is also set in <code>self</code>; returns <code>false</code> otherwise.\n<p>Example …\n",null,1],["anybits?","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-anybits-3F","(i)","",null,1],["api_controller.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/scaffold_controller/templates/api_controller_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= controller_class_name %&gt;Controller &lt; ApplicationController …\n",null,0],["api_dir","Rails::API::RepoTask","rails/classes/Rails/API/RepoTask.html#method-i-api_dir","()","",null,0],["api_key","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-api_key","()","<p>The API key from the command options or from the user’s configuration.\n",null,1],["api_keys","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-api_keys","()","<p>Hash of RubyGems.org and alternate API keys\n",null,1],["api_main","Rails::API::Task","rails/classes/Rails/API/Task.html#method-i-api_main","()","",null,0],["api_only!","Rails::Generators","rails/classes/Rails/Generators.html#method-c-api_only-21","()","<p>Configure generators for API only applications. It basically hides everything that is usually browser …\n",null,0],["api_only=","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-api_only-3D","(value)","",null,0],["api_only?","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-api_only-3F","()","",null,0],["app","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-app","()","",null,0],["app","Rails::ConsoleMethods","rails/classes/Rails/ConsoleMethods.html#method-i-app","(create = false)","<p>reference the global “app” instance, created on demand. To recreate the instance, pass a non-false …\n",null,0],["app","Rails::Engine","rails/classes/Rails/Engine.html#method-i-app","()","<p>Returns the underlying Rack application for this engine.\n",null,0],["app","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-app","()","",null,0],["app_cache","Bundler","ruby/classes/Bundler.html#method-c-app_cache","(custom_path = nil)","",null,1],["app_config_path","Bundler","ruby/classes/Bundler.html#method-c-app_config_path","()","",null,1],["app_generators","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-app_generators","()","<p>This allows you to modify application’s generators from Railties.\n<p>Values set on app_generators will …\n",null,0],["app_middleware","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-app_middleware","()","<p>This allows you to modify the application’s middlewares from Engines.\n<p>All operations you run on the …\n",null,0],["app_script_text","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-app_script_text","(bin_file_name)","<p>Return the text for an application file.\n",null,1],["append","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-append","(*records)","",null,0],["append","Array","ruby/classes/Array.html#method-i-append","(*args)","<p>Appends trailing elements.\n<p>Appends each argument in <code>objects</code> to <code>self</code>;  returns <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2] ...\n</code></pre>\n",null,1],["append","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-append","(*args)","<p>Appends <code>switch</code> at the tail of the list, and associates short, long and negated long options. Arguments …\n",null,1],["append","Reline::KillRing","ruby/classes/Reline/KillRing.html#method-i-append","(string, before_p = false)","",null,1],["append_after_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_after_action","","<p>Append a callback after actions. See _insert_callbacks for parameter details.\n",null,0],["append_around_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_around_action","","<p>Append a callback around actions. See _insert_callbacks for parameter details.\n",null,0],["append_attachables","ActionText::Content","rails/classes/ActionText/Content.html#method-i-append_attachables","(attachables)","",null,0],["append_before_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_before_action","","<p>Append a callback before actions. See _insert_callbacks for parameter details.\n<p>If the callback renders …\n",null,0],["append_cflags","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-append_cflags","(flags, *opts)","<p>Check whether each given C compiler flag is acceptable and append it to <code>$CFLAGS</code> if so.\n<p><code>flags</code> &mdash; a C compiler …\n\n",null,1],["append_info_to_payload","ActionController::Instrumentation","rails/classes/ActionController/Instrumentation.html#method-i-append_info_to_payload","(payload)","<p>Every time after an action is processed, this method is invoked with the payload, so you can add more …\n",null,0],["append_javascript_dependencies","ActionText::Generators::InstallGenerator","rails/classes/ActionText/Generators/InstallGenerator.html#method-i-append_javascript_dependencies","()","",null,0],["append_view_path","ActionView::ViewPaths","rails/classes/ActionView/ViewPaths.html#method-i-append_view_path","(path)","<p>Append a path to the list of view paths for the current LookupContext.\n<p>Parameters\n<p><code>path</code> - If a String is …\n",null,0],["append_view_path","ActionView::ViewPaths::ClassMethods","rails/classes/ActionView/ViewPaths/ClassMethods.html#method-i-append_view_path","(path)","<p>Append a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, …\n",null,0],["apple-touch-icon-precomposed.png","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/apple-touch-icon-precomposed_png.html","","",null,0],["apple-touch-icon.png","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/apple-touch-icon_png.html","","",null,0],["application","Rails","rails/classes/Rails.html#method-c-application","()","",null,0],["application","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-application","(data = nil, options = {})","",null,0],["application.css.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/assets/stylesheets/application_css_tt.html","","<p>/*\n\n<pre><code>* This is a manifest file that&#39;ll be compiled into application.css, which will include all the files ...\n</code></pre>\n",null,0],["application.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/views/layouts/application_html_erb_tt.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;title&gt;&lt;%= camelized %&gt;&lt;/title&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt; ...\n</code></pre>\n",null,0],["application.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/app/views/layouts/%namespaced_name%/application_html_erb_tt.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;&lt;%= humanized %&gt;&lt;/title&gt;\n&lt;%%= csrf_meta_tags %&gt; ...\n</code></pre>\n",null,0],["application.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/application_rb_tt.html","","<p>require_relative “boot”\n<p>&lt;% if include_all_railties? -%&gt; require “rails/all” …\n",null,0],["application_controller.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/controllers/application_controller_rb_tt.html","","<p>class ApplicationController &lt; ActionController::&lt;%= options.api? ? “API” : “Base” …\n",null,0],["application_controller.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/app/controllers/%namespaced_name%/application_controller_rb_tt.html","","<p>&lt;%= wrap_in_modules &lt;&lt;~rb\n\n<pre><code>class ApplicationController &lt; ActionController::#{api? ? &quot;API&quot; : &quot;Base&quot;} ...\n</code></pre>\n",null,0],["application_helper.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/app/helpers/%namespaced_name%/application_helper_rb_tt.html","","<p>&lt;%= wrap_in_modules &lt;&lt;~rb\n\n<pre><code>module ApplicationHelper\nend\n</code></pre>\n<p>rb %&gt;\n",null,0],["application_helper.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/helpers/application_helper_rb_tt.html","","<p>module ApplicationHelper end\n",null,0],["application_job.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/jobs/application_job_rb_tt.html","","<p>class ApplicationJob &lt; ActiveJob::Base\n\n<pre><code># Automatically retry jobs that encountered a deadlock\n# retry_on ...\n</code></pre>\n",null,0],["application_job.rb.tt","","rails/files/rails/activejob/lib/rails/generators/job/templates/application_job_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class ApplicationJob &lt; ActiveJob::Base\n\n<pre><code># Automatically retry jobs ...\n</code></pre>\n",null,0],["application_job.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/app/jobs/%namespaced_name%/application_job_rb_tt.html","","<p>&lt;%= wrap_in_modules &lt;&lt;~rb\n\n<pre><code>class ApplicationJob &lt; ActiveJob::Base\nend\n</code></pre>\n<p>rb %&gt;\n",null,0],["application_mailbox.rb.tt","","rails/files/rails/actionmailbox/lib/rails/generators/mailbox/templates/application_mailbox_rb_tt.html","","<p>class ApplicationMailbox &lt; ActionMailbox::Base\n\n<pre><code># routing /something/i =&gt; :somewhere\n</code></pre>\n<p>end\n",null,0],["application_mailer.rb.tt","","rails/files/rails/actionmailer/lib/rails/generators/mailer/templates/application_mailer_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class ApplicationMailer &lt; ActionMailer::Base\n\n<pre><code>default from: &#39;from@example.com&#39; ...\n</code></pre>\n",null,0],["application_mailer.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/mailers/application_mailer_rb_tt.html","","<p>class ApplicationMailer &lt; ActionMailer::Base\n\n<pre><code>default from: &quot;from@example.com&quot;\nlayout &quot;mailer&quot;\n</code></pre>\n<p>end\n",null,0],["application_mailer.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/app/mailers/%namespaced_name%/application_mailer_rb_tt.html","","<p>&lt;%= wrap_in_modules &lt;&lt;~rb\n\n<pre><code>class ApplicationMailer &lt; ActionMailer::Base\n  default from: &quot;from@example.com&quot; ...\n</code></pre>\n",null,0],["application_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-application_name","()","<p>Tries to retrieve the application name or simply return application.\n",null,0],["application_record.rb.tt","","rails/files/rails/activerecord/lib/rails/generators/active_record/application_record/templates/application_record_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class ApplicationRecord &lt; ActiveRecord::Base\n\n<pre><code>primary_abstract_class\n</code></pre>\n",null,0],["application_record.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/app/models/%namespaced_name%/application_record_rb_tt.html","","<p>&lt;%= wrap_in_modules &lt;&lt;~rb\n\n<pre><code>class ApplicationRecord &lt; ActiveRecord::Base\n  self.abstract_class ...\n</code></pre>\n",null,0],["application_record.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/models/application_record_rb_tt.html","","<p>class ApplicationRecord &lt; ActiveRecord::Base\n\n<pre><code>primary_abstract_class\n</code></pre>\n<p>end\n",null,0],["application_trace","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-application_trace","()","",null,0],["apply","ActiveSupport::CodeGenerator::MethodSet","rails/classes/ActiveSupport/CodeGenerator/MethodSet.html#method-i-apply","(owner, path, line)","",null,0],["approximate_recommendation","Gem::Version","ruby/classes/Gem/Version.html#method-i-approximate_recommendation","()","<p>A recommended version for use with a ~&gt; Requirement.\n",null,1],["aref","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-aref","()","<p>HTML fragment reference for this alias\n",null,1],["aref","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-aref","()","<p>HTML fragment reference for this module or class.  See RDoc::NormalClass#aref and RDoc::NormalModule#aref …\n",null,1],["aref","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-aref","()","<p>HTML fragment reference for this method\n",null,1],["aref_prefix","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-aref_prefix","()","<p>Prefix for <code>aref</code> is ‘method’.\n",null,1],["aref_prefix","RDoc::Attr","ruby/classes/RDoc/Attr.html#method-i-aref_prefix","()","<p>The #aref prefix for attributes\n",null,1],["aref_prefix","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-aref_prefix","()","<p>Prefix for <code>aref</code>, defined by subclasses.\n",null,1],["arg","Complex","ruby/classes/Complex.html#method-i-arg","()","<p>Returns the argument (angle) for <code>self</code> in radians; see polar coordinates:\n\n<pre><code>Complex.polar(3, Math::PI/2).arg ...\n</code></pre>\n",null,1],["arg","Float","ruby/classes/Float.html#method-i-arg","()","<p>Returns 0 if <code>self</code> is positive, Math::PI otherwise.\n",null,1],["arg","Numeric","ruby/classes/Numeric.html#method-i-arg","()","<p>Returns zero if <code>self</code> is positive, Math::PI otherwise.\n",null,1],["arglists","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-arglists","()","<p>The call_seq or the param_seq with method name, if there is no call_seq.\n<p>Use this for displaying a method’s …\n",null,1],["args","NoMethodError","ruby/classes/NoMethodError.html#method-i-args","()","<p>Return the arguments passed in as the third parameter to the constructor.\n",null,1],["args_directive","RDoc::MarkupReference","ruby/classes/RDoc/MarkupReference.html#method-i-args_directive","baz","<p>The <code>:args:</code> directive overrides the actual arguments found in the Ruby code.\n<p>Click on the calling sequence …\n",null,1],["argument_converters","","ruby/files/ruby/doc/optparse/argument_converters_rdoc.html","","<p>Argument Converters\n<p>An option can specify that its argument is to be converted from the default <code>String</code> …\n",null,1],["arguments","Gem::Command","ruby/classes/Gem/Command.html#method-i-arguments","()","<p>Override to provide details of the arguments a command takes.  It should return a left-justified string, …\n",null,1],["argv","ARGF","ruby/classes/ARGF.html#method-i-argv","()","<p>Returns the <code>ARGV</code> array, which contains the arguments passed to your script, one per element.\n<p>For example: …\n",null,1],["argv0","Process","ruby/classes/Process.html#method-c-argv0","()","<p>Returns the name of the script being executed.  The value is not affected by assigning a new value to …\n",null,1],["arity","Method","ruby/classes/Method.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method. Returns a nonnegative integer …\n",null,1],["arity","Proc","ruby/classes/Proc.html#method-i-arity","()","<p>Returns the number of mandatory arguments. If the block is declared to take no arguments, returns 0. …\n",null,1],["arity","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method. Returns a nonnegative integer …\n",null,1],["around_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-around_action","","<p>Append a callback around actions. See _insert_callbacks for parameter details.\n",null,0],["around_create","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-around_create","","<p>Registers a callback to be called around the creation of a record. See ActiveRecord::Callbacks for more …\n",null,0],["around_destroy","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-around_destroy","","<p>Registers a callback to be called around the destruction of a record. See ActiveRecord::Callbacks for …\n",null,0],["around_enqueue","ActiveJob::Callbacks::ClassMethods","rails/classes/ActiveJob/Callbacks/ClassMethods.html#method-i-around_enqueue","(*filters, &blk)","<p>Defines a callback that will get called around the enqueuing of the job.\n\n<pre><code>class VideoProcessJob &lt; ActiveJob::Base ...\n</code></pre>\n",null,0],["around_perform","ActiveJob::Callbacks::ClassMethods","rails/classes/ActiveJob/Callbacks/ClassMethods.html#method-i-around_perform","(*filters, &blk)","<p>Defines a callback that will get called around the job’s perform method.\n\n<pre><code>class VideoProcessJob &lt; ActiveJob::Base ...\n</code></pre>\n",null,0],["around_processing","ActionMailbox::Callbacks","rails/classes/ActionMailbox/Callbacks.html#method-i-around_processing","(*methods, &block)","",null,0],["around_save","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-around_save","","<p>Registers a callback to be called around the save of a record. See ActiveRecord::Callbacks for more information. …\n",null,0],["around_update","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-around_update","","<p>Registers a callback to be called around the update of a record. See ActiveRecord::Callbacks for more …\n",null,0],["array","WIN32OLE::Variant","ruby/classes/WIN32OLE/Variant.html#method-c-array","(p1, p2)","<p>Returns Ruby object wrapping OLE variant whose variant type is VT_ARRAY. The first argument should be …\n",null,1],["array_attributes","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-array_attributes","()","<p>Return the list of all array-oriented instance variables.\n",null,1],["array_nl","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-array_nl","()","<p>This string is put at the end of a line that holds a JSON array.\n",null,1],["array_nl=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-array_nl-3D","(p1)","<p>This string is put at the end of a line that holds a JSON array.\n",null,1],["as_json","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-as_json","","<p>Returns a hash that can be used as the JSON representation for the parameters.\n",null,0],["as_json","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-as_json","(*)","",null,0],["as_json","ActionText::Content","rails/classes/ActionText/Content.html#method-i-as_json","(*)","",null,0],["as_json","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-as_json","(options = nil)","<p>Returns a Hash that can be used as the JSON representation for this object. You can pass the <code>:full_messages</code> …\n",null,0],["as_json","ActiveModel::Serializers::JSON","rails/classes/ActiveModel/Serializers/JSON.html#method-i-as_json","(options = nil)","<p>Returns a hash representing the model. Some configuration can be passed through <code>options</code>.\n<p>The option <code>include_root_in_json</code> …\n",null,0],["as_json","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-as_json","(*)","",null,0],["as_json","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-as_json","(options = nil)","<p>Coerces time to a string for JSON encoding. The default format is ISO 8601. You can get %Y/%m/%d %H:%M:%S …\n",null,0],["as_json","Exception","rails/classes/Exception.html#method-i-as_json","(options = nil)","",null,0],["as_json","BigDecimal","ruby/classes/BigDecimal.html#method-i-as_json","(*)","<p>Methods <code>BigDecimal#as_json</code> and <code>BigDecimal.json_create</code> may be used to serialize and deserialize a BigDecimal …\n",null,1],["as_json","Complex","ruby/classes/Complex.html#method-i-as_json","(*)","<p>Methods <code>Complex#as_json</code> and <code>Complex.json_create</code> may be used to serialize and deserialize a Complex object; …\n",null,1],["as_json","Date","ruby/classes/Date.html#method-i-as_json","(*)","<p>Methods <code>Date#as_json</code> and <code>Date.json_create</code> may be used to serialize and deserialize a Date object; see …\n",null,1],["as_json","DateTime","ruby/classes/DateTime.html#method-i-as_json","(*)","<p>Methods <code>DateTime#as_json</code> and <code>DateTime.json_create</code> may be used to serialize and deserialize a DateTime …\n",null,1],["as_json","Exception","ruby/classes/Exception.html#method-i-as_json","(*)","<p>Methods <code>Exception#as_json</code> and <code>Exception.json_create</code> may be used to serialize and deserialize a Exception …\n",null,1],["as_json","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-i-as_json","(*)","",null,1],["as_json","OpenStruct","ruby/classes/OpenStruct.html#method-i-as_json","(*)","<p>Methods <code>OpenStruct#as_json</code> and <code>OpenStruct.json_create</code> may be used to serialize and deserialize a OpenStruct …\n",null,1],["as_json","Range","ruby/classes/Range.html#method-i-as_json","(*)","<p>Methods <code>Range#as_json</code> and <code>Range.json_create</code> may be used to serialize and deserialize a Range object; …\n",null,1],["as_json","Rational","ruby/classes/Rational.html#method-i-as_json","(*)","<p>Methods <code>Rational#as_json</code> and <code>Rational.json_create</code> may be used to serialize and deserialize a Rational …\n",null,1],["as_json","Regexp","ruby/classes/Regexp.html#method-i-as_json","(*)","<p>Methods <code>Regexp#as_json</code> and <code>Regexp.json_create</code> may be used to serialize and deserialize a Regexp object; …\n",null,1],["as_json","Set","ruby/classes/Set.html#method-i-as_json","(*)","<p>Methods <code>Set#as_json</code> and <code>Set.json_create</code> may be used to serialize and deserialize a Set object; see Marshal …\n",null,1],["as_json","Struct","ruby/classes/Struct.html#method-i-as_json","(*)","<p>Methods <code>Struct#as_json</code> and <code>Struct.json_create</code> may be used to serialize and deserialize a Struct object; …\n",null,1],["as_json","Symbol","ruby/classes/Symbol.html#method-i-as_json","(*)","<p>Methods <code>Symbol#as_json</code> and <code>Symbol.json_create</code> may be used to serialize and deserialize a Symbol object; …\n",null,1],["as_json","Time","ruby/classes/Time.html#method-i-as_json","(*)","<p>Methods <code>Time#as_json</code> and <code>Time.json_create</code> may be used to serialize and deserialize a Time object; see …\n",null,1],["ascend","Pathname","ruby/classes/Pathname.html#method-i-ascend","()","<p>Iterates over and yields a new Pathname object for each element in the given path in ascending order. …\n",null,1],["ascii_compatible?","Encoding","ruby/classes/Encoding.html#method-i-ascii_compatible-3F","()","<p>Returns whether ASCII-compatible or not.\n\n<pre><code>Encoding::UTF_8.ascii_compatible?     #=&gt; true\nEncoding::UTF_16BE.ascii_compatible? ...\n</code></pre>\n",null,1],["ascii_only?","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-ascii_only-3F","()","<p>Returns true, if only ASCII characters should be generated. Otherwise returns false.\n",null,1],["ascii_only?","String","ruby/classes/String.html#method-i-ascii_only-3F","()","<p>Returns <code>true</code> if <code>self</code> contains only ASCII characters, <code>false</code> otherwise:\n\n<pre><code>&#39;abc&#39;.ascii_only?         # =&gt; true ...\n</code></pre>\n",null,1],["asciicompat_encoding","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-c-asciicompat_encoding","(p1)","<p>Returns the corresponding ASCII compatible encoding.\n<p>Returns nil if the argument is an ASCII compatible …\n",null,1],["asctime","Date","ruby/classes/Date.html#method-i-asctime","()","<p>Equivalent to #strftime with argument <code>&#39;%a %b %e %T %Y&#39;</code> (or its shorthand form <code>&#39;%c&#39;</code>): …\n",null,1],["asctime","Time","ruby/classes/Time.html#method-i-asctime","()","<p>Returns a string representation of <code>self</code>, formatted by <code>strftime(&#39;%a %b %e %T %Y&#39;)</code> or its shorthand …\n",null,1],["asin","Math","ruby/classes/Math.html#method-c-asin","(p1)","<p>Returns the arc sine of <code>x</code>.\n<p>Domain: <code>[-1, -1]</code>.\n<p>Range: <code>[-PI/2, PI/2]</code>.\n",null,1],["asinh","Math","ruby/classes/Math.html#method-c-asinh","(p1)","<p>Returns the inverse hyperbolic sine of <code>x</code>.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[-INFINITY, INFINITY]</code>. …\n",null,1],["ask","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-ask","(question)","<p>Ask a question.  Returns an answer if connected to a tty, nil otherwise.\n",null,1],["ask","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-ask","(question)","<p>Asks a <code>question</code> and returns the answer.\n",null,1],["ask","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-ask","(prompt)","",null,1],["ask_for_password","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-ask_for_password","(question)","<p>Ask for a password. Does not echo response to terminal.\n",null,1],["ask_for_password","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-ask_for_password","(prompt)","<p>Asks for a password with a <code>prompt</code>\n",null,1],["ask_yes_no","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-ask_yes_no","(question, default=nil)","<p>Ask a question.  Returns a true for yes, false for no.  If not connected to a tty, raises an exception …\n",null,1],["ask_yes_no","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-ask_yes_no","(question, default = nil)","<p>Asks a yes or no <code>question</code>.  Returns true for yes, false for no.\n",null,1],["asn1_flag","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-asn1_flag","()","<p>Returns the flags set on the group.\n<p>See also #asn1_flag=.\n",null,1],["asn1_flag=","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-asn1_flag-3D","(p1)","<p>Sets flags on the group. The flag value is used to determine how to encode the group: encode explicit …\n",null,1],["assert_valid_keys","Hash","rails/classes/Hash.html#method-i-assert_valid_keys","(*valid_keys)","<p>Validates all keys in a hash match <code>*valid_keys</code>, raising <code>ArgumentError</code> on a mismatch.\n<p>Note that keys are …\n",null,0],["assert_valid_value","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-assert_valid_value","(_)","",null,0],["assert_valid_value","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-assert_valid_value","(_)","",null,0],["asset","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-asset","(generator_name, req, res)","<p>Serves the asset at the path in <code>req</code> for <code>generator_name</code> via <code>res</code>.\n",null,1],["asset_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-asset_path","(source, options = {})","<p>This is the entry point for all assets. When using an asset pipeline gem (e.g. propshaft or sprockets-rails), …\n",null,0],["asset_url","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-asset_url","(source, options = {})","<p>Computes the full URL to an asset in the public directory. This will use <code>asset_path</code> internally, so most …\n",null,0],["assets.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/initializers/assets_rb_tt.html","","<p># Be sure to restart your server when you modify this file.\n<p># Version of your assets, change this if you …\n",null,0],["assets_manifest","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-assets_manifest","()","",null,0],["assign_attributes","ActiveModel::AttributeAssignment","rails/classes/ActiveModel/AttributeAssignment.html#method-i-assign_attributes","(new_attributes)","<p>Allows you to set all the attributes by passing in a hash of attributes with keys matching the attribute …\n",null,0],["assign_names","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-i-assign_names","(members)","<p>Set the names of the <code>members</code> in this C struct\n",null,1],["assignment","","ruby/files/ruby/doc/syntax/assignment_rdoc.html","","<p>Assignment\n<p>In Ruby, assignment uses the <code>=</code> (equals sign) character.  This example assigns the number five …\n",null,1],["assoc","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-assoc","(key)","<p>Same as <code>Hash#assoc</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["assoc","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-assoc","(key)","<p>Same as <code>Hash#assoc</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["assoc","Array","ruby/classes/Array.html#method-i-assoc","(p1)","<p>Returns the first element in <code>self</code> that is an Array whose first element <code>==</code> <code>obj</code>:\n\n<pre><code>a = [{foo: 0}, [2, 4], ...\n</code></pre>\n",null,1],["assoc","ENV","ruby/classes/ENV.html#method-c-assoc","(p1)","<p>Returns a 2-element Array containing the name and value of the environment variable for <code>name</code> if it exists: …\n",null,1],["assoc","Hash","ruby/classes/Hash.html#method-i-assoc","(p1)","<p>If the given <code>key</code> is found, returns a 2-element Array containing that key and its value:\n\n<pre><code>h = {foo: 0, bar: ...\n</code></pre>\n",null,1],["associated","ActiveRecord::QueryMethods::WhereChain","rails/classes/ActiveRecord/QueryMethods/WhereChain.html#method-i-associated","(*associations)","<p>Returns a new relation with joins and where clause to identify associated relations.\n<p>For example, posts …\n",null,0],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-assume_migrated_upto_version","(version)","",null,0],["at","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-at","(*args)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone of <code>self</code> from number of seconds …\n",null,0],["at","String","rails/classes/String.html#method-i-at","(position)","<p>If you pass a single integer, returns a substring of one character at that position. The first character …\n",null,0],["at","Time","rails/classes/Time.html#method-c-at","(*args, **kwargs)","",null,0],["at","Array","ruby/classes/Array.html#method-i-at","(p1)","<p>Returns the element at Integer offset <code>index</code>; does not modify <code>self</code>.\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.at(0) # =&gt; :foo ...\n</code></pre>\n",null,1],["at","Gem::Installer","ruby/classes/Gem/Installer.html#method-c-at","(path, options = {})","<p>Construct an installer object for the gem file located at <code>path</code>\n",null,1],["at","Time","ruby/classes/Time.html#method-c-at","(time, subsec = false, unit = :microsecond, in: nil)","<p>Returns a new <code>Time</code> object based on the given arguments.\n<p>Required argument <code>time</code> may be either of:\n<p>A <code>Time</code> …\n",null,1],["at_beginning_of_day","Date","rails/classes/Date.html#method-i-at_beginning_of_day","()","",null,0],["at_beginning_of_day","DateTime","rails/classes/DateTime.html#method-i-at_beginning_of_day","()","",null,0],["at_beginning_of_day","Time","rails/classes/Time.html#method-i-at_beginning_of_day","()","",null,0],["at_beginning_of_hour","DateTime","rails/classes/DateTime.html#method-i-at_beginning_of_hour","()","",null,0],["at_beginning_of_hour","Time","rails/classes/Time.html#method-i-at_beginning_of_hour","()","",null,0],["at_beginning_of_minute","DateTime","rails/classes/DateTime.html#method-i-at_beginning_of_minute","()","",null,0],["at_beginning_of_minute","Time","rails/classes/Time.html#method-i-at_beginning_of_minute","()","",null,0],["at_beginning_of_month","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_month","()","",null,0],["at_beginning_of_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_quarter","()","",null,0],["at_beginning_of_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_week","(start_day = Date.beginning_of_week)","",null,0],["at_beginning_of_year","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_beginning_of_year","()","",null,0],["at_end_of_day","Date","rails/classes/Date.html#method-i-at_end_of_day","()","",null,0],["at_end_of_day","DateTime","rails/classes/DateTime.html#method-i-at_end_of_day","()","",null,0],["at_end_of_day","Time","rails/classes/Time.html#method-i-at_end_of_day","()","",null,0],["at_end_of_hour","DateTime","rails/classes/DateTime.html#method-i-at_end_of_hour","()","",null,0],["at_end_of_hour","Time","rails/classes/Time.html#method-i-at_end_of_hour","()","",null,0],["at_end_of_minute","DateTime","rails/classes/DateTime.html#method-i-at_end_of_minute","()","",null,0],["at_end_of_minute","Time","rails/classes/Time.html#method-i-at_end_of_minute","()","",null,0],["at_end_of_month","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_month","()","",null,0],["at_end_of_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_quarter","()","",null,0],["at_end_of_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_week","(start_day = Date.beginning_of_week)","",null,0],["at_end_of_year","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-at_end_of_year","()","",null,0],["at_exit","Kernel","ruby/classes/Kernel.html#method-i-at_exit","()","<p>Converts <em>block</em> to a <code>Proc</code> object (and therefore binds it at the point of call) and registers it for execution …\n",null,1],["at_midday","Date","rails/classes/Date.html#method-i-at_midday","()","",null,0],["at_midday","DateTime","rails/classes/DateTime.html#method-i-at_midday","()","",null,0],["at_midday","Time","rails/classes/Time.html#method-i-at_midday","()","",null,0],["at_middle_of_day","Date","rails/classes/Date.html#method-i-at_middle_of_day","()","",null,0],["at_middle_of_day","DateTime","rails/classes/DateTime.html#method-i-at_middle_of_day","()","",null,0],["at_middle_of_day","Time","rails/classes/Time.html#method-i-at_middle_of_day","()","",null,0],["at_midnight","Date","rails/classes/Date.html#method-i-at_midnight","()","",null,0],["at_midnight","DateTime","rails/classes/DateTime.html#method-i-at_midnight","()","",null,0],["at_midnight","Time","rails/classes/Time.html#method-i-at_midnight","()","",null,0],["at_noon","Date","rails/classes/Date.html#method-i-at_noon","()","",null,0],["at_noon","DateTime","rails/classes/DateTime.html#method-i-at_noon","()","",null,0],["at_noon","Time","rails/classes/Time.html#method-i-at_noon","()","",null,0],["at_with_coercion","Time","rails/classes/Time.html#method-c-at_with_coercion","(*args, **kwargs)","<p>Layers additional behavior on Time.at so that ActiveSupport::TimeWithZone and DateTime instances can …\n",null,0],["at_without_coercion","Time","rails/classes/Time.html#method-c-at_without_coercion","(*args, **kwargs)","",null,0],["atan","BigMath","ruby/classes/BigMath.html#method-i-atan","(x, prec)","<p>Computes the arctangent of <code>decimal</code> to the specified number of digits of precision, <code>numeric</code>.\n<p>If <code>decimal</code> …\n",null,1],["atan","Math","ruby/classes/Math.html#method-c-atan","(p1)","<p>Returns the arc tangent of <code>x</code>.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[-PI/2, PI/2]  </code>.\n",null,1],["atan2","Math","ruby/classes/Math.html#method-c-atan2","(p1, p2)","<p>Returns the arc tangent of <code>y</code> and <code>x</code> in radians.\n<p>Domain of <code>y</code>: <code>[-INFINITY, INFINITY]</code>.\n<p>Domain of <code>x</code>: <code>[-INFINITY,</code> …\n",null,1],["atanh","Math","ruby/classes/Math.html#method-c-atanh","(p1)","<p>Returns the inverse hyperbolic tangent of <code>x</code>.\n<p>Domain: <code>[-1, 1]</code>.\n<p>Range: <code>[-INFINITY, INFINITY]</code>.\n",null,1],["atime","File","ruby/classes/File.html#method-i-atime","()","<p>Returns the last access time (a Time object) for <em>file</em>, or epoch if <em>file</em> has not been accessed.\n\n<pre><code>File.new(&quot;testfile&quot;).atime ...\n</code></pre>\n",null,1],["atime","File","ruby/classes/File.html#method-c-atime","(p1)","<p>Returns the last access time for the named file as a Time object.\n<p><em>file_name</em> can be an IO object.\n\n<pre><code>File.atime(&quot;testfile&quot;) ...\n</code></pre>\n",null,1],["atime","File::Stat","ruby/classes/File/Stat.html#method-i-atime","()","<p>Returns the last access time for this file as an object of class Time.\n\n<pre><code>File.stat(&quot;testfile&quot;).atime   #=&gt; ...\n</code></pre>\n",null,1],["atime","Pathname","ruby/classes/Pathname.html#method-i-atime","()","<p>Returns the last access time for the file.\n<p>See File.atime.\n",null,1],["atom_feed","ActionView::Helpers::AtomFeedHelper","rails/classes/ActionView/Helpers/AtomFeedHelper.html#method-i-atom_feed","(options = {}, &block)","<p>Adds easy defaults to writing Atom feeds with the Builder template engine (this does not work on ERB …\n",null,0],["atomic_write","File","rails/classes/File.html#method-c-atomic_write","(file_name, temp_dir = dirname(file_name))","<p>Write to a file atomically. Useful for situations where you don’t want other processes or threads …\n",null,0],["attach","ActionCable::Connection::StreamEventLoop","rails/classes/ActionCable/Connection/StreamEventLoop.html#method-i-attach","(io, stream)","",null,0],["attach","ActiveStorage::Attached::Many","rails/classes/ActiveStorage/Attached/Many.html#method-i-attach","(*attachables)","<p>Attaches one or more <code>attachables</code> to the record.\n<p>If the record is persisted and unchanged, the attachments …\n",null,0],["attach","ActiveStorage::Attached::One","rails/classes/ActiveStorage/Attached/One.html#method-i-attach","(attachable)","<p>Attaches an <code>attachable</code> to the record.\n<p>If the record is persisted and unchanged, the attachment is saved …\n",null,0],["attach!","Prism::ParseResult::Comments","ruby/classes/Prism/ParseResult/Comments.html#method-i-attach-21","()","<p>Attach the comments to their respective locations in the tree by mutating the parse result.\n",null,1],["attach_comments!","Prism::ParseResult","ruby/classes/Prism/ParseResult.html#method-i-attach_comments-21","()","<p>Attach the list of comments to their respective locations in the tree.\n",null,1],["attach_correctable","Gem::UnknownCommandError","ruby/classes/Gem/UnknownCommandError.html#method-c-attach_correctable","()","",null,1],["attach_to","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-c-attach_to","(namespace, subscriber = new, notifier = ActiveSupport::Notifications, inherit_all: false)","<p>Attach the subscriber to a namespace.\n",null,0],["attachable_content_type","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-attachable_content_type","()","",null,0],["attachable_filename","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-attachable_filename","()","",null,0],["attachable_filesize","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-attachable_filesize","()","",null,0],["attachable_metadata","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-attachable_metadata","()","",null,0],["attachable_plain_text_representation","ActionText::Attachables::ContentAttachment","rails/classes/ActionText/Attachables/ContentAttachment.html#method-i-attachable_plain_text_representation","(caption)","",null,0],["attachable_plain_text_representation","ActionText::Attachables::RemoteImage","rails/classes/ActionText/Attachables/RemoteImage.html#method-i-attachable_plain_text_representation","(caption)","",null,0],["attachable_plain_text_representation","ActionText::Engine","rails/classes/ActionText/Engine.html#method-i-attachable_plain_text_representation","(caption = nil)","",null,0],["attachable_sgid","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-attachable_sgid","()","",null,0],["attachables","ActionText::Content","rails/classes/ActionText/Content.html#method-i-attachables","()","",null,0],["attached?","ActiveStorage::Attached::Many","rails/classes/ActiveStorage/Attached/Many.html#method-i-attached-3F","()","<p>Returns true if any attachments have been made.\n\n<pre><code>class Gallery &lt; ApplicationRecord\n  has_many_attached ...\n</code></pre>\n",null,0],["attached?","ActiveStorage::Attached::One","rails/classes/ActiveStorage/Attached/One.html#method-i-attached-3F","()","<p>Returns <code>true</code> if an attachment has been made.\n\n<pre><code>class User &lt; ApplicationRecord\n  has_one_attached :avatar ...\n</code></pre>\n",null,0],["attached_object","Class","ruby/classes/Class.html#method-i-attached_object","()","<p>Returns the object for which the receiver is the singleton class.\n<p>Raises an TypeError if the class is …\n",null,1],["attachment","ActionText::FixtureSet","rails/classes/ActionText/FixtureSet.html#method-c-attachment","(fixture_set_name, label, column_type: :integer)","<p>Fixtures support Action Text attachments as part of their <code>body</code> HTML.\n<p>Examples\n<p>For example, consider a second …\n",null,0],["attachment","ActiveStorage::Attached::One","rails/classes/ActiveStorage/Attached/One.html#method-i-attachment","()","<p>Returns the associated attachment record.\n<p>You don’t have to call this method to access the attachment’s …\n",null,0],["attachment_galleries","ActionText::Content","rails/classes/ActionText/Content.html#method-i-attachment_galleries","()","",null,0],["attachment_selector","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-c-attachment_selector","()","",null,0],["attachment_upload.js","","rails/files/rails/actiontext/app/javascript/actiontext/attachment_upload_js.html","","<p>import { DirectUpload } from “@rails/activestorage”\n<p>export class AttachmentUpload {\n\n<pre><code>constructor(attachment, ...\n</code></pre>\n",null,0],["attachments","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-i-attachments","()","<p>Allows you to add attachments to an email, like so:\n\n<pre><code>mail.attachments[&#39;filename.jpg&#39;] = File.read(&#39;/path/to/filename.jpg&#39;)\n</code></pre>\n",null,0],["attachments","ActionMailer::MailHelper","rails/classes/ActionMailer/MailHelper.html#method-i-attachments","()","<p>Access the message attachments list.\n",null,0],["attachments","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-i-attachments","()","",null,0],["attachments","ActionText::Content","rails/classes/ActionText/Content.html#method-i-attachments","()","",null,0],["attachments","ActiveStorage::Attached::Many","rails/classes/ActiveStorage/Attached/Many.html#method-i-attachments","()","<p>Returns all the associated attachment records.\n<p>All methods called on this proxy object that aren’t …\n",null,0],["attempt","ActionDispatch::FileHandler","rails/classes/ActionDispatch/FileHandler.html#method-i-attempt","(env)","",null,0],["attr","Module","ruby/classes/Module.html#method-i-attr","(*args)","<p>The first form is equivalent to #attr_reader. The second form is equivalent to <code>attr_accessor(name)</code> but …\n",null,1],["attr_accessor","Module","ruby/classes/Module.html#method-i-attr_accessor","(*args)","<p>Defines a named attribute for this module, where the name is <em>symbol.</em><code>id2name</code>, creating an instance variable …\n",null,1],["attr_internal","Module","rails/classes/Module.html#method-i-attr_internal","(*attrs)","",null,0],["attr_internal_accessor","Module","rails/classes/Module.html#method-i-attr_internal_accessor","(*attrs)","<p>Declares an attribute reader and writer backed by an internally-named instance variable.\n",null,0],["attr_internal_reader","Module","rails/classes/Module.html#method-i-attr_internal_reader","(*attrs)","<p>Declares an attribute reader backed by an internally-named instance variable.\n",null,0],["attr_internal_writer","Module","rails/classes/Module.html#method-i-attr_internal_writer","(*attrs)","<p>Declares an attribute writer backed by an internally-named instance variable.\n",null,0],["attr_reader","Module","ruby/classes/Module.html#method-i-attr_reader","(*args)","<p>Creates instance variables and corresponding methods that return the value of each instance variable. …\n",null,1],["attr_readonly","ActiveRecord::ReadonlyAttributes::ClassMethods","rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-attr_readonly","(*attributes)","<p>Attributes listed as readonly will be used to create a new record but update operations will ignore these …\n",null,0],["attr_writer","Module","ruby/classes/Module.html#method-i-attr_writer","(*args)","<p>Creates an accessor method to allow assignment to the attribute <em>symbol</em><code>.id2name</code>. String arguments are …\n",null,1],["attribute","ActiveModel::Attributes::ClassMethods","rails/classes/ActiveModel/Attributes/ClassMethods.html#method-i-attribute","(name, cast_type = nil, default: NO_DEFAULT_PROVIDED, **options)","",null,0],["attribute","ActiveRecord::Attributes::ClassMethods","rails/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute","(name, cast_type = nil, default: NO_DEFAULT_PROVIDED, **options)","<p>Defines an attribute with a type on this model. It will override the type of existing attributes if needed. …\n",null,0],["attribute","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-c-attribute","(*names)","<p>Declares one or more attributes that will be given both class and instance accessor methods.\n",null,0],["attribute_alias","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_alias","(name)","<p>Returns the original name for the alias <code>name</code>\n",null,0],["attribute_alias?","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_alias-3F","(new_name)","<p>Is <code>new_name</code> an alias?\n",null,0],["attribute_before_last_save","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-attribute_before_last_save","(attr_name)","<p>Returns the original value of an attribute before the last save.\n<p>This method is useful in after callbacks …\n",null,0],["attribute_change_to_be_saved","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-attribute_change_to_be_saved","(attr_name)","<p>Returns the change to an attribute that will be persisted during the next save.\n<p>This method is useful …\n",null,0],["attribute_for_inspect","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-attribute_for_inspect","(attr_name)","<p>Returns an <code>#inspect</code>-like string for the value of the attribute <code>attr_name</code>. String attributes are truncated …\n",null,0],["attribute_in_database","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-attribute_in_database","(attr_name)","<p>Returns the value of an attribute in the database, as opposed to the in-memory value that will be persisted …\n",null,0],["attribute_method?","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-attribute_method-3F","(attribute)","<p>Returns <code>true</code> if <code>attribute</code> is an attribute method, <code>false</code> otherwise.\n\n<pre><code>class Person\n  include ActiveModel::Validations ...\n</code></pre>\n",null,0],["attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_method-3F","(attribute)","<p>Returns <code>true</code> if <code>attribute</code> is an attribute method and table exists, <code>false</code> otherwise.\n\n<pre><code>class Person &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["attribute_method_affix","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_affix","(*affixes)","<p>Declares a method available for all attributes with the given prefix and suffix. Uses <code>method_missing</code> …\n",null,0],["attribute_method_prefix","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_prefix","(*prefixes, parameters: nil)","<p>Declares a method available for all attributes with the given prefix. Uses <code>method_missing</code> and <code>respond_to?</code> …\n",null,0],["attribute_method_suffix","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_suffix","(*suffixes, parameters: nil)","<p>Declares a method available for all attributes with the given suffix. Uses <code>method_missing</code> and <code>respond_to?</code> …\n",null,0],["attribute_missing","ActiveModel::AttributeMethods","rails/classes/ActiveModel/AttributeMethods.html#method-i-attribute_missing","(match, *args, &block)","<p><code>attribute_missing</code> is like <code>method_missing</code>, but for attributes. When <code>method_missing</code> is called we check …\n",null,0],["attribute_names","ActiveModel::Attributes::ClassMethods","rails/classes/ActiveModel/Attributes/ClassMethods.html#method-i-attribute_names","()","<p>Returns an array of attribute names as strings\n\n<pre><code>class Person\n  include ActiveModel::Attributes\n\n  attribute ...\n</code></pre>\n",null,0],["attribute_names","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-attribute_names","()","<p>Returns all error attribute names\n\n<pre><code>person.errors.messages        # =&gt; {:name=&gt;[&quot;cannot be nil&quot;, &quot;must be ...\n</code></pre>\n",null,0],["attribute_names","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-attribute_names","()","<p>Returns an array of names for the attributes available on this object.\n\n<pre><code>class Person &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["attribute_names","ActiveRecord::AttributeMethods::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_names","()","<p>Returns an array of column names as strings if it’s not an abstract class and table exists. Otherwise …\n",null,0],["attribute_names","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-attribute_names","()","<p>Return the list of all instance variables.\n",null,1],["attribute_present?","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-attribute_present-3F","(attr_name)","<p>Returns <code>true</code> if the specified <code>attribute</code> has been set by the user or by a database load and is neither …\n",null,0],["attributes","ActionText::TrixAttachment","rails/classes/ActionText/TrixAttachment.html#method-i-attributes","()","",null,0],["attributes","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-attributes","()","<p>Returns a hash of all the attributes with their names as keys and the values of the attributes as values. …\n",null,0],["attributes","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-attributes","()","",null,1],["attributes","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-attributes","()","<p>Attributes cache accessor.  Maps a class to an Array of its attributes.\n",null,1],["attributes","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-attributes","()","<p>Returns attributes.\n",null,1],["attributes=","ActiveModel::AttributeAssignment","rails/classes/ActiveModel/AttributeAssignment.html#method-i-attributes-3D","(new_attributes)","",null,0],["attributes=","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-attributes-3D","(p1)","",null,1],["attributes=","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-attributes-3D","(val)","<p>Setter for attributes <code>val</code>.\n",null,1],["attributes_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-attributes_before_type_cast","()","<p>Returns a hash of attributes before typecasting and deserialization.\n\n<pre><code>class Task &lt; ActiveRecord::Base\nend ...\n</code></pre>\n",null,0],["attributes_for_database","ActiveRecord::AttributeMethods::BeforeTypeCast","rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-attributes_for_database","()","<p>Returns a hash of attributes for assignment to the database.\n",null,0],["attributes_for_hash","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-i-attributes_for_hash","()","",null,0],["attributes_in_database","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-attributes_in_database","()","<p>Returns a hash of the attributes that will change when the record is next saved.\n<p>The hash keys are the …\n",null,0],["attributes_names","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-attributes_names","()","",null,0],["audio?","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-audio-3F","()","<p>Returns true if the content_type of this blob is in the audio range, like audio/mpeg.\n",null,0],["audio_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-audio_path","(source, options = {})","<p>Computes the path to an audio asset in the public audios directory. Full paths from the document root …\n",null,0],["audio_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-audio_tag","(*sources)","<p>Returns an HTML audio tag for the <code>sources</code>. If <code>sources</code> is a string, a single audio tag will be returned. …\n",null,0],["audio_url","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-audio_url","(source, options = {})","<p>Computes the full URL to an audio asset in the public audios directory. This will use <code>audio_path</code> internally, …\n",null,0],["auth_data=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-auth_data-3D","(p1)","<p>Sets the cipher’s additional authenticated data. This field must be set when using AEAD cipher modes …\n",null,1],["auth_param","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-auth_param","(request)","",null,0],["auth_scheme","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-auth_scheme","(request)","",null,0],["auth_tag","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-auth_tag","(p1 = v1)","<p>Gets the authentication tag generated by Authenticated Encryption Cipher modes (GCM for example). This …\n",null,1],["auth_tag=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-auth_tag-3D","(p1)","<p>Sets the authentication tag to verify the integrity of the ciphertext. This can be called only when the …\n",null,1],["auth_tag_len=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-auth_tag_len-3D","(p1)","<p>Sets the length of the authentication tag to be generated or to be given for AEAD ciphers that requires …\n",null,1],["authenticate","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-authenticate","(request, &login_procedure)","",null,0],["authenticate","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authenticate","(request, realm, &password_procedure)","<p>Returns false on a valid response, true otherwise.\n",null,0],["authenticate","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-authenticate","(controller, &login_procedure)","<p>If token Authorization header is present, call the login procedure with the present token and options. …\n",null,0],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_or_request_with_http_basic","(realm = nil, message = nil, &login_procedure)","",null,0],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_or_request_with_http_digest","(realm = \"Application\", message = nil, &password_procedure)","<p>Authenticate using an HTTP Digest, or otherwise render an HTTP header requesting the client to send a …\n",null,0],["authenticate_or_request_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_or_request_with_http_token","(realm = \"Application\", message = nil, &login_procedure)","<p>Authenticate using an HTTP Bearer token, or otherwise render an HTTP header requesting the client to …\n",null,0],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_with_http_basic","(&login_procedure)","",null,0],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_with_http_digest","(realm = \"Application\", &password_procedure)","<p>Authenticate using an HTTP Digest. Returns true if authentication is successful, false otherwise.\n",null,0],["authenticate_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_with_http_token","(&login_procedure)","<p>Authenticate using an HTTP Bearer token. Returns true if authentication is successful, false otherwise. …\n",null,0],["authenticated?","ActionMailbox::Ingresses::Mailgun::InboundEmailsController::Authenticator","rails/classes/ActionMailbox/Ingresses/Mailgun/InboundEmailsController/Authenticator.html#method-i-authenticated-3F","()","",null,0],["authenticated?","ActionMailbox::Ingresses::Mandrill::InboundEmailsController::Authenticator","rails/classes/ActionMailbox/Ingresses/Mandrill/InboundEmailsController/Authenticator.html#method-i-authenticated-3F","()","",null,0],["authenticated?","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-authenticated-3F","()","<p>Indicated whether this Cipher instance uses an Authenticated Encryption mode.\n",null,1],["authentication_header","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_header","(controller, realm)","",null,0],["authentication_request","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-authentication_request","(controller, realm, message)","",null,0],["authentication_request","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_request","(controller, realm, message = nil)","",null,0],["authentication_request","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-authentication_request","(controller, realm, message = nil)","<p>Sets a WWW-Authenticate header to let the client know a token is desired.\n<p>Returns nothing.\n<p>Parameters\n",null,0],["author","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-author","()","<p>Singular reader for #authors.  Returns the first author in the list\n",null,1],["author=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-author-3D","(o)","<p>Singular (alternative) writer for #authors\n<p>Usage:\n\n<pre><code>spec.author = &#39;John Jones&#39;\n</code></pre>\n",null,1],["authority","URI::HTTP","ruby/classes/URI/HTTP.html#method-i-authority","()","<p>Description\n<p>Returns the authority for an HTTP uri, as defined in datatracker.ietf.org/doc/html/rfc3986/#section-3.2 …\n",null,1],["authority_key_identifier","OpenSSL::X509::Extension::AuthorityKeyIdentifier","ruby/classes/OpenSSL/X509/Extension/AuthorityKeyIdentifier.html#method-i-authority_key_identifier","()","<p>Get the issuing certificate’s key identifier from the authorityKeyIdentifier extension, as described …\n",null,1],["authorization","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-authorization","()","<p>Returns the authorization header regardless of whether it was specified directly or through one of the …\n",null,0],["authors","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-authors","()","<p>The list of author names who wrote this gem.\n\n<pre><code>spec.authors = [&#39;Chad Fowler&#39;, &#39;Jim Weirich&#39;, &#39;Rich Kilmer&#39;]\n</code></pre>\n",null,1],["authors=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-authors-3D","(value)","<p>A list of authors for this gem.\n<p>Alternatively, a single author can be specified by assigning a string …\n",null,1],["auto_compact","GC","ruby/classes/GC.html#method-c-auto_compact","()","<p>Returns whether or not automatic compaction has been enabled.\n",null,1],["auto_compact=","GC","ruby/classes/GC.html#method-c-auto_compact-3D","(p1)","<p>Updates automatic compaction mode.\n<p>When enabled, the compactor will execute on every major collection. …\n",null,1],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-auto_discovery_link_tag","(type = :rss, url_options = {}, tag_options = {})","<p>Returns a link tag that browsers and feed readers can use to auto-detect an RSS, Atom, or JSON feed. …\n",null,0],["auto_indent","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-auto_indent","(&block)","",null,1],["auto_indent_proc=","Reline::Core","ruby/classes/Reline/Core.html#method-i-auto_indent_proc-3D","(p)","",null,1],["autoclose=","IO","ruby/classes/IO.html#method-i-autoclose-3D","(p1)","<p>Sets auto-close flag.\n\n<pre><code>f = File.open(File::NULL)\nIO.for_fd(f.fileno).close\nf.gets # raises Errno::EBADF ...\n</code></pre>\n",null,1],["autoclose?","IO","ruby/classes/IO.html#method-i-autoclose-3F","()","<p>Returns <code>true</code> if the underlying file descriptor of <em>ios</em> will be closed at its finalization or at calling …\n",null,1],["autoload","ActiveSupport::Autoload","rails/classes/ActiveSupport/Autoload.html#method-i-autoload","(const_name, path = @_at_path)","",null,0],["autoload","Kernel","ruby/classes/Kernel.html#method-i-autoload","(p1, p2)","\n<pre><code>Registers _filename_ to be loaded (using Kernel::require)\nthe first time that _const_ (which may be a ...\n</code></pre>\n",null,1],["autoload","Module","ruby/classes/Module.html#method-i-autoload","(p1, p2)","\n<pre><code>Registers _filename_ to be loaded (using Kernel::require)\nthe first time that _const_ (which may be a ...\n</code></pre>\n",null,1],["autoload?","Kernel","ruby/classes/Kernel.html#method-i-autoload-3F","(*args)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as <code>autoload</code>.\n\n<pre><code>autoload(:B, &quot;b&quot;)\nautoload?(:B)      ...\n</code></pre>\n",null,1],["autoload?","Module","ruby/classes/Module.html#method-i-autoload-3F","(*args)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as <code>autoload</code> in the namespace of <em>mod</em> or one of its …\n",null,1],["autoload_at","ActiveSupport::Autoload","rails/classes/ActiveSupport/Autoload.html#method-i-autoload_at","(path)","",null,0],["autoload_once","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-autoload_once","()","",null,0],["autoload_once_paths","Rails::Engine::Configuration","rails/classes/Rails/Engine/Configuration.html#method-i-autoload_once_paths","()","",null,0],["autoload_paths","Rails::Engine::Configuration","rails/classes/Rails/Engine/Configuration.html#method-i-autoload_paths","()","",null,0],["autoload_paths","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-autoload_paths","()","",null,0],["autoload_under","ActiveSupport::Autoload","rails/classes/ActiveSupport/Autoload.html#method-i-autoload_under","(path)","",null,0],["autoloaders","Rails","rails/classes/Rails.html#method-c-autoloaders","()","",null,0],["autoloads","ActiveSupport::Autoload","rails/classes/ActiveSupport/Autoload.html#method-i-autoloads","()","",null,0],["autosave=","ActiveRecord::Reflection::MacroReflection","rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-autosave-3D","(autosave)","",null,0],["avail_in","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-avail_in","()","<p>Returns bytes of data in the input buffer. Normally, returns 0.\n",null,1],["avail_out","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-avail_out","()","<p>Returns number of bytes of free spaces in output buffer.  Because the free space is allocated automatically, …\n",null,1],["avail_out=","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-avail_out-3D","(p1)","<p>Allocates <code>size</code> bytes of free space in the output buffer. If there are more than <code>size</code> bytes already in …\n",null,1],["available_action?","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-available_action-3F","(action_name)","<p>Returns true if a method for the action is available and can be dispatched, false otherwise.\n<p>Notice that …\n",null,0],["available_specs","Gem::SpecFetcher","ruby/classes/Gem/SpecFetcher.html#method-i-available_specs","(type)","<p>Returns a list of gems available for each source in Gem::sources.\n<p><code>type</code> can be one of 3 values: :released …\n",null,1],["average","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-average","(column_name)","<p>Calculates the average value on a given column. Returns <code>nil</code> if there’s no row. See #calculate for …\n",null,0],["await_commit","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-await_commit","()","",null,0],["await_sent","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-await_sent","()","",null,0],["b","String","ruby/classes/String.html#method-i-b","()","<p>Returns a copy of <code>self</code> that has ASCII-8BIT encoding; the underlying bytes are not modified:\n\n<pre><code>s = &quot;\\x99&quot; ...\n</code></pre>\n",null,1],["backend","ActiveSupport::XmlMini","rails/classes/ActiveSupport/XmlMini.html#method-i-backend","()","",null,0],["backend=","ActiveSupport::XmlMini","rails/classes/ActiveSupport/XmlMini.html#method-i-backend-3D","(name)","",null,0],["backtrace","Exception","ruby/classes/Exception.html#method-i-backtrace","()","<p>Returns any backtrace associated with the exception. The backtrace is an array of strings, each containing …\n",null,1],["backtrace","Fiber","ruby/classes/Fiber.html#method-i-backtrace","(*args)","<p>Returns the current execution stack of the fiber. <code>start</code>, <code>count</code> and <code>end</code> allow to select only parts of …\n",null,1],["backtrace","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-backtrace","()","<p>True if the backtrace option has been specified, or debug is on.\n",null,1],["backtrace","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-backtrace","(exception)","<p>Prints a formatted backtrace to the errors stream if backtraces are enabled.\n",null,1],["backtrace","Thread","ruby/classes/Thread.html#method-i-backtrace","(*args)","<p>Returns the current backtrace of the target thread.\n",null,1],["backtrace_cleaner","Rails","rails/classes/Rails.html#method-c-backtrace_cleaner","()","",null,0],["backtrace_locations","Exception","ruby/classes/Exception.html#method-i-backtrace_locations","()","<p>Returns any backtrace associated with the exception. This method is similar to Exception#backtrace, but …\n",null,1],["backtrace_locations","Fiber","ruby/classes/Fiber.html#method-i-backtrace_locations","(*args)","<p>Like #backtrace, but returns each line of the execution stack as a Thread::Backtrace::Location. Accepts …\n",null,1],["backtrace_locations","Thread","ruby/classes/Thread.html#method-i-backtrace_locations","(*args)","<p>Returns the execution stack for the target thread—an array containing backtrace location objects.\n<p>See …\n",null,1],["backtracking!","Gem::Resolver::Stats","ruby/classes/Gem/Resolver/Stats.html#method-i-backtracking-21","()","",null,1],["backward_char","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-backward_char","(key, arg: 1)","",null,1],["backward_delete_char","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-backward_delete_char","(key, arg: 1)","",null,1],["backward_kill_word","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-backward_kill_word","(key)","",null,1],["backward_word","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-backward_word","(key)","",null,1],["banner","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-banner","(*)","<p>Use Rails’ default banner.\n",null,0],["banner","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-banner","()","<p>Use Rails default banner.\n",null,0],["banner","OptionParser","ruby/classes/OptionParser.html#method-i-banner","()","<p>Heading banner preceding summary.\n",null,1],["base","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-base","()","<p>Returns the part of the filename preceding any extension.\n\n<pre><code>ActiveStorage::Filename.new(&quot;racecar.jpg&quot;).base ...\n</code></pre>\n",null,0],["base","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-base","(href = \"\")","<p>Generate a Document Base URI element as a String.\n<p><code>href</code> can either by a string, giving the base URL for …\n",null,1],["base","OptionParser","ruby/classes/OptionParser.html#method-i-base","()","<p>Subject of #on_tail.\n",null,1],["base36","SecureRandom","rails/classes/SecureRandom.html#method-c-base36","(n = 16)","<p>SecureRandom.base36 generates a random base36 string in lowercase.\n<p>The argument <em>n</em> specifies the length …\n",null,0],["base58","SecureRandom","rails/classes/SecureRandom.html#method-c-base58","(n = 16)","<p>SecureRandom.base58 generates a random base58 string.\n<p>The argument <em>n</em> specifies the length of the random …\n",null,0],["base64","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-base64","(n=nil)","<p>Generate a random base64 string.\n<p>The argument <em>n</em> specifies the length, in bytes, of the random number to …\n",null,1],["base64digest","Digest::Class","ruby/classes/Digest/Class.html#method-c-base64digest","(str, *args)","<p>Returns the base64 encoded hash value of a given <em>string</em>.  The return value is properly padded with ‘=’ …\n",null,1],["base64digest","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-base64digest","(str = nil)","<p>If none is given, returns the resulting hash value of the digest in a base64 encoded form, keeping the …\n",null,1],["base64digest","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-c-base64digest","(digest, key, data)","<p>Returns the authentication code as a Base64-encoded string. The <em>digest</em> parameter specifies the digest …\n",null,1],["base64digest","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-base64digest","()","<p>Returns the authentication code an a Base64-encoded string.\n",null,1],["base64digest!","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-base64digest-21","()","<p>Returns the resulting hash value and resets the digest to the initial state.\n",null,1],["base_class?","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-base_class-3F","()","<p>Returns whether the class is a base class. See #base_class for more information.\n",null,0],["base_dir","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-base_dir","()","<p>Returns the full path to the base gem directory.\n<p>eg: /usr/local/lib/ruby/gems/1.8\n",null,1],["base_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-base_dir","()","",null,1],["base_label","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-base_label","()","<p>Returns the base label of this instruction sequence.\n<p>For example, using irb:\n\n<pre><code>iseq = RubyVM::InstructionSequence.compile(&#39;num ...\n</code></pre>\n",null,1],["base_label","Thread::Backtrace::Location","ruby/classes/Thread/Backtrace/Location.html#method-i-base_label","()","<p>Returns the base label of this frame.\n<p>Usually same as #label, without decoration.\n",null,1],["base_name","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-base_name","()","<p>Sets the base_name taking into account the current class namespace.\n\n<pre><code>Rails::Command::TestCommand.base_name ...\n</code></pre>\n",null,0],["base_name","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-base_name","()","<p>Sets the base_name taking into account the current class namespace.\n",null,0],["base_name","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-base_name","()","<p>Base name of this file\n",null,1],["base_root","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-base_root","()","<p>Returns the base root for a common set of generators. This is used to dynamically guess the default source …\n",null,0],["basename","File","ruby/classes/File.html#method-c-basename","(*args)","<p>Returns the last component of the filename given in <em>file_name</em> (after first stripping trailing separators), …\n",null,1],["basename","Pathname","ruby/classes/Pathname.html#method-i-basename","(p1 = v1)","<p>Returns the last component of the path.\n<p>See File.basename.\n",null,1],["basic","OpenSSL::OCSP::Response","ruby/classes/OpenSSL/OCSP/Response.html#method-i-basic","()","<p>Returns a BasicResponse for this response\n",null,1],["basic_auth","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-basic_auth","(account, password)","<p>Sets header <code>&#39;Authorization&#39;</code> using the given <code>account</code> and <code>password</code> strings:\n\n<pre><code>req.basic_auth(&#39;my_account&#39;, ...\n</code></pre>\n",null,1],["basic_quote_characters=","Reline::Core","ruby/classes/Reline/Core.html#method-i-basic_quote_characters-3D","(v)","",null,1],["basic_word_break_characters=","Reline::Core","ruby/classes/Reline/Core.html#method-i-basic_word_break_characters-3D","(v)","",null,1],["batch_size","ActiveRecord::Batches::BatchEnumerator","rails/classes/ActiveRecord/Batches/BatchEnumerator.html#method-i-batch_size","()","<p>The size of the batches yielded by the BatchEnumerator.\n",null,0],["bcc_addresses","Mail::Message","rails/classes/Mail/Message.html#method-i-bcc_addresses","()","",null,0],["beat","ActionCable::Connection::Base","rails/classes/ActionCable/Connection/Base.html#method-i-beat","()","",null,0],["becomes","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-becomes","(klass)","<p>Returns an instance of the specified <code>klass</code> with the attributes of the current record. This is mostly …\n",null,0],["becomes!","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-becomes-21","(klass)","<p>Wrapper around #becomes that also changes the instance’s STI column value. This is especially useful …\n",null,0],["beep","IO","ruby/classes/IO.html#method-i-beep","()","",null,1],["before","ActionDispatch::Callbacks","rails/classes/ActionDispatch/Callbacks.html#method-c-before","(*args, &block)","",null,0],["before","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-before","(time = ::Time.current)","",null,0],["before","Rails::Initializable::Initializer","rails/classes/Rails/Initializable/Initializer.html#method-i-before","()","",null,0],["before?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-before-3F","(date_or_time)","<p>Returns true if the date/time falls before <code>date_or_time</code>.\n",null,0],["before_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_action","","<p>Append a callback before actions. See _insert_callbacks for parameter details.\n<p>If the callback renders …\n",null,0],["before_class_unload","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-c-before_class_unload","(*args, &block)","<p>Registers a callback that will run immediately before the classes are unloaded.\n",null,0],["before_configuration","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-before_configuration","(&block)","<p>First configurable block to run. Called before any initializers are run.\n",null,0],["before_create","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-before_create","","<p>Registers a callback to be called before a record is created. See ActiveRecord::Callbacks for more information. …\n",null,0],["before_destroy","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-before_destroy","","<p>Registers a callback to be called before a record is destroyed. See ActiveRecord::Callbacks for more …\n",null,0],["before_eager_load","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-before_eager_load","(&block)","<p>Third configurable block to run. Does not run if <code>config.eager_load</code> set to false.\n",null,0],["before_enqueue","ActiveJob::Callbacks::ClassMethods","rails/classes/ActiveJob/Callbacks/ClassMethods.html#method-i-before_enqueue","(*filters, &blk)","<p>Defines a callback that will get called right before the job is enqueued.\n\n<pre><code>class VideoProcessJob &lt; ActiveJob::Base ...\n</code></pre>\n",null,0],["before_initialize","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-before_initialize","(&block)","<p>Second configurable block to run. Called before frameworks initialize.\n",null,0],["before_perform","ActiveJob::Callbacks::ClassMethods","rails/classes/ActiveJob/Callbacks/ClassMethods.html#method-i-before_perform","(*filters, &blk)","<p>Defines a callback that will get called right before the job’s perform method is executed.\n\n<pre><code>class VideoProcessJob ...\n</code></pre>\n",null,0],["before_processing","ActionMailbox::Callbacks","rails/classes/ActionMailbox/Callbacks.html#method-i-before_processing","(*methods, &block)","",null,0],["before_reset","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-c-before_reset","(&block)","<p>Calls this block before #reset is called on the instance. Used for resetting external collaborators that …\n",null,0],["before_running_rdoc","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-before_running_rdoc","(&block)","<p>The block passed to this method will be called just before running the RDoc generator. It is allowed …\n",null,1],["before_save","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-before_save","","<p>Registers a callback to be called before a record is saved. See ActiveRecord::Callbacks for more information. …\n",null,0],["before_subscribe","ActionCable::Channel::Callbacks::ClassMethods","rails/classes/ActionCable/Channel/Callbacks/ClassMethods.html#method-i-before_subscribe","(*methods, &block)","",null,0],["before_unsubscribe","ActionCable::Channel::Callbacks::ClassMethods","rails/classes/ActionCable/Channel/Callbacks/ClassMethods.html#method-i-before_unsubscribe","(*methods, &block)","",null,0],["before_update","ActiveRecord::Callbacks::ClassMethods","rails/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-before_update","","<p>Registers a callback to be called before a record is updated. See ActiveRecord::Callbacks for more information. …\n",null,0],["before_validation","ActiveModel::Validations::Callbacks::ClassMethods","rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-before_validation","(*args, &block)","<p>Defines a callback that will get called right before validation.\n\n<pre><code>class Person\n  include ActiveModel::Validations ...\n</code></pre>\n",null,0],["begin","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-begin","()","",null,1],["begin","MatchData","ruby/classes/MatchData.html#method-i-begin","(p1)","<p>Returns the offset (in characters) of the beginning of the specified match.\n<p>When non-negative integer …\n",null,1],["begin","Range","ruby/classes/Range.html#method-i-begin","()","<p>Returns the object that defines the beginning of <code>self</code>.\n\n<pre><code>(1..4).begin # =&gt; 1\n(..2).begin  # =&gt; nil\n</code></pre>\n<p>Related: …\n",null,1],["begin_adding","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-begin_adding","()","<p>Call this to mark the beginning of parsing for display purposes\n",null,1],["begin_addr","IPAddr","ruby/classes/IPAddr.html#method-i-begin_addr","()","",null,1],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-begin_db_transaction","()","<p>Begins the transaction (and turns off auto-committing).\n",null,0],["begin_isolated_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-begin_isolated_db_transaction","(isolation)","<p>Begins the transaction with the isolation level set. Raises an error by default; adapters that support …\n",null,0],["beginning_of_day","Date","rails/classes/Date.html#method-i-beginning_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the …\n",null,0],["beginning_of_day","DateTime","rails/classes/DateTime.html#method-i-beginning_of_day","()","<p>Returns a new DateTime representing the start of the day (0:00).\n",null,0],["beginning_of_day","Time","rails/classes/Time.html#method-i-beginning_of_day","()","<p>Returns a new Time representing the start of the day (0:00)\n",null,0],["beginning_of_hour","DateTime","rails/classes/DateTime.html#method-i-beginning_of_hour","()","<p>Returns a new DateTime representing the start of the hour (hh:00:00).\n",null,0],["beginning_of_hour","Time","rails/classes/Time.html#method-i-beginning_of_hour","()","<p>Returns a new Time representing the start of the hour (x:00)\n",null,0],["beginning_of_line","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-beginning_of_line","(key)","",null,1],["beginning_of_line?","StringScanner","ruby/classes/StringScanner.html#method-i-beginning_of_line-3F","()","<p>Returns <code>true</code> if and only if the scan pointer is at the beginning of the line.\n\n<pre><code>s = StringScanner.new(&quot;test\\ntest\\n&quot;) ...\n</code></pre>\n",null,1],["beginning_of_minute","DateTime","rails/classes/DateTime.html#method-i-beginning_of_minute","()","<p>Returns a new DateTime representing the start of the minute (hh:mm:00).\n",null,0],["beginning_of_minute","Time","rails/classes/Time.html#method-i-beginning_of_minute","()","<p>Returns a new Time representing the start of the minute (x:xx:00)\n",null,0],["beginning_of_month","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_month","()","<p>Returns a new date/time at the start of the month.\n\n<pre><code>today = Date.today # =&gt; Thu, 18 Jun 2015\ntoday.beginning_of_month ...\n</code></pre>\n",null,0],["beginning_of_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_quarter","()","<p>Returns a new date/time at the start of the quarter.\n\n<pre><code>today = Date.today # =&gt; Fri, 10 Jul 2015\ntoday.beginning_of_quarter ...\n</code></pre>\n",null,0],["beginning_of_week","Date","rails/classes/Date.html#method-c-beginning_of_week","()","<p>Returns the week start (e.g. <code>:monday</code>) for the current request, if this has been set (via Date.beginning_of_week= …\n",null,0],["beginning_of_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_week","(start_day = Date.beginning_of_week)","<p>Returns a new date/time representing the start of this week on the given day. Week is assumed to start …\n",null,0],["beginning_of_week=","Date","rails/classes/Date.html#method-c-beginning_of_week-3D","(week_start)","<p>Sets <code>Date.beginning_of_week</code> to a week start (e.g. <code>:monday</code>) for current request/thread.\n<p>This method accepts …\n",null,0],["beginning_of_year","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-beginning_of_year","()","<p>Returns a new date/time at the beginning of the year.\n\n<pre><code>today = Date.today # =&gt; Fri, 10 Jul 2015\ntoday.beginning_of_year ...\n</code></pre>\n",null,0],["begins?","Gem::Command","ruby/classes/Gem/Command.html#method-i-begins-3F","(long, short)","<p>True if <code>long</code> begins with the characters from <code>short</code>.\n",null,1],["behavior","ActiveSupport::Deprecation::Behavior","rails/classes/ActiveSupport/Deprecation/Behavior.html#method-i-behavior","()","<p>Returns the current behavior or if one isn’t set, defaults to <code>:stderr</code>.\n",null,0],["behavior=","ActiveSupport::Deprecation::Behavior","rails/classes/ActiveSupport/Deprecation/Behavior.html#method-i-behavior-3D","(behavior)","<p>Sets the behavior to the specified value. Can be a single value, array, or an object that responds to …\n",null,0],["belongs_to","ActiveRecord::Associations::ClassMethods","rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-belongs_to","(name, scope = nil, **options)","<p>Specifies a one-to-one association with another class. This method should only be used if this class …\n",null,0],["belongs_to","ActiveRecord::ConnectionAdapters::SQLite3::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3/TableDefinition.html#method-i-belongs_to","(*args, **options)","",null,0],["belongs_to","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-belongs_to","(*args, **options)","",null,0],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-belongs_to","(*args, **options)","",null,0],["belongs_to?","Rails::Initializable::Initializer","rails/classes/Rails/Initializable/Initializer.html#method-i-belongs_to-3F","(group)","",null,0],["benchmark","ActiveSupport::Benchmarkable","rails/classes/ActiveSupport/Benchmarkable.html#method-i-benchmark","(message = \"Benchmarking\", options = {}, &block)","<p>Allows you to measure the execution time of a block in a template and records the result to the log. …\n",null,0],["benchmark","Benchmark","ruby/classes/Benchmark.html#method-c-benchmark","(caption = \"\", label_width = nil, format = nil, *labels)","<p>Invokes the block with a Benchmark::Report object, which may be used to collect and report on the results …\n",null,1],["benchmark.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/benchmark/templates/benchmark_rb_tt.html","","<p># frozen_string_literal: true\n<p>require_relative “../../config/environment”\n<p># Any benchmarking …\n",null,0],["between?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-between-3F","(min, max)","<p>Returns true if the current object’s time is within the specified <code>min</code> and <code>max</code> time.\n",null,0],["between?","Comparable","ruby/classes/Comparable.html#method-i-between-3F","(p1, p2)","<p>Returns <code>false</code> if <em>obj</em> <code>&lt;=&gt;</code> <em>min</em> is less than zero or if <em>obj</em> <code>&lt;=&gt;</code> <em>max</em> is greater than zero, <code>true</code> …\n",null,1],["bigserial","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-bigserial","","",null,0],["bin","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-bin","()","",null,0],["bin","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-bin","(force = false)","",null,0],["bin_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-bin_dir","()","<p>Returns the full path to installed gem’s bin directory.\n<p>NOTE: do not confuse this with <code>bindir</code>, which …\n",null,1],["bin_file","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-bin_file","(name)","<p>Returns the full path to an executable named <code>name</code> in this gem.\n",null,1],["bin_file_names","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-bin_file_names","()","",null,1],["bin_path","Bundler","ruby/classes/Bundler.html#method-c-bin_path","()","<p>Returns absolute location of where binstubs are installed to.\n",null,1],["bin_path","Gem","ruby/classes/Gem.html#method-c-bin_path","(name, exec_name = nil, *requirements)","<p>Find the full path to the executable for gem <code>name</code>.  If the <code>exec_name</code> is not given, an exception will …\n",null,1],["bin_when_updating","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-bin_when_updating","()","",null,0],["binary?","ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Bit::Data","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/OID/Bit/Data.html#method-i-binary-3F","()","",null,0],["binary?","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-binary-3F","(file)","<p>Determines if the file is a “binary” file which basically means it has content that an RDoc …\n",null,1],["binary_mode","Gem","ruby/classes/Gem.html#method-c-binary_mode","()","<p>The mode needed to read a file as straight binary.\n",null,1],["bind","Rails::Initializable::Initializer","rails/classes/Rails/Initializable/Initializer.html#method-i-bind","(context)","",null,0],["bind","Addrinfo","ruby/classes/Addrinfo.html#method-i-bind","()","<p>creates a socket bound to self.\n<p>If a block is given, it is called with the socket and the value of the …\n",null,1],["bind","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-bind","(signature, *opts, &blk)","<p>Creates a global method from the given C <code>signature</code> using the given <code>opts</code> as bind parameters with the given …\n",null,1],["bind","Socket","ruby/classes/Socket.html#method-i-bind","(p1)","<p>Binds to the given local address.\n<p>Parameter\n<p><code>local_sockaddr</code> - the <code>struct</code> sockaddr contained in a string …\n",null,1],["bind","UDPSocket","ruby/classes/UDPSocket.html#method-i-bind","(p1, p2)","<p>Binds <em>udpsocket</em> to <em>host</em>:<em>port</em>.\n\n<pre><code>u1 = UDPSocket.new\nu1.bind(&quot;127.0.0.1&quot;, 4913)\nu1.send &quot;message-to-self&quot;, ...\n</code></pre>\n",null,1],["bind","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-bind","(p1)","<p>Bind <em>umeth</em> to <em>obj</em>. If Klass was the class from which <em>umeth</em> was obtained, <code>obj.kind_of?(Klass)</code> must be …\n",null,1],["bind_call","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-bind_call","(*args)","<p>Bind <em>umeth</em> to <em>recv</em> and then invokes the method with the specified arguments. This is semantically equivalent …\n",null,1],["bind_function","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-bind_function","(name, ctype, argtype, call_type = nil, &block)","<p>Returns a new closure wrapper for the <code>name</code> function.\n<p><code>ctype</code> is the return type of the function\n<p><code>argtype</code> is …\n",null,1],["bind_key","Reline::Config","ruby/classes/Reline/Config.html#method-i-bind_key","(key, func_name)","",null,1],["bind_locals","ActionView::UnboundTemplate","rails/classes/ActionView/UnboundTemplate.html#method-i-bind_locals","(locals)","",null,0],["bind_variable","Reline::Config","ruby/classes/Reline/Config.html#method-i-bind_variable","(name, value)","",null,1],["binding","Kernel","ruby/classes/Kernel.html#method-i-binding","()","<p>Returns a Binding object, describing the variable and method bindings at the point of call. This object …\n",null,1],["binding","Proc","ruby/classes/Proc.html#method-i-binding","()","<p>Returns the binding associated with <em>prc</em>.\n\n<pre><code>def fred(param)\n  proc {}\nend\n\nb = fred(99)\neval(&quot;param&quot;, b.binding) ...\n</code></pre>\n",null,1],["binding","TracePoint","ruby/classes/TracePoint.html#method-i-binding","()","<p>Return the generated binding object from event.\n<p>Note that for <code>:c_call</code> and <code>:c_return</code> events, the method …\n",null,1],["bindir","Gem","ruby/classes/Gem.html#method-c-bindir","(install_dir=Gem.dir)","<p>The path where gem executables are to be installed.\n",null,1],["binmode","ARGF","ruby/classes/ARGF.html#method-i-binmode","()","<p>Puts ARGF into binary mode. Once a stream is in binary mode, it cannot be reset to non-binary mode.  …\n",null,1],["binmode","IO","ruby/classes/IO.html#method-i-binmode","()","<p>Sets the stream’s data mode as binary (see Data Mode).\n<p>A stream’s data mode may not be changed …\n",null,1],["binmode","StringIO","ruby/classes/StringIO.html#method-i-binmode","()","<p>Sets the data mode in <code>self</code> to binary mode; see Data Mode.\n",null,1],["binmode?","ARGF","ruby/classes/ARGF.html#method-i-binmode-3F","()","<p>Returns true if ARGF is being read in binary mode; false otherwise. To enable binary mode use ARGF.binmode …\n",null,1],["binmode?","CSV","ruby/classes/CSV.html#method-i-binmode-3F","()","",null,1],["binmode?","IO","ruby/classes/IO.html#method-i-binmode-3F","()","<p>Returns <code>true</code> if the stream is on binary mode, <code>false</code> otherwise. See Data Mode.\n",null,1],["binread","IO","ruby/classes/IO.html#method-c-binread","(p1, p2 = v2, p3 = v3)","<p>Behaves like IO.read, except that the stream is opened in binary mode with ASCII-8BIT encoding.\n<p>When called …\n",null,1],["binread","Pathname","ruby/classes/Pathname.html#method-i-binread","(p1 = v1, p2 = v2)","<p>Returns all the bytes from the file, or the first <code>N</code> if specified.\n<p>See File.binread.\n",null,1],["binwrite","IO","ruby/classes/IO.html#method-c-binwrite","(*args)","<p>Behaves like IO.write, except that the stream is opened in binary mode with ASCII-8BIT encoding.\n<p>When …\n",null,1],["binwrite","Pathname","ruby/classes/Pathname.html#method-i-binwrite","(p1 = v1, p2 = v2, p3 = v3)","<p>Writes <code>contents</code> to the file, opening it in binary mode.\n<p>See File.binwrite.\n",null,1],["birthtime","File","ruby/classes/File.html#method-c-birthtime","(p1)","<p>Returns the birth time for the named file.\n<p><em>file_name</em> can be an IO object.\n\n<pre><code>File.birthtime(&quot;testfile&quot;)   ...\n</code></pre>\n",null,1],["birthtime","File","ruby/classes/File.html#method-i-birthtime","()","<p>Returns the birth time for <em>file</em>.\n\n<pre><code>File.new(&quot;testfile&quot;).birthtime   #=&gt; Wed Apr 09 08:53:14 CDT 2003\n</code></pre>\n<p>If the …\n",null,1],["birthtime","File::Stat","ruby/classes/File/Stat.html#method-i-birthtime","()","<p>Returns the birth time for <em>stat</em>.\n<p>If the platform doesn’t have birthtime, raises NotImplementedError …\n",null,1],["birthtime","Pathname","ruby/classes/Pathname.html#method-i-birthtime","()","<p>Returns the birth time for the file. If the platform doesn’t have birthtime, raises NotImplementedError …\n",null,1],["bit","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-bit","","",null,0],["bit_length","Integer","ruby/classes/Integer.html#method-i-bit_length","()","<p>Returns the number of bits of the value of <code>self</code>, which is the bit position of the highest-order bit that …\n",null,1],["bit_set?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-bit_set-3F","(p1)","<p>Tests bit <em>bit</em> in <em>bn</em> and returns <code>true</code> if set, <code>false</code> if not set.\n",null,1],["bit_varying","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-bit_varying","","",null,0],["blank?","ActiveRecord::DatabaseConfigurations","rails/classes/ActiveRecord/DatabaseConfigurations.html#method-i-blank-3F","()","",null,0],["blank?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-blank-3F","()","<p>Returns true if relation is blank.\n",null,0],["blank?","ActiveStorage::Attached::One","rails/classes/ActiveStorage/Attached/One.html#method-i-blank-3F","()","<p>Returns <code>true</code> if an attachment is not attached.\n\n<pre><code>class User &lt; ApplicationRecord\n  has_one_attached :avatar ...\n</code></pre>\n",null,0],["blank?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-blank-3F","()","<p>An instance of ActiveSupport::TimeWithZone is never blank\n",null,0],["blank?","FalseClass","rails/classes/FalseClass.html#method-i-blank-3F","()","<p><code>false</code> is blank:\n\n<pre><code>false.blank? # =&gt; true\n</code></pre>\n<p>@return [true]\n",null,0],["blank?","NilClass","rails/classes/NilClass.html#method-i-blank-3F","()","<p><code>nil</code> is blank:\n\n<pre><code>nil.blank? # =&gt; true\n</code></pre>\n<p>@return [true]\n",null,0],["blank?","Object","rails/classes/Object.html#method-i-blank-3F","()","<p>An object is blank if it’s false, empty, or a whitespace string. For example, <code>nil</code>, ”, ‘ …\n",null,0],["blank?","String","rails/classes/String.html#method-i-blank-3F","()","<p>A string is blank if it’s empty or contains whitespaces only:\n\n<pre><code>&#39;&#39;.blank?       # =&gt; true\n&#39;   &#39;.blank? ...\n</code></pre>\n",null,0],["blank?","TrueClass","rails/classes/TrueClass.html#method-i-blank-3F","()","<p><code>true</code> is not blank:\n\n<pre><code>true.blank? # =&gt; false\n</code></pre>\n<p>@return [false]\n",null,0],["blksize","File::Stat","ruby/classes/File/Stat.html#method-i-blksize","()","<p>Returns the native file system’s block size. Will return <code>nil</code> on platforms that don’t support …\n",null,1],["blob","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-blob","","",null,0],["blob","ActiveStorage::FixtureSet","rails/classes/ActiveStorage/FixtureSet.html#method-c-blob","(filename:, **attributes)","<p>Generate a YAML-encoded representation of an ActiveStorage::Blob instance’s attributes, resolve the …\n",null,0],["blob_record.js","","rails/files/rails/activestorage/app/javascript/activestorage/blob_record_js.html","","<p>import { getMetaValue } from “./helpers”\n<p>export class BlobRecord {\n\n<pre><code>constructor(file, checksum, ...\n</code></pre>\n",null,0],["blob_upload.js","","rails/files/rails/activestorage/app/javascript/activestorage/blob_upload_js.html","","<p>export class BlobUpload {\n\n<pre><code>constructor(blob) {\n  this.blob = blob\n  this.file = blob.file\n\n  const { url, ...\n</code></pre>\n",null,0],["blobs","ActiveStorage::Attached::Many","rails/classes/ActiveStorage/Attached/Many.html#method-i-blobs","()","<p>Returns all attached blobs.\n",null,0],["block","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-block","(p1, p2)","<p>Invoked by methods like Thread.join, and by Mutex, to signify that current Fiber is blocked until further …\n",null,1],["block_all_mixed_content","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-block_all_mixed_content","(enabled = true)","<p>Specify whether to prevent the user agent from loading any assets over HTTP when the page uses HTTPS: …\n",null,0],["block_format","ActionMailer::MailHelper","rails/classes/ActionMailer/MailHelper.html#method-i-block_format","(text)","<p>Take the text and format it, indented two spaces for each line, and wrapped at 72 columns:\n\n<pre><code>text = &lt;&lt;-TEXT ...\n</code></pre>\n",null,0],["block_given?","Kernel","ruby/classes/Kernel.html#method-i-block_given-3F","()","<p>Returns <code>true</code> if <code>yield</code> would execute a block in the current context. The <code>iterator?</code> form is mildly deprecated. …\n",null,1],["block_length","Digest::Base","ruby/classes/Digest/Base.html#method-i-block_length","()","<p>Return the block length of the digest in bytes.\n",null,1],["block_length","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-block_length","()","<p>Returns the block length of the digest.\n<p>This method is overridden by each implementation subclass.\n",null,1],["block_length","Digest::SHA2","ruby/classes/Digest/SHA2.html#method-i-block_length","()","<p>Return the block length of the digest in bytes.\n\n<pre><code>Digest::SHA256.new.block_length * 8\n# =&gt; 512\nDigest::SHA384.new.block_length ...\n</code></pre>\n",null,1],["block_length","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-i-block_length","()","<p>Returns the block length of the digest algorithm, i.e. the length in bytes of an individual block. Most …\n",null,1],["block_params=","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-block_params-3D","(value)","<p>Attempts to sanitize the content passed by the Ruby parser: remove outer parentheses, etc.\n",null,1],["block_size","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-block_size","()","<p>Returns the size in bytes of the blocks on which this Cipher operates on.\n",null,1],["blockdev?","File","ruby/classes/File.html#method-c-blockdev-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a block device, <code>false</code> otherwise:\n\n<pre><code>File.blockdev?(&#39;/dev/sda1&#39;)       ...\n</code></pre>\n",null,1],["blockdev?","File::Stat","ruby/classes/File/Stat.html#method-i-blockdev-3F","()","<p>Returns <code>true</code> if the file is a block device, <code>false</code> if it isn’t or if the operating system doesn’t …\n",null,1],["blockdev?","FileTest","ruby/classes/FileTest.html#method-i-blockdev-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a block device, <code>false</code> otherwise:\n\n<pre><code>File.blockdev?(&#39;/dev/sda1&#39;)       ...\n</code></pre>\n",null,1],["blockdev?","Pathname","ruby/classes/Pathname.html#method-i-blockdev-3F","()","<p>See FileTest.blockdev?.\n",null,1],["blocking","Fiber","ruby/classes/Fiber.html#method-c-blocking","()","<p>Forces the fiber to be blocking for the duration of the block. Returns the result of the block.\n<p>See the …\n",null,1],["blocking?","Fiber","ruby/classes/Fiber.html#method-c-blocking-3F","()","<p>Returns <code>false</code> if the current fiber is non-blocking. Fiber is non-blocking if it was created via passing …\n",null,1],["blocking?","Fiber","ruby/classes/Fiber.html#method-i-blocking-3F","()","<p>Returns <code>true</code> if <code>fiber</code> is blocking and <code>false</code> otherwise. Fiber is non-blocking if it was created via passing …\n",null,1],["blockquote","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-blockquote","(cite = {})","<p>Generate a BlockQuote element as a string.\n<p><code>cite</code> can either be a string, give the URI for the source of …\n",null,1],["blocks","File::Stat","ruby/classes/File/Stat.html#method-i-blocks","()","<p>Returns the number of native file system blocks allocated for this file, or <code>nil</code> if the operating system …\n",null,1],["bm","Benchmark","ruby/classes/Benchmark.html#method-c-bm","(label_width = 0, *labels)","<p>A simple interface to the #benchmark method, #bm generates sequential reports with labels. <code>label_width</code> …\n",null,1],["bmbm","Benchmark","ruby/classes/Benchmark.html#method-c-bmbm","(width = 0)","<p>Sometimes benchmark results are skewed because code executed earlier encounters different garbage collection …\n",null,1],["body","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-body","()","<p>The request body is an IO input stream. If the RAW_POST_DATA environment variable is already set, wrap …\n",null,0],["body","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-body","()","<p>Returns the content of the response as a string. This contains the contents of any calls to <code>render</code>.\n",null,0],["body","ActionDispatch::Response::RackBody","rails/classes/ActionDispatch/Response/RackBody.html#method-i-body","()","",null,0],["body","ActionView::AbstractRenderer::RenderedCollection::EmptyCollection","rails/classes/ActionView/AbstractRenderer/RenderedCollection/EmptyCollection.html#method-i-body","()","",null,0],["body","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-i-body","()","<p>Returns the string response body; note that repeated calls for the unmodified body return a cached string: …\n",null,1],["body=","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-body-3D","(body)","<p>Allows you to manually set or override the response body.\n",null,0],["body=","Net::HTTPGenericRequest","ruby/classes/Net/HTTPGenericRequest.html#method-i-body-3D","(str)","<p>Sets the body for the request:\n\n<pre><code>req = Net::HTTP::Post.new(uri)\nreq.body # =&gt; nil\nreq.body = &#39;{&quot;title&quot;: ...\n</code></pre>\n",null,1],["body=","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-i-body-3D","(value)","<p>Sets the body of the response to the given value.\n",null,1],["body_encoding=","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-i-body_encoding-3D","(value)","<p>Sets the encoding that should be used when reading the body:\n<p>If the given value is an Encoding object, …\n",null,1],["body_parts","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-body_parts","()","",null,0],["body_permitted?","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-c-body_permitted-3F","()","<p>true if the response has a body.\n",null,1],["body_stream=","Net::HTTPGenericRequest","ruby/classes/Net/HTTPGenericRequest.html#method-i-body_stream-3D","(input)","<p>Sets the body stream for the request:\n\n<pre><code>req = Net::HTTP::Post.new(uri)          # =&gt; #&lt;Net::HTTP::Post POST&gt; ...\n</code></pre>\n",null,1],["bool","Socket::Option","ruby/classes/Socket/Option.html#method-c-bool","(p1, p2, p3, p4)","<p>Creates a new Socket::Option object which contains boolean as data. Actually 0 or 1 as int is used.\n\n<pre><code>require ...\n</code></pre>\n",null,1],["bool","Socket::Option","ruby/classes/Socket/Option.html#method-i-bool","()","<p>Returns the data in <em>sockopt</em> as an boolean value.\n\n<pre><code>sockopt = Socket::Option.int(:INET, :SOCKET, :KEEPALIVE, ...\n</code></pre>\n",null,1],["boot.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/rails/boot_rb_tt.html","","<p># Set up gems listed in the Gemfile. ENV ||= File.expand_path(“../../../Gemfile”, __dir__) …\n",null,0],["boot.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/boot_rb_tt.html","","<p>ENV ||= File.expand_path(“../Gemfile”, __dir__)\n<p>require “bundler/setup” # Set up gems …\n",null,0],["both?","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-both-3F","()","<p>Is fetching of local and remote information enabled?\n",null,1],["bottom","IRB::Frame","ruby/classes/IRB/Frame.html#method-i-bottom","(n = 0)","<p>Returns the <code>n</code> number of frames on the call stack from the first frame initialized.\n<p>Raises FrameOverflow …\n",null,1],["bottom","IRB::Frame","ruby/classes/IRB/Frame.html#method-c-bottom","(n = 0)","<p>Convenience method for Frame#bottom\n",null,1],["bounce_with","ActionMailbox::Base","rails/classes/ActionMailbox/Base.html#method-i-bounce_with","(message)","<p>Enqueues the given <code>message</code> for delivery and changes the inbound email’s status to <code>:bounced</code>.\n",null,0],["box","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-box","","",null,0],["break_on_newline","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-break_on_newline","","<p>Converts all newlines into hard breaks\n",null,1],["break_outmost_groups","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-break_outmost_groups","()","<p>Breaks the buffer into lines that are shorter than #maxwidth\n",null,1],["breakable","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-breakable","(sep=' ', width=sep.length)","<p>This says “you can break a line here if necessary”, and a <code>width</code>-column text <code>sep</code> is inserted …\n",null,1],["breakable","PrettyPrint::SingleLine","ruby/classes/PrettyPrint/SingleLine.html#method-i-breakable","(sep=' ', width=nil)","<p>Appends <code>sep</code> to the text to be output. By default <code>sep</code> is ‘ ’\n<p><code>width</code> argument is here for compatibility. …\n",null,1],["broadaddr","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-broadaddr","()","<p>Returns the broadcast address of <em>ifaddr</em>. nil is returned if the flags doesn’t have IFF_BROADCAST …\n",null,1],["broadcast","ActionCable::Server::Broadcasting","rails/classes/ActionCable/Server/Broadcasting.html#method-i-broadcast","(broadcasting, message, coder: ActiveSupport::JSON)","<p>Broadcast a hash directly to a named <code>broadcasting</code>. This will later be JSON encoded.\n",null,0],["broadcast","ActionCable::Server::Broadcasting::Broadcaster","rails/classes/ActionCable/Server/Broadcasting/Broadcaster.html#method-i-broadcast","(message)","",null,0],["broadcast","ActionCable::SubscriptionAdapter::Base","rails/classes/ActionCable/SubscriptionAdapter/Base.html#method-i-broadcast","(channel, payload)","",null,0],["broadcast","ActionCable::SubscriptionAdapter::SubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html#method-i-broadcast","(channel, message)","",null,0],["broadcast","MonitorMixin::ConditionVariable","ruby/classes/MonitorMixin/ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n",null,1],["broadcast","Thread::ConditionVariable","ruby/classes/Thread/ConditionVariable.html#method-i-broadcast","()","<p>Wakes up all threads waiting for this lock.\n",null,1],["broadcast_to","ActionCable::Channel::Broadcasting::ClassMethods","rails/classes/ActionCable/Channel/Broadcasting/ClassMethods.html#method-i-broadcast_to","(model, message)","<p>Broadcast a hash to a unique broadcasting for this <code>model</code> in this channel.\n",null,0],["broadcaster_for","ActionCable::Server::Broadcasting","rails/classes/ActionCable/Server/Broadcasting.html#method-i-broadcaster_for","(broadcasting, coder: ActiveSupport::JSON)","<p>Returns a broadcaster for a named <code>broadcasting</code> that can be reused. Useful when you have an object that …\n",null,0],["broadcasting_for","ActionCable::Channel::Broadcasting::ClassMethods","rails/classes/ActionCable/Channel/Broadcasting/ClassMethods.html#method-i-broadcasting_for","(model)","<p>Returns a unique broadcasting identifier for this <code>model</code> in this channel:\n\n<pre><code>CommentsChannel.broadcasting_for(&quot;all&quot;) ...\n</code></pre>\n",null,0],["bsearch","","ruby/files/ruby/doc/bsearch_rdoc.html","","<p>Binary Searching\n<p>A few Ruby methods support binary searching in a collection:\n<p>Array#bsearch &mdash; Returns an …\n",null,1],["bsearch","Array","ruby/classes/Array.html#method-i-bsearch","()","<p>Returns an element from <code>self</code> selected by a binary search.\n<p>See Binary Searching.\n",null,1],["bsearch","Range","ruby/classes/Range.html#method-i-bsearch","()","<p>Returns an element from <code>self</code> selected by a binary search.\n<p>See Binary Searching.\n",null,1],["bsearch_index","Array","ruby/classes/Array.html#method-i-bsearch_index","()","<p>Searches <code>self</code> as described at method #bsearch, but returns the <em>index</em> of the found element instead of …\n",null,1],["bubblebabble","Digest","ruby/classes/Digest.html#method-c-bubblebabble","(p1)","<p>Returns a BubbleBabble encoded version of a given <em>string</em>.\n",null,1],["bubblebabble","Digest::Class","ruby/classes/Digest/Class.html#method-c-bubblebabble","(*args)","<p>Returns the BubbleBabble encoded hash value of a given <em>string</em>.\n",null,1],["bubblebabble","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-bubblebabble","()","<p>Returns the resulting hash value in a Bubblebabble encoded form.\n",null,1],["bufferSize","Win32::SSPI::SecurityBuffer","ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-bufferSize","()","",null,1],["bufferType","Win32::SSPI::SecurityBuffer","ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-bufferType","()","",null,1],["buffer_initial_length","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-buffer_initial_length","()","<p>This integer returns the current initial length of the buffer.\n",null,1],["buffer_initial_length=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-buffer_initial_length-3D","(p1)","<p>This sets the initial length of the buffer to <code>length</code>, if <code>length</code> &gt; 0, otherwise its value isn’t …\n",null,1],["bug_triaging","","ruby/files/ruby/doc/bug_triaging_rdoc.html","","<p>Bug Triaging Guide\n<p>This guide discusses recommendations for triaging bugs in Ruby’s bug tracker.\n<p>Bugs …\n",null,1],["build","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-build","(context = nil, nonce = nil, nonce_directives = nil)","",null,0],["build","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-build","(app = nil, &block)","",null,0],["build","ActionDispatch::MiddlewareStack::Middleware","rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-build","(app)","",null,0],["build","ActionDispatch::PermissionsPolicy","rails/classes/ActionDispatch/PermissionsPolicy.html#method-i-build","(context = nil)","",null,0],["build","ActionView::TemplatePath","rails/classes/ActionView/TemplatePath.html#method-c-build","(name, prefix, partial)","<p>Convert name, prefix, and partial into a TemplatePath\n",null,0],["build","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-build","(attributes = {}, &block)","<p>Returns a new object of the collection type that has been instantiated with <code>attributes</code> and linked to …\n",null,0],["build","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-build","(attributes = nil, &block)","",null,0],["build","ActiveSupport::Callbacks::Filters::After","rails/classes/ActiveSupport/Callbacks/Filters/After.html#method-c-build","(callback_sequence, user_callback, user_conditions, chain_config)","",null,0],["build","ActiveSupport::Callbacks::Filters::Before","rails/classes/ActiveSupport/Callbacks/Filters/Before.html#method-c-build","(callback_sequence, user_callback, user_conditions, chain_config, filter, name)","",null,0],["build","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-c-build","(value)","<p>Creates a new Duration from a seconds value that is converted to the individual parts:\n\n<pre><code>ActiveSupport::Duration.build(31556952).parts ...\n</code></pre>\n",null,0],["build","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-c-build","(klass, params = nil)","<p>GET new POST create\n",null,0],["build","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-build","(email)","",null,1],["build","Gem::Ext::CargoBuilder","ruby/classes/Gem/Ext/CargoBuilder.html#method-i-build","(extension, dest_path, results, args = [], lib_dir = nil, cargo_dir = Dir.pwd)","",null,1],["build","Gem::Ext::CmakeBuilder","ruby/classes/Gem/Ext/CmakeBuilder.html#method-c-build","(extension, dest_path, results, args=[], lib_dir=nil, cmake_dir=Dir.pwd)","",null,1],["build","Gem::Ext::ConfigureBuilder","ruby/classes/Gem/Ext/ConfigureBuilder.html#method-c-build","(extension, dest_path, results, args=[], lib_dir=nil, configure_dir=Dir.pwd)","",null,1],["build","Gem::Ext::ExtConfBuilder","ruby/classes/Gem/Ext/ExtConfBuilder.html#method-c-build","(extension, dest_path, results, args=[], lib_dir=nil, extension_dir=Dir.pwd)","",null,1],["build","Gem::Ext::RakeBuilder","ruby/classes/Gem/Ext/RakeBuilder.html#method-c-build","(extension, dest_path, results, args=[], lib_dir=nil, extension_dir=Dir.pwd)","",null,1],["build","Gem::Package","ruby/classes/Gem/Package.html#method-i-build","(skip_validation = false, strict_validation = false)","<p>Builds this package based on the specification set by #spec=\n",null,1],["build","Gem::Package","ruby/classes/Gem/Package.html#method-c-build","(spec, skip_validation = false, strict_validation = false, file_name = nil)","",null,1],["build","Gem::RequestSet::Lockfile","ruby/classes/Gem/RequestSet/Lockfile.html#method-c-build","(request_set, gem_deps_file, dependencies = nil)","<p>Creates a new Lockfile for the given <code>request_set</code> and <code>gem_deps_file</code> location.\n",null,1],["build","URI::FTP","ruby/classes/URI/FTP.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::FTP object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build","URI::File","ruby/classes/URI/File.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::File object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build","URI::Generic","ruby/classes/URI/Generic.html#method-c-build","(args)","<p>Synopsis\n<p>See ::new.\n<p>Description\n",null,1],["build","URI::HTTP","ruby/classes/URI/HTTP.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::HTTP object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build","URI::LDAP","ruby/classes/URI/LDAP.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::LDAP object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build","URI::MailTo","ruby/classes/URI/MailTo.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::MailTo object from components, with syntax checking.\n<p>Components can be provided …\n",null,1],["build","URI::WS","ruby/classes/URI/WS.html#method-c-build","(args)","<p>Description\n<p>Creates a new URI::WS object from components, with syntax checking.\n<p>The components accepted …\n",null,1],["build2","URI::Generic","ruby/classes/URI/Generic.html#method-c-build2","(args)","<p>Synopsis\n<p>See ::new.\n<p>Description\n",null,1],["build_args","Gem::Command","ruby/classes/Gem/Command.html#method-c-build_args","()","<p>Arguments used when building gems\n",null,1],["build_args","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-build_args","()","<p>Returns the build_args used to install the gem\n",null,1],["build_args=","Gem::Command","ruby/classes/Gem/Command.html#method-c-build_args-3D","(value)","",null,1],["build_env","Gem::Ext::CargoBuilder","ruby/classes/Gem/Ext/CargoBuilder.html#method-i-build_env","()","",null,1],["build_extensions","Gem::Ext::Builder","ruby/classes/Gem/Ext/Builder.html#method-i-build_extensions","()","<p>Builds extensions.  Valid types of extensions are extconf.rb files, configure scripts and rakefiles or …\n",null,1],["build_extensions","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-build_extensions","()","<p>Builds extensions.  Valid types of extensions are extconf.rb files, configure scripts and rakefiles or …\n",null,1],["build_heading","RDoc::TomDoc","ruby/classes/RDoc/TomDoc.html#method-i-build_heading","(level)","<p>Builds a heading from the token stream\n<p>level &mdash; The level of heading to create\n\n<p>Returns\n",null,1],["build_info_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-build_info_dir","()","<p>Returns the full path to the build info directory\n",null,1],["build_info_file","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-build_info_file","()","<p>Returns the full path to the file containing the build information generated when the gem was installed …\n",null,1],["build_instrumented","ActionDispatch::MiddlewareStack::Middleware","rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-build_instrumented","(app)","",null,0],["build_paragraph","RDoc::TomDoc","ruby/classes/RDoc/TomDoc.html#method-i-build_paragraph","(margin)","<p>Builds a paragraph from the token stream\n<p>margin &mdash; Unused\n\n<p>Returns\n",null,1],["build_queue","ActiveJob::QueueAdapters::QueueClassicAdapter","rails/classes/ActiveJob/QueueAdapters/QueueClassicAdapter.html#method-i-build_queue","(queue_name)","<p>Builds a <code>QC::Queue</code> object to schedule jobs on.\n<p>If you have a custom <code>QC::Queue</code> subclass you’ll need …\n",null,0],["build_stack","Rails::Application::DefaultMiddlewareStack","rails/classes/Rails/Application/DefaultMiddlewareStack.html#method-i-build_stack","()","",null,0],["build_statement","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-build_statement","(code)","",null,1],["build_tag_values","ActionView::Helpers::TagHelper","rails/classes/ActionView/Helpers/TagHelper.html#method-c-build_tag_values","(*args)","",null,0],["build_verbatim","RDoc::TomDoc","ruby/classes/RDoc/TomDoc.html#method-i-build_verbatim","(margin)","<p>Builds a verbatim from the token stream.  A verbatim in the Examples section will be marked as in Ruby …\n",null,1],["build_view_context_class","ActionView::Rendering::ClassMethods","rails/classes/ActionView/Rendering/ClassMethods.html#method-i-build_view_context_class","(klass, supports_path, routes, helpers)","",null,0],["building_ruby","","ruby/files/ruby/doc/contributing/building_ruby_md.html","","<p>Building Ruby\n<p>Dependencies\n<p>Install the prerequisite dependencies for building the CRuby interpreter:\n",null,1],["builtin_curves","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-c-builtin_curves","()","<p>Obtains a list of all predefined curves by the OpenSSL. Curve names are returned as sn.\n<p>See the OpenSSL …\n",null,1],["bump","Gem::Version","ruby/classes/Gem/Version.html#method-i-bump","()","<p>Return a new version object where the next to the last revision number is one greater (e.g., 5.3.1 =&gt; …\n",null,1],["bundle_path","Bundler","ruby/classes/Bundler.html#method-c-bundle_path","()","<p>Returns absolute path of where gems are installed on the filesystem.\n",null,1],["bundler_version","Gem::BundlerVersionFinder","ruby/classes/Gem/BundlerVersionFinder.html#method-c-bundler_version","()","",null,1],["button","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-button","(value = nil, options = {}, &block)","<p>Add the submit button for the given form. When no value is given, it checks if the object is a new resource …\n",null,0],["button_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-button_tag","(content_or_options = nil, options = nil, &block)","<p>Creates a button element that defines a <code>submit</code> button, <code>reset</code> button or a generic button which can be …\n",null,0],["button_to","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-button_to","(name = nil, options = nil, html_options = nil, &block)","<p>Generates a form containing a single button that submits to the URL created by the set of <code>options</code>. This …\n",null,0],["by_col","CSV::Table","ruby/classes/CSV/Table.html#method-i-by_col","()","<p>Returns a duplicate of <code>self</code>, in column mode (see Column Mode):\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["by_col!","CSV::Table","ruby/classes/CSV/Table.html#method-i-by_col-21","()","<p>Sets the mode for <code>self</code> to column mode (see Column Mode); returns <code>self</code>:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["by_col_or_row","CSV::Table","ruby/classes/CSV/Table.html#method-i-by_col_or_row","()","<p>Returns a duplicate of <code>self</code>, in mixed mode (see Mixed Mode):\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["by_col_or_row!","CSV::Table","ruby/classes/CSV/Table.html#method-i-by_col_or_row-21","()","<p>Sets the mode for <code>self</code> to mixed mode (see Mixed Mode); returns <code>self</code>:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["by_id","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-c-by_id","(p1)","<p>Fetches the engine as specified by the <em>id</em> String.\n\n<pre><code>OpenSSL::Engine.by_id(&quot;openssl&quot;)\n =&gt; #&lt;OpenSSL::Engine ...\n</code></pre>\n",null,1],["by_row","CSV::Table","ruby/classes/CSV/Table.html#method-i-by_row","()","<p>Returns a duplicate of <code>self</code>, in row mode (see Row Mode):\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["by_row!","CSV::Table","ruby/classes/CSV/Table.html#method-i-by_row-21","()","<p>Sets the mode for <code>self</code> to row mode (see Row Mode); returns <code>self</code>:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["byte","Numeric","rails/classes/Numeric.html#method-i-byte","()","",null,0],["byte","Socket::Option","ruby/classes/Socket/Option.html#method-c-byte","(p1, p2, p3, p4)","<p>Creates a new Socket::Option object which contains a byte as data.\n\n<pre><code>p Socket::Option.byte(:INET, :SOCKET, ...\n</code></pre>\n",null,1],["byte","Socket::Option","ruby/classes/Socket/Option.html#method-i-byte","()","<p>Returns the data in <em>sockopt</em> as an byte.\n\n<pre><code>sockopt = Socket::Option.byte(:INET, :SOCKET, :KEEPALIVE, 1)\np ...\n</code></pre>\n",null,1],["byte_pointer=","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-byte_pointer-3D","(val)","",null,1],["byteindex","String","ruby/classes/String.html#method-i-byteindex","(p1, p2 = v2)","<p>Returns the Integer byte-based index of the first occurrence of the given <code>substring</code>, or <code>nil</code> if none found: …\n",null,1],["byteoffset","MatchData","ruby/classes/MatchData.html#method-i-byteoffset","(p1)","<p>Returns a two-element array containing the beginning and ending byte-based offsets of the <em>n</em>th match. …\n",null,1],["byterindex","String","ruby/classes/String.html#method-i-byterindex","(p1, p2 = v2)","<p>Returns the Integer byte-based index of the <em>last</em> occurrence of the given <code>substring</code>, or <code>nil</code> if none found: …\n",null,1],["bytes","Numeric","rails/classes/Numeric.html#method-i-bytes","()","<p>Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes\n\n<pre><code>2.bytes # =&gt; 2\n</code></pre>\n",null,0],["bytes","Random","ruby/classes/Random.html#method-c-bytes","(p1)","<p>Returns a random binary string. The argument <code>size</code> specifies the length of the returned string.\n",null,1],["bytes","Random","ruby/classes/Random.html#method-i-bytes","(p1)","<p>Returns a random binary string containing <code>size</code> bytes.\n\n<pre><code>random_string = Random.new.bytes(10) # =&gt; &quot;\\xD7:R\\xAB?\\x83\\xCE\\xFAkO&quot; ...\n</code></pre>\n",null,1],["bytes","SecureRandom","ruby/classes/SecureRandom.html#method-c-bytes","(n)","<p>Returns a random binary string containing <code>size</code> bytes.\n<p>See Random.bytes\n",null,1],["bytes","String","ruby/classes/String.html#method-i-bytes","()","<p>Returns an array of the bytes in <code>self</code>:\n\n<pre><code>&#39;hello&#39;.bytes # =&gt; [104, 101, 108, 108, 111]\n&#39;тест&#39;.bytes  # =&gt; ...\n</code></pre>\n",null,1],["bytes_read","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-bytes_read","()","<p>Number of bytes read out of the tar entry\n",null,1],["bytesize","String","ruby/classes/String.html#method-i-bytesize","()","<p>Returns the count of bytes (not characters) in <code>self</code>:\n\n<pre><code>&#39;foo&#39;.bytesize        # =&gt; 3\n&#39;тест&#39;.bytesize     ...\n</code></pre>\n",null,1],["byteslice","String","ruby/classes/String.html#method-i-byteslice","(*args)","<p>Returns a substring of <code>self</code>, or <code>nil</code> if the substring cannot be constructed.\n<p>With integer arguments <code>index</code> …\n",null,1],["bytesplice","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-bytesplice","(*args, value)","",null,0],["bytesplice","String","ruby/classes/String.html#method-i-bytesplice","(*args)","<p>Replaces some or all of the content of <code>self</code> with <code>str</code>, and returns <code>self</code>. The portion of the string affected …\n",null,1],["ca_issuer_uris","OpenSSL::X509::Extension::AuthorityInfoAccess","ruby/classes/OpenSSL/X509/Extension/AuthorityInfoAccess.html#method-i-ca_issuer_uris","()","<p>Get the information and services for the issuer from the certificate’s authority information access …\n",null,1],["cable.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/cable_yml_tt.html","","<p>development:\n\n<pre><code>adapter: async\n</code></pre>\n<p>test:\n",null,0],["cache","AbstractController::Caching","rails/classes/AbstractController/Caching.html#method-i-cache","(key, options = {}, &block)","<p>Convenience accessor.\n",null,0],["cache","ActionView::Helpers::CacheHelper","rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache","(name = {}, options = {}, &block)","<p>This helper exposes a method for caching fragments of a view rather than an entire action or page. This …\n",null,0],["cache","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-cache","()","<p>Enable the query cache within the block.\n",null,0],["cache","ActiveRecord::QueryCache::ClassMethods","rails/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-cache","(&block)","<p>Enable the query cache within the block if Active Record is configured. If it’s not, it will execute …\n",null,0],["cache_digests.rake","","rails/files/rails/actionview/lib/action_view/tasks/cache_digests_rake.html","","<p># frozen_string_literal: true\n<p>namespace :cache_digests do\n\n<pre><code>desc &quot;Lookup nested dependencies for TEMPLATE ...\n</code></pre>\n",null,0],["cache_dir","Gem::Source","ruby/classes/Gem/Source.html#method-i-cache_dir","(uri)","<p>Returns the local directory to write <code>uri</code> to.\n",null,1],["cache_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-cache_dir","()","<p>Returns the full path to the cache directory containing this spec’s cached gem.\n",null,1],["cache_dump_filename","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-cache_dump_filename","(db_config_name, schema_cache_path: nil)","",null,0],["cache_file","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-cache_file","()","<p>Returns the full path to the cached gem for this spec.\n",null,1],["cache_fixtures","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-cache_fixtures","(connection, fixtures_map)","",null,0],["cache_for_connection","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-cache_for_connection","(connection)","",null,0],["cache_format_version","ActiveSupport","rails/classes/ActiveSupport.html#method-c-cache_format_version","()","",null,0],["cache_format_version=","ActiveSupport","rails/classes/ActiveSupport.html#method-c-cache_format_version-3D","(value)","",null,0],["cache_fragment_name","ActionView::Helpers::CacheHelper","rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache_fragment_name","(name = {}, skip_digest: nil, digest_path: nil)","<p>This helper returns the name of a cache key for a given fragment cache call. By supplying <code>skip_digest:</code> …\n",null,0],["cache_home","Gem","ruby/classes/Gem.html#method-c-cache_home","()","<p>The path to standard location of the user’s cache directory.\n",null,1],["cache_if","ActionView::Helpers::CacheHelper","rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache_if","(condition, name = {}, options = {}, &block)","<p>Cache fragments of a view if <code>condition</code> is true\n\n<pre><code>&lt;% cache_if admin?, project do %&gt;\n  &lt;b&gt;All the topics on ...\n</code></pre>\n",null,0],["cache_key","ActionText::Attachments::Caching","rails/classes/ActionText/Attachments/Caching.html#method-i-cache_key","(*args)","",null,0],["cache_key","ActiveRecord::Integration","rails/classes/ActiveRecord/Integration.html#method-i-cache_key","()","<p>Returns a stable cache key that can be used to identify this record.\n\n<pre><code>Product.new.cache_key     # =&gt; &quot;products/new&quot; ...\n</code></pre>\n",null,0],["cache_key","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-cache_key","(timestamp_column = \"updated_at\")","<p>Returns a stable cache key that can be used to identify this query. The cache key is built with a fingerprint …\n",null,0],["cache_key_with_version","ActiveRecord::Integration","rails/classes/ActiveRecord/Integration.html#method-i-cache_key_with_version","()","<p>Returns a cache key along with the version.\n",null,0],["cache_key_with_version","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-cache_key_with_version","()","<p>Returns a cache key along with the version.\n",null,0],["cache_message","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-cache_message","(payload)","",null,0],["cache_path","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-cache_path","()","<p>Path to the cache file\n",null,1],["cache_store","AbstractController::Caching::ConfigMethods","rails/classes/AbstractController/Caching/ConfigMethods.html#method-i-cache_store","()","",null,0],["cache_store=","AbstractController::Caching::ConfigMethods","rails/classes/AbstractController/Caching/ConfigMethods.html#method-i-cache_store-3D","(store)","",null,0],["cache_template_loading","ActionView::Base","rails/classes/ActionView/Base.html#method-c-cache_template_loading","()","",null,0],["cache_template_loading=","ActionView::Base","rails/classes/ActionView/Base.html#method-c-cache_template_loading-3D","(value)","",null,0],["cache_timestamp_format","ActiveRecord::Integration","rails/classes/ActiveRecord/Integration.html#method-c-cache_timestamp_format","","<p>Indicates the format used to generate the timestamp in the cache key, if versioning is off. Accepts any …\n",null,0],["cache_unless","ActionView::Helpers::CacheHelper","rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache_unless","(condition, name = {}, options = {}, &block)","<p>Cache fragments of a view unless <code>condition</code> is true\n\n<pre><code>&lt;% cache_unless admin?, project do %&gt;\n  &lt;b&gt;All the ...\n</code></pre>\n",null,0],["cache_update_path","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-cache_update_path","(uri, path = nil, update = true)","<p>Downloads <code>uri</code> to <code>path</code> if necessary. If no path is given, it just passes the data.\n",null,1],["cache_version","ActiveRecord::Integration","rails/classes/ActiveRecord/Integration.html#method-i-cache_version","()","<p>Returns a cache version that can be used together with the cache key to form a recyclable caching scheme. …\n",null,0],["cache_version","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-cache_version","(timestamp_column = :updated_at)","<p>Returns a cache version that can be used together with the cache key to form a recyclable caching scheme. …\n",null,0],["cache_versioning","ActiveRecord::Integration","rails/classes/ActiveRecord/Integration.html#method-c-cache_versioning","","<p>Indicates whether to use a stable #cache_key method that is accompanied by a changing version in the …\n",null,0],["cached_fixtures","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-cached_fixtures","(connection, keys_to_fetch = nil)","",null,0],["caching?","ActionView::Helpers::CacheHelper","rails/classes/ActionView/Helpers/CacheHelper.html#method-i-caching-3F","()","<p>Returns whether the current view fragment is within a <code>cache</code> block.\n<p>Useful when certain fragments aren’t …\n",null,0],["calculate","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-calculate","(operation, column_name)","",null,0],["calculate","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-calculate","(operation, column_name)","<p>This calculates aggregate values in the given column. Methods for #count, #sum, #average, #minimum, and …\n",null,0],["calculate","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-calculate","()","<p>Calculates documentation totals and percentages for classes, modules, constants, attributes and methods. …\n",null,1],["calculate_ip","ActionDispatch::RemoteIp::GetIp","rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-calculate_ip","()","<p>Sort through the various IP address headers, looking for the IP most likely to be the address of the …\n",null,0],["calculate_width","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-calculate_width","(str, allow_escape_code = false)","",null,1],["call","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-call","(env)","<p>Called by Rack to set up the server.\n",null,0],["call","ActionDispatch::Callbacks","rails/classes/ActionDispatch/Callbacks.html#method-i-call","(env)","",null,0],["call","ActionDispatch::ContentSecurityPolicy::Middleware","rails/classes/ActionDispatch/ContentSecurityPolicy/Middleware.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Cookies","rails/classes/ActionDispatch/Cookies.html#method-i-call","(env)","",null,0],["call","ActionDispatch::DebugExceptions","rails/classes/ActionDispatch/DebugExceptions.html#method-i-call","(env)","",null,0],["call","ActionDispatch::DebugLocks","rails/classes/ActionDispatch/DebugLocks.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Executor","rails/classes/ActionDispatch/Executor.html#method-i-call","(env)","",null,0],["call","ActionDispatch::FileHandler","rails/classes/ActionDispatch/FileHandler.html#method-i-call","(env)","",null,0],["call","ActionDispatch::HostAuthorization","rails/classes/ActionDispatch/HostAuthorization.html#method-i-call","(env)","",null,0],["call","ActionDispatch::MiddlewareStack::InstrumentationProxy","rails/classes/ActionDispatch/MiddlewareStack/InstrumentationProxy.html#method-i-call","(env)","",null,0],["call","ActionDispatch::PermissionsPolicy::Middleware","rails/classes/ActionDispatch/PermissionsPolicy/Middleware.html#method-i-call","(env)","",null,0],["call","ActionDispatch::PublicExceptions","rails/classes/ActionDispatch/PublicExceptions.html#method-i-call","(env)","",null,0],["call","ActionDispatch::RemoteIp","rails/classes/ActionDispatch/RemoteIp.html#method-i-call","(env)","<p>Since the IP address may not be needed, we store the object here without calculating the IP to keep from …\n",null,0],["call","ActionDispatch::RequestId","rails/classes/ActionDispatch/RequestId.html#method-i-call","(env)","",null,0],["call","ActionDispatch::ServerTiming","rails/classes/ActionDispatch/ServerTiming.html#method-i-call","(env)","",null,0],["call","ActionDispatch::ShowExceptions","rails/classes/ActionDispatch/ShowExceptions.html#method-i-call","(env)","",null,0],["call","ActionDispatch::Static","rails/classes/ActionDispatch/Static.html#method-i-call","(env)","",null,0],["call","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-call","(email, params = {})","<p>Returns the mail object for the given email name. The registered preview interceptors will be informed …\n",null,0],["call","ActionView::Template::Handlers::Builder","rails/classes/ActionView/Template/Handlers/Builder.html#method-i-call","(template, source)","",null,0],["call","ActionView::Template::Handlers::ERB","rails/classes/ActionView/Template/Handlers/ERB.html#method-c-call","(template, source)","",null,0],["call","ActionView::Template::Handlers::ERB","rails/classes/ActionView/Template/Handlers/ERB.html#method-i-call","(template, source)","",null,0],["call","ActionView::Template::Handlers::Html","rails/classes/ActionView/Template/Handlers/Html.html#method-i-call","(template, source)","",null,0],["call","ActionView::Template::Handlers::Raw","rails/classes/ActionView/Template/Handlers/Raw.html#method-i-call","(template, source)","",null,0],["call","ActiveRecord::Middleware::DatabaseSelector","rails/classes/ActiveRecord/Middleware/DatabaseSelector.html#method-i-call","(env)","<p>Middleware that determines which database connection to use in a multiple database application.\n",null,0],["call","ActiveRecord::Middleware::ShardSelector","rails/classes/ActiveRecord/Middleware/ShardSelector.html#method-i-call","(env)","",null,0],["call","ActiveRecord::Migration::CheckPending","rails/classes/ActiveRecord/Migration/CheckPending.html#method-i-call","(env)","",null,0],["call","ActiveSupport::Callbacks::Conditionals::Value","rails/classes/ActiveSupport/Callbacks/Conditionals/Value.html#method-i-call","(target, value)","",null,0],["call","ActiveSupport::Logger::SimpleFormatter","rails/classes/ActiveSupport/Logger/SimpleFormatter.html#method-i-call","(severity, timestamp, progname, msg)","<p>This method is invoked when a log event occurs\n",null,0],["call","Rails::Engine","rails/classes/Rails/Engine.html#method-i-call","(env)","<p>Define the Rack API for this engine.\n",null,0],["call","Rails::Rack::Logger","rails/classes/Rails/Rack/Logger.html#method-i-call","(env)","",null,0],["call","Continuation","ruby/classes/Continuation.html#method-i-call","(*args)","<p>Invokes the continuation. The program continues from the end of the #callcc block. If no arguments are …\n",null,1],["call","Fiddle::Closure::BlockCaller","ruby/classes/Fiddle/Closure/BlockCaller.html#method-i-call","(*args)","<p>Calls the constructed BlockCaller, with <code>args</code>\n<p>For an example see Fiddle::Closure::BlockCaller.new\n",null,1],["call","Fiddle::Function","ruby/classes/Fiddle/Function.html#method-i-call","(*args)","<p>Calls the constructed Function, with <code>args</code>. Caller must ensure the underlying function is called in a …\n",null,1],["call","Logger::Formatter","ruby/classes/Logger/Formatter.html#method-i-call","(severity, time, progname, msg)","",null,1],["call","Method","ruby/classes/Method.html#method-i-call","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the method’s return value.\n\n<pre><code>m = 12.method(&quot;+&quot;) ...\n</code></pre>\n",null,1],["call","Proc","ruby/classes/Proc.html#method-i-call","(*args)","<p>Invokes the block, setting the block’s parameters to the values in <em>params</em> using something close to …\n",null,1],["call","Reline::LineEditor::Dialog","ruby/classes/Reline/LineEditor/Dialog.html#method-i-call","(key)","",null,1],["call","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-call","()","",null,1],["call","Reline::Windows::Win32API","ruby/classes/Reline/Windows/Win32API.html#method-i-call","(*args)","",null,1],["call","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-call","(source:, filename: DEFAULT_VALUE, terminal: DEFAULT_VALUE, record_dir: DEFAULT_VALUE, timeout: TIMEOUT_DEFAULT, io: $stderr)","<p>SyntaxSuggest.call [Private]\n<p>Main private interface\n",null,1],["call","SyntaxSuggest::BlockExpand","ruby/classes/SyntaxSuggest/BlockExpand.html#method-i-call","(block)","<p>Main interface. Expand current indentation, before expanding to a lower indentation\n",null,1],["call","SyntaxSuggest::Capture::BeforeAfterKeywordEnds","ruby/classes/SyntaxSuggest/Capture/BeforeAfterKeywordEnds.html#method-i-call","()","",null,1],["call","SyntaxSuggest::Capture::FallingIndentLines","ruby/classes/SyntaxSuggest/Capture/FallingIndentLines.html#method-i-call","(&yieldable)","",null,1],["call","SyntaxSuggest::CaptureCodeContext","ruby/classes/SyntaxSuggest/CaptureCodeContext.html#method-i-call","()","",null,1],["call","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-call","()","<p>Call all of the document “cleaners” and return self\n",null,1],["call","SyntaxSuggest::Cli","ruby/classes/SyntaxSuggest/Cli.html#method-i-call","()","",null,1],["call","SyntaxSuggest::CodeSearch","ruby/classes/SyntaxSuggest/CodeSearch.html#method-i-call","()","<p>Main search loop\n",null,1],["call","SyntaxSuggest::DisplayCodeWithLineNumbers","ruby/classes/SyntaxSuggest/DisplayCodeWithLineNumbers.html#method-i-call","()","",null,1],["call","SyntaxSuggest::DisplayInvalidBlocks","ruby/classes/SyntaxSuggest/DisplayInvalidBlocks.html#method-i-call","()","",null,1],["call","SyntaxSuggest::ExplainSyntax","ruby/classes/SyntaxSuggest/ExplainSyntax.html#method-i-call","()","",null,1],["call","SyntaxSuggest::PathnameFromMessage","ruby/classes/SyntaxSuggest/PathnameFromMessage.html#method-i-call","()","",null,1],["call","SyntaxSuggest::RipperErrors","ruby/classes/SyntaxSuggest/RipperErrors.html#method-i-call","()","",null,1],["call","Syslog::Logger::Formatter","ruby/classes/Syslog/Logger/Formatter.html#method-i-call","(severity, time, progname, msg)","",null,1],["call_app","Rails::Rack::Logger","rails/classes/Rails/Rack/Logger.html#method-i-call_app","(request, env)","",null,0],["call_completion_proc","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-call_completion_proc","()","",null,1],["call_completion_proc_with_checking_args","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-call_completion_proc_with_checking_args","(pre, target, post)","",null,1],["call_completion_proc_with_checking_args","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-call_completion_proc_with_checking_args","(pre, target, post)","",null,1],["call_free","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-call_free","()","<p>Call the free function for this pointer. Calling more than once will do nothing. Does nothing if there …\n",null,1],["call_seq","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-call_seq","()","<p>Different ways to call this method\n",null,1],["call_seq=","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-call_seq-3D","(call_seq)","<p>Sets the different ways you can call this method.  If an empty <code>call_seq</code> is given nil is assumed.\n<p>See also …\n",null,1],["call_seq_directive","RDoc::MarkupReference","ruby/classes/RDoc/MarkupReference.html#method-i-call_seq_directive","()","<p>The <code>:call-seq:</code> directive overrides the actual calling sequence found in the Ruby code.\n<p>It can specify …\n",null,1],["callcc","Kernel","ruby/classes/Kernel.html#method-i-callcc","()","<p>Generates a Continuation object, which it passes to the associated block. You need to <code>require &#39;continuation&#39;</code> …\n",null,1],["callee_id","TracePoint","ruby/classes/TracePoint.html#method-i-callee_id","()","<p>Return the called name of the method being called\n",null,1],["caller","Kernel","ruby/classes/Kernel.html#method-i-caller","(*args)","<p>Returns the current execution stack—an array containing strings in the form <code>file:line</code> or <code>file:line:</code> …\n",null,1],["caller_locations","Kernel","ruby/classes/Kernel.html#method-i-caller_locations","(*args)","<p>Returns the current execution stack—an array containing backtrace location objects.\n<p>See Thread::Backtrace::Location …\n",null,1],["calling_methods","","ruby/files/ruby/doc/syntax/calling_methods_rdoc.html","","<p>Calling Methods\n<p>Calling a method sends a message to an object so it can perform some work.\n<p>In ruby you …\n",null,1],["camelcase","String","rails/classes/String.html#method-i-camelcase","(first_letter = :upper)","",null,0],["camelize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-camelize","(term, uppercase_first_letter = true)","<p>Converts strings to UpperCamelCase. If the <code>uppercase_first_letter</code> parameter is set to false, then produces …\n",null,0],["camelize","String","rails/classes/String.html#method-i-camelize","(first_letter = :upper)","<p>By default, <code>camelize</code> converts strings to UpperCamelCase. If the argument to camelize is set to <code>:lower</code> …\n",null,0],["can_parse","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-can_parse","(file_name)","<p>Return a parser that can handle a particular extension\n",null,1],["can_parse_by_name","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-can_parse_by_name","(file_name)","<p>Returns a parser that can handle the extension for <code>file_name</code>.  This does not depend upon the file being …\n",null,1],["cancel","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-cancel","()","<p>Marks this TupleEntry as canceled.\n",null,1],["cancel","Rinda::WaitTemplateEntry","ruby/classes/Rinda/WaitTemplateEntry.html#method-i-cancel","()","",null,1],["canceled?","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-canceled-3F","()","<p>Returns the canceled status.\n",null,1],["candidate","OptionParser","ruby/classes/OptionParser.html#method-i-candidate","(word)","",null,1],["candidate","OptionParser::Completion","ruby/classes/OptionParser/Completion.html#method-c-candidate","(key, icase = false, pat = nil, &block)","",null,1],["candidate","OptionParser::Completion","ruby/classes/OptionParser/Completion.html#method-i-candidate","(key, icase = false, pat = nil)","",null,1],["canonical","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-canonical","()","<p>Get the output style, canonical or not.\n",null,1],["canonical=","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-canonical-3D","(p1)","<p>Set the output style to canonical, or not.\n",null,1],["canonical_each","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-canonical_each","()","",null,1],["canonical_segments","Gem::Version","ruby/classes/Gem/Version.html#method-i-canonical_segments","()","<p>remove trailing zeros segments before first letter or at the end of the version\n",null,1],["canonname","Addrinfo","ruby/classes/Addrinfo.html#method-i-canonname","()","<p>returns the canonical name as a string.\n<p>nil is returned if no canonical name.\n<p>The canonical name is set …\n",null,1],["capitalize","String","ruby/classes/String.html#method-i-capitalize","(*args)","<p>Returns a string containing the characters in <code>self</code>; the first character is upcased; the remaining characters …\n",null,1],["capitalize","Symbol","ruby/classes/Symbol.html#method-i-capitalize","(*args)","<p>Equivalent to <code>sym.to_s.capitalize.to_sym</code>.\n<p>See String#capitalize.\n",null,1],["capitalize!","String","ruby/classes/String.html#method-i-capitalize-21","(*args)","<p>Upcases the first character in <code>self</code>; downcases the remaining characters; returns <code>self</code> if any changes …\n",null,1],["capitalize_word","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-capitalize_word","(key)","",null,1],["caption","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-i-caption","()","",null,0],["caption","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-caption","(align = {})","<p>Generate a Table Caption element as a string.\n<p><code>align</code> can be a string, giving the alignment of the caption …\n",null,1],["capture","ActionView::Helpers::CaptureHelper","rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-capture","(*args)","<p>The capture method extracts part of a template as a String object. You can then use this object anywhere …\n",null,0],["capture2","Open3","ruby/classes/Open3.html#method-c-capture2","(*cmd)","<p>Basically a wrapper for Open3.popen3 that:\n<p>Creates a child process, by calling Open3.popen3 with the given …\n",null,1],["capture2e","Open3","ruby/classes/Open3.html#method-c-capture2e","(*cmd)","<p>Basically a wrapper for Open3.popen3 that:\n<p>Creates a child process, by calling Open3.popen3 with the given …\n",null,1],["capture3","Open3","ruby/classes/Open3.html#method-c-capture3","(*cmd)","<p>Basically a wrapper for Open3.popen3 that:\n<p>Creates a child process, by calling Open3.popen3 with the given …\n",null,1],["capture_before_after_kws","SyntaxSuggest::CaptureCodeContext","ruby/classes/SyntaxSuggest/CaptureCodeContext.html#method-i-capture_before_after_kws","(block)","<p>Shows surrounding kw/end pairs\n<p>The purpose of showing these extra pairs is due to cases of ambiguity when …\n",null,1],["capture_falling_indent","SyntaxSuggest::CaptureCodeContext","ruby/classes/SyntaxSuggest/CaptureCodeContext.html#method-i-capture_falling_indent","(block)","<p>Shows the context around code provided by “falling” indentation\n<p>Converts:\n\n<pre><code>it &quot;foo&quot; do\n</code></pre>\n",null,1],["capture_first_kw_end_same_indent","SyntaxSuggest::CaptureCodeContext","ruby/classes/SyntaxSuggest/CaptureCodeContext.html#method-i-capture_first_kw_end_same_indent","(block)","<p>The logical inverse of ‘capture_last_end_same_indent`\n<p>When there is an invalid block with an ‘end` missing …\n",null,1],["capture_frames","IRB::Debug::DEBUGGER__","ruby/classes/IRB/Debug/DEBUGGER__.html#method-c-capture_frames","(*args)","",null,1],["capture_last_end_same_indent","SyntaxSuggest::CaptureCodeContext","ruby/classes/SyntaxSuggest/CaptureCodeContext.html#method-i-capture_last_end_same_indent","(block)","<p>When there is an invalid block with a keyword missing an end right before another end, it is unclear …\n",null,1],["captures","MatchData","ruby/classes/MatchData.html#method-i-captures","()","<p>Returns the array of captures, which are all matches except <code>m[0]</code>:\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;) ...\n</code></pre>\n",null,1],["captures","StringScanner","ruby/classes/StringScanner.html#method-i-captures","()","<p>Returns the subgroups in the most recent match (not including the full match). If nothing was priorly …\n",null,1],["cargo_command","Gem::Ext::CargoBuilder","ruby/classes/Gem/Ext/CargoBuilder.html#method-i-cargo_command","(cargo_toml, dest_path, args = [], crate_name = nil)","",null,1],["case_mapping","","ruby/files/ruby/doc/case_mapping_rdoc.html","","<p>Case Mapping\n<p>Some string-oriented methods use case mapping.\n<p>In String:\n",null,1],["casecmp","String","ruby/classes/String.html#method-i-casecmp","(p1)","<p>Compares <code>self.downcase</code> and <code>other_string.downcase</code>; returns:\n<p>-1 if <code>other_string.downcase</code> is larger.\n<p>0 if …\n",null,1],["casecmp","Symbol","ruby/classes/Symbol.html#method-i-casecmp","(p1)","<p>Like Symbol#&lt;=&gt;, but case-insensitive; equivalent to <code>self.to_s.casecmp(object.to_s)</code>:\n\n<pre><code>lower = :abc ...\n</code></pre>\n",null,1],["casecmp?","String","ruby/classes/String.html#method-i-casecmp-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <code>other_string</code> are equal after Unicode case folding, otherwise <code>false</code>:\n\n<pre><code>&#39;foo&#39;.casecmp?(&#39;foo&#39;) ...\n</code></pre>\n",null,1],["casecmp?","Symbol","ruby/classes/Symbol.html#method-i-casecmp-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <code>object</code> are equal after Unicode case folding, otherwise <code>false</code>:\n\n<pre><code>lower = :abc\nupper ...\n</code></pre>\n",null,1],["casefold?","Regexp","ruby/classes/Regexp.html#method-i-casefold-3F","()","<p>Returns <code>true</code> if the case-insensitivity flag in <code>self</code> is set, <code>false</code> otherwise:\n\n<pre><code>/a/.casefold?           # ...\n</code></pre>\n",null,1],["cast","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-cast","(value)","<p>Type casts a value from user input (e.g. from a setter). This value may be a string from the form builder, …\n",null,0],["cast","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-cast","(value)","<p>Type casts a value from user input (e.g. from a setter). This value may be a string from the form builder, …\n",null,0],["cast_value","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-cast_value","(value)","<p>Convenience method for types which do not need separate type casting behavior for user and database inputs. …\n",null,0],["cast_value","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-cast_value","(value)","<p>Convenience method for types which do not need separate type casting behavior for user and database inputs. …\n",null,0],["catch","Kernel","ruby/classes/Kernel.html#method-i-catch","(*args)","<p><code>catch</code> executes its block. If <code>throw</code> is not called, the block executes normally, and <code>catch</code> returns the …\n",null,1],["cattr_accessor","Module","rails/classes/Module.html#method-i-cattr_accessor","(*syms, instance_reader: true, instance_writer: true, instance_accessor: true, default: nil, &blk)","",null,0],["cattr_reader","Module","rails/classes/Module.html#method-i-cattr_reader","(*syms, instance_reader: true, instance_accessor: true, default: nil, location: nil)","",null,0],["cattr_writer","Module","rails/classes/Module.html#method-i-cattr_writer","(*syms, instance_writer: true, instance_accessor: true, default: nil, location: nil)","",null,0],["cause","Exception","ruby/classes/Exception.html#method-i-cause","()","<p>Returns the previous exception ($!) at the time this exception was raised. This is useful for wrapping …\n",null,1],["cbrt","Math","ruby/classes/Math.html#method-c-cbrt","(p1)","<p>Returns the cube root of <code>x</code>.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[-INFINITY, INFINITY]</code>.\n",null,1],["cc_addresses","Mail::Message","rails/classes/Mail/Message.html#method-i-cc_addresses","()","",null,0],["ccm_data_len=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-ccm_data_len-3D","(p1)","<p>Sets the length of the plaintext / ciphertext message that will be processed in CCM mode. Make sure to …\n",null,1],["cd","FileUtils","ruby/classes/FileUtils.html#method-c-cd","(dir, verbose: nil)","<p>Changes the working directory to the given <code>dir</code>, which should be interpretable as a path:\n<p>With no block …\n",null,1],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-cdata_block","(string)","",null,0],["cdata_section","ActionView::Helpers::TagHelper","rails/classes/ActionView/Helpers/TagHelper.html#method-i-cdata_section","(content)","<p>Returns a CDATA section with the given <code>content</code>. CDATA sections are used to escape blocks of text containing …\n",null,0],["ceil","Time","rails/classes/Time.html#method-i-ceil","(precision = 0)","",null,0],["ceil","BigDecimal","ruby/classes/BigDecimal.html#method-i-ceil","(p1 = v1)","<p>Return the smallest integer greater than or equal to the value, as a BigDecimal.\n\n<pre><code>BigDecimal(&#39;3.14159&#39;).ceil ...\n</code></pre>\n",null,1],["ceil","Float","ruby/classes/Float.html#method-i-ceil","(*args)","<p>Returns the smallest number greater than or equal to <code>self</code> with a precision of <code>ndigits</code> decimal digits. …\n",null,1],["ceil","Integer","ruby/classes/Integer.html#method-i-ceil","(*args)","<p>Returns the smallest number greater than or equal to <code>self</code> with a precision of <code>ndigits</code> decimal digits. …\n",null,1],["ceil","Numeric","ruby/classes/Numeric.html#method-i-ceil","(*args)","<p>Returns the smallest number that is greater than or equal to <code>self</code> with a precision of <code>digits</code> decimal …\n",null,1],["ceil","Rational","ruby/classes/Rational.html#method-i-ceil","(*args)","<p>Returns the smallest number greater than or equal to <code>rat</code> with a precision of <code>ndigits</code> decimal digits (default: …\n",null,1],["ceil","Time","ruby/classes/Time.html#method-i-ceil","(*args)","<p>Returns a new <code>Time</code> object whose numerical value is greater than or equal to <code>self</code> with its seconds truncated …\n",null,1],["ceildiv","Integer","ruby/classes/Integer.html#method-i-ceildiv","(other)","<p>Returns the result of division <code>self</code> by <code>numeric</code>. rounded up to the nearest integer.\n\n<pre><code>3.ceildiv(3)   # =&gt; ...\n</code></pre>\n",null,1],["center","String","ruby/classes/String.html#method-i-center","(*args)","<p>Returns a centered copy of <code>self</code>.\n<p>If integer argument <code>size</code> is greater than the size (in characters) of …\n",null,1],["cert","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-cert","()","<p>The X509 certificate for this socket endpoint.\n",null,1],["cert_files","Gem::Request","ruby/classes/Gem/Request.html#method-i-cert_files","()","",null,1],["cert_path","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-i-cert_path","(certificate)","<p>Returns the path to the trusted <code>certificate</code>\n",null,1],["cert_requested=","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-cert_requested-3D","(p1)","<p>Specify whether the response shall contain the timestamp authority’s certificate or not. The default …\n",null,1],["cert_requested?","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-cert_requested-3F","()","<p>Indicates whether the response shall contain the timestamp authority’s certificate or not.\n",null,1],["cert_status","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-cert_status","()","<p>Returns the status of the certificate identified by the certid. The return value may be one of these …\n",null,1],["certid","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-certid","()","<p>Returns all certificate IDs in this request.\n",null,1],["certid","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-certid","()","<p>Returns the CertificateId for which this SingleResponse is.\n",null,1],["certificates","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-certificates","()","",null,1],["certificates=","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-certificates-3D","(p1)","",null,1],["certificates_matching","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-certificates_matching","(filter)","",null,1],["chain","Enumerable","ruby/classes/Enumerable.html#method-i-chain","(*args)","<p>Returns an enumerator object generated from this enumerator and given enumerables.\n\n<pre><code>e = (1..3).chain([4, ...\n</code></pre>\n",null,1],["chain","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-chain","()","<p>Returns the verified chain.\n<p>See also the man page X509_STORE_CTX_set0_verified_chain(3).\n",null,1],["challenge","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-challenge","()","<p>Returns the challenge string associated with this SPKI.\n",null,1],["challenge=","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-challenge-3D","(p1)","<p>Parameters\n<p><em>str</em> - the challenge string to be set for this instance\n\n<p>Sets the challenge to be associated with …\n",null,1],["change","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change","(column_name, type, **options)","<p>Changes the column’s definition according to the new options.\n\n<pre><code>t.change(:name, :string, limit: 80) ...\n</code></pre>\n",null,0],["change","ActiveSupport::EncryptedFile","rails/classes/ActiveSupport/EncryptedFile.html#method-i-change","(&block)","",null,0],["change","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-change","(options)","<p>Returns a new <code>ActiveSupport::TimeWithZone</code> where one or more of the elements have been changed according …\n",null,0],["change","CreateActionMailboxTables","rails/classes/CreateActionMailboxTables.html#method-i-change","()","",null,0],["change","CreateActionTextTables","rails/classes/CreateActionTextTables.html#method-i-change","()","",null,0],["change","CreateActiveStorageTables","rails/classes/CreateActiveStorageTables.html#method-i-change","()","",null,0],["change","CreateActiveStorageVariantRecords","rails/classes/CreateActiveStorageVariantRecords.html#method-i-change","()","",null,0],["change","Date","rails/classes/Date.html#method-i-change","(options)","<p>Returns a new Date where one or more of the elements have been changed according to the <code>options</code> parameter. …\n",null,0],["change","DateTime","rails/classes/DateTime.html#method-i-change","(options)","<p>Returns a new DateTime where one or more of the elements have been changed according to the <code>options</code> parameter. …\n",null,0],["change","RemoveNotNullOnActiveStorageBlobsChecksum","rails/classes/RemoveNotNullOnActiveStorageBlobsChecksum.html#method-i-change","()","",null,0],["change","Time","rails/classes/Time.html#method-i-change","(options)","<p>Returns a new Time where one or more of the elements have been changed according to the <code>options</code> parameter. …\n",null,0],["change_column","ActiveRecord::ConnectionAdapters::SQLite3::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3/TableDefinition.html#method-i-change_column","(column_name, type, **options)","",null,0],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column","(table_name, column_name, type, **options)","<p>Changes the column’s definition according to the new options. See TableDefinition#column for details …\n",null,0],["change_column_comment","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_comment","(table_name, column_name, comment_or_changes)","<p>Changes the comment for a column or removes it if <code>nil</code>.\n<p>Passing a hash containing <code>:from</code> and <code>:to</code> will make …\n",null,0],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_default","(table_name, column_name, default_or_changes)","<p>Sets a new default value for a column:\n\n<pre><code>change_column_default(:suppliers, :qualification, &#39;new&#39;)\nchange_column_default(:accounts, ...\n</code></pre>\n",null,0],["change_column_null","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","<p>Sets or removes a <code>NOT NULL</code> constraint on a column. The <code>null</code> flag indicates whether the value can be  …\n",null,0],["change_default","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change_default","(column_name, default_or_changes)","<p>Sets a new default value for a column.\n\n<pre><code>t.change_default(:qualification, &#39;new&#39;)\nt.change_default(:authorized, ...\n</code></pre>\n",null,0],["change_encoding","RDoc::Encoding","ruby/classes/RDoc/Encoding.html#method-c-change_encoding","(text, encoding)","<p>Changes encoding based on <code>encoding</code> without converting and returns new string\n",null,1],["change_null","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change_null","(column_name, null, default = nil)","<p>Sets or removes a NOT NULL constraint on a column.\n\n<pre><code>t.change_null(:qualification, true)\nt.change_null(:qualification, ...\n</code></pre>\n",null,0],["change_privilege","Process::GID","ruby/classes/Process/GID.html#method-c-change_privilege","(p1)","<p>Change the current process’s real and effective group ID to that specified by <em>group</em>. Returns the …\n",null,1],["change_privilege","Process::UID","ruby/classes/Process/UID.html#method-c-change_privilege","(p1)","<p>Change the current process’s real and effective user ID to that specified by <em>user</em>. Returns the new …\n",null,1],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_table","(table_name, **options)","<p>A block for changing columns in <code>table</code>.\n\n<pre><code># change_table() yields a Table instance\nchange_table(:suppliers) ...\n</code></pre>\n",null,0],["change_table_comment","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_table_comment","(table_name, comment_or_changes)","<p>Changes the comment for a table or removes it if <code>nil</code>.\n<p>Passing a hash containing <code>:from</code> and <code>:to</code> will make …\n",null,0],["change_workspace","IRB::Context","ruby/classes/IRB/Context.html#method-i-change_workspace","(*_main)","<p>Changes the current workspace to given object or binding.\n<p>If the optional argument is omitted, the workspace …\n",null,1],["changed","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-changed","()","<p>Returns an array with the name of the attributes with unsaved changes.\n\n<pre><code>person.changed # =&gt; []\nperson.name ...\n</code></pre>\n",null,0],["changed","Observable","ruby/classes/Observable.html#method-i-changed","(state=true)","<p>Set the changed state of this object.  Notifications will be sent only if the changed <code>state</code> is <code>true</code>. …\n",null,1],["changed?","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-changed-3F","()","<p>Returns <code>true</code> if any of the attributes has unsaved changes, <code>false</code> otherwise.\n\n<pre><code>person.changed? # =&gt; false ...\n</code></pre>\n",null,0],["changed?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-changed-3F","(old_value, new_value, _new_value_before_type_cast)","<p>Determines whether a value has changed for dirty checking. <code>old_value</code> and <code>new_value</code> will always be type-cast. …\n",null,0],["changed?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-changed-3F","(old_value, new_value, _new_value_before_type_cast)","<p>Determines whether a value has changed for dirty checking. <code>old_value</code> and <code>new_value</code> will always be type-cast. …\n",null,0],["changed?","Observable","ruby/classes/Observable.html#method-i-changed-3F","()","<p>Returns true if this object’s state has been changed since the last #notify_observers call.\n",null,1],["changed?","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-changed-3F","()","",null,1],["changed_attribute_names_to_save","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-changed_attribute_names_to_save","()","<p>Returns an array of the names of any attributes that will change when the record is next saved.\n",null,0],["changed_attributes","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-changed_attributes","()","<p>Returns a hash of the attributes with unsaved changes indicating their original values like <code>attr =&gt;</code> …\n",null,0],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-changed_for_autosave-3F","()","<p>Returns whether or not this record has been changed in any way (including whether any of its nested autosave …\n",null,0],["changed_in_place?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-changed_in_place-3F","(raw_old_value, new_value)","<p>Determines whether the mutable value has been modified since it was read. Returns <code>false</code> by default.  …\n",null,0],["changed_in_place?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-changed_in_place-3F","(raw_old_value, new_value)","<p>Determines whether the mutable value has been modified since it was read. Returns <code>false</code> by default.  …\n",null,0],["changed_in_place?","ActiveRecord::Encryption::EncryptedAttributeType","rails/classes/ActiveRecord/Encryption/EncryptedAttributeType.html#method-i-changed_in_place-3F","(raw_old_value, new_value)","",null,0],["changed_in_place?","ActiveRecord::Type::Json","rails/classes/ActiveRecord/Type/Json.html#method-i-changed_in_place-3F","(raw_old_value, new_value)","",null,0],["changes","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-changes","()","<p>Returns a hash of changed attributes indicating their original and new values like <code>attr =&gt; [original</code> …\n",null,0],["changes_applied","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-changes_applied","()","<p>Clears dirty data and moves <code>changes</code> to <code>previous_changes</code> and <code>mutations_from_database</code> to <code>mutations_before_last_save</code> …\n",null,0],["changes_to_save","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-changes_to_save","()","<p>Returns a hash containing all the changes that will be persisted during the next save.\n",null,0],["channel.js.tt","","rails/files/rails/actioncable/lib/rails/generators/channel/templates/javascript/channel_js_tt.html","","<p>import consumer from “./consumer”\n<p>consumer.subscriptions.create(“&lt;%= class_name %&gt;Channel”, …\n",null,0],["channel.rb.tt","","rails/files/rails/actioncable/lib/rails/generators/channel/templates/channel_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= class_name %&gt;Channel &lt; ApplicationCable::Channel …\n",null,0],["channel.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/channels/application_cable/channel_rb_tt.html","","<p>module ApplicationCable\n\n<pre><code>class Channel &lt; ActionCable::Channel::Base\nend\n</code></pre>\n<p>end\n",null,0],["channel_name","ActionCable::Channel::Naming::ClassMethods","rails/classes/ActionCable/Channel/Naming/ClassMethods.html#method-i-channel_name","()","<p>Returns the name of the channel, underscored, without the <code>Channel</code> ending. If the channel is in a namespace, …\n",null,0],["char","Reline::Windows::KeyEventRecord","ruby/classes/Reline/Windows/KeyEventRecord.html#method-i-char","()","",null,1],["character_column","Prism::Source","ruby/classes/Prism/Source.html#method-i-character_column","(byte_offset)","<p>Return the column number in characters for the given byte offset.\n",null,1],["character_offset","Prism::Source","ruby/classes/Prism/Source.html#method-i-character_offset","(byte_offset)","<p>Return the character offset for the given byte offset.\n",null,1],["character_selectors","","ruby/files/ruby/doc/character_selectors_rdoc.html","","<p>Character Selectors\n<p>Character Selector\n<p>A <em>character</em> <em>selector</em> is a string argument accepted by certain Ruby …\n",null,1],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-characters","(string)","",null,0],["chardev?","File","ruby/classes/File.html#method-c-chardev-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a character device, <code>false</code> otherwise.\n\n<pre><code>File.chardev?($stdin)     # =&gt; ...\n</code></pre>\n",null,1],["chardev?","File::Stat","ruby/classes/File/Stat.html#method-i-chardev-3F","()","<p>Returns <code>true</code> if the file is a character device, <code>false</code> if it isn’t or if the operating system doesn’t …\n",null,1],["chardev?","FileTest","ruby/classes/FileTest.html#method-i-chardev-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a character device, <code>false</code> otherwise.\n\n<pre><code>File.chardev?($stdin)     # =&gt; ...\n</code></pre>\n",null,1],["chardev?","Pathname","ruby/classes/Pathname.html#method-i-chardev-3F","()","<p>See FileTest.chardev?.\n",null,1],["charpos","StringScanner","ruby/classes/StringScanner.html#method-i-charpos","()","<p>Returns the character position of the scan pointer.  In the ‘reset’ position, this value is zero. …\n",null,1],["chars","String","ruby/classes/String.html#method-i-chars","()","<p>Returns an array of the characters in <code>self</code>:\n\n<pre><code>&#39;hello&#39;.chars     # =&gt; [&quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot;]\n&#39;тест&#39;.chars ...\n</code></pre>\n",null,1],["charset","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-charset","()","<p>The charset of the response. HTML wants to know the encoding of the content you’re giving them, so …\n",null,0],["charset","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-charset","()","<p>Returns the database character set.\n",null,0],["charset","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-charset","(configuration, *arguments)","",null,0],["charset","OpenURI::Meta","ruby/classes/OpenURI/Meta.html#method-i-charset","()","<p>returns a charset parameter in Content-Type field. It is downcased for canonicalization.\n<p>If charset parameter …\n",null,1],["charset=","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-charset-3D","(charset)","<p>Sets the HTTP character set. In case of <code>nil</code> parameter it sets the charset to <code>default_charset</code>.\n\n<pre><code>response.charset ...\n</code></pre>\n",null,0],["charset_current","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-charset_current","(env_name = env, db_name = name)","",null,0],["chdir","Dir","ruby/classes/Dir.html#method-i-chdir","()","<p>Changes the current working directory to <code>self</code>:\n\n<pre><code>Dir.pwd # =&gt; &quot;/&quot;\ndir = Dir.new(&#39;example&#39;)\ndir.chdir\nDir.pwd ...\n</code></pre>\n",null,1],["chdir","Dir","ruby/classes/Dir.html#method-c-chdir","(*args)","<p>Changes the current working directory.\n<p>With argument <code>new_dirpath</code> and no block, changes to the given <code>dirpath</code> …\n",null,1],["chdir","FileUtils","ruby/classes/FileUtils.html#method-c-chdir","(dir, verbose: nil)","",null,1],["check","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-check","(pattern)","",null,1],["check","PTY","ruby/classes/PTY.html#method-c-check","(p1, p2 = v2)","<p>Checks the status of the child process specified by <code>pid</code>. Returns <code>nil</code> if the process is still alive.\n<p>If …\n",null,1],["check","StringScanner","ruby/classes/StringScanner.html#method-i-check","(p1)","<p>This returns the value that #scan would return, without advancing the scan pointer.  The match register …\n",null,1],["check","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-check","(result)","",null,1],["check_box","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-check_box","(method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","<p>Returns a checkbox tag tailored for accessing a specified attribute (identified by <code>method</code>) on an object …\n",null,0],["check_box","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-check_box","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","<p>Returns a checkbox tag tailored for accessing a specified attribute (identified by <code>method</code>) on an object …\n",null,0],["check_box_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-check_box_tag","(name, value = \"1\", checked = false, options = {})","<p>Creates a check box form input tag.\n<p>Options\n<p><code>:disabled</code> - If set to true, the user will not be able to use …\n",null,0],["check_cert","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-check_cert","(signer, issuer, time)","<p>Ensures that <code>signer</code> is valid for <code>time</code> and was signed by the <code>issuer</code>. If the <code>issuer</code> is <code>nil</code> no verification …\n",null,1],["check_chain","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-check_chain","(chain, time)","<p>Verifies each certificate in <code>chain</code> has signed the following certificate and is valid for the given <code>time</code> …\n",null,1],["check_circular?","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-check_circular-3F","()","<p>Returns true, if circular data structures should be checked, otherwise returns false.\n",null,1],["check_class_collision","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-c-check_class_collision","(options = {})","<p>Add a class collisions name to be checked on class initialization. You can supply a hash with a <code>:prefix</code> …\n",null,0],["check_closed","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-check_closed","()","<p>Raises IOError if the TarWriter is closed\n",null,1],["check_constraint","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-check_constraint","(*args, **options)","<p>Adds a check constraint.\n\n<pre><code>t.check_constraint(&quot;price &gt; 0&quot;, name: &quot;price_check&quot;)\n</code></pre>\n<p>See connection.add_check_constraint …\n",null,0],["check_constraint","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-check_constraint","(expression, **options)","",null,0],["check_constraints","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-check_constraints","(table_name)","",null,0],["check_constraints","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-check_constraints","(table_name)","<p>Returns an array of check constraints for the given table. The check constraints are represented as  …\n",null,0],["check_credentials_permissions","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-check_credentials_permissions","()","<p>Checks the permissions of the credentials file.  If they are not 0600 an error message is displayed and …\n",null,1],["check_data","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-check_data","(public_key, digest, signature, data)","<p>Verifies that <code>data</code> matches the <code>signature</code> created by <code>public_key</code> and the <code>digest</code> algorithm.\n",null,1],["check_deprecated_options","Gem::Command","ruby/classes/Gem/Command.html#method-i-check_deprecated_options","(options)","",null,1],["check_files","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-check_files","()","<p>Check that the files on the command line exist\n",null,1],["check_gems","Gem::Commands::CheckCommand","ruby/classes/Gem/Commands/CheckCommand.html#method-i-check_gems","()","",null,1],["check_generator","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-check_generator","()","<p>Ensure only one generator is loaded\n",null,1],["check_input_event","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-check_input_event","()","",null,1],["check_insecure_method","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-check_insecure_method","(obj, msg_id)","<p>Check that a method is callable via dRuby.\n<p><code>obj</code> is the object we want to invoke the method on. <code>msg_id</code> is …\n",null,1],["check_inspect_key","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-check_inspect_key","(id)","<p>Check whether the object_id <code>id</code> is in the current buffer of objects to be pretty printed. Used to break …\n",null,1],["check_int_in_range","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html#method-i-check_int_in_range","(value)","",null,0],["check_key","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-check_key","(signer, key)","<p>Ensures the public key of <code>key</code> matches the public key in <code>signer</code>\n",null,1],["check_key","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-check_key","()","<p>Raises an exception if the key is invalid.\n<p>See also the man page EVP_PKEY_public_check(3).\n",null,1],["check_modeline","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-check_modeline","(file_name)","<p>Returns the file type from the modeline in <code>file_name</code>\n",null,1],["check_names","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-check_names","(names)","<p>Ensures that <code>names</code> only includes names for the :rdoc, :clobber_rdoc and :rerdoc.  If other names are …\n",null,1],["check_nonce","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-check_nonce","(p1)","<p>Checks the nonce validity for this request and <em>response</em>.\n<p>The return value is one of the following:\n<p>-1  … &mdash; ",null,1],["check_openssl","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-check_openssl","()","",null,1],["check_password","URI::File","ruby/classes/URI/File.html#method-i-check_password","(user)","<p>raise InvalidURIError\n",null,1],["check_pending!","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-c-check_pending-21","(connection = Base.connection)","<p>Raises <code>ActiveRecord::PendingMigrationError</code> error if any migrations are pending.\n",null,0],["check_private_key","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-check_private_key","(p1)","<p>Returns <code>true</code> if <em>key</em> is the corresponding private key to the Subject Public Key Information, <code>false</code> otherwise. …\n",null,1],["check_protected_environments!","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-check_protected_environments-21","()","",null,0],["check_root","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-check_root","(chain, time)","<p>Ensures the root certificate in <code>chain</code> is self-signed and valid for <code>time</code>.\n",null,1],["check_ruby_version","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-check_ruby_version","()","",null,1],["check_schema_file","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-check_schema_file","(filename)","",null,0],["check_signedness","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-check_signedness","(type, headers = nil, opts = nil, &b)","<p>Returns the signedness of the given <code>type</code>.  You may optionally specify additional <code>headers</code> to search in …\n",null,1],["check_sizeof","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-check_sizeof","(type, headers = nil, opts = \"\", &b)","<p>Returns the size of the given <code>type</code>.  You may optionally specify additional <code>headers</code> to search in for the …\n",null,1],["check_target_version","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-check_target_version","()","",null,0],["check_termination","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-check_termination","(&block)","",null,1],["check_trust","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-check_trust","(chain, digester, trust_dir)","<p>Ensures the root of <code>chain</code> has a trusted certificate in <code>trust_dir</code> and the digests of the two certificates …\n",null,1],["check_typo_squatting","Gem::Commands::SourcesCommand","ruby/classes/Gem/Commands/SourcesCommand.html#method-i-check_typo_squatting","(source)","",null,1],["check_until","StringScanner","ruby/classes/StringScanner.html#method-i-check_until","(p1)","<p>This returns the value that #scan_until would return, without advancing the scan pointer.  The match …\n",null,1],["check_user","URI::File","ruby/classes/URI/File.html#method-i-check_user","(user)","<p>raise InvalidURIError\n",null,1],["check_userinfo","URI::File","ruby/classes/URI/File.html#method-i-check_userinfo","(user)","<p>raise InvalidURIError\n",null,1],["check_validity","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-check_validity","(p1 = v1, p2 = v2)","<p>Checks the validity of thisUpdate and nextUpdate fields of this SingleResponse. This checks the current …\n",null,1],["check_validity!","ActiveModel::EachValidator","rails/classes/ActiveModel/EachValidator.html#method-i-check_validity-21","()","<p>Hook method that gets called by the initializer allowing verification that the arguments supplied are …\n",null,0],["check_winsize_changed","IO","ruby/classes/IO.html#method-i-check_winsize_changed","()","",null,1],["checkbox","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-checkbox","(name = \"\", value = nil, checked = nil)","<p>Generate a Checkbox Input element as a string.\n<p>The attributes of the element can be specified as three …\n",null,1],["checkbox_group","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-checkbox_group","(name = \"\", *values)","<p>Generate a sequence of checkbox elements, as a String.\n<p>The checkboxes will all have the same <code>name</code> attribute. …\n",null,1],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkin","(conn)","<p>Check-in a database connection back into the pool, indicating that you no longer need this connection. …\n",null,0],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkout","(checkout_timeout = @checkout_timeout)","<p>Check-out a database connection from the pool, indicating that you want to use it. You should call #checkin …\n",null,0],["checkout_timeout","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-checkout_timeout","()","",null,0],["child_name","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-child_name","(name)","<p>Creates the full name for a child with <code>name</code>\n",null,1],["children","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-children","()","",null,0],["children","Dir","ruby/classes/Dir.html#method-i-children","()","<p>Returns an array of the entry names in <code>self</code> except for <code>&#39;.&#39;</code> and <code>&#39;..&#39;</code>:\n\n<pre><code>dir = Dir.new(&#39;/example&#39;) ...\n</code></pre>\n",null,1],["children","Dir","ruby/classes/Dir.html#method-c-children","(*args)","<p>Returns an array of the entry names in the directory at <code>dirpath</code> except for <code>&#39;.&#39;</code> and <code>&#39;..&#39;</code> …\n",null,1],["children","Pathname","ruby/classes/Pathname.html#method-i-children","(with_directory=true)","<p>Returns the children of the directory (files and subdirectories, not recursive) as an array of Pathname …\n",null,1],["children","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-children","()","<p>Returns AST nodes under this one.  Each kind of node has different children, depending on what kind of …\n",null,1],["chmod","File","ruby/classes/File.html#method-c-chmod","(*args)","<p>Changes permission bits on the named file(s) to the bit pattern represented by <em>mode_int</em>. Actual effects …\n",null,1],["chmod","File","ruby/classes/File.html#method-i-chmod","(p1)","<p>Changes permission bits on <em>file</em> to the bit pattern represented by <em>mode_int</em>. Actual effects are platform …\n",null,1],["chmod","FileUtils","ruby/classes/FileUtils.html#method-c-chmod","(mode, list, noop: nil, verbose: nil)","<p>Changes permissions on the entries at the paths given in <code>list</code> (a single path or an array of paths) to …\n",null,1],["chmod","Pathname","ruby/classes/Pathname.html#method-i-chmod","(p1)","<p>Changes file permissions.\n<p>See File.chmod.\n",null,1],["chmod_R","FileUtils","ruby/classes/FileUtils.html#method-c-chmod_R","(mode, list, noop: nil, verbose: nil, force: nil)","<p>Like FileUtils.chmod, but changes permissions recursively.\n",null,1],["chomp","Kernel","ruby/classes/Kernel.html#method-i-chomp","(*args)","<p>Equivalent to <code>$_ = $_.chomp(<em>string</em>)</code>. See String#chomp. Available only when -p/-n command line option …\n",null,1],["chomp","String","ruby/classes/String.html#method-i-chomp","(*args)","<p>Returns a new string copied from <code>self</code>, with trailing characters possibly removed:\n<p>When <code>line_sep</code> is <code>&quot;\\n&quot;</code> …\n",null,1],["chomp!","String","ruby/classes/String.html#method-i-chomp-21","(*args)","<p>Like String#chomp, but modifies <code>self</code> in place; returns <code>nil</code> if no modification made, <code>self</code> otherwise.\n",null,1],["choose_from_list","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-choose_from_list","(question, list)","<p>Choose from a list of options.  <code>question</code> is a prompt displayed above the list.  <code>list</code> is a list of option …\n",null,1],["choose_from_list","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-choose_from_list","(question, list)","<p>Asks the user to answer <code>question</code> with an answer from the given <code>list</code>.\n",null,1],["chop","Kernel","ruby/classes/Kernel.html#method-i-chop","()","<p>Equivalent to <code>($_.dup).chop!</code>, except <code>nil</code> is never returned. See String#chop!. Available only when -p/-n …\n",null,1],["chop","String","ruby/classes/String.html#method-i-chop","()","<p>Returns a new string copied from <code>self</code>, with trailing characters possibly removed.\n<p>Removes <code>&quot;\\r\\n&quot;</code> …\n",null,1],["chop!","String","ruby/classes/String.html#method-i-chop-21","()","<p>Like String#chop, but modifies <code>self</code> in place; returns <code>nil</code> if <code>self</code> is empty, <code>self</code> otherwise.\n<p>Related:  …\n",null,1],["chown","File","ruby/classes/File.html#method-c-chown","(*args)","<p>Changes the owner and group of the named file(s) to the given numeric owner and group id’s. Only …\n",null,1],["chown","File","ruby/classes/File.html#method-i-chown","(p1, p2)","<p>Changes the owner and group of <em>file</em> to the given numeric owner and group id’s. Only a process with …\n",null,1],["chown","FileUtils","ruby/classes/FileUtils.html#method-c-chown","(user, group, list, noop: nil, verbose: nil)","<p>Changes the owner and group on the entries at the paths given in <code>list</code> (a single path or an array of paths) …\n",null,1],["chown","Pathname","ruby/classes/Pathname.html#method-i-chown","(p1, p2)","<p>Change owner and group of the file.\n<p>See File.chown.\n",null,1],["chown_R","FileUtils","ruby/classes/FileUtils.html#method-c-chown_R","(user, group, list, noop: nil, verbose: nil, force: nil)","<p>Like FileUtils.chown, but changes owner and group recursively.\n",null,1],["chr","Integer","ruby/classes/Integer.html#method-i-chr","(*args)","<p>Returns a 1-character string containing the character represented by the value of <code>self</code>, according to …\n",null,1],["chr","String","ruby/classes/String.html#method-i-chr","()","<p>Returns a string containing the first character of <code>self</code>:\n\n<pre><code>s = &#39;foo&#39; # =&gt; &quot;foo&quot;\ns.chr     # =&gt; &quot;f&quot;\n</code></pre>\n",null,1],["chroot","Dir","ruby/classes/Dir.html#method-c-chroot","(p1)","<p>Changes the root directory of the calling process to that specified in <code>dirpath</code>. The new root directory …\n",null,1],["chunk","Enumerable","ruby/classes/Enumerable.html#method-i-chunk","()","<p>Each element in the returned enumerator is a 2-element array consisting of:\n<p>A value returned by the block. …\n",null,1],["chunk","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-chunk","(*args)","<p>Like Enumerable#chunk, but chains operation to be lazy-evaluated.\n",null,1],["chunk_while","Enumerable","ruby/classes/Enumerable.html#method-i-chunk_while","()","<p>Creates an enumerator for each chunked elements. The beginnings of chunks are defined by the block.\n<p>This …\n",null,1],["chunk_while","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-chunk_while","(*args)","<p>Like Enumerable#chunk_while, but chains operation to be lazy-evaluated.\n",null,1],["chunked?","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-chunked-3F","()","<p>Returns <code>true</code> if field <code>&#39;Transfer-Encoding&#39;</code> exists and has value <code>&#39;chunked&#39;</code>, <code>false</code> otherwise; …\n",null,1],["ci?","Gem::CIDetector","ruby/classes/Gem/CIDetector.html#method-c-ci-3F","()","",null,1],["ci_strings","Gem::CIDetector","ruby/classes/Gem/CIDetector.html#method-c-ci_strings","()","",null,1],["cidr","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-cidr","","",null,0],["cipher","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-cipher","(p1)","<p>Returns a new instance of OpenSSL::Cipher by <em>name</em>, if it is available in this engine.\n<p>An EngineError will …\n",null,1],["cipher","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-cipher","()","<p>Returns the cipher suite actually used in the current session, or nil if no session has been established. …\n",null,1],["cipher=","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-cipher-3D","(p1)","",null,1],["ciphers","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-c-ciphers","()","<p>Returns the names of all available ciphers in an array.\n",null,1],["ciphers","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ciphers","()","<p>The list of cipher suites configured for this context.\n",null,1],["ciphers=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ciphers-3D","(p1)","<p>Sets the list of available cipher suites for this context.  Note in a server context some ciphers require …\n",null,1],["ciphersuites=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ciphersuites-3D","(p1)","<p>Sets the list of available TLSv1.3 cipher suites for this context.\n",null,1],["ciphertext_for","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-ciphertext_for","(attribute_name)","<p>Returns the ciphertext for <code>attribute_name</code>.\n",null,0],["circle","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-circle","","",null,0],["citext","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-citext","","",null,0],["civil","Date","ruby/classes/Date.html#method-c-civil","(*args)","<p>Same as Date.new.\n",null,1],["civil","DateTime","ruby/classes/DateTime.html#method-c-civil","(*args)","<p>Same as DateTime.new.\n",null,1],["civil_from_format","DateTime","rails/classes/DateTime.html#method-c-civil_from_format","(utc_or_local, year, month = 1, day = 1, hour = 0, min = 0, sec = 0)","<p>Returns DateTime with local offset for given year if format is local else offset is zero.\n\n<pre><code>DateTime.civil_from_format ...\n</code></pre>\n",null,0],["clamp","Comparable","ruby/classes/Comparable.html#method-i-clamp","(p1, p2 = v2)","<p>In <code>(min, max)</code> form, returns <em>min</em> if <em>obj</em> <code>&lt;=&gt;</code> <em>min</em> is less than zero, <em>max</em> if <em>obj</em> <code>&lt;=&gt;</code> <em>max</em> is greater …\n",null,1],["class","ActiveSupport::Deprecation::DeprecatedConstantProxy","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html#method-i-class","()","<p>Returns the class of the new constant.\n\n<pre><code>PLANETS_POST_2006 = %w(mercury venus earth mars jupiter saturn ...\n</code></pre>\n",null,0],["class","Kernel","ruby/classes/Kernel.html#method-i-class","()","<p>Returns the class of <em>obj</em>. This method must always be called with an explicit receiver, as #class is also …\n",null,1],["class","Win32::Registry::PredefinedKey","ruby/classes/Win32/Registry/PredefinedKey.html#method-i-class","()","<p>Fake #class method for Registry#open, Registry#create\n",null,1],["class_attribute","Class","rails/classes/Class.html#method-i-class_attribute","(*attrs, instance_accessor: true, instance_reader: instance_accessor, instance_writer: instance_accessor, instance_predicate: true, default: nil)","<p>Declare a class-level attribute whose value is inheritable by subclasses. Subclasses can change their …\n",null,0],["class_attributes","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-class_attributes","()","<p>Class attributes\n",null,1],["class_eval","Kernel","rails/classes/Kernel.html#method-i-class_eval","(*args, &block)","<p>class_eval on an object acts like <code>singleton_class.class_eval</code>.\n",null,0],["class_eval","Module","ruby/classes/Module.html#method-i-class_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>, except that when a block is given, constant/class …\n",null,1],["class_exec","Module","ruby/classes/Module.html#method-i-class_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method defined in the block will belong …\n",null,1],["class_file","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-class_file","(klass_name)","<p>Path to the ri data for <code>klass_name</code>\n",null,1],["class_method_list","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-class_method_list","()","<p>Class methods\n",null,1],["class_methods","ActiveSupport::Concern","rails/classes/ActiveSupport/Concern.html#method-i-class_methods","(&class_methods_module_definition)","<p>Define class methods from given block. You can define private class methods as well.\n\n<pre><code>module Example\n  ...\n</code></pre>\n",null,0],["class_methods","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-class_methods","()","<p>Class methods cache accessor.  Maps a class to an Array of its class methods (not full name).\n",null,1],["class_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-class_name","()","",null,0],["class_name","Gem::Ext::Builder","ruby/classes/Gem/Ext/Builder.html#method-c-class_name","()","",null,1],["class_names","ActionView::Helpers::TagHelper","rails/classes/ActionView/Helpers/TagHelper.html#method-i-class_names","(*args)","",null,0],["class_names","DidYouMean::ClassNameChecker","ruby/classes/DidYouMean/ClassNameChecker.html#method-i-class_names","()","",null,1],["class_path","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-class_path","()","",null,0],["class_path","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-class_path","(klass_name)","<p>Path where data for <code>klass_name</code> will be stored (methods or class data)\n",null,1],["class_variable_defined?","Module","ruby/classes/Module.html#method-i-class_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given class variable is defined in <em>obj</em>. String arguments are converted to symbols. …\n",null,1],["class_variable_get","Module","ruby/classes/Module.html#method-i-class_variable_get","(p1)","<p>Returns the value of the given class variable (or throws a NameError exception). The <code>@@</code> part of the variable …\n",null,1],["class_variable_set","Module","ruby/classes/Module.html#method-i-class_variable_set","(p1, p2)","<p>Sets the class variable named by <em>symbol</em> to the given object. If the class variable name is passed as …\n",null,1],["class_variables","Module","ruby/classes/Module.html#method-i-class_variables","(*args)","<p>Returns an array of the names of class variables in <em>mod</em>. This includes the names of class variables in …\n",null,1],["classes","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-classes","()","<p>Array of classes in this context\n",null,1],["classes_and_modules","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-classes_and_modules","()","<p>All classes and modules in this namespace\n",null,1],["classes_hash","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-classes_hash","()","<p>Hash of classes keyed by class name\n",null,1],["classes_hash","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-classes_hash","()","<p>Hash of all classes known to RDoc\n",null,1],["classify","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-classify","(table_name)","<p>Creates a class name from a plural table name like Rails does for table names to models. Note that this …\n",null,0],["classify","String","rails/classes/String.html#method-i-classify","()","<p>Creates a class name from a plural table name like Rails does for table names to models. Note that this …\n",null,0],["classify","Set","ruby/classes/Set.html#method-i-classify","()","<p>Classifies the set by the return value of the given block and\nreturns a hash of {value =&gt; set of elements} ...\n",null,1],["clean","ActiveSupport::BacktraceCleaner","rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-clean","(backtrace, kind = :silent)","<p>Returns the backtrace after all filters and silencers have been run against it. Filters run first, then …\n",null,0],["clean_env","Bundler","ruby/classes/Bundler.html#method-c-clean_env","()","<p>@deprecated Use ‘unbundled_env` instead\n",null,1],["clean_exec","Bundler","ruby/classes/Bundler.html#method-c-clean_exec","(*args)","<p>@deprecated Use ‘unbundled_exec` instead\n",null,1],["clean_gems","Gem::Commands::CleanupCommand","ruby/classes/Gem/Commands/CleanupCommand.html#method-i-clean_gems","()","",null,1],["clean_sweep","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-clean_sweep","(source:)","<p>Remove comments\n<p>replace with empty newlines\n\n<pre><code>source = &lt;&lt;~&#39;EOM&#39;\n  # Comment 1\n  puts &quot;hello&quot;\n  # Comment ...\n</code></pre>\n",null,1],["clean_system","Bundler","ruby/classes/Bundler.html#method-c-clean_system","(*args)","<p>@deprecated Use ‘unbundled_system` instead\n",null,1],["clean_text","Gem::Text","ruby/classes/Gem/Text.html#method-i-clean_text","(text)","<p>Remove any non-printable characters and make the text suitable for printing.\n",null,1],["cleanpath","Pathname","ruby/classes/Pathname.html#method-i-cleanpath","(consider_symlink=false)","<p>Returns clean pathname of <code>self</code> with consecutive slashes and useless dots removed.  The filesystem is …\n",null,1],["cleanup","ActiveSupport::Cache::FileStore","rails/classes/ActiveSupport/Cache/FileStore.html#method-i-cleanup","(options = nil)","<p>Preemptively iterates through all stored keys and removes the ones which have expired.\n",null,0],["cleanup","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-cleanup","(options = nil)","<p>Preemptively iterates through all stored keys and removes the ones which have expired.\n",null,0],["cleanup","ActiveSupport::Cache::NullStore","rails/classes/ActiveSupport/Cache/NullStore.html#method-i-cleanup","(options = nil)","",null,0],["cleanup","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-cleanup","(options = nil)","<p>Cache Store API implementation.\n<p>Removes expired entries. Handled natively by Redis least-recently-/ least-frequently-used …\n",null,0],["cleanup","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-cleanup","(options = nil)","<p>Cleans up the cache by removing expired entries.\n<p>Options are passed to the underlying cache implementation. …\n",null,0],["cleanup","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-c-cleanup","()","<p>It is only necessary to run cleanup when engines are loaded via OpenSSL::Engine.load. However, running …\n",null,1],["cleanup","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-cleanup","()","",null,1],["cleanup_view_runtime","ActionController::Instrumentation","rails/classes/ActionController/Instrumentation.html#method-i-cleanup_view_runtime","()","<p>A hook which allows you to clean up any time, wrongly taken into account in views, like database querying …\n",null,0],["clear","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-clear","()","",null,0],["clear","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-clear","()","<p>Equivalent to <code>delete_all</code>. The difference is that returns <code>self</code>, instead of an array with the deleted objects, …\n",null,0],["clear","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-clear","()","<p>Remove all elements from the queue.\n",null,0],["clear","ActiveSupport::Cache::FileStore","rails/classes/ActiveSupport/Cache/FileStore.html#method-i-clear","(options = nil)","<p>Deletes all items from the cache. In this case it deletes all the entries in the specified file store …\n",null,0],["clear","ActiveSupport::Cache::MemCacheStore","rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-clear","(options = nil)","<p>Clear the entire cache on all memcached servers. This method should be used with care when shared cache …\n",null,0],["clear","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-clear","(options = nil)","<p>Delete all data stored in a given cache store.\n",null,0],["clear","ActiveSupport::Cache::NullStore","rails/classes/ActiveSupport/Cache/NullStore.html#method-i-clear","(options = nil)","",null,0],["clear","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-clear","(options = nil)","<p>Clear the entire cache on all Redis servers. Safe to use on shared servers if the cache is namespaced. …\n",null,0],["clear","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-clear","(options = nil)","<p>Clears the entire cache. Be careful with this method since it could affect other processes if shared …\n",null,0],["clear","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-clear","(options = nil)","",null,0],["clear","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-clear","(scope = :all)","<p>Clears the loaded inflections within a given scope (default is <code>:all</code>). Give the scope as a symbol of the …\n",null,0],["clear","Array","ruby/classes/Array.html#method-i-clear","()","<p>Removes all elements from <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.clear # =&gt; []\n</code></pre>\n",null,1],["clear","ENV","ruby/classes/ENV.html#method-c-clear","()","<p>Removes every environment variable; returns ENV:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;)\nENV.size # =&gt; ...\n</code></pre>\n",null,1],["clear","Fiddle::Pinned","ruby/classes/Fiddle/Pinned.html#method-i-clear","()","<p>Clear the reference to the object this is pinning.\n",null,1],["clear","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-clear","()","<p>Clears the GC profiler data.\n",null,1],["clear","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-clear","()","",null,1],["clear","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-clear","()","<p>Removes all sources from the SourceList.\n",null,1],["clear","Hash","ruby/classes/Hash.html#method-i-clear","()","<p>Removes all hash entries; returns <code>self</code>.\n",null,1],["clear","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-clear","(*args)","<p>Fill buffer with <code>value</code>, starting with <code>offset</code> and going for <code>length</code> bytes.\n\n<pre><code>buffer = IO::Buffer.for(&#39;test&#39;) ...\n</code></pre>\n",null,1],["clear","IRB::Color","ruby/classes/IRB/Color.html#method-c-clear","(colorable: colorable?)","",null,1],["clear","ObjectSpace::WeakKeyMap","ruby/classes/ObjectSpace/WeakKeyMap.html#method-i-clear","()","<p>Removes all map entries; returns <code>self</code>.\n",null,1],["clear","Ractor::Selector","ruby/classes/Ractor/Selector.html#method-i-clear","()","",null,1],["clear","Set","ruby/classes/Set.html#method-i-clear","()","<p>Removes all elements and returns self.\n\n<pre><code>set = Set[1, &#39;c&#39;, :s]             #=&gt; #&lt;Set: {1, &quot;c&quot;, :s}&gt;\nset.clear ...\n</code></pre>\n",null,1],["clear","String","ruby/classes/String.html#method-i-clear","()","<p>Removes the contents of <code>self</code>:\n\n<pre><code>s = &#39;foo&#39; # =&gt; &quot;foo&quot;\ns.clear   # =&gt; &quot;&quot;\n</code></pre>\n",null,1],["clear","StringScanner","ruby/classes/StringScanner.html#method-i-clear","()","<p>Equivalent to #terminate. This method is obsolete; use #terminate instead.\n",null,1],["clear","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-clear","()","<p>Removes all objects from the queue.\n",null,1],["clear","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-clear","()","<p>Removes all objects from the queue.\n",null,1],["clear!","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear-21","()","<p>Clears out internal caches\n",null,0],["clear_action_methods!","AbstractController::Base","rails/classes/AbstractController/Base.html#method-c-clear_action_methods-21","()","<p>action_methods are cached and there is sometimes a need to refresh them. ::clear_action_methods! allows …\n",null,0],["clear_action_methods!","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-c-clear_action_methods-21","()","<p>action_methods are cached and there is sometimes need to refresh them. ::clear_action_methods! allows …\n",null,0],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_active_connections-21","(role = ActiveRecord::Base.current_role)","<p>Returns any connections in use by the current thread back to the pool, and also returns connections to …\n",null,0],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_all_connections-21","(role = ActiveRecord::Base.current_role)","",null,0],["clear_attribute_changes","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-clear_attribute_changes","(attr_names)","",null,0],["clear_bit!","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-clear_bit-21","(p1)","",null,1],["clear_cache","ActionView::FileSystemResolver","rails/classes/ActionView/FileSystemResolver.html#method-i-clear_cache","()","",null,0],["clear_cache","ActionView::Resolver","rails/classes/ActionView/Resolver.html#method-i-clear_cache","()","",null,0],["clear_cache!","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-clear_cache-21","()","<p>Clear any caching the database adapter may be doing.\n",null,0],["clear_changes_information","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-clear_changes_information","()","<p>Clears all dirty data: current changes and previous changes.\n",null,0],["clear_comment","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-clear_comment","()","<p>Clears the comment. Used by the Ruby parser.\n",null,1],["clear_data_source_cache!","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear_data_source_cache-21","(name)","<p>Clear out internal caches for the data source <code>name</code>.\n",null,0],["clear_default_specs","Gem","ruby/classes/Gem.html#method-c-clear_default_specs","()","<p>Clear default gem related variables. It is for test\n",null,1],["clear_gemspec_cache","Bundler","ruby/classes/Bundler.html#method-c-clear_gemspec_cache","()","",null,1],["clear_helpers","AbstractController::Helpers::ClassMethods","rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-clear_helpers","()","<p>Clears up all existing helpers in this class, only keeping the helper with the same name as this class. …\n",null,0],["clear_paths","Gem","ruby/classes/Gem.html#method-c-clear_paths","()","<p>Reset the <code>dir</code> and <code>path</code> values.  The next time <code>dir</code> or <code>path</code> is requested, the values will be calculated …\n",null,1],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-clear_query_cache","()","<p>Clears the query cache.\n<p>One reason you may wish to call this method explicitly is between queries that …\n",null,0],["clear_query_caches_for_current_thread","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-clear_query_caches_for_current_thread","()","<p>Clears the query cache for all connections associated with the current thread.\n",null,0],["clear_reloadable_connections","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_reloadable_connections","(raise_on_acquisition_timeout = true)","<p>Clears the cache which maps classes and re-connects connections that require reloading.\n<p>Raises:\n<p>ActiveRecord::ExclusiveConnectionTimeoutError …\n",null,0],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_reloadable_connections-21","(role = ActiveRecord::Base.current_role)","<p>Clears the cache which maps classes.\n<p>See ConnectionPool#clear_reloadable_connections! for details.\n",null,0],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes and re-connects connections that require reloading.\n<p>The pool first …\n",null,0],["clear_schema_cache","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-clear_schema_cache","(filename)","",null,0],["clear_screen","IO","ruby/classes/IO.html#method-i-clear_screen","()","",null,1],["clear_screen","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-clear_screen","()","",null,1],["clear_screen","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-clear_screen","()","",null,1],["clear_screen","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-clear_screen","(key)","",null,1],["clear_screen","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-clear_screen","()","",null,1],["clear_validators!","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-clear_validators-21","()","<p>Clears all of the validators and validations.\n<p>Note that this will clear anything that is being used to …\n",null,0],["cleared?","Fiddle::Pinned","ruby/classes/Fiddle/Pinned.html#method-i-cleared-3F","()","<p>Returns true if the reference has been cleared, otherwise returns false.\n",null,1],["client_ca","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-client_ca","()","<p>Returns the list of client CAs. Please note that in contrast to SSLContext#client_ca= no array of X509::Certificate …\n",null,1],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-client_min_messages","()","<p>Returns the current client message level.\n",null,0],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-client_min_messages-3D","(level)","<p>Set the client message level.\n",null,0],["clobber_task_description","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-clobber_task_description","()","<p>Task description for the clobber rdoc task or its renamed equivalent\n",null,1],["clock_getres","Process","ruby/classes/Process.html#method-c-clock_getres","(*args)","<p>Returns a clock resolution as determined by POSIX function clock_getres():\n\n<pre><code>Process.clock_getres(:CLOCK_REALTIME) ...\n</code></pre>\n",null,1],["clock_gettime","Process","ruby/classes/Process.html#method-c-clock_gettime","(*args)","<p>Returns a clock time as determined by POSIX function clock_gettime():\n\n<pre><code>Process.clock_gettime(:CLOCK_PROCESS_CPUTIME_ID) ...\n</code></pre>\n",null,1],["clone","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-clone","","<p>Identical to Ruby’s clone method.  This is a “shallow” copy.  Be warned that your attributes …\n",null,0],["clone","BigDecimal","ruby/classes/BigDecimal.html#method-i-clone","()","",null,1],["clone","ENV","ruby/classes/ENV.html#method-c-clone","(p1 = {})","<p>Raises TypeError, because ENV is a wrapper for the process-wide environment variables and a clone is …\n",null,1],["clone","Kernel","ruby/classes/Kernel.html#method-i-clone","(freeze: nil)","<p>Produces a shallow copy of <em>obj</em>—the instance variables of <em>obj</em> are copied, but not the objects they reference. …\n",null,1],["clone","Method","ruby/classes/Method.html#method-i-clone","()","<p>Returns a clone of this method.\n\n<pre><code>class A\n  def foo\n    return &quot;bar&quot;\n  end\nend\n\nm = A.new.method(:foo)\nm.call ...\n</code></pre>\n",null,1],["clone","Numeric","ruby/classes/Numeric.html#method-i-clone","(*args)","<p>Returns <code>self</code>.\n<p>Raises an exception if the value for <code>freeze</code> is neither <code>true</code> nor <code>nil</code>.\n<p>Related: Numeric#dup …\n",null,1],["clone","Singleton","ruby/classes/Singleton.html#method-i-clone","()","<p>Raises a TypeError to prevent cloning.\n",null,1],["clone","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-clone","()","<p>Returns a clone of this method.\n\n<pre><code>class A\n  def foo\n    return &quot;bar&quot;\n  end\nend\n\nm = A.new.method(:foo)\nm.call ...\n</code></pre>\n",null,1],["clone_empty","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-clone_empty","()","",null,0],["close","ActionCable::Connection::Base","rails/classes/ActionCable/Connection/Base.html#method-i-close","(reason: nil, reconnect: true)","<p>Close the WebSocket connection.\n",null,0],["close","ActionController::Live::SSE","rails/classes/ActionController/Live/SSE.html#method-i-close","()","",null,0],["close","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-close","(unlink_now = false)","<p>Shortcut for <code>tempfile.close</code>.\n",null,0],["close","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-close","()","",null,0],["close","ActionDispatch::Response::RackBody","rails/classes/ActionDispatch/Response/RackBody.html#method-i-close","()","",null,0],["close","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-close","()","<p>Check the connection back in to the connection pool\n",null,0],["close","ActiveSupport::Gzip::Stream","rails/classes/ActiveSupport/Gzip/Stream.html#method-i-close","()","",null,0],["close","ARGF","ruby/classes/ARGF.html#method-i-close","()","<p>Closes the current file and skips to the next file in ARGV. If there are no more files to open, just …\n",null,1],["close","CGI::Session","ruby/classes/CGI/Session.html#method-i-close","()","<p>Store session data on the server and close the session storage. For some session storage types, this …\n",null,1],["close","CGI::Session::FileStore","ruby/classes/CGI/Session/FileStore.html#method-i-close","()","<p>Update and close the session’s FileStore file.\n",null,1],["close","CGI::Session::MemoryStore","ruby/classes/CGI/Session/MemoryStore.html#method-i-close","()","<p>Close session storage.\n<p>A no-op.\n",null,1],["close","CGI::Session::NullStore","ruby/classes/CGI/Session/NullStore.html#method-i-close","()","<p>Close session storage.\n<p>A no-op.\n",null,1],["close","CGI::Session::PStore","ruby/classes/CGI/Session/PStore.html#method-i-close","()","<p>Update and close the session’s PStore file.\n",null,1],["close","Dir","ruby/classes/Dir.html#method-i-close","()","<p>Closes the stream in <code>self</code>, if it is open, and returns <code>nil</code>; ignored if <code>self</code> is already closed:\n\n<pre><code>dir = Dir.new(&#39;example&#39;) ...\n</code></pre>\n",null,1],["close","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-close","()","<p>Called when the current thread exits. The scheduler is expected to implement this method in order to …\n",null,1],["close","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-close","()","<p>Close this handle.\n<p>Calling close more than once will raise a Fiddle::DLError exception.\n",null,1],["close","Gem::Package::TarReader","ruby/classes/Gem/Package/TarReader.html#method-i-close","()","<p>Close the tar file\n",null,1],["close","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-close","()","<p>Closes the tar entry\n",null,1],["close","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-close","()","<p>Closes the TarWriter\n",null,1],["close","Gem::SilentUI","ruby/classes/Gem/SilentUI.html#method-i-close","()","",null,1],["close","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-close","()","",null,1],["close","IO","ruby/classes/IO.html#method-i-close","()","<p>Closes the stream for both reading and writing if open for either or both; returns <code>nil</code>. See Open and …\n",null,1],["close","IRB::FileInputMethod","ruby/classes/IRB/FileInputMethod.html#method-i-close","()","",null,1],["close","Logger","ruby/classes/Logger.html#method-i-close","()","<p>Closes the logger; returns <code>nil</code>:\n\n<pre><code>logger = Logger.new(&#39;t.log&#39;)\nlogger.close       # =&gt; nil\nlogger.info(&#39;foo&#39;) ...\n</code></pre>\n",null,1],["close","Logger::LogDevice","ruby/classes/Logger/LogDevice.html#method-i-close","()","",null,1],["close","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-close","()","<p>Closes the SSLSocket and flushes any unwritten data.\n",null,1],["close","OpenSSL::SSL::SSLServer","ruby/classes/OpenSSL/SSL/SSLServer.html#method-i-close","()","<p>See IO#close for details.\n",null,1],["close","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-close","()","<p>Closes the DNS resolver.\n",null,1],["close","SOCKSSocket","ruby/classes/SOCKSSocket.html#method-i-close","()","<p>Closes the SOCKS connection.\n",null,1],["close","StringIO","ruby/classes/StringIO.html#method-i-close","()","<p>Closes <code>self</code> for both reading and writing.\n<p>Raises IOError if reading or writing is attempted.\n<p>Related:  …\n",null,1],["close","Syslog","ruby/classes/Syslog.html#method-c-close","()","<p>Closes the syslog facility. Raises a runtime exception if it is not open.\n",null,1],["close","Tempfile","ruby/classes/Tempfile.html#method-i-close","(unlink_now=false)","<p>Closes the file. If <code>unlink_now</code> is true, then the file will be unlinked (deleted) after closing. Of course, …\n",null,1],["close","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-close","()","<p>Closes the queue. A closed queue cannot be re-opened.\n<p>After the call to close completes, the following …\n",null,1],["close","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-close","()","<p>Similar to Thread::Queue#close.\n<p>The difference is behavior with waiting enqueuing threads.\n<p>If there are …\n",null,1],["close","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-close","()","<p>Close key.\n<p>After close, most method raise an error.\n",null,1],["close","Win32::Registry::PredefinedKey","ruby/classes/Win32/Registry/PredefinedKey.html#method-i-close","()","<p>Predefined keys cannot be closed\n",null,1],["close","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-close","()","<p>Closes the GzipFile object. This method calls close method of the associated IO object. Returns the associated …\n",null,1],["close","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-close","()","<p>Closes the stream. All operations on the closed stream will raise an exception.\n",null,1],["close!","Tempfile","ruby/classes/Tempfile.html#method-i-close-21","()","<p>Closes and unlinks (deletes) the file. Has the same effect as called <code>close(true)</code>.\n",null,1],["close_all","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-close_all","()","",null,1],["close_enabled?","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-close_enabled-3F","()","<p>Returns <code>true</code> if dlclose() will be called when this handle is garbage collected.\n<p>See man(3) dlclose() for …\n",null,1],["close_incoming","Ractor","ruby/classes/Ractor.html#method-i-close_incoming","()","<p>Closes the incoming port and returns whether it was already closed. All further attempts to Ractor.receive …\n",null,1],["close_on_exec=","IO","ruby/classes/IO.html#method-i-close_on_exec-3D","(p1)","<p>Sets a close-on-exec flag.\n\n<pre><code>f = File.open(File::NULL)\nf.close_on_exec = true\nsystem(&quot;cat&quot;, &quot;/proc/self/fd/#{f.fileno}&quot;) ...\n</code></pre>\n",null,1],["close_on_exec?","IO","ruby/classes/IO.html#method-i-close_on_exec-3F","()","<p>Returns <code>true</code> if the stream will be closed on exec, <code>false</code> otherwise:\n\n<pre><code>f = File.open(&#39;t.txt&#39;)\nf.close_on_exec? ...\n</code></pre>\n",null,1],["close_outgoing","Ractor","ruby/classes/Ractor.html#method-i-close_outgoing","()","<p>Closes the outgoing port and returns whether it was already closed. All further attempts to Ractor.yield …\n",null,1],["close_read","BasicSocket","ruby/classes/BasicSocket.html#method-i-close_read","()","<p>Disallows further read using shutdown system call.\n\n<pre><code>s1, s2 = UNIXSocket.pair\ns1.close_read\ns2.puts #=&gt; ...\n</code></pre>\n",null,1],["close_read","IO","ruby/classes/IO.html#method-i-close_read","()","<p>Closes the stream for reading if open for reading; returns <code>nil</code>. See Open and Closed Streams.\n<p>If the stream …\n",null,1],["close_read","StringIO","ruby/classes/StringIO.html#method-i-close_read","()","<p>Closes <code>self</code> for reading; closed-write setting remains unchanged.\n<p>Raises IOError if reading is attempted. …\n",null,1],["close_write","BasicSocket","ruby/classes/BasicSocket.html#method-i-close_write","()","<p>Disallows further write using shutdown system call.\n\n<pre><code>UNIXSocket.pair {|s1, s2|\n  s1.print &quot;ping&quot;\n  s1.close_write ...\n</code></pre>\n",null,1],["close_write","IO","ruby/classes/IO.html#method-i-close_write","()","<p>Closes the stream for writing if open for writing; returns <code>nil</code>. See Open and Closed Streams.\n<p>Flushes any …\n",null,1],["close_write","StringIO","ruby/classes/StringIO.html#method-i-close_write","()","<p>Closes <code>self</code> for writing; closed-read setting remains unchanged.\n<p>Raises IOError if writing is attempted. …\n",null,1],["closed?","ARGF","ruby/classes/ARGF.html#method-i-closed-3F","()","<p>Returns <em>true</em> if the current file has been closed; <em>false</em> otherwise. Use ARGF.close to actually close the …\n",null,1],["closed?","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-closed-3F","()","<p>Is the tar entry closed?\n",null,1],["closed?","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-closed-3F","()","<p>Is the TarWriter closed?\n",null,1],["closed?","IO","ruby/classes/IO.html#method-i-closed-3F","()","<p>Returns <code>true</code> if the stream is closed for both reading and writing, <code>false</code> otherwise. See Open and Closed …\n",null,1],["closed?","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-closed-3F","()","",null,1],["closed?","StringIO","ruby/classes/StringIO.html#method-i-closed-3F","()","<p>Returns <code>true</code> if <code>self</code> is closed for both reading and writing, <code>false</code> otherwise.\n",null,1],["closed?","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-closed-3F","()","<p>Returns <code>true</code> if the queue is closed.\n",null,1],["closed?","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-closed-3F","()","<p>Same as IO#closed?\n",null,1],["closed?","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-closed-3F","()","<p>Returns true if the stream is closed.\n",null,1],["closed_read?","StringIO","ruby/classes/StringIO.html#method-i-closed_read-3F","()","<p>Returns <code>true</code> if <code>self</code> is closed for reading, <code>false</code> otherwise.\n",null,1],["closed_write?","StringIO","ruby/classes/StringIO.html#method-i-closed_write-3F","()","<p>Returns <code>true</code> if <code>self</code> is closed for writing, <code>false</code> otherwise.\n",null,1],["cmds","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-cmds","()","<p>Returns an array of command definitions for the current engine\n",null,1],["cmp","FileUtils","ruby/classes/FileUtils.html#method-c-cmp","(a, b)","",null,1],["cmp","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-cmp","(p1)","",null,1],["cmp","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-cmp","(p1)","<p>Compares this certificate id with <em>other</em> and returns <code>true</code> if they are the same.\n",null,1],["cmp","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-cmp","(p1)","<p>Compares this Name with <em>other</em> and returns <code>0</code> if they are the same and <code>-1</code> or <code>+1</code> if they are greater or …\n",null,1],["cmp_issuer","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-cmp_issuer","(p1)","<p>Compares this certificate id’s issuer with <em>other</em> and returns <code>true</code> if they are the same.\n",null,1],["cmsg_is?","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-cmsg_is-3F","(p1, p2)","<p>tests the level and type of <em>ancillarydata</em>.\n\n<pre><code>ancdata = Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, ...\n</code></pre>\n",null,1],["code","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-code","()","<p>Returns a string to ensure compatibility with <code>Net::HTTPResponse</code>.\n",null,0],["code_around_binding","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-i-code_around_binding","()","",null,1],["code_block","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-code_block","()","<p>Return the currently matched lines as a ‘CodeBlock`\n<p>When a ‘CodeBlock` is created it will gather metadata …\n",null,1],["code_gc","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-code_gc","()","<p>Discard existing compiled code to reclaim memory\nand allow for recompilations in the future.\n",null,1],["codepage","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-codepage","()","<p>Returns current codepage.\n\n<pre><code>WIN32OLE.codepage # =&gt; WIN32OLE::CP_ACP\n</code></pre>\n",null,1],["codepage=","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-codepage-3D","(p1)","<p>Sets current codepage. The WIN32OLE.codepage is initialized according to Encoding.default_internal.  …\n",null,1],["codepoints","String","ruby/classes/String.html#method-i-codepoints","()","<p>Returns an array of the codepoints in <code>self</code>; each codepoint is the integer value for a character:\n\n<pre><code>&#39;hello&#39;.codepoints ...\n</code></pre>\n",null,1],["codespell","","rails/files/rails/codespell_txt.html","","<p>ake alls ba cookoo coyp devels dum fase filetest fo fot froms frop hel inactivate isnt iterm januar mor …\n",null,0],["coerce","BigDecimal","ruby/classes/BigDecimal.html#method-i-coerce","(p1)","<p>The coerce method provides support for Ruby type coercion. It is not enabled by default.\n<p>This means that …\n",null,1],["coerce","Float","ruby/classes/Float.html#method-i-coerce","(p1)","<p>Returns a 2-element array containing <code>other</code> converted to a Float and <code>self</code>:\n\n<pre><code>f = 3.14                 # =&gt; ...\n</code></pre>\n",null,1],["coerce","Integer","ruby/classes/Integer.html#method-i-coerce","(p1)","<p>Returns an array with both a <code>numeric</code> and a <code>int</code> represented as Integer objects or Float objects.\n<p>This is …\n",null,1],["coerce","Logger::Severity","ruby/classes/Logger/Severity.html#method-c-coerce","(severity)","",null,1],["coerce","Numeric","ruby/classes/Numeric.html#method-i-coerce","(p1)","<p>Returns a 2-element array containing two numeric elements, formed from the two operands <code>self</code> and <code>other</code> …\n",null,1],["coerce","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-coerce","(p1)","",null,1],["coerce","URI::Generic","ruby/classes/URI/Generic.html#method-i-coerce","(oth)","<p>Args\n<p><code>v</code> &mdash; URI or String\n\n<p>Description\n",null,1],["cofactor","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-cofactor","()","<p>Returns the cofactor of the group.\n<p>See the OpenSSL documentation for EC_GROUP_get_cofactor()\n",null,1],["coffeelint.json","","rails/files/rails/actionview/coffeelint_json.html","","<p>{\n\n<pre><code>&quot;arrow_spacing&quot;: {\n  &quot;level&quot;: &quot;warn&quot;\n},\n&quot;braces_spacing&quot;: {\n  &quot;level&quot;: &quot;warn&quot;,\n  &quot;spaces&quot;: 1,\n  &quot;empty_object_spaces&quot;: ...\n</code></pre>\n",null,0],["col_sep","CSV","ruby/classes/CSV.html#method-i-col_sep","()","<p>Returns the encoded column separator; used for parsing and writing; see {Option <code>col_sep</code>}:\n\n<pre><code>CSV.new(&#39;&#39;).col_sep ...\n</code></pre>\n",null,1],["collation","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-collation","()","<p>Returns the database collation strategy.\n",null,0],["collation","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-collation","()","<p>Returns the current database collation.\n",null,0],["collation","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-collation","(configuration, *arguments)","",null,0],["collation_current","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-collation_current","(env_name = env, db_name = name)","",null,0],["collect","Array","ruby/classes/Array.html#method-i-collect","()","<p>Calls the block, if given, with each element of <code>self</code>; returns a new Array whose elements are the return …\n",null,1],["collect","Enumerable","ruby/classes/Enumerable.html#method-i-collect","()","<p>Returns an array of objects returned by the block.\n<p>With a block given, calls the block with successive …\n",null,1],["collect","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-collect","()","<p>Like Enumerable#map, but chains operation to be lazy-evaluated.\n\n<pre><code>(1..Float::INFINITY).lazy.map {|i| i**2 ...\n</code></pre>\n",null,1],["collect!","Array","ruby/classes/Array.html#method-i-collect-21","()","<p>Calls the block, if given, with each element; replaces the element with the block’s return value: …\n",null,1],["collect!","Set","ruby/classes/Set.html#method-i-collect-21","()","<p>Replaces the elements with ones returned by <code>collect()</code>.\nReturns an enumerator if no block is given.\n",null,1],["collect_concat","Enumerable","ruby/classes/Enumerable.html#method-i-collect_concat","()","<p>Returns an array of flattened objects returned by the block.\n<p>With a block given, calls the block with …\n",null,1],["collect_concat","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-collect_concat","()","<p>Returns a new lazy enumerator with the concatenated results of running <code>block</code> once for every element in …\n",null,1],["collect_first_comment","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-collect_first_comment","()","<p>Look for the first comment in a file that isn’t a shebang line.\n",null,1],["collect_method","FileUtils","ruby/classes/FileUtils.html#method-c-collect_method","(opt)","<p>Returns an array of the string method names of the methods that accept the given keyword option <code>opt</code>; …\n",null,1],["collect_tokens","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-i-collect_tokens","()","<p>Starts collecting tokens\n",null,1],["collection","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-collection","(&block)","<p>To add a route to the collection:\n\n<pre><code>resources :photos do\n  collection do\n    get &#39;search&#39;\n  end\nend\n</code></pre>\n<p>This …\n",null,0],["collection_cache_versioning","ActiveRecord::Integration","rails/classes/ActiveRecord/Integration.html#method-c-collection_cache_versioning","","<p>Indicates whether to use a stable #cache_key method that is accompanied by a changing version in the …\n",null,0],["collection_check_boxes","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_check_boxes","(method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Wraps ActionView::Helpers::FormOptionsHelper#collection_check_boxes for form builders:\n\n<pre><code>&lt;%= form_for @post ...\n</code></pre>\n",null,0],["collection_check_boxes","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_check_boxes","(object, method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Returns check box tags for the collection of existing return values of <code>method</code> for <code>object</code>‘s class. …\n",null,0],["collection_radio_buttons","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_radio_buttons","(method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Wraps ActionView::Helpers::FormOptionsHelper#collection_radio_buttons for form builders:\n\n<pre><code>&lt;%= form_for ...\n</code></pre>\n",null,0],["collection_radio_buttons","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_radio_buttons","(object, method, collection, value_method, text_method, options = {}, html_options = {}, &block)","<p>Returns radio button tags for the collection of existing return values of <code>method</code> for <code>object</code>‘s class. …\n",null,0],["collection_select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_select","(method, collection, value_method, text_method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#collection_select for form builders:\n\n<pre><code>&lt;%= form_for @post do ...\n</code></pre>\n",null,0],["collection_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_select","(object, method, collection, value_method, text_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code> and <code>&lt;option&gt;</code> tags for the collection of existing return values of <code>method</code> …\n",null,0],["color","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-i-color","(text, color, bold = false)","<p>Set color by using a symbol or one of the defined constants. If a third option is set to <code>true</code>, it also …\n",null,0],["color_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-color_field","","<p>Wraps ActionView::Helpers::FormHelper#color_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["color_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-color_field","(object_name, method, options = {})","<p>Returns a text_field of type “color”.\n\n<pre><code>color_field(&quot;car&quot;, &quot;color&quot;)\n# =&gt; &lt;input id=&quot;car_color&quot; ...\n</code></pre>\n",null,0],["color_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-color_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “color”.\n<p>Options\n<p>Supports the same options as #text_field_tag.\n",null,0],["colorable?","IRB::Color","ruby/classes/IRB/Color.html#method-c-colorable-3F","()","",null,1],["colorize","IRB::Color","ruby/classes/IRB/Color.html#method-c-colorize","(text, seq, colorable: colorable?)","",null,1],["colorize_code","IRB::Color","ruby/classes/IRB/Color.html#method-c-colorize_code","(code, complete: true, ignore_error: false, colorable: colorable?, local_variables: [])","<p>If ‘complete` is false (code is incomplete), this does not warn compile_error. This option is needed …\n",null,1],["colorize_logging","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-colorize_logging","()","",null,0],["colorize_logging=","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-colorize_logging-3D","(val)","",null,0],["column","ActiveRecord::ConnectionAdapters::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/ColumnMethods.html#method-i-column","","<p>Appends a column or columns of a specified type.\n\n<pre><code>t.string(:goat)\nt.string(:goat, :sheep)\n</code></pre>\n<p>See TableDefinition#column …\n",null,0],["column","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column","(column_name, type, index: nil, **options)","<p>Adds a new column to the named table.\n\n<pre><code>t.column(:name, :string)\n</code></pre>\n<p>See TableDefinition#column for details of …\n",null,0],["column","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-column","(name, type, index: nil, **options)","<p>Instantiates a new column for the table. See connection.add_column for available options.\n<p>Additional options …\n",null,0],["column","Prism::Source","ruby/classes/Prism/Source.html#method-i-column","(byte_offset)","<p>Return the column number for the given byte offset.\n",null,1],["column","Ripper::Filter","ruby/classes/Ripper/Filter.html#method-i-column","()","<p>The column number of the current token. This value starts from 0. This method is valid only in event …\n",null,1],["column_defaults","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_defaults","()","<p>Returns a hash where the keys are column names and the values are default values when instantiating the …\n",null,0],["column_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-column_exists-3F","(table_name, column_name, type = nil, **options)","<p>Checks to see if a column exists in a given table.\n\n<pre><code># Check a column exists\ncolumn_exists?(:suppliers, ...\n</code></pre>\n",null,0],["column_exists?","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column_exists-3F","(column_name, type = nil, **options)","<p>Checks to see if a column exists.\n\n<pre><code>t.string(:name) unless t.column_exists?(:name, :string)\n</code></pre>\n<p>See connection.column_exists? …\n",null,0],["column_for_attribute","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_for_attribute","(name)","<p>Returns the column object for the named attribute. Returns an <code>ActiveRecord::ConnectionAdapters::NullColumn</code> …\n",null,0],["column_name_matcher","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html#method-i-column_name_matcher","()","",null,0],["column_name_with_order_matcher","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html#method-i-column_name_with_order_matcher","()","",null,0],["column_names","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_names","()","<p>Returns an array of column names as strings.\n",null,0],["column_separator","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-column_separator","()","",null,1],["columns","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-columns","(table_name)","<p>Get the columns for a table\n",null,0],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-columns","(table_name)","<p>Returns an array of <code>Column</code> objects for the table specified by <code>table_name</code>.\n",null,0],["columns","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-columns","()","<p>Returns an array of ColumnDefinition objects for the columns of the table.\n",null,0],["columns","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-columns","()","",null,0],["columns_hash","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-columns_hash","(table_name)","<p>Get the columns for a table as a hash, key is the column name value is the column object.\n",null,0],["columns_hash?","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-columns_hash-3F","(table_name)","<p>Checks whether the columns hash is already cached for a table.\n",null,0],["combination","Array","ruby/classes/Array.html#method-i-combination","(p1)","<p>Calls the block, if given, with combinations of elements of <code>self</code>; returns <code>self</code>. The order of combinations …\n",null,1],["combination","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-c-combination","(array)","<p>Example:\n\n<pre><code>combination([:a, :b, :c, :d])\n# =&gt; [[:a], [:b], [:c], [:d], [:a, :b], [:a, :c], [:a, :d], [:b, ...\n</code></pre>\n",null,1],["combined_fragment_cache_key","AbstractController::Caching::Fragments","rails/classes/AbstractController/Caching/Fragments.html#method-i-combined_fragment_cache_key","(key)","<p>Given a key (as described in <code>expire_fragment</code>), returns a key array suitable for use in reading, writing, …\n",null,0],["comma_breakable","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-comma_breakable","()","<p>A convenience method which is same as follows:\n\n<pre><code>text &#39;,&#39;\nbreakable\n</code></pre>\n",null,1],["command","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-c-command","()","",null,1],["command=","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-c-command-3D","(cmd)","",null,1],["command_injection","","ruby/files/ruby/doc/command_injection_rdoc.html","","<p>Command Injection\n<p>Some Ruby core methods accept string data that includes text to be executed as a system …\n",null,1],["command_name","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-command_name","()","<p>Return command name without namespaces.\n\n<pre><code>Rails::Command::TestCommand.command_name # =&gt; &#39;test&#39;\n</code></pre>\n",null,0],["command_names","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-command_names","()","<p>Return a sorted list of all command names as strings.\n",null,1],["command_type","Rails::Command","rails/classes/Rails/Command.html#method-c-command_type","()","",null,0],["command_type","Rails::Generators","rails/classes/Rails/Generators.html#method-c-command_type","()","",null,0],["commands","FileUtils","ruby/classes/FileUtils.html#method-c-commands","()","<p>Returns an array of the string names of FileUtils methods that accept one or more keyword arguments: …\n",null,1],["comment","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-comment","()","<p>Returns comments recorded in the gzip file header, or nil if the comments is not present.\n",null,1],["comment=","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-comment-3D","(comment)","<p>Replaces our comment with <code>comment</code>, unless it is empty.\n",null,1],["comment=","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-comment-3D","(p1)","<p>Specify the comment (<code>str</code>) in the gzip header.\n",null,1],["comments","","ruby/files/ruby/doc/syntax/comments_rdoc.html","","<p>Code Comments\n<p>Ruby has two types of comments: inline and block.\n<p>Inline comments start with the <code>#</code> character …\n",null,1],["commercial","Date","ruby/classes/Date.html#method-c-commercial","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Returns a new Date object constructed from the arguments.\n<p>Argument <code>cwyear</code> gives the year, and should be …\n",null,1],["commercial","DateTime","ruby/classes/DateTime.html#method-c-commercial","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7, p8 = v8)","<p>Creates a DateTime object denoting the given week date.\n\n<pre><code>DateTime.commercial(2001) #=&gt; #&lt;DateTime: 2001-01-01T00:00:00+00:00 ...\n</code></pre>\n",null,1],["commit","ActiveRecord::ConnectionAdapters::RealTransaction","rails/classes/ActiveRecord/ConnectionAdapters/RealTransaction.html#method-i-commit","()","",null,0],["commit","ActiveRecord::ConnectionAdapters::SavepointTransaction","rails/classes/ActiveRecord/ConnectionAdapters/SavepointTransaction.html#method-i-commit","()","",null,0],["commit","PStore","ruby/classes/PStore.html#method-i-commit","()","<p>Exits the current transaction block, committing any changes specified in the transaction block.\n<p>Raises …\n",null,1],["commit!","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-commit-21","()","",null,0],["commit!","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-commit-21","()","",null,0],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-commit_db_transaction","()","<p>Commits the transaction (and turns on auto-committing).\n",null,0],["commit_flash","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-commit_flash","()","",null,0],["commit_if_changed","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-commit_if_changed","()","",null,1],["committed?","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-committed-3F","()","",null,0],["committed?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-committed-3F","()","",null,0],["common_options","Gem::Command","ruby/classes/Gem/Command.html#method-c-common_options","()","",null,1],["compact","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-compact","()","<p>Returns a new <code>ActionController::Parameters</code> instance with <code>nil</code> values removed.\n",null,0],["compact","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-compact","()","",null,0],["compact","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-compact","()","",null,0],["compact","Array","ruby/classes/Array.html#method-i-compact","()","<p>Returns a new Array containing all non-<code>nil</code> elements from <code>self</code>:\n\n<pre><code>a = [nil, 0, nil, 1, nil, 2, nil]\na.compact ...\n</code></pre>\n",null,1],["compact","Enumerable","ruby/classes/Enumerable.html#method-i-compact","()","<p>Returns an array of all non-<code>nil</code> elements:\n\n<pre><code>a = [nil, 0, nil, &#39;a&#39;, false, nil, false, nil, &#39;a&#39;, nil, 0, ...\n</code></pre>\n",null,1],["compact","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-compact","()","<p>Like Enumerable#compact, but chains operation to be lazy-evaluated.\n",null,1],["compact","GC","ruby/classes/GC.html#method-c-compact","()","<p>This function compacts objects together in Ruby’s heap.  It eliminates unused space (or fragmentation) …\n",null,1],["compact","Hash","ruby/classes/Hash.html#method-i-compact","()","<p>Returns a copy of <code>self</code> with all <code>nil</code>-valued entries removed:\n\n<pre><code>h = {foo: 0, bar: nil, baz: 2, bat: nil}\nh1 ...\n</code></pre>\n",null,1],["compact!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-compact-21","()","<p>Removes all <code>nil</code> values in place and returns <code>self</code>, or <code>nil</code> if no changes were made.\n",null,0],["compact!","Array","ruby/classes/Array.html#method-i-compact-21","()","<p>Removes all <code>nil</code> elements from <code>self</code>.\n<p>Returns <code>self</code> if any elements removed, otherwise <code>nil</code>.\n",null,1],["compact!","Hash","ruby/classes/Hash.html#method-i-compact-21","()","<p>Returns <code>self</code> with all its <code>nil</code>-valued entries removed (in place):\n\n<pre><code>h = {foo: 0, bar: nil, baz: 2, bat: nil} ...\n</code></pre>\n",null,1],["compact_blank","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-compact_blank","()","<p>Returns a new <code>ActionController::Parameters</code> instance without the blank values. Uses Object#blank? for …\n",null,0],["compact_blank","Enumerable","rails/classes/Enumerable.html#method-i-compact_blank","()","<p>Returns a new <code>Array</code> without the blank items. Uses Object#blank? for determining if an item is blank. …\n",null,0],["compact_blank!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-compact_blank-21","()","<p>Removes all blank values in place and returns self. Uses Object#blank? for determining if a value is …\n",null,0],["compact_blank!","Hash","rails/classes/Hash.html#method-i-compact_blank-21","()","<p>Removes all blank values from the <code>Hash</code> in place and returns self. Uses Object#blank? for determining …\n",null,0],["comparable_time","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-comparable_time","()","",null,0],["compare?","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-compare-3F","(p1)","<p>Used primarily to check if an OpenSSL::X509::Certificate#public_key compares to its private key.\n<p>Example …\n",null,1],["compare_by_identity","Hash","ruby/classes/Hash.html#method-i-compare_by_identity","()","<p>Sets <code>self</code> to consider only identity in comparing keys; two keys are considered the same only if they …\n",null,1],["compare_by_identity","Set","ruby/classes/Set.html#method-i-compare_by_identity","()","<p>Makes the set compare its elements by their identity and returns\nself. This method may not be supported ...\n",null,1],["compare_by_identity?","Hash","ruby/classes/Hash.html#method-i-compare_by_identity-3F","()","<p>Returns <code>true</code> if #compare_by_identity has been called, <code>false</code> otherwise.\n",null,1],["compare_by_identity?","Set","ruby/classes/Set.html#method-i-compare_by_identity-3F","()","<p>Returns true if the set will compare its elements by their\nidentity. Also see Set#compare_by_identity ...\n",null,1],["compare_file","FileUtils","ruby/classes/FileUtils.html#method-c-compare_file","(a, b)","<p>Returns <code>true</code> if the contents of files <code>a</code> and <code>b</code> are identical, <code>false</code> otherwise.\n<p>Arguments <code>a</code> and <code>b</code> should …\n",null,1],["compare_stream","FileUtils","ruby/classes/FileUtils.html#method-c-compare_stream","(a, b)","<p>Returns <code>true</code> if the contents of streams <code>a</code> and <code>b</code> are identical, <code>false</code> otherwise.\n<p>Arguments <code>a</code> and <code>b</code> should …\n",null,1],["compare_with_coercion","Date","rails/classes/Date.html#method-i-compare_with_coercion","(other)","<p>Allow Date to be compared with Time by converting to DateTime and relying on the &lt;=&gt; from there. …\n",null,0],["compare_with_coercion","Time","rails/classes/Time.html#method-i-compare_with_coercion","(other)","<p>Layers additional behavior on Time#&lt;=&gt; so that DateTime and ActiveSupport::TimeWithZone instances …\n",null,0],["compare_with_global_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-compare_with_global_token","(token, session)","",null,0],["compare_with_real_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-compare_with_real_token","(token, session)","",null,0],["compare_without_coercion","Date","rails/classes/Date.html#method-i-compare_without_coercion","(other)","",null,0],["compare_without_coercion","Time","rails/classes/Time.html#method-i-compare_without_coercion","(other)","",null,0],["compatible?","Encoding","ruby/classes/Encoding.html#method-c-compatible-3F","(p1, p2)","<p>Checks the compatibility of two objects.\n<p>If the objects are both strings they are compatible when they …\n",null,1],["compile","Prism::Pattern","ruby/classes/Prism/Pattern.html#method-i-compile","()","<p>Compile the query into a callable object that can be used to match against nodes.\n",null,1],["compile","Regexp","ruby/classes/Regexp.html#method-c-compile","(*args)","<p>Alias for Regexp.new\n",null,1],["compile","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-compile","(p1, *args, p3 = {})","<p>Takes <code>source</code>, which can be a string of Ruby code, or an open <code>File</code> object. that contains Ruby source code. …\n",null,1],["compile_error","SyntaxSuggest::RipperErrors","ruby/classes/SyntaxSuggest/RipperErrors.html#method-i-compile_error","(msg)","",null,1],["compile_file","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_file","(p1, *args, p3 = {})","<p>Takes <code>file</code>, a String with the location of a Ruby source file, reads, parses and compiles the file, and …\n",null,1],["compile_file_prism","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_file_prism","(p1, *args, p3 = {})","",null,1],["compile_methods!","ActiveSupport::Configurable::Configuration","rails/classes/ActiveSupport/Configurable/Configuration.html#method-c-compile_methods-21","(keys)","<p>Compiles reader methods so we don’t have to go through method_missing.\n",null,0],["compile_methods!","ActiveSupport::Configurable::Configuration","rails/classes/ActiveSupport/Configurable/Configuration.html#method-i-compile_methods-21","()","",null,0],["compile_option","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_option","()","<p>Returns a hash of default options used by the Ruby iseq compiler.\n<p>For details, see InstructionSequence.compile_option= …\n",null,1],["compile_option=","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_option-3D","(p1)","<p>Sets the default values for various optimizations in the Ruby iseq compiler.\n<p>Possible values for <code>options</code> …\n",null,1],["compile_prism","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_prism","(p1, *args, p3 = {})","",null,1],["compiled_method_container","ActionView::Base","rails/classes/ActionView/Base.html#method-i-compiled_method_container","()","",null,0],["complain","Gem::Commands::LockCommand","ruby/classes/Gem/Commands/LockCommand.html#method-i-complain","(message)","",null,1],["complete","ActionView::CacheExpiry::Executor","rails/classes/ActionView/CacheExpiry/Executor.html#method-i-complete","(_)","",null,0],["complete","ActiveRecord::QueryCache","rails/classes/ActiveRecord/QueryCache.html#method-c-complete","(pools)","",null,0],["complete","OptionParser::Completion","ruby/classes/OptionParser/Completion.html#method-i-complete","(key, icase = false, pat = nil)","",null,1],["complete","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-complete","(id, opt, icase = false, *pat, &block)","<p>Searches list <code>id</code> for <code>opt</code> and the optional patterns for completion <code>pat</code>. If <code>icase</code> is true, the search is …\n",null,1],["complete","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-complete","(min_visibility)","<p>Prepares this ClassModule for use by a generator.\n<p>See RDoc::Store#complete\n",null,1],["complete","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-complete","(min_visibility)","<p>Prepares the RDoc code object tree for use by a generator.\n<p>It finds unique classes/modules defined, and …\n",null,1],["complete!","ActiveSupport::ExecutionWrapper","rails/classes/ActiveSupport/ExecutionWrapper.html#method-i-complete-21","()","<p>Complete this in-flight execution. This method <strong>must</strong> be called exactly once on the result of any call …\n",null,0],["complete_authentication","Win32::SSPI::NegotiateAuth","ruby/classes/Win32/SSPI/NegotiateAuth.html#method-i-complete_authentication","(token)","<p>Takes a token and gets the next token in the Negotiate authentication chain. Token can be Base64 encoded …\n",null,1],["completed?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-completed-3F","()","",null,0],["completer_quote_characters=","Reline::Core","ruby/classes/Reline/Core.html#method-i-completer_quote_characters-3D","(v)","",null,1],["completer_word_break_characters=","Reline::Core","ruby/classes/Reline/Core.html#method-i-completer_word_break_characters-3D","(v)","",null,1],["completion_append_character=","Reline::Core","ruby/classes/Reline/Core.html#method-i-completion_append_character-3D","(val)","",null,1],["completion_case_fold","Reline::Core","ruby/classes/Reline/Core.html#method-i-completion_case_fold","()","",null,1],["completion_case_fold=","Reline::Core","ruby/classes/Reline/Core.html#method-i-completion_case_fold-3D","(v)","",null,1],["completion_info","IRB::ReadlineInputMethod","ruby/classes/IRB/ReadlineInputMethod.html#method-i-completion_info","()","",null,1],["completion_info","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-completion_info","()","",null,1],["completion_journey_data","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-completion_journey_data","()","",null,1],["completion_proc=","Reline::Core","ruby/classes/Reline/Core.html#method-i-completion_proc-3D","(p)","",null,1],["completion_quote_character","Reline::Core","ruby/classes/Reline/Core.html#method-i-completion_quote_character","()","",null,1],["component","URI::Generic","ruby/classes/URI/Generic.html#method-i-component","()","<p>Components of the URI in the order.\n",null,1],["component","URI::Generic","ruby/classes/URI/Generic.html#method-c-component","()","<p>Components of the URI in the order.\n",null,1],["component_ary","URI::Generic","ruby/classes/URI/Generic.html#method-i-component_ary","()","<p>Returns an Array of the components defined from the COMPONENT Array.\n",null,1],["component_root_dir","Rails::API::RepoTask","rails/classes/Rails/API/RepoTask.html#method-i-component_root_dir","(component)","",null,0],["compose","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-c-compose","(blobs, filename:, content_type: nil, metadata: nil)","<p>Concatenate multiple blobs into a single “composed” blob.\n",null,0],["compose","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-compose","(source_keys, destination_key, filename: nil, content_type: nil, disposition: nil, custom_metadata: {})","<p>Concatenate multiple files into a single “composed” file.\n",null,0],["compose","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-compose","(source_keys, destination_key, filename: nil, content_type: nil, disposition: nil, custom_metadata: {})","",null,0],["compose","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-compose","(source_keys, destination_key, **)","",null,0],["compose","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-compose","(source_keys, destination_key, filename: nil, content_type: nil, disposition: nil, custom_metadata: {})","",null,0],["compose","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-compose","(source_keys, destination_key, filename: nil, content_type: nil, disposition: nil, custom_metadata: {})","",null,0],["compose","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-compose","()","<p>Performs composition on all the characters.\n\n<pre><code>&#39;é&#39;.length                       # =&gt; 1\n&#39;é&#39;.mb_chars.compose.to_s.length ...\n</code></pre>\n",null,0],["compose","ActiveSupport::Multibyte::Unicode","rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-compose","(codepoints)","<p>Compose decomposed characters to the composed form.\n",null,0],["compose_sets","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-c-compose_sets","(*sets)","<p>Combines <code>sets</code> into a ComposedSet that allows specification lookup in a uniform manner.  If one of the …\n",null,1],["composed_of","ActiveRecord::Aggregations::ClassMethods","rails/classes/ActiveRecord/Aggregations/ClassMethods.html#method-i-composed_of","(part_id, options = {})","<p>Adds reader and writer methods for manipulating a value object: <code>composed_of :address</code> adds <code>address</code> and …\n",null,0],["compress","ActiveSupport::Gzip","rails/classes/ActiveSupport/Gzip.html#method-c-compress","(source, level = Zlib::DEFAULT_COMPRESSION, strategy = Zlib::DEFAULT_STRATEGY)","<p>Compresses a string using gzip.\n",null,0],["compress_meta_key","Reline::KeyStroke","ruby/classes/Reline/KeyStroke.html#method-i-compress_meta_key","(ary)","",null,1],["compute_asset_extname","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-compute_asset_extname","(source, options = {})","<p>Compute extname to append to asset path. Returns <code>nil</code> if nothing should be added.\n",null,0],["compute_asset_host","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-compute_asset_host","(source = \"\", options = {})","<p>Pick an asset host for this source. Returns <code>nil</code> if no host is set, the host if no wildcard is set, the …\n",null,0],["compute_asset_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-compute_asset_path","(source, options = {})","<p>Computes asset path to public directory. Plugins and extensions can override this method to point to …\n",null,0],["compute_class","ActiveRecord::Reflection::MacroReflection","rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-compute_class","(name)","",null,0],["compute_key","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-compute_key","(pub_bn)","<p>Returns a String containing a shared secret computed from the other party’s public value.\n<p>This method …\n",null,1],["compute_tags","Rails::Rack::Logger","rails/classes/Rails/Rack/Logger.html#method-i-compute_tags","(request)","",null,0],["compute_type","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-compute_type","(type_name)","<p>Returns the class type of the record using the current module as a prefix. So descendants of MyApp::Business::Account …\n",null,0],["concat","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-concat","(string)","<p>The preferred method of outputting text in your views is to use the &lt;%= “text” %&gt; eRuby …\n",null,0],["concat","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-concat","(*records)","",null,0],["concat","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-concat","(value)","",null,0],["concat","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-concat","(paths)","",null,0],["concat","Array","ruby/classes/Array.html#method-i-concat","(*args)","<p>Adds to <code>array</code> all elements from each Array in <code>other_arrays</code>; returns <code>self</code>:\n\n<pre><code>a = [0, 1]\na.concat([2, 3], ...\n</code></pre>\n",null,1],["concat","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-concat","(new)","<p>Concatenates the <code>new</code> requirements onto this requirement.\n",null,1],["concat","OpenSSL::Buffering::Buffer","ruby/classes/OpenSSL/Buffering/Buffer.html#method-i-concat","(string)","",null,1],["concat","Reline::History","ruby/classes/Reline/History.html#method-i-concat","(*val)","",null,1],["concat","String","ruby/classes/String.html#method-i-concat","(*args)","<p>Concatenates each object in <code>objects</code> to <code>self</code> and returns <code>self</code>:\n\n<pre><code>s = &#39;foo&#39;\ns.concat(&#39;bar&#39;, &#39;baz&#39;) # =&gt; &quot;foobarbaz&quot; ...\n</code></pre>\n",null,1],["concat","StringScanner","ruby/classes/StringScanner.html#method-i-concat","(p1)","<p>Appends <code>str</code> to the string being scanned. This method does not affect scan pointer.\n\n<pre><code>s = StringScanner.new(&quot;Fri ...\n</code></pre>\n",null,1],["concern","ActionDispatch::Routing::Mapper::Concerns","rails/classes/ActionDispatch/Routing/Mapper/Concerns.html#method-i-concern","(name, callable = nil, &block)","<p>Define a routing concern using a name.\n<p>Concerns may be defined inline, using a block, or handled by another …\n",null,0],["concern","Kernel","rails/classes/Kernel.html#method-i-concern","(topic, &module_definition)","<p>A shortcut to define a toplevel concern, not within a module.\n<p>See Module::Concerning for more.\n",null,0],["concern","Module::Concerning","rails/classes/Module/Concerning.html#method-i-concern","(topic, &module_definition)","<p>A low-cruft shortcut to define a concern.\n\n<pre><code>concern :EventTracking do\n  ...\nend\n</code></pre>\n<p>is equivalent to\n",null,0],["concerning","Module::Concerning","rails/classes/Module/Concerning.html#method-i-concerning","(topic, prepend: false, &block)","<p>Define a new concern and mix it in.\n",null,0],["concerns","ActionDispatch::Routing::Mapper::Concerns","rails/classes/ActionDispatch/Routing/Mapper/Concerns.html#method-i-concerns","(*args)","<p>Use the named concerns\n\n<pre><code>resources :posts do\n  concerns :commentable\nend\n</code></pre>\n<p>Concerns also work in any routes …\n",null,0],["config","ActiveSupport::Configurable","rails/classes/ActiveSupport/Configurable.html#method-i-config","()","<p>Reads and writes attributes from a configuration OrderedOptions.\n\n<pre><code>require &quot;active_support/configurable&quot; ...\n</code></pre>\n",null,0],["config","ActiveSupport::Configurable::ClassMethods","rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config","()","",null,0],["config","ActiveSupport::EncryptedConfiguration","rails/classes/ActiveSupport/EncryptedConfiguration.html#method-i-config","()","<p>Returns the decrypted content as a Hash with symbolized keys.\n\n<pre><code>my_config = ActiveSupport::EncryptedConfiguration.new(...) ...\n</code></pre>\n",null,0],["config","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-config","()","",null,0],["config","Rails::Engine","rails/classes/Rails/Engine.html#method-i-config","()","<p>Define the configuration object for the engine.\n",null,0],["config","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-config","()","",null,0],["config","Rails::Railtie","rails/classes/Rails/Railtie.html#method-i-config","()","<p>This is used to create the <code>config</code> object on Railties, an instance of Railtie::Configuration, that is …\n",null,0],["config","DRb","ruby/classes/DRb.html#method-c-config","()","<p>Get the configuration of the current server.\n<p>If there is no current server, this returns the default configuration. …\n",null,1],["config","Reline::Face","ruby/classes/Reline/Face.html#method-c-config","(name, &block)","",null,1],["config","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-config","()","",null,1],["config.ru.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config_ru_tt.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require_relative “config/environment” …\n",null,0],["config_accessor","ActiveSupport::Configurable::ClassMethods","rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config_accessor","(*names, instance_reader: true, instance_writer: true, instance_accessor: true, default: nil)","<p>Allows you to add shortcut so that you don’t have to refer to attribute through config. Also look …\n",null,0],["config_file","Gem","ruby/classes/Gem.html#method-c-config_file","()","<p>The path to standard location of the user’s .gemrc file.\n",null,1],["config_file_name","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-config_file_name","()","<p>The name of the configuration file.\n",null,1],["config_for","Rails::Application","rails/classes/Rails/Application.html#method-i-config_for","(name, env: Rails.env)","<p>Convenience for loading config/foo.yml for the current Rails env.\n<p>Examples:\n\n<pre><code># config/exception_notification.yml: ...\n</code></pre>\n",null,0],["config_home","Gem","ruby/classes/Gem.html#method-c-config_home","()","<p>The path to standard location of the user’s configuration directory.\n",null,1],["config_target_version","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-config_target_version","()","",null,0],["config_when_updating","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-config_when_updating","()","",null,0],["configru","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-configru","()","",null,0],["configs","Reline::Face","ruby/classes/Reline/Face.html#method-c-configs","()","",null,1],["configs_for","ActiveRecord::DatabaseConfigurations","rails/classes/ActiveRecord/DatabaseConfigurations.html#method-i-configs_for","(env_name: nil, name: nil, include_replicas: false, include_hidden: false)","<p>Collects the configs for the environment and optionally the specification name passed in. To include …\n",null,0],["configuration","Rails","rails/classes/Rails.html#method-c-configuration","()","<p>The Configuration instance used to configure the Rails environment\n",null,0],["configuration","Gem","ruby/classes/Gem.html#method-c-configuration","()","<p>The standard configuration object for gems.\n",null,1],["configuration=","Gem","ruby/classes/Gem.html#method-c-configuration-3D","(config)","<p>Use the given configuration object (which implements the ConfigFile protocol) as the standard configuration …\n",null,1],["configurations","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-configurations","()","<p>Returns fully resolved ActiveRecord::DatabaseConfigurations object\n",null,0],["configurations","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-i-configurations","()","",null,0],["configurations=","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-configurations-3D","(config)","<p>Contains the database configuration - as is typically stored in config/database.yml - as an ActiveRecord::DatabaseConfigurations …\n",null,0],["configure","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-c-configure","(service_name, configurations)","<p>Configure an Active Storage service by name from a set of configurations, typically loaded from a YAML …\n",null,0],["configure","ActiveSupport::Configurable::ClassMethods","rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-configure","()","",null,0],["configure","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-configure","(&block)","<p>Allows you to configure the railtie. This is the same method seen in Railtie::Configurable, but this …\n",null,0],["configure","Rails::Railtie::Configurable::ClassMethods","rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-configure","(&block)","",null,0],["configure","Bundler","ruby/classes/Bundler.html#method-c-configure","()","",null,1],["configure","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-configure","(p1)","<p>Configure this State instance with the Hash <em>opts</em>, and return itself.\n",null,1],["configure_connection_for_https","Gem::Request","ruby/classes/Gem/Request.html#method-c-configure_connection_for_https","(connection, cert_files)","",null,1],["configure_gem_home_and_path","Bundler","ruby/classes/Bundler.html#method-c-configure_gem_home_and_path","(path = bundle_path)","",null,1],["configure_io","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-configure_io","()","",null,1],["configure_rdoc_files","Rails::API::Task","rails/classes/Rails/API/Task.html#method-i-configure_rdoc_files","()","",null,0],["configure_sdoc","Rails::API::RepoTask","rails/classes/Rails/API/RepoTask.html#method-i-configure_sdoc","()","",null,0],["configure_sdoc","Rails::API::Task","rails/classes/Rails/API/Task.html#method-i-configure_sdoc","()","",null,0],["configured_bundle_path","Bundler","ruby/classes/Bundler.html#method-c-configured_bundle_path","()","",null,1],["confirm.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/features/confirm_coffee.html","","<p>#= require_tree ../utils\n<p>{ fire, stopEverything } = Rails\n<p>Rails.handleConfirm = (e) -&gt;\n",null,0],["confirm_multiline_termination","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-confirm_multiline_termination","()","",null,1],["conflicting_dependencies","Gem::DependencyResolutionError","ruby/classes/Gem/DependencyResolutionError.html#method-i-conflicting_dependencies","()","",null,1],["conflicting_dependencies","Gem::Resolver::Conflict","ruby/classes/Gem/Resolver/Conflict.html#method-i-conflicting_dependencies","()","<p>Return the 2 dependency objects that conflicted\n",null,1],["conflicts","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-conflicts","()","<p>Return any possible conflicts against the currently loaded specs.\n",null,1],["confstr","Etc","ruby/classes/Etc.html#method-c-confstr","(p1)","<p>Returns system configuration variable using confstr().\n<p><em>name</em> should be a constant under <code>Etc</code> which begins …\n",null,1],["conj","Complex","ruby/classes/Complex.html#method-i-conj","()","<p>Returns the conjugate of <code>self</code>, <code>Complex.rect(self.imag, self.real)</code>:\n\n<pre><code>Complex.rect(1, 2).conj # =&gt; (1-2i)\n</code></pre>\n",null,1],["conj","Numeric","ruby/classes/Numeric.html#method-i-conj","()","",null,1],["conjugate","Complex","ruby/classes/Complex.html#method-i-conjugate","()","<p>Returns the conjugate of <code>self</code>, <code>Complex.rect(self.imag, self.real)</code>:\n\n<pre><code>Complex.rect(1, 2).conj # =&gt; (1-2i)\n</code></pre>\n",null,1],["conjugate","Numeric","ruby/classes/Numeric.html#method-i-conjugate","()","<p>Returns <code>self</code>.\n",null,1],["connect","Addrinfo","ruby/classes/Addrinfo.html#method-i-connect","(timeout: nil, &block)","<p>creates a socket connected to the address of self.\n<p>The optional argument <em>opts</em> is options represented by …\n",null,1],["connect","DRb::DRbSSLSocket::SSLConfig","ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-connect","(tcp)","<p>Connect to IO <code>tcp</code>, with context of the current certificate configuration\n",null,1],["connect","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-connect","()","<p>Initiates an SSL/TLS handshake with a server.\n",null,1],["connect","Socket","ruby/classes/Socket.html#method-i-connect","(p1)","<p>Requests a connection to be made on the given <code>remote_sockaddr</code>. Returns 0 if successful, otherwise an …\n",null,1],["connect","UDPSocket","ruby/classes/UDPSocket.html#method-i-connect","(p1, p2)","<p>Connects <em>udpsocket</em> to <em>host</em>:<em>port</em>.\n<p>This makes possible to send without destination address.\n\n<pre><code>u1 = UDPSocket.new ...\n</code></pre>\n",null,1],["connect","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-connect","(p1, *args)","<p>Returns running OLE Automation object or WIN32OLE object from moniker. 1st argument should be OLE program …\n",null,1],["connect_address","BasicSocket","ruby/classes/BasicSocket.html#method-i-connect_address","()","<p>Returns an address of the socket suitable for connect in the local machine.\n<p>This method returns <em>self</em>.local_address, …\n",null,1],["connect_from","Addrinfo","ruby/classes/Addrinfo.html#method-i-connect_from","(*args, timeout: nil, &block)","<p>creates a socket connected to the address of self.\n<p>If one or more arguments given as <em>local_addr_args</em>, …\n",null,1],["connect_internal","Addrinfo","ruby/classes/Addrinfo.html#method-i-connect_internal","(local_addrinfo, timeout=nil)","<p>creates a new Socket connected to the address of <code>local_addrinfo</code>.\n<p>If <em>local_addrinfo</em> is nil, the address …\n",null,1],["connect_nonblock","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-connect_nonblock","(p1 = {})","<p>Initiates the SSL/TLS handshake as a client in non-blocking manner.\n\n<pre><code># emulates blocking connect\nbegin ...\n</code></pre>\n",null,1],["connect_nonblock","Socket","ruby/classes/Socket.html#method-i-connect_nonblock","(addr, exception: true)","<p>Requests a connection to be made on the given <code>remote_sockaddr</code> after O_NONBLOCK is set for the underlying …\n",null,1],["connect_to","Addrinfo","ruby/classes/Addrinfo.html#method-i-connect_to","(*args, timeout: nil, &block)","<p>creates a socket connected to <em>remote_addr_args</em> and bound to self.\n<p>The optional last argument <em>opts</em> is options …\n",null,1],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connected-3F","(spec_name, role: ActiveRecord::Base.current_role, shard: ActiveRecord::Base.current_shard)","<p>Returns true if a connection that’s accessible to this class has already been opened.\n",null,0],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connected-3F","()","<p>Returns true if a connection has already been opened.\n",null,0],["connected?","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connected-3F","()","<p>Returns <code>true</code> if Active Record is connected.\n",null,0],["connected_to","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connected_to","(role: nil, shard: nil, prevent_writes: false, &blk)","<p>Connects to a role (e.g. writing, reading, or a custom role) and/or shard for the duration of the block. …\n",null,0],["connected_to?","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connected_to-3F","(role:, shard: ActiveRecord::Base.default_shard)","<p>Returns true if role is the current connected role.\n\n<pre><code>ActiveRecord::Base.connected_to(role: :writing) do ...\n</code></pre>\n",null,0],["connected_to_many","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connected_to_many","(*classes, role:, shard: nil, prevent_writes: false)","<p>Connects a role and/or shard to the provided connection names. Optionally <code>prevent_writes</code> can be passed …\n",null,0],["connecting_to","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connecting_to","(role: default_role, shard: default_shard, prevent_writes: false)","<p>Use a specified connection.\n<p>This method is useful for ensuring that a specific connection is being used. …\n",null,0],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connection","()","<p>Retrieve the connection associated with the current thread, or call #checkout to obtain one if necessary. …\n",null,0],["connection","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection","()","<p>Returns the connection currently associated with the class. This can also be used to “borrow” …\n",null,0],["connection","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-connection","()","",null,0],["connection.js","","rails/files/rails/actioncable/app/javascript/action_cable/connection_js.html","","<p>import adapters from “./adapters” import ConnectionMonitor from “./connection_monitor” …\n",null,0],["connection.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/channels/application_cable/connection_rb_tt.html","","<p>module ApplicationCable\n\n<pre><code>class Connection &lt; ActionCable::Connection::Base\nend\n</code></pre>\n<p>end\n",null,0],["connection_close?","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-connection_close-3F","()","<p>Returns whether the HTTP session is to be closed.\n",null,1],["connection_db_config","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection_db_config","()","<p>Returns the db_config object from the associated connection:\n\n<pre><code>ActiveRecord::Base.connection_db_config\n ...\n</code></pre>\n",null,0],["connection_for","Gem::Request","ruby/classes/Gem/Request.html#method-i-connection_for","(uri)","<p>Creates or an HTTP connection based on <code>uri</code>, or retrieves an existing connection, using a proxy if needed. …\n",null,1],["connection_handler","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-connection_handler","()","",null,0],["connection_handler","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-connection_handler","()","",null,0],["connection_handler=","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-connection_handler-3D","(handler)","",null,0],["connection_handlers","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-connection_handlers","()","",null,0],["connection_handlers=","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-connection_handlers-3D","(handlers)","",null,0],["connection_identifier","ActionCable::Connection::Identification","rails/classes/ActionCable/Connection/Identification.html#method-i-connection_identifier","()","<p>Return a single connection identifier that combines the value of all the registered identifiers into …\n",null,0],["connection_identifiers","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-connection_identifiers","()","<p>All of the identifiers applied to the connection class associated with this server.\n",null,0],["connection_keep_alive?","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-connection_keep_alive-3F","()","<p>Returns whether the HTTP session is to be kept alive.\n",null,1],["connection_monitor.js","","rails/files/rails/actioncable/app/javascript/action_cable/connection_monitor_js.html","","<p>import logger from “./logger”\n<p>// Responsible for ensuring the cable connection is in good health …\n",null,0],["connection_pool","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection_pool","()","",null,0],["connection_pool_list","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connection_pool_list","(role = ActiveRecord::Base.current_role)","",null,0],["connection_pools","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connection_pools","(role = ActiveRecord::Base.current_role)","",null,0],["connection_specification_name","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connection_specification_name","()","<p>Return the connection specification name from the current class or its parent.\n",null,0],["connections","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connections","()","<p>Returns an array containing the connections currently in the pool. Access to the array does not require …\n",null,0],["connects_to","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-connects_to","(database: {}, shards: {})","<p>Connects a model to the databases specified. The <code>database</code> keyword takes a hash consisting of a <code>role</code> and …\n",null,0],["consider_local?","Gem::DependencyInstaller","ruby/classes/Gem/DependencyInstaller.html#method-i-consider_local-3F","()","<p>Indicated, based on the requested domain, if local gems should be considered.\n",null,1],["consider_remote?","Gem::DependencyInstaller","ruby/classes/Gem/DependencyInstaller.html#method-i-consider_remote-3F","()","<p>Indicated, based on the requested domain, if remote gems should be considered.\n",null,1],["console","Rails::Application","rails/classes/Rails/Application.html#method-i-console","(&blk)","<p>Sends any console called in the instance of a new application up to the <code>console</code> method defined in Rails::Railtie …\n",null,0],["console","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-console","(&blk)","",null,0],["console","IO","ruby/classes/IO.html#method-c-console","(*args)","<p>Returns an File instance opened console.\n<p>If <code>sym</code> is given, it will be sent to the opened console with  …\n",null,1],["console_mode","IO","ruby/classes/IO.html#method-i-console_mode","()","<p>Returns a data represents the current console mode.\n<p>You must require ‘io/console’ to use this …\n",null,1],["console_mode=","IO","ruby/classes/IO.html#method-i-console_mode-3D","(p1)","<p>Sets the console mode to <code>mode</code>.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["const_defined?","Module","ruby/classes/Module.html#method-i-const_defined-3F","(*args)","<p>Says whether <em>mod</em> or its ancestors have a constant with the given name:\n\n<pre><code>Float.const_defined?(:EPSILON) ...\n</code></pre>\n",null,1],["const_get","Module","ruby/classes/Module.html#method-i-const_get","(*args)","<p>Checks for a constant with the given name in <em>mod</em>. If <code>inherit</code> is set, the lookup will also search the …\n",null,1],["const_load","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-const_load","(p1, p2 = v2)","<p>Defines the constants of OLE Automation server as mod’s constants. The first argument is WIN32OLE …\n",null,1],["const_missing","ActiveSupport::Deprecation::DeprecatedConstantAccessor","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantAccessor.html#method-i-const_missing","(missing_const_name)","",null,0],["const_missing","Module","ruby/classes/Module.html#method-i-const_missing","(p1)","<p>Invoked when a reference is made to an undefined constant in <em>mod</em>. It is passed a symbol for the undefined …\n",null,1],["const_set","Module","ruby/classes/Module.html#method-i-const_set","(p1, p2)","<p>Sets the named constant to the given object, returning that object. Creates a new constant if no constant …\n",null,1],["const_source_location","Module","ruby/classes/Module.html#method-i-const_source_location","(*args)","<p>Returns the Ruby source filename and line number containing the definition of the constant specified. …\n",null,1],["constantize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string.\n\n<pre><code>constantize(&#39;Module&#39;)   # =&gt; ...\n</code></pre>\n",null,0],["constantize","String","rails/classes/String.html#method-i-constantize","()","<p><code>constantize</code> tries to find a declared constant with the name specified in the string. It raises a NameError …\n",null,0],["constants","Module","ruby/classes/Module.html#method-i-constants","(*args)","<p>Returns an array of the names of the constants accessible in <em>mod</em>. This includes the names of constants …\n",null,1],["constants","Module","ruby/classes/Module.html#method-c-constants","(*args)","<p>In the first form, returns an array of the names of all constants accessible from the point of call. …\n",null,1],["constraints","ActionDispatch::Routing::Mapper::Scoping","rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-constraints","(constraints = {}, &block)","<p>Parameter Restriction\n<p>Allows you to constrain the nested routes based on a set of rules. For instance, …\n",null,0],["consumer.js","","rails/files/rails/actioncable/app/javascript/action_cable/consumer_js.html","","<p>import Connection from “./connection” import Subscriptions from “./subscriptions” …\n",null,0],["consumer.js.tt","","rails/files/rails/actioncable/lib/rails/generators/channel/templates/javascript/consumer_js_tt.html","","<p>// Action Cable provides the framework to deal with WebSockets in Rails. // You can generate new channels …\n",null,0],["contains_requirable_file?","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-contains_requirable_file-3F","(file)","<p>Return true if this spec can require <code>file</code>.\n",null,1],["content_columns","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-content_columns","()","<p>Returns an array of column objects where the primary id, all columns ending in “_id” or “_count”, …\n",null,0],["content_encoding","OpenURI::Meta","ruby/classes/OpenURI/Meta.html#method-i-content_encoding","()","<p>Returns a list of encodings in Content-Encoding field as an array of strings.\n<p>The encodings are downcased …\n",null,1],["content_for","ActionView::Helpers::CaptureHelper","rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for","(name, content = nil, options = {}, &block)","<p>Calling <code>content_for</code> stores a block of markup in an identifier for later use. In order to access this …\n",null,0],["content_for?","ActionView::Helpers::CaptureHelper","rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for-3F","(name)","<p><code>content_for?</code> checks whether any content has been captured yet using <code>content_for</code>. Useful to render parts …\n",null,0],["content_length","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-content_length","()","<p>Returns the content length of the request as an integer.\n",null,0],["content_length","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-content_length","()","<p>Returns the value of field <code>&#39;Content-Length&#39;</code> as an integer, or <code>nil</code> if there is no such field; …\n",null,1],["content_length=","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-content_length-3D","(len)","<p>Sets the value of field <code>&#39;Content-Length&#39;</code> to the given numeric; see Content-Length response header …\n",null,1],["content_mime_type","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_mime_type","()","<p>The MIME type of the HTTP request, such as Mime.\n",null,0],["content_range","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-content_range","()","<p>Returns a Range object representing the value of field <code>&#39;Content-Range&#39;</code>, or <code>nil</code> if no such field …\n",null,1],["content_security_policy","ActionController::ContentSecurityPolicy::ClassMethods","rails/classes/ActionController/ContentSecurityPolicy/ClassMethods.html#method-i-content_security_policy","(enabled = true, **options, &block)","<p>Overrides parts of the globally configured <code>Content-Security-Policy</code> header:\n\n<pre><code>class PostsController &lt; ApplicationController ...\n</code></pre>\n",null,0],["content_security_policy","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy","()","",null,0],["content_security_policy","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-content_security_policy","(&block)","<p>Configures the ActionDispatch::ContentSecurityPolicy.\n",null,0],["content_security_policy.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/initializers/content_security_policy_rb_tt.html","","<p># Be sure to restart your server when you modify this file.\n<p># Define an application-wide content security …\n",null,0],["content_security_policy=","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy-3D","(policy)","",null,0],["content_security_policy_nonce","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy_nonce","()","",null,0],["content_security_policy_nonce_directives","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy_nonce_directives","()","",null,0],["content_security_policy_nonce_directives=","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy_nonce_directives-3D","(generator)","",null,0],["content_security_policy_nonce_generator","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy_nonce_generator","()","",null,0],["content_security_policy_nonce_generator=","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy_nonce_generator-3D","(generator)","",null,0],["content_security_policy_report_only","ActionController::ContentSecurityPolicy::ClassMethods","rails/classes/ActionController/ContentSecurityPolicy/ClassMethods.html#method-i-content_security_policy_report_only","(report_only = true, **options)","<p>Overrides the globally configured <code>Content-Security-Policy-Report-Only</code> header:\n\n<pre><code>class PostsController &lt; ...\n</code></pre>\n",null,0],["content_security_policy_report_only","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy_report_only","()","",null,0],["content_security_policy_report_only=","ActionDispatch::ContentSecurityPolicy::Request","rails/classes/ActionDispatch/ContentSecurityPolicy/Request.html#method-i-content_security_policy_report_only-3D","(value)","",null,0],["content_tag","ActionView::Helpers::ActiveModelInstanceTag","rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-content_tag","(type, options, *)","",null,0],["content_tag","ActionView::Helpers::TagHelper","rails/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","<p>Returns an HTML block tag of type <code>name</code> surrounding the <code>content</code>. Add HTML attributes by passing an attributes …\n",null,0],["content_type","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_type","()","",null,0],["content_type","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-content_type","()","<p>Content type of response.\n",null,0],["content_type","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-i-content_type","()","",null,0],["content_type","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-content_type","()","<p>Returns the media type from the value of field <code>&#39;Content-Type&#39;</code>, or <code>nil</code> if no such field exists; …\n",null,1],["content_type","OpenURI::Meta","ruby/classes/OpenURI/Meta.html#method-i-content_type","()","<p>returns “type/subtype” which is MIME Content-Type. It is downcased for canonicalization. Content-Type …\n",null,1],["content_type=","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-content_type-3D","(content_type)","<p>Sets the HTTP response’s content MIME type. For example, in the controller you could write this: …\n",null,0],["content_type=","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-content_type-3D","(value)","",null,0],["content_type=","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-content_type-3D","(type, params = {})","",null,1],["contents","Gem::Package","ruby/classes/Gem/Package.html#method-i-contents","()","<p>A list of file names contained in this gem\n",null,1],["contents","Gem::Package::Old","ruby/classes/Gem/Package/Old.html#method-i-contents","()","<p>A list of file names contained in this gem\n",null,1],["contents=","Reline::LineEditor::Dialog","ruby/classes/Reline/LineEditor/Dialog.html#method-i-contents-3D","(contents)","",null,1],["context","ActiveRecord::Encryption::Contexts","rails/classes/ActiveRecord/Encryption/Contexts.html#method-i-context","()","<p>Returns the current context. By default it will return the current context.\n",null,0],["context","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-context","()","",null,1],["context_class","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-context_class","()","<p>Superclass for the evaluation contexts used by ERB fixtures.\n",null,0],["context_class","Rails::Initializable::Initializer","rails/classes/Rails/Initializable/Initializer.html#method-i-context_class","()","",null,0],["continue_entry_body","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-continue_entry_body","(entry_body, continuation)","<p>Attaches the <code>continuation</code> of the previous line to the <code>entry_body</code>.\n<p>Continued function listings are joined …\n",null,1],["continue_timeout=","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-continue_timeout-3D","(sec)","<p>Sets the continue timeout value, which is the number of seconds to wait for an expected 100 Continue …\n",null,1],["contributing","","ruby/files/ruby/doc/contributing_md.html","","<p>Contributing to Ruby\n<p>This guide outlines ways to get started with contributing to Ruby:\n<p>Reporting issues …\n",null,1],["control_expressions","","ruby/files/ruby/doc/syntax/control_expressions_rdoc.html","","<p>Control Expressions\n<p>Ruby has a variety of ways to control execution.  All the expressions described here …\n",null,1],["controller","ActionDispatch::Routing::Mapper::Scoping","rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-controller","(controller)","<p>Scopes routes to a specific controller\n\n<pre><code>controller &quot;food&quot; do\n  match &quot;bacon&quot;, action: :bacon, via: :get ...\n</code></pre>\n",null,0],["controller","Rails::ConsoleMethods","rails/classes/Rails/ConsoleMethods.html#method-i-controller","()","<p>Gets a new instance of a controller object.\n<p>This method assumes an <code>ApplicationController</code> exists, and that …\n",null,0],["controller.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/scaffold_controller/templates/controller_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= controller_class_name %&gt;Controller &lt; ApplicationController …\n",null,0],["controller.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/controller/templates/controller_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= class_name %&gt;Controller &lt; ApplicationController …\n",null,0],["controller_class","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-controller_class","()","",null,0],["controller_class_for","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-controller_class_for","(name)","",null,0],["controller_name","ActionController::Metal","rails/classes/ActionController/Metal.html#method-i-controller_name","()","<p>Delegates to the class’s ::controller_name.\n",null,0],["controller_name","ActionController::Metal","rails/classes/ActionController/Metal.html#method-c-controller_name","()","<p>Returns the last part of the controller’s name, underscored, without the ending <code>Controller</code>. For instance, …\n",null,0],["controller_path","AbstractController::Base","rails/classes/AbstractController/Base.html#method-c-controller_path","()","<p>Returns the full controller name, underscored, without the ending Controller.\n\n<pre><code>class MyApp::MyPostsController ...\n</code></pre>\n",null,0],["controller_path","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-controller_path","()","<p>Delegates to the class’s ::controller_path.\n",null,0],["controller_path","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-controller_path","()","",null,0],["convert","CSV","ruby/classes/CSV.html#method-i-convert","(name = nil, &converter)","<p>With no block, installs a field converter (a Proc).\n<p>With a block, defines and installs a custom field …\n",null,1],["convert","CSV::FieldsConverter","ruby/classes/CSV/FieldsConverter.html#method-i-convert","(fields, headers, lineno, quoted_fields)","",null,1],["convert","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-convert","(p1)","<p>Convert source_string and return destination_string.\n<p>source_string is assumed as a part of source. i.e. …\n",null,1],["convert","Gem::Ext::CargoBuilder::LinkFlagConverter","ruby/classes/Gem/Ext/CargoBuilder/LinkFlagConverter.html#method-c-convert","(arg)","",null,1],["convert","OptionParser::Completion","ruby/classes/OptionParser/Completion.html#method-i-convert","(opt = nil, val = nil, *)","",null,1],["convert","RDoc::Markup","ruby/classes/RDoc/Markup.html#method-i-convert","(input, formatter)","<p>We take <code>input</code>, parse it if necessary, then invoke the output <code>formatter</code> using a Visitor to render the …\n",null,1],["convert_invalid_byte_sequence","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-convert_invalid_byte_sequence","(str, enc)","",null,1],["convert_to_backward_compatible_key!","Gem::YAMLSerializer","ruby/classes/Gem/YAMLSerializer.html#method-i-convert_to_backward_compatible_key-21","(key)","<p>for settings’ keys\n",null,1],["converted_arrays","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-converted_arrays","()","<p>Attribute that keeps track of converted arrays, if any, to avoid double looping in the common use case …\n",null,0],["converters","CSV","ruby/classes/CSV.html#method-i-converters","()","<p>Returns an Array containing field converters; see Field Converters:\n\n<pre><code>csv = CSV.new(&#39;&#39;)\ncsv.converters # ...\n</code></pre>\n",null,1],["convertible_int","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-convertible_int","(type, headers = nil, opts = nil, &b)","<p>Returns the convertible integer type of the given <code>type</code>.  You may optionally specify additional <code>headers</code> …\n",null,1],["convpath","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-convpath","()","<p>Returns the conversion path of ec.\n<p>The result is an array of conversions.\n\n<pre><code>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...\n</code></pre>\n",null,1],["cooked","IO","ruby/classes/IO.html#method-i-cooked","()","<p>Yields <code>self</code> within cooked mode.\n\n<pre><code>STDIN.cooked(&amp;:gets)\n</code></pre>\n<p>will read and return a line with echo back and line …\n",null,1],["cooked!","IO","ruby/classes/IO.html#method-i-cooked-21","()","<p>Enables cooked mode.\n<p>If the terminal mode needs to be back, use io.cooked { … }.\n<p>You must require ‘io/console’ …\n",null,1],["cookie_jar","ActionDispatch::RequestCookieMethods","rails/classes/ActionDispatch/RequestCookieMethods.html#method-i-cookie_jar","()","",null,0],["cookies","ActionCable::Connection::Base","rails/classes/ActionCable/Connection/Base.html#method-i-cookies","()","<p>The cookies of the request that initiated the WebSocket connection. Useful for performing authorization …\n",null,0],["cookies","ActionController::Cookies","rails/classes/ActionController/Cookies.html#method-i-cookies","()","<p>The cookies for the current request. See ActionDispatch::Cookies for more information.\n",null,0],["cookies","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-cookies","()","<p>Returns the response cookies, converted to a Hash of (name =&gt; value) pairs\n\n<pre><code>assert_equal &#39;AuthorOfNewPage&#39;, ...\n</code></pre>\n",null,0],["copy","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-copy","(destination, sources, options = {})","",null,0],["copy","FileUtils","ruby/classes/FileUtils.html#method-c-copy","(src, dest, preserve: nil, noop: nil, verbose: nil)","",null,1],["copy","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-copy","(*args)","<p>Efficiently copy from a source IO::Buffer into the buffer, at <code>offset</code> using <code>memcpy</code>. For copying String …\n",null,1],["copy","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-copy","(path, initheader = nil)","<p>Sends a COPY request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["copy","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-copy","(p1)","",null,1],["copy","Prism::Location","ruby/classes/Prism/Location.html#method-i-copy","(**options)","<p>Create a new location object with the given options.\n",null,1],["copy_entry","FileUtils","ruby/classes/FileUtils.html#method-c-copy_entry","(src, dest, preserve = false, dereference_root = false, remove_destination = false)","<p>Recursively copies files from <code>src</code> to <code>dest</code>.\n<p>Arguments <code>src</code> and <code>dest</code> should be interpretable as paths.\n<p>If …\n",null,1],["copy_file","FileUtils","ruby/classes/FileUtils.html#method-c-copy_file","(src, dest, preserve = false, dereference = true)","<p>Copies file from <code>src</code> to <code>dest</code>, which should not be directories.\n<p>Arguments <code>src</code> and <code>dest</code> should be interpretable …\n",null,1],["copy_nonce","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-copy_nonce","(p1)","<p>Copies the nonce from <em>request</em> into this response.  Returns 1 on success and 0 on failure.\n",null,1],["copy_stream","FileUtils","ruby/classes/FileUtils.html#method-c-copy_stream","(src, dest)","<p>Copies IO stream <code>src</code> to IO stream <code>dest</code> via IO.copy_stream.\n<p>Related: methods for copying.\n",null,1],["copy_stream","IO","ruby/classes/IO.html#method-c-copy_stream","(p1, p2, p3 = v3, p4 = v4)","<p>Copies from the given <code>src</code> to the given <code>dst</code>, returning the number of bytes copied.\n<p>The given <code>src</code> must be …\n",null,1],["copy_to","Gem::Installer::FakePackage","ruby/classes/Gem/Installer/FakePackage.html#method-i-copy_to","(path)","",null,1],["copy_to","Gem::Package","ruby/classes/Gem/Package.html#method-i-copy_to","(path)","<p>Copies this package to <code>path</code> (if possible)\n",null,1],["core","Reline","ruby/classes/Reline.html#method-c-core","()","",null,1],["core","Reline","ruby/classes/Reline.html#method-c-core","()","",null,1],["coredump?","Process::Status","ruby/classes/Process/Status.html#method-i-coredump-3F","()","<p>Returns <code>true</code> if the process generated a coredump when it terminated, <code>false</code> if not.\n<p>Not available on all …\n",null,1],["correct","DidYouMean::SpellChecker","ruby/classes/DidYouMean/SpellChecker.html#method-i-correct","(input)","",null,1],["correct","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-i-correct","(input)","",null,1],["correct?","Gem::Version","ruby/classes/Gem/Version.html#method-c-correct-3F","(version)","<p>True if the <code>version</code> string matches RubyGems’ requirements.\n",null,1],["correct_error","DidYouMean","ruby/classes/DidYouMean.html#method-c-correct_error","(error_class, spell_checker)","<p>Adds <code>DidYouMean</code> functionality to an error using a given spell checker\n",null,1],["correct_for_windows_path","Gem::Util","ruby/classes/Gem/Util.html#method-c-correct_for_windows_path","(path)","<p>Corrects <code>path</code> (usually returned by ‘Gem::URI.parse().path` on Windows), that comes with a leading slash. …\n",null,1],["corrections","DidYouMean::ClassNameChecker","ruby/classes/DidYouMean/ClassNameChecker.html#method-i-corrections","()","",null,1],["corrections","DidYouMean::Correctable","ruby/classes/DidYouMean/Correctable.html#method-i-corrections","()","",null,1],["corrections","DidYouMean::KeyErrorChecker","ruby/classes/DidYouMean/KeyErrorChecker.html#method-i-corrections","()","",null,1],["corrections","DidYouMean::MethodNameChecker","ruby/classes/DidYouMean/MethodNameChecker.html#method-i-corrections","()","",null,1],["corrections","DidYouMean::NullChecker","ruby/classes/DidYouMean/NullChecker.html#method-i-corrections","()","",null,1],["corrections","DidYouMean::PatternKeyNameChecker","ruby/classes/DidYouMean/PatternKeyNameChecker.html#method-i-corrections","()","",null,1],["corrections","DidYouMean::RequirePathChecker","ruby/classes/DidYouMean/RequirePathChecker.html#method-i-corrections","()","",null,1],["corrections","DidYouMean::VariableNameChecker","ruby/classes/DidYouMean/VariableNameChecker.html#method-i-corrections","()","",null,1],["corrections","Gem::UnknownCommandSpellChecker","ruby/classes/Gem/UnknownCommandSpellChecker.html#method-i-corrections","()","",null,1],["cors.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/initializers/cors_rb_tt.html","","<p># Be sure to restart your server when you modify this file.\n<p># Avoid CORS issues when API is called from …\n",null,0],["cos","BigMath","ruby/classes/BigMath.html#method-i-cos","(x, prec)","<p>Computes the cosine of <code>decimal</code> to the specified number of digits of precision, <code>numeric</code>.\n<p>If <code>decimal</code> is …\n",null,1],["cos","Math","ruby/classes/Math.html#method-c-cos","(p1)","<p>Returns the cosine of <code>x</code> in radians.\n<p>Domain: <code>(-INFINITY, INFINITY)</code>.\n<p>Range: <code>[-1.0, 1.0]</code>.\n",null,1],["cosh","Math","ruby/classes/Math.html#method-c-cosh","(p1)","<p>Returns the hyperbolic cosine of <code>x</code> in radians.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[1, INFINITY]</code>.\n",null,1],["count","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-count","","<p>Count all records.\n\n<pre><code>class Person &lt; ActiveRecord::Base\n  has_many :pets\nend\n\n# This will perform the count ...\n</code></pre>\n",null,0],["count","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-count","(column_name = nil)","<p>Count the records.\n\n<pre><code>Person.count\n# =&gt; the total count of all people\n\nPerson.count(:age)\n# =&gt; returns the ...\n</code></pre>\n",null,0],["count","Array","ruby/classes/Array.html#method-i-count","(*args)","<p>Returns a count of specified elements.\n<p>With no argument and no block, returns the count of all elements: …\n",null,1],["count","Enumerable","ruby/classes/Enumerable.html#method-i-count","(p1)","<p>Returns the count of elements, based on an argument or block criterion, if given.\n<p>With no argument and …\n",null,1],["count","GC","ruby/classes/GC.html#method-c-count","()","<p>The number of times GC occurred.\n<p>It returns the number of times GC occurred since the process started. …\n",null,1],["count","Ractor","ruby/classes/Ractor.html#method-c-count","()","<p>Returns the number of Ractors currently running or blocking (waiting).\n\n<pre><code>Ractor.count                   ...\n</code></pre>\n",null,1],["count","Range","ruby/classes/Range.html#method-i-count","(*args)","<p>Returns the count of elements, based on an argument or block criterion, if given.\n<p>With no argument and …\n",null,1],["count","Resolv::DNS::SvcParams","ruby/classes/Resolv/DNS/SvcParams.html#method-i-count","()","<p>Get the number of SvcParams in this list.\n",null,1],["count","String","ruby/classes/String.html#method-i-count","(*args)","<p>Returns the total number of characters in <code>self</code> that are specified by the given <code>selectors</code> (see Multiple …\n",null,1],["count","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-count","()","",null,1],["count_by_sql","ActiveRecord::Querying","rails/classes/ActiveRecord/Querying.html#method-i-count_by_sql","(sql)","<p>Returns the result of an SQL statement that should only include a COUNT(*) in the SELECT part. The use …\n",null,0],["count_end","SyntaxSuggest::LeftRightLexCount","ruby/classes/SyntaxSuggest/LeftRightLexCount.html#method-i-count_end","()","",null,1],["count_for_char","SyntaxSuggest::LeftRightLexCount","ruby/classes/SyntaxSuggest/LeftRightLexCount.html#method-i-count_for_char","(char)","",null,1],["count_imemo_objects","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-count_imemo_objects","(*args)","<p>Counts objects for each <code>T_IMEMO</code> type.\n<p>This method is only for MRI developers interested in performance …\n",null,1],["count_kw","SyntaxSuggest::LeftRightLexCount","ruby/classes/SyntaxSuggest/LeftRightLexCount.html#method-i-count_kw","()","",null,1],["count_lex","SyntaxSuggest::LeftRightLexCount","ruby/classes/SyntaxSuggest/LeftRightLexCount.html#method-i-count_lex","(lex)","<p>Count source code characters\n<p>Example:\n\n<pre><code>left_right = LeftRightLexCount.new\nleft_right.count_lex(LexValue.new(1, ...\n</code></pre>\n",null,1],["count_nodes","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-count_nodes","(*args)","<p>Counts nodes for each node type.\n<p>This method is only for MRI developers interested in performance and …\n",null,1],["count_objects","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-count_objects","(*args)","<p>Counts all objects grouped by type.\n<p>It returns a hash, such as:\n\n<pre><code>{\n  :TOTAL=&gt;10000,\n  :FREE=&gt;3011,\n  :T_OBJECT=&gt;6, ...\n</code></pre>\n",null,1],["count_objects_size","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-count_objects_size","(*args)","<p>Counts objects size (in bytes) for each type.\n<p>Note that this information is incomplete.  You need to deal …\n",null,1],["count_observers","Observable","ruby/classes/Observable.html#method-i-count_observers","()","<p>Return the number of observers associated with this object.\n",null,1],["count_symbols","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-count_symbols","(*args)","<p>Counts symbols for each Symbol type.\n<p>This method is only for MRI developers interested in performance …\n",null,1],["count_tdata_objects","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-count_tdata_objects","(*args)","<p>Counts objects for each <code>T_DATA</code> type.\n<p>This method is only for MRI developers interested in performance …\n",null,1],["country_zones","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-country_zones","(country_code)","<p>A convenience method for returning a collection of TimeZone objects for time zones in the country specified …\n",null,0],["cover?","Range","ruby/classes/Range.html#method-i-cover-3F","(p1)","<p>Returns <code>true</code> if the given argument is within <code>self</code>, <code>false</code> otherwise.\n<p>With non-range argument <code>object</code>, evaluates …\n",null,1],["coverage_level=","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-coverage_level-3D","(level)","<p>Sets coverage report level.  Accepted values are:\n<p>false or nil &mdash; No report\n<p>0 &mdash; Classes, modules, constants, …\n",null,1],["coverage_task_description","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-coverage_task_description","()","<p>Task description for the coverage task or its renamed description\n",null,1],["cp","FileUtils","ruby/classes/FileUtils.html#method-c-cp","(src, dest, preserve: nil, noop: nil, verbose: nil)","<p>Copies files.\n<p>Arguments <code>src</code> (a single path or an array of paths) and <code>dest</code> (a single path) should be interpretable …\n",null,1],["cp_lr","FileUtils","ruby/classes/FileUtils.html#method-c-cp_lr","(src, dest, noop: nil, verbose: nil, dereference_root: true, remove_destination: false)","<p>Creates hard links.\n<p>Arguments <code>src</code> (a single path or an array of paths) and <code>dest</code> (a single path) should …\n",null,1],["cp_r","FileUtils","ruby/classes/FileUtils.html#method-c-cp_r","(src, dest, preserve: nil, noop: nil, verbose: nil, dereference_root: true, remove_destination: nil)","<p>Recursively copies files.\n<p>Arguments <code>src</code> (a single path or an array of paths) and <code>dest</code> (a single path) …\n",null,1],["cpu_time","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-cpu_time","()","<p>Returns the CPU time (in milliseconds) passed since the call to <code>start!</code> and the call to <code>finish!</code>\n",null,0],["crc","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-crc","()","<p>Returns CRC value of the uncompressed data.\n",null,1],["crc32","Zlib","ruby/classes/Zlib.html#method-c-crc32","(*args)","<p>Calculates CRC checksum for <code>string</code>, and returns updated value of <code>crc</code>. If <code>string</code> is omitted, it returns …\n",null,1],["crc32_combine","Zlib","ruby/classes/Zlib.html#method-c-crc32_combine","(p1, p2, p3)","<p>Combine two CRC-32 check values in to one.  <code>crc1</code> is the first CRC-32 value, <code>crc2</code> is the second CRC-32 …\n",null,1],["crc_table","Zlib","ruby/classes/Zlib.html#method-c-crc_table","()","<p>Returns the table for calculating CRC checksum as an array.\n",null,1],["create","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-c-create","(status = 200, header = {}, body = [], default_headers: self.default_headers)","",null,0],["create","ActionMailbox::Ingresses::Mailgun::InboundEmailsController","rails/classes/ActionMailbox/Ingresses/Mailgun/InboundEmailsController.html#method-i-create","()","",null,0],["create","ActionMailbox::Ingresses::Mandrill::InboundEmailsController","rails/classes/ActionMailbox/Ingresses/Mandrill/InboundEmailsController.html#method-i-create","()","",null,0],["create","ActionMailbox::Ingresses::Postmark::InboundEmailsController","rails/classes/ActionMailbox/Ingresses/Postmark/InboundEmailsController.html#method-i-create","()","",null,0],["create","ActionMailbox::Ingresses::Relay::InboundEmailsController","rails/classes/ActionMailbox/Ingresses/Relay/InboundEmailsController.html#method-i-create","()","",null,0],["create","ActionMailbox::Ingresses::Sendgrid::InboundEmailsController","rails/classes/ActionMailbox/Ingresses/Sendgrid/InboundEmailsController.html#method-i-create","()","",null,0],["create","ActionView::Digestor::Node","rails/classes/ActionView/Digestor/Node.html#method-c-create","(name, logical_name, template, partial)","",null,0],["create","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-create","(attributes = {}, &block)","<p>Returns a new object of the collection type that has been instantiated with attributes, linked to this …\n",null,0],["create","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-create","(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])","",null,0],["create","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-create","(attributes = nil, &block)","<p>Creates an object (or multiple objects) and saves it to the database, if validations pass. The resulting …\n",null,0],["create","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-create","(attributes = nil, &block)","<p>Tries to create a new record with the same scoped attributes defined in the relation. Returns the initialized …\n",null,0],["create","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-create","(configuration, *arguments)","",null,0],["create","ActiveStorage::DirectUploadsController","rails/classes/ActiveStorage/DirectUploadsController.html#method-i-create","()","",null,0],["create","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-create","(name)","",null,0],["create","Rails::Application","rails/classes/Rails/Application.html#method-c-create","(initial_variable_values = {}, &block)","",null,0],["create","Rails::Rails::Conductor::ActionMailbox::InboundEmails::SourcesController","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmails/SourcesController.html#method-i-create","()","",null,0],["create","Rails::Rails::Conductor::ActionMailbox::InboundEmailsController","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmailsController.html#method-i-create","()","",null,0],["create","Rails::Rails::Conductor::ActionMailbox::IncineratesController","rails/classes/Rails/Rails/Conductor/ActionMailbox/IncineratesController.html#method-i-create","()","",null,0],["create","Rails::Rails::Conductor::ActionMailbox::ReroutesController","rails/classes/Rails/Rails/Conductor/ActionMailbox/ReroutesController.html#method-i-create","()","",null,0],["create","Fiddle::CStructBuilder","ruby/classes/Fiddle/CStructBuilder.html#method-c-create","(klass, types, members)","<p>Construct a new class given a C:\n<p>class <code>klass</code> (CUnion, CStruct, or other that provide an #entity_class …\n",null,1],["create","Fiddle::Closure","ruby/classes/Fiddle/Closure.html#method-c-create","(*args)","<p>Create a new closure. If a block is given, the created closure is automatically freed after the given …\n",null,1],["create","Gem::NoAliasYAMLTree","ruby/classes/Gem/NoAliasYAMLTree.html#method-c-create","()","",null,1],["create","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-c-create","(*inputs)","<p>Factory method to create a Gem::Requirement object.  Input may be a Version, a String, or nil.  Intended …\n",null,1],["create","Gem::Version","ruby/classes/Gem/Version.html#method-c-create","(input)","<p>Factory method to create a Version object. Input may be a Version or a String. Intended to simplify client …\n",null,1],["create","OpenSSL::OCSP::Response","ruby/classes/OpenSSL/OCSP/Response.html#method-c-create","(p1, p2)","<p>Creates an OpenSSL::OCSP::Response from <em>status</em> and <em>basic_response</em>.\n",null,1],["create","OpenSSL::PKCS12","ruby/classes/OpenSSL/PKCS12.html#method-c-create","(p1, p2, p3, p4, p5 = v5, p6 = v6, p7 = v7, p8 = v8, p9 = v9, p10 = v10)","<p>Parameters\n<p><em>pass</em> - string\n<p><em>name</em> - A string describing the key.\n",null,1],["create","Psych::Visitors::JSONTree","ruby/classes/Psych/Visitors/JSONTree.html#method-c-create","(options = {})","",null,1],["create","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-c-create","(symbolize_names: false, freeze: false, strict_integer: false)","",null,1],["create","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-c-create","(options = {})","",null,1],["create","Resolv::DNS::Name","ruby/classes/Resolv/DNS/Name.html#method-c-create","(arg)","<p>Creates a new DNS name from <code>arg</code>.  <code>arg</code> can be:\n<p>Name &mdash; returns <code>arg</code>.\n<p>String &mdash; Creates a new Name.\n",null,1],["create","Resolv::DNS::SvcParam::Generic","ruby/classes/Resolv/DNS/SvcParam/Generic.html#method-c-create","(key_number)","",null,1],["create","Resolv::IPv4","ruby/classes/Resolv/IPv4.html#method-c-create","(arg)","",null,1],["create","Resolv::IPv6","ruby/classes/Resolv/IPv6.html#method-c-create","(arg)","<p>Creates a new IPv6 address from <code>arg</code> which may be:\n<p>IPv6 &mdash; returns <code>arg</code>.\n<p>String &mdash; <code>arg</code> must match one of the IPv6::Regex …\n",null,1],["create","Resolv::LOC::Alt","ruby/classes/Resolv/LOC/Alt.html#method-c-create","(arg)","<p>Creates a new LOC::Alt from <code>arg</code> which may be:\n<p>LOC::Alt &mdash; returns <code>arg</code>.\n<p>String &mdash; <code>arg</code> must match the LOC::Alt::Regex …\n",null,1],["create","Resolv::LOC::Coord","ruby/classes/Resolv/LOC/Coord.html#method-c-create","(arg)","<p>Creates a new LOC::Coord from <code>arg</code> which may be:\n<p>LOC::Coord &mdash; returns <code>arg</code>.\n<p>String &mdash; <code>arg</code> must match the LOC::Coord::Regex …\n",null,1],["create","Resolv::LOC::Size","ruby/classes/Resolv/LOC/Size.html#method-c-create","(arg)","<p>Creates a new LOC::Size from <code>arg</code> which may be:\n<p>LOC::Size &mdash; returns <code>arg</code>.\n<p>String &mdash; <code>arg</code> must match the LOC::Size::Regex …\n",null,1],["create","Tempfile","ruby/classes/Tempfile.html#method-c-create","(basename=\"\", tmpdir=nil, mode: 0, **options)","<p>Creates a file in the underlying file system; returns a new File object based on that file.\n<p>With no block …\n",null,1],["create","Win32::Registry","ruby/classes/Win32/Registry.html#method-c-create","(hkey, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)","<p>— Registry.create(key, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)\n<p>— Registry.create …\n",null,1],["create","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-create","(subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED, &blk)","<p>Same as Win32::Registry.create (self, subkey, desired, opt)\n",null,1],["create!","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-create-21","(attributes = {}, &block)","<p>Like #create, except that if the record is invalid, raises an exception.\n\n<pre><code>class Person\n  has_many :pets ...\n</code></pre>\n",null,0],["create!","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-create-21","(attributes = nil, &block)","<p>Creates an object (or multiple objects) and saves it to the database, if validations pass. Raises a  …\n",null,0],["create!","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-create-21","(attributes = nil, &block)","<p>Similar to #create, but calls create! on the base class. Raises an exception if a validation error occurs. …\n",null,0],["create_action_mailbox_files","ActionMailbox::Generators::InstallGenerator","rails/classes/ActionMailbox/Generators/InstallGenerator.html#method-i-create_action_mailbox_files","()","",null,0],["create_actiontext_files","ActionText::Generators::InstallGenerator","rails/classes/ActionText/Generators/InstallGenerator.html#method-i-create_actiontext_files","()","",null,0],["create_all","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-create_all","()","",null,0],["create_and_extract_message_id!","ActionMailbox::InboundEmail::MessageId","rails/classes/ActionMailbox/InboundEmail/MessageId.html#method-i-create_and_extract_message_id-21","(source, **options)","<p>Create a new <code>InboundEmail</code> from the raw <code>source</code> of the email, which is uploaded as an Active Storage attachment …\n",null,0],["create_and_upload!","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-c-create_and_upload-21","(key: nil, io:, filename:, content_type: nil, metadata: nil, service_name: nil, identify: true, record: nil)","<p>Creates a new blob instance and then uploads the contents of the given <code>io</code> to the service. The blob instance …\n",null,0],["create_and_upload_raw_email!","ActionMailbox::InboundEmail::MessageId","rails/classes/ActionMailbox/InboundEmail/MessageId.html#method-i-create_and_upload_raw_email-21","(source)","",null,0],["create_before_direct_upload!","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-c-create_before_direct_upload-21","(key: nil, filename:, byte_size:, checksum:, content_type: nil, metadata: nil, service_name: nil, record: nil)","<p>Returns a saved blob <em>without</em> uploading a file to the service. This blob will point to a key where there …\n",null,0],["create_blocks_from_untracked_lines","SyntaxSuggest::CodeSearch","ruby/classes/SyntaxSuggest/CodeSearch.html#method-i-create_blocks_from_untracked_lines","()","<p>Parses the most indented lines into blocks that are marked and added to the frontier\n",null,1],["create_bundle_path","Bundler","ruby/classes/Bundler.html#method-c-create_bundle_path","()","",null,1],["create_cert","Gem::Security","ruby/classes/Gem/Security.html#method-c-create_cert","(subject, key, age = ONE_YEAR, extensions = EXTENSIONS, serial = 1)","<p>Creates an unsigned certificate for <code>subject</code> and <code>key</code>.  The lifetime of the key is from the current time …\n",null,1],["create_cert_email","Gem::Security","ruby/classes/Gem/Security.html#method-c-create_cert_email","(email, key, age = ONE_YEAR, extensions = EXTENSIONS)","<p>Creates a self-signed certificate with an issuer and subject from <code>email</code>, a subject alternative name of …\n",null,1],["create_cert_self_signed","Gem::Security","ruby/classes/Gem/Security.html#method-c-create_cert_self_signed","(subject, key, age = ONE_YEAR, extensions = EXTENSIONS, serial = 1)","<p>Creates a self-signed certificate with an issuer and subject of <code>subject</code> and the given <code>extensions</code> for …\n",null,1],["create_channel_files","Rails::Generators::ChannelGenerator","rails/classes/Rails/Generators/ChannelGenerator.html#method-i-create_channel_files","()","",null,0],["create_current","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-create_current","(environment = env, name = nil)","",null,0],["create_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-create_database","(name, options = {})","<p>Create a new MySQL database with optional <code>:charset</code> and <code>:collation</code>. Charset defaults to utf8mb4.\n<p>Example: …\n",null,0],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-create_database","(name, options = {})","<p>Create a new PostgreSQL database. Options include <code>:owner</code>, <code>:template</code>, <code>:encoding</code> (defaults to utf8), <code>:collation</code> …\n",null,0],["create_digest","Gem::Security","ruby/classes/Gem/Security.html#method-c-create_digest","(algorithm = DIGEST_NAME)","<p>Creates a new digest instance using the specified <code>algorithm</code>. The default is SHA256.\n",null,1],["create_document","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-create_document","(groups)","<p>Creates an RDoc::Markup::Document given the <code>groups</code> of ChangeLog entries.\n",null,1],["create_element","ActionText::HtmlConversion","rails/classes/ActionText/HtmlConversion.html#method-i-create_element","(tag_name, attributes = {})","",null,0],["create_entries","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-create_entries","(entries)","<p>Returns a list of ChangeLog entries an RDoc::Markup nodes for the given <code>entries</code>.\n",null,1],["create_entries","RDoc::Parser::ChangeLog::Git","ruby/classes/RDoc/Parser/ChangeLog/Git.html#method-i-create_entries","(entries)","<p>Returns a list of ChangeLog entries as RDoc::Parser::ChangeLog::Git::LogEntry list for the given <code>entries</code> …\n",null,1],["create_enum","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-create_enum","(name, values)","<p>Given a name and an array of values, creates an enum type.\n",null,0],["create_ext","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext","(p1, p2, p3 = v3)","<p>Creates a new X509::Extension with passed values. See also x509v3_config(5).\n",null,1],["create_ext_from_array","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_array","(ary)","",null,1],["create_ext_from_hash","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_hash","(hash)","",null,1],["create_ext_from_string","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_ext_from_string","(str)","",null,1],["create_extension","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-create_extension","(*arg)","",null,1],["create_fast_state","JSON","ruby/classes/JSON.html#method-c-create_fast_state","()","",null,1],["create_fixtures","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-create_fixtures","(fixtures_directory, fixture_set_names, class_names = {}, config = ActiveRecord::Base, &block)","",null,0],["create_guid","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-create_guid","()","<p>Creates GUID.\n\n<pre><code>WIN32OLE.create_guid # =&gt; {1CB530F1-F6B1-404D-BCE6-1959BF91F4A8}\n</code></pre>\n",null,1],["create_header","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-create_header","(header = \"extconf.h\")","<p>Generates a header file consisting of the various macro definitions generated by other methods such as …\n",null,1],["create_id","JSON","ruby/classes/JSON.html#method-c-create_id","()","<p>Returns the current create identifier. See also JSON.create_id=.\n",null,1],["create_id=","JSON","ruby/classes/JSON.html#method-c-create_id-3D","(new_value)","<p>Sets create identifier, which is used to decide if the <em>json_create</em> hook of a class should be called; …\n",null,1],["create_items","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-create_items","(items)","<p>Returns an RDoc::Markup::List containing the given <code>items</code> in the ChangeLog\n",null,1],["create_join_table","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_join_table","(table_1, table_2, column_options: {}, **options)","<p>Creates a new join table with the name created using the lexical order of the first two arguments. These …\n",null,0],["create_key","Gem::Security","ruby/classes/Gem/Security.html#method-c-create_key","(algorithm)","<p>Creates a new key pair of the specified <code>algorithm</code>. RSA, DSA, and EC are supported.\n",null,1],["create_mailbox_file","Rails::Generators::MailboxGenerator","rails/classes/Rails/Generators/MailboxGenerator.html#method-i-create_mailbox_file","()","",null,0],["create_mailer_file","Rails::Generators::MailerGenerator","rails/classes/Rails/Generators/MailerGenerator.html#method-i-create_mailer_file","()","",null,0],["create_makefile","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-create_makefile","(target, srcprefix = nil)","<p>Generates the Makefile for your extension, passing along any options and preprocessor constants that …\n",null,1],["create_migration","Rails::Generators::Migration","rails/classes/Rails/Generators/Migration.html#method-i-create_migration","(destination, data, config = {}, &block)","",null,0],["create_migrations","ActionMailbox::Generators::InstallGenerator","rails/classes/ActionMailbox/Generators/InstallGenerator.html#method-i-create_migrations","()","",null,0],["create_migrations","ActionText::Generators::InstallGenerator","rails/classes/ActionText/Generators/InstallGenerator.html#method-i-create_migrations","()","",null,0],["create_or_find_by","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-create_or_find_by","(attributes, &block)","<p>Attempts to create a record with the given attributes in a table that has a unique database constraint …\n",null,0],["create_or_find_by!","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-create_or_find_by-21","(attributes, &block)","<p>Like #create_or_find_by, but calls create! so an exception is raised if the created record is invalid. …\n",null,0],["create_pretty_state","JSON","ruby/classes/JSON.html#method-c-create_pretty_state","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::Savepoints","rails/classes/ActiveRecord/ConnectionAdapters/Savepoints.html#method-i-create_savepoint","(name = current_savepoint_name)","",null,0],["create_schema","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-create_schema","(schema_name)","<p>Creates a schema for the given schema name.\n",null,0],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table","(table_name, id: :primary_key, primary_key: nil, force: nil, **options)","<p>Creates a new table with the name <code>table_name</code>. <code>table_name</code> may either be a String or a Symbol.\n<p>There are …\n",null,0],["create_table_migration.rb.tt","","rails/files/rails/activerecord/lib/rails/generators/active_record/migration/templates/create_table_migration_rb_tt.html","","<p>class &lt;%= migration_class_name %&gt; &lt; ActiveRecord::Migration[&lt;%= ActiveRecord::Migration.current_version …\n",null,0],["create_timestamp","OpenSSL::Timestamp::Factory","ruby/classes/OpenSSL/Timestamp/Factory.html#method-i-create_timestamp","(p1, p2, p3)","<p>Creates a Response with the help of an OpenSSL::PKey, an OpenSSL::X509::Certificate and a Request.\n<p>Mandatory …\n",null,1],["create_unlogged_tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-create_unlogged_tables","","<p>PostgreSQL allows the creation of “unlogged” tables, which do not record data in the PostgreSQL …\n",null,0],["create_value","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-create_value","(ty, val=nil)","<p>Creates a class to wrap the C struct with the value <code>ty</code>\n<p>See also Fiddle::Importer.struct\n",null,1],["create_with","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-create_with","(value)","<p>Sets attributes to be used when creating new records from a relation object.\n\n<pre><code>users = User.where(name: ...\n</code></pre>\n",null,0],["created?","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-created-3F","()","<p>Returns if key is created ((<strong>newly</strong>)). (see Registry.create) – basically you call create then when you …\n",null,1],["creates_option","","ruby/files/ruby/doc/optparse/creates_option_rdoc.html","","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["credentials","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-credentials","()","",null,0],["credentials","Rails::Application","rails/classes/Rails/Application.html#method-i-credentials","()","<p>Returns an ActiveSupport::EncryptedConfiguration instance for the credentials file specified by <code>config.credentials.content_path</code> …\n",null,0],["credentials_path","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-credentials_path","()","<p>Location of RubyGems.org credentials\n",null,1],["critical=","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-critical-3D","(p1)","",null,1],["critical?","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-critical-3F","()","",null,1],["crl=","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-crl-3D","(p1)","",null,1],["crl_uris","OpenSSL::X509::Extension::CRLDistributionPoints","ruby/classes/OpenSSL/X509/Extension/CRLDistributionPoints.html#method-i-crl_uris","()","<p>Get the distributionPoint fullName URI from the certificate’s CRL distribution points extension, …\n",null,1],["crls","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-crls","()","",null,1],["crls=","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-crls-3D","(p1)","",null,1],["cross","IRB::Vec","ruby/classes/IRB/Vec.html#method-i-cross","(other)","",null,1],["cruby_locals","Prism::Debug","ruby/classes/Prism/Debug.html#method-c-cruby_locals","(source)","<p>For the given source, compiles with CRuby and returns a list of all of the sets of local variables that …\n",null,1],["crypt","String","ruby/classes/String.html#method-i-crypt","(p1)","<p>Returns the string generated by calling <code>crypt(3)</code> standard library function with <code>str</code> and <code>salt_str</code>, in …\n",null,1],["csp.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/utils/csp_coffee.html","","<p>nonce = null\n<p>Rails.loadCSPNonce = -&gt;\n\n<pre><code>nonce = document.querySelector(&quot;meta[name=csp-nonce]&quot;)?.content\n</code></pre>\n",null,0],["csp_meta_tag","ActionView::Helpers::CspHelper","rails/classes/ActionView/Helpers/CspHelper.html#method-i-csp_meta_tag","(**options)","<p>Returns a meta tag “csp-nonce” with the per-session nonce value for allowing inline &lt;script&gt; …\n",null,0],["csrf.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/utils/csrf_coffee.html","","<p>#= require ./dom\n<p>{ $ } = Rails\n<p># Up-to-date Cross-Site Request Forgery token csrfToken = Rails.csrfToken …\n",null,0],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","rails/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tag","()","<p>For backwards compatibility.\n",null,0],["csrf_meta_tags","ActionView::Helpers::CsrfHelper","rails/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tags","()","<p>Returns meta tags “csrf-param” and “csrf-token” with the name of the cross-site request …\n",null,0],["csrf_token_hmac","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-csrf_token_hmac","(session, identifier)","",null,0],["css","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-css","","<p>Allow style blocks\n",null,1],["ctime","Date","ruby/classes/Date.html#method-i-ctime","()","<p>Equivalent to #strftime with argument <code>&#39;%a %b %e %T %Y&#39;</code> (or its shorthand form <code>&#39;%c&#39;</code>): …\n",null,1],["ctime","File","ruby/classes/File.html#method-c-ctime","(p1)","<p>Returns the change time for the named file (the time at which directory information about the file was …\n",null,1],["ctime","File","ruby/classes/File.html#method-i-ctime","()","<p>Returns the change time for <em>file</em> (that is, the time directory information about the file was changed, …\n",null,1],["ctime","File::Stat","ruby/classes/File/Stat.html#method-i-ctime","()","<p>Returns the change time for <em>stat</em> (that is, the time directory information about the file was changed, …\n",null,1],["ctime","Pathname","ruby/classes/Pathname.html#method-i-ctime","()","<p>Returns the last change time, using directory information, not the file itself.\n<p>See File.ctime.\n",null,1],["ctime","Time","ruby/classes/Time.html#method-i-ctime","()","<p>Returns a string representation of <code>self</code>, formatted by <code>strftime(&#39;%a %b %e %T %Y&#39;)</code> or its shorthand …\n",null,1],["ctrl_cmd","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-ctrl_cmd","(p1, p2 = v2)","<p>Sends the given <em>command</em> to this engine.\n<p>Raises an EngineError if the command fails.\n",null,1],["ctype","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-ctype","()","<p>Returns the current database ctype.\n",null,0],["current","Date","rails/classes/Date.html#method-c-current","()","<p>Returns Time.zone.today when <code>Time.zone</code> or <code>config.time_zone</code> are set, otherwise just returns Date.today …\n",null,0],["current","DateTime","rails/classes/DateTime.html#method-c-current","()","<p>Returns <code>Time.zone.now.to_datetime</code> when <code>Time.zone</code> or <code>config.time_zone</code> are set, otherwise returns <code>Time.now.to_datetime</code> …\n",null,0],["current","Time","rails/classes/Time.html#method-c-current","()","<p>Returns <code>Time.zone.now</code> when <code>Time.zone</code> or <code>config.time_zone</code> are set, otherwise just returns <code>Time.now</code>.\n",null,0],["current","Fiber","ruby/classes/Fiber.html#method-c-current","()","<p>Returns the current fiber. If you are not running in the context of a fiber this method will return the …\n",null,1],["current","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-c-current","()","<p>Active RDoc::RDoc instance\n",null,1],["current","Ractor","ruby/classes/Ractor.html#method-c-current","()","<p>Returns the currently executing Ractor.\n\n<pre><code>Ractor.current #=&gt; #&lt;Ractor:#1 running&gt;\n</code></pre>\n",null,1],["current","Thread","ruby/classes/Thread.html#method-c-current","()","<p>Returns the currently executing thread.\n\n<pre><code>Thread.current   #=&gt; #&lt;Thread:0x401bdf4c run&gt;\n</code></pre>\n",null,1],["current=","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-c-current-3D","(rdoc)","<p>Sets the active RDoc::RDoc instance\n",null,1],["current_cert","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-current_cert","()","<p>Returns the certificate which caused the error.\n<p>See also the man page X509_STORE_CTX_get_current_cert …\n",null,1],["current_crl","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-current_crl","()","<p>Returns the CRL which caused the error.\n<p>See also the man page X509_STORE_CTX_get_current_crl(3).\n",null,1],["current_custom_context","ActiveRecord::Encryption::Contexts","rails/classes/ActiveRecord/Encryption/Contexts.html#method-i-current_custom_context","()","",null,0],["current_cycle","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-current_cycle","(name = \"default\")","<p>Returns the current cycle string after a cycle has been started. Useful for complex table highlighting …\n",null,0],["current_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-current_database","()","",null,0],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-current_database","()","<p>Returns the current database name.\n",null,0],["current_group","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-current_group","()","<p>Returns the group most recently added to the stack.\n<p>Contrived example:\n\n<pre><code>out = &quot;&quot;\n=&gt; &quot;&quot;\nq = PrettyPrint.new(out) ...\n</code></pre>\n",null,1],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-current_hash","()","",null,0],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-current_hash","()","",null,0],["current_indent","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-current_indent","()","",null,1],["current_page?","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-current_page-3F","(options = nil, check_parameters: false, **options_as_kwargs)","<p>True if the current request URI was generated by the given <code>options</code>.\n<p>Examples\n<p>Let’s say we’re in …\n",null,0],["current_preventing_writes","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-current_preventing_writes","()","<p>Returns the symbol representing the current setting for preventing writes.\n\n<pre><code>ActiveRecord::Base.connected_to(role: ...\n</code></pre>\n",null,0],["current_role","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-current_role","()","<p>Returns the symbol representing the current connected role.\n\n<pre><code>ActiveRecord::Base.connected_to(role: :writing) ...\n</code></pre>\n",null,0],["current_savepoint_name","ActiveRecord::ConnectionAdapters::Savepoints","rails/classes/ActiveRecord/ConnectionAdapters/Savepoints.html#method-i-current_savepoint_name","()","",null,0],["current_scheduler","Fiber","ruby/classes/Fiber.html#method-c-current_scheduler","()","<p>Returns the Fiber scheduler, that was last set for the current thread with Fiber.set_scheduler if and …\n",null,1],["current_schema","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-current_schema","()","<p>Returns the current schema name.\n",null,0],["current_section","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-current_section","()","<p>The current documentation section that new items will be added to.  If temporary_section is available …\n",null,1],["current_server","DRb","ruby/classes/DRb.html#method-c-current_server","()","<p>Get the ‘current’ server.\n<p>In the context of execution taking place within the main thread of a …\n",null,1],["current_shard","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-current_shard","()","<p>Returns the symbol representing the current connected shard.\n\n<pre><code>ActiveRecord::Base.connected_to(role: :reading) ...\n</code></pre>\n",null,0],["current_version","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-c-current_version","()","",null,0],["curry","Method","ruby/classes/Method.html#method-i-curry","(*args)","<p>Returns a curried proc based on the method. When the proc is called with a number of arguments that is …\n",null,1],["curry","Proc","ruby/classes/Proc.html#method-i-curry","(*args)","<p>Returns a curried proc. If the optional <em>arity</em> argument is given, it determines the number of arguments. …\n",null,1],["curses_dl","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-curses_dl","()","",null,1],["curses_dl_files","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-curses_dl_files","()","",null,1],["cursor","IO","ruby/classes/IO.html#method-i-cursor","()","<p>Returns the current cursor position as a two-element array of integers (row, column)\n\n<pre><code>io.cursor # =&gt; [3, ...\n</code></pre>\n",null,1],["cursor=","IO","ruby/classes/IO.html#method-i-cursor-3D","(p1)","",null,1],["cursor_down","IO","ruby/classes/IO.html#method-i-cursor_down","(p1)","",null,1],["cursor_left","IO","ruby/classes/IO.html#method-i-cursor_left","(p1)","",null,1],["cursor_pos","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-cursor_pos","()","",null,1],["cursor_pos","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-cursor_pos","()","",null,1],["cursor_pos","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-cursor_pos","()","",null,1],["cursor_pos","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-cursor_pos","()","",null,1],["cursor_right","IO","ruby/classes/IO.html#method-i-cursor_right","(p1)","",null,1],["cursor_up","IO","ruby/classes/IO.html#method-i-cursor_up","(p1)","",null,1],["curve_name","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-curve_name","()","<p>Returns the curve name (sn).\n<p>See the OpenSSL documentation for EC_GROUP_get_curve_name()\n",null,1],["custom","ActionController::MimeResponds::Collector","rails/classes/ActionController/MimeResponds/Collector.html#method-i-custom","(mime_type, &block)","",null,0],["custom","ActionMailer::Collector","rails/classes/ActionMailer/Collector.html#method-i-custom","(mime, options = {})","",null,0],["custom_metadata","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-custom_metadata","()","",null,0],["custom_metadata=","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-custom_metadata-3D","(metadata)","",null,0],["cwday","Date","ruby/classes/Date.html#method-i-cwday","()","<p>Returns the commercial-date weekday index for <code>self</code> (see Date.commercial); 1 is Monday:\n\n<pre><code>Date.new(2001, ...\n</code></pre>\n",null,1],["cweek","Date","ruby/classes/Date.html#method-i-cweek","()","<p>Returns commercial-date week index for <code>self</code> (see Date.commercial):\n\n<pre><code>Date.new(2001, 2, 3).cweek # =&gt; 5\n</code></pre>\n",null,1],["cwyear","Date","ruby/classes/Date.html#method-i-cwyear","()","<p>Returns commercial-date year for <code>self</code> (see Date.commercial):\n\n<pre><code>Date.new(2001, 2, 3).cwyear # =&gt; 2001\nDate.new(2000, ...\n</code></pre>\n",null,1],["cycle","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-cycle","(first_value, *values)","<p>Creates a Cycle object whose <em>to_s</em> method cycles through elements of an array every time it is called. …\n",null,0],["cycle","Array","ruby/classes/Array.html#method-i-cycle","(*args)","<p>When called with positive Integer argument <code>count</code> and a block, calls the block with each element, then …\n",null,1],["cycle","Enumerable","ruby/classes/Enumerable.html#method-i-cycle","(*args)","<p>When called with positive integer argument <code>n</code> and a block, calls the block with each element, then does …\n",null,1],["daemon","Process","ruby/classes/Process.html#method-c-daemon","(*args)","<p>Detaches the current process from its controlling terminal and runs it in the background as system daemon; …\n",null,1],["dangerous_attribute_method?","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-dangerous_attribute_method-3F","(method_name)","",null,0],["dangerous_class_method?","ActiveRecord::AttributeMethods::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-dangerous_class_method-3F","(method_name)","<p>A class method is ‘dangerous’ if it is already (re)defined by Active Record, but not by any ancestors. …\n",null,0],["dasherize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-dasherize","(underscored_word)","<p>Replaces underscores with dashes in the string.\n\n<pre><code>dasherize(&#39;puni_puni&#39;) # =&gt; &quot;puni-puni&quot;\n</code></pre>\n",null,0],["dasherize","String","rails/classes/String.html#method-i-dasherize","()","<p>Replaces underscores with dashes in the string.\n\n<pre><code>&#39;puni_puni&#39;.dasherize # =&gt; &quot;puni-puni&quot;\n</code></pre>\n<p>See ActiveSupport::Inflector.dasherize …\n",null,0],["data","Resolv::DNS::Resource::TXT","ruby/classes/Resolv/DNS/Resource/TXT.html#method-i-data","()","<p>Returns the concatenated string from <code>strings</code>.\n",null,1],["data","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-data","()","<p>returns the cmsg data as a string.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).data\n#=&gt; &quot;&quot;\n</code></pre>\n",null,1],["data","Socket::Option","ruby/classes/Socket/Option.html#method-i-data","()","<p>returns the socket option data as a string.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).data ...\n</code></pre>\n",null,1],["data=","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-data-3D","(p1)","",null,1],["data_home","Gem","ruby/classes/Gem.html#method-c-data_home","()","<p>The path to standard location of the user’s data directory.\n",null,1],["data_source_exists?","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-data_source_exists-3F","(name)","<p>A cached lookup for table existence.\n",null,0],["data_source_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-data_source_exists-3F","(name)","<p>Checks to see if the data source <code>name</code> exists on the database.\n\n<pre><code>data_source_exists?(:ebooks)\n</code></pre>\n",null,0],["data_sources","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-data_sources","(name)","",null,0],["data_sources","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-data_sources","()","<p>Returns the relation names usable to back Active Record models. For most adapters this means all #tables …\n",null,0],["data_type","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-data_type","()","<p>Guesses the type of the data which have been inputed into the stream. The returned value is either <code>BINARY</code> …\n",null,1],["database","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-database","()","",null,0],["database","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-i-database","()","",null,0],["database_configuration","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-database_configuration","()","<p>Loads and returns the entire raw configuration of database from values stored in <code>config/database.yml</code> …\n",null,0],["database_exists?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-c-database_exists-3F","(config)","<p>Does the database for this adapter exist?\n",null,0],["database_exists?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-c-database_exists-3F","(config)","",null,0],["database_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-database_exists-3F","(config)","",null,0],["database_exists?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-c-database_exists-3F","(config)","",null,0],["database_yml","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-database_yml","()","",null,0],["databases.rake","","rails/files/rails/activerecord/lib/active_record/railties/databases_rake.html","","<p># frozen_string_literal: true\n<p>require “active_record” require “active_support/configuration_file” …\n",null,0],["datadir","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-datadir","()","<p>The path to the data directory for this gem.\n",null,1],["date","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-date","()","",null,0],["date","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-date","()","<p>The date this gem was created.\n<p>If SOURCE_DATE_EPOCH is set as an environment variable, use that to support …\n",null,1],["date=","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-date-3D","(utc_time)","",null,0],["date=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-date-3D","(date)","<p>The date this gem was created\n<p>DO NOT set this, it is set automatically when the gem is packaged.\n",null,1],["date?","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-date-3F","()","",null,0],["date_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-date_field","","<p>Wraps ActionView::Helpers::FormHelper#date_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["date_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-date_field","(object_name, method, options = {})","<p>Returns a text_field of type “date”.\n\n<pre><code>date_field(&quot;user&quot;, &quot;born_on&quot;)\n# =&gt; &lt;input id=&quot;user_born_on&quot; ...\n</code></pre>\n",null,0],["date_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-date_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “date”.\n<p>Options\n<p>Supports the same options as #text_field_tag.\n",null,0],["date_select","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-date_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, and day) pre-selected for accessing a specified date-based …\n",null,0],["date_select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-date_select","(method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::DateHelper#date_select for form builders:\n\n<pre><code>&lt;%= form_for @person do |f| %&gt;\n  ...\n</code></pre>\n",null,0],["daterange","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-daterange","","",null,0],["datetime_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-datetime_field","","<p>Wraps ActionView::Helpers::FormHelper#datetime_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do ...\n</code></pre>\n",null,0],["datetime_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-datetime_field","(object_name, method, options = {})","<p>Returns a text_field of type “datetime-local”.\n\n<pre><code>datetime_field(&quot;user&quot;, &quot;born_on&quot;)\n# =&gt; &lt;input ...\n</code></pre>\n",null,0],["datetime_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-datetime_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “datetime-local”.\n<p>Options\n<p>Supports the same options as #text_field_tag …\n",null,0],["datetime_format","Logger","ruby/classes/Logger.html#method-i-datetime_format","()","<p>Returns the date-time format; see #datetime_format=.\n",null,1],["datetime_format=","Logger","ruby/classes/Logger.html#method-i-datetime_format-3D","(datetime_format)","<p>Sets the date-time format.\n<p>Argument <code>datetime_format</code> should be either of these:\n<p>A string suitable for use …\n",null,1],["datetime_local_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-datetime_local_field","","<p>Wraps ActionView::Helpers::FormHelper#datetime_local_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user ...\n</code></pre>\n",null,0],["datetime_local_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-datetime_local_field","(object_name, method, options = {})","",null,0],["datetime_local_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-datetime_local_field_tag","(name, value = nil, options = {})","",null,0],["datetime_select","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-datetime_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, day, hour, and minute) pre-selected for accessing …\n",null,0],["datetime_select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-datetime_select","(method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::DateHelper#datetime_select for form builders:\n\n<pre><code>&lt;%= form_for @person do |f| %&gt; ...\n</code></pre>\n",null,0],["datetime_type","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-datetime_type","","<p>PostgreSQL supports multiple types for DateTimes. By default, if you use <code>datetime</code> in migrations, Rails …\n",null,0],["day","Numeric","rails/classes/Numeric.html#method-i-day","()","",null,0],["day","Date","ruby/classes/Date.html#method-i-day","()","<p>Returns the day of the month in range (1..31):\n\n<pre><code>Date.new(2001, 2, 3).mday # =&gt; 3\n</code></pre>\n",null,1],["day","Time","ruby/classes/Time.html#method-i-day","()","<p>Returns the integer day of the month for <code>self</code>, in range (1..31):\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, 6) ...\n</code></pre>\n",null,1],["day_fraction","Date","ruby/classes/Date.html#method-i-day_fraction","()","<p>Returns the fractional part of the day in range (Rational(0, 1)…Rational(1, 1)):\n\n<pre><code>DateTime.new(2001,2,3,12).day_fraction ...\n</code></pre>\n",null,1],["days","Numeric","rails/classes/Numeric.html#method-i-days","()","<p>Returns a Duration instance matching the number of days provided.\n\n<pre><code>2.days # =&gt; 2 days\n</code></pre>\n",null,0],["days_ago","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-days_ago","(days)","<p>Returns a new date/time the specified number of days ago.\n",null,0],["days_in_month","Time","rails/classes/Time.html#method-c-days_in_month","(month, year = current.year)","<p>Returns the number of days in the given month. If no year is specified, it will use the current year. …\n",null,0],["days_in_year","Time","rails/classes/Time.html#method-c-days_in_year","(year = current.year)","<p>Returns the number of days in the given year. If no year is specified, it will use the current year. …\n",null,0],["days_since","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-days_since","(days)","<p>Returns a new date/time the specified number of days in the future.\n",null,0],["days_to_week_start","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-days_to_week_start","(start_day = Date.beginning_of_week)","<p>Returns the number of days to the start of the week on the given day. Week is assumed to start on <code>start_day</code> …\n",null,0],["db","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-db","()","",null,0],["db_config","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-i-db_config","()","",null,0],["db_dir","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-db_dir","()","",null,0],["db_error","ActiveRecord::NoDatabaseError","rails/classes/ActiveRecord/NoDatabaseError.html#method-c-db_error","(db_name)","",null,0],["db_when_updating","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-db_when_updating","()","",null,0],["deactivate","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-deactivate","()","",null,1],["debug","ActionView::Digestor::NullLogger","rails/classes/ActionView/Digestor/NullLogger.html#method-c-debug","(_)","",null,0],["debug","ActionView::Helpers::DebugHelper","rails/classes/ActionView/Helpers/DebugHelper.html#method-i-debug","(object)","<p>Returns a YAML representation of <code>object</code> wrapped with &lt;pre&gt; and &lt;/pre&gt;. If the object cannot …\n",null,0],["debug","Logger","ruby/classes/Logger.html#method-i-debug","(progname = nil, &block)","<p>Equivalent to calling #add with severity <code>Logger::DEBUG</code>.\n",null,1],["debug","OpenSSL","ruby/classes/OpenSSL.html#method-c-debug","()","",null,1],["debug","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-i-debug","","<p>Logs a <code>message</code> at the debug (syslog debug) log level, or logs the message returned from the block.\n",null,1],["debug!","Logger","ruby/classes/Logger.html#method-i-debug-21","()","<p>Sets the log level to Logger::DEBUG. See Log Level.\n",null,1],["debug=","OpenSSL","ruby/classes/OpenSSL.html#method-c-debug-3D","(p1)","<p>Turns on or off debug mode. With debug mode, all errors added to the OpenSSL error queue will be printed …\n",null,1],["debug?","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-debug-3F","()","",null,1],["debug?","Logger","ruby/classes/Logger.html#method-i-debug-3F","()","<p>Returns <code>true</code> if the log level allows entries with severity Logger::DEBUG to be written, <code>false</code> otherwise. …\n",null,1],["debug_break","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-debug_break","()","<p>A hook point for ‘debug` command’s breakpoint after :IRB_EXIT as well as its clean-up\n",null,1],["debug_exception_response_format","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-debug_exception_response_format","()","",null,0],["debug_readline","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-debug_readline","(binding)","",null,1],["decode","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-c-decode","(key)","<p>Returns a Variation instance with the transformations that were encoded by <code>encode</code>.\n",null,0],["decode","ActiveSupport::JSON","rails/classes/ActiveSupport/JSON.html#method-c-decode","(json)","<p>Parses a JSON string (JavaScript Object Notation) into a hash. See www.json.org for more info.\n\n<pre><code>ActiveSupport::JSON.decode(&quot;{\\&quot;team\\&quot;:\\&quot;rails\\&quot;,\\&quot;players\\&quot;:\\&quot;36\\&quot;}&quot;) ...\n</code></pre>\n",null,0],["decode","OpenSSL::ASN1","ruby/classes/OpenSSL/ASN1.html#method-c-decode","(p1)","<p>Decodes a BER- or DER-encoded value and creates an ASN1Data instance. <em>der</em> may be a String or any object …\n",null,1],["decode64","Base64","ruby/classes/Base64.html#method-i-decode64","(str)","<p>Returns a string containing the decoding of an RFC-2045-compliant Base64-encoded string <code>str</code>:\n\n<pre><code>s = &quot;VGhpcyBpcyBsaW5lIDEKVGhpcyBpcyBsaW5lIDIK\\n&quot; ...\n</code></pre>\n",null,1],["decode_all","OpenSSL::ASN1","ruby/classes/OpenSSL/ASN1.html#method-c-decode_all","(p1)","<p>Similar to #decode with the difference that #decode expects one distinct value represented in <em>der</em>. #decode_all …\n",null,1],["decode_credentials","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-decode_credentials","(request)","",null,0],["decode_credentials","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials","(header)","",null,0],["decode_credentials_header","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials_header","(request)","",null,0],["decode_uri_component","URI","ruby/classes/URI.html#method-c-decode_uri_component","(str, enc=Encoding::UTF_8)","<p>Like URI.decode_www_form_component, except that <code>&#39;+&#39;</code> is preserved.\n",null,1],["decode_www_form","URI","ruby/classes/URI.html#method-c-decode_www_form","(str, enc=Encoding::UTF_8, separator: '&', use__charset_: false, isindex: false)","<p>Returns name/value pairs derived from the given string <code>str</code>, which must be an ASCII string.\n<p>The method …\n",null,1],["decode_www_form_component","URI","ruby/classes/URI.html#method-c-decode_www_form_component","(str, enc=Encoding::UTF_8)","<p>Returns a string decoded from the given URL-encoded string <code>str</code>.\n<p>The given string is first encoded as  …\n",null,1],["decoded_password","URI::Generic","ruby/classes/URI/Generic.html#method-i-decoded_password","()","<p>Returns the password component after URI decoding.\n",null,1],["decoded_user","URI::Generic","ruby/classes/URI/Generic.html#method-i-decoded_user","()","<p>Returns the user component after URI decoding.\n",null,1],["decompose","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-decompose","()","<p>Performs canonical decomposition on all the characters.\n\n<pre><code>&#39;é&#39;.length                         # =&gt; 1\n&#39;é&#39;.mb_chars.decompose.to_s.length ...\n</code></pre>\n",null,0],["decompose","ActiveSupport::Multibyte::Unicode","rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-decompose","(type, codepoints)","<p>Decompose composed characters to the decomposed form.\n",null,0],["decompress","ActiveSupport::Gzip","rails/classes/ActiveSupport/Gzip.html#method-c-decompress","(source)","<p>Decompresses a gzipped string.\n",null,0],["deconstantize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-deconstantize","(path)","<p>Removes the rightmost segment from the constant expression in the string.\n\n<pre><code>deconstantize(&#39;Net::HTTP&#39;)  ...\n</code></pre>\n",null,0],["deconstantize","String","rails/classes/String.html#method-i-deconstantize","()","<p>Removes the rightmost segment from the constant expression in the string.\n\n<pre><code>&#39;Net::HTTP&#39;.deconstantize   ...\n</code></pre>\n",null,0],["deconstruct","CSV::Row","ruby/classes/CSV/Row.html#method-i-deconstruct","()","<p>Returns the new Array suitable for pattern matching containing the values of the row.\n",null,1],["deconstruct","Data","ruby/classes/Data.html#method-i-deconstruct","()","<p>Returns the values in <code>self</code> as an array, to use in pattern matching:\n\n<pre><code>Measure = Data.define(:amount, :unit) ...\n</code></pre>\n",null,1],["deconstruct","MatchData","ruby/classes/MatchData.html#method-i-deconstruct","()","<p>Returns the array of captures, which are all matches except <code>m[0]</code>:\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;) ...\n</code></pre>\n",null,1],["deconstruct","Struct","ruby/classes/Struct.html#method-i-deconstruct","()","<p>Returns the values in <code>self</code> as an array:\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...\n</code></pre>\n",null,1],["deconstruct_keys","CSV::Row","ruby/classes/CSV/Row.html#method-i-deconstruct_keys","(keys)","<p>Returns the new Hash suitable for pattern matching containing only the keys specified as an argument. …\n",null,1],["deconstruct_keys","Data","ruby/classes/Data.html#method-i-deconstruct_keys","(p1)","<p>Returns a hash of the name/value pairs, to use in pattern matching.\n\n<pre><code>Measure = Data.define(:amount, :unit) ...\n</code></pre>\n",null,1],["deconstruct_keys","Date","ruby/classes/Date.html#method-i-deconstruct_keys","(p1)","<p>Returns a hash of the name/value pairs, to use in pattern matching. Possible keys are: <code>:year</code>, <code>:month</code> …\n",null,1],["deconstruct_keys","DateTime","ruby/classes/DateTime.html#method-i-deconstruct_keys","(p1)","<p>Returns a hash of the name/value pairs, to use in pattern matching. Possible keys are: <code>:year</code>, <code>:month</code> …\n",null,1],["deconstruct_keys","MatchData","ruby/classes/MatchData.html#method-i-deconstruct_keys","(p1)","<p>Returns a hash of the named captures for the given names.\n\n<pre><code>m = /(?&lt;hours&gt;\\d{2}):(?&lt;minutes&gt;\\d{2}):(?&lt;seconds&gt;\\d{2})/.match(&quot;18:37:22&quot;) ...\n</code></pre>\n",null,1],["deconstruct_keys","Prism::Comment","ruby/classes/Prism/Comment.html#method-i-deconstruct_keys","(keys)","<p>Implement the hash pattern matching interface for Comment.\n",null,1],["deconstruct_keys","Prism::Location","ruby/classes/Prism/Location.html#method-i-deconstruct_keys","(keys)","<p>Implement the hash pattern matching interface for Location.\n",null,1],["deconstruct_keys","Prism::MagicComment","ruby/classes/Prism/MagicComment.html#method-i-deconstruct_keys","(keys)","<p>Implement the hash pattern matching interface for MagicComment.\n",null,1],["deconstruct_keys","Prism::ParseError","ruby/classes/Prism/ParseError.html#method-i-deconstruct_keys","(keys)","<p>Implement the hash pattern matching interface for ParseError.\n",null,1],["deconstruct_keys","Prism::ParseResult","ruby/classes/Prism/ParseResult.html#method-i-deconstruct_keys","(keys)","<p>Implement the hash pattern matching interface for ParseResult.\n",null,1],["deconstruct_keys","Prism::ParseWarning","ruby/classes/Prism/ParseWarning.html#method-i-deconstruct_keys","(keys)","<p>Implement the hash pattern matching interface for ParseWarning.\n",null,1],["deconstruct_keys","Prism::Token","ruby/classes/Prism/Token.html#method-i-deconstruct_keys","(keys)","<p>Implement the hash pattern matching interface for Token.\n",null,1],["deconstruct_keys","Struct","ruby/classes/Struct.html#method-i-deconstruct_keys","(p1)","<p>Returns a hash of the name/value pairs for the given member names.\n\n<pre><code>Customer = Struct.new(:name, :address, ...\n</code></pre>\n",null,1],["deconstruct_keys","Time","ruby/classes/Time.html#method-i-deconstruct_keys","(p1)","<p>Returns a hash of the name/value pairs, to use in pattern matching. Possible keys are: <code>:year</code>, <code>:month</code> …\n",null,1],["decrement","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-decrement","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and subtracts the value passed as <code>by</code> (default is 1). The decrement …\n",null,0],["decrement","ActiveSupport::Cache::FileStore","rails/classes/ActiveSupport/Cache/FileStore.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrements an already existing integer value that is stored in the cache. If the key is not found nothing …\n",null,0],["decrement","ActiveSupport::Cache::MemCacheStore","rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrement a cached value. This method uses the memcached decr atomic operator and can only be used on …\n",null,0],["decrement","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrement an integer value in the cache.\n",null,0],["decrement","ActiveSupport::Cache::NullStore","rails/classes/ActiveSupport/Cache/NullStore.html#method-i-decrement","(name, amount = 1, options = nil)","",null,0],["decrement","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Cache Store API implementation.\n<p>Decrement a cached value. This method uses the Redis decr atomic operator …\n",null,0],["decrement","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrements an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>Some …\n",null,0],["decrement!","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-decrement-21","(attribute, by = 1, touch: nil)","<p>Wrapper around #decrement that writes the update to the database. Only <code>attribute</code> is updated; the record …\n",null,0],["decrement_counter","ActiveRecord::CounterCache::ClassMethods","rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-decrement_counter","(counter_name, id, touch: nil)","<p>Decrement a numeric field by one, via a direct SQL update.\n<p>This works the same as #increment_counter but …\n",null,0],["decrypt","ActionText::Encryption","rails/classes/ActionText/Encryption.html#method-i-decrypt","()","",null,0],["decrypt","ActiveRecord::Encryption::Cipher","rails/classes/ActiveRecord/Encryption/Cipher.html#method-i-decrypt","(encrypted_message, key:)","<p>Decrypt the provided <code>Message</code>.\n<p>When <code>key</code> is an Array, it will try all the keys raising a <code>ActiveRecord::Encryption::Errors::Decryption</code> …\n",null,0],["decrypt","ActiveRecord::Encryption::Cipher::Aes256Gcm","rails/classes/ActiveRecord/Encryption/Cipher/Aes256Gcm.html#method-i-decrypt","(encrypted_message)","",null,0],["decrypt","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-decrypt","()","<p>Decrypts all the encryptable attributes and saves the changes.\n",null,0],["decrypt","ActiveRecord::Encryption::EncryptingOnlyEncryptor","rails/classes/ActiveRecord/Encryption/EncryptingOnlyEncryptor.html#method-i-decrypt","(encrypted_text, key_provider: nil, cipher_options: {})","",null,0],["decrypt","ActiveRecord::Encryption::Encryptor","rails/classes/ActiveRecord/Encryption/Encryptor.html#method-i-decrypt","(encrypted_text, key_provider: default_key_provider, cipher_options: {})","<p>Decrypts a <code>clean_text</code> and returns the result as clean text\n<p>Options\n<p>:key_provider &mdash; Key provider to use for …\n",null,0],["decrypt","ActiveRecord::Encryption::NullEncryptor","rails/classes/ActiveRecord/Encryption/NullEncryptor.html#method-i-decrypt","(encrypted_text, key_provider: nil, cipher_options: {})","",null,0],["decrypt","ActiveRecord::Encryption::ReadOnlyNullEncryptor","rails/classes/ActiveRecord/Encryption/ReadOnlyNullEncryptor.html#method-i-decrypt","(encrypted_text, key_provider: nil, cipher_options: {})","",null,0],["decrypt","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-decrypt","(*args)","<p>Initializes the Cipher for decryption.\n<p>Make sure to call Cipher#encrypt or Cipher#decrypt before using …\n",null,1],["decrypt","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-decrypt","(p1, p2 = v2, p3 = v3)","",null,1],["decrypt","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-decrypt","(p1, p2 = v2)","<p>Performs a public key decryption operation using <code>pkey</code>.\n<p>See #encrypt for a description of the parameters …\n",null,1],["decrypt_and_verify","ActiveSupport::MessageEncryptor","rails/classes/ActiveSupport/MessageEncryptor.html#method-i-decrypt_and_verify","(data, purpose: nil, **)","<p>Decrypt and verify a message. We need to verify the message in order to avoid padding attacks. Reference: …\n",null,0],["decrypt_and_verify","ActiveSupport::Messages::Rotator::Encryptor","rails/classes/ActiveSupport/Messages/Rotator/Encryptor.html#method-i-decrypt_and_verify","(*args, on_rotation: @on_rotation, **options)","",null,0],["decryption_keys","ActiveRecord::Encryption::EnvelopeEncryptionKeyProvider","rails/classes/ActiveRecord/Encryption/EnvelopeEncryptionKeyProvider.html#method-i-decryption_keys","(encrypted_message)","",null,0],["decryption_keys","ActiveRecord::Encryption::KeyProvider","rails/classes/ActiveRecord/Encryption/KeyProvider.html#method-i-decryption_keys","(encrypted_message)","<p>Returns the list of decryption keys\n<p>When the message holds a reference to its encryption key, it will …\n",null,0],["dedup","String","ruby/classes/String.html#method-i-dedup","()","<p>Returns a frozen, possibly pre-existing copy of the string.\n<p>The returned String will be deduplicated as …\n",null,1],["deduplicate","ActiveRecord::ConnectionAdapters::Deduplicable","rails/classes/ActiveRecord/ConnectionAdapters/Deduplicable.html#method-i-deduplicate","()","",null,0],["deep_dup","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-deep_dup","()","<p>Returns a duplicate <code>ActionController::Parameters</code> instance with the same permitted parameters.\n",null,0],["deep_dup","Array","rails/classes/Array.html#method-i-deep_dup","()","<p>Returns a deep copy of array.\n\n<pre><code>array = [1, [2, 3]]\ndup   = array.deep_dup\ndup[1][2] = 4\n\narray[1][2] # ...\n</code></pre>\n",null,0],["deep_dup","Hash","rails/classes/Hash.html#method-i-deep_dup","()","<p>Returns a deep copy of hash.\n\n<pre><code>hash = { a: { b: &#39;b&#39; } }\ndup  = hash.deep_dup\ndup[:a][:c] = &#39;c&#39;\n\nhash[:a][:c] ...\n</code></pre>\n",null,0],["deep_dup","Object","rails/classes/Object.html#method-i-deep_dup","()","<p>Returns a deep copy of object if it’s duplicable. If it’s not duplicable, returns <code>self</code>.\n\n<pre><code>object ...\n</code></pre>\n",null,0],["deep_merge","Hash","rails/classes/Hash.html#method-i-deep_merge","(other_hash, &block)","<p>Returns a new hash with <code>self</code> and <code>other_hash</code> merged recursively.\n\n<pre><code>h1 = { a: true, b: { c: [1, 2, 3] } } ...\n</code></pre>\n",null,0],["deep_merge!","Hash","rails/classes/Hash.html#method-i-deep_merge-21","(other_hash, &block)","<p>Same as <code>deep_merge</code>, but modifies <code>self</code>.\n",null,0],["deep_stringify_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys","()","",null,0],["deep_stringify_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys","()","",null,0],["deep_stringify_keys","Hash","rails/classes/Hash.html#method-i-deep_stringify_keys","()","<p>Returns a new hash with all keys converted to strings. This includes the keys from the root hash and …\n",null,0],["deep_stringify_keys!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys-21","()","",null,0],["deep_stringify_keys!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_stringify_keys-21","()","",null,0],["deep_stringify_keys!","Hash","rails/classes/Hash.html#method-i-deep_stringify_keys-21","()","<p>Destructively converts all keys to strings. This includes the keys from the root hash and from all nested …\n",null,0],["deep_symbolize_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_symbolize_keys","()","",null,0],["deep_symbolize_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-deep_symbolize_keys","()","",null,0],["deep_symbolize_keys","Hash","rails/classes/Hash.html#method-i-deep_symbolize_keys","()","<p>Returns a new hash with all keys converted to symbols, as long as they respond to <code>to_sym</code>. This includes …\n",null,0],["deep_symbolize_keys!","Hash","rails/classes/Hash.html#method-i-deep_symbolize_keys-21","()","<p>Destructively converts all keys to symbols, as long as they respond to <code>to_sym</code>. This includes the keys …\n",null,0],["deep_transform_keys","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-deep_transform_keys","(&block)","<p>Returns a new <code>ActionController::Parameters</code> instance with the results of running <code>block</code> once for every …\n",null,0],["deep_transform_keys","Hash","rails/classes/Hash.html#method-i-deep_transform_keys","(&block)","<p>Returns a new hash with all keys converted by the block operation. This includes the keys from the root …\n",null,0],["deep_transform_keys!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-deep_transform_keys-21","(&block)","<p>Returns the same <code>ActionController::Parameters</code> instance with changed keys. This includes the keys from …\n",null,0],["deep_transform_keys!","Hash","rails/classes/Hash.html#method-i-deep_transform_keys-21","(&block)","<p>Destructively converts all keys by using the block operation. This includes the keys from the root hash …\n",null,0],["deep_transform_values","Hash","rails/classes/Hash.html#method-i-deep_transform_values","(&block)","<p>Returns a new hash with all values converted by the block operation. This includes the values from the …\n",null,0],["deep_transform_values!","Hash","rails/classes/Hash.html#method-i-deep_transform_values-21","(&block)","<p>Destructively converts all values by using the block operation. This includes the values from the root …\n",null,0],["def_class","ERB","ruby/classes/ERB.html#method-i-def_class","(superklass=Object, methodname='result')","<p>Define unnamed class which has <em>methodname</em> as instance method, and return it.\n<p>example:\n\n<pre><code>class MyClass_\n  ...\n</code></pre>\n",null,1],["def_delegator","Forwardable","ruby/classes/Forwardable.html#method-i-def_delegator","(accessor, method, ali = method)","",null,1],["def_delegator","SingleForwardable","ruby/classes/SingleForwardable.html#method-i-def_delegator","(accessor, method, ali = method)","",null,1],["def_delegators","Forwardable","ruby/classes/Forwardable.html#method-i-def_delegators","(accessor, *methods)","",null,1],["def_delegators","SingleForwardable","ruby/classes/SingleForwardable.html#method-i-def_delegators","(accessor, *methods)","",null,1],["def_erb_method","ERB::DefMethod","ruby/classes/ERB/DefMethod.html#method-c-def_erb_method","(methodname, erb_or_fname)","<p>define <em>methodname</em> as instance method of current module, using ERB object or eRuby file\n",null,1],["def_extend_command","IRB::ContextExtender","ruby/classes/IRB/ContextExtender.html#method-c-def_extend_command","(cmd_name, load_file, *aliases)","<p>Evaluate the given <code>command</code> from the given <code>load_file</code> on the Context module.\n<p>Will also define any given …\n",null,1],["def_extend_command","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-c-def_extend_command","(cmd_name, cmd_class, load_file, *aliases)","<p>Evaluate the given <code>cmd_name</code> on the given <code>cmd_class</code> Class.\n<p>Will also define any given <code>aliases</code> for the method. …\n",null,1],["def_head_option","OptionParser","ruby/classes/OptionParser.html#method-i-def_head_option","(*opts, &block)","",null,1],["def_inspector","IRB::Inspector","ruby/classes/IRB/Inspector.html#method-c-def_inspector","(key, arg=nil, &block)","<p>Example\n\n<pre><code>Inspector.def_inspector(key, init_p=nil){|v| v.inspect}\nInspector.def_inspector([key1,..], init_p=nil){|v| ...\n</code></pre>\n",null,1],["def_instance_delegator","Forwardable","ruby/classes/Forwardable.html#method-i-def_instance_delegator","(accessor, method, ali = method)","<p>Define <code>method</code> as delegator instance method with an optional alias name <code>ali</code>. Method calls to <code>ali</code> will …\n",null,1],["def_instance_delegators","Forwardable","ruby/classes/Forwardable.html#method-i-def_instance_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for using a different name.  …\n",null,1],["def_method","ERB","ruby/classes/ERB.html#method-i-def_method","(mod, methodname, fname='(ERB)')","<p>Define <em>methodname</em> as instance method of <em>mod</em> from compiled Ruby source.\n<p>example:\n\n<pre><code>filename = &#39;example.rhtml&#39; ...\n</code></pre>\n",null,1],["def_module","ERB","ruby/classes/ERB.html#method-i-def_module","(methodname='erb')","<p>Create unnamed module, define <em>methodname</em> as instance method of it, and return it.\n<p>example:\n\n<pre><code>filename = &#39;example.rhtml&#39; ...\n</code></pre>\n",null,1],["def_notifier","IRB::Notifier","ruby/classes/IRB/Notifier.html#method-c-def_notifier","(prefix = \"\", output_method = StdioOutputMethod.new)","<p>Define a new Notifier output source, returning a new CompositeNotifier with the given <code>prefix</code> and <code>output_method</code> …\n",null,1],["def_notifier","IRB::Notifier::CompositeNotifier","ruby/classes/IRB/Notifier/CompositeNotifier.html#method-i-def_notifier","(level, prefix = \"\")","<p>Creates a new LeveledNotifier in the composite #notifiers group.\n<p>The given <code>prefix</code> will be assigned to …\n",null,1],["def_option","OptionParser","ruby/classes/OptionParser.html#method-i-def_option","(*opts, &block)","",null,1],["def_single_delegator","SingleForwardable","ruby/classes/SingleForwardable.html#method-i-def_single_delegator","(accessor, method, ali = method)","<p>Defines a method <em>method</em> which delegates to <em>accessor</em> (i.e. it calls the method of the same name in <em>accessor</em> …\n",null,1],["def_single_delegators","SingleForwardable","ruby/classes/SingleForwardable.html#method-i-def_single_delegators","(accessor, *methods)","<p>Shortcut for defining multiple delegator methods, but with no provision for using a different name.  …\n",null,1],["def_tail_option","OptionParser","ruby/classes/OptionParser.html#method-i-def_tail_option","(*opts, &block)","",null,1],["default","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-default","(value = nil)","<p>Sets the defaults through app configuration:\n\n<pre><code>config.action_mailer.default(from: &quot;no-reply@example.org&quot;)\n</code></pre>\n",null,0],["default","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(*args)","<p>Same as <code>Hash#default</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new(1) ...\n</code></pre>\n",null,0],["default","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(*args)","<p>Same as <code>Hash#default</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new(1) ...\n</code></pre>\n",null,0],["default","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-c-default","()","",null,1],["default","Hash","ruby/classes/Hash.html#method-i-default","(*args)","<p>Returns the default value for the given <code>key</code>. The returned value will be determined either by the default …\n",null,1],["default","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-default","()","<p>Returns default value. If the default value does not exist, this method returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["default=","Hash","ruby/classes/Hash.html#method-i-default-3D","(p1)","<p>Sets the default value to <code>value</code>; returns <code>value</code>:\n\n<pre><code>h = {}\nh.default # =&gt; nil\nh.default = false # =&gt; false ...\n</code></pre>\n",null,1],["default_acl","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-c-default_acl","(acl)","<p>Set the default access control list to <code>acl</code>.  The default ACL is <code>nil</code>.\n<p>See also DRb::ACL and #new()\n",null,1],["default_aliases_for_option","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-default_aliases_for_option","(name, options)","<p>Returns default aliases for the option name given doing a lookup in Rails::Generators.aliases.\n",null,0],["default_argc_limit","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-c-default_argc_limit","(argc)","<p>Set the default value for the :argc_limit option.\n<p>See #new().  The initial default value is 256.\n",null,1],["default_bindir","Gem","ruby/classes/Gem.html#method-c-default_bindir","()","<p>The default directory for binaries\n",null,1],["default_bundle_dir","Bundler","ruby/classes/Bundler.html#method-c-default_bundle_dir","()","",null,1],["default_cert_path","Gem","ruby/classes/Gem.html#method-c-default_cert_path","()","<p>The default signing certificate chain path\n",null,1],["default_command_root","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-default_command_root","()","<p>Default file root to place extra files a command might need, placed one folder above the command file. …\n",null,0],["default_dir","Gem","ruby/classes/Gem.html#method-c-default_dir","()","<p>Default home directory path to be used if an alternate value is not specified in the environment\n",null,1],["default_dir","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-default_dir","()","",null,1],["default_event_sources","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-default_event_sources","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having …\n",null,1],["default_exec_format","Gem","ruby/classes/Gem.html#method-c-default_exec_format","()","<p>Deduce Ruby’s –program-prefix and –program-suffix from its install name\n",null,1],["default_ext_dir_for","Gem","ruby/classes/Gem.html#method-c-default_ext_dir_for","(base_dir)","<p>Returns binary extensions dir for specified RubyGems base dir or nil if such directory cannot be determined. …\n",null,1],["default_external","Encoding","ruby/classes/Encoding.html#method-c-default_external","()","<p>Returns default external encoding.\n<p>The default external encoding is used by default for strings created …\n",null,1],["default_external=","Encoding","ruby/classes/Encoding.html#method-c-default_external-3D","(p1)","<p>Sets default external encoding.  You should not set Encoding::default_external in ruby code as strings …\n",null,1],["default_for_option","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-default_for_option","(config, name, options, default)","<p>Returns default for the option name given doing a lookup in config.\n",null,0],["default_form_builder","ActionController::FormBuilder","rails/classes/ActionController/FormBuilder.html#method-i-default_form_builder","()","<p>Default form builder for the controller\n",null,0],["default_form_builder","ActionController::FormBuilder::ClassMethods","rails/classes/ActionController/FormBuilder/ClassMethods.html#method-i-default_form_builder","(builder)","<p>Set the form builder to be used as the default for all forms in the views rendered by this controller …\n",null,0],["default_gem?","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-default_gem-3F","()","",null,1],["default_gemfile","Bundler","ruby/classes/Bundler.html#method-c-default_gemfile","()","",null,1],["default_generator_root","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-default_generator_root","()","",null,0],["default_i18n_subject","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-i-default_i18n_subject","(interpolations = {})","<p>Translates the <code>subject</code> using Rails I18n class under <code>[mailer_scope, action_name]</code> scope. If it does not …\n",null,0],["default_id_conv","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-c-default_id_conv","(idconv)","<p>Set the default value for the :id_conv option.\n<p>See #new().  The initial default value is a DRbIdConv instance. …\n",null,1],["default_inspect","Date","rails/classes/Date.html#method-i-default_inspect","()","",null,0],["default_inspect","DateTime","rails/classes/DateTime.html#method-i-default_inspect","()","",null,0],["default_internal","Encoding","ruby/classes/Encoding.html#method-c-default_internal","()","<p>Returns default internal encoding.  Strings will be transcoded to the default internal encoding in the …\n",null,1],["default_internal=","Encoding","ruby/classes/Encoding.html#method-c-default_internal-3D","(p1)","<p>Sets default internal encoding or removes default internal encoding when passed nil.  You should not …\n",null,1],["default_key_bindings","Reline::KeyActor::Base","ruby/classes/Reline/KeyActor/Base.html#method-i-default_key_bindings","()","",null,1],["default_key_path","Gem","ruby/classes/Gem.html#method-c-default_key_path","()","<p>The default signing key path\n",null,1],["default_load_limit","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-c-default_load_limit","(sz)","<p>Set the default value for the :load_limit option.\n<p>See #new().  The initial default value is 25 MB.\n",null,1],["default_lockfile","Bundler","ruby/classes/Bundler.html#method-c-default_lockfile","()","",null,1],["default_log_file","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-default_log_file","()","",null,0],["default_ole_types","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-default_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having …\n",null,1],["default_options","Rails::Server","rails/classes/Rails/Server.html#method-i-default_options","()","",null,0],["default_options=","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-default_options-3D","(value = nil)","<p>Allows to set defaults through app configuration:\n\n<pre><code>config.action_mailer.default_options = { from: &quot;no-reply@example.org&quot; ...\n</code></pre>\n",null,0],["default_path","Gem","ruby/classes/Gem.html#method-c-default_path","()","<p>Default gem load path\n",null,1],["default_port","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-default_port","()","<p>Returns integer <code>80</code>, the default port to use for HTTP requests:\n\n<pre><code>Net::HTTP.default_port # =&gt; 80\n</code></pre>\n",null,1],["default_port","URI::Generic","ruby/classes/URI/Generic.html#method-i-default_port","()","<p>Returns default port.\n",null,1],["default_port","URI::Generic","ruby/classes/URI/Generic.html#method-c-default_port","()","<p>Returns default port.\n",null,1],["default_prerelease","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-c-default_prerelease","()","",null,1],["default_proc","Hash","ruby/classes/Hash.html#method-i-default_proc","()","<p>Returns the default proc for <code>self</code> (see Default Values):\n\n<pre><code>h = {}\nh.default_proc # =&gt; nil\nh.default_proc ...\n</code></pre>\n",null,1],["default_proc=","Hash","ruby/classes/Hash.html#method-i-default_proc-3D","(p1)","<p>Sets the default proc for <code>self</code> to <code>proc</code>: (see Default Values):\n\n<pre><code>h = {}\nh.default_proc # =&gt; nil\nh.default_proc ...\n</code></pre>\n",null,1],["default_rubygems_dirs","Gem","ruby/classes/Gem.html#method-c-default_rubygems_dirs","()","<p>Paths where RubyGems’ .rb files and bin files are installed\n",null,1],["default_schema_cache_path","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-default_schema_cache_path","()","",null,0],["default_scope","ActiveRecord::Scoping::Default::ClassMethods","rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-default_scope","(scope = nil, all_queries: nil, &block)","<p>Use this macro in your model to set a default scope for all operations on the model.\n\n<pre><code>class Article &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["default_scoped","ActiveRecord::Scoping::Named::ClassMethods","rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-default_scoped","(scope = relation, all_queries: nil)","<p>Returns a scope for the model with default scopes.\n",null,0],["default_scopes?","ActiveRecord::Scoping::Default::ClassMethods","rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-default_scopes-3F","(all_queries: false)","<p>Checks if the model has any default scopes. If all_queries is set to true, the method will check if there …\n",null,0],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-default_sequence_name","(table, column)","",null,0],["default_source_root","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-default_source_root","()","<p>Returns the default source root for a given generator. This is used internally by rails to set its generators …\n",null,0],["default_sources","Gem","ruby/classes/Gem.html#method-c-default_sources","()","<p>An Array of the default sources that come with RubyGems\n",null,1],["default_spec_cache_dir","Gem","ruby/classes/Gem.html#method-c-default_spec_cache_dir","()","<p>Default spec directory path to be used if an alternate value is not specified in the environment\n",null,1],["default_spec_file","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-default_spec_file","()","<p>The location of the default spec file for default gems.\n",null,1],["default_specifications_dir","Gem","ruby/classes/Gem.html#method-c-default_specifications_dir","()","<p>Path to specification files of default gems.\n",null,1],["default_specifications_dir","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-c-default_specifications_dir","()","",null,1],["default_stubs","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-default_stubs","(pattern = \"*.gemspec\")","<p>Returns a Gem::StubSpecification for default gems\n",null,1],["default_timezone","ActiveRecord::Type::Internal::Timezone","rails/classes/ActiveRecord/Type/Internal/Timezone.html#method-i-default_timezone","()","",null,0],["default_timezone=","ActiveRecord","rails/classes/ActiveRecord.html#method-c-default_timezone-3D","(default_timezone)","<p>Determines whether to use Time.utc (using :utc) or Time.local (using :local) when pulling dates and times …\n",null,0],["default_title=","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-default_title-3D","(string)","<p>Set the title, but only if not already set. Used to set the title from a source file, so that a title …\n",null,1],["default_to","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-i-default_to","(defaults)","",null,0],["default_url_options","ActionDispatch::Routing::Mapper::Base","rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options","(options)","",null,0],["default_url_options=","ActionDispatch::Routing::Mapper::Base","rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options-3D","(options)","",null,0],["default_value","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-default_value","(name)","<p>The default value for specification attribute <code>name</code>\n",null,1],["default_value_for_option","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-default_value_for_option","(name, options)","<p>Returns the default value for the option name given doing a lookup in Rails::Generators.options.\n",null,0],["defaults","ActionDispatch::Routing::Mapper::Scoping","rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-defaults","(defaults = {})","<p>Allows you to set default parameters for a route, such as this:\n\n<pre><code>defaults id: &#39;home&#39; do\n  match &#39;scoped_pages/(:id)&#39;, ...\n</code></pre>\n",null,0],["defaults","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-defaults","()","<p>Sets default task values\n",null,1],["defaults_str","Gem::Command","ruby/classes/Gem/Command.html#method-i-defaults_str","()","<p>Override to display the default values of the command options. (similar to <code>arguments</code>, but displays the …\n",null,1],["defaults_str","Gem::Commands::InfoCommand","ruby/classes/Gem/Commands/InfoCommand.html#method-i-defaults_str","()","",null,1],["defer_subscription_confirmation!","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-defer_subscription_confirmation-21","()","",null,0],["defer_subscription_confirmation?","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-defer_subscription_confirmation-3F","()","",null,0],["define","ActiveRecord::DynamicMatchers::Method","rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-i-define","()","",null,0],["define","ActiveRecord::Schema::Definition::ClassMethods","rails/classes/ActiveRecord/Schema/Definition/ClassMethods.html#method-i-define","(info = {}, &block)","<p>Eval the given block. All methods available to the current connection adapter are available within the …\n",null,0],["define","Data","ruby/classes/Data.html#method-c-define","(*args)","<p>Defines a new Data class.\n\n<pre><code>measure = Data.define(:amount, :unit)\n#=&gt; #&lt;Class:0x00007f70c6868498&gt;\nmeasure.new(1, ...\n</code></pre>\n",null,1],["define","Gem::PackageTask","ruby/classes/Gem/PackageTask.html#method-i-define","()","<p>Create the Rake tasks and actions specified by this Gem::PackageTask. (<code>define</code> is automatically called …\n",null,1],["define","OptionParser","ruby/classes/OptionParser.html#method-i-define","(*opts, &block)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["define","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-define","()","<p>Create the tasks defined by this task lib.\n",null,1],["define","Reline::Face::Config","ruby/classes/Reline/Face/Config.html#method-i-define","(name, **values)","",null,1],["define_attribute","ActiveRecord::Attributes::ClassMethods","rails/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-define_attribute","( name, cast_type, default: NO_DEFAULT_PROVIDED, user_provided_default: true )","<p>This is the low level API which sits beneath <code>attribute</code>. It only accepts type objects, and will do its …\n",null,0],["define_attribute_method","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_method","(attr_name, _owner: generated_attribute_methods)","<p>Declares an attribute that should be prefixed and suffixed by <code>ActiveModel::AttributeMethods</code>.\n<p>To use, pass …\n",null,0],["define_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_methods","(*attr_names)","<p>Declares the attributes that should be prefixed and suffixed by <code>ActiveModel::AttributeMethods</code>.\n<p>To use, …\n",null,0],["define_by_keywords","OptionParser","ruby/classes/OptionParser.html#method-i-define_by_keywords","(options, meth, **opts)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["define_cached_method","ActiveSupport::CodeGenerator::MethodSet","rails/classes/ActiveSupport/CodeGenerator/MethodSet.html#method-i-define_cached_method","(name, as: name)","",null,0],["define_callbacks","ActiveSupport::Callbacks::ClassMethods","rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-define_callbacks","(*names)","<p>Define sets of events in the object life cycle that support callbacks.\n\n<pre><code>define_callbacks :validate\ndefine_callbacks ...\n</code></pre>\n",null,0],["define_finalizer","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-define_finalizer","(p1, p2 = v2)","<p>Adds <em>aProc</em> as a finalizer, to be called after <em>obj</em> was destroyed. The object ID of the <em>obj</em> will be passed …\n",null,1],["define_head","OptionParser","ruby/classes/OptionParser.html#method-i-define_head","(*opts, &block)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["define_method","Module","ruby/classes/Module.html#method-i-define_method","(*args)","<p>Defines an instance method in the receiver. The <em>method</em> parameter can be a <code>Proc</code>, a <code>Method</code> or an <code>UnboundMethod</code> …\n",null,1],["define_model_callbacks","ActiveModel::Callbacks","rails/classes/ActiveModel/Callbacks.html#method-i-define_model_callbacks","(*callbacks)","<p>define_model_callbacks accepts the same options <code>define_callbacks</code> does, in case you want to overwrite …\n",null,0],["define_on","ActiveModel::Validations::AcceptanceValidator::LazilyDefineAttributes","rails/classes/ActiveModel/Validations/AcceptanceValidator/LazilyDefineAttributes.html#method-i-define_on","(klass)","",null,0],["define_singleton_method","Object","ruby/classes/Object.html#method-i-define_singleton_method","(*args)","<p>Defines a public singleton method in the receiver. The <em>method</em> parameter can be a <code>Proc</code>, a <code>Method</code> or an …\n",null,1],["define_tail","OptionParser","ruby/classes/OptionParser.html#method-i-define_tail","(*opts, &block)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["defined_class","TracePoint","ruby/classes/TracePoint.html#method-i-defined_class","()","<p>Return class or module of the method being called.\n\n<pre><code>class C; def foo; end; end\ntrace = TracePoint.new(:call) ...\n</code></pre>\n",null,1],["defined_in?","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-defined_in-3F","(file)","<p>Is part of this thing was defined in <code>file</code>?\n",null,1],["definition","Bundler","ruby/classes/Bundler.html#method-c-definition","(unlock = nil, lockfile = default_lockfile)","<p>Returns an instance of Bundler::Definition for given Gemfile and lockfile\n<p>@param unlock [Hash, Boolean …\n",null,1],["definition","RDoc::Attr","ruby/classes/RDoc/Attr.html#method-i-definition","()","<p>Returns attr_reader, attr_writer or attr_accessor as appropriate.\n",null,1],["definition","RDoc::NormalClass","ruby/classes/RDoc/NormalClass.html#method-i-definition","()","<p>The definition of this class, <code>class MyClassName</code>\n",null,1],["definition","RDoc::NormalModule","ruby/classes/RDoc/NormalModule.html#method-i-definition","()","<p>The definition of this module, <code>module MyModuleName</code>\n",null,1],["definition","RDoc::SingleClass","ruby/classes/RDoc/SingleClass.html#method-i-definition","()","<p>The definition of this singleton class, <code>class &lt;&lt; MyClassName</code>\n",null,1],["definition_lists","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-definition_lists","","<p>Allow PHP Markdown Extras style definition lists\n",null,1],["deflate","Gem","ruby/classes/Gem.html#method-c-deflate","(data)","<p>A Zlib::Deflate.deflate wrapper\n",null,1],["deflate","Zlib","ruby/classes/Zlib.html#method-c-deflate","(p1, p2 = v2)","<p>Compresses the given <code>string</code>. Valid values of level are Zlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION …\n",null,1],["deflate","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-i-deflate","(p1, p2 = v2)","<p>Inputs <code>string</code> into the deflate stream and returns the output from the stream.  On calling this method, …\n",null,1],["deflate","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-c-deflate","(p1, p2 = v2)","<p>Compresses the given <code>string</code>. Valid values of level are Zlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION …\n",null,1],["degree","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-degree","()","<p>See the OpenSSL documentation for EC_GROUP_get_degree()\n",null,1],["delegate","Module","rails/classes/Module.html#method-i-delegate","(*methods, to: nil, prefix: nil, allow_nil: nil, private: nil)","<p>Provides a <code>delegate</code> class method to easily expose contained objects’ public methods as your own. …\n",null,0],["delegate","Forwardable","ruby/classes/Forwardable.html#method-i-delegate","(hash)","",null,1],["delegate","SingleForwardable","ruby/classes/SingleForwardable.html#method-i-delegate","(hash)","",null,1],["delegate_missing_to","Module","rails/classes/Module.html#method-i-delegate_missing_to","(target, allow_nil: nil)","<p>When building decorators, a common pattern may emerge:\n\n<pre><code>class Partition\n  def initialize(event)\n    @event ...\n</code></pre>\n",null,0],["delegate_to","ActionView::Template::Types","rails/classes/ActionView/Template/Types.html#method-c-delegate_to","(klass)","",null,0],["delegated_type","ActiveRecord::DelegatedType","rails/classes/ActiveRecord/DelegatedType.html#method-i-delegated_type","(role, types:, **options)","<p>Defines this as a class that’ll delegate its type for the passed <code>role</code> to the class references in …\n",null,0],["delete","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-delete","(key, &block)","<p>Deletes a key-value pair from <code>Parameters</code> and returns the value. If <code>key</code> is not found, returns <code>nil</code> (or, …\n",null,0],["delete","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-delete","(key)","",null,0],["delete","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-delete","(target)","<p>Deletes a middleware from the middleware stack.\n<p>Returns the array of middlewares not including the deleted …\n",null,0],["delete","ActionDispatch::Routing::Mapper::HttpHelpers","rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-delete","(*args, &block)","<p>Define a route that only recognizes HTTP DELETE. For supported arguments, see match\n\n<pre><code>delete &#39;broccoli&#39;, ...\n</code></pre>\n",null,0],["delete","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-delete","(attribute, type = nil, **options)","<p>Delete messages for <code>key</code>. Returns the deleted messages.\n\n<pre><code>person.errors[:name]        # =&gt; [&quot;cannot be nil&quot;] ...\n</code></pre>\n",null,0],["delete","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-delete","(*records)","<p>Deletes the <code>records</code> supplied from the collection according to the strategy specified by the <code>:dependent</code> …\n",null,0],["delete","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-delete","(element)","<p>If <code>element</code> is in the queue, remove and return it, or <code>nil</code>.\n",null,0],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-delete","(arel, name = nil, binds = [])","<p>Executes the delete statement and returns the number of rows affected.\n",null,0],["delete","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-delete","()","<p>Deletes the record in the database and freezes this instance to reflect that no changes should be made …\n",null,0],["delete","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-delete","(id_or_array)","<p>Deletes the row with a primary key matching the <code>id</code> argument, using an SQL <code>DELETE</code> statement, and returns …\n",null,0],["delete","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-delete","()","<p>Deletes the files on the service associated with the blob. This should only be done if the blob is going …\n",null,0],["delete","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-delete","(key)","<p>Delete the file at the <code>key</code>.\n",null,0],["delete","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-delete","(key)","",null,0],["delete","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-delete","(key)","",null,0],["delete","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-delete","(key)","",null,0],["delete","ActiveStorage::Service::MirrorService","rails/classes/ActiveStorage/Service/MirrorService.html#method-i-delete","(key)","<p>Delete the file at the <code>key</code> on all services.\n",null,0],["delete","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-delete","(key)","",null,0],["delete","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-delete","(name, options = nil)","<p>Deletes an entry in the cache. Returns <code>true</code> if an entry is deleted.\n<p>Options are passed to the underlying …\n",null,0],["delete","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes the specified key from the hash.\n",null,0],["delete","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes the specified key from the hash.\n",null,0],["delete","ActiveSupport::Inflector::Inflections::Uncountables","rails/classes/ActiveSupport/Inflector/Inflections/Uncountables.html#method-i-delete","(entry)","",null,0],["delete","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-delete","(...)","",null,0],["delete","Array","ruby/classes/Array.html#method-i-delete","(p1)","<p>Removes zero or more elements from <code>self</code>.\n<p>When no block is given, removes from <code>self</code> each element <code>ele</code> such …\n",null,1],["delete","CGI::Session","ruby/classes/CGI/Session.html#method-i-delete","()","<p>Delete the session from storage.  Also closes the storage.\n<p>Note that the session’s data is <em>not</em> automatically …\n",null,1],["delete","CGI::Session::FileStore","ruby/classes/CGI/Session/FileStore.html#method-i-delete","()","<p>Close and delete the session’s FileStore file.\n",null,1],["delete","CGI::Session::MemoryStore","ruby/classes/CGI/Session/MemoryStore.html#method-i-delete","()","<p>Delete the session state.\n",null,1],["delete","CGI::Session::NullStore","ruby/classes/CGI/Session/NullStore.html#method-i-delete","()","<p>Delete the session state.\n<p>A no-op.\n",null,1],["delete","CGI::Session::PStore","ruby/classes/CGI/Session/PStore.html#method-i-delete","()","<p>Close and delete the session’s PStore file.\n",null,1],["delete","CSV::Row","ruby/classes/CSV/Row.html#method-i-delete","(header_or_index, minimum_index = 0)","<p>Removes a specified field from <code>self</code>; returns the 2-element Array <code>[header, value]</code> if the field exists. …\n",null,1],["delete","CSV::Table","ruby/classes/CSV/Table.html#method-i-delete","(*indexes_or_headers)","<p>If the access mode is <code>:row</code> or <code>:col_or_row</code>, and each argument is either an Integer or a Range, returns …\n",null,1],["delete","Dir","ruby/classes/Dir.html#method-c-delete","(p1)","<p>Removes the directory at <code>dirpath</code> from the underlying file system:\n\n<pre><code>Dir.rmdir(&#39;foo&#39;) # =&gt; 0\n</code></pre>\n<p>Raises an exception …\n",null,1],["delete","ENV","ruby/classes/ENV.html#method-c-delete","(p1)","<p>Deletes the environment variable with <code>name</code> if it exists and returns its value:\n\n<pre><code>ENV[&#39;foo&#39;] = &#39;0&#39;\nENV.delete(&#39;foo&#39;) ...\n</code></pre>\n",null,1],["delete","File","ruby/classes/File.html#method-c-delete","(*args)","<p>Deletes the named files, returning the number of names passed as arguments. Raises an exception on any …\n",null,1],["delete","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-delete","(source)","<p>Deletes <code>source</code> from the source list which may be a Gem::Source or a URI.\n",null,1],["delete","Hash","ruby/classes/Hash.html#method-i-delete","(p1)","<p>Deletes the entry for the given <code>key</code> and returns its associated value.\n<p>If no block is given and <code>key</code> is …\n",null,1],["delete","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-delete","(key)","<p>Deletes the job at the given <code>key</code>.\n",null,1],["delete","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-delete","(path, initheader = {'Depth' => 'Infinity'})","<p>Sends a DELETE request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["delete","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-delete","(key)","<p>Removes the header for the given case-insensitive <code>key</code> (see Fields); returns the deleted value, or <code>nil</code> …\n",null,1],["delete","ObjectSpace::WeakKeyMap","ruby/classes/ObjectSpace/WeakKeyMap.html#method-i-delete","(p1)","<p>Deletes the entry for the given <code>key</code> and returns its associated value.\n<p>If no block is given and <code>key</code> is …\n",null,1],["delete","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-delete","(p1)","<p>Deletes the entry for the given <code>key</code> and returns its associated value.\n<p>If no block is given and <code>key</code> is …\n",null,1],["delete","PStore","ruby/classes/PStore.html#method-i-delete","(key)","<p>Removes and returns the value at <code>key</code> if it exists:\n\n<pre><code>example_store do |store|\n  store.transaction do\n   ...\n</code></pre>\n",null,1],["delete","Pathname","ruby/classes/Pathname.html#method-i-delete","()","<p>Removes a file or directory, using File.unlink if <code>self</code> is a file, or Dir.unlink as necessary.\n",null,1],["delete","Resolv::DNS::SvcParams","ruby/classes/Resolv/DNS/SvcParams.html#method-i-delete","(key)","<p>Remove the <code>SvcParam</code> with the given <code>key</code> and return it.\n",null,1],["delete","Rinda::TupleBag","ruby/classes/Rinda/TupleBag.html#method-i-delete","(tuple)","<p>Removes <code>tuple</code> from the TupleBag.\n",null,1],["delete","Rinda::TupleBag::TupleBin","ruby/classes/Rinda/TupleBag/TupleBin.html#method-i-delete","(tuple)","",null,1],["delete","Set","ruby/classes/Set.html#method-i-delete","(o)","<p>Deletes the given object from the set and returns self. Use\n<code>subtract</code> to delete many items at once.\n",null,1],["delete","String","ruby/classes/String.html#method-i-delete","(*args)","<p>Returns a copy of <code>self</code> with characters specified by <code>selectors</code> removed (see Multiple Character Selectors …\n",null,1],["delete","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-delete","()","",null,1],["delete","Tempfile","ruby/classes/Tempfile.html#method-i-delete","()","",null,1],["delete","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-delete","(name)","",null,1],["delete","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-delete","( key )","<p>Deletes value from database associated with <code>key</code>.\n<p>Returns value or <code>nil</code>.\n",null,1],["delete!","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-delete-21","(target)","<p>Deletes a middleware from the middleware stack.\n<p>Returns the array of middlewares not including the deleted …\n",null,0],["delete!","String","ruby/classes/String.html#method-i-delete-21","(*args)","<p>Like String#delete, but modifies <code>self</code> in place. Returns <code>self</code> if any changes were made, <code>nil</code> otherwise. …\n",null,1],["delete?","Set","ruby/classes/Set.html#method-i-delete-3F","(o)","<p>Deletes the given object from the set and returns self. If the\nobject is not in the set, returns nil. ...\n",null,1],["delete_all","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-delete_all","(dependent = nil)","<p>Deletes all the records from the collection according to the strategy specified by the <code>:dependent</code> option. …\n",null,0],["delete_all","ActiveRecord::Batches::BatchEnumerator","rails/classes/ActiveRecord/Batches/BatchEnumerator.html#method-i-delete_all","()","<p>Deletes records in batches. Returns the total number of rows affected.\n\n<pre><code>Person.in_batches.delete_all\n</code></pre>\n<p>See …\n",null,0],["delete_all","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-delete_all","()","<p>Deletes the records without instantiating the records first, and hence not calling the #destroy method …\n",null,0],["delete_at","Array","ruby/classes/Array.html#method-i-delete_at","(p1)","<p>Deletes an element from <code>self</code>, per the given Integer <code>index</code>.\n<p>When <code>index</code> is non-negative, deletes the element …\n",null,1],["delete_at","Reline::History","ruby/classes/Reline/History.html#method-i-delete_at","(index)","",null,1],["delete_by","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-delete_by","(*args)","<p>Finds and deletes all records matching the specified conditions. This is short-hand for <code>relation.where(condition).delete_all</code> …\n",null,0],["delete_char","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-delete_char","(key)","",null,1],["delete_char_or_list","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-delete_char_or_list","(key)","",null,1],["delete_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-delete_entry","(key)","",null,0],["delete_field","OpenStruct","ruby/classes/OpenStruct.html#method-i-delete_field","(name, &block)","<p>Removes the named field from the object and returns the value the field contained if it was defined. …\n",null,1],["delete_header","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-delete_header","(key)","",null,0],["delete_if","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-delete_if","(&block)","",null,0],["delete_if","Mime::Mimes","rails/classes/Mime/Mimes.html#method-i-delete_if","()","",null,0],["delete_if","Array","ruby/classes/Array.html#method-i-delete_if","()","<p>Removes each element in <code>self</code> for which the block returns a truthy value; returns <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, ...\n</code></pre>\n",null,1],["delete_if","CSV::Row","ruby/classes/CSV/Row.html#method-i-delete_if","(&block)","<p>Removes fields from <code>self</code> as selected by the block; returns <code>self</code>.\n<p>Removes each field for which the block …\n",null,1],["delete_if","CSV::Table","ruby/classes/CSV/Table.html#method-i-delete_if","(&block)","<p>Removes rows or columns for which the block returns a truthy value; returns <code>self</code>.\n<p>Removes rows when the …\n",null,1],["delete_if","ENV","ruby/classes/ENV.html#method-c-delete_if","()","<p>Yields each environment variable name and its value as a 2-element Array, deleting each environment variable …\n",null,1],["delete_if","Hash","ruby/classes/Hash.html#method-i-delete_if","()","<p>If a block given, calls the block with each key-value pair; deletes each entry for which the block returns …\n",null,1],["delete_if","Set","ruby/classes/Set.html#method-i-delete_if","()","<p>Deletes every element of the set for which block evaluates to\ntrue, and returns self. Returns an enumerator ...\n",null,1],["delete_if","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-delete_if","()","<p>Calls the given block once for each <code>key</code>, <code>value</code> pair in the database. Deletes all entries for which the …\n",null,1],["delete_key","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-delete_key","(name, recursive = false)","<p>Delete a subkey named name and all its values.\n<p>If recursive is false, the subkey must not have subkeys. …\n",null,1],["delete_legacy_args","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-delete_legacy_args","(args)","<p>Removes legacy rdoc arguments from <code>args</code>\n",null,1],["delete_legacy_args","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-delete_legacy_args","(args)","<p>Removes legacy rdoc arguments from <code>args</code>\n",null,1],["delete_matched","ActiveSupport::Cache::FileStore","rails/classes/ActiveSupport/Cache/FileStore.html#method-i-delete_matched","(matcher, options = nil)","",null,0],["delete_matched","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-delete_matched","(matcher, options = nil)","<p>Deletes cache entries if the cache key matches a given pattern.\n",null,0],["delete_matched","ActiveSupport::Cache::NullStore","rails/classes/ActiveSupport/Cache/NullStore.html#method-i-delete_matched","(matcher, options = nil)","",null,0],["delete_matched","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-delete_matched","(matcher, options = nil)","<p>Cache Store API implementation.\n<p>Supports Redis KEYS glob patterns:\n\n<pre><code>h?llo matches hello, hallo and hxllo ...\n</code></pre>\n",null,0],["delete_matched","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-delete_matched","(matcher, options = nil)","<p>Deletes all entries with keys matching the pattern.\n<p>Options are passed to the underlying cache implementation. …\n",null,0],["delete_multi","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-delete_multi","(names, options = nil)","<p>Deletes multiple entries in the cache.\n<p>Options are passed to the underlying cache implementation.\n",null,0],["delete_observer","Observable","ruby/classes/Observable.html#method-i-delete_observer","(observer)","<p>Remove <code>observer</code> as an observer on this object so that it will no longer receive notifications.\n<p><code>observer</code> … &mdash; ",null,1],["delete_observers","Observable","ruby/classes/Observable.html#method-i-delete_observers","()","<p>Remove all observers associated with this object.\n",null,1],["delete_prefix","String","ruby/classes/String.html#method-i-delete_prefix","(p1)","<p>Returns a copy of <code>self</code> with leading substring <code>prefix</code> removed:\n\n<pre><code>&#39;hello&#39;.delete_prefix(&#39;hel&#39;)      # =&gt; &quot;lo&quot; ...\n</code></pre>\n",null,1],["delete_prefix!","String","ruby/classes/String.html#method-i-delete_prefix-21","(p1)","<p>Like String#delete_prefix, except that <code>self</code> is modified in place. Returns <code>self</code> if the prefix is removed, …\n",null,1],["delete_prefixed","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-delete_prefixed","(prefix)","<p>Delete files at keys starting with the <code>prefix</code>.\n",null,0],["delete_prefixed","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-delete_prefixed","(prefix)","",null,0],["delete_prefixed","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-delete_prefixed","(prefix)","",null,0],["delete_prefixed","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-delete_prefixed","(prefix)","",null,0],["delete_prefixed","ActiveStorage::Service::MirrorService","rails/classes/ActiveStorage/Service/MirrorService.html#method-i-delete_prefixed","(prefix)","<p>Delete files at keys starting with the <code>prefix</code> on all services.\n",null,0],["delete_prefixed","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-delete_prefixed","(prefix)","",null,0],["delete_session","ActionDispatch::Session::CacheStore","rails/classes/ActionDispatch/Session/CacheStore.html#method-i-delete_session","(env, sid, options)","<p>Remove a session from the cache.\n",null,0],["delete_session","ActionDispatch::Session::CookieStore","rails/classes/ActionDispatch/Session/CookieStore.html#method-i-delete_session","(req, session_id, options)","",null,0],["delete_suffix","String","ruby/classes/String.html#method-i-delete_suffix","(p1)","<p>Returns a copy of <code>self</code> with trailing substring <code>suffix</code> removed:\n\n<pre><code>&#39;hello&#39;.delete_suffix(&#39;llo&#39;)      # =&gt; ...\n</code></pre>\n",null,1],["delete_suffix!","String","ruby/classes/String.html#method-i-delete_suffix-21","(p1)","<p>Like String#delete_suffix, except that <code>self</code> is modified in place. Returns <code>self</code> if the suffix is removed, …\n",null,1],["delete_text","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-delete_text","(start = nil, length = nil)","",null,1],["delete_unless_alive","Rinda::TupleBag","ruby/classes/Rinda/TupleBag.html#method-i-delete_unless_alive","()","<p>Delete tuples which dead tuples from the TupleBag, returning the deleted tuples.\n",null,1],["delete_value","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-delete_value","(name)","<p>Delete a registry value named name. We can not delete the ‘default’ value.\n",null,1],["deleted?","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-deleted-3F","()","",null,1],["deliver","ActionMailer::LogSubscriber","rails/classes/ActionMailer/LogSubscriber.html#method-i-deliver","(event)","<p>An email was delivered.\n",null,0],["deliver_later","ActionMailer::MessageDelivery","rails/classes/ActionMailer/MessageDelivery.html#method-i-deliver_later","(options = {})","<p>Enqueues the email to be delivered through Active Job. When the job runs it will send the email using …\n",null,0],["deliver_later!","ActionMailer::MessageDelivery","rails/classes/ActionMailer/MessageDelivery.html#method-i-deliver_later-21","(options = {})","<p>Enqueues the email to be delivered through Active Job. When the job runs it will send the email using …\n",null,0],["deliver_now","ActionMailer::MessageDelivery","rails/classes/ActionMailer/MessageDelivery.html#method-i-deliver_now","()","<p>Delivers an email:\n\n<pre><code>Notifier.welcome(User.first).deliver_now\n</code></pre>\n",null,0],["deliver_now!","ActionMailer::MessageDelivery","rails/classes/ActionMailer/MessageDelivery.html#method-i-deliver_now-21","()","<p>Delivers an email without checking <code>perform_deliveries</code> and <code>raise_delivery_errors</code>, so use with caution. …\n",null,0],["demodulize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-demodulize","(path)","<p>Removes the module part from the expression in the string.\n\n<pre><code>demodulize(&#39;ActiveSupport::Inflector::Inflections&#39;) ...\n</code></pre>\n",null,0],["demodulize","String","rails/classes/String.html#method-i-demodulize","()","<p>Removes the module part from the constant expression in the string.\n\n<pre><code>&#39;ActiveSupport::Inflector::Inflections&#39;.demodulize ...\n</code></pre>\n",null,0],["denominator","Complex","ruby/classes/Complex.html#method-i-denominator","()","<p>Returns the denominator of <code>self</code>, which is the least common multiple of <code>self.real.denominator</code> and <code>self.imag.denominator</code> …\n",null,1],["denominator","Float","ruby/classes/Float.html#method-i-denominator","()","<p>Returns the denominator (always positive).  The result is machine dependent.\n<p>See also Float#numerator …\n",null,1],["denominator","Integer","ruby/classes/Integer.html#method-i-denominator","()","<p>Returns <code>1</code>.\n",null,1],["denominator","Numeric","ruby/classes/Numeric.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n",null,1],["denominator","Rational","ruby/classes/Rational.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n\n<pre><code>Rational(7).denominator             #=&gt; 1\nRational(7, 1).denominator ...\n</code></pre>\n",null,1],["depend_rules","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-depend_rules","(depend)","<p>Processes the data contents of the “depend” file.  Each line of this file is expected to be …\n",null,1],["dependencies","Gem::Resolver::IndexSpecification","ruby/classes/Gem/Resolver/IndexSpecification.html#method-i-dependencies","()","<p>The dependencies of the gem for this specification\n",null,1],["dependencies","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-dependencies","()","<p>The dependencies of the gem for this specification\n",null,1],["dependencies","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-dependencies","()","<p>A list of Gem::Dependency objects this gem depends on.\n<p>Use #add_dependency or #add_development_dependency …\n",null,1],["dependencies_for","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-dependencies_for","(specification)","",null,1],["dependency","Gem::ImpossibleDependenciesError","ruby/classes/Gem/ImpossibleDependenciesError.html#method-i-dependency","()","",null,1],["dependency_digest","ActionView::Digestor::Node","rails/classes/ActionView/Digestor/Node.html#method-i-dependency_digest","(finder, stack)","",null,0],["dependency_order","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-dependency_order","()","<p>Return a list of the gem specifications in the dependency list, sorted in order so that no gemspec in …\n",null,1],["dependent_gems","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-dependent_gems","(check_dev=true)","<p>Return a list of all gems that have a dependency on this gemspec.  The list is structured with entries …\n",null,1],["dependent_specs","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-dependent_specs","()","<p>Returns all specs that matches this spec’s runtime dependencies.\n",null,1],["deprecate","ActiveStorage::Attached::Model","rails/classes/ActiveStorage/Attached/Model.html#method-i-deprecate","(action)","",null,0],["deprecate","Module","rails/classes/Module.html#method-i-deprecate","(*method_names)","\n<pre><code>deprecate :foo\ndeprecate bar: &#39;message&#39;\ndeprecate :foo, :bar, baz: &#39;warning!&#39;, qux: &#39;gone!&#39;\n</code></pre>\n<p>You can also …\n",null,0],["deprecate","Gem::Deprecate","ruby/classes/Gem/Deprecate.html#method-i-deprecate","(name, repl, year, month)","<p>Simple deprecation method that deprecates <code>name</code> by wrapping it up in a dummy method. It warns on each …\n",null,1],["deprecate_constant","ActiveSupport::Deprecation::DeprecatedConstantAccessor","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantAccessor.html#method-i-deprecate_constant","(const_name, new_constant, message: nil, deprecator: ActiveSupport::Deprecation.instance)","",null,0],["deprecate_constant","Module","ruby/classes/Module.html#method-i-deprecate_constant","(*args)","<p>Makes a list of existing constants deprecated. Attempt to refer to them will produce a warning.\n\n<pre><code>module ...\n</code></pre>\n",null,1],["deprecate_methods","ActiveSupport::Deprecation::MethodWrapper","rails/classes/ActiveSupport/Deprecation/MethodWrapper.html#method-i-deprecate_methods","(target_module, *method_names)","<p>Declare that a method has been deprecated.\n\n<pre><code>class Fred\n  def aaa; end\n  def bbb; end\n  def ccc; end\n  def ...\n</code></pre>\n",null,0],["deprecate_option","Gem::Command","ruby/classes/Gem/Command.html#method-i-deprecate_option","(name, version: nil, extra_msg: nil)","<p>Mark a command-line option as deprecated, and optionally specify a deprecation horizon.\n<p>Note that with …\n",null,1],["deprecated?","Gem::Command","ruby/classes/Gem/Command.html#method-i-deprecated-3F","()","",null,1],["deprecated_exception_id?","Gem::Licenses","ruby/classes/Gem/Licenses.html#method-c-deprecated_exception_id-3F","(license)","",null,1],["deprecated_license_id?","Gem::Licenses","ruby/classes/Gem/Licenses.html#method-c-deprecated_license_id-3F","(license)","",null,1],["deprecation_warning","ActiveSupport::Deprecation::Reporting","rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-deprecation_warning","(deprecated_method_name, message = nil, caller_backtrace = nil)","",null,0],["deprecation_warning","Gem::Commands::QueryCommand","ruby/classes/Gem/Commands/QueryCommand.html#method-i-deprecation_warning","()","",null,1],["deprep","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-deprep","(otio)","",null,1],["deprep","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-deprep","(otio)","",null,1],["deprep","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-deprep","(otio)","",null,1],["depth","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-depth","()","<p>This integer returns the current depth of data structure nesting.\n",null,1],["depth=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-depth-3D","(p1)","<p>This sets the maximum level of data structure nesting in the generated JSON to the integer depth, max_nesting …\n",null,1],["deq","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-deq","(non_block = false, timeout: nil)","",null,1],["deq","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-deq","(non_block = false, timeout: nil)","",null,1],["derive","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-derive","(p1)","<p>Derives a shared secret from <em>pkey</em> and <em>peer_pkey</em>. <em>pkey</em> must contain the private components, <em>peer_pkey</em> …\n",null,1],["derive_from","ActiveRecord::Encryption::Key","rails/classes/ActiveRecord/Encryption/Key.html#method-c-derive_from","(password)","",null,0],["derive_key_from","ActiveRecord::Encryption::KeyGenerator","rails/classes/ActiveRecord/Encryption/KeyGenerator.html#method-i-derive_key_from","(password, length: key_length)","<p>Derives a key from the given password. The key will have a size in bytes of <code>:length</code> (configured <code>Cipher</code> …\n",null,0],["desc","Rails::API::Task","rails/classes/Rails/API/Task.html#method-i-desc","(description)","<p>Hack, ignore the desc calls performed by the original initializer.\n",null,0],["desc","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-desc","(usage = nil, description = nil, options = {})","<p>Tries to get the description from a USAGE file one folder above the command root.\n",null,0],["desc","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-desc","(description = nil)","<p>Tries to get the description from a USAGE file one folder above the source root otherwise uses a default …\n",null,0],["descend","Pathname","ruby/classes/Pathname.html#method-i-descend","()","<p>Iterates over and yields a new Pathname object for each element in the given path in descending order. …\n",null,1],["descendants","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-i-descendants","()","",null,0],["descendants","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-c-descendants","(klass)","",null,0],["descendants","Class","rails/classes/Class.html#method-i-descendants","()","<p>Returns an array with all classes that are &lt; than its receiver.\n\n<pre><code>class C; end\nC.descendants # =&gt; [] ...\n</code></pre>\n",null,0],["descends_from_active_record?","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-descends_from_active_record-3F","()","<p>Returns <code>true</code> if this does not need STI type condition. Returns <code>false</code> if STI type condition needs to be …\n",null,0],["describe","Prism::Pack::Directive","ruby/classes/Prism/Pack/Directive.html#method-i-describe","()","<p>Provide a human-readable description of the directive.\n",null,1],["describe","Prism::Pack::Format","ruby/classes/Prism/Pack/Format.html#method-i-describe","()","<p>Provide a human-readable description of the format.\n",null,1],["description","Gem::Command","ruby/classes/Gem/Command.html#method-i-description","()","<p>Override to display a longer description of what this command does.\n",null,1],["description","Gem::Commands::UnpackCommand","ruby/classes/Gem/Commands/UnpackCommand.html#method-i-description","()","",null,1],["description=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-description-3D","(str)","<p>A detailed description of this gem.  See also #summary\n",null,1],["deserialize","ActiveJob::Arguments","rails/classes/ActiveJob/Arguments.html#method-i-deserialize","(arguments)","<p>Deserializes a set of arguments. Intrinsic types that can safely be deserialized without mutation are …\n",null,0],["deserialize","ActiveJob::Core","rails/classes/ActiveJob/Core.html#method-i-deserialize","(job_data)","<p>Attaches the stored job data to the current instance. Receives a hash returned from <code>serialize</code>\n<p>Examples …\n",null,0],["deserialize","ActiveJob::Core::ClassMethods","rails/classes/ActiveJob/Core/ClassMethods.html#method-i-deserialize","(job_data)","<p>Creates a new job instance from a hash created with <code>serialize</code>\n",null,0],["deserialize","ActiveJob::Serializers::ObjectSerializer","rails/classes/ActiveJob/Serializers/ObjectSerializer.html#method-i-deserialize","(json)","<p>Deserializes an argument from a JSON primitive type.\n",null,0],["deserialize","ActiveJob::Serializers::RangeSerializer","rails/classes/ActiveJob/Serializers/RangeSerializer.html#method-i-deserialize","(hash)","",null,0],["deserialize","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-deserialize","(value)","<p>Converts a value from database input to the appropriate ruby type. The return value of this method will …\n",null,0],["deserialize","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-deserialize","(value)","<p>Converts a value from database input to the appropriate ruby type. The return value of this method will …\n",null,0],["deserialize","ActiveRecord::Encryption::EncryptedAttributeType","rails/classes/ActiveRecord/Encryption/EncryptedAttributeType.html#method-i-deserialize","(value)","",null,0],["deserialize","ActiveRecord::Type::Json","rails/classes/ActiveRecord/Type/Json.html#method-i-deserialize","(value)","",null,0],["destination_encoding","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an Encoding object.\n",null,1],["destination_encoding","Encoding::InvalidByteSequenceError","ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,1],["destination_encoding","Encoding::UndefinedConversionError","ruby/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,1],["destination_encoding_name","Encoding::InvalidByteSequenceError","ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,1],["destination_encoding_name","Encoding::UndefinedConversionError","ruby/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,1],["destroy","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-destroy","(*records)","<p>Destroys the <code>records</code> supplied and removes them from the collection. This method will <em>always</em> remove record …\n",null,0],["destroy","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-destroy","()","<p>Deletes the record in the database and freezes this instance to reflect that no changes should be made …\n",null,0],["destroy","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-destroy","(id)","<p>Destroy an object (or multiple objects) that has the given id. The object is instantiated first, therefore …\n",null,0],["destroy","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-i-destroy","()","<p>DELETE destroy\n",null,0],["destroy!","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-destroy-21","()","<p>Deletes the record in the database and freezes this instance to reflect that no changes should be made …\n",null,0],["destroy_all","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-destroy_all","()","<p>Deletes the records of the collection directly from the database ignoring the <code>:dependent</code> option. Records …\n",null,0],["destroy_all","ActiveRecord::Batches::BatchEnumerator","rails/classes/ActiveRecord/Batches/BatchEnumerator.html#method-i-destroy_all","()","<p>Destroys records in batches.\n\n<pre><code>Person.where(&quot;age &lt; 10&quot;).in_batches.destroy_all\n</code></pre>\n<p>See Relation#destroy_all for …\n",null,0],["destroy_all","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-destroy_all","()","<p>Destroys the records by instantiating each record and calling its #destroy method. Each object’s …\n",null,0],["destroy_association_async_job","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-destroy_association_async_job","","<p>Specifies the job used to destroy associations in the background\n",null,0],["destroy_by","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-destroy_by","(*args)","<p>Finds and destroys all records matching the specified conditions. This is short-hand for <code>relation.where(condition).destroy_all</code> …\n",null,0],["destroyed?","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-destroyed-3F","()","<p>Returns true if this object has been destroyed, otherwise returns false.\n",null,0],["destroyed_by_association","ActiveRecord::AutosaveAssociation","rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-destroyed_by_association","()","<p>Returns the association for the parent being destroyed.\n<p>Used to avoid updating the counter cache unnecessarily. …\n",null,0],["destroyed_by_association=","ActiveRecord::AutosaveAssociation","rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-destroyed_by_association-3D","(reflection)","<p>Records the association that is being destroyed and destroying this record in the process.\n",null,0],["detach","ActionCable::Connection::StreamEventLoop","rails/classes/ActionCable/Connection/StreamEventLoop.html#method-i-detach","(io, stream)","",null,0],["detach","ActiveStorage::Attached::Many","rails/classes/ActiveStorage/Attached/Many.html#method-i-detach","","<p>Deletes associated attachments without purging them, leaving their respective blobs in place.\n",null,0],["detach","ActiveStorage::Attached::One","rails/classes/ActiveStorage/Attached/One.html#method-i-detach","","<p>Deletes the attachment without purging it, leaving its blob in place.\n",null,0],["detach","Process","ruby/classes/Process.html#method-c-detach","(p1)","<p>Avoids the potential for a child process to become a zombie process. Process.detach prevents this by …\n",null,1],["detach_from","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-c-detach_from","(namespace, notifier = ActiveSupport::Notifications)","<p>Detach the subscriber from a namespace.\n",null,0],["detached","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-detached","()","",null,1],["detached=","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-detached-3D","(p1)","",null,1],["detached?","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-detached-3F","()","",null,1],["detail","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-i-detail","()","",null,0],["detail_args_for","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-detail_args_for","(options)","<p>Compute details hash and key according to user options (e.g. passed from #render).\n",null,0],["detailed_message","DidYouMean::Correctable","ruby/classes/DidYouMean/Correctable.html#method-i-detailed_message","(highlight: true, did_you_mean: true, **)","",null,1],["detailed_message","ErrorHighlight::CoreExt","ruby/classes/ErrorHighlight/CoreExt.html#method-i-detailed_message","(highlight: false, error_highlight: true, **)","",null,1],["detailed_message","Exception","ruby/classes/Exception.html#method-i-detailed_message","(p1 = {})","<p>Processes a string returned by #message.\n<p>It may add the class name of the exception to the end of the …\n",null,1],["detailed_message","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-i-detailed_message","(highlight: true, syntax_suggest: true, **kwargs)","",null,1],["details","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-i-details","()","<p>Returns the error details.\n\n<pre><code>error = ActiveModel::Error.new(person, :name, :too_short, count: 5)\nerror.details ...\n</code></pre>\n",null,0],["details","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-details","()","<p>Returns a Hash of attributes with an array of their error details.\n",null,0],["details_for_lookup","ActionView::ViewPaths","rails/classes/ActionView/ViewPaths.html#method-i-details_for_lookup","()","",null,0],["detect","Enumerable","ruby/classes/Enumerable.html#method-i-detect","(*args)","<p>Returns the first element for which the block returns a truthy value.\n<p>With a block given, calls the block …\n",null,1],["detect","Gem::SpecFetcher","ruby/classes/Gem/SpecFetcher.html#method-i-detect","(type=:complete)","<p>Return all gem name tuples who’s names match <code>obj</code>\n",null,1],["detect_encoding","RDoc::Encoding","ruby/classes/RDoc/Encoding.html#method-c-detect_encoding","(string)","<p>Detects the encoding of <code>string</code> based on the magic comment\n",null,1],["detect_invalid_blocks","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-detect_invalid_blocks","()","<p>Given that we know our syntax error exists somewhere in our frontier, we want to find the smallest possible …\n",null,1],["deterministic?","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-deterministic-3F","()","",null,0],["deterministic_encrypted_attributes","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-deterministic_encrypted_attributes","()","<p>Returns the list of deterministic encryptable attributes in the model class.\n",null,0],["dev","File::Stat","ruby/classes/File/Stat.html#method-i-dev","()","<p>Returns an integer representing the device on which <em>stat</em> resides.\n\n<pre><code>File.stat(&quot;testfile&quot;).dev   #=&gt; 774\n</code></pre>\n",null,1],["dev_major","File::Stat","ruby/classes/File/Stat.html#method-i-dev_major","()","<p>Returns the major part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).dev_major   #=&gt; 2\nFile.stat(&quot;/dev/tty&quot;).dev_major ...\n</code></pre>\n",null,1],["dev_minor","File::Stat","ruby/classes/File/Stat.html#method-i-dev_minor","()","<p>Returns the minor part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).dev_minor   #=&gt; 1\nFile.stat(&quot;/dev/tty&quot;).dev_minor ...\n</code></pre>\n",null,1],["development.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/environments/development_rb_tt.html","","<p>require “active_support/core_ext/integer/time”\n<p>Rails.application.configure do\n\n<pre><code># Settings specified ...\n</code></pre>\n",null,0],["development?","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-development-3F","()","<p>Is this activation request for a development dependency?\n",null,1],["development?","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-development-3F","()","<p>Is this dependency a development dependency?\n",null,1],["development_dependencies","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-development_dependencies","()","<p>List of dependencies that are used for development\n",null,1],["dfdxi","Jacobian","ruby/classes/Jacobian.html#method-i-dfdxi","(f,fx,x,i)","<p>Computes the derivative of <code>f[i]</code> at <code>x[i]</code>. <code>fx</code> is the value of <code>f</code> at <code>x</code>.\n",null,1],["dh_compute_key","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-dh_compute_key","(pubkey)","<p>Derives a shared secret by ECDH. <em>pubkey</em> must be an instance of OpenSSL::PKey::EC::Point and must belong …\n",null,1],["dialog","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-dialog","()","",null,1],["dialog_proc","Reline::Core","ruby/classes/Reline/Core.html#method-i-dialog_proc","(name_sym)","",null,1],["dictionary_without_leaves","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-i-dictionary_without_leaves","()","",null,1],["difference","Array","ruby/classes/Array.html#method-i-difference","(*args)","<p>Returns a new Array containing only those elements from <code>self</code> that are not found in any of the Arrays …\n",null,1],["difference","Set","ruby/classes/Set.html#method-i-difference","(enum)","",null,1],["dig","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-dig","(*keys)","<p>Extracts the nested parameter from the given <code>keys</code> by calling <code>dig</code> at each step. Returns <code>nil</code> if any intermediate …\n",null,0],["dig","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dig","(*args)","<p>Same as <code>Hash#dig</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["dig","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dig","(*args)","<p>Same as <code>Hash#dig</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["dig","Array","ruby/classes/Array.html#method-i-dig","(*args)","<p>Finds and returns the object in nested objects that is specified by <code>index</code> and <code>identifiers</code>. The nested …\n",null,1],["dig","CSV::Row","ruby/classes/CSV/Row.html#method-i-dig","(index_or_header, *indexes)","<p>Finds and returns the object in nested object that is specified by <code>index_or_header</code> and <code>specifiers</code>.\n<p>The …\n",null,1],["dig","CSV::Table","ruby/classes/CSV/Table.html#method-i-dig","(index_or_header, *index_or_headers)","<p>Extracts the nested value specified by the sequence of <code>index</code> or <code>header</code> objects by calling dig at each …\n",null,1],["dig","Hash","ruby/classes/Hash.html#method-i-dig","(*args)","<p>Finds and returns the object in nested objects that is specified by <code>key</code> and <code>identifiers</code>. The nested objects …\n",null,1],["dig","OpenStruct","ruby/classes/OpenStruct.html#method-i-dig","(name, *names)","<p>Finds and returns the object in nested objects that is specified by <code>name</code> and <code>identifiers</code>. The nested …\n",null,1],["dig","Struct","ruby/classes/Struct.html#method-i-dig","(*args)","<p>Finds and returns an object among nested objects. The nested objects may be instances of various classes. …\n",null,1],["dig_methods","","ruby/files/ruby/doc/dig_methods_rdoc.html","","<p>Dig Methods\n<p>Ruby’s <code>dig</code> methods are useful for accessing nested data structures.\n<p>Consider this data: …\n",null,1],["dig_perfect_match_proc=","Reline::Core","ruby/classes/Reline/Core.html#method-i-dig_perfect_match_proc-3D","(p)","",null,1],["digest","ActionView::Digestor","rails/classes/ActionView/Digestor.html#method-c-digest","(name:, format: nil, finder:, dependencies: nil)","<p>Supported options:\n<p><code>name</code>         - Template name\n<p><code>format</code>       - Template format\n",null,0],["digest","ActionView::Digestor::Injected","rails/classes/ActionView/Digestor/Injected.html#method-i-digest","(finder, _ = [])","",null,0],["digest","ActionView::Digestor::Missing","rails/classes/ActionView/Digestor/Missing.html#method-i-digest","(finder, _ = [])","",null,0],["digest","ActionView::Digestor::Node","rails/classes/ActionView/Digestor/Node.html#method-i-digest","(finder, stack = [])","",null,0],["digest","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-i-digest","()","",null,0],["digest","Digest::Class","ruby/classes/Digest/Class.html#method-c-digest","(*args)","<p>Returns the hash value of a given <em>string</em>.  This is equivalent to Digest::Class.new(*parameters).digest(string), …\n",null,1],["digest","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-digest","(p1 = v1)","<p>If none is given, returns the resulting hash value of the digest, keeping the digest’s state.\n<p>If a …\n",null,1],["digest","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-c-digest","(name, data)","<p>Return the hash value computed with <em>name</em> Digest. <em>name</em> is either the long name or short name of a supported …\n",null,1],["digest","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-digest","(p1)","<p>Returns a new instance of OpenSSL::Digest by <em>name</em>.\n<p>Will raise an EngineError if the digest is unavailable. …\n",null,1],["digest","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-c-digest","(digest, key, data)","<p>Returns the authentication code as a binary string. The <em>digest</em> parameter specifies the digest algorithm …\n",null,1],["digest","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-digest","()","<p>Returns the authentication code an instance represents as a binary string.\n<p>Example\n\n<pre><code>instance = OpenSSL::HMAC.new(&#39;key&#39;, ...\n</code></pre>\n",null,1],["digest!","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-digest-21","()","<p>Returns the resulting hash value and resets the digest to the initial state.\n",null,1],["digest_length","Digest::Base","ruby/classes/Digest/Base.html#method-i-digest_length","()","<p>Return the length of the hash value in bytes.\n",null,1],["digest_length","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-digest_length","()","<p>Returns the length of the hash value of the digest.\n<p>This method should be overridden by each implementation …\n",null,1],["digest_length","Digest::SHA2","ruby/classes/Digest/SHA2.html#method-i-digest_length","()","<p>Return the length of the hash value (the digest) in bytes.\n\n<pre><code>Digest::SHA256.new.digest_length * 8\n# =&gt; 256 ...\n</code></pre>\n",null,1],["digest_length","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-i-digest_length","()","<p>Returns the output size of the digest, i.e. the length in bytes of the final message digest result.\n<p>Example …\n",null,1],["digits","Integer","ruby/classes/Integer.html#method-i-digits","(*args)","<p>Returns an array of integers representing the <code>base</code>-radix digits of <code>self</code>; the first element of the array …\n",null,1],["dimensions","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-i-dimensions","()","",null,1],["dir","Gem","ruby/classes/Gem.html#method-c-dir","()","<p>The path where gems are to be installed.\n",null,1],["dir","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-dir","()","<p>Return the target directory where the gem is to be installed. This directory is not guaranteed to be …\n",null,1],["dir_config","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-dir_config","(target, idefault=nil, ldefault=nil)","<p>Sets a <code>target</code> name that the user can then use to configure various “with” options with on the …\n",null,1],["direct","ActionDispatch::Routing::Mapper::CustomUrls","rails/classes/ActionDispatch/Routing/Mapper/CustomUrls.html#method-i-direct","(name, options = {}, &block)","<p>Define custom URL helpers that will be added to the application’s routes. This allows you to override …\n",null,0],["direct_ancestors","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-direct_ancestors","()","<p>Ancestors of this class or module only\n",null,1],["direct_ancestors","RDoc::NormalClass","ruby/classes/RDoc/NormalClass.html#method-i-direct_ancestors","()","",null,1],["direct_descendants","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-c-direct_descendants","(klass)","",null,0],["direct_descendants","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-i-direct_descendants","()","",null,0],["direct_upload.js","","rails/files/rails/activestorage/app/javascript/activestorage/direct_upload_js.html","","<p>import { FileChecksum } from “./file_checksum” import { BlobRecord } from “./blob_record” …\n",null,0],["direct_upload_controller.js","","rails/files/rails/activestorage/app/javascript/activestorage/direct_upload_controller_js.html","","<p>import { DirectUpload } from “./direct_upload” import { dispatchEvent } from “./helpers” …\n",null,0],["direct_uploads_controller.js","","rails/files/rails/activestorage/app/javascript/activestorage/direct_uploads_controller_js.html","","<p>import { DirectUploadController } from “./direct_upload_controller” import { findElements, …\n",null,0],["directories","Rails::SourceAnnotationExtractor::Annotation","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html#method-c-directories","()","",null,0],["directory?","File","ruby/classes/File.html#method-c-directory-3F","(p1)","<p>With string <code>object</code> given, returns <code>true</code> if <code>path</code> is a string path leading to a directory, or to a symbolic …\n",null,1],["directory?","File::Stat","ruby/classes/File/Stat.html#method-i-directory-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a directory, <code>false</code> otherwise.\n\n<pre><code>File.stat(&quot;testfile&quot;).directory?   #=&gt; false\nFile.stat(&quot;.&quot;).directory? ...\n</code></pre>\n",null,1],["directory?","FileTest","ruby/classes/FileTest.html#method-i-directory-3F","(p1)","<p>With string <code>object</code> given, returns <code>true</code> if <code>path</code> is a string path leading to a directory, or to a symbolic …\n",null,1],["directory?","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-directory-3F","()","<p>Is this tar entry a directory?\n",null,1],["directory?","Pathname","ruby/classes/Pathname.html#method-i-directory-3F","()","<p>See FileTest.directory?.\n",null,1],["dirname","File","ruby/classes/File.html#method-c-dirname","(*args)","<p>Returns all components of the filename given in <em>file_name</em> except the last one (after first stripping …\n",null,1],["dirname","Pathname","ruby/classes/Pathname.html#method-i-dirname","()","<p>Returns all but the last component of the path.\n<p>See File.dirname.\n",null,1],["dirs","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-dirs","()","<p>Return the directories that Specification uses to find specs.\n",null,1],["dirs=","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-dirs-3D","(dirs)","<p>Set the directories that Specification uses to find specs. Setting this resets the list of known specs. …\n",null,1],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-c-dirties_query_cache","(base, *method_names)","",null,0],["disable","GC","ruby/classes/GC.html#method-c-disable","()","<p>Disables garbage collection, returning <code>true</code> if garbage collection was already disabled.\n\n<pre><code>GC.disable   #=&gt; ...\n</code></pre>\n",null,1],["disable","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-disable","()","<p>Stops the GC profiler.\n",null,1],["disable","TracePoint","ruby/classes/TracePoint.html#method-i-disable","()","<p>Deactivates the trace\n<p>Return true if trace was enabled. Return false if trace was disabled.\n\n<pre><code>trace.enabled? ...\n</code></pre>\n",null,1],["disable.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/features/disable_coffee.html","","<p>#= require_tree ../utils\n<p>{ matches, getData, setData, stopEverything, formElements, isContentEditable …\n",null,0],["disable_cache","ActionView::LookupContext::DetailsCache","rails/classes/ActionView/LookupContext/DetailsCache.html#method-i-disable_cache","()","<p>Temporary skip passing the details_key forward.\n",null,0],["disable_close","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-disable_close","()","<p>Disable a call to dlclose() when this handle is garbage collected.\n",null,1],["disable_ddl_transaction!","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-c-disable_ddl_transaction-21","()","<p>Disable the transaction wrapping this migration. You can still create your own transactions even after …\n",null,0],["disable_extension","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disable_extension","(name)","<p>This is meant to be implemented by the adapters that support extensions\n",null,0],["disable_extension","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-disable_extension","(name)","",null,0],["disable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-disable_query_cache-21","()","",null,0],["disable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache::ConnectionPoolConfiguration","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache/ConnectionPoolConfiguration.html#method-i-disable_query_cache-21","()","",null,0],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disable_referential_integrity","()","<p>Override to turn off referential integrity while executing <code>&amp;block</code>.\n",null,0],["disallowed_behavior","ActiveSupport::Deprecation::Behavior","rails/classes/ActiveSupport/Deprecation/Behavior.html#method-i-disallowed_behavior","()","<p>Returns the current behavior for disallowed deprecations or if one isn’t set, defaults to <code>:raise</code> …\n",null,0],["disallowed_behavior=","ActiveSupport::Deprecation::Behavior","rails/classes/ActiveSupport/Deprecation/Behavior.html#method-i-disallowed_behavior-3D","(behavior)","<p>Sets the behavior for disallowed deprecations (those configured by ActiveSupport::Deprecation.disallowed_warnings= …\n",null,0],["disallowed_warnings","ActiveSupport::Deprecation::Disallowed","rails/classes/ActiveSupport/Deprecation/Disallowed.html#method-i-disallowed_warnings","()","<p>Returns the configured criteria used to identify deprecation messages which should be treated as disallowed. …\n",null,0],["disasm","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-disasm","()","<p>Returns the instruction sequence as a <code>String</code> in human readable form.\n\n<pre><code>puts RubyVM::InstructionSequence.compile(&#39;1 ...\n</code></pre>\n",null,1],["disasm","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-disasm","(p1)","<p>Takes <code>body</code>, a Method or Proc object, and returns a String with the human readable instructions for <code>body</code> …\n",null,1],["disassemble","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-disassemble","()","<p>Returns the instruction sequence as a <code>String</code> in human readable form.\n\n<pre><code>puts RubyVM::InstructionSequence.compile(&#39;1 ...\n</code></pre>\n",null,1],["disassemble","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-disassemble","(p1)","<p>Takes <code>body</code>, a Method or Proc object, and returns a String with the human readable instructions for <code>body</code> …\n",null,1],["discard","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-discard","(k = nil)","<p>Marks the entire flash or a single flash entry to be discarded by the end of the current action:\n\n<pre><code>flash.discard ...\n</code></pre>\n",null,0],["discard!","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-discard-21","()","<p>Immediately forget this connection ever existed. Unlike disconnect!, this will not communicate with the …\n",null,0],["discard_on","ActiveJob::Exceptions::ClassMethods","rails/classes/ActiveJob/Exceptions/ClassMethods.html#method-i-discard_on","(*exceptions)","<p>Discard the job with no attempts to retry, if the exception is raised. This is useful when the subject …\n",null,0],["disconnect","ActionCable::RemoteConnections::RemoteConnection","rails/classes/ActionCable/RemoteConnections/RemoteConnection.html#method-i-disconnect","()","<p>Uses the internal channel to disconnect the connection.\n",null,0],["disconnect","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-disconnect","(identifiers)","<p>Disconnect all the connections identified by <code>identifiers</code> on this server or any others via RemoteConnections …\n",null,0],["disconnect","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-disconnect","(raise_on_acquisition_timeout = true)","<p>Disconnects all connections in the pool, and clears the pool.\n<p>Raises:\n<p>ActiveRecord::ExclusiveConnectionTimeoutError …\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method does nothing.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-disconnect-21","()","<p>Disconnects all connections in the pool, and clears the pool.\n<p>The pool first tries to gain ownership of …\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method does nothing.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method does nothing.\n",null,0],["disconnect!","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method does nothing.\n",null,0],["disjoint?","Set","ruby/classes/Set.html#method-i-disjoint-3F","(set)","<p>Returns true if the set and the given enumerable have\nno element in common. This method is the opposite ...\n",null,1],["dispatch","ActionController::Metal","rails/classes/ActionController/Metal.html#method-c-dispatch","(name, req, res)","<p>Direct dispatch to the controller. Instantiates the controller, then executes the action named <code>name</code>. …\n",null,0],["dispid","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-dispid","()","<p>Returns dispatch ID.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;)\nmethod ...\n</code></pre>\n",null,1],["display","Rails::SourceAnnotationExtractor","rails/classes/Rails/SourceAnnotationExtractor.html#method-i-display","(results, options = {})","<p>Prints the mapping from filenames to annotations in <code>results</code> ordered by filename. The <code>options</code> hash is …\n",null,0],["display","Gem::Resolver::Stats","ruby/classes/Gem/Resolver/Stats.html#method-i-display","()","",null,1],["display","Object","ruby/classes/Object.html#method-i-display","(*args)","<p>Writes <code>self</code> on the given port:\n\n<pre><code>1.display\n&quot;cat&quot;.display\n[ 4, 5, 6 ].display\nputs\n</code></pre>\n<p>Output:\n",null,1],["display?","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-display-3F","()","<p>Should this CodeObject be displayed in output?\n<p>A code object should be displayed if:\n<p>The item didn’t …\n",null,1],["display?","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-display-3F","()","<p>Only a TopLevel that contains text file) will be displayed.  See also RDoc::CodeObject#display?\n",null,1],["display_document","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-display_document","(matched, driver: nil)","",null,1],["distance","DidYouMean::Jaro","ruby/classes/DidYouMean/Jaro.html#method-i-distance","(str1, str2)","",null,1],["distance","DidYouMean::JaroWinkler","ruby/classes/DidYouMean/JaroWinkler.html#method-i-distance","(str1, str2)","",null,1],["distance_of_time_in_words","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words","(from_time, to_time = 0, options = {})","<p>Reports the approximate distance in time between two Time, Date, or DateTime objects or integers as seconds. …\n",null,0],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words_to_now","(from_time, options = {})","",null,0],["distinct","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-distinct","","<p>Specifies whether the records should be unique or not.\n\n<pre><code>class Person &lt; ActiveRecord::Base\n  has_many :pets ...\n</code></pre>\n",null,0],["distinct","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-distinct","(value = true)","<p>Specifies whether the records should be unique or not. For example:\n\n<pre><code>User.select(:name)\n# Might return ...\n</code></pre>\n",null,0],["distribution","","ruby/files/ruby/doc/distribution_md.html","","<p>Distribution\n<p>This document outlines the expected way to distribute Ruby, with a specific focus on building …\n",null,1],["div","BigDecimal","ruby/classes/BigDecimal.html#method-i-div","(p1, p2 = v2)","<p>Divide by the specified value.\n<p>digits &mdash; If specified and less than the number of significant digits of the …\n",null,1],["div","Integer","ruby/classes/Integer.html#method-i-div","(p1)","<p>Performs integer division; returns the integer result of dividing <code>self</code> by <code>numeric</code>:\n\n<pre><code>  4.div(3)      # =&gt; ...\n</code></pre>\n",null,1],["div","Numeric","ruby/classes/Numeric.html#method-i-div","(p1)","<p>Returns the quotient <code>self/other</code> as an integer (via <code>floor</code>), using method <code>/</code> in the derived class of <code>self</code> …\n",null,1],["divide","Set","ruby/classes/Set.html#method-i-divide","(&func)","<p>Divides the set into a set of subsets according to the commonality\ndefined by the given block.\n<p>If the …\n",null,1],["divmod","BigDecimal","ruby/classes/BigDecimal.html#method-i-divmod","(p1)","<p>Divides by the specified value, and returns the quotient and modulus as BigDecimal numbers. The quotient …\n",null,1],["divmod","Float","ruby/classes/Float.html#method-i-divmod","(p1)","<p>Returns a 2-element array <code>[q, r]</code>, where\n\n<pre><code>q = (self/other).floor      # Quotient\nr = self % other       ...\n</code></pre>\n",null,1],["divmod","Integer","ruby/classes/Integer.html#method-i-divmod","(p1)","<p>Returns a 2-element array <code>[q, r]</code>, where\n\n<pre><code>q = (self/other).floor    # Quotient\nr = self % other         ...\n</code></pre>\n",null,1],["divmod","Numeric","ruby/classes/Numeric.html#method-i-divmod","(p1)","<p>Returns a 2-element array <code>[q, r]</code>, where\n\n<pre><code>q = (self/other).floor                  # Quotient\nr = self % ...\n</code></pre>\n",null,1],["dlload","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-dlload","(*libs)","<p>Creates an array of handlers for the given <code>libs</code>, can be an instance of Fiddle::Handle, Fiddle::Importer …\n",null,1],["dlopen","Fiddle","ruby/classes/Fiddle.html#method-c-dlopen","(library)","<p>Creates a new handler that opens <code>library</code>, and returns an instance of Fiddle::Handle.\n<p>If <code>nil</code> is given for …\n",null,1],["dlunwrap","Fiddle","ruby/classes/Fiddle.html#method-c-dlunwrap","(p1)","<p>Returns the Ruby object stored at the memory address <code>addr</code>\n<p>Example:\n\n<pre><code>x = Object.new\n# =&gt; #&lt;Object:0x0000000107c7d870&gt; ...\n</code></pre>\n",null,1],["dlwrap","Fiddle","ruby/classes/Fiddle.html#method-c-dlwrap","(p1)","<p>Returns the memory address of the Ruby object stored at <code>val</code>\n<p>Example:\n\n<pre><code>x = Object.new\n# =&gt; #&lt;Object:0x0000000107c7d870&gt; ...\n</code></pre>\n",null,1],["dn","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-dn","()","<p>Returns dn.\n",null,1],["dn=","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-dn-3D","(val)","<p>Setter for dn <code>val</code>.\n",null,1],["do_GET","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-do_GET","(req, res)","<p>GET request entry point.  Fills in <code>res</code> for the path, etc. in <code>req</code>.\n",null,1],["do_aliases","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_aliases","()","<p>Scans #content for rb_define_alias\n",null,1],["do_attrs","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_attrs","()","<p>Scans #content for rb_attr and rb_define_attr\n",null,1],["do_boot_defclass","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_boot_defclass","()","<p>Scans #content for boot_defclass\n",null,1],["do_classes_and_modules","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_classes_and_modules","()","<p>Scans #content for rb_define_class, boot_defclass, rb_define_class_under and rb_singleton_class\n",null,1],["do_constants","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_constants","()","<p>Scans #content for rb_define_variable, rb_define_readonly_variable, rb_define_const and rb_define_global_const …\n",null,1],["do_includes","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_includes","()","<p>Scans #content for rb_include_module\n",null,1],["do_methods","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_methods","()","<p>Scans #content for rb_define_method, rb_define_singleton_method, rb_define_module_function, rb_define_private_method …\n",null,1],["do_missing","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-do_missing","()","<p>Creates classes and module that were missing were defined due to the file order being different than …\n",null,1],["do_not_reverse_lookup","BasicSocket","ruby/classes/BasicSocket.html#method-c-do_not_reverse_lookup","()","<p>Gets the global do_not_reverse_lookup flag.\n\n<pre><code>BasicSocket.do_not_reverse_lookup  #=&gt; false\n</code></pre>\n",null,1],["do_not_reverse_lookup","BasicSocket","ruby/classes/BasicSocket.html#method-i-do_not_reverse_lookup","()","<p>Gets the do_not_reverse_lookup flag of <em>basicsocket</em>.\n\n<pre><code>require &#39;socket&#39;\n\nBasicSocket.do_not_reverse_lookup ...\n</code></pre>\n",null,1],["do_not_reverse_lookup=","BasicSocket","ruby/classes/BasicSocket.html#method-i-do_not_reverse_lookup-3D","(p1)","<p>Sets the do_not_reverse_lookup flag of <em>basicsocket</em>.\n\n<pre><code>TCPSocket.open(&quot;www.ruby-lang.org&quot;, 80) {|sock|\n  ...\n</code></pre>\n",null,1],["do_not_reverse_lookup=","BasicSocket","ruby/classes/BasicSocket.html#method-c-do_not_reverse_lookup-3D","(p1)","<p>Sets the global do_not_reverse_lookup flag.\n<p>The flag is used for initial value of do_not_reverse_lookup …\n",null,1],["do_not_reverse_lookup=","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-do_not_reverse_lookup-3D","(flag)","",null,1],["do_reply","Rinda::RingServer","ruby/classes/Rinda/RingServer.html#method-i-do_reply","()","<p>Pulls lookup tuples out of the TupleSpace and sends their DRb object the address of the local TupleSpace …\n",null,1],["do_write","Rinda::RingServer","ruby/classes/Rinda/RingServer.html#method-i-do_write","(msg)","<p>Extracts the response URI from <code>msg</code> and adds it to TupleSpace where it will be picked up by <code>reply_service</code> …\n",null,1],["doc_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-doc_dir","(type = nil)","<p>Returns the full path to this spec’s documentation directory.  If <code>type</code> is given it will be appended …\n",null,1],["doc_stats","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-doc_stats","(collection)","<p>Returns the length and number of undocumented items in <code>collection</code>.\n",null,1],["doctor","Gem::Commands::CheckCommand","ruby/classes/Gem/Commands/CheckCommand.html#method-i-doctor","()","",null,1],["doctor","Gem::Doctor","ruby/classes/Gem/Doctor.html#method-i-doctor","()","<p>Cleans up uninstalled files and invalid gem specifications\n",null,1],["document","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-document","(options)","<p>Generates documentation or a coverage report depending upon the settings in <code>options</code>.\n<p><code>options</code> can be either …\n",null,1],["document","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-document","(generator, options, destination)","<p>Generates documentation using the named <code>generator</code> (“darkfish” or “ri”) and following …\n",null,1],["document","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-document","(generator, options, destination)","<p>Generates documentation using the named <code>generator</code> (“darkfish” or “ri”) and following …\n",null,1],["document?","Psych::Nodes::Document","ruby/classes/Psych/Nodes/Document.html#method-i-document-3F","()","",null,1],["document?","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-document-3F","()","",null,1],["document_children=","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-document_children-3D","(document_children)","<p>Enables or disables documentation of this CodeObject’s children unless it has been turned off by …\n",null,1],["document_ok?","SyntaxSuggest::DisplayInvalidBlocks","ruby/classes/SyntaxSuggest/DisplayInvalidBlocks.html#method-i-document_ok-3F","()","",null,1],["document_self=","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-document_self-3D","(document_self)","<p>Enables or disables documentation of this CodeObject unless it has been turned off by :enddoc:.  If the …\n",null,1],["document_self_or_methods","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-document_self_or_methods","()","<p>Does this ClassModule or any of its methods have document_self set?\n",null,1],["documentation_guide","","ruby/files/ruby/doc/contributing/documentation_guide_md.html","","<p>Documentation Guide\n<p>This guide discusses recommendations for documenting\nclasses, modules, and methods ...\n",null,1],["documentation_page","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-documentation_page","(store, generator, path, req, res)","<p>Fills in <code>res</code> with the class, module or page for <code>req</code> from <code>store</code>.\n<p><code>path</code> is relative to the mount_path and …\n",null,1],["documentation_search","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-documentation_search","(store, generator, req, res)","<p>Creates the JSON search index on <code>res</code> for the given <code>store</code>.  <code>generator</code> must respond to #json_index to build. …\n",null,1],["documentation_source","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-documentation_source","(path)","<p>Returns the RDoc::Store and path relative to <code>mount_path</code> for documentation at <code>path</code>.\n",null,1],["documented?","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-documented-3F","()","<p>Does this class or module have a comment with content or is #received_nodoc true?\n",null,1],["documented?","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-documented-3F","()","<p>Does this object have a comment with content or is #received_nodoc true?\n",null,1],["documented?","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-documented-3F","()","<p>A constant is documented if it has a comment, or is an alias for a documented class or module.\n",null,1],["documented?","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-documented-3F","()","<p>A method/attribute is documented if any of the following is true:\n<p>it was marked with :nodoc:;\n<p>it has a …\n",null,1],["dom.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/utils/dom_coffee.html","","<p>m = Element.prototype.matches or\n\n<pre><code>Element.prototype.matchesSelector or\nElement.prototype.mozMatchesSelector ...\n</code></pre>\n",null,0],["dom_class","ActionView::RecordIdentifier","rails/classes/ActionView/RecordIdentifier.html#method-i-dom_class","(record_or_class, prefix = nil)","<p>The DOM class convention is to use the singular form of an object or class.\n\n<pre><code>dom_class(post)   # =&gt; &quot;post&quot; ...\n</code></pre>\n",null,0],["dom_id","ActionView::RecordIdentifier","rails/classes/ActionView/RecordIdentifier.html#method-i-dom_id","(record, prefix = nil)","<p>The DOM id convention is to use the singular form of an object or class with the id following an underscore. …\n",null,0],["domain","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-domain","(tld_length = @@tld_length)","<p>Returns the domain part of a host, such as “rubyonrails.org” in “www.rubyonrails.org”. …\n",null,0],["domain=","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-domain-3D","(str)","<p>Set domain for which this cookie applies\n",null,1],["done","Gem::StreamUI::SilentDownloadReporter","ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-done","()","<p>The silent download reporter won’t tell you when the download is done. Because it is silent.\n",null,1],["done","Gem::StreamUI::SilentProgressReporter","ruby/classes/Gem/StreamUI/SilentProgressReporter.html#method-i-done","()","<p>Does not print anything when complete as this object has taken a vow of silence.\n",null,1],["done","Gem::StreamUI::SimpleProgressReporter","ruby/classes/Gem/StreamUI/SimpleProgressReporter.html#method-i-done","()","<p>Prints out the terminal message.\n",null,1],["done","Gem::StreamUI::ThreadedDownloadReporter","ruby/classes/Gem/StreamUI/ThreadedDownloadReporter.html#method-i-done","()","<p>Indicates the download is complete.\n",null,1],["done","Gem::StreamUI::VerboseProgressReporter","ruby/classes/Gem/StreamUI/VerboseProgressReporter.html#method-i-done","()","<p>Prints out the terminal message.\n",null,1],["done_adding","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-done_adding","()","<p>Call this to mark the end of parsing for display purposes\n",null,1],["done_documenting=","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-done_documenting-3D","(value)","<p>Turns documentation on/off, and turns on/off #document_self and #document_children.\n<p>Once documentation …\n",null,1],["done_installing","Gem","ruby/classes/Gem.html#method-c-done_installing","(&hook)","<p>Adds a post-installs hook that will be passed a Gem::DependencyInstaller and a list of installed specifications …\n",null,1],["done_running","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-done_running","()","",null,0],["done_unloading","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-done_unloading","()","",null,0],["dot","IRB::Vec","ruby/classes/IRB/Vec.html#method-i-dot","(other)","",null,1],["double_fig","BigDecimal","ruby/classes/BigDecimal.html#method-c-double_fig","()","",null,1],["down","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-down","()","",null,0],["down","AddServiceNameToActiveStorageBlobs","rails/classes/AddServiceNameToActiveStorageBlobs.html#method-i-down","()","",null,0],["downcase","String","ruby/classes/String.html#method-i-downcase","(*args)","<p>Returns a string containing the downcased characters in <code>self</code>:\n\n<pre><code>s = &#39;Hello World!&#39; # =&gt; &quot;Hello World!&quot;\ns.downcase ...\n</code></pre>\n",null,1],["downcase","Symbol","ruby/classes/Symbol.html#method-i-downcase","(*args)","<p>Equivalent to <code>sym.to_s.downcase.to_sym</code>.\n<p>See String#downcase.\n<p>Related: Symbol#upcase.\n",null,1],["downcase!","String","ruby/classes/String.html#method-i-downcase-21","(*args)","<p>Downcases the characters in <code>self</code>; returns <code>self</code> if any changes were made, <code>nil</code> otherwise:\n\n<pre><code>s = &#39;Hello World!&#39; ...\n</code></pre>\n",null,1],["downcase?","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-downcase-3F","()","",null,0],["downcase_word","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-downcase_word","(key)","",null,1],["download","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-download","(&block)","<p>Downloads the file associated with this blob. If no block is given, the entire file is read into memory …\n",null,0],["download","ActiveStorage::Preview","rails/classes/ActiveStorage/Preview.html#method-i-download","(&block)","<p>Downloads the file associated with this preview’s variant. If no block is given, the entire file …\n",null,0],["download","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-download","(key)","<p>Return the content of the file at the <code>key</code>.\n",null,0],["download","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-download","(key, &block)","",null,0],["download","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-download","(key, &block)","",null,0],["download","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-download","(key, &block)","",null,0],["download","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-download","(key, &block)","",null,0],["download","ActiveStorage::Variant","rails/classes/ActiveStorage/Variant.html#method-i-download","(&block)","<p>Downloads the file associated with this variant. If no block is given, the entire file is read into memory …\n",null,0],["download","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-download","(spec, source_uri, install_dir = Gem.dir)","<p>Moves the gem <code>spec</code> from <code>source_uri</code> to the cache dir unless it is already there.  If the source_uri is …\n",null,1],["download","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-download","(path)","<p>Downloads a gem at <code>path</code> and returns the file path.\n",null,1],["download","Gem::Resolver::Specification","ruby/classes/Gem/Resolver/Specification.html#method-i-download","(options)","",null,1],["download","Gem::Source","ruby/classes/Gem/Source.html#method-i-download","(spec, dir=Dir.pwd)","<p>Downloads <code>spec</code> and writes it to <code>dir</code>.  See also Gem::RemoteFetcher#download.\n",null,1],["download","Gem::Source::Installed","ruby/classes/Gem/Source/Installed.html#method-i-download","(spec, path)","<p>We don’t need to download an installed gem\n",null,1],["download_blob_to_tempfile","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-i-download_blob_to_tempfile","(&block)","<p>Downloads the blob to a tempfile on disk. Yields the tempfile.\n",null,0],["download_blob_to_tempfile","ActiveStorage::Previewer","rails/classes/ActiveStorage/Previewer.html#method-i-download_blob_to_tempfile","(&block)","<p>Downloads the blob to a tempfile on disk. Yields the tempfile.\n",null,0],["download_chunk","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-download_chunk","(range)","<p>Downloads a part of the file associated with this blob.\n",null,0],["download_chunk","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-download_chunk","(key, range)","<p>Return the partial content in the byte <code>range</code> of the file at the <code>key</code>.\n",null,0],["download_chunk","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-download_chunk","(key, range)","",null,0],["download_chunk","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-download_chunk","(key, range)","",null,0],["download_chunk","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-download_chunk","(key, range)","",null,0],["download_chunk","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-download_chunk","(key, range)","",null,0],["download_reporter","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-download_reporter","(*args)","<p>Return a download reporter object chosen from the current verbosity\n",null,1],["download_to_cache","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-download_to_cache","(dependency)","<p>Given a name and requirement, downloads this gem into cache and returns the filename. Returns nil if …\n",null,1],["downto","Date","ruby/classes/Date.html#method-i-downto","(p1)","<p>Equivalent to #step with arguments <code>min</code> and <code>-1</code>.\n",null,1],["downto","Integer","ruby/classes/Integer.html#method-i-downto","(p1)","<p>Calls the given block with each integer value from <code>self</code> down to <code>limit</code>; returns <code>self</code>:\n\n<pre><code>a = []\n10.downto(5) ...\n</code></pre>\n",null,1],["draw","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-draw","(name)","<p>Loads another routes file with the given <code>name</code> located inside the <code>config/routes</code> directory. In that file, …\n",null,0],["draw","ActiveStorage::Previewer","rails/classes/ActiveStorage/Previewer.html#method-i-draw","(*argv)","<p>Executes a system command, capturing its binary output in a tempfile. Yields the tempfile.\n<p>Use this method …\n",null,0],["draw","IRB::Canvas","ruby/classes/IRB/Canvas.html#method-i-draw","()","",null,1],["drop","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-drop","(configuration, *arguments)","",null,0],["drop","Array","ruby/classes/Array.html#method-i-drop","(p1)","<p>Returns a new Array containing all but the first <code>n</code> element of <code>self</code>, where <code>n</code> is a non-negative Integer …\n",null,1],["drop","Enumerable","ruby/classes/Enumerable.html#method-i-drop","(p1)","<p>For positive integer <code>n</code>, returns an array containing all but the first <code>n</code> elements:\n\n<pre><code>r = (1..4)\nr.drop(3) ...\n</code></pre>\n",null,1],["drop","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-drop","(p1)","<p>Like Enumerable#drop, but chains operation to be lazy-evaluated.\n",null,1],["drop_all","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-drop_all","()","",null,0],["drop_current","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-drop_current","(environment = env)","",null,0],["drop_join_table","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-drop_join_table","(table_1, table_2, **options)","<p>Drops the join table specified by the given arguments. See #create_join_table for details.\n<p>Although this …\n",null,0],["drop_schema","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-drop_schema","(schema_name, **options)","<p>Drops the schema for the given schema name.\n",null,0],["drop_table","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-drop_table","(table_name, **options)","<p>Drops a table from the database.\n<p><code>:force</code> &mdash; Set to <code>:cascade</code> to drop dependent objects as well. Defaults to …\n",null,0],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-drop_table","(table_name, **options)","<p>Drops a table from the database.\n<p><code>:force</code> &mdash; Set to <code>:cascade</code> to drop dependent objects as well. Defaults to …\n",null,0],["drop_while","Array","ruby/classes/Array.html#method-i-drop_while","()","<p>Returns a new Array containing zero or more trailing elements of <code>self</code>; does not modify <code>self</code>.\n<p>With a block …\n",null,1],["drop_while","Enumerable","ruby/classes/Enumerable.html#method-i-drop_while","()","<p>Calls the block with successive elements as long as the block returns a truthy value; returns an array …\n",null,1],["drop_while","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-drop_while","()","<p>Like Enumerable#drop_while, but chains operation to be lazy-evaluated.\n",null,1],["dsa_sign_asn1","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-dsa_sign_asn1","(data)","<p><strong>Deprecated in version 3.0</strong>. Consider using PKey::PKey#sign_raw and PKey::PKey#verify_raw instead.\n",null,1],["dsa_verify_asn1","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-dsa_verify_asn1","(data, sig)","<p><strong>Deprecated in version 3.0</strong>. Consider using PKey::PKey#sign_raw and PKey::PKey#verify_raw instead.\n",null,1],["dst?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-dst-3F","()","<p>Returns true if the current time is within Daylight Savings Time for the specified time zone.\n\n<pre><code>Time.zone ...\n</code></pre>\n",null,0],["dst?","Time","ruby/classes/Time.html#method-i-dst-3F","()","<p>Returns <code>true</code> if <code>self</code> is in daylight saving time, <code>false</code> otherwise:\n\n<pre><code>t = Time.local(2000, 1, 1) # =&gt; 2000-01-01 ...\n</code></pre>\n",null,1],["dstaddr","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-dstaddr","()","<p>Returns the destination address of <em>ifaddr</em>. nil is returned if the flags doesn’t have IFF_POINTOPOINT …\n",null,1],["dtrace_probes","","ruby/files/ruby/doc/dtrace_probes_rdoc.html","","<p>DTrace Probes\n<p>A list of DTrace probes and their functionality. “Module” and “Function” …\n",null,1],["dummy?","Encoding","ruby/classes/Encoding.html#method-i-dummy-3F","()","<p>Returns true for dummy encodings. A dummy encoding is an encoding for which character handling is not …\n",null,1],["dummy_instance_alias","RDoc::MarkupReference","ruby/classes/RDoc/MarkupReference.html#method-i-dummy_instance_alias","(foo, bar)","",null,1],["dummy_instance_method","RDoc::MarkupReference","ruby/classes/RDoc/MarkupReference.html#method-i-dummy_instance_method","(foo, bar)","<p>example instance method\n",null,1],["dummy_makefile","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-dummy_makefile","(srcdir)","<p>Creates a stub Makefile.\n",null,1],["dummy_manifest.js.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/rails/dummy_manifest_js_tt.html","","<p>&lt;% unless api? -%&gt; //= link_tree ../images &lt;% end -%&gt; &lt;% unless options.skip_javascript …\n",null,0],["dummy_singleton_method","RDoc::MarkupReference","ruby/classes/RDoc/MarkupReference.html#method-c-dummy_singleton_method","(foo, bar)","<p>example singleton method\n",null,1],["dump","ActionText::Serialization","rails/classes/ActionText/Serialization.html#method-i-dump","(content)","",null,0],["dump","ActiveRecord::Encryption::MessageSerializer","rails/classes/ActiveRecord/Encryption/MessageSerializer.html#method-i-dump","(message)","",null,0],["dump","ActiveSupport::Cache::Coders::Rails61Coder","rails/classes/ActiveSupport/Cache/Coders/Rails61Coder.html#method-i-dump","(entry)","",null,0],["dump","ActiveSupport::Cache::Coders::Rails70Coder","rails/classes/ActiveSupport/Cache/Coders/Rails70Coder.html#method-i-dump","(entry)","",null,0],["dump","ActiveSupport::Cache::MemCacheStore::Coders::Rails61Coder","rails/classes/ActiveSupport/Cache/MemCacheStore/Coders/Rails61Coder.html#method-i-dump","(entry)","",null,0],["dump","Gem::YAMLSerializer","ruby/classes/Gem/YAMLSerializer.html#method-i-dump","(hash)","",null,1],["dump","JSON","ruby/classes/JSON.html#method-i-dump","(obj, anIO = nil, limit = nil, kwargs = nil)","<p>Dumps <code>obj</code> as a JSON string, i.e. calls generate on the object and returns the result.\n<p>The default options …\n",null,1],["dump","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-c-dump","(obj, *args)","",null,1],["dump","Marshal","ruby/classes/Marshal.html#method-c-dump","(p1, p2 = v2, p3 = v3)","<p>Serializes obj and all descendant objects. If anIO is specified, the serialized data will be written …\n",null,1],["dump","ObjectSpace","ruby/classes/ObjectSpace.html#method-i-dump","(obj, output: :string)","<p>Dump the contents of a ruby object as JSON.\n<p><em>output</em> can be one of: <code>:stdout</code>, <code>:file</code>, <code>:string</code>, or IO object. …\n",null,1],["dump","Prism","ruby/classes/Prism.html#method-c-dump","(code, **options)","<p>Mirror the Prism.dump API by using the serialization API.\n",null,1],["dump","Psych","ruby/classes/Psych.html#method-c-dump","(o, io = nil, options = {})","<p>Dump Ruby object <code>o</code> to a YAML string.  Optional <code>options</code> may be passed in to control the output format. …\n",null,1],["dump","String","ruby/classes/String.html#method-i-dump","()","<p>Returns a printable version of <code>self</code>, enclosed in double-quotes, with special characters escaped, and …\n",null,1],["dump_all","ObjectSpace","ruby/classes/ObjectSpace.html#method-i-dump_all","(output: :file, full: false, since: nil, shapes: true)","<p>Dump the contents of the ruby heap as JSON.\n<p><em>output</em> argument is the same as for #dump.\n<p><em>full</em> must be a boolean. …\n",null,1],["dump_compressed","ActiveSupport::Cache::Coders::Rails61Coder","rails/classes/ActiveSupport/Cache/Coders/Rails61Coder.html#method-i-dump_compressed","(entry, threshold)","",null,0],["dump_compressed","ActiveSupport::Cache::Coders::Rails70Coder","rails/classes/ActiveSupport/Cache/Coders/Rails70Coder.html#method-i-dump_compressed","(entry, threshold)","",null,0],["dump_compressed","ActiveSupport::Cache::MemCacheStore::Coders::Rails61Coder","rails/classes/ActiveSupport/Cache/MemCacheStore/Coders/Rails61Coder.html#method-i-dump_compressed","(entry, threshold)","",null,0],["dump_exit_locations","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-dump_exit_locations","(filename)","<p>Marshal dumps exit locations to the given filename.\n<p>Usage:\n<p>If <code>--yjit-exit-locations</code> is passed, a file named …\n",null,1],["dump_file","Prism","ruby/classes/Prism.html#method-c-dump_file","(filepath, **options)","<p>Mirror the Prism.dump_file API by using the serialization API.\n",null,1],["dump_hash","Gem::YAMLSerializer","ruby/classes/Gem/YAMLSerializer.html#method-i-dump_hash","(hash)","",null,1],["dump_schema_cache","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-dump_schema_cache","(conn, filename)","<p>Dumps the schema cache in YAML format for the connection into the file\n<p>Examples:\n\n<pre><code>ActiveRecord::Tasks::DatabaseTasks.dump_schema_cache(ActiveRecord::Base.connection, ...\n</code></pre>\n",null,0],["dump_shapes","ObjectSpace","ruby/classes/ObjectSpace.html#method-i-dump_shapes","(output: :file, since: 0)","<p>Dump the contents of the ruby shape tree as JSON.\n<p><em>output</em> argument is the same as for #dump.\n<p>If <em>since</em> is …\n",null,1],["dump_stream","Psych","ruby/classes/Psych.html#method-c-dump_stream","(*objects)","<p>Dump a list of objects as separate documents to a document stream.\n<p>Example:\n\n<pre><code>Psych.dump_stream(&quot;foo\\n  &quot;, ...\n</code></pre>\n",null,1],["dump_to","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-dump_to","(filename)","",null,0],["dump_with_rubygems_yaml","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-c-dump_with_rubygems_yaml","(content)","",null,1],["dup","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-dup","","<p>Duped objects have no id assigned and are treated as new records. Note that this is a “shallow” …\n",null,0],["dup","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns a shallow copy of the hash.\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new({ a: { b: &#39;b&#39; ...\n</code></pre>\n",null,0],["dup","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns a shallow copy of the hash.\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new({ a: { b: &#39;b&#39; ...\n</code></pre>\n",null,0],["dup","BigDecimal","ruby/classes/BigDecimal.html#method-i-dup","()","",null,1],["dup","ENV","ruby/classes/ENV.html#method-c-dup","()","<p>Raises TypeError, because ENV is a singleton object. Use #to_h to get a copy of ENV data as a hash.\n",null,1],["dup","Numeric","ruby/classes/Numeric.html#method-i-dup","()","<p>Returns <code>self</code>.\n<p>Related: Numeric#clone.\n",null,1],["dup","Object","ruby/classes/Object.html#method-i-dup","()","<p>Produces a shallow copy of <em>obj</em>—the instance variables of <em>obj</em> are copied, but not the objects they reference. …\n",null,1],["dup","Singleton","ruby/classes/Singleton.html#method-i-dup","()","<p>Raises a TypeError to prevent duping.\n",null,1],["duplicable?","Method","rails/classes/Method.html#method-i-duplicable-3F","()","<p>Methods are not duplicable:\n\n<pre><code>method(:puts).duplicable? # =&gt; false\nmethod(:puts).dup         # =&gt; TypeError: ...\n</code></pre>\n",null,0],["duplicable?","Object","rails/classes/Object.html#method-i-duplicable-3F","()","<p>Can you safely dup this object?\n<p>False for method objects; true otherwise.\n",null,0],["duplicable?","Singleton","rails/classes/Singleton.html#method-i-duplicable-3F","()","<p>Singleton instances are not duplicable:\n\n<pre><code>Class.new.include(Singleton).instance.dup # TypeError (can&#39;t dup ...\n</code></pre>\n",null,0],["duplicable?","UnboundMethod","rails/classes/UnboundMethod.html#method-i-duplicable-3F","()","<p>Unbound methods are not duplicable:\n\n<pre><code>method(:puts).unbind.duplicable? # =&gt; false\nmethod(:puts).unbind.dup ...\n</code></pre>\n",null,0],["duration","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-duration","()","<p>Returns the difference in milliseconds between when the execution of the event started and when it ended. …\n",null,0],["dynamic_library_suffixes","Gem","ruby/classes/Gem.html#method-c-dynamic_library_suffixes","()","<p>Suffixes for dynamic library require-able paths.\n",null,1],["dynamic_prompt","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-dynamic_prompt","(&block)","",null,1],["each","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-each","(&block)","",null,0],["each","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-each","(&block)","",null,0],["each","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-each","(&block)","",null,0],["each","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-each","(&block)","",null,0],["each","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-each","(&block)","",null,0],["each","ActionDispatch::Response::RackBody","rails/classes/ActionDispatch/Response/RackBody.html#method-i-each","(*args, &block)","",null,0],["each","ActiveRecord::Batches::BatchEnumerator","rails/classes/ActiveRecord/Batches/BatchEnumerator.html#method-i-each","(&block)","<p>Yields an ActiveRecord::Relation object for each batch of records.\n\n<pre><code>Person.in_batches.each do |relation| ...\n</code></pre>\n",null,0],["each","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-i-each","(&block)","",null,0],["each","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-each","(&block)","<p>Calls the given block once for each element in row collection, passing row as parameter.\n<p>Returns an <code>Enumerator</code> …\n",null,0],["each","Mime::Mimes","rails/classes/Mime/Mimes.html#method-i-each","(&block)","",null,0],["each","Rails::Engine::Railties","rails/classes/Rails/Engine/Railties.html#method-i-each","(*args, &block)","",null,0],["each","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-each","(&block)","",null,0],["each","ARGF","ruby/classes/ARGF.html#method-i-each","(*args)","<p>Returns an enumerator which iterates over each line (separated by <em>sep</em>, which defaults to your platform’s …\n",null,1],["each","Array","ruby/classes/Array.html#method-i-each","()","<p>Iterates over array elements.\n<p>When a block given, passes each successive array element to the block; returns …\n",null,1],["each","CSV","ruby/classes/CSV.html#method-i-each","(&block)","<p>Calls the block with each successive row. The data source must be opened for reading.\n<p>Without headers: …\n",null,1],["each","CSV::FieldsConverter","ruby/classes/CSV/FieldsConverter.html#method-i-each","(&block)","",null,1],["each","CSV::Row","ruby/classes/CSV/Row.html#method-i-each","(&block)","<p>Calls the block with each header-value pair; returns <code>self</code>:\n\n<pre><code>source = &quot;Name,Name,Name\\nFoo,Bar,Baz\\n&quot;\ntable ...\n</code></pre>\n",null,1],["each","CSV::Table","ruby/classes/CSV/Table.html#method-i-each","(&block)","<p>Calls the block with each row or column; returns <code>self</code>.\n<p>When the access mode is <code>:row</code> or <code>:col_or_row</code>, calls …\n",null,1],["each","Dir","ruby/classes/Dir.html#method-i-each","()","<p>Calls the block with each entry name in <code>self</code>:\n\n<pre><code>Dir.new(&#39;example&#39;).each {|entry_name| p entry_name }\n</code></pre>\n<p>Output: …\n",null,1],["each","ENV","ruby/classes/ENV.html#method-c-each","()","<p>Yields each environment variable name and its value as a 2-element Array:\n\n<pre><code>h = {}\nENV.each_pair { |name, ...\n</code></pre>\n",null,1],["each","Enumerator","ruby/classes/Enumerator.html#method-i-each","(*args)","<p>Iterates over the block according to how this Enumerator was constructed. If no block and no arguments …\n",null,1],["each","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-each","()","",null,1],["each","Enumerator::Chain","ruby/classes/Enumerator/Chain.html#method-i-each","(*args)","<p>Iterates over the elements of the first enumerable by calling the “each” method on it with …\n",null,1],["each","Enumerator::Product","ruby/classes/Enumerator/Product.html#method-i-each","()","<p>Iterates over the elements of the first enumerable by calling the “each_entry” method on it …\n",null,1],["each","Etc::Group","ruby/classes/Etc/Group.html#method-c-each","()","<p>Iterates for each entry in the <code>/etc/group</code> file if a block is given.\n<p>If no block is given, returns the …\n",null,1],["each","Etc::Passwd","ruby/classes/Etc/Passwd.html#method-c-each","()","<p>Iterates for each entry in the <code>/etc/passwd</code> file if a block is given.\n<p>If no block is given, returns the …\n",null,1],["each","Fiddle::CStruct","ruby/classes/Fiddle/CStruct.html#method-i-each","()","",null,1],["each","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-each","()","<p>Yields each Tuple in this AvailableSet\n",null,1],["each","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-each","(&block)","<p>Delegates to @hash\n",null,1],["each","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-each","(&block)","<p>Iterator over dependency_order\n",null,1],["each","Gem::Package::TarReader","ruby/classes/Gem/Package/TarReader.html#method-i-each","()","<p>Iterates over files in the tarball yielding each entry\n",null,1],["each","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-each","()","<p>Yields each source URI in the list.\n",null,1],["each","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-each","()","<p>Enumerate every known spec.  See ::dirs= and ::add_spec to set the list of specs.\n",null,1],["each","GetoptLong","ruby/classes/GetoptLong.html#method-i-each","()","<p>Calls the given block with each option; each option is a 2-element array containing:\n<p>The option name (the …\n",null,1],["each","Hash","ruby/classes/Hash.html#method-i-each","()","<p>Calls the given block with each key-value pair; returns <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.each_pair ...\n</code></pre>\n",null,1],["each","IO","ruby/classes/IO.html#method-i-each","(*args)","<p>Calls the block with each remaining line read from the stream; returns <code>self</code>. Does nothing if already …\n",null,1],["each","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-each","(*args)","<p>Iterates over the buffer, yielding each <code>value</code> of <code>buffer_type</code> starting from <code>offset</code>.\n<p>If <code>count</code> is given, …\n",null,1],["each","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-each","()","",null,1],["each","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-each","()","<p>Iterates over keys and values. Note that unlike other collections, <code>each</code> without block isn’t supported. …\n",null,1],["each","OpenSSL::ASN1::Constructive","ruby/classes/OpenSSL/ASN1/Constructive.html#method-i-each","()","<p>Calls the given block once for each element in self, passing that element as parameter <em>asn1</em>. If no block …\n",null,1],["each","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-each","(eol=$/)","<p>Executes the block for every line in the stream where lines are separated by <em>eol</em>.\n<p>See also #gets\n",null,1],["each","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-i-each","()","<p>Retrieves the section and its pairs for the current configuration.\n\n<pre><code>config.each do |section, key, value| ...\n</code></pre>\n",null,1],["each","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-each","(&block)","<p>Iterate over each node in the tree. Yields each node to <code>block</code> depth first.\n",null,1],["each","Range","ruby/classes/Range.html#method-i-each","()","<p>With a block given, passes each element of <code>self</code> to the block:\n\n<pre><code>a = []\n(1..4).each {|element| a.push(element) ...\n</code></pre>\n",null,1],["each","Reline::KillRing","ruby/classes/Reline/KillRing.html#method-i-each","()","",null,1],["each","Resolv::DNS::SvcParams","ruby/classes/Resolv/DNS/SvcParams.html#method-i-each","(&block)","<p>Enumerate the +SvcParam+s in this list.\n",null,1],["each","Rinda::NotifyTemplateEntry","ruby/classes/Rinda/NotifyTemplateEntry.html#method-i-each","()","<p>Yields event/tuple pairs until this NotifyTemplateEntry expires.\n",null,1],["each","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-i-each","()","<p>Iterates over all discovered TupleSpaces starting with the primary.\n",null,1],["each","Rinda::Tuple","ruby/classes/Rinda/Tuple.html#method-i-each","()","<p>Iterate through the tuple, yielding the index or key, and the value, thus ensuring arrays are iterated …\n",null,1],["each","Set","ruby/classes/Set.html#method-i-each","(&block)","<p>Calls the given block once for each element in the set, passing\nthe element as parameter. Returns an ...\n",null,1],["each","StringIO","ruby/classes/StringIO.html#method-i-each","(*args)","<p>Calls the block with each remaining line read from the stream; does nothing if already at end-of-file; …\n",null,1],["each","Struct","ruby/classes/Struct.html#method-i-each","()","<p>Calls the given block with the value of each member; returns <code>self</code>:\n\n<pre><code>Customer = Struct.new(:name, :address, ...\n</code></pre>\n",null,1],["each","SyntaxSuggest::LexAll","ruby/classes/SyntaxSuggest/LexAll.html#method-i-each","()","",null,1],["each","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-each","()","<p>Iterates over each item of OLE collection which has IEnumVARIANT interface.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;) ...\n</code></pre>\n",null,1],["each","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-each","()","",null,1],["each","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-each","()","",null,1],["each","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-each","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each_address","Resolv","ruby/classes/Resolv.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code>.\n",null,1],["each_address","Resolv","ruby/classes/Resolv.html#method-c-each_address","(name, &block)","<p>Iterates over all IP addresses for <code>name</code>.\n",null,1],["each_address","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name …\n",null,1],["each_address","Resolv::Hosts","ruby/classes/Resolv/Hosts.html#method-i-each_address","(name, &proc)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the hosts file.\n",null,1],["each_address","Resolv::MDNS","ruby/classes/Resolv/MDNS.html#method-i-each_address","(name)","<p>Iterates over all IP addresses for <code>name</code> retrieved from the mDNS resolver, provided name ends with “local”. …\n",null,1],["each_ancestor","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-each_ancestor","()","<p>Iterates the ancestors of this class or module for which an RDoc::ClassModule exists.\n",null,1],["each_attribute","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-each_attribute","()","<p>Iterator for attributes\n",null,1],["each_byte","ARGF","ruby/classes/ARGF.html#method-i-each_byte","()","<p>Iterates over each byte of each file in <code>ARGV</code>. A byte is returned as an Integer in the range 0..255.\n<p>This …\n",null,1],["each_byte","IO","ruby/classes/IO.html#method-i-each_byte","()","<p>Calls the given block with each byte (0..255) in the stream; returns <code>self</code>. See Byte IO.\n\n<pre><code>f = File.new(&#39;t.rus&#39;) ...\n</code></pre>\n",null,1],["each_byte","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-each_byte","(*args)","<p>Iterates over the buffer, yielding each byte starting from <code>offset</code>.\n<p>If <code>count</code> is given, only <code>count</code> bytes …\n",null,1],["each_byte","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-each_byte","()","<p>Calls the given block once for each byte in the stream.\n",null,1],["each_byte","String","ruby/classes/String.html#method-i-each_byte","()","<p>Calls the given block with each successive byte from <code>self</code>; returns <code>self</code>:\n\n<pre><code>&#39;hello&#39;.each_byte {|byte| print ...\n</code></pre>\n",null,1],["each_byte","StringIO","ruby/classes/StringIO.html#method-i-each_byte","()","<p>With a block given, calls the block with each remaining byte in the stream; see Byte IO.\n<p>With no block …\n",null,1],["each_byte","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-each_byte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each_caller_location","Thread","ruby/classes/Thread.html#method-c-each_caller_location","()","<p>Yields each frame of the current execution stack as a backtrace location object.\n",null,1],["each_capitalized","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-each_capitalized","()","<p>Like #each_header, but the keys are returned in capitalized form.\n<p>Net::HTTPHeader#canonical_each is an …\n",null,1],["each_capitalized_name","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-each_capitalized_name","()","<p>Calls the block with each capitalized field name:\n\n<pre><code>res = Net::HTTP.get_response(hostname, &#39;/todos/1&#39;)\nres.each_capitalized_name ...\n</code></pre>\n",null,1],["each_certificate","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-i-each_certificate","()","<p>Enumerates trusted certificates.\n",null,1],["each_char","ARGF","ruby/classes/ARGF.html#method-i-each_char","()","<p>Iterates over each character of each file in ARGF.\n<p>This method allows you to treat the files supplied …\n",null,1],["each_char","IO","ruby/classes/IO.html#method-i-each_char","()","<p>Calls the given block with each character in the stream; returns <code>self</code>. See Character IO.\n\n<pre><code>f = File.new(&#39;t.rus&#39;) ...\n</code></pre>\n",null,1],["each_char","String","ruby/classes/String.html#method-i-each_char","()","<p>Calls the given block with each successive character from <code>self</code>; returns <code>self</code>:\n\n<pre><code>&#39;hello&#39;.each_char {|char| ...\n</code></pre>\n",null,1],["each_char","StringIO","ruby/classes/StringIO.html#method-i-each_char","()","<p>With a block given, calls the block with each remaining character in the stream; see Character IO.\n<p>With …\n",null,1],["each_char","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-each_char","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each_child","Dir","ruby/classes/Dir.html#method-i-each_child","()","<p>Calls the block with each entry name in <code>self</code> except <code>&#39;.&#39;</code> and <code>&#39;..&#39;</code>:\n\n<pre><code>dir = Dir.new(&#39;/example&#39;) ...\n</code></pre>\n",null,1],["each_child","Dir","ruby/classes/Dir.html#method-c-each_child","(*args)","<p>Like Dir.foreach, except that entries <code>&#39;.&#39;</code> and <code>&#39;..&#39;</code> are not included.\n",null,1],["each_child","Pathname","ruby/classes/Pathname.html#method-i-each_child","(with_directory=true, &b)","<p>Iterates over the children of the directory (files and subdirectories, not recursive).\n<p>It yields Pathname …\n",null,1],["each_child","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-each_child","()","<p>Iterate all direct child instruction sequences. Iteration order is implementation/version defined so …\n",null,1],["each_classmodule","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-each_classmodule","()","<p>Iterator for classes and modules\n",null,1],["each_codepoint","ARGF","ruby/classes/ARGF.html#method-i-each_codepoint","()","<p>Iterates over each codepoint of each file in ARGF.\n<p>This method allows you to treat the files supplied …\n",null,1],["each_codepoint","IO","ruby/classes/IO.html#method-i-each_codepoint","()","<p>Calls the given block with each codepoint in the stream; returns <code>self</code>:\n\n<pre><code>f = File.new(&#39;t.rus&#39;)\na = []\nf.each_codepoint ...\n</code></pre>\n",null,1],["each_codepoint","String","ruby/classes/String.html#method-i-each_codepoint","()","<p>Calls the given block with each successive codepoint from <code>self</code>; each codepoint is the integer value for …\n",null,1],["each_codepoint","StringIO","ruby/classes/StringIO.html#method-i-each_codepoint","()","<p>With a block given, calls the block with each remaining codepoint in the stream; see Codepoint IO.\n<p>With …\n",null,1],["each_cons","Enumerable","ruby/classes/Enumerable.html#method-i-each_cons","(p1)","<p>Calls the block with each successive overlapped <code>n</code>-tuple of elements; returns <code>self</code>:\n\n<pre><code>a = []\n(1..5).each_cons(3) ...\n</code></pre>\n",null,1],["each_const","OptionParser","ruby/classes/OptionParser.html#method-c-each_const","(path, base = ::Object)","",null,1],["each_constant","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-each_constant","()","<p>Iterator for constants\n",null,1],["each_entry","Enumerable","ruby/classes/Enumerable.html#method-i-each_entry","(*args)","<p>Calls the given block with each element, converting multiple values from yield to an array; returns  …\n",null,1],["each_entry","Gem::Package::TarReader","ruby/classes/Gem/Package/TarReader.html#method-i-each_entry","()","",null,1],["each_entry","Pathname","ruby/classes/Pathname.html#method-i-each_entry","()","<p>Iterates over the entries (files and subdirectories) in the directory, yielding a Pathname object for …\n",null,1],["each_extend","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-each_extend","()","<p>Iterator for extension modules\n",null,1],["each_filename","Pathname","ruby/classes/Pathname.html#method-i-each_filename","()","<p>Iterates over each component of the path.\n\n<pre><code>Pathname.new(&quot;/usr/bin/ruby&quot;).each_filename {|filename| ... ...\n</code></pre>\n",null,1],["each_grapheme_cluster","String","ruby/classes/String.html#method-i-each_grapheme_cluster","()","<p>Calls the given block with each successive grapheme cluster from <code>self</code> (see Unicode Grapheme Cluster Boundaries …\n",null,1],["each_header","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-each_header","()","<p>Calls the block with each key/value pair:\n\n<pre><code>res = Net::HTTP.get_response(hostname, &#39;/todos/1&#39;)\nres.each_header ...\n</code></pre>\n",null,1],["each_include","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-each_include","()","<p>Iterator for included modules\n",null,1],["each_index","Array","ruby/classes/Array.html#method-i-each_index","()","<p>Iterates over array indexes.\n<p>When a block given, passes each successive array index to the block; returns …\n",null,1],["each_key","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-each_key","","<p>Calls block once for each key in the parameters, passing the key. If no block is given, an enumerator …\n",null,0],["each_key","ENV","ruby/classes/ENV.html#method-c-each_key","()","<p>Yields each environment variable name:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;) # =&gt; ENV\nnames = []\nENV.each_key ...\n</code></pre>\n",null,1],["each_key","Hash","ruby/classes/Hash.html#method-i-each_key","()","<p>Calls the given block with each key; returns <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.each_key {|key| puts ...\n</code></pre>\n",null,1],["each_key","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-each_key","()","",null,1],["each_key","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-each_key","()","<p>Iterates over keys. Note that unlike other collections, <code>each_key</code> without block isn’t supported.\n",null,1],["each_key","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-each_key","()","<p>Enumerate subkeys.\n<p>subkey is String which contains name of subkey. wtime is last write time as FILETIME …\n",null,1],["each_line","ARGF","ruby/classes/ARGF.html#method-i-each_line","(*args)","<p>Returns an enumerator which iterates over each line (separated by <em>sep</em>, which defaults to your platform’s …\n",null,1],["each_line","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-each_line","(row_separator)","",null,1],["each_line","CSV::Parser::Scanner","ruby/classes/CSV/Parser/Scanner.html#method-i-each_line","(row_separator)","",null,1],["each_line","IO","ruby/classes/IO.html#method-i-each_line","(*args)","<p>Calls the block with each remaining line read from the stream; returns <code>self</code>. Does nothing if already …\n",null,1],["each_line","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-each_line","(eol=$/)","",null,1],["each_line","Pathname","ruby/classes/Pathname.html#method-i-each_line","(p1 = v1, p2 = v2, p3 = v3)","<p>Iterates over each line in the file and yields a String object for each.\n",null,1],["each_line","String","ruby/classes/String.html#method-i-each_line","(*args)","<p>With a block given, forms the substrings (“lines”) that are the result of splitting <code>self</code> at …\n",null,1],["each_line","StringIO","ruby/classes/StringIO.html#method-i-each_line","(*args)","<p>Calls the block with each remaining line read from the stream; does nothing if already at end-of-file; …\n",null,1],["each_line","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-each_line","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["each_localized_path","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-each_localized_path","(dir, file)","",null,1],["each_method","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-each_method","()","<p>Iterator for methods\n",null,1],["each_name","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-each_name","()","<p>Calls the block with each field key:\n\n<pre><code>res = Net::HTTP.get_response(hostname, &#39;/todos/1&#39;)\nres.each_key do ...\n</code></pre>\n",null,1],["each_name","Resolv","ruby/classes/Resolv.html#method-c-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code>.\n",null,1],["each_name","Resolv","ruby/classes/Resolv.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code>.\n",null,1],["each_name","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-each_name","(address)","<p>Iterates over all hostnames for <code>address</code> retrieved from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4 …\n",null,1],["each_name","Resolv::Hosts","ruby/classes/Resolv/Hosts.html#method-i-each_name","(address, &proc)","<p>Iterates over all hostnames for <code>address</code> retrieved from the hosts file.\n",null,1],["each_neighbor_block","SyntaxSuggest::ParseBlocksFromIndentLine","ruby/classes/SyntaxSuggest/ParseBlocksFromIndentLine.html#method-i-each_neighbor_block","(target_line)","<p>Builds blocks from bottom up\n",null,1],["each_nested_attribute","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-each_nested_attribute","()","",null,0],["each_object","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-each_object","(*args)","<p>Calls the block once for each living, nonimmediate object in this Ruby process. If <em>module</em> is specified, …\n",null,1],["each_option","GetoptLong","ruby/classes/GetoptLong.html#method-i-each_option","()","",null,1],["each_option","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-each_option","(&block)","<p>Iterates over each option, passing the option to the <code>block</code>.\n",null,1],["each_pair","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-each_pair","(&block)","<p>Convert all hashes in values into parameters, then yield each pair in the same way as <code>Hash#each_pair</code> …\n",null,0],["each_pair","CSV::Row","ruby/classes/CSV/Row.html#method-i-each_pair","(&block)","",null,1],["each_pair","ENV","ruby/classes/ENV.html#method-c-each_pair","()","<p>Yields each environment variable name and its value as a 2-element Array:\n\n<pre><code>h = {}\nENV.each_pair { |name, ...\n</code></pre>\n",null,1],["each_pair","Fiddle::CStruct","ruby/classes/Fiddle/CStruct.html#method-i-each_pair","()","",null,1],["each_pair","Hash","ruby/classes/Hash.html#method-i-each_pair","()","<p>Calls the given block with each key-value pair; returns <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.each_pair ...\n</code></pre>\n",null,1],["each_pair","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-each_pair","()","<p>Iterates over keys and values. Note that unlike other collections, <code>each</code> without block isn’t supported. …\n",null,1],["each_pair","OpenStruct","ruby/classes/OpenStruct.html#method-i-each_pair","()","<p>Yields all attributes (as symbols) along with the corresponding values or returns an enumerator if no …\n",null,1],["each_pair","Struct","ruby/classes/Struct.html#method-i-each_pair","()","<p>Calls the given block with each member name/value pair; returns <code>self</code>:\n\n<pre><code>Customer = Struct.new(:name, :address, ...\n</code></pre>\n",null,1],["each_pair","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-each_pair","()","<p>Calls the given block once for each <code>key</code>, <code>value</code> pair in the database.\n<p>Returns <code>self</code>.\n",null,1],["each_parent","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-each_parent","()","<p>Yields each parent of this CodeObject.  See also RDoc::ClassModule#each_ancestor\n",null,1],["each_record","ActiveRecord::Batches::BatchEnumerator","rails/classes/ActiveRecord/Batches/BatchEnumerator.html#method-i-each_record","(&block)","<p>Looping through a collection of records from the database (using the <code>all</code> method, for example) is very …\n",null,0],["each_resource","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-each_resource","(name, typeclass, &proc)","<p>Iterates over all <code>typeclass</code> DNS resources for <code>name</code>.  See #getresource for argument details.\n",null,1],["each_section","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-each_section","()","<p>Iterator for each section’s contents sorted by title.  The <code>section</code>, the section’s <code>constants</code> and …\n",null,1],["each_slice","Enumerable","ruby/classes/Enumerable.html#method-i-each_slice","(p1)","<p>Calls the block with each successive disjoint <code>n</code>-tuple of elements; returns <code>self</code>:\n\n<pre><code>a = []\n(1..10).each_slice(3) ...\n</code></pre>\n",null,1],["each_source","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-each_source","(&b)","<p>Yields each source in the list.\n",null,1],["each_spec","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-each_spec","()","<p>Yields the Gem::Specification for each Tuple in this AvailableSet\n",null,1],["each_strongly_connected_component","TSort","ruby/classes/TSort.html#method-i-each_strongly_connected_component","()","<p>The iterator version of the #strongly_connected_components method. <code><em>obj</em>.each_strongly_connected_component</code> …\n",null,1],["each_strongly_connected_component","TSort","ruby/classes/TSort.html#method-c-each_strongly_connected_component","(each_node, each_child)","<p>The iterator version of the TSort.strongly_connected_components method.\n<p>The graph is represented by <em>each_node</em> …\n",null,1],["each_strongly_connected_component_from","TSort","ruby/classes/TSort.html#method-i-each_strongly_connected_component_from","(node, id_map={}, stack=[])","<p>Iterates over strongly connected component in the subgraph reachable from <em>node</em>.\n<p>Return value is unspecified. …\n",null,1],["each_strongly_connected_component_from","TSort","ruby/classes/TSort.html#method-c-each_strongly_connected_component_from","(node, each_child, id_map={}, stack=[])","<p>Iterates over strongly connected components in a graph. The graph is represented by <em>node</em> and <em>each_child</em> …\n",null,1],["each_sublocale","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-each_sublocale","()","",null,1],["each_top_level_statement","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-each_top_level_statement","()","",null,1],["each_value","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-each_value","(&block)","<p>Convert all hashes in values into parameters, then yield each value in the same way as <code>Hash#each_value</code> …\n",null,0],["each_value","ENV","ruby/classes/ENV.html#method-c-each_value","()","<p>Yields each environment variable value:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;) # =&gt; ENV\nvalues = []\nENV.each_value ...\n</code></pre>\n",null,1],["each_value","Hash","ruby/classes/Hash.html#method-i-each_value","()","<p>Calls the given block with each value; returns <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.each_value {|value| ...\n</code></pre>\n",null,1],["each_value","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-each_value","()","<p>Calls the block with each string field value:\n\n<pre><code>res = Net::HTTP.get_response(hostname, &#39;/todos/1&#39;)\nres.each_value ...\n</code></pre>\n",null,1],["each_value","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-each_value","()","<p>Iterates over values. Note that unlike other collections, <code>each_value</code> without block isn’t supported. …\n",null,1],["each_value","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-each_value","()","<p>Enumerate values.\n",null,1],["each_value","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-each_value","()","<p>Calls the given block for each value in database.\n<p>Returns <code>self</code>.\n",null,1],["each_with_index","Enumerable","ruby/classes/Enumerable.html#method-i-each_with_index","(*args)","<p>With a block given, calls the block with each element and its index; returns <code>self</code>:\n\n<pre><code>h = {}\n(1..4).each_with_index ...\n</code></pre>\n",null,1],["each_with_index","Enumerator","ruby/classes/Enumerator.html#method-i-each_with_index","()","<p>Same as Enumerator#with_index(0), i.e. there is no starting offset.\n<p>If no block is given, a new Enumerator …\n",null,1],["each_with_object","Enumerable","ruby/classes/Enumerable.html#method-i-each_with_object","(p1)","<p>Calls the block once for each element, passing both the element and the given object:\n\n<pre><code>(1..4).each_with_object([]) ...\n</code></pre>\n",null,1],["each_with_object","Enumerator","ruby/classes/Enumerator.html#method-i-each_with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object, <code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,1],["eager","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-eager","()","<p>Returns a non-lazy Enumerator converted from the lazy enumerator.\n",null,1],["eager_autoload","ActiveSupport::Autoload","rails/classes/ActiveSupport/Autoload.html#method-i-eager_autoload","()","",null,0],["eager_load","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-eager_load","(*args)","<p>Forces eager loading by performing a LEFT OUTER JOIN on <code>args</code>:\n\n<pre><code>User.eager_load(:posts)\n# SELECT &quot;users&quot;.&quot;id&quot; ...\n</code></pre>\n",null,0],["eager_load","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-eager_load","()","",null,0],["eager_load!","AbstractController","rails/classes/AbstractController.html#method-c-eager_load-21","()","",null,0],["eager_load!","ActionMailer","rails/classes/ActionMailer.html#method-c-eager_load-21","()","",null,0],["eager_load!","ActionView","rails/classes/ActionView.html#method-c-eager_load-21","()","",null,0],["eager_load!","ActiveModel","rails/classes/ActiveModel.html#method-c-eager_load-21","()","",null,0],["eager_load!","ActiveRecord","rails/classes/ActiveRecord.html#method-c-eager_load-21","()","",null,0],["eager_load!","ActiveRecord::Encryption","rails/classes/ActiveRecord/Encryption.html#method-c-eager_load-21","()","",null,0],["eager_load!","ActiveSupport","rails/classes/ActiveSupport.html#method-c-eager_load-21","()","",null,0],["eager_load!","ActiveSupport::Autoload","rails/classes/ActiveSupport/Autoload.html#method-i-eager_load-21","()","",null,0],["eager_load!","Rails::Application","rails/classes/Rails/Application.html#method-i-eager_load-21","()","<p>Eager loads the application code.\n",null,0],["eager_load!","Rails::Engine","rails/classes/Rails/Engine.html#method-i-eager_load-21","()","",null,0],["eager_load_namespaces","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-eager_load_namespaces","()","<p>All namespaces that are eager loaded\n",null,0],["eager_load_paths","Rails::Engine::Configuration","rails/classes/Rails/Engine/Configuration.html#method-i-eager_load_paths","()","",null,0],["eager_loading?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-eager_loading-3F","()","<p>Returns true if relation needs eager loading.\n",null,0],["ecdh_curves=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ecdh_curves-3D","(p1)","<p>Sets the list of “supported elliptic curves” for this context.\n<p>For a TLS client, the list is …\n",null,1],["echo=","IO","ruby/classes/IO.html#method-i-echo-3D","(p1)","<p>Enables/disables echo back. On some platforms, all combinations of this flags and raw/cooked mode may …\n",null,1],["echo?","IO","ruby/classes/IO.html#method-i-echo-3F","()","<p>Returns <code>true</code> if echo back is enabled.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["ed_digit","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-ed_digit","(key)","",null,1],["ed_transpose_words","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-ed_transpose_words","(line, byte_pointer)","",null,1],["edit.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/scaffold/templates/edit_html_erb_tt.html","","<p>&lt;h1&gt;Editing &lt;%= human_name.downcase %&gt;&lt;/h1&gt;\n<p>&lt;%%= render “form”, &lt;%= …\n",null,0],["edit_helper","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-edit_helper","(...)","",null,0],["editing_mode","Reline::Config","ruby/classes/Reline/Config.html#method-i-editing_mode","()","",null,1],["editing_mode","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-editing_mode","()","",null,1],["editing_mode=","Reline::Config","ruby/classes/Reline/Config.html#method-i-editing_mode-3D","(val)","",null,1],["editing_mode_is?","Reline::Config","ruby/classes/Reline/Config.html#method-i-editing_mode_is-3F","(*val)","",null,1],["egd","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-egd","(p1)","<p>Same as ::egd_bytes but queries 255 bytes by default.\n",null,1],["egd_bytes","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-egd_bytes","(p1, p2)","<p>Queries the entropy gathering daemon EGD on socket path given by <em>filename</em>.\n<p>Fetches <em>length</em> number of bytes …\n",null,1],["egid","Process","ruby/classes/Process.html#method-c-egid","()","<p>Returns the effective group ID for the current process:\n\n<pre><code>Process.egid # =&gt; 500\n</code></pre>\n<p>Not available on all platforms. …\n",null,1],["egid=","Process","ruby/classes/Process.html#method-c-egid-3D","(p1)","<p>Sets the effective group ID for the current process.\n<p>Not available on all platforms.\n",null,1],["eid","Process::GID","ruby/classes/Process/GID.html#method-c-eid","()","<p>Returns the effective group ID for the current process:\n\n<pre><code>Process.egid # =&gt; 500\n</code></pre>\n<p>Not available on all platforms. …\n",null,1],["eid","Process::UID","ruby/classes/Process/UID.html#method-c-eid","()","<p>Returns the effective user ID for the current process.\n\n<pre><code>Process.euid # =&gt; 501\n</code></pre>\n",null,1],["eligible_for_update?","Gem::UpdateSuggestion","ruby/classes/Gem/UpdateSuggestion.html#method-i-eligible_for_update-3F","()","<p>Determines if current environment is eligible for update suggestion.\n",null,1],["em_backward_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-em_backward_word","(line, byte_pointer)","",null,1],["em_big_backward_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-em_big_backward_word","(line, byte_pointer)","",null,1],["em_forward_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-em_forward_word","(line, byte_pointer)","",null,1],["em_forward_word_with_capitalization","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-em_forward_word_with_capitalization","(line, byte_pointer)","",null,1],["emacs_editing_mode","Reline::Core","ruby/classes/Reline/Core.html#method-i-emacs_editing_mode","()","",null,1],["emacs_editing_mode?","Reline::Core","ruby/classes/Reline/Core.html#method-i-emacs_editing_mode-3F","()","",null,1],["email","ActiveRecord::Faker","rails/classes/ActiveRecord/Faker.html#method-c-email","()","",null,0],["email_address_with_name","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-i-email_address_with_name","(address, name)","<p>Returns an email in the format “Name &lt;email@example.com&gt;”.\n<p>If the name is a blank string, …\n",null,0],["email_address_with_name","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-email_address_with_name","(address, name)","<p>Returns an email in the format “Name &lt;email@example.com&gt;”.\n<p>If the name is a blank string, …\n",null,0],["email_exists?","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-email_exists-3F","(email)","<p>Returns <code>true</code> if the email exists.\n",null,0],["email_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-email_field","","<p>Wraps ActionView::Helpers::FormHelper#email_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["email_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-email_field","(object_name, method, options = {})","<p>Returns a text_field of type “email”.\n\n<pre><code>email_field(&quot;user&quot;, &quot;address&quot;)\n# =&gt; &lt;input id=&quot;user_address&quot; ...\n</code></pre>\n",null,0],["email_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-email_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “email”.\n<p>Options\n<p>Supports the same options as #text_field_tag.\n",null,0],["email_to_name","Gem::Security","ruby/classes/Gem/Security.html#method-c-email_to_name","(email_address)","<p>Turns <code>email_address</code> into an OpenSSL::X509::Name\n",null,1],["emails","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-emails","()","<p>Returns all of the available email previews.\n",null,0],["emphasis","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-emphasis","(text)","<p>Wraps <code>text</code> in emphasis for rdoc inline formatting\n",null,1],["empty","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-c-empty","()","",null,0],["empty","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-empty","()","<p>Called when an empty event happens. (Which, as far as I can tell, is never).\n",null,1],["empty?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-empty-3F","","<p>Returns true if the parameters have no key/value pairs.\n",null,0],["empty?","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-empty-3F","()","",null,0],["empty?","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the collection is empty. If the collection has been loaded it is equivalent to <code>collection.size.zero?</code> …\n",null,0],["empty?","ActiveRecord::DatabaseConfigurations","rails/classes/ActiveRecord/DatabaseConfigurations.html#method-i-empty-3F","()","<p>Checks if the application’s configurations are empty.\n<p>Aliased to blank?\n",null,0],["empty?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-empty-3F","()","<p>Returns true if there are no records.\n",null,0],["empty?","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-empty-3F","()","<p>Returns true if there are no records, otherwise false.\n",null,0],["empty?","Array","ruby/classes/Array.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the count of elements in <code>self</code> is zero, <code>false</code> otherwise.\n",null,1],["empty?","CSV::FieldsConverter","ruby/classes/CSV/FieldsConverter.html#method-i-empty-3F","()","",null,1],["empty?","Dir","ruby/classes/Dir.html#method-c-empty-3F","(p1)","<p>Returns whether <code>dirpath</code> specifies an empty directory:\n\n<pre><code>dirpath = &#39;/tmp/foo&#39;\nDir.mkdir(dirpath)\nDir.empty?(dirpath) ...\n</code></pre>\n",null,1],["empty?","ENV","ruby/classes/ENV.html#method-c-empty-3F","()","<p>Returns <code>true</code> when there are no environment variables, <code>false</code> otherwise:\n\n<pre><code>ENV.clear\nENV.empty? # =&gt; true ...\n</code></pre>\n",null,1],["empty?","File","ruby/classes/File.html#method-c-empty-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n<p><em>file_name</em> can be an IO object.\n",null,1],["empty?","FileTest","ruby/classes/FileTest.html#method-i-empty-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n<p><em>file_name</em> can be an IO object.\n",null,1],["empty?","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-empty-3F","()","",null,1],["empty?","Gem::Package::TarHeader","ruby/classes/Gem/Package/TarHeader.html#method-i-empty-3F","()","<p>Is the tar entry empty?\n",null,1],["empty?","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-empty-3F","()","",null,1],["empty?","Gem::Resolver::RequirementList","ruby/classes/Gem/Resolver/RequirementList.html#method-i-empty-3F","()","<p>Is the list empty?\n",null,1],["empty?","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-empty-3F","()","<p>Returns true if there are no sources in this SourceList.\n",null,1],["empty?","Hash","ruby/classes/Hash.html#method-i-empty-3F","()","<p>Returns <code>true</code> if there are no hash entries, <code>false</code> otherwise:\n\n<pre><code>{}.empty? # =&gt; true\n{foo: 0, bar: 1, baz: ...\n</code></pre>\n",null,1],["empty?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-empty-3F","()","<p>If the buffer has 0 size: it is created by ::new with size 0, or with ::for from an empty string. (Note …\n",null,1],["empty?","Pathname","ruby/classes/Pathname.html#method-i-empty-3F","()","<p>Tests the file is empty.\n<p>See Dir#empty? and FileTest.empty?.\n",null,1],["empty?","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-empty-3F","()","<p>A comment is empty if its text String is empty.\n",null,1],["empty?","Ractor::Selector","ruby/classes/Ractor/Selector.html#method-i-empty-3F","()","",null,1],["empty?","Reline::KillRing::RingBuffer","ruby/classes/Reline/KillRing/RingBuffer.html#method-i-empty-3F","()","",null,1],["empty?","Resolv::DNS::SvcParams","ruby/classes/Resolv/DNS/SvcParams.html#method-i-empty-3F","()","<p>Get whether this list is empty.\n",null,1],["empty?","Set","ruby/classes/Set.html#method-i-empty-3F","()","<p>Returns true if the set contains no elements.\n",null,1],["empty?","String","ruby/classes/String.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the length of <code>self</code> is zero, <code>false</code> otherwise:\n\n<pre><code>&quot;hello&quot;.empty? # =&gt; false\n&quot; &quot;.empty? # =&gt; ...\n</code></pre>\n",null,1],["empty?","StringScanner","ruby/classes/StringScanner.html#method-i-empty-3F","()","<p>Equivalent to #eos?. This method is obsolete, use #eos? instead.\n",null,1],["empty?","Symbol","ruby/classes/Symbol.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <code>self</code> is <code>:&#39;&#39;</code>, <code>false</code> otherwise.\n",null,1],["empty?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-empty-3F","()","<p>An ‘empty?` line is one that was originally left empty in the source code, while a “hidden” …\n",null,1],["empty?","SyntaxSuggest::PriorityEngulfQueue","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html#method-i-empty-3F","()","",null,1],["empty?","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-empty-3F","()","",null,1],["empty?","SyntaxSuggest::UnvisitedLines","ruby/classes/SyntaxSuggest/UnvisitedLines.html#method-i-empty-3F","()","",null,1],["empty?","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the queue is empty.\n",null,1],["empty?","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-empty-3F","()","<p>Returns <code>true</code> if the queue is empty.\n",null,1],["empty_buffer?","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-empty_buffer-3F","()","",null,1],["empty_buffer?","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-empty_buffer-3F","()","",null,1],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-empty_insert_statement_value","(primary_key = nil)","",null,0],["emulate_booleans","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-emulate_booleans","","<p>By default, the Mysql2Adapter will consider all columns of type <code>tinyint(1)</code> as boolean. If you wish to …\n",null,0],["enable","GC","ruby/classes/GC.html#method-c-enable","()","<p>Enables garbage collection, returning <code>true</code> if garbage collection was previously disabled.\n\n<pre><code>GC.disable  ...\n</code></pre>\n",null,1],["enable","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-enable","()","<p>Starts the GC profiler.\n",null,1],["enable","RubyVM::RJIT","ruby/classes/RubyVM/RJIT.html#method-c-enable","()","<p>Start JIT compilation after –rjit-disable.\n",null,1],["enable","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-enable","(stats: false)","<p>Enable YJIT compilation. <code>stats</code> option decides whether to enable YJIT stats or not.\n<p><code>false</code>: Disable stats. …\n",null,1],["enable","TracePoint","ruby/classes/TracePoint.html#method-i-enable","(target: nil, target_line: nil, target_thread: :default)","<p>Activates the trace.\n<p>Returns <code>true</code> if trace was enabled. Returns <code>false</code> if trace was disabled.\n\n<pre><code>trace.enabled? ...\n</code></pre>\n",null,1],["enable_close","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-enable_close","()","<p>Enable a call to dlclose() when this handle is garbage collected.\n",null,1],["enable_config","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-enable_config","(config, default=nil)","<p>Tests for the presence of an <code>--enable-</code><em>config</em> or <code>--disable-</code><em>config</em> option. Returns <code>true</code> if the enable option …\n",null,1],["enable_extension","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-enable_extension","(name)","<p>This is meant to be implemented by the adapters that support extensions\n",null,0],["enable_extension","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-enable_extension","(name)","",null,0],["enable_fallback_scsv","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-enable_fallback_scsv","()","<p>Activate TLS_FALLBACK_SCSV for this context. See RFC 7507.\n",null,1],["enable_image_processing_gem","ActionText::Generators::InstallGenerator","rails/classes/ActionText/Generators/InstallGenerator.html#method-i-enable_image_processing_gem","()","",null,0],["enable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-enable_query_cache-21","()","",null,0],["enable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache::ConnectionPoolConfiguration","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache/ConnectionPoolConfiguration.html#method-i-enable_query_cache-21","()","",null,0],["enable_warnings","Kernel","rails/classes/Kernel.html#method-i-enable_warnings","(&block)","<p>Sets $VERBOSE to <code>true</code> for the duration of the block and back to its original value afterwards.\n",null,0],["enabled?","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-enabled-3F","()","<p>The current status of GC profile mode.\n",null,1],["enabled?","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-enabled-3F","()","",null,1],["enabled?","RubyVM::RJIT","ruby/classes/RubyVM/RJIT.html#method-c-enabled-3F","()","<p>Return true if RJIT is enabled.\n",null,1],["enabled?","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-enabled-3F","()","<p>Check if YJIT is enabled.\n",null,1],["enabled?","TracePoint","ruby/classes/TracePoint.html#method-i-enabled-3F","()","<p>The current status of the trace\n",null,1],["enc_key","OpenSSL::PKCS7::RecipientInfo","ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-enc_key","()","",null,1],["enclose","ThreadGroup","ruby/classes/ThreadGroup.html#method-i-enclose","()","<p>Prevents threads from being added to or removed from the receiving ThreadGroup.\n<p>New threads can still …\n",null,1],["enclosed?","ThreadGroup","ruby/classes/ThreadGroup.html#method-i-enclosed-3F","()","<p>Returns <code>true</code> if the <code>thgrp</code> is enclosed. See also ThreadGroup#enclose.\n",null,1],["encode","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-c-encode","(transformations)","<p>Returns a signed key for the <code>transformations</code>, which can be used to refer to a specific variation in a …\n",null,0],["encode","ActiveSupport::JSON","rails/classes/ActiveSupport/JSON.html#method-c-encode","(value, options = nil)","<p>Dumps objects in JSON (JavaScript Object Notation). See www.json.org for more info.\n\n<pre><code>ActiveSupport::JSON.encode({ ...\n</code></pre>\n",null,0],["encode","String","ruby/classes/String.html#method-i-encode","(*args)","<p>Returns a copy of <code>self</code> transcoded as determined by <code>dst_encoding</code>. By default, raises an exception if  …\n",null,1],["encode!","ActionView::Template","rails/classes/ActionView/Template.html#method-i-encode-21","()","<p>This method is responsible for properly setting the encoding of the source. Until this point, we assume …\n",null,0],["encode!","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-encode-21","(encoding)","<p>HACK dubious\n",null,1],["encode!","String","ruby/classes/String.html#method-i-encode-21","(*args)","<p>Like #encode, but applies encoding changes to <code>self</code>; returns <code>self</code>.\n",null,1],["encode64","Base64","ruby/classes/Base64.html#method-i-encode64","(bin)","<p>Returns a string containing the RFC-2045-compliant Base64-encoding of <code>bin</code>.\n<p>Per RFC 2045, the returned …\n",null,1],["encode_credentials","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-encode_credentials","(user_name, password)","",null,0],["encode_credentials","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-encode_credentials","(http_method, credentials, password, password_is_ha1)","",null,0],["encode_credentials","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-encode_credentials","(token, options = {})","<p>Encodes the given token and options into an Authorization header value.\n<p>Returns String.\n<p>Parameters\n",null,0],["encode_fallback","RDoc::Text","ruby/classes/RDoc/Text.html#method-c-encode_fallback","(character, encoding, fallback)","<p>Transcodes <code>character</code> to <code>encoding</code> with a <code>fallback</code> character.\n",null,1],["encode_uri_component","URI","ruby/classes/URI.html#method-c-encode_uri_component","(str, enc=nil)","<p>Like URI.encode_www_form_component, except that <code>&#39; &#39;</code> (space) is encoded as <code>&#39;%20&#39;</code> (instead …\n",null,1],["encode_with","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-encode_with","(coder)","",null,0],["encode_with","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-encode_with","(coder)","<p>Populate <code>coder</code> with attributes about this record that should be serialized. The structure of <code>coder</code> defined …\n",null,0],["encode_with","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-encode_with","(coder)","<p>Serializes the relation objects Array.\n",null,0],["encode_with","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-encode_with","(coder)","",null,0],["encode_with_invalid_byte_sequence","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-encode_with_invalid_byte_sequence","(str, enc)","",null,1],["encode_www_form","URI","ruby/classes/URI.html#method-c-encode_www_form","(enum, enc=nil)","<p>Returns a URL-encoded string derived from the given Enumerable <code>enum</code>.\n<p>The result is suitable for use as …\n",null,1],["encode_www_form_component","URI","ruby/classes/URI.html#method-c-encode_www_form_component","(str, enc=nil)","<p>Returns a URL-encoded string derived from the given string <code>str</code>.\n<p>The returned string:\n<p>Preserves:\n",null,1],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-encoding","()","<p>Returns the current database encoding format.\n",null,0],["encoding","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-encoding","()","<p>Returns the current database encoding format as a string, e.g. ‘UTF-8’\n",null,0],["encoding","IRB::FileInputMethod","ruby/classes/IRB/FileInputMethod.html#method-i-encoding","()","<p>The external encoding for standard input.\n",null,1],["encoding","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-encoding","()","",null,1],["encoding","IRB::StdioInputMethod","ruby/classes/IRB/StdioInputMethod.html#method-i-encoding","()","<p>The external encoding for standard input.\n",null,1],["encoding","Regexp","ruby/classes/Regexp.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,1],["encoding","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-encoding","()","",null,1],["encoding","Reline::Core","ruby/classes/Reline/Core.html#method-i-encoding","()","",null,1],["encoding","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-encoding","()","",null,1],["encoding","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-encoding","()","",null,1],["encoding","String","ruby/classes/String.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,1],["encoding","Symbol","ruby/classes/Symbol.html#method-i-encoding","()","<p>Equivalent to <code>self.to_s.encoding</code>; see String#encoding.\n",null,1],["encoding=","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-encoding-3D","(value)","",null,0],["encoding_system_needs","Reline","ruby/classes/Reline.html#method-c-encoding_system_needs","()","",null,1],["encoding_system_needs","Reline","ruby/classes/Reline.html#method-c-encoding_system_needs","()","",null,1],["encodings","","ruby/files/ruby/doc/encodings_rdoc.html","","<p>Encodings\n<p>The Basics\n<p>A character encoding, often shortened to <em>encoding</em>, is a mapping between:\n",null,1],["encrypt","ActionText::Encryption","rails/classes/ActionText/Encryption.html#method-i-encrypt","()","",null,0],["encrypt","ActiveRecord::Encryption::Cipher","rails/classes/ActiveRecord/Encryption/Cipher.html#method-i-encrypt","(clean_text, key:, deterministic: false)","<p>Encrypts the provided text and return an encrypted <code>Message</code>.\n",null,0],["encrypt","ActiveRecord::Encryption::Cipher::Aes256Gcm","rails/classes/ActiveRecord/Encryption/Cipher/Aes256Gcm.html#method-i-encrypt","(clear_text)","",null,0],["encrypt","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-encrypt","()","<p>Encrypts all the encryptable attributes and saves the changes.\n",null,0],["encrypt","ActiveRecord::Encryption::Encryptor","rails/classes/ActiveRecord/Encryption/Encryptor.html#method-i-encrypt","(clear_text, key_provider: default_key_provider, cipher_options: {})","<p>Encrypts <code>clean_text</code> and returns the encrypted result\n<p>Internally, it will:\n<p>Create a new ActiveRecord::Encryption::Message …\n",null,0],["encrypt","ActiveRecord::Encryption::NullEncryptor","rails/classes/ActiveRecord/Encryption/NullEncryptor.html#method-i-encrypt","(clean_text, key_provider: nil, cipher_options: {})","",null,0],["encrypt","ActiveRecord::Encryption::ReadOnlyNullEncryptor","rails/classes/ActiveRecord/Encryption/ReadOnlyNullEncryptor.html#method-i-encrypt","(clean_text, key_provider: nil, cipher_options: {})","",null,0],["encrypt","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-encrypt","(*args)","<p>Initializes the Cipher for encryption.\n<p>Make sure to call Cipher#encrypt or Cipher#decrypt before using …\n",null,1],["encrypt","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-c-encrypt","(p1, p2, p3 = v3, p4 = v4)","",null,1],["encrypt","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-encrypt","(p1, p2 = v2)","<p>Performs a public key encryption operation using <code>pkey</code>.\n<p>See #decrypt for the reverse operation.\n<p>Added in …\n",null,1],["encrypt_and_sign","ActiveSupport::MessageEncryptor","rails/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt_and_sign","(value, expires_at: nil, expires_in: nil, purpose: nil)","<p>Encrypt and sign a message. We need to sign the message in order to avoid padding attacks. Reference: …\n",null,0],["encrypt_attribute","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-encrypt_attribute","(name, attribute_scheme)","",null,0],["encrypted","ActionDispatch::Cookies::ChainedCookieJars","rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-encrypted","()","<p>Returns a jar that’ll automatically encrypt cookie values before sending them to the client and will …\n",null,0],["encrypted","Rails::Application","rails/classes/Rails/Application.html#method-i-encrypted","(path, key_path: \"config/master.key\", env_key: \"RAILS_MASTER_KEY\")","<p>Returns an ActiveSupport::EncryptedConfiguration instance for an encrypted file. By default, the encryption …\n",null,0],["encrypted?","ActiveRecord::Encryption::Encryptor","rails/classes/ActiveRecord/Encryption/Encryptor.html#method-i-encrypted-3F","(text)","<p>Returns whether the text is encrypted or not\n",null,0],["encrypted?","ActiveRecord::Encryption::NullEncryptor","rails/classes/ActiveRecord/Encryption/NullEncryptor.html#method-i-encrypted-3F","(text)","",null,0],["encrypted?","ActiveRecord::Encryption::ReadOnlyNullEncryptor","rails/classes/ActiveRecord/Encryption/ReadOnlyNullEncryptor.html#method-i-encrypted-3F","(text)","",null,0],["encrypted_attribute?","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-encrypted_attribute-3F","(attribute_name)","<p>Returns whether a given attribute is encrypted or not.\n",null,0],["encryption_aware_type_caster","ActiveRecord::Encryption::ExtendedDeterministicQueries::InWithAdditionalValues","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/InWithAdditionalValues.html#method-i-encryption_aware_type_caster","()","",null,0],["encryption_key","ActiveRecord::Encryption::EnvelopeEncryptionKeyProvider","rails/classes/ActiveRecord/Encryption/EnvelopeEncryptionKeyProvider.html#method-i-encryption_key","()","",null,0],["encryption_key","ActiveRecord::Encryption::KeyProvider","rails/classes/ActiveRecord/Encryption/KeyProvider.html#method-i-encryption_key","()","<p>Returns the first key in the list as the active key to perform encryptions\n<p>When <code>ActiveRecord::Encryption.config.store_key_references</code> …\n",null,0],["encrypts","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-encrypts","(*names, key_provider: nil, key: nil, deterministic: false, downcase: false, ignore_case: false, previous: [], **context_properties)","<p>Encrypts the <code>name</code> attribute.\n<p>Options\n<p><code>:key_provider</code> - A key provider to provide encryption and decryption …\n",null,0],["end","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-end","()","",null,1],["end","MatchData","ruby/classes/MatchData.html#method-i-end","(p1)","<p>Returns the offset (in characters) of the end of the specified match.\n<p>When non-negative integer argument …\n",null,1],["end","Range","ruby/classes/Range.html#method-i-end","()","<p>Returns the object that defines the end of <code>self</code>.\n\n<pre><code>(1..4).end  # =&gt; 4\n(1...4).end # =&gt; 4\n(1..).end   # =&gt; ...\n</code></pre>\n",null,1],["end","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-end","()","<p>Closes the stream. All operations on the closed stream will raise an exception.\n",null,1],["end?","RDoc::Parser::RipperStateLex","ruby/classes/RDoc/Parser/RipperStateLex.html#method-c-end-3F","(token)","<p>Returns <code>true</code> if lex state will be <code>END</code> after <code>token</code>.\n",null,1],["end_addr","IPAddr","ruby/classes/IPAddr.html#method-i-end_addr","()","",null,1],["end_character_column","Prism::Location","ruby/classes/Prism/Location.html#method-i-end_character_column","()","<p>The column number in characters where this location ends from the start of the line.\n",null,1],["end_character_offset","Prism::Location","ruby/classes/Prism/Location.html#method-i-end_character_offset","()","<p>The character offset from the beginning of the source where this location ends.\n",null,1],["end_column","Prism::Location","ruby/classes/Prism/Location.html#method-i-end_column","()","<p>The column number in bytes where this location ends from the start of the line.\n",null,1],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_document","()","",null,0],["end_document","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-end_document","(p1)","<p>End a document emission with an <code>implicit</code> ending.\n<p>See Psych::Handler#end_document\n",null,1],["end_document","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-end_document","(implicit)","<p>Called with the document ends.  <code>implicit</code> is a boolean value indicating whether or not the document has …\n",null,1],["end_document","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-i-end_document","(implicit_end = !streaming?)","<p>Handles end_document events with <code>version</code>, <code>tag_directives</code>, and <code>implicit</code> styling.\n<p>See Psych::Handler#start_document …\n",null,1],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_element","(name)","",null,0],["end_line","Prism::Location","ruby/classes/Prism/Location.html#method-i-end_line","()","<p>The line number where this location ends.\n",null,1],["end_mapping","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-end_mapping","()","<p>Emit the end of a mapping.\n<p>See Psych::Handler#end_mapping\n",null,1],["end_mapping","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-end_mapping","()","<p>Called when a map ends\n",null,1],["end_of_day","Date","rails/classes/Date.html#method-i-end_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion set to the end of the day (23:59:59) …\n",null,0],["end_of_day","DateTime","rails/classes/DateTime.html#method-i-end_of_day","()","<p>Returns a new DateTime representing the end of the day (23:59:59).\n",null,0],["end_of_day","Time","rails/classes/Time.html#method-i-end_of_day","()","<p>Returns a new Time representing the end of the day, 23:59:59.999999\n",null,0],["end_of_hour","DateTime","rails/classes/DateTime.html#method-i-end_of_hour","()","<p>Returns a new DateTime representing the end of the hour (hh:59:59).\n",null,0],["end_of_hour","Time","rails/classes/Time.html#method-i-end_of_hour","()","<p>Returns a new Time representing the end of the hour, x:59:59.999999\n",null,0],["end_of_line","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-end_of_line","(key)","",null,1],["end_of_minute","DateTime","rails/classes/DateTime.html#method-i-end_of_minute","()","<p>Returns a new DateTime representing the end of the minute (hh:mm:59).\n",null,0],["end_of_minute","Time","rails/classes/Time.html#method-i-end_of_minute","()","<p>Returns a new Time representing the end of the minute, x:xx:59.999999\n",null,0],["end_of_month","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-end_of_month","()","<p>Returns a new date/time representing the end of the month. DateTime objects will have a time set to 23:59:59. …\n",null,0],["end_of_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-end_of_quarter","()","<p>Returns a new date/time at the end of the quarter.\n\n<pre><code>today = Date.today # =&gt; Fri, 10 Jul 2015\ntoday.end_of_quarter ...\n</code></pre>\n",null,0],["end_of_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-end_of_week","(start_day = Date.beginning_of_week)","<p>Returns a new date/time representing the end of this week on the given day. Week is assumed to start …\n",null,0],["end_of_year","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-end_of_year","()","<p>Returns a new date/time representing the end of the year. DateTime objects will have a time set to 23:59:59. …\n",null,0],["end_offset","Prism::Location","ruby/classes/Prism/Location.html#method-i-end_offset","()","<p>The byte offset from the beginning of the source where this location ends.\n",null,1],["end_sequence","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-end_sequence","()","<p>End sequence emission.\n<p>See Psych::Handler#end_sequence\n",null,1],["end_sequence","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-end_sequence","()","<p>Called when a sequence ends.\n",null,1],["end_stream","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-end_stream","()","<p>End a stream emission\n<p>See Psych::Handler#end_stream\n",null,1],["end_stream","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-end_stream","()","<p>Called when the YAML stream ends\n",null,1],["end_stream","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-i-end_stream","()","",null,1],["end_with?","String","ruby/classes/String.html#method-i-end_with-3F","(*args)","<p>Returns whether <code>self</code> ends with any of the given <code>strings</code>.\n<p>Returns <code>true</code> if any given string matches the …\n",null,1],["end_with?","Symbol","ruby/classes/Symbol.html#method-i-end_with-3F","(*args)","<p>Equivalent to <code>self.to_s.end_with?</code>; see String#end_with?.\n",null,1],["ended?","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-ended-3F","()","<p>Returns true if the stream is closed.\n",null,1],["endgrent","Etc","ruby/classes/Etc.html#method-c-endgrent","()","<p>Ends the process of scanning through the <code>/etc/group</code> file begun by ::getgrent, and closes the file.\n",null,1],["endpoint","Rails::Engine","rails/classes/Rails/Engine.html#method-i-endpoint","()","<p>Returns the endpoint for this engine. If none is registered, defaults to an ActionDispatch::Routing::RouteSet …\n",null,0],["endpoint","Rails::Engine","rails/classes/Rails/Engine.html#method-c-endpoint","(endpoint = nil)","",null,0],["endpwent","Etc","ruby/classes/Etc.html#method-c-endpwent","()","<p>Ends the process of scanning through the <code>/etc/passwd</code> file begun with ::getpwent, and closes the file. …\n",null,1],["engine.rake","","rails/files/rails/railties/lib/rails/tasks/engine_rake.html","","<p># frozen_string_literal: true\n<p>task “load_app” do\n\n<pre><code>namespace :app do\n  load APP_RAKEFILE\n\n  desc ...\n</code></pre>\n",null,0],["engine.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/lib/%namespaced_name%/engine_rb_tt.html","","<p>&lt;%= wrap_in_modules &lt;&lt;~rb\n\n<pre><code>class Engine &lt; ::Rails::Engine\n#{mountable? ? &quot;  isolate_namespace ...\n</code></pre>\n",null,0],["engine?","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-engine-3F","()","<p>Returns true when the app is a Rails engine.\n",null,0],["engine_manifest.js.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/rails/engine_manifest_js_tt.html","","<p>&lt;% if mountable? -%&gt; &lt;% if !options.skip_javascript -%&gt; //= link_directory ../javascripts/&lt;%= …\n",null,0],["engines","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-c-engines","()","<p>Returns an array of currently loaded engines.\n",null,1],["england","Date","ruby/classes/Date.html#method-i-england","()","<p>Equivalent to Date#new_start with argument Date::ENGLAND.\n",null,1],["enhanced?","Reline::Windows::KeyEventRecord","ruby/classes/Reline/Windows/KeyEventRecord.html#method-i-enhanced-3F","()","",null,1],["enq","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-enq","(p1)","<p>Pushes the given <code>object</code> to the queue.\n",null,1],["enq","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-enq","(object, non_block = false, timeout: nil)","",null,1],["enqueue","ActiveJob::Enqueuing","rails/classes/ActiveJob/Enqueuing.html#method-i-enqueue","(options = {})","<p>Enqueues the job to be performed by the queue adapter.\n<p>Options\n<p><code>:wait</code> - Enqueues the job with the specified …\n",null,0],["ensure_confirmation_sent","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-ensure_confirmation_sent","()","",null,0],["ensure_default_gem_subdirectories","Gem","ruby/classes/Gem.html#method-c-ensure_default_gem_subdirectories","(dir = Gem.dir, mode = nil)","<p>Quietly ensure the Gem directory <code>dir</code> contains all the proper subdirectories for handling default gems. …\n",null,1],["ensure_dependency","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-ensure_dependency","(spec, dependency)","<p>Ensure that the dependency is satisfied by the current installation of gem.  If it is not an exception …\n",null,1],["ensure_gem_subdirectories","Gem","ruby/classes/Gem.html#method-c-ensure_gem_subdirectories","(dir = Gem.dir, mode = nil)","<p>Quietly ensure the Gem directory <code>dir</code> contains all the proper subdirectories.  If we can’t create …\n",null,1],["ensure_loadable_spec","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-ensure_loadable_spec","()","<p>Ensures the Gem::Specification written out for this gem is loadable upon installation.\n",null,1],["enter","Monitor","ruby/classes/Monitor.html#method-i-enter","()","",null,1],["entity","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-i-entity","()","",null,1],["entity_class","Fiddle::CStruct","ruby/classes/Fiddle/CStruct.html#method-c-entity_class","()","<p>accessor to Fiddle::CStructEntity\n",null,1],["entity_class","Fiddle::CUnion","ruby/classes/Fiddle/CUnion.html#method-c-entity_class","()","<p>accessor to Fiddle::CUnionEntity\n",null,1],["entries","Dir","ruby/classes/Dir.html#method-c-entries","(*args)","<p>Returns an array of the entry names in the directory at <code>dirpath</code>; sets the given encoding onto each returned …\n",null,1],["entries","Enumerable","ruby/classes/Enumerable.html#method-i-entries","(*args)","<p>Returns an array containing the items in <code>self</code>:\n\n<pre><code>(0..4).to_a # =&gt; [0, 1, 2, 3, 4]\n</code></pre>\n",null,1],["entries","Pathname","ruby/classes/Pathname.html#method-i-entries","()","<p>Return the entries (files and subdirectories) in the directory, each as a Pathname object.\n<p>The results …\n",null,1],["entries","Range","ruby/classes/Range.html#method-i-entries","()","<p>Returns an array containing the elements in <code>self</code>, if a finite collection; raises an exception otherwise. …\n",null,1],["enum","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-enum","","",null,0],["enum","ActiveRecord::Enum","rails/classes/ActiveRecord/Enum.html#method-i-enum","(name = nil, values = nil, **options)","",null,0],["enum_for","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-enum_for","(*args)","<p>Similar to Object#to_enum, except it returns a lazy enumerator. This makes it easy to define Enumerable …\n",null,1],["enum_for","Object","ruby/classes/Object.html#method-i-enum_for","(*args)","<p>Creates a new Enumerator which will enumerate by calling <code>method</code> on <code>obj</code>, passing <code>args</code> if any. What was …\n",null,1],["enum_types","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-enum_types","()","<p>Returns a list of defined enum types, and their values.\n",null,0],["enumerate","Rails::SourceAnnotationExtractor","rails/classes/Rails/SourceAnnotationExtractor.html#method-c-enumerate","(tag = nil, options = {})","<p>Prints all annotations with tag <code>tag</code> under the root directories <code>app</code>, <code>config</code>, <code>db</code>, <code>lib</code>, and <code>test</code> (recursively). …\n",null,0],["enumerate_columns_in_select_statements","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-enumerate_columns_in_select_statements","","<p>Force enumeration of all columns in SELECT statements. e.g. <code>SELECT first_name, last_name FROM ...</code> instead …\n",null,0],["env","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-env","()","",null,0],["env","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-env","()","",null,0],["env","Rails","rails/classes/Rails.html#method-c-env","()","<p>Returns the current Rails environment.\n\n<pre><code>Rails.env # =&gt; &quot;development&quot;\nRails.env.development? # =&gt; true\nRails.env.production? ...\n</code></pre>\n",null,0],["env=","Rails","rails/classes/Rails.html#method-c-env-3D","(environment)","<p>Sets the Rails environment.\n\n<pre><code>Rails.env = &quot;staging&quot; # =&gt; &quot;staging&quot;\n</code></pre>\n",null,0],["env_config","Rails::Application","rails/classes/Rails/Application.html#method-i-env_config","()","<p>Stores some of the Rails initial environment parameters which will be used by middlewares and engines …\n",null,0],["env_config","Rails::Engine","rails/classes/Rails/Engine.html#method-i-env_config","()","<p>Defines additional Rack env configuration that is added on each call.\n",null,0],["env_filter","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-env_filter","()","",null,0],["env_requirement","Gem","ruby/classes/Gem.html#method-c-env_requirement","(gem_name)","",null,1],["environment","Rails::Console","rails/classes/Rails/Console.html#method-i-environment","()","",null,0],["environment","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-i-environment","()","",null,0],["environment","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-environment","(data = nil, options = {})","<p>Adds configuration code to a Rails runtime environment.\n<p>By default, adds code inside the <code>Application</code> class …\n",null,0],["environment","Bundler","ruby/classes/Bundler.html#method-c-environment","()","",null,1],["environment","OptionParser","ruby/classes/OptionParser.html#method-i-environment","(env = File.basename($0, '.*'))","<p>Parses environment variable <code>env</code> or its uppercase with splitting like a shell.\n<p><code>env</code> defaults to the basename …\n",null,1],["environment.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/environment_rb_tt.html","","<p># Load the Rails application. require_relative “application”\n<p># Initialize the Rails application. …\n",null,0],["environment?","Rails::Console","rails/classes/Rails/Console.html#method-i-environment-3F","()","",null,0],["eof","ARGF","ruby/classes/ARGF.html#method-i-eof","()","<p>Returns true if the current file in ARGF is at end of file, i.e. it has no data to read. The stream must …\n",null,1],["eof","CSV","ruby/classes/CSV.html#method-i-eof","()","",null,1],["eof","IO","ruby/classes/IO.html#method-i-eof","()","<p>Returns <code>true</code> if the stream is positioned at its end, <code>false</code> otherwise; see Position:\n\n<pre><code>f = File.open(&#39;t.txt&#39;) ...\n</code></pre>\n",null,1],["eof","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-eof","()","",null,1],["eof","StringIO","ruby/classes/StringIO.html#method-i-eof","()","<p>Returns <code>true</code> if positioned at end-of-stream, <code>false</code> otherwise; see Position.\n<p>Raises IOError if the stream …\n",null,1],["eof","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-eof","()","<p>Returns <code>true</code> or <code>false</code> whether the stream has reached the end.\n",null,1],["eof?","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-eof-3F","()","<p>Shortcut for <code>tempfile.eof?</code>.\n",null,0],["eof?","ARGF","ruby/classes/ARGF.html#method-i-eof-3F","()","<p>Returns true if the current file in ARGF is at end of file, i.e. it has no data to read. The stream must …\n",null,1],["eof?","CSV","ruby/classes/CSV.html#method-i-eof-3F","()","",null,1],["eof?","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-eof-3F","()","<p>Are we at the end of the tar entry?\n",null,1],["eof?","IO","ruby/classes/IO.html#method-i-eof-3F","()","<p>Returns <code>true</code> if the stream is positioned at its end, <code>false</code> otherwise; see Position:\n\n<pre><code>f = File.open(&#39;t.txt&#39;) ...\n</code></pre>\n",null,1],["eof?","IRB::FileInputMethod","ruby/classes/IRB/FileInputMethod.html#method-i-eof-3F","()","<p>Whether the end of this input method has been reached, returns <code>true</code> if there is no more data to read. …\n",null,1],["eof?","IRB::ReadlineInputMethod","ruby/classes/IRB/ReadlineInputMethod.html#method-i-eof-3F","()","<p>Whether the end of this input method has been reached, returns <code>true</code> if there is no more data to read. …\n",null,1],["eof?","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-eof-3F","()","<p>Whether the end of this input method has been reached, returns <code>true</code> if there is no more data to read. …\n",null,1],["eof?","IRB::StdioInputMethod","ruby/classes/IRB/StdioInputMethod.html#method-i-eof-3F","()","<p>Whether the end of this input method has been reached, returns <code>true</code> if there is no more data to read. …\n",null,1],["eof?","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-eof-3F","()","<p>Returns true if the stream is at file which means there is no more data to be read.\n",null,1],["eof?","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-eof-3F","()","",null,1],["eof?","StringIO","ruby/classes/StringIO.html#method-i-eof-3F","()","<p>Returns <code>true</code> if positioned at end-of-stream, <code>false</code> otherwise; see Position.\n<p>Raises IOError if the stream …\n",null,1],["eof?","XMP::StringInputMethod","ruby/classes/XMP/StringInputMethod.html#method-i-eof-3F","()","<p>Whether there are any expressions left in this printer.\n",null,1],["eof?","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-eof-3F","()","<p>Returns <code>true</code> or <code>false</code> whether the stream has reached the end.\n",null,1],["eos?","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-eos-3F","()","",null,1],["eos?","StringScanner","ruby/classes/StringScanner.html#method-i-eos-3F","()","<p>Returns <code>true</code> if the scan pointer is at the end of the string.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\np s.eos? ...\n</code></pre>\n",null,1],["eql?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-eql-3F","(other)","",null,0],["eql?","ActionView::FileSystemResolver","rails/classes/ActionView/FileSystemResolver.html#method-i-eql-3F","(resolver)","",null,0],["eql?","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-eql-3F","","<p>Equivalent to <code>String#eql?</code>. Returns <code>true</code> if the class name and <code>other</code> have the same length and content, …\n",null,0],["eql?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-eql-3F","(other)","",null,0],["eql?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-eql-3F","(other)","",null,0],["eql?","ActiveRecord::Associations::Preloader::Association::LoaderQuery","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderQuery.html#method-i-eql-3F","(other)","",null,0],["eql?","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-eql-3F","(comparison_object)","",null,0],["eql?","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-eql-3F","(other)","<p>Returns <code>true</code> if <code>other</code> is also a Duration instance, which has the same parts as this one.\n",null,0],["eql?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-eql-3F","(other)","<p>Returns <code>true</code> if <code>other</code> is equal to current object.\n",null,0],["eql?","Mime::Type","rails/classes/Mime/Type.html#method-i-eql-3F","(other)","",null,0],["eql?","Time","rails/classes/Time.html#method-i-eql-3F","(other)","",null,0],["eql?","Array","ruby/classes/Array.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <code>other_array</code> are the same size, and if, for each index <code>i</code> in <code>self</code>, <code>self[i].eql?</code> …\n",null,1],["eql?","BigDecimal","ruby/classes/BigDecimal.html#method-i-eql-3F","(p1)","<p>Tests for value equality; returns true if the values are equal.\n<p>The == and === operators and the eql? …\n",null,1],["eql?","Data","ruby/classes/Data.html#method-i-eql-3F","(p1)","<p>Equality check that is used when two items of data are keys of a Hash.\n<p>The subtle difference with #== …\n",null,1],["eql?","Delegator","ruby/classes/Delegator.html#method-i-eql-3F","(obj)","<p>Returns true if two objects are considered of equal value.\n",null,1],["eql?","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <code>obj</code> is an Enumerator::ArithmeticSequence, has equivalent begin, end, step, and  …\n",null,1],["eql?","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-eql-3F","(p1)","<p>Returns true if <code>other</code> wraps the same pointer, otherwise returns false.\n",null,1],["eql?","Float","ruby/classes/Float.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>other</code> is a Float with the same value as <code>self</code>, <code>false</code> otherwise:\n\n<pre><code>2.0.eql?(2.0)          ...\n</code></pre>\n",null,1],["eql?","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-eql-3F","(other)","",null,1],["eql?","Gem::Platform","ruby/classes/Gem/Platform.html#method-i-eql-3F","(other)","",null,1],["eql?","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-eql-3F","(other)","",null,1],["eql?","Gem::Version","ruby/classes/Gem/Version.html#method-i-eql-3F","(other)","<p>A Version is only eql? to another version if it’s specified to the same precision. Version “1.0” …\n",null,1],["eql?","Hash","ruby/classes/Hash.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if all of the following are true:\n<p><code>object</code> is a Hash object.\n<p><code>hash</code> and <code>object</code> have the same keys …\n",null,1],["eql?","IPAddr","ruby/classes/IPAddr.html#method-i-eql-3F","(other)","<p>Checks equality used by Hash.\n",null,1],["eql?","MatchData","ruby/classes/MatchData.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>object</code> is another MatchData object whose target string, regexp, match, and captures are …\n",null,1],["eql?","Method","ruby/classes/Method.html#method-i-eql-3F","(p1)","<p>Two method objects are equal if they are bound to the same object and refer to the same method definition …\n",null,1],["eql?","Numeric","ruby/classes/Numeric.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <code>other</code> are the same type and have equal values.\n<p>Of the Core and Standard Library …\n",null,1],["eql?","Object","ruby/classes/Object.html#method-i-eql-3F","(p1)","<p>Equality — At the Object level, #== returns <code>true</code> only if <code>obj</code> and <code>other</code> are the same object.  Typically …\n",null,1],["eql?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a <code>OpenSSL::BN</code> with the same value as <em>bn</em>. Contrast this with OpenSSL::BN#== …\n",null,1],["eql?","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if the two groups use the same curve and have the same parameters, <code>false</code> otherwise.\n",null,1],["eql?","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-eql-3F","(p1)","",null,1],["eql?","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-eql-3F","(p1)","<p>Returns true if <em>name</em> and <em>other</em> refer to the same hash key.\n",null,1],["eql?","OpenStruct","ruby/classes/OpenStruct.html#method-i-eql-3F","(other)","<p>Compares this object and <code>other</code> for equality.  An OpenStruct is eql? to <code>other</code> when <code>other</code> is an OpenStruct …\n",null,1],["eql?","Pathname","ruby/classes/Pathname.html#method-i-eql-3F","(p1)","<p>Compare this pathname with <code>other</code>.  The comparison is string-based. Be aware that two different paths …\n",null,1],["eql?","Proc","ruby/classes/Proc.html#method-i-eql-3F","(p1)","<p>Two procs are the same if, and only if, they were created from the same code block.\n\n<pre><code>def return_block(&amp;block) ...\n</code></pre>\n",null,1],["eql?","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-eql-3F","(other)","",null,1],["eql?","Range","ruby/classes/Range.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if and only if:\n<p><code>other</code> is a range.\n<p><code>other.begin eql? self.begin</code>.\n",null,1],["eql?","Regexp","ruby/classes/Regexp.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>object</code> is another Regexp whose pattern, flags, and encoding are the same as <code>self</code>, <code>false</code> …\n",null,1],["eql?","String","ruby/classes/String.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>object</code> has the same length and content; as <code>self</code>; <code>false</code> otherwise:\n\n<pre><code>s = &#39;foo&#39;\ns.eql?(&#39;foo&#39;) ...\n</code></pre>\n",null,1],["eql?","Struct","ruby/classes/Struct.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if and only if the following are true; otherwise returns <code>false</code>:\n<p><code>other.class == self.class</code> …\n",null,1],["eql?","Time","ruby/classes/Time.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <code>other_time</code> are both <code>Time</code> objects with the exact same time value.\n",null,1],["eql?","URI::Generic","ruby/classes/URI/Generic.html#method-i-eql-3F","(oth)","",null,1],["eql?","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-eql-3F","(p1)","<p>Two unbound method objects are equal if they refer to the same method definition.\n\n<pre><code>Array.instance_method(:each_slice) ...\n</code></pre>\n",null,1],["eql_with_coercion","Time","rails/classes/Time.html#method-i-eql_with_coercion","(other)","<p>Layers additional behavior on Time#eql? so that ActiveSupport::TimeWithZone instances can be eql? to …\n",null,0],["eql_without_coercion","Time","rails/classes/Time.html#method-i-eql_without_coercion","(other)","",null,0],["equal?","BasicObject","ruby/classes/BasicObject.html#method-i-equal-3F","(p1)","<p>Equality — At the Object level, #== returns <code>true</code> only if <code>obj</code> and <code>other</code> are the same object.  Typically …\n",null,1],["equal?","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-equal-3F","(*args)","",null,1],["equal?","Reline::KeyStroke","ruby/classes/Reline/KeyStroke.html#method-i-equal-3F","(me, other)","",null,1],["erase_after_cursor","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-erase_after_cursor","()","",null,1],["erase_after_cursor","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-erase_after_cursor","()","",null,1],["erase_after_cursor","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-erase_after_cursor","()","",null,1],["erase_line","IO","ruby/classes/IO.html#method-i-erase_line","(p1)","",null,1],["erase_screen","IO","ruby/classes/IO.html#method-i-erase_screen","(p1)","",null,1],["erf","Math","ruby/classes/Math.html#method-c-erf","(p1)","<p>Returns the value of the Gauss error function for <code>x</code>.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[-1, 1]</code>.\n",null,1],["erfc","Math","ruby/classes/Math.html#method-c-erfc","(p1)","<p>Returns the value of the complementary error function for <code>x</code>.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[0,</code> …\n",null,1],["errno","SystemCallError","ruby/classes/SystemCallError.html#method-i-errno","()","<p>Return this SystemCallError’s error number.\n",null,1],["error","ActionView::Digestor::NullLogger","rails/classes/ActionView/Digestor/NullLogger.html#method-c-error","(_)","",null,0],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-error","(error_message)","",null,0],["error","Rails","rails/classes/Rails.html#method-c-error","()","<p>Returns the ActiveSupport::ErrorReporter of the current Rails project, otherwise it returns <code>nil</code> if there …\n",null,0],["error","Logger","ruby/classes/Logger.html#method-i-error","(progname = nil, &block)","<p>Equivalent to calling #add with severity <code>Logger::ERROR</code>.\n",null,1],["error","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-error","()","<p>Returns the error code of <em>stctx</em>. This is typically called after #verify is done, or from the verification …\n",null,1],["error","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-error","(msg)","<p>Aborts with <code>msg</code>\n",null,1],["error","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-error","(msg)","<p>Report an error message and exit\n",null,1],["error","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-error","(exception, req, res)","<p>Generates an error page for the <code>exception</code> while handling <code>req</code> on <code>res</code>.\n",null,1],["error","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-i-error","","<p>Logs a <code>message</code> at the error (syslog warning) log level, or logs the message returned from the block. …\n",null,1],["error!","Logger","ruby/classes/Logger.html#method-i-error-21","()","<p>Sets the log level to Logger::ERROR. See Log Level.\n",null,1],["error=","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-error-3D","(p1)","<p>Sets the error code of <em>stctx</em>. This is used by the verification callback set to OpenSSL::X509::Store#verify_callback= …\n",null,1],["error?","Logger","ruby/classes/Logger.html#method-i-error-3F","()","<p>Returns <code>true</code> if the log level allows entries with severity Logger::ERROR to be written, <code>false</code> otherwise. …\n",null,1],["error?","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-error-3F","()","<p>True if the parser encountered an error during parsing.\n",null,1],["error_bytes","Encoding::InvalidByteSequenceError","ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-error_bytes","()","<p>Returns the discarded bytes when Encoding::InvalidByteSequenceError occurs.\n\n<pre><code>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...\n</code></pre>\n",null,1],["error_char","Encoding::UndefinedConversionError","ruby/classes/Encoding/UndefinedConversionError.html#method-i-error_char","()","<p>Returns the one-character string which cause Encoding::UndefinedConversionError.\n\n<pre><code>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...\n</code></pre>\n",null,1],["error_code","Socket::ResolutionError","ruby/classes/Socket/ResolutionError.html#method-i-error_code","()","<p>Returns the raw error code occurred at name resolution.\n",null,1],["error_depth","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-error_depth","()","<p>Returns the depth of the chain. This is used in combination with #error.\n<p>See also the man page X509_STORE_CTX_get_error_depth …\n",null,1],["error_message","ActionView::Helpers::ActiveModelInstanceTag","rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_message","()","",null,0],["error_message","GetoptLong","ruby/classes/GetoptLong.html#method-i-error_message","()","<p>Return the appropriate error message in POSIX-defined format. If no error has occurred, returns <code>nil</code>. …\n",null,1],["error_number","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-error_number","(exception)","",null,0],["error_reporter","ActiveSupport::ExecutionWrapper","rails/classes/ActiveSupport/ExecutionWrapper.html#method-c-error_reporter","()","",null,0],["error_string","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-error_string","()","<p>Returns the human readable error string corresponding to the error code retrieved by #error.\n<p>See also …\n",null,1],["error_wrapping","ActionView::Helpers::ActiveModelInstanceTag","rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_wrapping","(html_tag)","",null,0],["errors","ActiveModel::Validations","rails/classes/ActiveModel/Validations.html#method-i-errors","()","<p>Returns the <code>Errors</code> object that holds all information about attribute error messages.\n\n<pre><code>class Person\n  include ...\n</code></pre>\n",null,0],["errors","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-i-errors","()","<p>POST create PATCH/PUT update\n",null,0],["errors","Gem::Resolver::ComposedSet","ruby/classes/Gem/Resolver/ComposedSet.html#method-i-errors","()","",null,1],["errors","Gem::Resolver::InstallerSet","ruby/classes/Gem/Resolver/InstallerSet.html#method-i-errors","()","<p>Errors encountered while resolving gems\n",null,1],["errors","OpenSSL","ruby/classes/OpenSSL.html#method-c-errors","()","<p>See any remaining errors held in queue.\n<p>Any errors you see here are probably due to a bug in Ruby’s …\n",null,1],["errors","SyntaxSuggest::ExplainSyntax","ruby/classes/SyntaxSuggest/ExplainSyntax.html#method-i-errors","()","<p>Returns an array of syntax error messages\n<p>If no missing pairs are found it falls back on the original …\n",null,1],["errors","SyntaxSuggest::GetParseErrors","ruby/classes/SyntaxSuggest/GetParseErrors.html#method-c-errors","(source)","",null,1],["escape","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-escape","(p1)","<p>Returns URL-escaped string (<code>application/x-www-form-urlencoded</code>).\n",null,1],["escape","CGI::Util","ruby/classes/CGI/Util.html#method-i-escape","(string)","<p>URL-encode a string into application/x-www-form-urlencoded. Space characters (+“ ”+) are encoded …\n",null,1],["escape","Gem::UriFormatter","ruby/classes/Gem/UriFormatter.html#method-i-escape","()","<p>Escapes the #uri for use as a CGI parameter\n",null,1],["escape","Regexp","ruby/classes/Regexp.html#method-c-escape","(p1)","<p>Returns a new string that escapes any characters that have special meaning in a regular expression:\n\n<pre><code>s ...\n</code></pre>\n",null,1],["escape","Shellwords","ruby/classes/Shellwords.html#method-c-escape","(str)","",null,1],["escape","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-escape","(str, unsafe = @regexp[:UNSAFE])","<p>Args\n<p><code>str</code> &mdash; String to make safe\n<p><code>unsafe</code> &mdash; Regexp to apply. Defaults to <code>self.regexp[:UNSAFE]</code>\n",null,1],["escape","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-escape","(str, unsafe = @regexp[:UNSAFE])","<p>Args\n<p><code>str</code> &mdash; String to make safe\n<p><code>unsafe</code> &mdash; Regexp to apply. Defaults to <code>self.regexp[:UNSAFE]</code>\n",null,1],["escapeElement","CGI::Util","ruby/classes/CGI/Util.html#method-i-escapeElement","(string, *elements)","<p>Escape only the tags of certain HTML elements in <code>string</code>.\n<p>Takes an element or elements or array of elements. …\n",null,1],["escapeHTML","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-escapeHTML","(p1)","<p>Returns HTML-escaped string.\n",null,1],["escapeHTML","CGI::Util","ruby/classes/CGI/Util.html#method-i-escapeHTML","(string)","<p>Escape special characters in HTML, namely ‘&amp;&quot;&lt;&gt;\n\n<pre><code>CGI.escapeHTML(&#39;Usage: foo &quot;bar&quot; &lt;baz&gt;&#39;) ...\n</code></pre>\n",null,1],["escapeURIComponent","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-escapeURIComponent","(p1)","<p>Returns URL-escaped string following RFC 3986.\n",null,1],["escapeURIComponent","CGI::Util","ruby/classes/CGI/Util.html#method-i-escapeURIComponent","(string)","<p>URL-encode a string following RFC 3986 Space characters (+“ ”+) are encoded with (+“%20”+) …\n",null,1],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html#method-i-escape_bytea","(value)","<p>Escapes binary strings for bytea input to the database.\n",null,0],["escape_element","CGI::Util","ruby/classes/CGI/Util.html#method-i-escape_element","(string, *elements)","<p>Synonym for CGI.escapeElement(str)\n",null,1],["escape_for_print","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-escape_for_print","(str)","",null,1],["escape_html","CGI::Util","ruby/classes/CGI/Util.html#method-i-escape_html","(string)","<p>Synonym for CGI.escapeHTML(str)\n",null,1],["escape_javascript","ActionView::Helpers::JavaScriptHelper","rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-escape_javascript","(javascript)","<p>Escapes carriage returns and single and double quotes for JavaScript segments.\n<p>Also available through …\n",null,0],["escape_once","ActionView::Helpers::TagHelper","rails/classes/ActionView/Helpers/TagHelper.html#method-i-escape_once","(html)","<p>Returns an escaped version of <code>html</code> without affecting existing escaped entities.\n\n<pre><code>escape_once(&quot;1 &lt; 2 &amp;amp; ...\n</code></pre>\n",null,0],["escape_slash","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-escape_slash","()","<p>If this boolean is true, the forward slashes will be escaped in the json output.\n",null,1],["escape_slash=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-escape_slash-3D","(p1)","<p>This sets whether or not the forward slashes will be escaped in the json output.\n",null,1],["escape_slash?","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-escape_slash-3F","()","<p>If this boolean is true, the forward slashes will be escaped in the json output.\n",null,1],["escape_uri_component","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-escape_uri_component","(p1)","<p>Returns URL-escaped string following RFC 3986.\n",null,1],["escape_uri_component","CGI::Util","ruby/classes/CGI/Util.html#method-i-escape_uri_component","(string)","",null,1],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-establish_connection","(config, owner_name: Base, role: ActiveRecord::Base.current_role, shard: Base.current_shard)","",null,0],["establish_connection","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-establish_connection","(config_or_env = nil)","<p>Establishes the connection to the database. Accepts a hash as input where the <code>:adapter</code> key must be specified …\n",null,0],["etag","ActionController::ConditionalGet::ClassMethods","rails/classes/ActionController/ConditionalGet/ClassMethods.html#method-i-etag","(&etagger)","<p>Allows you to consider additional controller-wide information when generating an ETag. For example, if …\n",null,0],["etag=","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-etag-3D","(weak_validators)","<p>This method sets a weak ETag validator on the response so browsers and proxies may cache the response, …\n",null,0],["etag?","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-etag-3F","()","",null,0],["etag_matches?","ActionDispatch::Http::Cache::Request","rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-etag_matches-3F","(etag)","",null,0],["euid","Process","ruby/classes/Process.html#method-c-euid","()","<p>Returns the effective user ID for the current process.\n\n<pre><code>Process.euid # =&gt; 501\n</code></pre>\n",null,1],["euid=","Process","ruby/classes/Process.html#method-c-euid-3D","(p1)","<p>Sets the effective user ID for the current process.\n<p>Not available on all platforms.\n",null,1],["eval","Binding","ruby/classes/Binding.html#method-i-eval","(p1, p2 = v2, p3 = v3)","<p>Evaluates the Ruby expression(s) in <em>string</em>, in the <em>binding</em>’s context.  If the optional <em>filename</em> and …\n",null,1],["eval","Kernel","ruby/classes/Kernel.html#method-i-eval","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Evaluates the Ruby expression(s) in <em>string</em>. If <em>binding</em> is given, which must be a Binding object, the …\n",null,1],["eval","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-eval","()","<p>Evaluates the instruction sequence and returns the result.\n\n<pre><code>RubyVM::InstructionSequence.compile(&quot;1 + 2&quot;).eval ...\n</code></pre>\n",null,1],["eval_history=","IRB::Context","ruby/classes/IRB/Context.html#method-i-eval_history-3D","(no)","<p>Sets command result history limit. Default value is set from <code>IRB.conf[:EVAL_HISTORY]</code>.\n<p><code>no</code> is an Integer …\n",null,1],["eval_input","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-eval_input","()","<p>Evaluates input for this session.\n",null,1],["eval_script","TracePoint","ruby/classes/TracePoint.html#method-i-eval_script","()","<p>Compiled source code (String) on *eval methods on the <code>:script_compiled</code> event. If loaded from a file, …\n",null,1],["evaluable_code","IRB::Statement","ruby/classes/IRB/Statement.html#method-i-evaluable_code","()","",null,1],["evaluable_code","IRB::Statement::Command","ruby/classes/IRB/Statement/Command.html#method-i-evaluable_code","()","",null,1],["evaluable_code","IRB::Statement::Expression","ruby/classes/IRB/Statement/Expression.html#method-i-evaluable_code","()","",null,1],["evaluate","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-i-evaluate","(context, statements, file = nil, line = nil)","<p>Evaluate the context of this workspace and use the Tracer library to output the exact lines of code are …\n",null,1],["even?","Integer","ruby/classes/Integer.html#method-i-even-3F","()","<p>Returns <code>true</code> if <code>self</code> is an even number, <code>false</code> otherwise.\n",null,1],["event","Prism::LexCompat::Token","ruby/classes/Prism/LexCompat/Token.html#method-i-event","()","<p>The type of the token.\n",null,1],["event","TracePoint","ruby/classes/TracePoint.html#method-i-event","()","<p>Type of event\n<p>See TracePoint@Events for more information.\n",null,1],["event.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/utils/event_coffee.html","","<p>#= require ./dom\n<p>{ matches } = Rails\n<p># Polyfill for CustomEvent in IE9+ # developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill …\n",null,0],["event?","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-event-3F","()","<p>Returns true if the method is event.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;) ...\n</code></pre>\n",null,1],["event_interface","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-event_interface","()","<p>Returns event interface name if the method is event.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object ...\n</code></pre>\n",null,1],["event_location","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-event_location","(start_line, start_column, end_line, end_column)","<p>Called before each event with line/column information.\n",null,1],["event_location","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-i-event_location","(start_line, start_column, end_line, end_column)","",null,1],["event_loop","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-event_loop","()","",null,0],["exabyte","Numeric","rails/classes/Numeric.html#method-i-exabyte","()","",null,0],["exabytes","Numeric","rails/classes/Numeric.html#method-i-exabytes","()","<p>Returns the number of bytes equivalent to the exabytes provided.\n\n<pre><code>2.exabytes # =&gt; 2_305_843_009_213_693_952\n</code></pre>\n",null,0],["exact?","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-exact-3F","()","<p>true if the requirement is for only an exact version\n",null,1],["except","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-except","(*keys)","<p>Returns a new <code>ActionController::Parameters</code> instance that filters out the given <code>keys</code>.\n\n<pre><code>params = ActionController::Parameters.new(a: ...\n</code></pre>\n",null,0],["except","ActiveRecord::SpawnMethods","rails/classes/ActiveRecord/SpawnMethods.html#method-i-except","(*skips)","<p>Removes from the query the condition(s) specified in <code>skips</code>.\n\n<pre><code>Post.order(&#39;id asc&#39;).except(:order)       ...\n</code></pre>\n",null,0],["except","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-except","(*keys)","<p>Returns a hash with indifferent access that includes everything except given keys.\n\n<pre><code>hash = { a: &quot;x&quot;, b: ...\n</code></pre>\n",null,0],["except","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-except","(*keys)","<p>Returns a hash with indifferent access that includes everything except given keys.\n\n<pre><code>hash = { a: &quot;x&quot;, b: ...\n</code></pre>\n",null,0],["except","Hash","rails/classes/Hash.html#method-i-except","(*keys)","<p>Returns a hash that includes everything except given keys.\n\n<pre><code>hash = { a: true, b: false, c: nil }\nhash.except(:c) ...\n</code></pre>\n",null,0],["except","ENV","ruby/classes/ENV.html#method-c-except","(*args)","<p>Returns a hash except the given keys from ENV and their values.\n\n<pre><code>ENV                       #=&gt; {&quot;LANG&quot;=&gt;&quot;en_US.UTF-8&quot;, ...\n</code></pre>\n",null,1],["except","Hash","ruby/classes/Hash.html#method-i-except","(*args)","<p>Returns a new Hash excluding entries for the given <code>keys</code>:\n\n<pre><code>h = { a: 100, b: 200, c: 300 }\nh.except(:a)  ...\n</code></pre>\n",null,1],["except!","Hash","rails/classes/Hash.html#method-i-except-21","(*keys)","<p>Removes the given keys from hash and returns it.\n\n<pre><code>hash = { a: true, b: false, c: nil }\nhash.except!(:c) ...\n</code></pre>\n",null,0],["exception","DRb::DRbUnknown","ruby/classes/DRb/DRbUnknown.html#method-i-exception","()","<p>Create a DRbUnknownError exception containing this object.\n",null,1],["exception","Exception","ruby/classes/Exception.html#method-i-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return the receiver. Otherwise, create …\n",null,1],["exception","Exception","ruby/classes/Exception.html#method-c-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return the receiver. Otherwise, create …\n",null,1],["exception","Timeout::ExitException","ruby/classes/Timeout/ExitException.html#method-i-exception","(*)","",null,1],["exception_trace","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-exception_trace","()","",null,0],["exceptions","","ruby/files/ruby/doc/syntax/exceptions_rdoc.html","","<p>Exception Handling\n<p>Exceptions are rescued in a <code>begin</code>/<code>end</code> block:\n\n<pre><code>begin\n  # code that might raise\nrescue ...\n</code></pre>\n",null,1],["excerpt","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-excerpt","(text, phrase, options = {})","<p>Extracts an excerpt from <code>text</code> that matches the first instance of <code>phrase</code>. The <code>:radius</code> option expands the …\n",null,0],["exchange","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-exchange","(source, target)","",null,1],["exchange_point_and_mark","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-exchange_point_and_mark","(key)","",null,1],["exclude","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-exclude","()","<p>Create a regexp for #exclude\n",null,1],["exclude?","Enumerable","rails/classes/Enumerable.html#method-i-exclude-3F","(object)","<p>The negative of the <code>Enumerable#include?</code>. Returns <code>true</code> if the collection does not include the object. …\n",null,0],["exclude?","String","rails/classes/String.html#method-i-exclude-3F","(string)","<p>The inverse of <code>String#include?</code>. Returns true if the string does not include the other string.\n\n<pre><code>&quot;hello&quot;.exclude? ...\n</code></pre>\n",null,0],["exclude_end?","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-exclude_end-3F","()","",null,1],["exclude_end?","Range","ruby/classes/Range.html#method-i-exclude_end-3F","()","<p>Returns <code>true</code> if <code>self</code> excludes its end value; <code>false</code> otherwise:\n\n<pre><code>Range.new(2, 5).exclude_end?       # =&gt; ...\n</code></pre>\n",null,1],["excluded_from_filter_parameters?","ActiveRecord::Encryption::Configurable","rails/classes/ActiveRecord/Encryption/Configurable.html#method-i-excluded_from_filter_parameters-3F","(filter_parameter)","",null,0],["excluding","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-excluding","(*records)","<p>Excludes the specified record (or collection of records) from the resulting relation. For example:\n\n<pre><code>Post.excluding(post) ...\n</code></pre>\n",null,0],["excluding","Array","rails/classes/Array.html#method-i-excluding","(*elements)","<p>Returns a copy of the Array excluding the specified elements.\n\n<pre><code>[&quot;David&quot;, &quot;Rafael&quot;, &quot;Aaron&quot;, &quot;Todd&quot;].excluding(&quot;Aaron&quot;, ...\n</code></pre>\n",null,0],["excluding","Enumerable","rails/classes/Enumerable.html#method-i-excluding","(*elements)","<p>Returns a copy of the enumerable excluding the specified elements.\n\n<pre><code>[&quot;David&quot;, &quot;Rafael&quot;, &quot;Aaron&quot;, &quot;Todd&quot;].excluding ...\n</code></pre>\n",null,0],["exclusive","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-i-exclusive","(purpose: nil, compatible: [], after_compatible: [], no_wait: false)","<p>Execute the supplied block while holding the Exclusive lock. If <code>no_wait</code> is set and the lock is not immediately …\n",null,0],["exec","Kernel","ruby/classes/Kernel.html#method-i-exec","(*args)","<p>Replaces the current process by doing one of the following:\n<p>Passing string <code>command_line</code> to the shell. …\n",null,1],["exec","Process","ruby/classes/Process.html#method-c-exec","(*args)","<p>Replaces the current process by doing one of the following:\n<p>Passing string <code>command_line</code> to the shell. …\n",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_delete","(sql, name = nil, binds = [])","<p>Executes delete <code>sql</code> statement in the context of this connection using <code>binds</code> as the bind substitutes. …\n",null,0],["exec_format","Gem::Installer","ruby/classes/Gem/Installer.html#method-c-exec_format","()","<p>Defaults to use Ruby’s program prefix and suffix.\n",null,1],["exec_if","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-exec_if","()","<p>Execute the given block if notifications are enabled.\n",null,1],["exec_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_insert","(sql, name = nil, binds = [], pk = nil, sequence_name = nil)","<p>Executes insert <code>sql</code> statement in the context of this connection using <code>binds</code> as the bind substitutes. …\n",null,0],["exec_migration","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-exec_migration","(conn, direction)","",null,0],["exec_queries","ActiveRecord::Relation::RecordFetchWarning","rails/classes/ActiveRecord/Relation/RecordFetchWarning.html#method-i-exec_queries","()","<p>When this module is prepended to ActiveRecord::Relation and <code>config.active_record.warn_on_records_fetched_greater_than</code> …\n",null,0],["exec_query","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_query","(sql, name = \"SQL\", binds = [], prepare: false)","<p>Executes <code>sql</code> statement in the context of this connection using <code>binds</code> as the bind substitutes. <code>name</code> is …\n",null,0],["exec_rollback_to_savepoint","ActiveRecord::ConnectionAdapters::Savepoints","rails/classes/ActiveRecord/ConnectionAdapters/Savepoints.html#method-i-exec_rollback_to_savepoint","(name = current_savepoint_name)","",null,0],["exec_update","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_update","(sql, name = nil, binds = [])","<p>Executes update <code>sql</code> statement in the context of this connection using <code>binds</code> as the bind substitutes. …\n",null,0],["executable","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-executable","()","",null,0],["executable","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-executable","()","<p>Singular accessor for #executables\n",null,1],["executable=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-executable-3D","(o)","<p>Singular accessor for #executables\n",null,1],["executable?","File","ruby/classes/File.html#method-c-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective user and group id of this process. See …\n",null,1],["executable?","File::Stat","ruby/classes/File/Stat.html#method-i-executable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is executable or if the operating system doesn’t distinguish executable files …\n",null,1],["executable?","FileTest","ruby/classes/FileTest.html#method-i-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective user and group id of this process. See …\n",null,1],["executable?","Pathname","ruby/classes/Pathname.html#method-i-executable-3F","()","<p>See FileTest.executable?.\n",null,1],["executable_real?","File","ruby/classes/File.html#method-c-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user and group id of this process. See access(3). …\n",null,1],["executable_real?","File::Stat","ruby/classes/File/Stat.html#method-i-executable_real-3F","()","<p>Same as <code>executable?</code>, but tests using the real owner of the process.\n",null,1],["executable_real?","FileTest","ruby/classes/FileTest.html#method-i-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user and group id of this process. See access(3). …\n",null,1],["executable_real?","Pathname","ruby/classes/Pathname.html#method-i-executable_real-3F","()","<p>See FileTest.executable_real?.\n",null,1],["executables","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-executables","()","<p>Executables included in the gem.\n<p>For example, the rake gem has rake as an executable. You don’t specify …\n",null,1],["executables=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-executables-3D","(value)","<p>Sets executables to <code>value</code>, ensuring it is an array.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-execute","(sql, name = nil, async: false)","<p>Executes the SQL statement in the context of this connection.\n",null,0],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection and returns the raw result from the connection …\n",null,0],["execute","ActiveRecord::ConnectionAdapters::MySQL::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/DatabaseStatements.html#method-i-execute","(sql, name = nil, async: false)","<p>Executes the SQL statement in the context of this connection.\n",null,0],["execute","ActiveRecord::ConnectionAdapters::PostgreSQL::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/DatabaseStatements.html#method-i-execute","(sql, name = nil)","<p>Executes an SQL statement, returning a PG::Result object on success or raising a PG::Error exception …\n",null,0],["execute","ActiveSupport::FileUpdateChecker","rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute","()","<p>Executes the given block and updates the latest watched files and timestamp.\n",null,0],["execute","Gem::Command","ruby/classes/Gem/Command.html#method-i-execute","()","<p>Override to provide command handling.\n<p>#options will be filled in with your parsed options, unparsed options …\n",null,1],["execute","Gem::Commands::BuildCommand","ruby/classes/Gem/Commands/BuildCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::CheckCommand","ruby/classes/Gem/Commands/CheckCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::CleanupCommand","ruby/classes/Gem/Commands/CleanupCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::DependencyCommand","ruby/classes/Gem/Commands/DependencyCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::EnvironmentCommand","ruby/classes/Gem/Commands/EnvironmentCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::ExecCommand","ruby/classes/Gem/Commands/ExecCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::FetchCommand","ruby/classes/Gem/Commands/FetchCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::GenerateIndexCommand::RubygemsTrampoline","ruby/classes/Gem/Commands/GenerateIndexCommand/RubygemsTrampoline.html#method-i-execute","()","",null,1],["execute","Gem::Commands::HelpCommand","ruby/classes/Gem/Commands/HelpCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::InstallCommand","ruby/classes/Gem/Commands/InstallCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::LockCommand","ruby/classes/Gem/Commands/LockCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::MirrorCommand","ruby/classes/Gem/Commands/MirrorCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::OpenCommand","ruby/classes/Gem/Commands/OpenCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::OutdatedCommand","ruby/classes/Gem/Commands/OutdatedCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::OwnerCommand","ruby/classes/Gem/Commands/OwnerCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::PristineCommand","ruby/classes/Gem/Commands/PristineCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::PushCommand","ruby/classes/Gem/Commands/PushCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::RdocCommand","ruby/classes/Gem/Commands/RdocCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::RebuildCommand","ruby/classes/Gem/Commands/RebuildCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::ServerCommand","ruby/classes/Gem/Commands/ServerCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SigninCommand","ruby/classes/Gem/Commands/SigninCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SignoutCommand","ruby/classes/Gem/Commands/SignoutCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SourcesCommand","ruby/classes/Gem/Commands/SourcesCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::SpecificationCommand","ruby/classes/Gem/Commands/SpecificationCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::StaleCommand","ruby/classes/Gem/Commands/StaleCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::UninstallCommand","ruby/classes/Gem/Commands/UninstallCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::UnpackCommand","ruby/classes/Gem/Commands/UnpackCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::WhichCommand","ruby/classes/Gem/Commands/WhichCommand.html#method-i-execute","()","",null,1],["execute","Gem::Commands::YankCommand","ruby/classes/Gem/Commands/YankCommand.html#method-i-execute","()","",null,1],["execute","Gem::QueryUtils","ruby/classes/Gem/QueryUtils.html#method-i-execute","()","",null,1],["execute","IRB::ExtendCommand::Help","ruby/classes/IRB/ExtendCommand/Help.html#method-i-execute","(*names)","",null,1],["execute","IRB::ExtendCommand::ShowDoc","ruby/classes/IRB/ExtendCommand/ShowDoc.html#method-i-execute","(*names)","",null,1],["execute","IRB::ExtendCommand::ShowSource","ruby/classes/IRB/ExtendCommand/ShowSource.html#method-i-execute","(str = nil)","",null,1],["execute_command","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-execute_command","(executor, command, options = {})","<p>Runs the supplied command using either “rake …” or “rails …” based on the executor …\n",null,0],["execute_if_updated","ActionView::CacheExpiry::ViewModificationWatcher","rails/classes/ActionView/CacheExpiry/ViewModificationWatcher.html#method-i-execute_if_updated","()","",null,0],["execute_if_updated","ActiveSupport::FileUpdateChecker","rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute_if_updated","()","<p>Execute the block given if updated.\n",null,0],["exist?","ActionDispatch::RailsEntityStore","rails/classes/ActionDispatch/RailsEntityStore.html#method-i-exist-3F","(key)","",null,0],["exist?","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-exist-3F","(key)","<p>Return <code>true</code> if a file exists at the <code>key</code>.\n",null,0],["exist?","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-exist-3F","(key)","",null,0],["exist?","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-exist-3F","(key)","",null,0],["exist?","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-exist-3F","(key)","",null,0],["exist?","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-exist-3F","(key)","",null,0],["exist?","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-exist-3F","(name, options = nil)","<p>Returns <code>true</code> if the cache contains an entry for the given key.\n<p>Options are passed to the underlying cache …\n",null,0],["exist?","Dir","ruby/classes/Dir.html#method-c-exist-3F","(p1)","<p>Returns whether <code>dirpath</code> is a directory in the underlying file system:\n\n<pre><code>Dir.exist?(&#39;/example&#39;)         # ...\n</code></pre>\n",null,1],["exist?","File","ruby/classes/File.html#method-c-exist-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n<p><em>file_name</em> can be an IO object.\n<p>“file exists” means that …\n",null,1],["exist?","FileTest","ruby/classes/FileTest.html#method-i-exist-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n<p><em>file_name</em> can be an IO object.\n<p>“file exists” means that …\n",null,1],["exist?","Pathname","ruby/classes/Pathname.html#method-i-exist-3F","()","<p>See FileTest.exist?.\n",null,1],["exist?","StringScanner","ruby/classes/StringScanner.html#method-i-exist-3F","(p1)","<p>Looks <em>ahead</em> to see if the <code>pattern</code> exists <em>anywhere</em> in the string, without advancing the scan pointer. …\n",null,1],["existence","Pathname","rails/classes/Pathname.html#method-i-existence","()","<p>Returns the receiver if the named file exists otherwise returns <code>nil</code>. <code>pathname.existence</code> is equivalent …\n",null,0],["existent","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-existent","()","<p>Returns all expanded paths but only if they exist in the filesystem.\n",null,0],["existent_directories","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-existent_directories","()","",null,0],["exists?","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-exists-3F","(preview)","<p>Returns <code>true</code> if the preview exists.\n",null,0],["exists?","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-exists-3F","(name, prefixes = [], partial = false, keys = [], **options)","",null,0],["exists?","ActiveRecord::Encryption::ExtendedDeterministicQueries::RelationQueries","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/RelationQueries.html#method-i-exists-3F","(*args)","",null,0],["exists?","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F","(conditions = :none)","<p>Returns true if a record exists in the table that matches the <code>id</code> or conditions given, or false otherwise. …\n",null,0],["exit","IRB::Context","ruby/classes/IRB/Context.html#method-i-exit","(ret = 0)","<p>Exits the current session, see IRB.irb_exit\n",null,1],["exit","Kernel","ruby/classes/Kernel.html#method-i-exit","(*args)","<p>Initiates termination of the Ruby script by raising SystemExit; the exception may be caught. Returns …\n",null,1],["exit","Monitor","ruby/classes/Monitor.html#method-i-exit","()","",null,1],["exit","Process","ruby/classes/Process.html#method-c-exit","(*args)","<p>Initiates termination of the Ruby script by raising SystemExit; the exception may be caught. Returns …\n",null,1],["exit","Thread","ruby/classes/Thread.html#method-i-exit","()","<p>Terminates <code>thr</code> and schedules another thread to be run, returning the terminated Thread.  If this is the …\n",null,1],["exit","Thread","ruby/classes/Thread.html#method-c-exit","()","<p>Terminates the currently running thread and schedules another thread to be run.\n<p>If this thread is already …\n",null,1],["exit!","Kernel","ruby/classes/Kernel.html#method-i-exit-21","(*args)","<p>Exits the process immediately; no exit handlers are called. Returns exit status <code>status</code> to the underlying …\n",null,1],["exit!","Process","ruby/classes/Process.html#method-c-exit-21","(*args)","<p>Exits the process immediately; no exit handlers are called. Returns exit status <code>status</code> to the underlying …\n",null,1],["exit_value","LocalJumpError","ruby/classes/LocalJumpError.html#method-i-exit_value","()","<p>Returns the exit value associated with this <code>LocalJumpError</code>.\n",null,1],["exited?","Process::Status","ruby/classes/Process/Status.html#method-i-exited-3F","()","<p>Returns <code>true</code> if the process exited normally (for example using an <code>exit()</code> call or finishing the program), …\n",null,1],["exitstatus","Process::Status","ruby/classes/Process/Status.html#method-i-exitstatus","()","<p>Returns the least significant eight bits of the return code of the process if it has exited; <code>nil</code> otherwise: …\n",null,1],["exp","BigMath","ruby/classes/BigMath.html#method-c-exp","(p1, p2)","<p>Computes the value of e (the base of natural logarithms) raised to the power of <code>decimal</code>, to the specified …\n",null,1],["exp","Math","ruby/classes/Math.html#method-c-exp","(p1)","<p>Returns <code>e</code> raised to the <code>x</code> power.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[0, INFINITY]</code>.\n",null,1],["expand","ActiveSupport::Callbacks::CallTemplate::InstanceExec0","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec0.html#method-i-expand","(target, value, block)","",null,0],["expand","ActiveSupport::Callbacks::CallTemplate::InstanceExec1","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec1.html#method-i-expand","(target, value, block)","",null,0],["expand","ActiveSupport::Callbacks::CallTemplate::InstanceExec2","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec2.html#method-i-expand","(target, value, block)","",null,0],["expand","ActiveSupport::Callbacks::CallTemplate::MethodCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/MethodCall.html#method-i-expand","(target, value, block)","<p>Return the parts needed to make this call, with the given input values.\n<p>Returns an array of the form: …\n",null,0],["expand","ActiveSupport::Callbacks::CallTemplate::ObjectCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ObjectCall.html#method-i-expand","(target, value, block)","",null,0],["expand","ActiveSupport::Callbacks::CallTemplate::ProcCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ProcCall.html#method-i-expand","(target, value, block)","",null,0],["expand","Reline::KeyStroke","ruby/classes/Reline/KeyStroke.html#method-i-expand","(input)","",null,1],["expand?","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-expand-3F","()","",null,1],["expand_cache_key","ActiveSupport::Cache","rails/classes/ActiveSupport/Cache.html#method-c-expand_cache_key","(key, namespace = nil)","<p>Expands out the <code>key</code> argument into a key that can be used for the cache store. Optionally accepts a namespace, …\n",null,0],["expand_environ","Win32::Registry","ruby/classes/Win32/Registry.html#method-c-expand_environ","(str)","<p>Replace %w+% into the environment value of what is contained between the %‘s This method is used …\n",null,1],["expand_existing","SyntaxSuggest::CodeSearch","ruby/classes/SyntaxSuggest/CodeSearch.html#method-i-expand_existing","()","<p>Given an already existing block in the frontier, expand it to see if it contains our invalid syntax\n",null,1],["expand_hexstring","OpenSSL::X509::Name::RFC2253DN","ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_hexstring","(str)","",null,1],["expand_indent","SyntaxSuggest::BlockExpand","ruby/classes/SyntaxSuggest/BlockExpand.html#method-i-expand_indent","(block)","<p>Expands code to the next lowest indentation\n<p>For example:\n\n<pre><code>1 def dog\n2   print &quot;dog&quot;\n3 end\n</code></pre>\n",null,1],["expand_neighbors","SyntaxSuggest::BlockExpand","ruby/classes/SyntaxSuggest/BlockExpand.html#method-i-expand_neighbors","(block)","<p>A neighbor is code that is at or above the current indent line.\n<p>First we build a block with all neighbors. …\n",null,1],["expand_pair","OpenSSL::X509::Name::RFC2253DN","ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_pair","(str)","",null,1],["expand_path","File","ruby/classes/File.html#method-c-expand_path","(*args)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced from the current working directory …\n",null,1],["expand_path","Pathname","ruby/classes/Pathname.html#method-i-expand_path","(p1 = v1)","<p>Returns the absolute path for the file.\n<p>See File.expand_path.\n",null,1],["expand_tabs","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-expand_tabs","(text)","<p>Expands tab characters in <code>text</code> to eight spaces\n",null,1],["expand_value","OpenSSL::X509::Name::RFC2253DN","ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-expand_value","(str1, str2, str3)","",null,1],["expanded","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-expanded","()","<p>Expands all paths against the root and return all unique values.\n",null,0],["expect","IO","ruby/classes/IO.html#method-i-expect","(pat,timeout=9999999)","<p>The <code>expect</code> library adds instance method IO#expect, which is similar to the TCL expect extension.\n<p>To use …\n",null,1],["expected_response","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-expected_response","(http_method, uri, credentials, password, password_is_ha1 = true)","<p>Returns the expected response for a request of <code>http_method</code> to <code>uri</code> with the decoded <code>credentials</code> and the …\n",null,0],["expire","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-expire","()","<p>this method must only be called while holding connection pool’s mutex\n",null,0],["expire_fragment","AbstractController::Caching::Fragments","rails/classes/AbstractController/Caching/Fragments.html#method-i-expire_fragment","(key, options = nil)","<p>Removes fragments from the cache.\n<p><code>key</code> can take one of three forms:\n<p>String - This would normally take the …\n",null,0],["expired?","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-expired-3F","()","<p>Has this tuple expired? (true/false).\n<p>A tuple has expired when its expiry timer based on the <code>sec</code> argument …\n",null,1],["expires_in","ActionController::ConditionalGet","rails/classes/ActionController/ConditionalGet.html#method-i-expires_in","(seconds, options = {})","<p>Sets the <code>Cache-Control</code> header, overwriting existing directives. This method will also ensure an HTTP …\n",null,0],["expires_now","ActionController::ConditionalGet","rails/classes/ActionController/ConditionalGet.html#method-i-expires_now","()","<p>Sets an HTTP 1.1 <code>Cache-Control</code> header of <code>no-cache</code>. This means the resource will be marked as stale, so …\n",null,0],["explain","ActiveRecord::ConnectionAdapters::MySQL::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/DatabaseStatements.html#method-i-explain","(arel, binds = [])","",null,0],["explain","ActiveRecord::ConnectionAdapters::PostgreSQL::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/DatabaseStatements.html#method-i-explain","(arel, binds = [])","",null,0],["explain","ActiveRecord::ConnectionAdapters::SQLite3::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3/DatabaseStatements.html#method-i-explain","(arel, binds = [])","",null,0],["explain","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-explain","()","<p>Runs EXPLAIN on the query or queries triggered by this relation and returns the result as a string.  …\n",null,0],["explain","Gem::Resolver::Conflict","ruby/classes/Gem/Resolver/Conflict.html#method-i-explain","()","<p>A string explanation of the conflict.\n",null,1],["explanation","Gem::Resolver::Conflict","ruby/classes/Gem/Resolver/Conflict.html#method-i-explanation","()","<p>Explanation of the conflict used by exceptions to print useful messages\n",null,1],["explicit?","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-explicit-3F","()","<p>Indicate that the request is for a gem explicitly requested by the user\n",null,1],["explicit_version_requirement","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-explicit_version_requirement","(name)","",null,1],["exponent","BigDecimal","ruby/classes/BigDecimal.html#method-i-exponent","()","<p>Returns the exponent of the BigDecimal number, as an Integer.\n<p>If the number can be represented as 0.xxxxxx …\n",null,1],["export","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-export","()","<p>Serializes the DH parameters to a PEM-encoding.\n<p>Note that any existing per-session public/private keys …\n",null,1],["export","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-export","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["export","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-export","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["export","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-export","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["export_keying_material","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-export_keying_material","(p1, p2, p3 = v3)","<p>Enables use of shared session key material in accordance with RFC 5705.\n",null,1],["expr_beg?","SyntaxSuggest::LexValue","ruby/classes/SyntaxSuggest/LexValue.html#method-i-expr_beg-3F","()","",null,1],["expr_label?","SyntaxSuggest::LexValue","ruby/classes/SyntaxSuggest/LexValue.html#method-i-expr_label-3F","()","",null,1],["extend","Object","ruby/classes/Object.html#method-i-extend","(*args)","<p>Adds to <em>obj</em> the instance methods from each module given as a parameter.\n\n<pre><code>module Mod\n  def hello\n    &quot;Hello ...\n</code></pre>\n",null,1],["extend_object","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-c-extend_object","(obj)","<p>Installs alias methods for the default irb commands on the given object using #install_alias_method. …\n",null,1],["extend_object","MonitorMixin","ruby/classes/MonitorMixin.html#method-c-extend_object","(obj)","",null,1],["extend_object","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-c-extend_object","(obj)","<p>Initializes instance variable.\n",null,1],["extended","ActiveSupport::PerThreadRegistry","rails/classes/ActiveSupport/PerThreadRegistry.html#method-c-extended","(object)","",null,0],["extending","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-extending","(*modules, &block)","<p>Used to extend a scope with additional methods, either through a module or through a block provided. …\n",null,0],["extension","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-extension","()","",null,0],["extension","","ruby/files/ruby/doc/extension_rdoc.html","","<p>Creating extension libraries for Ruby\n<p>This document explains how to make extension libraries for Ruby …\n",null,1],["extension","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-extension","(name, enable)","<p>Enables or disables the extension with <code>name</code>\n",null,1],["extension","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-c-extension","(name)","<p>Creates extension methods for the <code>name</code> extension to enable and disable\nthe extension and to query if ...\n",null,1],["extension.ja","","ruby/files/ruby/doc/extension_ja_rdoc.html","","<p>Rubyの拡張ライブラリの作り方\n<p>Rubyの拡張ライブラリの作り方を説明します．\n<p>基礎知識\n",null,1],["extension?","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-extension-3F","(name)","<p>Is the extension <code>name</code> enabled?\n",null,1],["extension_available?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-extension_available-3F","(name)","",null,0],["extension_dir","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-extension_dir","()","<p>Returns full path to the directory where gem’s extensions are installed.\n",null,1],["extension_enabled?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-extension_enabled-3F","(name)","",null,0],["extension_with_delimiter","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-extension_with_delimiter","()","<p>Returns the extension of the filename (i.e. the substring following the last dot, excluding a dot at …\n",null,0],["extension_without_delimiter","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-extension_without_delimiter","()","<p>Returns the extension of the filename (i.e. the substring following the last dot, excluding a dot at …\n",null,0],["extensions","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-extensions","()","<p>A list of extensions, to be filled in by adapters that support them.\n",null,0],["extensions","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-extensions","()","",null,0],["extensions","Rails::SourceAnnotationExtractor::Annotation","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html#method-c-extensions","()","",null,0],["extensions","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-extensions","()","<p>Extensions to build when installing the gem, specifically the paths to extconf.rb-style files used to …\n",null,1],["extensions","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-extensions","()","",null,1],["extensions","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-extensions","()","<p>Gets X509v3 extensions as array of X509Ext objects\n",null,1],["extensions","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-extensions","()","",null,1],["extensions","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-extensions","()","<p>Gets X509v3 extensions as array of X509Ext objects\n",null,1],["extensions","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-extensions","()","<p>Returns extensions.\n",null,1],["extensions=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-extensions-3D","(extensions)","<p>Sets extensions to <code>extensions</code>, ensuring it is an array.\n",null,1],["extensions=","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-extensions-3D","(p1)","<p>Sets X509_EXTENSIONs\n",null,1],["extensions=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-extensions-3D","(p1)","",null,1],["extensions=","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-extensions-3D","(p1)","<p>Sets X509_EXTENSIONs\n",null,1],["extensions=","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-extensions-3D","(val)","<p>Setter for extensions <code>val</code>.\n",null,1],["extensions_dir","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-extensions_dir","()","<p>Returns path to the extensions directory.\n",null,1],["extensions_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-extensions_dir","()","<p>The path where this gem installs its extensions.\n",null,1],["extern","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-extern","(signature, *opts)","<p>Creates a global method from the given C <code>signature</code>.\n",null,1],["external?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-external-3F","()","<p>The buffer is <em>external</em> if it references the memory which is not allocated or mapped by the buffer itself. …\n",null,1],["external_encoding","ARGF","ruby/classes/ARGF.html#method-i-external_encoding","()","<p>Returns the external encoding for files read from ARGF as an Encoding object. The external encoding is …\n",null,1],["external_encoding","IO","ruby/classes/IO.html#method-i-external_encoding","()","<p>Returns the Encoding object that represents the encoding of the stream, or <code>nil</code> if the stream is in write …\n",null,1],["external_encoding","StringIO","ruby/classes/StringIO.html#method-i-external_encoding","()","<p>Returns the Encoding object that represents the encoding of the file. If the stream is write mode and …\n",null,1],["external_encoding","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-external_encoding","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["extify","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-extify","(name)","<p>Add an extension to the given name based on the platform.\n",null,0],["extname","File","ruby/classes/File.html#method-c-extname","(p1)","<p>Returns the extension (the portion of file name in <code>path</code> starting from the last period).\n<p>If <code>path</code> is a dotfile, …\n",null,1],["extname","Pathname","ruby/classes/Pathname.html#method-i-extname","()","<p>Returns the file’s extension.\n<p>See File.extname.\n",null,1],["extra_args","Gem::Command","ruby/classes/Gem/Command.html#method-c-extra_args","()","",null,1],["extra_args=","Gem::Command","ruby/classes/Gem/Command.html#method-c-extra_args-3D","(value)","",null,1],["extra_rdoc_files","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-extra_rdoc_files","()","<p>Extra files to add to RDoc such as README or doc/examples.txt\n<p>When the user elects to generate the RDoc …\n",null,1],["extra_rdoc_files=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-extra_rdoc_files-3D","(files)","<p>Sets extra_rdoc_files to <code>files</code>, ensuring it is an array.\n",null,1],["extract","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-extract","(str, schemes = nil)","<p>Args\n<p><code>str</code> &mdash; String to search\n<p><code>schemes</code> &mdash; Patterns to apply to <code>str</code>\n",null,1],["extract","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-extract","(str, schemes = nil)","<p>Args\n<p><code>str</code> &mdash; String to search\n<p><code>schemes</code> &mdash; Patterns to apply to <code>str</code>\n",null,1],["extract!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-extract-21","(*keys)","<p>Removes and returns the key/value pairs matching the given keys.\n\n<pre><code>params = ActionController::Parameters.new(a: ...\n</code></pre>\n",null,0],["extract!","Array","rails/classes/Array.html#method-i-extract-21","()","<p>Removes and returns the elements for which the block returns a true value. If no block is given, an  …\n",null,0],["extract!","Hash","rails/classes/Hash.html#method-i-extract-21","(*keys)","<p>Removes and returns the key/value pairs matching the given keys.\n\n<pre><code>hash = { a: 1, b: 2, c: 3, d: 4 }\nhash.extract!(:a, ...\n</code></pre>\n",null,0],["extract_annotations_from","Rails::SourceAnnotationExtractor","rails/classes/Rails/SourceAnnotationExtractor.html#method-i-extract_annotations_from","(file, pattern)","<p>If <code>file</code> is the filename of a file that contains annotations this method returns a hash with a single …\n",null,0],["extract_associated","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-extract_associated","(association)","<p>Extracts a named <code>association</code> from the relation. The named association is first preloaded, then the individual …\n",null,0],["extract_bin","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-extract_bin","()","<p>Extracts only the bin/ files from the gem into the gem directory. This is used by default gems to allow …\n",null,1],["extract_call_seq","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-extract_call_seq","(method)","<p>Look for a ‘call-seq’ in the comment to override the normal parameter handling.  The :call-seq: …\n",null,1],["extract_domain","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-c-extract_domain","(host, tld_length)","<p>Returns the domain part of a host given the domain level.\n\n<pre><code># Top-level domain example\nextract_domain(&#39;www.example.com&#39;, ...\n</code></pre>\n",null,0],["extract_files","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-extract_files","()","<p>Reads the file index and extracts each file into the gem directory.\n<p>Ensures that files can’t be installed …\n",null,1],["extract_files","Gem::Installer::FakePackage","ruby/classes/Gem/Installer/FakePackage.html#method-i-extract_files","(destination_dir, pattern = \"*\")","",null,1],["extract_files","Gem::Package","ruby/classes/Gem/Package.html#method-i-extract_files","(destination_dir, pattern = \"*\")","<p>Extracts the files in this package into <code>destination_dir</code>\n<p>If <code>pattern</code> is specified, only entries matching …\n",null,1],["extract_files","Gem::Package::Old","ruby/classes/Gem/Package/Old.html#method-i-extract_files","(destination_dir)","<p>Extracts the files in this package into <code>destination_dir</code>\n",null,1],["extract_last_module","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-i-extract_last_module","(nesting)","<p>Takes in an array of nested modules and extracts the last module\n",null,0],["extract_message_id","ActionMailbox::InboundEmail::MessageId","rails/classes/ActionMailbox/InboundEmail/MessageId.html#method-i-extract_message_id","(source)","",null,0],["extract_options!","Array","rails/classes/Array.html#method-i-extract_options-21","()","<p>Extracts options from a set of arguments. Removes and returns the last element in the array if it’s …\n",null,0],["extract_session_id","ActionDispatch::Session::StaleSessionCheck","rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-extract_session_id","(env)","",null,0],["extract_subdomain","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomain","(host, tld_length)","<p>Returns the subdomains of a host as a String given the domain level.\n\n<pre><code># Top-level domain example\nextract_subdomain(&#39;www.example.com&#39;, ...\n</code></pre>\n",null,0],["extract_subdomains","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomains","(host, tld_length)","<p>Returns the subdomains of a host as an Array given the domain level.\n\n<pre><code># Top-level domain example\nextract_subdomains(&#39;www.example.com&#39;, ...\n</code></pre>\n",null,0],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Returns <code>true</code> so that <code>Array#extract_options!</code> finds members of this class.\n",null,0],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Returns <code>true</code> so that <code>Array#extract_options!</code> finds members of this class.\n",null,0],["extractable_options?","ActiveSupport::OrderedOptions","rails/classes/ActiveSupport/OrderedOptions.html#method-i-extractable_options-3F","()","",null,0],["extractable_options?","Hash","rails/classes/Hash.html#method-i-extractable_options-3F","()","<p>By default, only instances of Hash itself are extractable. Subclasses of Hash may implement this method …\n",null,0],["facility","Syslog","ruby/classes/Syslog.html#method-c-facility","()","<p>Returns the facility number used in the last call to open()\n",null,1],["fail","Kernel","ruby/classes/Kernel.html#method-i-fail","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a RuntimeError if <code>$!</code> is <code>nil</code>.  With a single  …\n",null,1],["failure?","ActionMailbox::Relayer::Result","rails/classes/ActionMailbox/Relayer/Result.html#method-i-failure-3F","()","",null,0],["failure?","Prism::ParseResult","ruby/classes/Prism/ParseResult.html#method-i-failure-3F","()","<p>Returns true if there were errors during parsing and false if there were not.\n",null,1],["failure_info","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-failure_info","()","<p>In cases no timestamp token has been created, this field contains further info about the reason why response …\n",null,1],["fallbacks","Rails::Generators","rails/classes/Rails/Generators.html#method-c-fallbacks","()","<p>Hold configured generators fallbacks. If a plugin developer wants a generator group to fallback to another …\n",null,0],["family","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-family","()","<p>returns the socket family as an integer.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).family ...\n</code></pre>\n",null,1],["family","Socket::Option","ruby/classes/Socket/Option.html#method-i-family","()","<p>returns the socket family as an integer.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).family ...\n</code></pre>\n",null,1],["family_addrinfo","Addrinfo","ruby/classes/Addrinfo.html#method-i-family_addrinfo","(*args)","<p>creates an Addrinfo object from the arguments.\n<p>The arguments are interpreted as similar to self.\n\n<pre><code>Addrinfo.tcp(&quot;0.0.0.0&quot;, ...\n</code></pre>\n",null,1],["fast_generate","JSON","ruby/classes/JSON.html#method-i-fast_generate","(obj, opts = nil)","<p>Arguments <code>obj</code> and <code>opts</code> here are the same as arguments <code>obj</code> and <code>opts</code> in JSON.generate.\n<p>By default, generates …\n",null,1],["fatal","","ruby/classes/fatal.html","","<p>fatal is an Exception that is raised when Ruby has encountered a fatal error and must exit.\n",null,1],["fatal","Logger","ruby/classes/Logger.html#method-i-fatal","(progname = nil, &block)","<p>Equivalent to calling #add with severity <code>Logger::FATAL</code>.\n",null,1],["fatal","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-i-fatal","","<p>Logs a <code>message</code> at the fatal (syslog err) log level, or logs the message returned from the block.\n",null,1],["fatal!","Logger","ruby/classes/Logger.html#method-i-fatal-21","()","<p>Sets the log level to Logger::FATAL. See Log Level.\n",null,1],["fatal?","Logger","ruby/classes/Logger.html#method-i-fatal-3F","()","<p>Returns <code>true</code> if the log level allows entries with severity Logger::FATAL to be written, <code>false</code> otherwise. …\n",null,1],["favicon.ico","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/favicon_ico.html","","",null,0],["favicon_link_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-favicon_link_tag","(source = \"favicon.ico\", options = {})","<p>Returns a link tag for a favicon managed by the asset pipeline.\n<p>If a page has no link like the one generated …\n",null,0],["fchdir","Dir","ruby/classes/Dir.html#method-c-fchdir","(p1)","<p>Changes the current working directory to the directory specified by the integer file descriptor <code>fd</code>.\n<p>When …\n",null,1],["fcntl","IO","ruby/classes/IO.html#method-i-fcntl","(p1, p2 = v2)","<p>Invokes Posix system call fcntl(2), which provides a mechanism for issuing low-level commands to control …\n",null,1],["fcntl","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-fcntl","(*args)","",null,1],["fcntl","StringIO","ruby/classes/StringIO.html#method-i-fcntl","(*args)","<p>Raises NotImplementedError.\n",null,1],["fdatasync","IO","ruby/classes/IO.html#method-i-fdatasync","()","<p>Immediately writes to disk all data buffered in the stream, via the operating system’s: <code>fdatasync(2)</code> …\n",null,1],["fdiv","Complex","ruby/classes/Complex.html#method-i-fdiv","(p1)","<p>Returns <code>Complex(self.real/numeric, self.imag/numeric)</code>:\n\n<pre><code>Complex(11, 22).fdiv(3) # =&gt; (3.6666666666666665+7.333333333333333i)\n</code></pre>\n",null,1],["fdiv","Float","ruby/classes/Float.html#method-i-fdiv","(p1)","<p>Returns the quotient from dividing <code>self</code> by <code>other</code>:\n\n<pre><code>f = 3.14\nf.quo(2)              # =&gt; 1.57\nf.quo(-2)  ...\n</code></pre>\n",null,1],["fdiv","Integer","ruby/classes/Integer.html#method-i-fdiv","(p1)","<p>Returns the Float result of dividing <code>self</code> by <code>numeric</code>:\n\n<pre><code>4.fdiv(2)      # =&gt; 2.0\n4.fdiv(-2)      # =&gt; -2.0 ...\n</code></pre>\n",null,1],["fdiv","Numeric","ruby/classes/Numeric.html#method-i-fdiv","(p1)","<p>Returns the quotient <code>self/other</code> as a float, using method <code>/</code> in the derived class of <code>self</code>. (Numeric itself …\n",null,1],["fdiv","Rational","ruby/classes/Rational.html#method-i-fdiv","(p1)","<p>Performs division and returns the value as a Float.\n\n<pre><code>Rational(2, 3).fdiv(1)       #=&gt; 0.6666666666666666 ...\n</code></pre>\n",null,1],["feature_flag","Bundler","ruby/classes/Bundler.html#method-c-feature_flag","()","",null,1],["feed","Enumerator","ruby/classes/Enumerator.html#method-i-feed","(p1)","<p>Sets the value to be returned by the next yield inside <code>e</code>.\n<p>If the value is not set, the yield returns nil. …\n",null,1],["feel","Exhibit","rails/classes/Exhibit.html#method-c-feel","(exhibits)","",null,0],["feel","Exhibit","rails/classes/Exhibit.html#method-i-feel","()","",null,0],["fetch","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-fetch","(key, *args)","<p>Returns a parameter for the given <code>key</code>. If the <code>key</code> can’t be found, there are several options: With …\n",null,0],["fetch","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-fetch","(key, default = DEFAULT)","<p>Returns the value for the given key mapped to @env.\n<p>If the key is not found and an optional code block …\n",null,0],["fetch","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-fetch","(name, options = nil, &block)","<p>Fetches data from the cache, using the given key. If there is data in the cache with the given key, then …\n",null,0],["fetch","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["fetch","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be either a string or a symbol:\n\n<pre><code>counters = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["fetch","Mime","rails/classes/Mime.html#method-c-fetch","(type, &block)","",null,0],["fetch","Array","ruby/classes/Array.html#method-i-fetch","(p1, p2 = v2)","<p>Returns the element at offset  <code>index</code>.\n<p>With the single Integer argument <code>index</code>, returns the element at offset …\n",null,1],["fetch","CSV::Row","ruby/classes/CSV/Row.html#method-i-fetch","(header, *varargs)","<p>Returns the field value as specified by <code>header</code>.\n<p>With the single argument <code>header</code>, returns the field value …\n",null,1],["fetch","DRb::WeakIdConv::WeakSet","ruby/classes/DRb/WeakIdConv/WeakSet.html#method-i-fetch","(ref)","",null,1],["fetch","ENV","ruby/classes/ENV.html#method-c-fetch","(*args)","<p>If <code>name</code> is the name of an environment variable, returns its value:\n\n<pre><code>ENV[&#39;foo&#39;] = &#39;0&#39;\nENV.fetch(&#39;foo&#39;) # ...\n</code></pre>\n",null,1],["fetch","Gem::Request","ruby/classes/Gem/Request.html#method-i-fetch","()","",null,1],["fetch","Gem::StreamUI::SilentDownloadReporter","ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-fetch","(filename, filesize)","<p>The silent download reporter does not display <code>filename</code> or care about <code>filesize</code> because it is silent.\n",null,1],["fetch","Gem::StreamUI::ThreadedDownloadReporter","ruby/classes/Gem/StreamUI/ThreadedDownloadReporter.html#method-i-fetch","(file_name, *args)","<p>Tells the download reporter that the <code>file_name</code> is being fetched. The other arguments are ignored.\n",null,1],["fetch","Hash","ruby/classes/Hash.html#method-i-fetch","(*args)","<p>Returns the value for the given <code>key</code>, if found.\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.fetch(:bar) # =&gt; 1\n</code></pre>\n<p>If <code>key</code> …\n",null,1],["fetch","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-fetch","(key, *args)","<p>With a block, returns the string value for <code>key</code> if it exists; otherwise returns the value of the block; …\n",null,1],["fetch","PStore","ruby/classes/PStore.html#method-i-fetch","(key, default=PStore::Error)","<p>Like #[], except that it accepts a default value for the store. If the <code>key</code> does not exist:\n<p>Raises an exception …\n",null,1],["fetch","Rinda::Tuple","ruby/classes/Rinda/Tuple.html#method-i-fetch","(k)","<p>Fetches item <code>k</code> from the tuple.\n",null,1],["fetch","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-fetch","(key)","<p>Fetches <code>key</code> from the tuple.\n",null,1],["fetch","Thread","ruby/classes/Thread.html#method-i-fetch","(*args)","<p>Returns a fiber-local for the given key. If the key can’t be found, there are several options: With …\n",null,1],["fetch","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-fetch","( keystr, ifnone = nil )","<p>Return value associated with <code>key</code>.\n<p>If there is no value for <code>key</code> and no block is given, returns <code>ifnone</code>. …\n",null,1],["fetch_entry","ActiveSupport::Cache::MemCacheStore::DupLocalCache::DupLocalStore","rails/classes/ActiveSupport/Cache/MemCacheStore/DupLocalCache/DupLocalStore.html#method-i-fetch_entry","(key)","",null,0],["fetch_file","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_file","(uri, *_)","<p>File Fetcher. Dispatched by <code>fetch_path</code>. Use it instead.\n",null,1],["fetch_http","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_http","(uri, last_modified = nil, head = false, depth = 0)","<p>HTTP Fetcher. Dispatched by <code>fetch_path</code>. Use it instead.\n",null,1],["fetch_https","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_https","(uri, last_modified = nil, head = false, depth = 0)","",null,1],["fetch_multi","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-fetch_multi","(*names)","<p>Fetches data from the cache, using the given keys. If there is data in the cache with the given keys, …\n",null,0],["fetch_path","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_path","(uri, mtime = nil, head = false)","<p>Downloads <code>uri</code> and returns it as a String.\n",null,1],["fetch_resource","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-fetch_resource","(name, typeclass)","",null,1],["fetch_s3","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-fetch_s3","(uri, mtime = nil, head = false)","",null,1],["fetch_server","DRb","ruby/classes/DRb.html#method-c-fetch_server","(uri)","<p>Retrieves the server with the given <code>uri</code>.\n<p>See also regist_server and remove_server.\n",null,1],["fetch_spec","Gem::Source","ruby/classes/Gem/Source.html#method-i-fetch_spec","(name_tuple)","<p>Fetches a specification for the given <code>name_tuple</code>.\n",null,1],["fetch_spec","Gem::Source::Lock","ruby/classes/Gem/Source/Lock.html#method-i-fetch_spec","(name_tuple)","<p>Delegates to the wrapped source’s fetch_spec method.\n",null,1],["fetch_values","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch_values","(*indices, &block)","<p>Returns an array of the values at the specified indices, but also raises an exception when one of the …\n",null,0],["fetch_values","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch_values","(*indices, &block)","<p>Returns an array of the values at the specified indices, but also raises an exception when one of the …\n",null,0],["fetch_values","Hash","ruby/classes/Hash.html#method-i-fetch_values","(*args)","<p>Returns a new Array containing the values associated with the given keys *keys:\n\n<pre><code>h = {foo: 0, bar: 1, baz: ...\n</code></pre>\n",null,1],["fetcher","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-c-fetcher","()","<p>Cached RemoteFetcher instance.\n",null,1],["fetcher","Gem::SpecFetcher","ruby/classes/Gem/SpecFetcher.html#method-c-fetcher","()","<p>Default fetcher instance.  Use this instead of ::new to reduce object allocation.\n",null,1],["ffmpeg_exists?","ActiveStorage::Previewer::VideoPreviewer","rails/classes/ActiveStorage/Previewer/VideoPreviewer.html#method-c-ffmpeg_exists-3F","()","",null,0],["ffmpeg_path","ActiveStorage::Previewer::VideoPreviewer","rails/classes/ActiveStorage/Previewer/VideoPreviewer.html#method-c-ffmpeg_path","()","",null,0],["fiber","","ruby/files/ruby/doc/fiber_md.html","","<p>Fiber\n<p>Fibers provide a mechanism for cooperative concurrency.\n<p>Context Switching\n",null,1],["fiber","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-fiber","(*args)","<p>Implementation of the Fiber.schedule. The method is <em>expected</em> to immediately run the given block of code …\n",null,1],["field","CSV::Row","ruby/classes/CSV/Row.html#method-i-field","(header_or_index, minimum_index = 0)","<p>Returns the field value for the given <code>index</code> or <code>header</code>.\n<p>Fetch field value by Integer index:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["field?","CSV::Row","ruby/classes/CSV/Row.html#method-i-field-3F","(data)","<p>Returns <code>true</code> if <code>value</code> is a field in this row, <code>false</code> otherwise:\n\n<pre><code>source = &quot;Name,Name,Name\\nFoo,Bar,Baz\\n&quot; ...\n</code></pre>\n",null,1],["field_id","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-field_id","(method, *suffixes, namespace: @options[:namespace], index: @options[:index])","<p>Generate an HTML <code>id</code> attribute value for the given field\n<p>Return the value generated by the <code>FormBuilder</code> …\n",null,0],["field_id","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-field_id","(object_name, method_name, *suffixes, index: nil, namespace: nil)","<p>Generate an HTML <code>id</code> attribute value for the given name and field combination\n<p>Return the value generated …\n",null,0],["field_name","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-field_name","(method, *methods, multiple: false, index: @options[:index])","<p>Generate an HTML <code>name</code> attribute value for the given name and field combination\n<p>Return the value generated …\n",null,0],["field_name","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-field_name","(object_name, method_name, *method_names, multiple: false, index: nil)","<p>Generate an HTML <code>name</code> attribute value for the given name and field combination\n<p>Return the value generated …\n",null,0],["field_row?","CSV::Row","ruby/classes/CSV/Row.html#method-i-field_row-3F","()","<p>Returns <code>true</code> if this is a field row, <code>false</code> otherwise.\n",null,1],["field_set_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-field_set_tag","(legend = nil, options = nil, &block)","<p>Creates a field set for grouping HTML form elements.\n<p><code>legend</code> will become the fieldset’s title (optional …\n",null,0],["field_size_limit","CSV","ruby/classes/CSV.html#method-i-field_size_limit","()","<p>Returns the limit for field size; used for parsing; see {Option <code>field_size_limit</code>}:\n\n<pre><code>CSV.new(&#39;&#39;).field_size_limit ...\n</code></pre>\n",null,1],["field_size_limit","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-field_size_limit","()","",null,1],["fields","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-fields","(scope = nil, model: nil, **options, &block)","<p>See the docs for the ActionView::Helpers::FormHelper#fields helper method.\n",null,0],["fields","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-fields","(scope = nil, model: nil, **options, &block)","<p>Scopes input fields with either an explicit scope or model. Like <code>form_with</code> does with <code>:scope</code> or <code>:model</code> …\n",null,0],["fields","CSV::Row","ruby/classes/CSV/Row.html#method-i-fields","(*headers_and_or_indices)","<p>Returns field values per the given <code>specifiers</code>, which may be any mixture of:\n<p>Integer index.\n<p>Range of Integer …\n",null,1],["fields_for","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-fields_for","(record_name, record_object = nil, fields_options = {}, &block)","<p>Creates a scope around a specific model object like form_for, but doesn’t create the form tags themselves. …\n",null,0],["fields_for","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-fields_for","(record_name, record_object = nil, options = {}, &block)","<p>Creates a scope around a specific model object like form_for, but doesn’t create the form tags themselves. …\n",null,0],["fifth","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-fifth","","<p>Same as #first except returns only the fifth record.\n",null,0],["fifth","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-fifth","()","<p>Find the fifth record. If no order is defined it will order by primary key.\n\n<pre><code>Person.fifth # returns the ...\n</code></pre>\n",null,0],["fifth","Array","rails/classes/Array.html#method-i-fifth","()","<p>Equal to <code>self[4]</code>.\n\n<pre><code>%w( a b c d e ).fifth # =&gt; &quot;e&quot;\n</code></pre>\n",null,0],["fifth!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-fifth-21","()","<p>Same as #fifth but raises ActiveRecord::RecordNotFound if no record is found.\n",null,0],["file","ARGF","ruby/classes/ARGF.html#method-i-file","()","<p>Returns the current file as an IO or File object. <code>$stdin</code> is returned when the current file is STDIN. …\n",null,1],["file","Digest::Class","ruby/classes/Digest/Class.html#method-c-file","(name, *args)","<p>Creates a digest object and reads a given file, <em>name</em>. Optional arguments are passed to the constructor …\n",null,1],["file","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-file","(name)","<p>Updates the digest with the contents of a given file <em>name</em> and returns self.\n",null,1],["file?","File","ruby/classes/File.html#method-c-file-3F","(p1)","<p>Returns <code>true</code> if the named <code>file</code> exists and is a regular file.\n<p><code>file</code> can be an IO object.\n<p>If the <code>file</code> argument …\n",null,1],["file?","File::Stat","ruby/classes/File/Stat.html#method-i-file-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a regular file (not a device file, pipe, socket, etc.).\n\n<pre><code>File.stat(&quot;testfile&quot;).file? ...\n</code></pre>\n",null,1],["file?","FileTest","ruby/classes/FileTest.html#method-i-file-3F","(p1)","<p>Returns <code>true</code> if the named <code>file</code> exists and is a regular file.\n<p><code>file</code> can be an IO object.\n<p>If the <code>file</code> argument …\n",null,1],["file?","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-file-3F","()","<p>Is this tar entry a file?\n",null,1],["file?","Pathname","ruby/classes/Pathname.html#method-i-file-3F","()","<p>See FileTest.file?.\n",null,1],["file_checksum.js","","rails/files/rails/activestorage/app/javascript/activestorage/file_checksum_js.html","","<p>import SparkMD5 from “spark-md5”\n<p>const fileSlice = File.prototype.slice || File.prototype.mozSlice …\n",null,0],["file_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-file_field","(method, options = {})","<p>Returns a file upload input tag tailored for accessing a specified attribute (identified by <code>method</code>) on …\n",null,0],["file_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-file_field","(object_name, method, options = {})","<p>Returns a file upload input tag tailored for accessing a specified attribute (identified by <code>method</code>) on …\n",null,0],["file_field","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-file_field","(name = \"\", size = 20, maxlength = nil)","<p>Generate an File Upload Input element as a string.\n<p>The attributes of the element can be specified as three …\n",null,1],["file_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-file_field_tag","(name, options = {})","<p>Creates a file upload field. If you are using file uploads then you will also need to set the multipart …\n",null,0],["file_input?","IRB::Context","ruby/classes/IRB/Context.html#method-i-file_input-3F","()","<p>Whether #io uses a File for the <code>input_method</code> passed when creating the current context, see ::new\n",null,1],["file_lookup_paths","Rails::Command","rails/classes/Rails/Command.html#method-c-file_lookup_paths","()","",null,0],["file_lookup_paths","Rails::Generators","rails/classes/Rails/Generators.html#method-c-file_lookup_paths","()","",null,0],["file_name","Rails::Generators::MailboxGenerator","rails/classes/Rails/Generators/MailboxGenerator.html#method-i-file_name","()","",null,0],["file_name","Rails::Generators::MailerGenerator","rails/classes/Rails/Generators/MailerGenerator.html#method-i-file_name","()","",null,0],["file_name","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-file_name","()","<p>Returns the file name of this handle.\n",null,1],["file_name","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-file_name","()","<p>The default (generated) file name of the gem.  See also #spec_name.\n\n<pre><code>spec.file_name # =&gt; &quot;example-1.0.gem&quot;\n</code></pre>\n",null,1],["file_name","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-file_name","()","<p>File name where this CodeObject was found.\n<p>See also RDoc::Context#in_files\n",null,1],["file_path","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-file_path","()","",null,0],["filename","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-filename","()","<p>Returns an ActiveStorage::Filename instance of the filename that can be queried for basename, extension, …\n",null,0],["filename","ActiveStorage::Variant","rails/classes/ActiveStorage/Variant.html#method-i-filename","()","",null,0],["filename","ARGF","ruby/classes/ARGF.html#method-i-filename","()","<p>Returns the current filename. “-” is returned when the current file is STDIN.\n<p>For example:\n\n<pre><code>$ ...\n</code></pre>\n",null,1],["filename","Ripper::Filter","ruby/classes/Ripper/Filter.html#method-i-filename","()","<p>The file name of the input.\n",null,1],["filename_quote_characters=","Reline::Core","ruby/classes/Reline/Core.html#method-i-filename_quote_characters-3D","(v)","",null,1],["fileno","ARGF","ruby/classes/ARGF.html#method-i-fileno","()","<p>Returns an integer representing the numeric file descriptor for the current file. Raises an ArgumentError …\n",null,1],["fileno","Dir","ruby/classes/Dir.html#method-i-fileno","()","<p>Returns the file descriptor used in <em>dir</em>.\n\n<pre><code>d = Dir.new(&#39;..&#39;)\nd.fileno # =&gt; 8\n</code></pre>\n<p>This method uses the dirfd() …\n",null,1],["fileno","IO","ruby/classes/IO.html#method-i-fileno","()","<p>Returns the integer file descriptor for the stream:\n\n<pre><code>$stdin.fileno             # =&gt; 0\n$stdout.fileno   ...\n</code></pre>\n",null,1],["fileno","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-fileno","()","<p>The file descriptor for the socket.\n",null,1],["fileno","StringIO","ruby/classes/StringIO.html#method-i-fileno","()","<p>Returns <code>nil</code>.  Just for compatibility to IO.\n",null,1],["files","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-files","()","<p>Files included in this gem.  You cannot append to this accessor, you must assign to it.\n<p>Only add files …\n",null,1],["files=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-files-3D","(files)","<p>Sets files to <code>files</code>, ensuring it is an array.\n",null,1],["files_hash","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-files_hash","()","<p>Hash of all files known to RDoc\n",null,1],["files_in","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-files_in","(spec)","",null,1],["files_in","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-files_in","(dir)","",null,1],["files_in_default_gem","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-files_in_default_gem","(spec)","",null,1],["files_in_gem","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-files_in_gem","(spec)","",null,1],["fill","Array","ruby/classes/Array.html#method-i-fill","(p1 = v1, p2 = v2)","<p>Replaces specified elements in <code>self</code> with specified objects; returns <code>self</code>.\n<p>With argument <code>obj</code> and no block …\n",null,1],["fill_breakable","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-fill_breakable","(sep=' ', width=sep.length)","<p>This is similar to #breakable except the decision to break or not is determined individually.\n<p>Two #fill_breakable …\n",null,1],["filter","ActiveSupport::BacktraceCleaner","rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-filter","(backtrace, kind = :silent)","",null,0],["filter","ActiveSupport::ParameterFilter","rails/classes/ActiveSupport/ParameterFilter.html#method-i-filter","(params)","<p>Mask value of <code>params</code> if key matches one of filters.\n",null,0],["filter","Array","ruby/classes/Array.html#method-i-filter","()","<p>Calls the block, if given, with each element of <code>self</code>; returns a new Array containing those elements of …\n",null,1],["filter","CSV","ruby/classes/CSV.html#method-c-filter","(input=nil, output=nil, **options)","<p>Parses CSV from a source (String, IO stream, or ARGF).\n<p>Calls the given block with each parsed row:\n<p>Without …\n",null,1],["filter","ENV","ruby/classes/ENV.html#method-c-filter","()","<p>Yields each environment variable name and its value as a 2-element Array, returning a Hash of the names …\n",null,1],["filter","Enumerable","ruby/classes/Enumerable.html#method-i-filter","()","<p>Returns an array containing elements selected by the block.\n<p>With a block given, calls the block with successive …\n",null,1],["filter","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-filter","()","<p>Like Enumerable#select, but chains operation to be lazy-evaluated.\n",null,1],["filter","Hash","ruby/classes/Hash.html#method-i-filter","()","<p>Returns a new Hash object whose entries are those for which the block returns a truthy value:\n\n<pre><code>h = {foo: ...\n</code></pre>\n",null,1],["filter","Struct","ruby/classes/Struct.html#method-i-filter","(*args)","<p>With a block given, returns an array of values from <code>self</code> for which the block returns a truthy value: …\n",null,1],["filter","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-filter","()","<p>Returns filter.\n",null,1],["filter!","Array","ruby/classes/Array.html#method-i-filter-21","()","<p>Calls the block, if given  with each element of <code>self</code>; removes from <code>self</code> those elements for which the …\n",null,1],["filter!","ENV","ruby/classes/ENV.html#method-c-filter-21","()","<p>Yields each environment variable name and its value as a 2-element Array, deleting each entry for which …\n",null,1],["filter!","Hash","ruby/classes/Hash.html#method-i-filter-21","()","<p>Returns <code>self</code>, whose entries are those for which the block returns a truthy value:\n\n<pre><code>h = {foo: 0, bar: 1, ...\n</code></pre>\n",null,1],["filter!","Set","ruby/classes/Set.html#method-i-filter-21","(&block)","<p>Equivalent to Set#select!\n",null,1],["filter=","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-filter-3D","(val)","<p>Setter for filter <code>val</code>.\n",null,1],["filter_attributes","ActiveRecord::Core::ClassMethods","rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-filter_attributes","()","<p>Returns columns which shouldn’t be exposed while calling <code>#inspect</code>.\n",null,0],["filter_attributes=","ActiveRecord::Core::ClassMethods","rails/classes/ActiveRecord/Core/ClassMethods.html#method-i-filter_attributes-3D","(filter_attributes)","<p>Specifies columns which shouldn’t be exposed while calling <code>#inspect</code>.\n",null,0],["filter_backtrace","Rails::Console::BacktraceCleaner","rails/classes/Rails/Console/BacktraceCleaner.html#method-i-filter_backtrace","(bt)","",null,0],["filter_backtrace","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-i-filter_backtrace","(bt)","<p>error message manipulator WARN: Rails patches this method to filter its own backtrace. Be cautious when …\n",null,1],["filter_backtrace","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-c-filter_backtrace","(array)","",null,1],["filter_map","Enumerable","ruby/classes/Enumerable.html#method-i-filter_map","()","<p>Returns an array containing truthy elements returned by the block.\n<p>With a block given, calls the block …\n",null,1],["filter_map","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-filter_map","()","<p>Like Enumerable#filter_map, but chains operation to be lazy-evaluated.\n\n<pre><code>(1..).lazy.filter_map { |i| i * ...\n</code></pre>\n",null,1],["filter_param","ActiveSupport::ParameterFilter","rails/classes/ActiveSupport/ParameterFilter.html#method-i-filter_param","(key, value)","<p>Returns filtered value for given key. For <code>Proc</code> filters, third block argument is not populated.\n",null,0],["filter_parameter_logging.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/initializers/filter_parameter_logging_rb_tt.html","","<p># Be sure to restart your server when you modify this file.\n<p># Configure parameters to be filtered from …\n",null,0],["filter_proxies","ActionDispatch::RemoteIp::GetIp","rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-filter_proxies","(ips)","",null,0],["filtered_env","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_env","()","<p>Returns a hash of request.env with all sensitive data replaced.\n",null,0],["filtered_parameters","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_parameters","()","<p>Returns a hash of parameters with all sensitive data replaced.\n",null,0],["filtered_path","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_path","()","<p>Reconstructs a path with all sensitive GET parameters replaced.\n",null,0],["filtered_query_string","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_query_string","()","",null,0],["final","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-final","()","<p>Returns the remaining data held in the cipher object. Further calls to Cipher#update or Cipher#final …\n",null,1],["finalize","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-finalize","()","",null,1],["finalized?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-finalized-3F","()","",null,0],["find","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-find","(preview)","<p>Find a mailer preview by its underscored class name.\n",null,0],["find","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["find","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-find","(*args)","<p>Finds an object in the collection responding to the <code>id</code>. Uses the same rules as ActiveRecord::Base.find …\n",null,0],["find","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-find","(*args)","<p>Find by id - This can either be a specific id (1), a list of ids (1, 5, 6), or an array of ids ([5, 6, …\n",null,0],["find","Rails::Engine","rails/classes/Rails/Engine.html#method-c-find","(path)","<p>Finds engine with given path.\n",null,0],["find","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-c-find","(klass, params = nil)","<p>GET show GET edit PATCH/PUT update DELETE destroy\n",null,0],["find","Rails::SourceAnnotationExtractor","rails/classes/Rails/SourceAnnotationExtractor.html#method-i-find","(dirs)","<p>Returns a hash that maps filenames under <code>dirs</code> (recursively) to arrays with their annotations.\n",null,0],["find","Encoding","ruby/classes/Encoding.html#method-c-find","(p1)","<p>Search the encoding with specified <em>name</em>. <em>name</em> should be a string.\n\n<pre><code>Encoding.find(&quot;US-ASCII&quot;)  #=&gt; #&lt;Encoding:US-ASCII&gt;\n</code></pre>\n",null,1],["find","Enumerable","ruby/classes/Enumerable.html#method-i-find","(*args)","<p>Returns the first element for which the block returns a truthy value.\n<p>With a block given, calls the block …\n",null,1],["find","Find","ruby/classes/Find.html#method-c-find","(*paths, ignore_error: true)","<p>Calls the associated block with the name of every file and directory listed as arguments, then recursively …\n",null,1],["find","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-find","(file , paths = $:)","",null,1],["find","Pathname","ruby/classes/Pathname.html#method-i-find","(ignore_error: true)","<p>Iterates over the directory tree in a depth first manner, yielding a Pathname for each file under “this” …\n",null,1],["find","Rinda::TupleBag","ruby/classes/Rinda/TupleBag.html#method-i-find","(template)","<p>Finds a live tuple that matches <code>template</code>.\n",null,1],["find","Rinda::TupleBag::TupleBin","ruby/classes/Rinda/TupleBag/TupleBin.html#method-i-find","()","",null,1],["find_active_stub_by_path","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_active_stub_by_path","(path)","",null,1],["find_alias_command","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-find_alias_command","(cmd_name)","",null,1],["find_alias_comment","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_alias_comment","(class_name, new_name, old_name)","<p>Finds the comment for an alias on <code>class_name</code> from <code>new_name</code> to <code>old_name</code>\n",null,1],["find_all","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-i-find_all","(selector)","",null,0],["find_all","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_all","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["find_all","ActionView::Resolver","rails/classes/ActionView/Resolver.html#method-i-find_all","(name, prefix = nil, partial = false, details = {}, key = nil, locals = [])","<p>Normalizes the arguments and passes it on to find_templates.\n",null,0],["find_all","Enumerable","ruby/classes/Enumerable.html#method-i-find_all","()","<p>Returns an array containing elements selected by the block.\n<p>With a block given, calls the block with successive …\n",null,1],["find_all","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-find_all","()","<p>Like Enumerable#select, but chains operation to be lazy-evaluated.\n",null,1],["find_all","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-find_all","(req)","<p>Used by the Resolver, the protocol to use a AvailableSet as a search Set.\n",null,1],["find_all","Gem::Resolver::APISet","ruby/classes/Gem/Resolver/APISet.html#method-i-find_all","(req)","<p>Return an array of APISpecification objects matching DependencyRequest <code>req</code>.\n",null,1],["find_all","Gem::Resolver::ComposedSet","ruby/classes/Gem/Resolver/ComposedSet.html#method-i-find_all","(req)","<p>Finds all specs matching <code>req</code> in all sets.\n",null,1],["find_all","Gem::Resolver::CurrentSet","ruby/classes/Gem/Resolver/CurrentSet.html#method-i-find_all","(req)","",null,1],["find_all","Gem::Resolver::GitSet","ruby/classes/Gem/Resolver/GitSet.html#method-i-find_all","(req)","<p>Finds all git gems matching <code>req</code>\n",null,1],["find_all","Gem::Resolver::IndexSet","ruby/classes/Gem/Resolver/IndexSet.html#method-i-find_all","(req)","<p>Return an array of IndexSpecification objects matching DependencyRequest <code>req</code>.\n",null,1],["find_all","Gem::Resolver::InstallerSet","ruby/classes/Gem/Resolver/InstallerSet.html#method-i-find_all","(req)","<p>Returns an array of IndexSpecification objects matching DependencyRequest <code>req</code>.\n",null,1],["find_all","Gem::Resolver::LockSet","ruby/classes/Gem/Resolver/LockSet.html#method-i-find_all","(req)","<p>Returns an Array of IndexSpecification objects matching the DependencyRequest <code>req</code>.\n",null,1],["find_all","Gem::Resolver::Set","ruby/classes/Gem/Resolver/Set.html#method-i-find_all","(req)","<p>The find_all method must be implemented.  It returns all Resolver Specification objects matching the …\n",null,1],["find_all","Gem::Resolver::VendorSet","ruby/classes/Gem/Resolver/VendorSet.html#method-i-find_all","(req)","<p>Returns an Array of VendorSpecification objects matching the DependencyRequest <code>req</code>.\n",null,1],["find_all","Rinda::TupleBag","ruby/classes/Rinda/TupleBag.html#method-i-find_all","(template)","<p>Finds all live tuples that match <code>template</code>.\n",null,1],["find_all_by_full_name","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_all_by_full_name","(full_name)","<p>Returns every spec that has the given <code>full_name</code>\n",null,1],["find_all_by_name","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_all_by_name","(name, *requirements)","<p>Returns every spec that matches <code>name</code> and optional <code>requirements</code>.\n",null,1],["find_all_template","Rinda::TupleBag","ruby/classes/Rinda/TupleBag.html#method-i-find_all_template","(tuple)","<p>Finds all tuples in the TupleBag which when treated as templates, match <code>tuple</code> and are alive.\n",null,1],["find_ancestor_local_symbol","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-find_ancestor_local_symbol","(symbol)","<p>Looks for a symbol in the #ancestors. See Context#find_local_symbol.\n",null,1],["find_attachment_gallery_nodes","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-c-find_attachment_gallery_nodes","(content)","",null,0],["find_attr_comment","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_attr_comment","(var_name, attr_name, read = nil, write = nil)","<p>Finds a comment for rb_define_attr, rb_attr or Document-attr.\n<p><code>var_name</code> is the C class variable the attribute …\n",null,1],["find_attribute","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_attribute","(name, singleton)","<p>Finds an attribute <code>name</code> with singleton value <code>singleton</code>.\n",null,1],["find_attribute_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_attribute_named","(name)","<p>Finds an attribute with <code>name</code> in this context\n",null,1],["find_beginning_of_week!","Date","rails/classes/Date.html#method-c-find_beginning_of_week-21","(week_start)","<p>Returns week start day symbol (e.g. <code>:monday</code>), or raises an <code>ArgumentError</code> for invalid day symbol.\n",null,0],["find_body","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_body","(class_name, meth_name, meth_obj, file_content, quiet = false)","<p>Find the C code corresponding to a Ruby method\n",null,1],["find_by","ActiveRecord::Encryption::ExtendedDeterministicQueries::CoreQueries","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/CoreQueries.html#method-i-find_by","(*args)","",null,0],["find_by","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-find_by","(arg, *args)","<p>Finds the first record matching the specified conditions. There is no implied ordering so if order matters, …\n",null,0],["find_by!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-find_by-21","(arg, *args)","<p>Like #find_by, except that if no record is found, raises an ActiveRecord::RecordNotFound error.\n",null,0],["find_by_full_name","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_by_full_name","(full_name)","<p>Find the best specification matching a <code>full_name</code>.\n",null,1],["find_by_name","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_by_name","(name, *requirements)","<p>Find the best specification matching a <code>name</code> and <code>requirements</code>. Raises if the dependency doesn’t resolve …\n",null,1],["find_by_path","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_by_path","(path)","<p>Return the best specification that contains the file matching <code>path</code>.\n",null,1],["find_by_sql","ActiveRecord::Querying","rails/classes/ActiveRecord/Querying.html#method-i-find_by_sql","(sql, binds = [], preparable: nil, &block)","<p>Executes a custom SQL query against your database and returns all the results. The results will be returned …\n",null,0],["find_c_enclosure","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_c_enclosure","(variable)","<p>Finds the enclosure (namespace) for the given C <code>variable</code>.\n",null,1],["find_class","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_class","(raw_name, name, base_name = nil)","<p>Finds a RDoc::NormalClass or RDoc::NormalModule for <code>raw_name</code>\n",null,1],["find_class_comment","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_class_comment","(class_name, class_mod)","<p>Look for class or module documentation above Init_<code>class_name</code>(void), in a Document-class <code>class_name</code> (or …\n",null,1],["find_class_method_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_class_method_named","(name)","<p>Finds a class method with <code>name</code> in this context\n",null,1],["find_class_named","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-find_class_named","(name)","<p>Finds a class or module with <code>name</code> in this namespace or its descendants\n",null,1],["find_class_named","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_class_named","(name)","<p>Finds the class with <code>name</code> in all discovered classes\n",null,1],["find_class_named_from","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_class_named_from","(name, from)","<p>Finds the class with <code>name</code> starting in namespace <code>from</code>\n",null,1],["find_class_or_module","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_class_or_module","(name)","<p>Finds the class or module with <code>name</code>\n",null,1],["find_class_or_module","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-find_class_or_module","(name)","<p>See RDoc::TopLevel::find_class_or_module\n",null,1],["find_cmd_and_exec","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-i-find_cmd_and_exec","(commands, *args)","",null,0],["find_command","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-find_command","(cmd_name)","",null,1],["find_command_possibilities","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-find_command_possibilities","(cmd_name)","",null,1],["find_config_file","Gem","ruby/classes/Gem.html#method-c-find_config_file","()","<p>Finds the user’s config file\n",null,1],["find_const_comment","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_const_comment","(type, const_name, class_name = nil)","<p>Finds a comment matching <code>type</code> and <code>const_name</code> either above the comment or in the matching Document- section. …\n",null,1],["find_constant_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_constant_named","(name)","<p>Finds a constant with <code>name</code> in this context\n",null,1],["find_db_config","ActiveRecord::DatabaseConfigurations","rails/classes/ActiveRecord/DatabaseConfigurations.html#method-i-find_db_config","(env)","<p>Returns a single DatabaseConfig object based on the requested environment.\n<p>If the application has multiple …\n",null,0],["find_default_spec","Gem","ruby/classes/Gem.html#method-c-find_default_spec","(path)","<p>Find a Gem::Specification of default gem from <code>path</code>\n",null,1],["find_each","ActiveRecord::Batches","rails/classes/ActiveRecord/Batches.html#method-i-find_each","(start: nil, finish: nil, batch_size: 1000, error_on_ignore: nil, order: :asc, &block)","<p>Looping through a collection of records from the database (using the Scoping::Named::ClassMethods.all …\n",null,0],["find_enclosing_module_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_enclosing_module_named","(name)","<p>Find a module at a higher scope\n",null,1],["find_executable","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-find_executable","(bin, path = nil)","<p>Searches for the executable <code>bin</code> on <code>path</code>.  The default path is your <code>PATH</code> environment variable. If that …\n",null,1],["find_extension","OpenSSL::X509::Extension::Helpers","ruby/classes/OpenSSL/X509/Extension/Helpers.html#method-i-find_extension","(oid)","",null,1],["find_external_alias","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_external_alias","(name, singleton)","<p>Finds an external alias <code>name</code> with singleton value <code>singleton</code>.\n",null,1],["find_external_alias_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_external_alias_named","(name)","<p>Finds an external alias with <code>name</code> in this context\n",null,1],["find_file_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_file_named","(name)","<p>Finds a file with <code>name</code> in this context\n",null,1],["find_file_named","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_file_named","(name)","<p>Finds the file with <code>name</code> in all discovered files\n",null,1],["find_files","Gem","ruby/classes/Gem.html#method-c-find_files","(glob, check_load_path=true)","<p>Returns a list of paths matching <code>glob</code> that can be used by a gem to pick up features from other gems. …\n",null,1],["find_gemspec","Gem::GemspecHelpers","ruby/classes/Gem/GemspecHelpers.html#method-i-find_gemspec","(glob = \"*.gemspec\")","",null,1],["find_header","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-find_header","(header, *paths)","<p>Instructs mkmf to search for the given <code>header</code> in any of the <code>paths</code> provided, and returns whether or not …\n",null,1],["find_in","Rails::SourceAnnotationExtractor","rails/classes/Rails/SourceAnnotationExtractor.html#method-i-find_in","(dir)","<p>Returns a hash that maps filenames under <code>dir</code> (recursively) to arrays with their annotations. Files with …\n",null,0],["find_in_batches","ActiveRecord::Batches","rails/classes/ActiveRecord/Batches.html#method-i-find_in_batches","(start: nil, finish: nil, batch_size: 1000, error_on_ignore: nil, order: :asc)","<p>Yields each batch of records that was found by the find options as an array.\n\n<pre><code>Person.where(&quot;age &gt; 21&quot;).find_in_batches ...\n</code></pre>\n",null,0],["find_in_cache","Gem::Commands::UnpackCommand","ruby/classes/Gem/Commands/UnpackCommand.html#method-i-find_in_cache","(filename)","<p>Find cached filename in Gem.path. Returns nil if the file cannot be found.\n",null,1],["find_in_unresolved","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_in_unresolved","(path)","<p>Return currently unresolved specs that contain the file matching <code>path</code>.\n",null,1],["find_in_unresolved_tree","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_in_unresolved_tree","(path)","<p>Search through all unresolved deps and sub-dependencies and return specs that contain the file matching …\n",null,1],["find_inactive_by_path","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-find_inactive_by_path","(path)","<p>Return the best specification that contains the file matching <code>path</code> amongst the specs that are not activated. …\n",null,1],["find_index","Array","ruby/classes/Array.html#method-i-find_index","(*args)","<p>Returns the index of a specified element.\n<p>When argument <code>object</code> is given but no block, returns the index …\n",null,1],["find_index","Enumerable","ruby/classes/Enumerable.html#method-i-find_index","(p1)","<p>Returns the index of the first element that meets a specified criterion, or <code>nil</code> if no such element is …\n",null,1],["find_instance_method_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_instance_method_named","(name)","<p>Finds an instance method with <code>name</code> in this context\n",null,1],["find_latest_files","Gem","ruby/classes/Gem.html#method-c-find_latest_files","(glob, check_load_path=true)","<p>Returns a list of paths matching <code>glob</code> from the latest gems that can be used by a gem to pick up features …\n",null,1],["find_leaves","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-i-find_leaves","(path)","",null,1],["find_library","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-find_library","(lib, func, *paths, &b)","<p>Returns whether or not the entry point <code>func</code> can be found within the library <code>lib</code> in one of the <code>paths</code> specified, …\n",null,1],["find_local_symbol","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_local_symbol","(symbol)","<p>Finds a method, constant, attribute, external alias, module or file named <code>symbol</code> in this context.\n",null,1],["find_local_symbol","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-find_local_symbol","(symbol)","<p>Finds a class or module named <code>symbol</code>\n",null,1],["find_method","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_method","(name, singleton)","<p>Finds a method named <code>name</code> with singleton value <code>singleton</code>.\n",null,1],["find_method_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_method_named","(name)","<p>Finds a instance or module method with <code>name</code> in this context\n",null,1],["find_modifiers","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_modifiers","(comment, meth_obj)","<p>Handles modifiers in <code>comment</code> and updates <code>meth_obj</code> as appropriate.\n",null,1],["find_module_named","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_module_named","(name)","<p>Find a module with <code>name</code> using ruby’s scoping rules\n",null,1],["find_module_named","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_module_named","(name)","<p>Finds the module with <code>name</code> in all discovered modules\n",null,1],["find_module_named","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-find_module_named","(name)","<p>Finds a module or class with <code>name</code>\n",null,1],["find_name","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-find_name","(full_name)","",null,1],["find_or_create_by","ActiveRecord::Encryption::ExtendedDeterministicQueries::RelationQueries","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/RelationQueries.html#method-i-find_or_create_by","(attributes, &block)","",null,0],["find_or_create_by","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-find_or_create_by","(attributes, &block)","<p>Finds the first record with the given attributes, or creates a record with the attributes if one is not …\n",null,0],["find_or_create_by!","ActiveRecord::Encryption::ExtendedDeterministicQueries::RelationQueries","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/RelationQueries.html#method-i-find_or_create_by-21","(attributes, &block)","",null,0],["find_or_create_by!","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-find_or_create_by-21","(attributes, &block)","<p>Like #find_or_create_by, but calls create! so an exception is raised if the created record is invalid. …\n",null,0],["find_or_initialize_by","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-find_or_initialize_by","(attributes, &block)","<p>Like #find_or_create_by, but calls new instead of create.\n",null,0],["find_override_comment","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-find_override_comment","(class_name, meth_obj)","<p>Finds a <code>Document-method</code> override for <code>meth_obj</code> on <code>class_name</code>\n",null,1],["find_paths","Gem::Commands::WhichCommand","ruby/classes/Gem/Commands/WhichCommand.html#method-i-find_paths","(package_name, dirs)","",null,1],["find_proxy","URI::Generic","ruby/classes/URI/Generic.html#method-i-find_proxy","(env=ENV)","<p>Returns a proxy URI. The proxy URI is obtained from environment variables such as http_proxy, ftp_proxy …\n",null,1],["find_response","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-find_response","(p1)","<p>Returns a SingleResponse whose CertId matches with <em>certificate_id</em>, or <code>nil</code> if this BasicResponse does …\n",null,1],["find_root","Rails::Application","rails/classes/Rails/Application.html#method-c-find_root","(from)","",null,0],["find_root","Rails::Engine","rails/classes/Rails/Engine.html#method-c-find_root","(from)","",null,0],["find_session","ActionDispatch::Session::CacheStore","rails/classes/ActionDispatch/Session/CacheStore.html#method-i-find_session","(env, sid)","<p>Get a session from the cache.\n",null,0],["find_signed","ActiveRecord::SignedId::ClassMethods","rails/classes/ActiveRecord/SignedId/ClassMethods.html#method-i-find_signed","(signed_id, purpose: nil)","<p>Lets you find a record based on a signed id that’s safe to put into the world without risk of tampering. …\n",null,0],["find_signed","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-c-find_signed","(id, record: nil, purpose: :blob_id)","<p>You can use the signed ID of a blob to refer to it on the client side without fear of tampering. This …\n",null,0],["find_signed!","ActiveRecord::SignedId::ClassMethods","rails/classes/ActiveRecord/SignedId/ClassMethods.html#method-i-find_signed-21","(signed_id, purpose: nil)","<p>Works like find_signed, but will raise an <code>ActiveSupport::MessageVerifier::InvalidSignature</code> exception …\n",null,0],["find_signed!","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-c-find_signed-21","(id, record: nil, purpose: :blob_id)","<p>Works like <code>find_signed</code>, but will raise an <code>ActiveSupport::MessageVerifier::InvalidSignature</code> exception …\n",null,0],["find_sole_by","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-find_sole_by","(arg, *args)","<p>Finds the sole matching record. Raises ActiveRecord::RecordNotFound if no record is found. Raises ActiveRecord::SoleRecordExceeded …\n",null,0],["find_source","IRB::SourceFinder","ruby/classes/IRB/SourceFinder.html#method-i-find_source","(signature, super_level = 0)","",null,1],["find_symbol","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_symbol","(symbol)","<p>Look up <code>symbol</code>, first as a module, then as a local symbol.\n",null,1],["find_symbol_module","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-find_symbol_module","(symbol)","<p>Look up a module named <code>symbol</code>.\n",null,1],["find_template","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_template","(name, prefixes = [], partial = false, keys = [], options = {})","",null,0],["find_text_page","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_text_page","(file_name)","<p>Returns the RDoc::TopLevel that is a text file and has the given <code>file_name</code>\n",null,1],["find_type","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-find_type","(type, opt, *headers, &b)","<p>Returns where the static type <code>type</code> is defined.\n<p>You may also pass additional flags to <code>opt</code> which are then …\n",null,1],["find_tzinfo","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-find_tzinfo","(name)","",null,0],["find_unique","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-find_unique","(all_hash)","<p>Finds unique classes/modules defined in <code>all_hash</code>, and returns them as an array. Performs the alias updates …\n",null,1],["find_unresolved_default_spec","Gem","ruby/classes/Gem.html#method-c-find_unresolved_default_spec","(path)","<p>Find an unresolved Gem::Specification of default gem from <code>path</code>\n",null,1],["find_zone","Time","rails/classes/Time.html#method-c-find_zone","(time_zone)","<p>Returns a TimeZone instance matching the time zone provided. Accepts the time zone in any format supported …\n",null,0],["find_zone!","Time","rails/classes/Time.html#method-c-find_zone-21","(time_zone)","<p>Returns a TimeZone instance matching the time zone provided. Accepts the time zone in any format supported …\n",null,0],["finder","ActiveRecord::DynamicMatchers::FindBy","rails/classes/ActiveRecord/DynamicMatchers/FindBy.html#method-i-finder","()","",null,0],["finder","ActiveRecord::DynamicMatchers::FindByBang","rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html#method-i-finder","()","",null,0],["finger","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-c-finger","()","<p>Creates a singleton RingFinger and looks for a RingServer.  Returns the created RingFinger.\n",null,1],["finish","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-i-finish","(name, id, payload)","",null,0],["finish","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-finish","(name, id, payload, listeners = listeners_for(name))","",null,0],["finish","ActiveSupport::Notifications::Fanout::Subscribers::EventObject","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/EventObject.html#method-i-finish","(name, id, payload)","",null,0],["finish","ActiveSupport::Notifications::Instrumenter","rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-finish","(name, payload)","<p>Send a finish notification with <code>name</code> and <code>payload</code>.\n",null,0],["finish","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-i-finish","(name, id, payload)","",null,0],["finish","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-finish","()","<p>Finishes the converter. It returns the last part of the converted string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;utf-8&quot;, ...\n</code></pre>\n",null,1],["finish","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-finish","()","<p>Finishes the HTTP session:\n\n<pre><code>http = Net::HTTP.new(hostname)\nhttp.start\nhttp.started? # =&gt; true\nhttp.finish ...\n</code></pre>\n",null,1],["finish","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-finish","()","<p>Releases all internal structural references for this engine.\n<p>May raise an EngineError if the engine is …\n",null,1],["finish","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-finish","()","",null,1],["finish","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-finish","()","<p>Completes any unfinished option setup business such as filtering for existent files, creating a regexp …\n",null,1],["finish","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-finish","()","",null,1],["finish","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-finish","()","<p>Closes the GzipFile object. Unlike Zlib::GzipFile#close, this method never calls the close method of …\n",null,1],["finish","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-finish","()","<p>Finishes the stream and flushes output buffer.  If a block is given each chunk is yielded to the block …\n",null,1],["finish!","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-finish-21","()","<p>Record information at the time this event finishes\n",null,0],["finish_page_dir","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-finish_page_dir","()","<p>Fixes the page_dir to be relative to the root_dir and adds the page_dir to the files list.\n",null,1],["finish_pasting","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-finish_pasting","()","",null,1],["finish_resolve","Gem","ruby/classes/Gem.html#method-c-finish_resolve","(request_set=Gem::RequestSet.new)","",null,1],["finish_with_state","ActiveSupport::Notifications::Instrumenter","rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-finish_with_state","(listeners_state, name, payload)","",null,0],["finished?","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-finished-3F","()","",null,1],["finished?","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-finished-3F","()","<p>Returns true if the stream is finished.\n",null,1],["finished_message","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-finished_message","()","<p>Returns the last <strong>Finished</strong> message sent\n",null,1],["finite?","BigDecimal","ruby/classes/BigDecimal.html#method-i-finite-3F","()","<p>Returns True if the value is finite (not NaN or infinite).\n",null,1],["finite?","Complex","ruby/classes/Complex.html#method-i-finite-3F","()","<p>Returns <code>true</code> if both <code>self.real.finite?</code> and <code>self.imag.finite?</code> are true, <code>false</code> otherwise:\n\n<pre><code>Complex(1, 1).finite? ...\n</code></pre>\n",null,1],["finite?","Float","ruby/classes/Float.html#method-i-finite-3F","()","<p>Returns <code>true</code> if <code>self</code> is not <code>Infinity</code>, <code>-Infinity</code>, or <code>NaN</code>, <code>false</code> otherwise:\n\n<pre><code>f = 2.0      # =&gt; 2.0\nf.finite? ...\n</code></pre>\n",null,1],["finite?","Numeric","ruby/classes/Numeric.html#method-i-finite-3F","()","<p>Returns <code>true</code> if <code>self</code> is a finite number, <code>false</code> otherwise.\n",null,1],["fips_mode","OpenSSL","ruby/classes/OpenSSL.html#method-c-fips_mode","()","",null,1],["fips_mode=","OpenSSL","ruby/classes/OpenSSL.html#method-c-fips_mode-3D","(p1)","<p>Turns FIPS mode on or off. Turning on FIPS mode will obviously only have an effect for FIPS-capable installations …\n",null,1],["first","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-first","","<p>Returns the first record, or the first <code>n</code> records, from the collection. If the collection is empty, the …\n",null,0],["first","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-first","(limit = nil)","<p>Find the first record (or first N records if a parameter is supplied). If no order is defined it will …\n",null,0],["first","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-first","()","",null,0],["first","String","rails/classes/String.html#method-i-first","(limit = 1)","<p>Returns the first character. If a limit is supplied, returns a substring from the beginning of the string …\n",null,0],["first","Array","ruby/classes/Array.html#method-i-first","(n = unspecified = true)","<p>Returns elements from <code>self</code>; does not modify <code>self</code>.\n<p>When no argument is given, returns the first element: …\n",null,1],["first","Enumerable","ruby/classes/Enumerable.html#method-i-first","(*args)","<p>Returns the first element or elements.\n<p>With no argument, returns the first element, or <code>nil</code> if there is …\n",null,1],["first","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-first","(*args)","<p>Returns the first number in this arithmetic sequence, or an array of the first <code>n</code> elements.\n",null,1],["first","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-first","()","<p>Returns the first source in the list.\n",null,1],["first","Range","ruby/classes/Range.html#method-i-first","(p1)","<p>With no argument, returns the first element of <code>self</code>, if it exists:\n\n<pre><code>(1..4).first     # =&gt; 1\n(&#39;a&#39;..&#39;d&#39;).first ...\n</code></pre>\n",null,1],["first!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-first-21","()","<p>Same as #first but raises ActiveRecord::RecordNotFound if no record is found. Note that #first! accepts …\n",null,0],["first?","ActionView::PartialIteration","rails/classes/ActionView/PartialIteration.html#method-i-first-3F","()","<p>Check if this is the first iteration of the partial.\n",null,0],["first?","PrettyPrint::SingleLine","ruby/classes/PrettyPrint/SingleLine.html#method-i-first-3F","()","<p>This is used as a predicate, and ought to be called first.\n",null,1],["first_column","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-first_column","()","<p>The column number in the source code where this AST’s text began.\n",null,1],["first_lineno","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-first_lineno","()","<p>The line number in the source code where this AST’s text began.\n",null,1],["first_lineno","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-first_lineno","()","<p>Returns the number of the first source line where the instruction sequence was loaded from.\n<p>For example, …\n",null,1],["fix","BigDecimal","ruby/classes/BigDecimal.html#method-i-fix","()","<p>Return the integer part of the number, as a BigDecimal.\n",null,1],["fix_basic_object_inheritance","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-fix_basic_object_inheritance","()","<p>Fixes the erroneous <code>BasicObject &lt; Object</code> in 1.9.\n<p>Because we assumed all classes without a stated superclass …\n",null,1],["fixed?","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-fixed-3F","()","",null,0],["fixed_anchor?","StringScanner","ruby/classes/StringScanner.html#method-i-fixed_anchor-3F","()","<p>Whether <code>scanner</code> uses fixed anchor mode or not.\n<p>If fixed anchor mode is used, <code>\\A</code> always matches the beginning …\n",null,1],["fixed_encoding?","Regexp","ruby/classes/Regexp.html#method-i-fixed_encoding-3F","()","<p>Returns <code>false</code> if <code>self</code> is applicable to a string with any ASCII-compatible encoding; otherwise returns …\n",null,1],["fixed_length_secure_compare","ActiveSupport::SecurityUtils","rails/classes/ActiveSupport/SecurityUtils.html#method-c-fixed_length_secure_compare","(a, b)","",null,0],["fixed_length_secure_compare","OpenSSL","ruby/classes/OpenSSL.html#method-c-fixed_length_secure_compare","(p1, p2)","<p>Constant time memory comparison for fixed length strings, such as results of HMAC calculations.\n<p>Returns …\n",null,1],["fixture_file_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-fixture_file_name","()","",null,0],["fixture_is_cached?","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-fixture_is_cached-3F","(connection, table_name)","",null,0],["fixtures_path","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-fixtures_path","()","",null,0],["flags","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-flags","()","<p>Returns the flags of <em>ifaddr</em>.\n",null,1],["flags=","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-flags-3D","(p1)","<p>Sets the default flags used by certificate chain verification performed with the Store.\n<p><em>flags</em> consists …\n",null,1],["flags=","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-flags-3D","(p1)","<p>Sets the verification flags to the context. This overrides the default value set by Store#flags=.\n<p>See …\n",null,1],["flash","ActionDispatch::Flash::RequestMethods","rails/classes/ActionDispatch/Flash/RequestMethods.html#method-i-flash","()","<p>Access the contents of the flash. Returns a ActionDispatch::Flash::FlashHash.\n<p>See ActionDispatch::Flash …\n",null,0],["flash=","ActionDispatch::Flash::RequestMethods","rails/classes/ActionDispatch/Flash/RequestMethods.html#method-i-flash-3D","(flash)","",null,0],["flat_map","Enumerable","ruby/classes/Enumerable.html#method-i-flat_map","()","<p>Returns an array of flattened objects returned by the block.\n<p>With a block given, calls the block with …\n",null,1],["flat_map","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-flat_map","()","<p>Returns a new lazy enumerator with the concatenated results of running <code>block</code> once for every element in …\n",null,1],["flatten","Array","ruby/classes/Array.html#method-i-flatten","(*args)","<p>Returns a new Array that is a recursive flattening of <code>self</code>:\n<p>Each non-Array element is unchanged.\n<p>Each  …\n",null,1],["flatten","Hash","ruby/classes/Hash.html#method-i-flatten","(*args)","<p>Returns a new Array object that is a 1-dimensional flattening of <code>self</code>.\n<p>By default, nested Arrays are not …\n",null,1],["flatten","Set","ruby/classes/Set.html#method-i-flatten","()","<p>Returns a new set that is a copy of the set, flattening each\ncontaining set recursively.\n",null,1],["flatten!","Array","ruby/classes/Array.html#method-i-flatten-21","(*args)","<p>Replaces each nested Array in <code>self</code> with the elements from that Array; returns <code>self</code> if any changes, <code>nil</code> …\n",null,1],["flatten!","Set","ruby/classes/Set.html#method-i-flatten-21","()","<p>Equivalent to Set#flatten, but replaces the receiver with the\nresult in place. Returns nil if no modifications ...\n",null,1],["floats","Rails::Generators::AppBase::GemfileEntry","rails/classes/Rails/Generators/AppBase/GemfileEntry.html#method-c-floats","(name, comment = nil)","",null,0],["flock","CSV","ruby/classes/CSV.html#method-i-flock","(*args)","",null,1],["flock","File","ruby/classes/File.html#method-i-flock","(p1)","<p>Locks or unlocks a file according to the given <code>locking_constant</code>,\na bitwise OR of the values in the table ...\n",null,1],["floor","Time","rails/classes/Time.html#method-i-floor","(precision = 0)","",null,0],["floor","BigDecimal","ruby/classes/BigDecimal.html#method-i-floor","(p1 = v1)","<p>Return the largest integer less than or equal to the value, as a BigDecimal.\n\n<pre><code>BigDecimal(&#39;3.14159&#39;).floor ...\n</code></pre>\n",null,1],["floor","Float","ruby/classes/Float.html#method-i-floor","(*args)","<p>Returns the largest number less than or equal to <code>self</code> with a precision of <code>ndigits</code> decimal digits.\n<p>When …\n",null,1],["floor","Integer","ruby/classes/Integer.html#method-i-floor","(*args)","<p>Returns the largest number less than or equal to <code>self</code> with a precision of <code>ndigits</code> decimal digits.\n<p>When …\n",null,1],["floor","Numeric","ruby/classes/Numeric.html#method-i-floor","(*args)","<p>Returns the largest number that is less than or equal to <code>self</code> with a precision of <code>digits</code> decimal digits. …\n",null,1],["floor","Rational","ruby/classes/Rational.html#method-i-floor","(*args)","<p>Returns the largest number less than or equal to <code>rat</code> with a precision of <code>ndigits</code> decimal digits (default: …\n",null,1],["floor","Time","ruby/classes/Time.html#method-i-floor","(*args)","<p>Returns a new <code>Time</code> object whose numerical value is less than or equal to <code>self</code> with its seconds truncated …\n",null,1],["flush","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-flush","(minimum_idle = @idle_timeout)","<p>Disconnect all connections that have been idle for at least <code>minimum_idle</code> seconds. Connections currently …\n",null,0],["flush","ActiveRecord::FutureResult::EventBuffer","rails/classes/ActiveRecord/FutureResult/EventBuffer.html#method-i-flush","()","",null,0],["flush","ActiveSupport::TaggedLogging","rails/classes/ActiveSupport/TaggedLogging.html#method-i-flush","()","",null,0],["flush","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-flush","()","<p>Flushes the TarWriter’s IO\n",null,1],["flush","Gem::SilentUI::NullIO","ruby/classes/Gem/SilentUI/NullIO.html#method-i-flush","()","",null,1],["flush","IO","ruby/classes/IO.html#method-i-flush","()","<p>Flushes data buffered in <code>self</code> to the operating system (but does not necessarily flush data buffered in …\n",null,1],["flush","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-flush","()","<p>Flushes buffered data to the SSLSocket.\n",null,1],["flush","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-flush","()","<p>outputs buffered data.\n",null,1],["flush","StringIO","ruby/classes/StringIO.html#method-i-flush","()","<p>Returns an object itself.  Just for compatibility to IO.\n",null,1],["flush","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-flush","()","<p>Write all the attributes into the registry file.\n",null,1],["flush","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-i-flush","(p1 = v1)","<p>This method is equivalent to <code>deflate(&#39;&#39;, flush)</code>. This method is just provided to improve the …\n",null,1],["flush","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-flush","(p1 = v1)","<p>Flushes all the internal buffers of the GzipWriter object.  The meaning of <code>flush</code> is same as in Zlib::Deflate#deflate …\n",null,1],["flush!","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-flush-21","()","<p>Disconnect all currently idle connections. Connections currently checked out are unaffected.\n",null,0],["flush_all!","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-c-flush_all-21","()","<p>Flush all log_subscribers’ logger.\n",null,0],["flush_idle_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-flush_idle_connections-21","(role = ActiveRecord::Base.current_role)","<p>Disconnects all currently idle connections.\n<p>See ConnectionPool#flush! for details.\n",null,0],["flush_left","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-flush_left","(text)","<p>Flush <code>text</code> left based on the shortest line\n",null,1],["flush_next_in","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-flush_next_in","()","",null,1],["flush_next_out","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-flush_next_out","()","<p>Flushes output buffer and returns all data in that buffer.  If a block is given each chunk is yielded …\n",null,1],["flush_sessions","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-flush_sessions","(p1 = v1)","<p>Removes sessions in the internal cache that have expired at <em>time</em>.\n",null,1],["fname?","SyntaxSuggest::LexValue","ruby/classes/SyntaxSuggest/LexValue.html#method-i-fname-3F","()","",null,1],["fnmatch","File","ruby/classes/File.html#method-c-fnmatch","(pattern, path, flags = 0)","<p>Returns true if <code>path</code> matches against <code>pattern</code>.  The pattern is not a regular expression; instead it follows …\n",null,1],["fnmatch","Pathname","ruby/classes/Pathname.html#method-i-fnmatch","(p1, p2 = v2)","<p>Return <code>true</code> if the receiver matches the given pattern.\n<p>See File.fnmatch.\n",null,1],["fnmatch?","File","ruby/classes/File.html#method-c-fnmatch-3F","(pattern, path, flags = 0)","",null,1],["fnmatch?","Pathname","ruby/classes/Pathname.html#method-i-fnmatch-3F","(p1, p2 = v2)","<p>Return <code>true</code> if the receiver matches the given pattern.\n<p>See File.fnmatch.\n",null,1],["font_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-font_path","(source, options = {})","<p>Computes the path to a font asset. Full paths from the document root will be passed through.\n\n<pre><code>font_path(&quot;font&quot;) ...\n</code></pre>\n",null,0],["font_url","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-font_url","(source, options = {})","<p>Computes the full URL to a font asset. This will use <code>font_path</code> internally, so most of their behaviors …\n",null,0],["for","ActionController::Renderer","rails/classes/ActionController/Renderer.html#method-c-for","(controller, env = {}, defaults = DEFAULTS.dup)","<p>Create a new renderer instance for a specific controller class.\n",null,0],["for","Gem::GemcutterUtilities::WebauthnListener::Response","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/Response.html#method-c-for","(host)","",null,1],["for","IO::Buffer","ruby/classes/IO/Buffer.html#method-c-for","(p1)","<p>Creates a zero-copy IO::Buffer from the given string’s memory. Without a block a frozen internal …\n",null,1],["for","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-for","(top_level, file_name, content, options, stats)","<p>Finds and instantiates the correct parser for the given <code>file_name</code> and <code>content</code>.\n",null,1],["for","URI","ruby/classes/URI.html#method-c-for","(scheme, *arguments, default: Generic)","<p>Returns a new object constructed from the given <code>scheme</code>, <code>arguments</code>, and <code>default</code>:\n<p>The new object is an instance …\n",null,1],["for_cache","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-for_cache","()","<p>Creates a duplicate spec without large blobs that aren’t used at runtime.\n",null,1],["for_current_gems","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-c-for_current_gems","(needed)","<p>Creates a Resolver that queries only against the already installed gems for the <code>needed</code> dependencies. …\n",null,1],["for_each","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-for_each","(databases)","",null,0],["for_fd","BasicSocket","ruby/classes/BasicSocket.html#method-c-for_fd","(p1)","<p>Returns a socket object which contains the file descriptor, <em>fd</em>.\n\n<pre><code># If invoked by inetd, STDIN/STDOUT/STDERR ...\n</code></pre>\n",null,1],["for_fd","Dir","ruby/classes/Dir.html#method-c-for_fd","(p1)","<p>Returns a new Dir object representing the directory specified by the given integer directory file descriptor …\n",null,1],["for_fd","IO","ruby/classes/IO.html#method-c-for_fd","(*args)","<p>Synonym for IO.new.\n",null,1],["for_spec","Gem::Installer","ruby/classes/Gem/Installer.html#method-c-for_spec","(spec, options = {})","<p>Construct an installer object for an ephemeral gem (one where we don’t actually have a .gem file, …\n",null,1],["for_spec?","Gem::Resolver::Conflict","ruby/classes/Gem/Resolver/Conflict.html#method-i-for_spec-3F","(spec)","<p>Returns true if the conflicting dependency’s name matches <code>spec</code>.\n",null,1],["force","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-force","()","<p>Expands <code>lazy</code> enumerator to an array. See Enumerable#to_a.\n",null,1],["force_add_empty","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-force_add_empty","()","<p>When using this flag, ‘scan_while` will bypass the block it’s given and always add a line that responds …\n",null,1],["force_add_hidden","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-force_add_hidden","()","<p>When using this flag, ‘scan_while` will bypass the block it’s given and always add a line that responds …\n",null,1],["force_documentation=","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-force_documentation-3D","(value)","<p>Force the documentation of this object unless documentation has been turned off by :enddoc:\n",null,1],["force_encoding","String","ruby/classes/String.html#method-i-force_encoding","(p1)","<p>Changes the encoding of <code>self</code> to <code>encoding</code>, which may be a string encoding name or an Encoding object; …\n",null,1],["force_quotes?","CSV","ruby/classes/CSV.html#method-i-force_quotes-3F","()","<p>Returns the value that determines whether all output fields are to be quoted; used for generating; see …\n",null,1],["force_truecolor","Reline::Face","ruby/classes/Reline/Face.html#method-c-force_truecolor","()","",null,1],["foreach","Addrinfo","ruby/classes/Addrinfo.html#method-c-foreach","(nodename, service, family=nil, socktype=nil, protocol=nil, flags=nil, timeout: nil, &block)","<p>iterates over the list of Addrinfo objects obtained by Addrinfo.getaddrinfo.\n\n<pre><code>Addrinfo.foreach(nil, 80) ...\n</code></pre>\n",null,1],["foreach","CSV","ruby/classes/CSV.html#method-c-foreach","(path, mode=\"r\", **options, &block)","<p>Calls the block with each row read from source <code>path_or_io</code>.\n<p>Path input without headers:\n\n<pre><code>string = &quot;foo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["foreach","Dir","ruby/classes/Dir.html#method-c-foreach","(*args)","<p>Calls the block with each entry name in the directory at <code>dirpath</code>; sets the given encoding onto each passed …\n",null,1],["foreach","IO","ruby/classes/IO.html#method-c-foreach","(p1, p2 = v2, p3 = v3, p4 = {})","<p>Calls the block with each successive line read from the stream.\n<p>When called from class IO (but not subclasses …\n",null,1],["foreign_key","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-foreign_key","(*args, **options)","<p>Adds a foreign key to the table using a supplied table name.\n\n<pre><code>t.foreign_key(:authors)\nt.foreign_key(:authors, ...\n</code></pre>\n",null,0],["foreign_key","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-foreign_key","(to_table, **options)","",null,0],["foreign_key","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-foreign_key","(class_name, separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name. <code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,0],["foreign_key","String","rails/classes/String.html#method-i-foreign_key","(separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name. <code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,0],["foreign_key_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-foreign_key_exists-3F","(from_table, to_table = nil, **options)","<p>Checks to see if a foreign key exists on a table for a given foreign key definition.\n\n<pre><code># Checks to see if ...\n</code></pre>\n",null,0],["foreign_key_exists?","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-foreign_key_exists-3F","(*args, **options)","<p>Checks to see if a foreign key exists.\n\n<pre><code>t.foreign_key(:authors) unless t.foreign_key_exists?(:authors)\n</code></pre>\n",null,0],["foreign_keys","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-foreign_keys","(table_name)","",null,0],["foreign_keys","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-foreign_keys","(table_name)","",null,0],["foreign_keys","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-foreign_keys","(table_name)","",null,0],["foreign_keys","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-foreign_keys","(table_name)","<p>Returns an array of foreign keys for the given table. The foreign keys are represented as ForeignKeyDefinition …\n",null,0],["foreign_table_exists?","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-foreign_table_exists-3F","(table_name)","",null,0],["foreign_tables","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-foreign_tables","()","",null,0],["fork","Kernel","ruby/classes/Kernel.html#method-i-fork","()","<p>Creates a child process.\n<p>With a block given, runs the block in the child process; on block exit, the child …\n",null,1],["fork","Process","ruby/classes/Process.html#method-c-fork","()","<p>Creates a child process.\n<p>With a block given, runs the block in the child process; on block exit, the child …\n",null,1],["fork","Thread","ruby/classes/Thread.html#method-c-fork","(*args)","<p>Basically the same as ::new. However, if class Thread is subclassed, then calling <code>start</code> in that subclass …\n",null,1],["form","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-form","(method = \"post\", action = script_name, enctype = \"application/x-www-form-urlencoded\")","<p>Generate a Form element as a string.\n<p><code>method</code> should be either “get” or “post”, and …\n",null,1],["form.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/utils/form_coffee.html","","<p>#= require ./dom\n<p>{ matches } = Rails\n<p>toArray = (e) -&gt; Array.prototype.slice.call(e)\n",null,0],["form_authenticity_param","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_param","()","<p>The form’s authenticity parameter. Override to provide your own.\n",null,0],["form_authenticity_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_token","(form_options: {})","<p>Creates the authenticity token for the current request.\n",null,0],["form_data=","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-form_data-3D","(params, sep = '&')","",null,1],["form_data?","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-form_data-3F","()","<p>Determine whether the request body contains form-data by checking the request <code>Content-Type</code> for one of …\n",null,0],["form_for","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-form_for","(record, options = {}, &block)","<p>Creates a form that allows the user to create or update the attributes of a specific model object.\n<p>The …\n",null,0],["form_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-form_tag","(url_for_options = {}, options = {}, &block)","<p>Starts a form tag that points the action to a URL configured with <code>url_for_options</code> just like ActionController::Base#url_for …\n",null,0],["form_with","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-form_with","(model: nil, scope: nil, url: nil, format: nil, **options, &block)","<p>Creates a form tag based on mixing URLs, scopes, or models.\n\n<pre><code># Using just a URL:\n&lt;%= form_with url: posts_path ...\n</code></pre>\n",null,0],["format","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format","(view_path = [])","<p>Returns the MIME type for the format used in the request.\n\n<pre><code>GET /posts/5.xml   | request.format =&gt; Mime[:xml] ...\n</code></pre>\n",null,0],["format","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-i-format","()","",null,0],["format","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-format","(format = nil, *args)","<p>Returns the contents of this Tms object as a formatted string, according to a <code>format</code> string like that …\n",null,1],["format","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-format","(*opts)","",null,1],["format","Kernel","ruby/classes/Kernel.html#method-i-format","(*args)","<p>Returns the string resulting from formatting <code>objects</code> into <code>format_string</code>.\n<p>For details on <code>format_string</code> …\n",null,1],["format","PrettyPrint","ruby/classes/PrettyPrint.html#method-c-format","(output=''.dup, maxwidth=79, newline=\"\\n\", genspace=lambda {|n| ' ' * n})","<p>This is a convenience method which is same as follows:\n\n<pre><code>begin\n  q = PrettyPrint.new(output, maxwidth, newline, ...\n</code></pre>\n",null,1],["format=","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format-3D","(extension)","<p>Sets the format by string extension, which can be used to force custom formats that are not controlled …\n",null,0],["format=","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-format-3D","(format)","<p>Sets the format of this comment and resets any parsed document\n",null,1],["format_from_path_extension","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format_from_path_extension","()","",null,0],["format_paragraph","ActionMailer::MailHelper","rails/classes/ActionMailer/MailHelper.html#method-i-format_paragraph","(text, len = 72, indent = 2)","<p>Returns <code>text</code> wrapped at <code>len</code> columns and indented <code>indent</code> spaces. By default column length <code>len</code> equals 72 …\n",null,0],["format_specifications","","ruby/files/ruby/doc/format_specifications_rdoc.html","","<p>Format Specifications\n<p>Several Ruby core classes have instance method <code>printf</code> or <code>sprintf</code>:\n<p>ARGF#printf\n",null,1],["format_text","Gem::Text","ruby/classes/Gem/Text.html#method-i-format_text","(text, wrap, indent=0)","<p>Wraps <code>text</code> to <code>wrap</code> characters and optionally indents by <code>indent</code> characters\n",null,1],["formats","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-formats","","<p>Returns the formats that can be processed by the controller.\n",null,0],["formats","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-formats","()","",null,0],["formats=","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-formats-3D","(extensions)","<p>Sets the formats by string extensions. This differs from #format= by allowing you to set multiple, ordered …\n",null,0],["formatted_offset","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns a formatted string of the offset from UTC, or an alternative string if the time zone is already …\n",null,0],["formatted_offset","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns a formatted string of the offset from UTC, or an alternative string if the time zone is already …\n",null,0],["formatted_offset","DateTime","rails/classes/DateTime.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns a formatted string of the offset from UTC, or an alternative string if the time zone is already …\n",null,0],["formatted_offset","Time","rails/classes/Time.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns a formatted string of the offset from UTC, or an alternative string if the time zone is already …\n",null,0],["formatted_program_filename","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-formatted_program_filename","(filename)","<p>Prefix and suffix the program filename the same as ruby.\n",null,1],["formatter","DidYouMean","ruby/classes/DidYouMean.html#method-c-formatter","()","<p>Returns the currently set formatter. By default, it is set to <code>DidYouMean::Formatter</code>.\n",null,1],["formatter","ErrorHighlight","ruby/classes/ErrorHighlight.html#method-c-formatter","()","",null,1],["formatter=","DidYouMean","ruby/classes/DidYouMean.html#method-c-formatter-3D","(formatter)","<p>Updates the primary formatter used to format the suggestions.\n",null,1],["formatter=","ErrorHighlight","ruby/classes/ErrorHighlight.html#method-c-formatter-3D","(formatter)","",null,1],["fortnight","Numeric","rails/classes/Numeric.html#method-i-fortnight","()","",null,0],["fortnights","Numeric","rails/classes/Numeric.html#method-i-fortnights","()","<p>Returns a Duration instance matching the number of fortnights provided.\n\n<pre><code>2.fortnights # =&gt; 4 weeks\n</code></pre>\n",null,0],["forty_two","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-forty_two","","<p>Same as #first except returns only the forty second record. Also known as accessing “the reddit”. …\n",null,0],["forty_two","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-forty_two","()","<p>Find the forty-second record. Also known as accessing “the reddit”. If no order is defined …\n",null,0],["forty_two","Array","rails/classes/Array.html#method-i-forty_two","()","<p>Equal to <code>self[41]</code>. Also known as accessing “the reddit”.\n\n<pre><code>(1..42).to_a.forty_two # =&gt; 42\n</code></pre>\n",null,0],["forty_two!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-forty_two-21","()","<p>Same as #forty_two but raises ActiveRecord::RecordNotFound if no record is found.\n",null,0],["forward_char","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-forward_char","(key, arg: 1)","",null,1],["forward_search_history","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-forward_search_history","(key)","",null,1],["forward_word","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-forward_word","(key)","",null,1],["fourth","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-fourth","","<p>Same as #first except returns only the fourth record.\n",null,0],["fourth","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-fourth","()","<p>Find the fourth record. If no order is defined it will order by primary key.\n\n<pre><code>Person.fourth # returns the ...\n</code></pre>\n",null,0],["fourth","Array","rails/classes/Array.html#method-i-fourth","()","<p>Equal to <code>self[3]</code>.\n\n<pre><code>%w( a b c d e ).fourth # =&gt; &quot;d&quot;\n</code></pre>\n",null,0],["fourth!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-fourth-21","()","<p>Same as #fourth but raises ActiveRecord::RecordNotFound if no record is found.\n",null,0],["frac","BigDecimal","ruby/classes/BigDecimal.html#method-i-frac","()","<p>Return the fractional part of the number, as a BigDecimal.\n",null,1],["fragment=","URI::Generic","ruby/classes/URI/Generic.html#method-i-fragment-3D","(v)","<p>Checks the fragment <code>v</code> component against the URI::Parser Regexp for :FRAGMENT.\n<p>Args\n<p><code>v</code> &mdash; String\n",null,1],["fragment_by_canonicalizing_attachment_galleries","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-c-fragment_by_canonicalizing_attachment_galleries","(content)","",null,0],["fragment_by_canonicalizing_attachments","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-c-fragment_by_canonicalizing_attachments","(content)","",null,0],["fragment_by_canonicalizing_content","ActionText::Content","rails/classes/ActionText/Content.html#method-c-fragment_by_canonicalizing_content","(content)","",null,0],["fragment_by_converting_trix_attachments","ActionText::Attachments::TrixConversion","rails/classes/ActionText/Attachments/TrixConversion.html#method-i-fragment_by_converting_trix_attachments","(content)","",null,0],["fragment_by_minifying_attachments","ActionText::Attachments::Minification","rails/classes/ActionText/Attachments/Minification.html#method-i-fragment_by_minifying_attachments","(content)","",null,0],["fragment_by_replacing_attachment_gallery_nodes","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-c-fragment_by_replacing_attachment_gallery_nodes","(content)","",null,0],["fragment_cache_key","AbstractController::Caching::Fragments::ClassMethods","rails/classes/AbstractController/Caching/Fragments/ClassMethods.html#method-i-fragment_cache_key","(value = nil, &key)","<p>Allows you to specify controller-wide key prefixes for cache fragments. Pass either a constant <code>value</code> …\n",null,0],["fragment_exist?","AbstractController::Caching::Fragments","rails/classes/AbstractController/Caching/Fragments.html#method-i-fragment_exist-3F","(key, options = nil)","<p>Check if a cached fragment from the location signified by <code>key</code> exists (see <code>expire_fragment</code> for acceptable …\n",null,0],["fragment_for_html","ActionText::HtmlConversion","rails/classes/ActionText/HtmlConversion.html#method-i-fragment_for_html","(html)","",null,0],["framework.rake","","rails/files/rails/railties/lib/rails/tasks/framework_rake.html","","<p># frozen_string_literal: true\n<p>namespace :app do\n\n<pre><code>desc &quot;Update configs and some other initially generated ...\n</code></pre>\n",null,0],["framework_trace","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-framework_trace","()","",null,0],["free","Fiddle","ruby/classes/Fiddle.html#method-c-free","(p1)","<p>Free the memory at address <code>addr</code>\n",null,1],["free","Fiddle::Closure","ruby/classes/Fiddle/Closure.html#method-i-free","()","<p>Free this closure explicitly. You can’t use this closure anymore.\n<p>If this closure is already freed, …\n",null,1],["free","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-free","()","<p>Get the free function for this pointer.\n<p>Returns a new instance of Fiddle::Function.\n<p>See Fiddle::Function.new …\n",null,1],["free","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-free","()","<p>If the buffer references memory, release it back to the operating system.\n<p>for a <em>mapped</em> buffer (e.g. from …\n",null,1],["free=","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-free-3D","(p1)","<p>Set the free function for this pointer to <code>function</code> in the given Fiddle::Function.\n",null,1],["freed?","Fiddle::Closure","ruby/classes/Fiddle/Closure.html#method-i-freed-3F","()","<p>Whether this closure was freed explicitly.\n",null,1],["freed?","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-freed-3F","()","<p>Returns if the free function for this pointer has been called.\n",null,1],["freeze","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-freeze","()","<p>Clone and freeze the attributes hash such that associations are still accessible, even on destroyed records, …\n",null,0],["freeze","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-freeze","()","",null,0],["freeze","Delegator","ruby/classes/Delegator.html#method-i-freeze","()","<p>:method: freeze Freeze both the object returned by _<em>getobj</em>_ and self.\n",null,1],["freeze","ENV","ruby/classes/ENV.html#method-c-freeze","()","<p>Raises an exception:\n\n<pre><code>ENV.freeze # Raises TypeError (cannot freeze ENV)\n</code></pre>\n",null,1],["freeze","Gem::Version","ruby/classes/Gem/Version.html#method-i-freeze","()","",null,1],["freeze","Module","ruby/classes/Module.html#method-i-freeze","()","<p>Prevents further modifications to <em>mod</em>.\n<p>This method returns self.\n",null,1],["freeze","Object","ruby/classes/Object.html#method-i-freeze","()","<p>Prevents further modifications to <em>obj</em>. A FrozenError will be raised if modification is attempted. There …\n",null,1],["freeze","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-freeze","()","<p>This method is called automatically when a new SSLSocket is created. However, it is not thread-safe and …\n",null,1],["freeze","OpenStruct","ruby/classes/OpenStruct.html#method-i-freeze","()","",null,1],["freeze","Pathname","ruby/classes/Pathname.html#method-i-freeze","()","<p>Freezes this Pathname.\n<p>See Object.freeze.\n",null,1],["freeze","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-freeze","()","<p>The queue can’t be frozen, so this method raises an exception:\n\n<pre><code>Thread::Queue.new.freeze # Raises TypeError ...\n</code></pre>\n",null,1],["freeze","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-freeze","()","<p>The queue can’t be frozen, so this method raises an exception:\n\n<pre><code>Thread::Queue.new.freeze # Raises TypeError ...\n</code></pre>\n",null,1],["fresh?","ActionDispatch::Http::Cache::Request","rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-fresh-3F","(response)","<p>Check response freshness (<code>Last-Modified</code> and ETag) against request <code>If-Modified-Since</code> and <code>If-None-Match</code> …\n",null,0],["fresh_when","ActionController::ConditionalGet","rails/classes/ActionController/ConditionalGet.html#method-i-fresh_when","(object = nil, etag: nil, weak_etag: nil, strong_etag: nil, last_modified: nil, public: false, cache_control: {}, template: nil)","<p>Sets the <code>etag</code>, <code>last_modified</code>, or both on the response, and renders a <code>304 Not Modified</code> response if the …\n",null,0],["frexp","Math","ruby/classes/Math.html#method-c-frexp","(p1)","<p>Returns a 2-element array containing the normalized signed float <code>fraction</code> and integer <code>exponent</code> of <code>x</code> such …\n",null,1],["friday?","Date","ruby/classes/Date.html#method-i-friday-3F","()","<p>Returns <code>true</code> if <code>self</code> is a Friday, <code>false</code> otherwise.\n",null,1],["friday?","Time","ruby/classes/Time.html#method-i-friday-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a Friday, <code>false</code> otherwise:\n\n<pre><code>t = Time.utc(2000, 1, 7) # =&gt; 2000-01-07 00:00:00 ...\n</code></pre>\n",null,1],["friendly_path","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-friendly_path","()","<p>Friendly rendition of #path\n",null,1],["from","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-from","(value, subquery_name = nil)","<p>Specifies the table from which the records will be fetched. For example:\n\n<pre><code>Topic.select(&#39;title&#39;).from(&#39;posts&#39;) ...\n</code></pre>\n",null,0],["from","Array","rails/classes/Array.html#method-i-from","(position)","<p>Returns the tail of the array from <code>position</code>.\n\n<pre><code>%w( a b c d ).from(0)  # =&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]\n%w( a b ...\n</code></pre>\n",null,0],["from","String","rails/classes/String.html#method-i-from","(position)","<p>Returns a substring from the given position to the end of the string. If the position is negative, it …\n",null,0],["from","Gem::Package::TarHeader","ruby/classes/Gem/Package/TarHeader.html#method-c-from","(stream)","<p>Creates a tar header from IO <code>stream</code>\n",null,1],["from","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-c-from","(ary)","<p>Creates a new SourceList from an array of sources.\n",null,1],["from_address","Mail::Message","rails/classes/Mail/Message.html#method-i-from_address","()","",null,0],["from_attachable","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-c-from_attachable","(attachable, attributes = {})","",null,0],["from_attachable_sgid","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-from_attachable_sgid","(sgid)","",null,0],["from_attachable_sgid","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-c-from_attachable_sgid","(sgid, options = {})","",null,0],["from_attachables","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-c-from_attachables","(attachables)","",null,0],["from_attributes","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-c-from_attributes","(attributes, attachable = nil)","",null,0],["from_attributes","ActionText::TrixAttachment","rails/classes/ActionText/TrixAttachment.html#method-c-from_attributes","(attributes)","",null,0],["from_file","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-c-from_file","(file)","",null,1],["from_hash","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-c-from_hash","(hash)","",null,0],["from_hash","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-c-from_hash","(object)","",null,1],["from_html","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-c-from_html","(html)","",null,0],["from_json","ActiveModel::Serializers::JSON","rails/classes/ActiveModel/Serializers/JSON.html#method-i-from_json","(json, include_root = include_root_in_json)","<p>Sets the model <code>attributes</code> from a JSON string. Returns <code>self</code>.\n\n<pre><code>class Person\n  include ActiveModel::Serializers::JSON ...\n</code></pre>\n",null,0],["from_list","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-c-from_list","(list)","<p>Turn an array of [name, version, platform] into an array of NameTuple objects.\n",null,1],["from_module","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-c-from_module","(class_type, mod)","<p>Return a RDoc::ClassModule of class <code>class_type</code> that is a copy of module <code>module</code>. Used to promote modules …\n",null,1],["from_name","Process::GID","ruby/classes/Process/GID.html#method-c-from_name","(p1)","<p>Get the group ID by the <em>name</em>. If the group is not found, <code>ArgumentError</code> will be raised.\n\n<pre><code>Process::GID.from_name(&quot;wheel&quot;) ...\n</code></pre>\n",null,1],["from_name","Process::UID","ruby/classes/Process/UID.html#method-c-from_name","(p1)","<p>Get the user ID by the <em>name</em>. If the user is not found, <code>ArgumentError</code> will be raised.\n\n<pre><code>Process::UID.from_name(&quot;root&quot;) ...\n</code></pre>\n",null,1],["from_node","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-c-from_node","(node)","",null,0],["from_node","ActionText::Attachables::ContentAttachment","rails/classes/ActionText/Attachables/ContentAttachment.html#method-c-from_node","(node)","",null,0],["from_node","ActionText::Attachables::RemoteImage","rails/classes/ActionText/Attachables/RemoteImage.html#method-c-from_node","(node)","",null,0],["from_node","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-c-from_node","(node, attachable = nil)","",null,0],["from_node","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-c-from_node","(node)","",null,0],["from_now","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-from_now","(time = ::Time.current)","",null,0],["from_rails_root","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-from_rails_root","(string)","",null,0],["from_source","Mail","rails/classes/Mail.html#method-c-from_source","(source)","",null,0],["from_source","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-c-from_source","(source, lines: nil)","<p>Returns an array of CodeLine objects from the source string\n",null,1],["from_specs","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-c-from_specs","()","<p>Creates a DependencyList from the current specs.\n",null,1],["from_state","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-c-from_state","(p1)","<p>Creates a State object from <em>opts</em>, which ought to be Hash to create a new State instance configured by …\n",null,1],["from_trix_attachment","ActionText::Attachments::TrixConversion","rails/classes/ActionText/Attachments/TrixConversion.html#method-i-from_trix_attachment","(trix_attachment)","",null,0],["from_trusted_xml","Hash","rails/classes/Hash.html#method-c-from_trusted_xml","(xml)","<p>Builds a Hash from XML just like <code>Hash.from_xml</code>, but also allows Symbol and YAML.\n",null,0],["from_xml","Hash","rails/classes/Hash.html#method-c-from_xml","(xml, disallowed_types = nil)","<p>Returns a Hash containing a collection of pairs when the key is the node name and the value is its content …\n",null,0],["from_yaml","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-from_yaml","(input)","<p>Special loader for YAML files.  When a Specification object is loaded from a YAML file, it bypasses the …\n",null,1],["front","DRb","ruby/classes/DRb.html#method-c-front","()","<p>Get the front object of the current server.\n<p>This raises a DRbServerNotFound error if there is no current …\n",null,1],["front","DRb::ExtServ","ruby/classes/DRb/ExtServ.html#method-i-front","()","",null,1],["frozen?","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-frozen-3F","()","<p>Returns <code>true</code> if the attributes hash has been frozen.\n",null,0],["frozen?","Kernel","ruby/classes/Kernel.html#method-i-frozen-3F","()","<p>Returns the freeze status of <em>obj</em>.\n\n<pre><code>a = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ]\na.freeze    #=&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]\na.frozen?   #=&gt; ...\n</code></pre>\n",null,1],["frozen_bundle?","Bundler","ruby/classes/Bundler.html#method-c-frozen_bundle-3F","()","",null,1],["fsm.css","","rails/files/rails/actionpack/lib/action_dispatch/journey/visualizer/fsm_css.html","","<p>body {\n\n<pre><code>font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, Sans-Serif;\nmargin: 0;\n</code></pre>\n<p>}\n",null,0],["fsm.js","","rails/files/rails/actionpack/lib/action_dispatch/journey/visualizer/fsm_js.html","","<p>function tokenize(input, callback) {\n\n<pre><code>while(input.length &gt; 0) {\n  callback(input.match(/^[\\/\\.\\?]|[^\\/\\.\\?]+/)[0]); ...\n</code></pre>\n",null,0],["fsync","IO","ruby/classes/IO.html#method-i-fsync","()","<p>Immediately writes to disk all data buffered in the stream, via the operating system’s <code>fsync(2)</code>. …\n",null,1],["fsync","StringIO","ruby/classes/StringIO.html#method-i-fsync","()","<p>Returns 0.  Just for compatibility to IO.\n",null,1],["ftype","File","ruby/classes/File.html#method-c-ftype","(p1)","<p>Identifies the type of the named file; the return string is one of “<code>file</code>”, “<code>directory</code>”, …\n",null,1],["ftype","File::Stat","ruby/classes/File/Stat.html#method-i-ftype","()","<p>Identifies the type of <em>stat</em>. The return string is one of: “<code>file</code>”, “<code>directory</code>”, “ …\n",null,1],["ftype","Pathname","ruby/classes/Pathname.html#method-i-ftype","()","<p>Returns “type” of file (“file”, “directory”, etc).\n<p>See File.ftype.\n",null,1],["full_attributes","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-i-full_attributes","()","",null,0],["full_commit!","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-full_commit-21","()","",null,0],["full_gem_path","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-full_gem_path","()","<p>The full path to the gem (install path + full name).\n",null,1],["full_message","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-i-full_message","()","<p>Returns the full error message.\n\n<pre><code>error = ActiveModel::Error.new(person, :name, :too_short, count: 5)\nerror.full_message ...\n</code></pre>\n",null,0],["full_message","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-full_message","(attribute, message)","<p>Returns a full message for a given attribute.\n\n<pre><code>person.errors.full_message(:name, &#39;is invalid&#39;) # =&gt; &quot;Name ...\n</code></pre>\n",null,0],["full_message","Exception","ruby/classes/Exception.html#method-i-full_message","(p1 = {})","<p>Returns formatted string of <em>exception</em>. The returned string is formatted using the same format that Ruby …\n",null,1],["full_messages","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-full_messages","()","<p>Returns all the full error messages in an array.\n\n<pre><code>class Person\n  validates_presence_of :name, :address, ...\n</code></pre>\n",null,0],["full_messages_for","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-full_messages_for","(attribute)","<p>Returns all the full error messages for a given attribute in an array.\n\n<pre><code>class Person\n  validates_presence_of ...\n</code></pre>\n",null,0],["full_name","DidYouMean::ClassNameChecker::ClassName","ruby/classes/DidYouMean/ClassNameChecker/ClassName.html#method-i-full_name","()","",null,1],["full_name","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-full_name","()","<p>Returns the full name (name-version) of this Gem.  Platform information is included (name-version-platform) …\n",null,1],["full_name","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-full_name","()","<p>Returns the full name (name-version) of this Gem.  Platform information is included if it is not the …\n",null,1],["full_name","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-full_name","()","<p>Full name of the tar entry\n",null,1],["full_name","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-full_name","()","<p>The full name of the specification to be activated.\n",null,1],["full_name","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-full_name","()","<p>The name and version of the specification.\n<p>Unlike Gem::Specification#full_name, the platform is not included. …\n",null,1],["full_name","Gem::Resolver::Specification","ruby/classes/Gem/Resolver/Specification.html#method-i-full_name","()","<p>The name and version of the specification.\n<p>Unlike Gem::Specification#full_name, the platform is not included. …\n",null,1],["full_name","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-full_name","()","",null,1],["full_name","Prism::ConstantPathNode","ruby/classes/Prism/ConstantPathNode.html#method-i-full_name","()","<p>Returns the full name of this constant path. For example: “Foo::Bar”\n",null,1],["full_name","Prism::ConstantPathTargetNode","ruby/classes/Prism/ConstantPathTargetNode.html#method-i-full_name","()","<p>Returns the full name of this constant path. For example: “Foo::Bar”\n",null,1],["full_name","Prism::ConstantReadNode","ruby/classes/Prism/ConstantReadNode.html#method-i-full_name","()","<p>Returns the full name of this constant. For example: “Foo”\n",null,1],["full_name","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-full_name","()","<p>Return the fully qualified name of this class or module\n",null,1],["full_name","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-full_name","()","<p>Full constant name including namespace\n",null,1],["full_name","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-full_name","()","<p>The full name for this context.  This method is overridden by subclasses.\n",null,1],["full_name","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-full_name","()","<p>Full method/attribute name including namespace\n",null,1],["full_name","RDoc::Mixin","ruby/classes/RDoc/Mixin.html#method-i-full_name","()","<p>Full name based on #module\n",null,1],["full_name","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-full_name","()","<p>Returns the relative name of this file\n",null,1],["full_name=","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-full_name-3D","(full_name)","<p>Sets the full_name overriding any computed full name.\n<p>Set to <code>nil</code> to clear RDoc’s cached value\n",null,1],["full_name_parts","Prism::ConstantPathNode","ruby/classes/Prism/ConstantPathNode.html#method-i-full_name_parts","()","<p>Returns the list of parts for the full name of this constant path. For example: [:Foo, :Bar]\n",null,1],["full_name_parts","Prism::ConstantPathTargetNode","ruby/classes/Prism/ConstantPathTargetNode.html#method-i-full_name_parts","()","<p>Returns the list of parts for the full name of this constant path. For example: [:Foo, :Bar]\n",null,1],["full_name_parts","Prism::ConstantReadNode","ruby/classes/Prism/ConstantReadNode.html#method-i-full_name_parts","()","<p>Returns the list of parts for the full name of this constant. For example: [:Foo]\n",null,1],["full_old_name","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-full_old_name","()","<p>Full old name including namespace\n",null,1],["full_require_paths","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-full_require_paths","()","<p>Full paths in the gem to add to <code>$LOAD_PATH</code> when this gem is activated.\n",null,1],["full_rollback!","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-full_rollback-21","()","",null,0],["full_rollback?","ActiveRecord::ConnectionAdapters::SavepointTransaction","rails/classes/ActiveRecord/ConnectionAdapters/SavepointTransaction.html#method-i-full_rollback-3F","()","",null,0],["full_spec","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-full_spec","()","<p>The Gem::Specification for this activation request.\n",null,1],["full_trace","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-full_trace","()","",null,0],["full_url_for","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-c-full_url_for","(options)","",null,0],["fullpath","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-fullpath","()","<p>Returns the <code>String</code> full path including params of the last URL requested.\n\n<pre><code># get &quot;/articles&quot;\nrequest.fullpath ...\n</code></pre>\n",null,0],["fully_committed?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-fully_committed-3F","()","",null,0],["fully_completed?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-fully_completed-3F","()","",null,0],["fully_documented?","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-fully_documented-3F","()","<p>Does this context and its methods and constants all have documentation?\n<p>(Yes, fully documented doesn’t …\n",null,1],["fully_documented?","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-fully_documented-3F","()","<p>The documentation status of this project.  <code>true</code> when 100%, <code>false</code> when less than 100% and <code>nil</code> when unknown. …\n",null,1],["fully_rolledback?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-fully_rolledback-3F","()","",null,0],["future?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-future-3F","()","<p>Returns true if the current object’s time is in the future.\n",null,0],["future?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-future-3F","()","<p>Returns true if the date/time is in the future.\n",null,0],["gallery_attachments","ActionText::Content","rails/classes/ActionText/Content.html#method-i-gallery_attachments","()","",null,0],["gamma","Math","ruby/classes/Math.html#method-c-gamma","(p1)","<p>Returns the value of the gamma function for <code>x</code>.\n<p>Domain: <code>(-INFINITY, INFINITY]</code> excluding negative integers. …\n",null,1],["garbage_collect","GC","ruby/classes/GC.html#method-i-garbage_collect","(full_mark: true, immediate_mark: true, immediate_sweep: true)","<p>Alias of GC.start\n",null,1],["garbage_collect","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-garbage_collect","(full_mark: true, immediate_mark: true, immediate_sweep: true)","<p>Alias of GC.start\n",null,1],["gather_files","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-gather_files","(files)","<p>Gathers a set of parseable files from the files and directories listed in <code>files</code>.\n",null,1],["gcd","Integer","ruby/classes/Integer.html#method-i-gcd","(p1)","<p>Returns the greatest common divisor of the two integers. The result is always positive. 0.gcd(x) and …\n",null,1],["gcd","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-gcd","(p1)","",null,1],["gcdlcm","Integer","ruby/classes/Integer.html#method-i-gcdlcm","(p1)","<p>Returns an array with the greatest common divisor and the least common multiple of the two integers, …\n",null,1],["gem","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-gem","(*args)","<p>Adds a <code>gem</code> declaration to the <code>Gemfile</code> for the specified gem.\n\n<pre><code>gem &quot;rspec&quot;, group: :test\ngem &quot;technoweenie-restful-authentication&quot;, ...\n</code></pre>\n",null,0],["gem","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-gem","()","<p>Filename of the gem being installed.\n",null,1],["gem","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-gem","(name, *reqs)","<p>Declare that a gem of name <code>name</code> with <code>reqs</code> requirements is needed.\n",null,1],["gem","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-gem","(name, *requirements)","<p>Specifies a gem dependency with the given <code>name</code> and <code>requirements</code>.  You may also supply <code>options</code> following …\n",null,1],["gem","Kernel","ruby/classes/Kernel.html#method-i-gem","(gem_name, *requirements)","<p>Use Kernel#gem to activate a specific version of <code>gem_name</code>.\n<p><code>requirements</code> is a list of version requirements …\n",null,1],["gem_contents","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-gem_contents","(name)","",null,1],["gem_dir","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-gem_dir","()","<p>Returns the full path to this spec’s gem directory. eg: /usr/local/lib/ruby/1.8/gems/mygem-1.0\n",null,1],["gem_dir","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-gem_dir","()","<p>Lazy accessor for the spec’s gem directory.\n",null,1],["gem_group","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-gem_group","(*names, &block)","<p>Wraps gem entries inside a group.\n\n<pre><code>gem_group :development, :test do\n  gem &quot;rspec-rails&quot;\nend\n</code></pre>\n",null,0],["gem_install_dir","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-gem_install_dir","(name)","",null,1],["gem_repository?","Gem::Doctor","ruby/classes/Gem/Doctor.html#method-i-gem_repository-3F","()","<p>Are we doctoring a gem repository?\n",null,1],["gem_version","ActionCable","rails/classes/ActionCable.html#method-c-gem_version","()","<p>Returns the currently loaded version of Action Cable as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActionMailbox","rails/classes/ActionMailbox.html#method-c-gem_version","()","<p>Returns the currently loaded version of Action Mailbox as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActionMailer","rails/classes/ActionMailer.html#method-c-gem_version","()","<p>Returns the currently loaded version of Action Mailer as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActionPack","rails/classes/ActionPack.html#method-c-gem_version","()","<p>Returns the currently loaded version of Action Pack as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActionText","rails/classes/ActionText.html#method-c-gem_version","()","<p>Returns the currently loaded version of Action Text as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActionView","rails/classes/ActionView.html#method-c-gem_version","()","<p>Returns the currently loaded version of Action View as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActiveJob","rails/classes/ActiveJob.html#method-c-gem_version","()","<p>Returns the currently loaded version of Active Job as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActiveModel","rails/classes/ActiveModel.html#method-c-gem_version","()","<p>Returns the currently loaded version of Active Model as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActiveRecord","rails/classes/ActiveRecord.html#method-c-gem_version","()","<p>Returns the currently loaded version of Active Record as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActiveStorage","rails/classes/ActiveStorage.html#method-c-gem_version","()","<p>Returns the currently loaded version of Active Storage as a <code>Gem::Version</code>.\n",null,0],["gem_version","ActiveSupport","rails/classes/ActiveSupport.html#method-c-gem_version","()","<p>Returns the currently loaded version of Active Support as a <code>Gem::Version</code>.\n",null,0],["gem_version","Rails","rails/classes/Rails.html#method-c-gem_version","()","<p>Returns the currently loaded version of Rails as a <code>Gem::Version</code>.\n",null,0],["gemdeps_load","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-gemdeps_load","(name)","",null,1],["gemfile","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-gemfile","()","",null,0],["gemfile","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-gemfile","()","",null,0],["gemfile_entry","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-gemfile_entry","()","",null,0],["gems_dir","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-gems_dir","()","<p>Returns the full path to the gems directory containing this spec’s gem directory. eg: /usr/local/lib/ruby/1.8/gems …\n",null,1],["gems_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-gems_dir","()","",null,1],["gemspec","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-gemspec","()","",null,0],["gemspec","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-gemspec","(options = {})","<p>Loads dependencies from a gemspec file.\n<p><code>options</code> include:\n<p>name:  &mdash; The name portion of the gemspec file.  …\n",null,1],["gen_body_table","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-gen_body_table","(file_content)","<p>Generate a Ruby-method table\n",null,1],["gen_const_table","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-gen_const_table","(file_content)","<p>Generate a const table\n",null,1],["gen_time","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-gen_time","()","<p>Returns time when this timestamp token was created. If status is GRANTED or GRANTED_WITH_MODS, this is …\n",null,1],["generate","ActiveSupport::MessageVerifier","rails/classes/ActiveSupport/MessageVerifier.html#method-i-generate","(value, expires_at: nil, expires_in: nil, purpose: nil)","<p>Generates a signed message for the provided value.\n<p>The message is signed with the <code>MessageVerifier</code>‘s …\n",null,0],["generate","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-generate","(what, *args)","<p>Runs another generator.\n\n<pre><code>generate &quot;scaffold&quot;, &quot;Post title:string body:text&quot;\ngenerate &quot;scaffold&quot;, &quot;Post&quot;, ...\n</code></pre>\n",null,0],["generate","CSV","ruby/classes/CSV.html#method-c-generate","(str=nil, **options)","<p>Argument <code>csv_string</code>, if given, must be a String object; defaults to a new empty String.\n<p>Arguments <code>options</code> …\n\n",null,1],["generate","JSON","ruby/classes/JSON.html#method-i-generate","(obj, opts = nil)","<p>Returns a String containing the generated JSON data.\n<p>See also JSON.fast_generate, JSON.pretty_generate …\n",null,1],["generate","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-generate","(p1)","<p>Generates a valid JSON document from object <code>obj</code> and returns the result. If no valid JSON document can …\n",null,1],["generate","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-c-generate","(size, generator = 2, &blk)","<p>Creates a new DH instance from scratch by generating random parameters and a key pair.\n<p>See also OpenSSL::PKey.generate_parameters …\n",null,1],["generate","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-c-generate","(size, &blk)","<p>Creates a new DSA instance by generating a private/public key pair from scratch.\n<p>See also OpenSSL::PKey.generate_parameters …\n",null,1],["generate","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-c-generate","(p1)","<p>Creates a new EC instance with a new random private and public key.\n",null,1],["generate","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-c-generate","(size, exp = 0x10001, &blk)","<p>Generates an RSA keypair.\n<p>See also OpenSSL::PKey.generate_key.\n<p><code>size</code> &mdash; The desired key size in bits.\n",null,1],["generate","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-generate","()","<p>Generates documentation for <code>file_info</code> (from #parse_files) into the output dir using the generator selected …\n",null,1],["generate","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-generate","()","<p>Generates RDoc and ri data\n",null,1],["generate","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-generate","()","<p>Generates RDoc and ri data\n",null,1],["generate_bin_script","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-generate_bin_script","(filename, bindir)","<p>Creates the scripts to run the applications in the gem.\n",null,1],["generate_bin_symlink","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-generate_bin_symlink","(filename, bindir)","<p>Creates the symlinks to run the applications in the gem.  Moves the symlink if the gem being installed …\n",null,1],["generate_default_dirs","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-generate_default_dirs","()","",null,1],["generate_default_man_dir","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-generate_default_man_dir","()","",null,1],["generate_key","ActiveSupport::CachingKeyGenerator","rails/classes/ActiveSupport/CachingKeyGenerator.html#method-i-generate_key","(*args)","<p>Returns a derived key suitable for use.\n",null,0],["generate_key","ActiveSupport::EncryptedFile","rails/classes/ActiveSupport/EncryptedFile.html#method-c-generate_key","()","",null,0],["generate_key","ActiveSupport::KeyGenerator","rails/classes/ActiveSupport/KeyGenerator.html#method-i-generate_key","(salt, key_size = 64)","<p>Returns a derived key suitable for use.  The default <code>key_size</code> is chosen to be compatible with the default …\n",null,0],["generate_key","OpenSSL::PKey","ruby/classes/OpenSSL/PKey.html#method-c-generate_key","(*args)","<p>Generates a new key (pair).\n<p>If a String is given as the first argument, it generates a new random key …\n",null,1],["generate_key","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-generate_key","()","<p>Generates a new random private and public key.\n<p>See also the OpenSSL documentation for EC_KEY_generate_key …\n",null,1],["generate_key!","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-generate_key-21","()","<p>Generates a private and public key unless a private key already exists. If this DH instance was generated …\n",null,1],["generate_key!","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-generate_key-21","()","<p>Generates a new random private and public key.\n<p>See also the OpenSSL documentation for EC_KEY_generate_key …\n",null,1],["generate_layout","Rails::Generators::BenchmarkGenerator","rails/classes/Rails/Generators/BenchmarkGenerator.html#method-i-generate_layout","()","",null,0],["generate_line","CSV","ruby/classes/CSV.html#method-c-generate_line","(row, **options)","<p>Returns the String created by generating CSV from <code>ary</code> using the specified <code>options</code>.\n<p>Argument <code>ary</code> must be …\n",null,1],["generate_lines","CSV","ruby/classes/CSV.html#method-c-generate_lines","(rows, **options)","<p>Returns the String created by generating CSV from using the specified <code>options</code>.\n<p>Argument <code>rows</code> must be an …\n",null,1],["generate_message","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-generate_message","(attribute, type = :invalid, options = {})","<p>Translates an error message in its default scope (<code>activemodel.errors.messages</code>).\n<p>Error messages are first …\n",null,0],["generate_method_for_mime","AbstractController::Collector","rails/classes/AbstractController/Collector.html#method-c-generate_method_for_mime","(mime)","",null,0],["generate_missing_message_id","ActionMailbox::InboundEmail::MessageId","rails/classes/ActionMailbox/InboundEmail/MessageId.html#method-i-generate_missing_message_id","(message_checksum)","",null,0],["generate_parameters","OpenSSL::PKey","ruby/classes/OpenSSL/PKey.html#method-c-generate_parameters","(*args)","<p>Generates new parameters for the algorithm. <em>algo_name</em> is a String that represents the algorithm. The …\n",null,1],["generate_prime","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-c-generate_prime","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Generates a random prime number of bit length <em>bits</em>. If <em>safe</em> is set to <code>true</code>, generates a safe prime.  …\n",null,1],["generate_random_hex_key","ActiveRecord::Encryption::KeyGenerator","rails/classes/ActiveRecord/Encryption/KeyGenerator.html#method-i-generate_random_hex_key","(length: key_length)","<p>Returns a random key in hexadecimal format. The key will have a size in bytes of <code>:length</code> (configured …\n",null,0],["generate_random_key","ActiveRecord::Encryption::KeyGenerator","rails/classes/ActiveRecord/Encryption/KeyGenerator.html#method-i-generate_random_key","(length: key_length)","<p>Returns a random key. The key will have a size in bytes of <code>:length</code> (configured <code>Cipher</code>‘s length by …\n",null,0],["generate_sid","ActionDispatch::Session::AbstractSecureStore","rails/classes/ActionDispatch/Session/AbstractSecureStore.html#method-i-generate_sid","()","",null,0],["generate_sid","ActionDispatch::Session::Compatibility","rails/classes/ActionDispatch/Session/Compatibility.html#method-i-generate_sid","()","",null,0],["generate_test_dummy","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-generate_test_dummy","(force = false)","",null,0],["generate_unique_secure_token","ActiveRecord::SecureToken::ClassMethods","rails/classes/ActiveRecord/SecureToken/ClassMethods.html#method-i-generate_unique_secure_token","(length: MINIMUM_TOKEN_LENGTH)","",null,0],["generate_unique_secure_token","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-c-generate_unique_secure_token","(length: MINIMUM_TOKEN_LENGTH)","<p>To prevent problems with case-insensitive filesystems, especially in combination with databases which …\n",null,0],["generate_windows_script","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-generate_windows_script","(filename, bindir)","<p>Creates windows .bat files for easy running of commands\n",null,1],["generation_hook","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-c-generation_hook","(installer, specs)","<p>Post installs hook that generates documentation for each specification in <code>specs</code>\n",null,1],["generation_hook","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-c-generation_hook","(installer, specs)","<p>Post installs hook that generates documentation for each specification in <code>specs</code>\n",null,1],["generator","Rails::Engine::Updater","rails/classes/Rails/Engine/Updater.html#method-c-generator","()","",null,0],["generator","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-generator","()","<p>Returns the generator of the group.\n<p>See the OpenSSL documentation for EC_GROUP_get0_generator()\n",null,1],["generator_descriptions","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-generator_descriptions","()","<p>Returns a properly-space list of generators and their descriptions.\n",null,1],["generator_for","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-generator_for","(store)","<p>Instantiates a Darkfish generator for <code>store</code>\n",null,1],["generator_name","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-generator_name","()","<p>Removes the namespaces and get the generator name. For example, Rails::Generators::ModelGenerator will …\n",null,0],["generators","Rails::Application","rails/classes/Rails/Application.html#method-i-generators","(&blk)","<p>Sends any generators called in the instance of a new application up to the <code>generators</code> method defined …\n",null,0],["generators","Rails::Engine::Configuration","rails/classes/Rails/Engine/Configuration.html#method-i-generators","()","<p>Holds generators configuration:\n\n<pre><code>config.generators do |g|\n  g.orm             :data_mapper, migration: ...\n</code></pre>\n",null,0],["generators","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-generators","(&blk)","",null,0],["get","ActionDispatch::Routing::Mapper::HttpHelpers","rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-get","(*args, &block)","<p>Define a route that only recognizes HTTP GET. For supported arguments, see match\n\n<pre><code>get &#39;bacon&#39;, to: &#39;food#bacon&#39;\n</code></pre>\n",null,0],["get","GetoptLong","ruby/classes/GetoptLong.html#method-i-get","()","<p>Returns the next option as a 2-element array containing:\n<p>The option name (the name itself, not an alias). …\n",null,1],["get","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-get","(uri_or_host, path_or_headers = nil, port = nil)","<p>Sends a GET request and returns the HTTP response body as a string.\n<p>With string arguments <code>hostname</code> and …\n",null,1],["get","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-get","(path, initheader = nil, dest = nil)","<p>Sends a GET request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["get2","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-get2","(path, initheader = nil)","",null,1],["get_all_gem_names","Gem::Command","ruby/classes/Gem/Command.html#method-i-get_all_gem_names","()","<p>Get all gem names from the command line.\n",null,1],["get_all_gem_names_and_versions","Gem::Command","ruby/classes/Gem/Command.html#method-i-get_all_gem_names_and_versions","()","<p>Get all [gem, version] from the command line.\n<p>An argument in the form gem:ver is pull apart into the gen …\n",null,1],["get_bool","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-get_bool","()","<p>Looks for a true or false token.\n",null,1],["get_byte","StringScanner","ruby/classes/StringScanner.html#method-i-get_byte","()","<p>Scans one byte and returns it. This method is not multibyte character sensitive. See also: #getch.\n\n<pre><code>s = ...\n</code></pre>\n",null,1],["get_candidate_gems","Gem::Commands::CleanupCommand","ruby/classes/Gem/Commands/CleanupCommand.html#method-i-get_candidate_gems","()","",null,1],["get_candidates","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-get_candidates","(id)","",null,1],["get_cert_files","Gem::Request","ruby/classes/Gem/Request.html#method-c-get_cert_files","()","",null,1],["get_class_or_module","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-get_class_or_module","(container, ignore_constants = false)","<p>Look for the name of a class of module (optionally with a leading  &mdash; or\n<p>with  &mdash; separated named) and return …\n\n",null,1],["get_class_specification","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-get_class_specification","()","<p>Return a superclass, which can be either a constant of an expression\n",null,1],["get_console_screen_buffer_info","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-get_console_screen_buffer_info","()","",null,1],["get_constant","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-get_constant","()","<p>Parse a constant, which might be qualified by one or more class or module names\n",null,1],["get_dns_server_list","Resolv","ruby/classes/Resolv.html#method-c-get_dns_server_list","()","",null,1],["get_env_editor","Gem::Commands::OpenCommand","ruby/classes/Gem/Commands/OpenCommand.html#method-i-get_env_editor","()","",null,1],["get_fields","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-get_fields","(key)","<p>Returns the array field value for the given <code>key</code>, or <code>nil</code> if there is no such field; see Fields:\n\n<pre><code>res = Net::HTTP.get_response(hostname, ...\n</code></pre>\n",null,1],["get_flags","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-get_flags","(p1)","<p>Returns the flags on the BN object. The argument is used as a bit mask.\n<p>Parameters\n<p><em>flags</em> - integer\n",null,1],["get_gems_to_cleanup","Gem::Commands::CleanupCommand","ruby/classes/Gem/Commands/CleanupCommand.html#method-i-get_gems_to_cleanup","()","",null,1],["get_header","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-get_header","(key)","",null,0],["get_hosts_dir","Resolv","ruby/classes/Resolv.html#method-c-get_hosts_dir","()","",null,1],["get_hosts_path","Resolv","ruby/classes/Resolv.html#method-c-get_hosts_path","()","",null,1],["get_included_module_with_optional_parens","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-get_included_module_with_optional_parens","()","<p>Get an included module that may be surrounded by parens\n",null,1],["get_info","Resolv","ruby/classes/Resolv.html#method-c-get_info","()","",null,1],["get_initial_token","Win32::SSPI::NegotiateAuth","ruby/classes/Win32/SSPI/NegotiateAuth.html#method-i-get_initial_token","()","<p>Gets the initial Negotiate token. Returns it as a base64 encoded string suitable for use in HTTP. Can …\n",null,1],["get_mbchar_width","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-get_mbchar_width","(mbchar)","",null,1],["get_method","Reline::KeyActor::Base","ruby/classes/Reline/KeyActor/Base.html#method-i-get_method","(key)","",null,1],["get_next_mbchar_size","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-get_next_mbchar_size","(line, byte_pointer)","",null,1],["get_one_gem_name","Gem::Command","ruby/classes/Gem/Command.html#method-i-get_one_gem_name","()","<p>Get a single gem name from the command line.  Fail if there is no gem name or if there is more than one …\n",null,1],["get_one_optional_argument","Gem::Command","ruby/classes/Gem/Command.html#method-i-get_one_optional_argument","()","<p>Get a single optional argument from the command line.  If more than one argument is given, return only …\n",null,1],["get_option","GetoptLong","ruby/classes/GetoptLong.html#method-i-get_option","()","",null,1],["get_path","Gem::Commands::UnpackCommand","ruby/classes/Gem/Commands/UnpackCommand.html#method-i-get_path","(dependency)","<p>Return the full path to the cached gem file matching the given name and version requirement.  Returns …\n",null,1],["get_platform_from_requirements","Gem::VersionOption","ruby/classes/Gem/VersionOption.html#method-i-get_platform_from_requirements","(requirements)","<p>Extract platform given on the command line\n",null,1],["get_prev_mbchar_size","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-get_prev_mbchar_size","(line, byte_pointer)","",null,1],["get_primary_gems","Gem::Commands::CleanupCommand","ruby/classes/Gem/Commands/CleanupCommand.html#method-i-get_primary_gems","()","",null,1],["get_print","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-get_print","(uri_or_host, path_or_headers = nil, port = nil)","<p>Like Net::HTTP.get, but writes the returned body to $stdout; returns <code>nil</code>.\n",null,1],["get_proxy_from_env","Gem::Request","ruby/classes/Gem/Request.html#method-c-get_proxy_from_env","(scheme = \"http\")","<p>Returns a proxy URI for the given <code>scheme</code> if one is set in the environment variables.\n",null,1],["get_public_key","Gem::Security","ruby/classes/Gem/Security.html#method-c-get_public_key","(key)","<p>Gets the right public key from a PKey instance\n",null,1],["get_relative_path","Gem::Ext::ExtConfBuilder","ruby/classes/Gem/Ext/ExtConfBuilder.html#method-c-get_relative_path","(path, base)","",null,1],["get_resolv_info","Resolv","ruby/classes/Resolv.html#method-c-get_resolv_info","()","",null,1],["get_response","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-get_response","(uri_or_host, path_or_headers = nil, port = nil, &block)","<p>Like Net::HTTP.get, but returns a Net::HTTPResponse object instead of the body string.\n",null,1],["get_screen_size","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-get_screen_size","()","",null,1],["get_screen_size","Reline::Core","ruby/classes/Reline/Core.html#method-i-get_screen_size","()","",null,1],["get_screen_size","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-get_screen_size","()","",null,1],["get_screen_size","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-get_screen_size","()","",null,1],["get_string","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-get_string","(*args)","<p>Read a chunk or all of the buffer into a string, in the specified <code>encoding</code>. If no encoding is provided …\n",null,1],["get_symbol_or_name","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-get_symbol_or_name","()","<p>Extracts a name or symbol from the token stream.\n",null,1],["get_tk","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-get_tk","()","<p>Fetches the next token from the scanner\n",null,1],["get_tk_until","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-get_tk_until","(*tokens)","<p>Reads and returns all tokens up to one of <code>tokens</code>.  Leaves the matched token in the token list.\n",null,1],["get_tkread","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-get_tkread","()","<p>Retrieves a String representation of the read tokens\n",null,1],["get_value","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-get_value","(p1, p2)","<p>Read from buffer a value of <code>type</code> at <code>offset</code>. <code>buffer_type</code> should be one of symbols:\n<p><code>:U8</code>: unsigned integer, …\n",null,1],["get_value","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-i-get_value","(p1, p2)","<p>Gets the value of <em>key</em> from the given <em>section</em>.\n<p>Given the following configurating file being loaded:\n\n<pre><code>config ...\n</code></pre>\n",null,1],["get_values","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-get_values","(p1, p2)","<p>Similar to #get_value, except that it can handle multiple buffer types and returns an array of values. …\n",null,1],["getaddress","IPSocket","ruby/classes/IPSocket.html#method-c-getaddress","(p1)","<p>Lookups the IP address of <em>host</em>.\n\n<pre><code>require &#39;socket&#39;\n\nIPSocket.getaddress(&quot;localhost&quot;)     #=&gt; &quot;127.0.0.1&quot; ...\n</code></pre>\n",null,1],["getaddress","Resolv","ruby/classes/Resolv.html#method-i-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n",null,1],["getaddress","Resolv","ruby/classes/Resolv.html#method-c-getaddress","(name)","<p>Looks up the first IP address for <code>name</code>.\n",null,1],["getaddress","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved …\n",null,1],["getaddress","Resolv::Hosts","ruby/classes/Resolv/Hosts.html#method-i-getaddress","(name)","<p>Gets the IP address of <code>name</code> from the hosts file.\n",null,1],["getaddresses","Resolv","ruby/classes/Resolv.html#method-i-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n",null,1],["getaddresses","Resolv","ruby/classes/Resolv.html#method-c-getaddresses","(name)","<p>Looks up all IP address for <code>name</code>.\n",null,1],["getaddresses","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the DNS resolver.\n<p><code>name</code> can be a Resolv::DNS::Name or a String.  Retrieved …\n",null,1],["getaddresses","Resolv::Hosts","ruby/classes/Resolv/Hosts.html#method-i-getaddresses","(name)","<p>Gets all IP addresses for <code>name</code> from the hosts file.\n",null,1],["getaddrinfo","Addrinfo","ruby/classes/Addrinfo.html#method-c-getaddrinfo","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = {})","<p>returns a list of addrinfo objects as an array.\n<p>This method converts nodename (hostname) and service (port) …\n",null,1],["getaddrinfo","Socket","ruby/classes/Socket.html#method-c-getaddrinfo","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7)","<p>Obtains address information for <em>nodename</em>:<em>servname</em>.\n<p>Note that Addrinfo.getaddrinfo provides the same functionality …\n",null,1],["getbyte","ARGF","ruby/classes/ARGF.html#method-i-getbyte","()","<p>Gets the next 8-bit byte (0..255) from ARGF. Returns <code>nil</code> if called at the end of the stream.\n<p>For example: …\n",null,1],["getbyte","IO","ruby/classes/IO.html#method-i-getbyte","()","<p>Reads and returns the next byte (in range 0..255) from the stream; returns <code>nil</code> if already at end-of-stream. …\n",null,1],["getbyte","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-getbyte","()","<p>Get the next 8bit byte from ‘ssl`.  Returns `nil` on EOF\n",null,1],["getbyte","String","ruby/classes/String.html#method-i-getbyte","(p1)","<p>Returns the byte at zero-based <code>index</code> as an integer, or <code>nil</code> if <code>index</code> is out of range:\n\n<pre><code>s = &#39;abcde&#39;   # =&gt; ...\n</code></pre>\n",null,1],["getbyte","StringIO","ruby/classes/StringIO.html#method-i-getbyte","()","<p>Reads and returns the next 8-bit byte from the stream; see Byte IO.\n",null,1],["getbyte","StringScanner","ruby/classes/StringScanner.html#method-i-getbyte","()","<p>Equivalent to #get_byte. This method is obsolete; use #get_byte instead.\n",null,1],["getbyte","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-getbyte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["getc","ARGF","ruby/classes/ARGF.html#method-i-getc","()","<p>Reads the next character from ARGF and returns it as a String. Returns <code>nil</code> at the end of the stream. …\n",null,1],["getc","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-getc","()","<p>Read one byte from the tar entry\n",null,1],["getc","IO","ruby/classes/IO.html#method-i-getc","()","<p>Reads and returns the next 1-character string from the stream; returns <code>nil</code> if already at end-of-stream. …\n",null,1],["getc","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-getc","()","<p>Reads one character from the stream.  Returns nil if called at end of file.\n",null,1],["getc","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-getc","(timeout_second)","<p>if the usage expects to wait indefinitely, use Float::INFINITY for timeout_second\n",null,1],["getc","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-getc","(_timeout_second)","",null,1],["getc","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-getc","(_timeout_second)","",null,1],["getc","StringIO","ruby/classes/StringIO.html#method-i-getc","()","<p>Reads and returns the next character from the stream; see Character IO.\n",null,1],["getc","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-getc","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["getc_with_bracketed_paste","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-getc_with_bracketed_paste","(timeout_second)","",null,1],["getch","IO","ruby/classes/IO.html#method-i-getch","(*args)","<p>Reads and returns a character in raw mode.\n<p>See IO#raw for details on the parameters.\n<p>You must require ‘io/console’ …\n",null,1],["getch","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-getch","(*args)","<p>See IO#getch.\n",null,1],["getch","StringScanner","ruby/classes/StringScanner.html#method-i-getch","()","<p>Scans one character and returns it. This method is multibyte character sensitive.\n\n<pre><code>s = StringScanner.new(&quot;ab&quot;) ...\n</code></pre>\n",null,1],["getegid","Process::Sys","ruby/classes/Process/Sys.html#method-c-getegid","()","<p>Returns the effective group ID for the current process:\n\n<pre><code>Process.egid # =&gt; 500\n</code></pre>\n<p>Not available on all platforms. …\n",null,1],["geteuid","Process::Sys","ruby/classes/Process/Sys.html#method-c-geteuid","()","<p>Returns the effective user ID for the current process.\n\n<pre><code>Process.euid # =&gt; 501\n</code></pre>\n",null,1],["getgid","Process::Sys","ruby/classes/Process/Sys.html#method-c-getgid","()","<p>Returns the (real) group ID for the current process:\n\n<pre><code>Process.gid # =&gt; 1000\n</code></pre>\n",null,1],["getgm","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-getgm","()","",null,0],["getgm","DateTime","rails/classes/DateTime.html#method-i-getgm","()","",null,0],["getgm","Time","ruby/classes/Time.html#method-i-getgm","()","<p>Returns a new <code>Time</code> object representing the value of <code>self</code> converted to the UTC timezone:\n\n<pre><code>local = Time.local(2000) ...\n</code></pre>\n",null,1],["getgrent","Etc","ruby/classes/Etc.html#method-c-getgrent","()","<p>Returns an entry from the <code>/etc/group</code> file.\n<p>The first time it is called it opens the file and returns the …\n",null,1],["getgrgid","Etc","ruby/classes/Etc.html#method-c-getgrgid","(p1 = v1)","<p>Returns information about the group with specified integer <code>group_id</code>, as found in <code>/etc/group</code>.\n<p>The information …\n",null,1],["getgrnam","Etc","ruby/classes/Etc.html#method-c-getgrnam","(p1)","<p>Returns information about the group with specified <code>name</code>, as found in <code>/etc/group</code>.\n<p>The information is returned …\n",null,1],["gethostbyaddr","Socket","ruby/classes/Socket.html#method-c-gethostbyaddr","(p1, p2 = v2)","<p>Use Addrinfo#getnameinfo instead. This method is deprecated for the following reasons:\n<p>Uncommon address …\n",null,1],["gethostbyname","Socket","ruby/classes/Socket.html#method-c-gethostbyname","(p1)","<p>Use Addrinfo.getaddrinfo instead. This method is deprecated for the following reasons:\n<p>The 3rd element …\n",null,1],["gethostbyname","TCPSocket","ruby/classes/TCPSocket.html#method-c-gethostbyname","(p1)","<p>Use Addrinfo.getaddrinfo instead. This method is deprecated for the following reasons:\n<p>The 3rd element …\n",null,1],["gethostname","Socket","ruby/classes/Socket.html#method-c-gethostname","()","<p>Returns the hostname.\n\n<pre><code>p Socket.gethostname #=&gt; &quot;hal&quot;\n</code></pre>\n<p>Note that it is not guaranteed to be able to convert …\n",null,1],["getifaddrs","Socket","ruby/classes/Socket.html#method-c-getifaddrs","()","<p>Returns an array of interface addresses. An element of the array is an instance of Socket::Ifaddr.\n<p>This …\n",null,1],["getkey","ObjectSpace::WeakKeyMap","ruby/classes/ObjectSpace/WeakKeyMap.html#method-i-getkey","(p1)","<p>Returns the existing equal key if it exists, otherwise returns <code>nil</code>.\n<p>This might be useful for implementing …\n",null,1],["getlocal","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-getlocal","(utc_offset = nil)","",null,0],["getlocal","DateTime","rails/classes/DateTime.html#method-i-getlocal","(utc_offset = nil)","",null,0],["getlocal","Time","ruby/classes/Time.html#method-i-getlocal","(*args)","<p>Returns a new <code>Time</code> object representing the value of <code>self</code> converted to a given timezone; if <code>zone</code> is <code>nil</code> …\n",null,1],["getlogin","Etc","ruby/classes/Etc.html#method-c-getlogin","()","<p>Returns the short user name of the currently logged in user. Unfortunately, it is often rather easy to …\n",null,1],["getname","Resolv","ruby/classes/Resolv.html#method-i-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n",null,1],["getname","Resolv","ruby/classes/Resolv.html#method-c-getname","(address)","<p>Looks up the hostname of <code>address</code>.\n",null,1],["getname","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-getname","(address)","<p>Gets the hostname for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or a …\n",null,1],["getname","Resolv::Hosts","ruby/classes/Resolv/Hosts.html#method-i-getname","(address)","<p>Gets the hostname of <code>address</code> from the hosts file.\n",null,1],["getnameinfo","Addrinfo","ruby/classes/Addrinfo.html#method-i-getnameinfo","(p1 = v1)","<p>returns nodename and service as a pair of strings. This converts struct sockaddr in addrinfo to textual …\n",null,1],["getnameinfo","Socket","ruby/classes/Socket.html#method-c-getnameinfo","(p1, p2 = v2)","<p>Obtains name information for <em>sockaddr</em>.\n<p><em>sockaddr</em> should be one of follows.\n<p>packed sockaddr string such as …\n",null,1],["getnames","Resolv","ruby/classes/Resolv.html#method-i-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n",null,1],["getnames","Resolv","ruby/classes/Resolv.html#method-c-getnames","(address)","<p>Looks up all hostnames for <code>address</code>.\n",null,1],["getnames","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the DNS resolver.\n<p><code>address</code> must be a Resolv::IPv4, Resolv::IPv6 or …\n",null,1],["getnames","Resolv::Hosts","ruby/classes/Resolv/Hosts.html#method-i-getnames","(address)","<p>Gets all hostnames for <code>address</code> from the hosts file.\n",null,1],["getopts","OptionParser","ruby/classes/OptionParser.html#method-i-getopts","(*args, symbolize_names: false)","<p>Wrapper method for getopts.rb.\n\n<pre><code>params = ARGV.getopts(&quot;ab:&quot;, &quot;foo&quot;, &quot;bar:&quot;, &quot;zot:Z;zot option&quot;)\n# params[&quot;a&quot;] ...\n</code></pre>\n",null,1],["getopts","OptionParser","ruby/classes/OptionParser.html#method-c-getopts","(*args, symbolize_names: false)","<p>See #getopts.\n",null,1],["getopts","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-i-getopts","(*args, symbolize_names: false)","<p>Substitution of getopts is possible as follows. Also see OptionParser#getopts.\n\n<pre><code>def getopts(*args)\n  ($OPT ...\n</code></pre>\n",null,1],["getpass","IO","ruby/classes/IO.html#method-i-getpass","(*args)","<p>Reads and returns a line without echo back. Prints <code>prompt</code> unless it is <code>nil</code>.\n<p>The newline character that …\n",null,1],["getpass","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-getpass","(*args)","<p>See IO#getpass.\n",null,1],["getpeereid","BasicSocket","ruby/classes/BasicSocket.html#method-i-getpeereid","()","<p>Returns the user and group on the peer of the UNIX socket. The result is a two element array which contains …\n",null,1],["getpeername","BasicSocket","ruby/classes/BasicSocket.html#method-i-getpeername","()","<p>Returns the remote address of the socket as a sockaddr string.\n\n<pre><code>TCPServer.open(&quot;127.0.0.1&quot;, 1440) {|serv| ...\n</code></pre>\n",null,1],["getpgid","Process","ruby/classes/Process.html#method-c-getpgid","(p1)","\n<pre><code>Returns the process group ID for the given process ID +pid+:\n\n  Process.getpgid(Process.ppid) # =&gt; 25527\n</code></pre>\n",null,1],["getpgrp","Process","ruby/classes/Process.html#method-c-getpgrp","()","<p>Returns the process group ID for the current process:\n\n<pre><code>Process.getpgid(0) # =&gt; 25527\nProcess.getpgrp   ...\n</code></pre>\n",null,1],["getpriority","Process","ruby/classes/Process.html#method-c-getpriority","(p1, p2)","<p>Returns the scheduling priority for specified process, process group, or user.\n<p>Argument <code>kind</code> is one of: …\n",null,1],["getpty","PTY","ruby/classes/PTY.html#method-c-getpty","(*args)","<p>Spawns the specified command on a newly allocated pty. You can also use the alias ::getpty.\n<p>The command’s …\n",null,1],["getpwent","Etc","ruby/classes/Etc.html#method-c-getpwent","()","<p>Returns an entry from the <code>/etc/passwd</code> file.\n<p>The first time it is called it opens the file and returns …\n",null,1],["getpwnam","Etc","ruby/classes/Etc.html#method-c-getpwnam","(p1)","<p>Returns the <code>/etc/passwd</code> information for the user with specified login <code>name</code>.\n<p>The information is returned …\n",null,1],["getpwuid","Etc","ruby/classes/Etc.html#method-c-getpwuid","(p1 = v1)","<p>Returns the <code>/etc/passwd</code> information for the user with the given integer <code>uid</code>.\n<p>The information is returned …\n",null,1],["getresource","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-getresource","(name, typeclass)","<p>Look up the <code>typeclass</code> DNS resource of <code>name</code>.\n<p><code>name</code> must be a Resolv::DNS::Name or a String.\n<p><code>typeclass</code> should …\n",null,1],["getresources","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-getresources","(name, typeclass)","<p>Looks up all <code>typeclass</code> DNS resources for <code>name</code>.  See #getresource for argument details.\n",null,1],["getrlimit","Process","ruby/classes/Process.html#method-c-getrlimit","(p1)","<p>Returns a 2-element array of the current (soft) limit and maximum (hard) limit for the given <code>resource</code> …\n",null,1],["gets","ARGF","ruby/classes/ARGF.html#method-i-gets","(*args)","<p>Returns the next line from the current file in ARGF.\n<p>By default lines are assumed to be separated by  …\n",null,1],["gets","CSV","ruby/classes/CSV.html#method-i-gets","()","",null,1],["gets","Gem::SilentUI::NullIO","ruby/classes/Gem/SilentUI/NullIO.html#method-i-gets","(*args)","",null,1],["gets","IO","ruby/classes/IO.html#method-i-gets","(*args)","<p>Reads and returns a line from the stream; assigns the return value to <code>$_</code>. See Line IO.\n<p>With no arguments …\n",null,1],["gets","IRB::FileInputMethod","ruby/classes/IRB/FileInputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,1],["gets","IRB::InputMethod","ruby/classes/IRB/InputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,1],["gets","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-gets","(*rs)","",null,1],["gets","IRB::ReadlineInputMethod","ruby/classes/IRB/ReadlineInputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,1],["gets","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,1],["gets","IRB::StdioInputMethod","ruby/classes/IRB/StdioInputMethod.html#method-i-gets","()","<p>Reads the next line from this input method.\n<p>See IO#gets for more information.\n",null,1],["gets","Kernel","ruby/classes/Kernel.html#method-i-gets","(*args)","<p>Returns (and assigns to <code>$_</code>) the next line from the list of files in <code>ARGV</code> (or <code>$*</code>), or from standard input …\n",null,1],["gets","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-gets","(eol=$/, limit=nil)","<p>Reads the next “line” from the stream.  Lines are separated by <em>eol</em>.  If <em>limit</em> is provided the …\n",null,1],["gets","StringIO","ruby/classes/StringIO.html#method-i-gets","(*args)","<p>Reads and returns a line from the stream; assigns the return value to <code>$_</code>; see Line IO.\n",null,1],["gets","XMP::StringInputMethod","ruby/classes/XMP/StringInputMethod.html#method-i-gets","()","<p>Reads the next expression from this printer.\n<p>See IO#gets for more information.\n",null,1],["gets","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-gets","(*args)","<p>See Zlib::GzipReader documentation for a description. However, note that this method can return <code>nil</code> even …\n",null,1],["getservbyname","Socket","ruby/classes/Socket.html#method-c-getservbyname","(p1, p2 = v2)","<p>Obtains the port number for <em>service_name</em>.\n<p>If <em>protocol_name</em> is not given, “tcp” is assumed.\n\n<pre><code>Socket.getservbyname(&quot;smtp&quot;) ...\n</code></pre>\n",null,1],["getservbyport","Socket","ruby/classes/Socket.html#method-c-getservbyport","(p1, p2 = v2)","<p>Obtains the port number for <em>port</em>.\n<p>If <em>protocol_name</em> is not given, “tcp” is assumed.\n\n<pre><code>Socket.getservbyport(80) ...\n</code></pre>\n",null,1],["getsid","Process","ruby/classes/Process.html#method-c-getsid","(*args)","<p>Returns the session ID of the given process ID <code>pid</code>, or of the current process if not given:\n\n<pre><code>Process.getsid ...\n</code></pre>\n",null,1],["getsockname","BasicSocket","ruby/classes/BasicSocket.html#method-i-getsockname","()","<p>Returns the local address of the socket as a sockaddr string.\n\n<pre><code>TCPServer.open(&quot;127.0.0.1&quot;, 15120) {|serv| ...\n</code></pre>\n",null,1],["getsockopt","BasicSocket","ruby/classes/BasicSocket.html#method-i-getsockopt","(p1, p2)","<p>Gets a socket option. These are protocol and system specific, see your local system documentation for …\n",null,1],["getsockopt","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-getsockopt","(level, optname)","",null,1],["getuid","Process::Sys","ruby/classes/Process/Sys.html#method-c-getuid","()","<p>Returns the (real) user ID of the current process.\n\n<pre><code>Process.uid # =&gt; 1000\n</code></pre>\n",null,1],["getutc","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-getutc","()","",null,0],["getutc","DateTime","rails/classes/DateTime.html#method-i-getutc","()","",null,0],["getutc","Time","ruby/classes/Time.html#method-i-getutc","()","<p>Returns a new <code>Time</code> object representing the value of <code>self</code> converted to the UTC timezone:\n\n<pre><code>local = Time.local(2000) ...\n</code></pre>\n",null,1],["getwd","Dir","ruby/classes/Dir.html#method-c-getwd","()","<p>Returns the path to the current working directory:\n\n<pre><code>Dir.chdir(&quot;/tmp&quot;) # =&gt; 0\nDir.pwd           # =&gt; &quot;/tmp&quot;\n</code></pre>\n",null,1],["getwd","FileUtils","ruby/classes/FileUtils.html#method-c-getwd","()","",null,1],["getwd","Pathname","ruby/classes/Pathname.html#method-c-getwd","()","<p>Returns the current working directory as a Pathname.\n\n<pre><code>Pathname.getwd\n    #=&gt; #&lt;Pathname:/home/zzak/projects/ruby&gt;\n</code></pre>\n",null,1],["gid","File::Stat","ruby/classes/File/Stat.html#method-i-gid","()","<p>Returns the numeric group id of the owner of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).gid   #=&gt; 500\n</code></pre>\n",null,1],["gid","Process","ruby/classes/Process.html#method-c-gid","()","<p>Returns the (real) group ID for the current process:\n\n<pre><code>Process.gid # =&gt; 1000\n</code></pre>\n",null,1],["gid=","Process","ruby/classes/Process.html#method-c-gid-3D","(p1)","<p>Sets the group ID for the current process to <code>new_gid</code>:\n\n<pre><code>Process.gid = 1000 # =&gt; 1000\n</code></pre>\n",null,1],["gigabyte","Numeric","rails/classes/Numeric.html#method-i-gigabyte","()","",null,0],["gigabytes","Numeric","rails/classes/Numeric.html#method-i-gigabytes","()","<p>Returns the number of bytes equivalent to the gigabytes provided.\n\n<pre><code>2.gigabytes # =&gt; 2_147_483_648\n</code></pre>\n",null,0],["git","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-git","(commands = {})","<p>Runs one or more git commands.\n\n<pre><code>git :init\n# =&gt; runs `git init`\n\ngit add: &quot;this.file that.rb&quot;\n# =&gt; runs ...\n</code></pre>\n",null,0],["git","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-git","(repository)","<p>Block form for specifying gems from a git <code>repository</code>.\n\n<pre><code>git &#39;https://github.com/rails/rails.git&#39; do\n  gem ...\n</code></pre>\n",null,1],["git_present?","Bundler","ruby/classes/Bundler.html#method-c-git_present-3F","()","",null,1],["git_source","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-git_source","(name, &callback)","<p>Defines a custom git source that uses <code>name</code> to expand git repositories for use in gems built from git …\n",null,1],["gitattributes","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-gitattributes","()","",null,0],["gitattributes.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/gitattributes_tt.html","","<p># See git-scm.com/docs/gitattributes for more about git attribute files.\n<p>&lt;% unless options -%&gt; # …\n",null,0],["github","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-github","(repo, options = {}, &block)","",null,0],["github","Rails::Generators::AppBase::GemfileEntry","rails/classes/Rails/Generators/AppBase/GemfileEntry.html#method-c-github","(name, github, branch = nil, comment = nil)","",null,0],["github","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-github","","<p>Allow Github Flavored Markdown\n",null,1],["gitignore","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-gitignore","()","",null,0],["gitignore","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-gitignore","()","",null,0],["gitignore.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/gitignore_tt.html","","<p>/.bundle/ /doc/ /log/*.log /pkg/ /tmp/ &lt;% if with_dummy_app? -%&gt; &lt;% if sqlite3? -%&gt; /&lt;%= …\n",null,0],["gitignore.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/gitignore_tt.html","","<p># See help.github.com/articles/ignoring-files for more about ignoring files. # # If you find yourself …\n",null,0],["glob","Dir","ruby/classes/Dir.html#method-c-glob","(pattern, _flags = 0, flags: _flags, base: nil, sort: true)","<p>Forms an array <em>entry_names</em> of the entry names selected by the arguments.\n<p>Argument <code>patterns</code> is a string …\n",null,1],["glob","Pathname","ruby/classes/Pathname.html#method-c-glob","(p1, p2 = v2, p3 = v3)","<p>Returns or yields Pathname objects.\n\n<pre><code>Pathname.glob(&quot;lib/i*.rb&quot;)\n    #=&gt; [#&lt;Pathname:lib/ipaddr.rb&gt;, #&lt;Pathname:lib/irb.rb&gt;]\n</code></pre>\n",null,1],["glob","Pathname","ruby/classes/Pathname.html#method-i-glob","(p1, p2 = v2)","<p>Returns or yields Pathname objects.\n\n<pre><code>Pathname(&quot;ruby-2.4.2&quot;).glob(&quot;R*.md&quot;)\n#=&gt; [#&lt;Pathname:ruby-2.4.2/README.md&gt;, ...\n</code></pre>\n",null,1],["glob_files_in_dir","Gem::Util","ruby/classes/Gem/Util.html#method-c-glob_files_in_dir","(glob, base_path)","<p>Globs for files matching <code>pattern</code> inside of <code>directory</code>, returning absolute paths to the matching files. …\n",null,1],["global_csrf_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-global_csrf_token","(session)","",null,0],["global_executor_concurrency=","ActiveRecord","rails/classes/ActiveRecord.html#method-c-global_executor_concurrency-3D","(global_executor_concurrency)","<p>Set the <code>global_executor_concurrency</code>. This configuration value can only be used with the global thread …\n",null,0],["global_previous_schemes_for","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-global_previous_schemes_for","(scheme)","",null,0],["global_variables","Kernel","ruby/classes/Kernel.html#method-i-global_variables","()","<p>Returns an array of the names of global variables. This includes special regexp global variables such …\n",null,1],["globals","","ruby/files/ruby/doc/globals_rdoc.html","","<p>Pre-Defined Global Variables\n<p>Some of the pre-defined global variables have synonyms that are available …\n",null,1],["glossary","","ruby/files/ruby/doc/contributing/glossary_md.html","","<p>Ruby Internals Glossary\n<p>Just a list of acronyms I’ve run across in the Ruby source code and their …\n",null,1],["gm","Time","ruby/classes/Time.html#method-c-gm","(*args)","<p>Returns a new <code>Time</code> object based the on given arguments, in the UTC timezone.\n<p>With one to seven arguments …\n",null,1],["gmt?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmt-3F","()","",null,0],["gmt?","Time","ruby/classes/Time.html#method-i-gmt-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a time in UTC (GMT):\n\n<pre><code>now = Time.now\n# =&gt; 2022-08-18 10:24:13.5398485 -0500 ...\n</code></pre>\n",null,1],["gmt_offset","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmt_offset","()","",null,0],["gmt_offset","Time","ruby/classes/Time.html#method-i-gmt_offset","()","<p>Returns the offset in seconds between the timezones of UTC and <code>self</code>:\n\n<pre><code>Time.utc(2000, 1, 1).utc_offset  ...\n</code></pre>\n",null,1],["gmtime","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmtime","()","",null,0],["gmtime","DateTime","rails/classes/DateTime.html#method-i-gmtime","()","",null,0],["gmtime","Time","ruby/classes/Time.html#method-i-gmtime","()","<p>Returns <code>self</code>, converted to the UTC timezone:\n\n<pre><code>t = Time.new(2000) # =&gt; 2000-01-01 00:00:00 -0600\nt.utc? ...\n</code></pre>\n",null,1],["gmtoff","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmtoff","()","",null,0],["gmtoff","Time","ruby/classes/Time.html#method-i-gmtoff","()","<p>Returns the offset in seconds between the timezones of UTC and <code>self</code>:\n\n<pre><code>Time.utc(2000, 1, 1).utc_offset  ...\n</code></pre>\n",null,1],["goto","IO","ruby/classes/IO.html#method-i-goto","(p1, p2)","",null,1],["goto_column","IO","ruby/classes/IO.html#method-i-goto_column","(p1)","",null,1],["grant_privilege","Process::GID","ruby/classes/Process/GID.html#method-c-grant_privilege","(p1)","<p>Set the effective group ID, and if possible, the saved group ID of the process to the given <em>group</em>. Returns …\n",null,1],["grant_privilege","Process::UID","ruby/classes/Process/UID.html#method-c-grant_privilege","(p1)","<p>Set the effective user ID, and if possible, the saved user ID of the process to the given <em>user</em>. Returns …\n",null,1],["grapheme_clusters","String","ruby/classes/String.html#method-i-grapheme_clusters","()","<p>Returns an array of the grapheme clusters in <code>self</code> (see Unicode Grapheme Cluster Boundaries):\n\n<pre><code>s = &quot;\\u0061\\u0308-pqr-\\u0062\\u0308-xyz-\\u0063\\u0308&quot; ...\n</code></pre>\n",null,1],["grapheme_length","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-grapheme_length","()","<p>Returns the number of grapheme clusters in the string.\n\n<pre><code>&#39;क्षि&#39;.mb_chars.length   # =&gt; 4\n&#39;क्षि&#39;.mb_chars.grapheme_length ...\n</code></pre>\n",null,0],["great_job","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-great_job","()","<p>A report that says you did a great job!\n",null,1],["gregorian","Date","ruby/classes/Date.html#method-i-gregorian","()","<p>Equivalent to Date#new_start with argument Date::GREGORIAN.\n",null,1],["gregorian?","Date","ruby/classes/Date.html#method-i-gregorian-3F","()","<p>Returns <code>true</code> if the date is on or after the date of calendar reform, <code>false</code> otherwise:\n\n<pre><code>Date.new(1582, 10, ...\n</code></pre>\n",null,1],["gregorian_leap?","Date","ruby/classes/Date.html#method-c-gregorian_leap-3F","(p1)","<p>Returns <code>true</code> if the given year is a leap year in the proleptic Gregorian calendar, <code>false</code> otherwise:\n\n<pre><code>Date.gregorian_leap?(2000) ...\n</code></pre>\n",null,1],["grep","Enumerable","ruby/classes/Enumerable.html#method-i-grep","(p1)","<p>Returns an array of objects based elements of <code>self</code> that match the given pattern.\n<p>With no block given, …\n",null,1],["grep","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-grep","(p1)","<p>Like Enumerable#grep, but chains operation to be lazy-evaluated.\n",null,1],["grep_v","Enumerable","ruby/classes/Enumerable.html#method-i-grep_v","(p1)","<p>Returns an array of objects based on elements of <code>self</code> that <em>don’t</em> match the given pattern.\n<p>With no …\n",null,1],["grep_v","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-grep_v","(p1)","<p>Like Enumerable#grep_v, but chains operation to be lazy-evaluated.\n",null,1],["group","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-group","(*args)","<p>Allows to specify a group attribute:\n\n<pre><code>User.group(:name)\n# SELECT &quot;users&quot;.* FROM &quot;users&quot; GROUP BY name\n</code></pre>\n<p>Returns …\n",null,0],["group","Etc","ruby/classes/Etc.html#method-c-group","()","<p>Provides a convenient Ruby iterator which executes a block for each entry in the <code>/etc/group</code> file.\n<p>The …\n",null,1],["group","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-group","(*groups)","<p>Block form for placing a dependency in the given <code>groups</code>.\n\n<pre><code>group :development do\n  gem &#39;debugger&#39;\nend\n\ngroup ...\n</code></pre>\n",null,1],["group","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-group","()","<p>Returns the EC::Group that the key is associated with. Modifying the returned group does not affect  …\n",null,1],["group","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-group","(indent=0, open_obj='', close_obj='', open_width=open_obj.length, close_width=close_obj.length)","<p>Groups line break hints added in the block. The line break hints are all to be used or not.\n<p>If <code>indent</code> …\n",null,1],["group","PrettyPrint::SingleLine","ruby/classes/PrettyPrint/SingleLine.html#method-i-group","(indent=nil, open_obj='', close_obj='', open_width=nil, close_width=nil)","<p>Opens a block for grouping objects to be pretty printed.\n<p>Arguments:\n<p><code>indent</code> - noop argument. Present for …\n",null,1],["group","Thread","ruby/classes/Thread.html#method-i-group","()","<p>Returns the ThreadGroup which contains the given thread.\n\n<pre><code>Thread.main.group   #=&gt; #&lt;ThreadGroup:0x4029d914&gt;\n</code></pre>\n",null,1],["group=","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-group-3D","(p1)","<p>Sets the EC::Group for the key. The group structure is internally copied so modification to <em>group</em> after …\n",null,1],["group_by","Enumerable","ruby/classes/Enumerable.html#method-i-group_by","()","<p>With a block given returns a hash:\n<p>Each key is a return value from the block.\n<p>Each value is an array of …\n",null,1],["group_by_attribute","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-group_by_attribute","()","<p>Returns a Hash of attributes with an array of their Error objects.\n\n<pre><code>person.errors.group_by_attribute\n# ...\n</code></pre>\n",null,0],["group_entries","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-group_entries","(entries)","<p>Groups <code>entries</code> by date.\n",null,1],["group_sub","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-group_sub","()","<p>Takes a block and queues a new group that is indented 1 level further.\n",null,1],["grouped_collection_select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-grouped_collection_select","(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#grouped_collection_select for form builders:\n\n<pre><code>&lt;%= form_for ...\n</code></pre>\n",null,0],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_collection_select","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code>, <code>&lt;optgroup&gt;</code> and <code>&lt;option&gt;</code> tags for the collection of existing return …\n",null,0],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_options_for_select","(grouped_options, selected_key = nil, options = {})","<p>Returns a string of <code>&lt;option&gt;</code> tags, like <code>options_for_select</code>, but wraps them with <code>&lt;optgroup&gt;</code> …\n",null,0],["groups","Rails","rails/classes/Rails.html#method-c-groups","(*groups)","<p>Returns all Rails groups for loading based on:\n<p>The Rails environment;\n<p>The environment variable RAILS_GROUPS …\n",null,0],["groups","Process","ruby/classes/Process.html#method-c-groups","()","<p>Returns an array of the group IDs in the supplemental group access list for the current process:\n\n<pre><code>Process.groups ...\n</code></pre>\n",null,1],["groups=","Process","ruby/classes/Process.html#method-c-groups-3D","(p1)","<p>Sets the supplemental group access list to the given array of group IDs.\n\n<pre><code>Process.groups               ...\n</code></pre>\n",null,1],["grpowned?","File","ruby/classes/File.html#method-c-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group id of the calling process is the owner …\n",null,1],["grpowned?","File::Stat","ruby/classes/File/Stat.html#method-i-grpowned-3F","()","<p>Returns true if the effective group id of the process is the same as the group id of <em>stat</em>. On Windows …\n",null,1],["grpowned?","FileTest","ruby/classes/FileTest.html#method-i-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group id of the calling process is the owner …\n",null,1],["grpowned?","Pathname","ruby/classes/Pathname.html#method-i-grpowned-3F","()","<p>See FileTest.grpowned?.\n",null,1],["gsub","Kernel","ruby/classes/Kernel.html#method-i-gsub","(*args)","<p>Equivalent to <code>$_.gsub...</code>, except that <code>$_</code> will be updated if substitution occurs. Available only when …\n",null,1],["gsub","String","ruby/classes/String.html#method-i-gsub","(*args)","<p>Returns a copy of <code>self</code> with all occurrences of the given <code>pattern</code> replaced.\n<p>See Substitution Methods.\n<p>Returns …\n",null,1],["gsub!","String","ruby/classes/String.html#method-i-gsub-21","(*args)","<p>Performs the specified substring replacement(s) on <code>self</code>; returns <code>self</code> if any replacement occurred, <code>nil</code> …\n",null,1],["guard_inspect_key","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-guard_inspect_key","()","<p>Yields to a block and preserves the previous set of objects being printed.\n",null,1],["guess","Kconv","ruby/classes/Kconv.html#method-c-guess","(str)","<p>Guess input encoding by NKF.guess\n",null,1],["guess","NKF","ruby/classes/NKF.html#method-c-guess","(p1)","<p>Returns guessed encoding of <em>str</em> by nkf routine.\n",null,1],["guess","OptionParser::Switch","ruby/classes/OptionParser/Switch.html#method-c-guess","(arg)","<p>Guesses argument style from <code>arg</code>.  Returns corresponding OptionParser::Switch class (OptionalArgument …\n",null,1],["guid","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-guid","()","<p>Returns GUID.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Application&#39;)\nputs tobj.guid ...\n</code></pre>\n",null,1],["guid","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-guid","()","<p>Returns guid string which specifies type library.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object ...\n</code></pre>\n",null,1],["gunzip","Gem::Util","ruby/classes/Gem/Util.html#method-c-gunzip","(data)","<p>Zlib::GzipReader wrapper that unzips <code>data</code>.\n",null,1],["gunzip","Zlib","ruby/classes/Zlib.html#method-c-gunzip","(p1)","<p>Decode the given gzipped <code>string</code>.\n<p>This method is almost equivalent to the following code:\n\n<pre><code>def gunzip(string) ...\n</code></pre>\n",null,1],["gzip","Gem::Util","ruby/classes/Gem/Util.html#method-c-gzip","(data)","<p>Zlib::GzipWriter wrapper that zips <code>data</code>.\n",null,1],["gzip","Zlib","ruby/classes/Zlib.html#method-c-gzip","(p1)","<p>Gzip the given <code>string</code>. Valid values of level are Zlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION …\n",null,1],["gzip_to","Gem::Package","ruby/classes/Gem/Package.html#method-i-gzip_to","(io)","<p>Gzips content written to <code>gz_io</code> to <code>io</code>.\n",null,1],["h","ERB::Util","rails/classes/ERB/Util.html#method-c-h","(s)","",null,0],["h","CGI::Util","ruby/classes/CGI/Util.html#method-i-h","(string)","",null,1],["ha1","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-ha1","(credentials, password)","",null,0],["halted_callback","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-halted_callback","(event)","",null,0],["handle","ActiveSupport::ErrorReporter","rails/classes/ActiveSupport/ErrorReporter.html#method-i-handle","(error_class = StandardError, severity: :warning, context: {}, fallback: nil)","<p>Report any unhandled exception, and swallow it.\n\n<pre><code>Rails.error.handle do\n  1 + &#39;1&#39;\nend\n</code></pre>\n",null,0],["handle_arguments","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-handle_arguments","(arg_list)","<p>Handle the command arguments.\n",null,1],["handle_attr","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-handle_attr","(var_name, attr_name, read, write)","<p>Creates a new RDoc::Attr <code>attr_name</code> on class <code>var_name</code> that is either <code>read</code>, <code>write</code> or both\n",null,1],["handle_class_module","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-handle_class_module","(var_name, type, class_name, parent, in_module)","<p>Creates a new RDoc::NormalClass or RDoc::NormalModule based on <code>type</code> named <code>class_name</code> in <code>parent</code> which …\n",null,1],["handle_constants","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-handle_constants","(type, var_name, const_name, definition)","<p>Adds constants.  By providing some_value: at the start of the comment you can override the C value of …\n",null,1],["handle_directive","Reline::Config","ruby/classes/Reline/Config.html#method-i-handle_directive","(directive, file, no)","",null,1],["handle_error","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-handle_error","(e, re_raise: true, io: $stderr)","<p>SyntaxSuggest.handle_error [Public]\n<p>Takes a ‘SyntaxError` exception, uses the error message to locate …\n",null,1],["handle_exception","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-handle_exception","(exc)","",null,1],["handle_ifdefs_in","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-handle_ifdefs_in","(body)","<p>Removes #ifdefs that would otherwise confuse us\n",null,1],["handle_interrupt","Thread","ruby/classes/Thread.html#method-c-handle_interrupt","(p1)","<p>Changes asynchronous interrupt timing.\n<p><em>interrupt</em> means asynchronous event and corresponding procedure …\n",null,1],["handle_method","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-handle_method","(type, var_name, meth_name, function, param_count, source_file = nil)","<p>Adds an RDoc::AnyMethod <code>meth_name</code> defined on a class or module assigned to <code>var_name</code>.  <code>type</code> is the type …\n",null,1],["handle_options","Gem::Command","ruby/classes/Gem/Command.html#method-i-handle_options","(args)","<p>Handle the given list of arguments by parsing them and recording the results.\n",null,1],["handle_pipe","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-handle_pipe","()","<p>Turns RDoc from stdin into HTML\n",null,1],["handle_singleton","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-handle_singleton","(sclass_var, class_var)","<p>Registers a singleton class <code>sclass_var</code> as a singleton of <code>class_var</code>\n",null,1],["handle_tab_width","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-i-handle_tab_width","(body)","<p>Normalizes tabs in <code>body</code>\n",null,1],["handle_timeout","Timeout::Error","ruby/classes/Timeout/Error.html#method-c-handle_timeout","(message)","",null,1],["handle_unverified_request","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-handle_unverified_request","()","",null,0],["handle_unverified_request","ActionController::RequestForgeryProtection::ProtectionMethods::Exception","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/Exception.html#method-i-handle_unverified_request","()","",null,0],["handle_unverified_request","ActionController::RequestForgeryProtection::ProtectionMethods::NullSession","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/NullSession.html#method-i-handle_unverified_request","()","<p>This is the method that defines the application behavior when a request is found to be unverified.\n",null,0],["handle_unverified_request","ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/ResetSession.html#method-i-handle_unverified_request","()","",null,0],["handler","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-handler","()","<p>The Fiddle::CompositeHandler instance\n<p>Will raise an error if no handlers are open.\n",null,1],["handler","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-i-handler","()","<p>returns handler object.\n",null,1],["handler=","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-i-handler-3D","(p1)","<p>sets event handler object. If handler object has onXXX method according to XXX event, then onXXX method …\n",null,1],["handlers","Fiddle::CompositeHandler","ruby/classes/Fiddle/CompositeHandler.html#method-i-handlers","()","<p>Array of the currently loaded libraries.\n",null,1],["handles?","Gem::Command","ruby/classes/Gem/Command.html#method-i-handles-3F","(args)","<p>True if the command handles the given argument list.\n",null,1],["handles_encoding?","ActionView::Template::Handlers::ERB","rails/classes/ActionView/Template/Handlers/ERB.html#method-i-handles_encoding-3F","()","",null,0],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_and_belongs_to_many","(name, scope = nil, **options, &extension)","<p>Specifies a many-to-many relationship with another class. This associates two classes via an intermediate …\n",null,0],["has_attribute?","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-has_attribute-3F","(attr_name)","<p>Returns <code>true</code> if the given attribute is in the attributes hash, otherwise <code>false</code>.\n\n<pre><code>class Person &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["has_attribute?","ActiveRecord::AttributeMethods::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-has_attribute-3F","(attr_name)","<p>Returns true if the given attribute exists, otherwise false.\n\n<pre><code>class Person &lt; ActiveRecord::Base\n  alias_attribute ...\n</code></pre>\n",null,0],["has_basic_credentials?","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-has_basic_credentials-3F","(request)","",null,0],["has_call_seq?","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-has_call_seq-3F","()","<p>Whether the method has a call-seq.\n",null,1],["has_changes_to_save?","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-has_changes_to_save-3F","()","<p>Will the next call to <code>save</code> have any changes to persist?\n",null,0],["has_conflicts?","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-has_conflicts-3F","()","<p>Return true if there are possible conflicts against the currently loaded specs.\n",null,1],["has_expires?","Rinda::TupleBag","ruby/classes/Rinda/TupleBag.html#method-i-has_expires-3F","()","<p><code>true</code> if the TupleBag to see if it has any expired entries.\n",null,1],["has_header?","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-has_header-3F","(key)","",null,0],["has_key?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-has_key-3F","","",null,0],["has_key?","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-has_key-3F","(attribute)","",null,0],["has_key?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-has_key-3F","(key)","",null,0],["has_key?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-has_key-3F","(key)","",null,0],["has_key?","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-has_key-3F","(*args)","<p>Returns true if a given query string parameter exists.\n",null,1],["has_key?","CSV::Row","ruby/classes/CSV/Row.html#method-i-has_key-3F","(header)","<p>Returns <code>true</code> if there is a field with the given <code>header</code>, <code>false</code> otherwise.\n",null,1],["has_key?","ENV","ruby/classes/ENV.html#method-c-has_key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the given <code>name</code>:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; ...\n</code></pre>\n",null,1],["has_key?","Hash","ruby/classes/Hash.html#method-i-has_key-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["has_many","ActiveRecord::Associations::ClassMethods","rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many","(name, scope = nil, **options, &extension)","<p>Specifies a one-to-many association. The following methods for retrieval and query of collections of …\n",null,0],["has_many_attached","ActiveStorage::Attached::Model","rails/classes/ActiveStorage/Attached/Model.html#method-i-has_many_attached","(name, dependent: :purge_later, service: nil, strict_loading: false)","<p>Specifies the relation between multiple attachments and the model.\n\n<pre><code>class Gallery &lt; ApplicationRecord\n ...\n</code></pre>\n",null,0],["has_named_route?","ActionDispatch::Routing::Mapper::Base","rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-has_named_route-3F","(name)","<p>Query if the following named route was already defined.\n",null,0],["has_one","ActiveRecord::Associations::ClassMethods","rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_one","(name, scope = nil, **options)","<p>Specifies a one-to-one association with another class. This method should only be used if the other class …\n",null,0],["has_one_attached","ActiveStorage::Attached::Model","rails/classes/ActiveStorage/Attached/Model.html#method-i-has_one_attached","(name, dependent: :purge_later, service: nil, strict_loading: false)","<p>Specifies the relation between a single attachment and the model.\n\n<pre><code>class User &lt; ApplicationRecord\n  has_one_attached ...\n</code></pre>\n",null,0],["has_rich_text","ActionText::Attribute","rails/classes/ActionText/Attribute.html#method-i-has_rich_text","(name, encrypted: false)","<p>Provides access to a dependent RichText model that holds the body and attachments for a single named …\n",null,0],["has_secure_password","ActiveModel::SecurePassword::ClassMethods","rails/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password","(attribute = :password, validations: true)","<p>Adds methods to set and authenticate against a BCrypt password. This mechanism requires you to have a …\n",null,0],["has_secure_token","ActiveRecord::SecureToken::ClassMethods","rails/classes/ActiveRecord/SecureToken/ClassMethods.html#method-i-has_secure_token","(attribute = :token, length: MINIMUM_TOKEN_LENGTH)","<p>Example using #has_secure_token\n\n<pre><code># Schema: User(token:string, auth_token:string)\nclass User &lt; ActiveRecord::Base ...\n</code></pre>\n",null,0],["has_value?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-has_value-3F","","<p>Returns true if the given value is present for some key in the parameters.\n",null,0],["has_value?","ENV","ruby/classes/ENV.html#method-c-has_value-3F","(p1)","<p>Returns <code>true</code> if <code>value</code> is the value for some environment variable name, <code>false</code> otherwise:\n\n<pre><code>ENV.replace(&#39;foo&#39; ...\n</code></pre>\n",null,1],["has_value?","Hash","ruby/classes/Hash.html#method-i-has_value-3F","(p1)","<p>Returns <code>true</code> if <code>value</code> is a value in <code>self</code>, otherwise <code>false</code>.\n",null,1],["has_value?","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-has_value-3F","( val )","<p>Returns true if specified <code>value</code> is found in the database.\n",null,1],["hash","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-hash","()","",null,0],["hash","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-hash","()","",null,0],["hash","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-hash","()","",null,0],["hash","ActiveRecord::Associations::Preloader::Association::LoaderQuery","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderQuery.html#method-i-hash","()","",null,0],["hash","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-hash","()","<p>Delegates to id in order to allow two records of the same type and id to work with something like:\n\n<pre><code>[ Person.find(1), ...\n</code></pre>\n",null,0],["hash","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-hash","()","",null,0],["hash","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-hash","()","",null,0],["hash","Array","ruby/classes/Array.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>.\n<p>Two arrays with the same content will have the same hash code …\n",null,1],["hash","BigDecimal","ruby/classes/BigDecimal.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>.\n<p>Two instances of BigDecimal have the same hash value if and only …\n",null,1],["hash","Complex","ruby/classes/Complex.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>.\n<p>Two Complex objects created from the same values will have the …\n",null,1],["hash","Data","ruby/classes/Data.html#method-i-hash","()","<p>Redefines Object#hash (used to distinguish objects as Hash keys) so that data objects of the same class …\n",null,1],["hash","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-hash","()","<p>Compute a hash-value for this arithmetic sequence. Two arithmetic sequences with same begin, end, step, …\n",null,1],["hash","Float","ruby/classes/Float.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>.\n<p>See also Object#hash.\n",null,1],["hash","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-hash","()","",null,1],["hash","Gem::Resolver::APISpecification","ruby/classes/Gem/Resolver/APISpecification.html#method-i-hash","()","",null,1],["hash","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-hash","()","",null,1],["hash","Gem::Resolver::IndexSpecification","ruby/classes/Gem/Resolver/IndexSpecification.html#method-i-hash","()","",null,1],["hash","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-hash","()","<p>The hash value for this specification.\n",null,1],["hash","Hash","ruby/classes/Hash.html#method-i-hash","()","<p>Returns the Integer hash-code for the hash.\n<p>Two Hash objects have the same hash-code if their content …\n",null,1],["hash","IPAddr","ruby/classes/IPAddr.html#method-i-hash","()","<p>Returns a hash value used by Hash, Set, and Array classes\n",null,1],["hash","MatchData","ruby/classes/MatchData.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>, based on the target string, regexp, match, and captures.\n<p>See …\n",null,1],["hash","Method","ruby/classes/Method.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n<p>See also Object#hash.\n",null,1],["hash","Object","ruby/classes/Object.html#method-i-hash","()","<p>Generates an Integer hash value for this object.  This function must have the property that <code>a.eql?(b)</code> …\n",null,1],["hash","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-hash","()","<p>Returns a hash code for this object.\n<p>See also Object#hash.\n",null,1],["hash","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-hash","()","<p>The hash value returned is suitable for use as a certificate’s filename in a CA path.\n",null,1],["hash","Proc","ruby/classes/Proc.html#method-i-hash","()","<p>Returns a hash value corresponding to proc body.\n<p>See also Object#hash.\n",null,1],["hash","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-hash","()","<p>An RDoc::TopLevel has the same hash as another with the same relative_name\n",null,1],["hash","Range","ruby/classes/Range.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>. Two range objects <code>r0</code> and <code>r1</code> have the same hash value if and …\n",null,1],["hash","Rational","ruby/classes/Rational.html#method-i-hash","()","",null,1],["hash","Regexp","ruby/classes/Regexp.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>.\n<p>Related: Object#hash.\n",null,1],["hash","String","ruby/classes/String.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>. The value is based on the length, content and encoding of <code>self</code> …\n",null,1],["hash","Struct","ruby/classes/Struct.html#method-i-hash","()","<p>Returns the integer hash value for <code>self</code>.\n<p>Two structs of the same class and with the same content will …\n",null,1],["hash","Time","ruby/classes/Time.html#method-i-hash","()","<p>Returns the integer hash code for <code>self</code>.\n<p>Related: Object#hash.\n",null,1],["hash","URI::Generic","ruby/classes/URI/Generic.html#method-i-hash","()","",null,1],["hash","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n<p>See also Object#hash.\n",null,1],["hash_algorithm","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-hash_algorithm","()","<p>Returns the ln (long name) of the hash algorithm used to generate the issuerNameHash and the issuerKeyHash …\n",null,1],["hash_digest_class","ActiveSupport::KeyGenerator","rails/classes/ActiveSupport/KeyGenerator.html#method-c-hash_digest_class","()","",null,0],["hash_digest_class=","ActiveSupport::KeyGenerator","rails/classes/ActiveSupport/KeyGenerator.html#method-c-hash_digest_class-3D","(klass)","",null,0],["hash_old","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-hash_old","()","<p>Returns an MD5 based hash used in OpenSSL 0.9.X.\n",null,1],["have_const","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the constant <code>const</code> is defined.  You may optionally pass the <code>type</code> of <code>const</code> as  …\n",null,1],["have_framework","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_framework","(fw, &b)","<p>Returns whether or not the given <code>framework</code> can be found on your system. If found, a macro is passed as …\n",null,1],["have_func","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_func","(func, headers = nil, opt = \"\", &b)","<p>Returns whether or not the function <code>func</code> can be found in the common header files, or within any <code>headers</code> …\n",null,1],["have_header","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_header","(header, preheaders = nil, opt = \"\", &b)","<p>Returns whether or not the given <code>header</code> file can be found on your system. If found, a macro is passed …\n",null,1],["have_library","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_library","(lib, func = nil, headers = nil, opt = \"\", &b)","<p>Returns whether or not the given entry point <code>func</code> can be found within <code>lib</code>.  If <code>func</code> is <code>nil</code>, the <code>main()</code> …\n",null,1],["have_macro","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_macro","(macro, headers = nil, opt = \"\", &b)","<p>Returns whether or not <code>macro</code> is defined either in the common header files or within any <code>headers</code> you provide. …\n",null,1],["have_option?","FileUtils","ruby/classes/FileUtils.html#method-c-have_option-3F","(mid, opt)","<p>Returns <code>true</code> if method <code>mid</code> accepts the given option <code>opt</code>, <code>false</code> otherwise; the arguments may be strings …\n",null,1],["have_struct_member","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_struct_member","(type, member, headers = nil, opt = \"\", &b)","<p>Returns whether or not the struct of type <code>type</code> contains <code>member</code>.  If it does not, or the struct type can’t …\n",null,1],["have_type","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.  You may optionally pass additional <code>headers</code> to …\n",null,1],["have_var","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-have_var","(var, headers = nil, opt = \"\", &b)","<p>Returns whether or not the variable <code>var</code> can be found in the common header files, or within any <code>headers</code> …\n",null,1],["having","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-having","(opts, *rest)","<p>Allows to specify a HAVING clause. Note that you can’t use HAVING without also specifying a GROUP …\n",null,0],["head","ActionController::Head","rails/classes/ActionController/Head.html#method-i-head","(status, options = {})","<p>Returns a response that has no content (merely headers). The options argument is interpreted to be a …\n",null,0],["head","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-head","(path, initheader = nil)","<p>Sends a HEAD request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["head2","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-head2","(path, initheader = nil, &block)","",null,1],["header","ActionDispatch::Routing::ConsoleFormatter::Base","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Base.html#method-i-header","(routes)","",null,0],["header","ActionDispatch::Routing::ConsoleFormatter::Sheet","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Sheet.html#method-i-header","(routes)","",null,0],["header","ActionDispatch::Routing::HtmlTableFormatter","rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-header","(routes)","<p>The header is part of the HTML page, so we don’t construct it here.\n",null,0],["header","CGI","ruby/classes/CGI.html#method-i-header","(options='text/html')","<p>This method is an alias for #http_header, when HTML5 tag maker is inactive.\n<p>NOTE: use #http_header to …\n",null,1],["header?","CSV::Row","ruby/classes/CSV/Row.html#method-i-header-3F","(header)","",null,1],["header_convert","CSV","ruby/classes/CSV.html#method-i-header_convert","(name = nil, &converter)","<p>The block need not return a String object:\n\n<pre><code>csv = CSV.open(path, headers: true)\ncsv.header_convert {|header, ...\n</code></pre>\n",null,1],["header_converters","CSV","ruby/classes/CSV.html#method-i-header_converters","()","<p>Returns an Array containing header converters; used for parsing; see Header Converters:\n\n<pre><code>CSV.new(&#39;&#39;).header_converters ...\n</code></pre>\n",null,1],["header_row?","CSV","ruby/classes/CSV.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if the next row to be read is a header row; <code>false</code> otherwise.\n<p>Without headers:\n\n<pre><code>string = &quot;foo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["header_row?","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-header_row-3F","()","",null,1],["header_row?","CSV::Row","ruby/classes/CSV/Row.html#method-i-header_row-3F","()","<p>Returns <code>true</code> if this is a header row, <code>false</code> otherwise.\n",null,1],["headers","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-headers","()","<p>Provides access to the request’s HTTP headers, for example:\n\n<pre><code>request.headers[&quot;Content-Type&quot;] # =&gt; &quot;text/plain&quot;\n</code></pre>\n",null,0],["headers","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-i-headers","(args = nil)","<p>Allows you to pass random and unusual headers to the new <code>Mail::Message</code> object which will add them to …\n",null,0],["headers","CSV","ruby/classes/CSV.html#method-i-headers","()","<p>Returns the value that determines whether headers are used; used for parsing; see {Option <code>headers</code>}:\n\n<pre><code>CSV.new(&#39;&#39;).headers ...\n</code></pre>\n",null,1],["headers","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-headers","()","",null,1],["headers","CSV::Row","ruby/classes/CSV/Row.html#method-i-headers","()","<p>Returns the headers for this row:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot;\ntable = CSV.parse(source, ...\n</code></pre>\n",null,1],["headers","CSV::Table","ruby/classes/CSV/Table.html#method-i-headers","()","<p>Returns a new Array containing the String headers for the table.\n<p>If the table is not empty, returns the …\n",null,1],["headers=","URI::MailTo","ruby/classes/URI/MailTo.html#method-i-headers-3D","(v)","<p>Setter for headers <code>v</code>.\n",null,1],["headers_for_direct_upload","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-headers_for_direct_upload","(key, filename:, content_type:, content_length:, checksum:, custom_metadata: {})","<p>Returns a Hash of headers for <code>url_for_direct_upload</code> requests.\n",null,0],["headers_for_direct_upload","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-headers_for_direct_upload","(key, content_type:, checksum:, filename: nil, disposition: nil, custom_metadata: {}, **)","",null,0],["headers_for_direct_upload","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-headers_for_direct_upload","(key, content_type:, **)","",null,0],["headers_for_direct_upload","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-headers_for_direct_upload","(key, checksum:, filename: nil, disposition: nil, custom_metadata: {}, **)","",null,0],["headers_for_direct_upload","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-headers_for_direct_upload","(key, content_type:, checksum:, filename: nil, disposition: nil, custom_metadata: {}, **)","",null,0],["health_check","ActionMailbox::Ingresses::Mandrill::InboundEmailsController","rails/classes/ActionMailbox/Ingresses/Mandrill/InboundEmailsController.html#method-i-health_check","()","",null,0],["help","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-i-help","()","",null,0],["help","Rails::Generators","rails/classes/Rails/Generators.html#method-c-help","(command = \"generate\")","<p>Show help message with available generators.\n",null,0],["help","OptionParser","ruby/classes/OptionParser.html#method-i-help","()","<p>Returns option summary string.\n",null,1],["helpcontext","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-helpcontext","()","<p>Returns help context.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;)\nmethod ...\n</code></pre>\n",null,1],["helpcontext","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-helpcontext","()","<p>Returns helpcontext. If helpcontext is not found, then returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["helper","AbstractController::Helpers::ClassMethods","rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper","(*args, &block)","<p>Includes the given modules in the template class.\n<p>Modules can be specified in different ways. All of the …\n",null,0],["helper","Rails::ConsoleMethods","rails/classes/Rails/ConsoleMethods.html#method-i-helper","()","<p>Gets the helper methods available to the controller.\n<p>This method assumes an <code>ApplicationController</code> exists, …\n",null,0],["helper.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/helper/templates/helper_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; module &lt;%= class_name %&gt;Helper end &lt;% end -%&gt;\n",null,0],["helper_attr","ActionController::Helpers::ClassMethods","rails/classes/ActionController/Helpers/ClassMethods.html#method-i-helper_attr","(*attrs)","<p>Declares helper accessors for controller attributes. For example, the following adds new <code>name</code> and <code>name=</code> …\n",null,0],["helper_method","AbstractController::Helpers::ClassMethods","rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper_method","(*methods)","<p>Declare a controller method as a helper. For example, the following makes the <code>current_user</code> and <code>logged_in?</code> …\n",null,0],["helpers","ActionController::Helpers","rails/classes/ActionController/Helpers.html#method-i-helpers","()","<p>Provides a proxy to access helper methods from outside the view.\n",null,0],["helpers","ActionController::Helpers::ClassMethods","rails/classes/ActionController/Helpers/ClassMethods.html#method-i-helpers","()","<p>Provides a proxy to access helper methods from outside the view.\n<p>Note that the proxy is rendered under …\n",null,0],["helpers","Rails::Engine","rails/classes/Rails/Engine.html#method-i-helpers","()","<p>Returns a module with all the helpers defined for the engine.\n",null,0],["helpers.js","","rails/files/rails/activestorage/app/javascript/activestorage/helpers_js.html","","<p>export function getMetaValue(name) {\n\n<pre><code>const element = findElement(document.head, `meta[name=&quot;${name}&quot;]`) ...\n</code></pre>\n",null,0],["helpers_paths","Rails::Engine","rails/classes/Rails/Engine.html#method-i-helpers_paths","()","<p>Returns all registered helpers paths.\n",null,0],["helpfile","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-helpfile","()","<p>Returns help file. If help file is not found, then the method returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["helpfile","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-helpfile","()","<p>Returns helpfile path. If helpfile is not found, then returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["helpstring","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-helpstring","()","<p>Returns help string of OLE method. If the help string is not found, then the method returns nil.\n\n<pre><code>tobj ...\n</code></pre>\n",null,1],["helpstring","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-helpstring","()","<p>Returns help string.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Internet Controls&#39;, &#39;IWebBrowser&#39;)\nputs tobj.helpstring ...\n</code></pre>\n",null,1],["here?","DRb","ruby/classes/DRb.html#method-c-here-3F","(uri)","<p>Is <code>uri</code> the URI for the current local server?\n",null,1],["here?","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-here-3F","(uri)","<p>Is <code>uri</code> the URI for this server?\n",null,1],["hex","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-hex","(n=nil)","<p>Generate a random hexadecimal string.\n<p>The argument <em>n</em> specifies the length, in bytes, of the random number …\n",null,1],["hex","String","ruby/classes/String.html#method-i-hex","()","<p>Interprets the leading substring of <code>self</code> as a string of hexadecimal digits (with an optional sign and …\n",null,1],["hex?","ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Bit::Data","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/OID/Bit/Data.html#method-i-hex-3F","()","",null,0],["hexdigest","Digest::Class","ruby/classes/Digest/Class.html#method-c-hexdigest","(*args)","<p>Returns the hex-encoded hash value of a given <em>string</em>.  This is almost equivalent to Digest.hexencode …\n",null,1],["hexdigest","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-hexdigest","(p1 = v1)","<p>If none is given, returns the resulting hash value of the digest in a hex-encoded form, keeping the digest’s …\n",null,1],["hexdigest","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-hexdigest","()","<p>Returns the authentication code an instance represents as a hex-encoded string.\n",null,1],["hexdigest","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-c-hexdigest","(digest, key, data)","<p>Returns the authentication code as a hex-encoded string. The <em>digest</em> parameter specifies the digest algorithm …\n",null,1],["hexdigest!","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-hexdigest-21","()","<p>Returns the resulting hash value in a hex-encoded form and resets the digest to the initial state.\n",null,1],["hexdump","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-hexdump","(*args)","<p>Returns a human-readable string representation of the buffer. The exact format is subject to change. …\n",null,1],["hexencode","Digest","ruby/classes/Digest.html#method-c-hexencode","(p1)","<p>Generates a hex-encoded version of a given <em>string</em>.\n",null,1],["hidden","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-hidden","(name = \"\", value = nil)","<p>Generate a Hidden Input element as a string.\n<p>The attributes of the element can be specified as two arguments, …\n",null,1],["hidden?","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-hidden-3F","()","",null,1],["hidden?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-hidden-3F","()","<p>Opposite or ‘visible?` (note: different than `empty?`)\n",null,1],["hidden_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-hidden_field","(method, options = {})","<p>Returns a hidden input tag tailored for accessing a specified attribute (identified by <code>method</code>) on an …\n",null,0],["hidden_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-hidden_field","(object_name, method, options = {})","<p>Returns a hidden input tag tailored for accessing a specified attribute (identified by <code>method</code>) on an …\n",null,0],["hidden_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-hidden_field_tag","(name, value = nil, options = {})","<p>Creates a hidden form input field used to transmit data that would be lost due to HTTP’s statelessness …\n",null,0],["hidden_namespaces","Rails::Generators","rails/classes/Rails/Generators.html#method-c-hidden_namespaces","()","<p>Returns an array of generator namespaces that are hidden. Generator namespaces may be hidden for a variety …\n",null,0],["hide!","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-hide-21","()","<p>Convenience method to hide this generator from the available ones when running rails generator command. …\n",null,0],["hide_command!","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-hide_command-21","()","<p>Convenience method to hide this command from the available ones when running rails command.\n",null,0],["hide_cursor","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-hide_cursor","()","",null,1],["hide_cursor","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-hide_cursor","()","",null,1],["hide_cursor","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-hide_cursor","()","",null,1],["hide_namespace","Rails::Generators","rails/classes/Rails/Generators.html#method-c-hide_namespace","(*namespaces)","",null,0],["hide_namespaces","Rails::Generators","rails/classes/Rails/Generators.html#method-c-hide_namespaces","(*namespaces)","",null,0],["hierarchical?","URI::Generic","ruby/classes/URI/Generic.html#method-i-hierarchical-3F","()","<p>Returns true if URI is hierarchical.\n<p>Description\n<p>URI has components listed in order of decreasing significance …\n",null,1],["hierarchical?","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-hierarchical-3F","()","<p>Checks if URI has a path. For URI::LDAP this will return <code>false</code>.\n",null,1],["high_precision_current_timestamp","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-high_precision_current_timestamp","()","<p>Returns an Arel SQL literal for the CURRENT_TIMESTAMP for usage with arbitrary precision date/time columns. …\n",null,0],["high_precision_current_timestamp","ActiveRecord::ConnectionAdapters::MySQL::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/DatabaseStatements.html#method-i-high_precision_current_timestamp","()","",null,0],["high_precision_current_timestamp","ActiveRecord::ConnectionAdapters::PostgreSQL::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/DatabaseStatements.html#method-i-high_precision_current_timestamp","()","",null,0],["high_precision_current_timestamp","ActiveRecord::ConnectionAdapters::SQLite3::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3/DatabaseStatements.html#method-i-high_precision_current_timestamp","()","",null,0],["highlight","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-highlight","(text, phrases, options = {}, &block)","<p>Highlights one or more <code>phrases</code> everywhere in <code>text</code> by inserting it into a <code>:highlighter</code> string. The highlighter …\n",null,0],["history_file","IRB::Context","ruby/classes/IRB/Context.html#method-i-history_file","()","<p>A copy of the default <code>IRB.conf[:HISTORY_FILE]</code>\n",null,1],["history_file=","IRB::Context","ruby/classes/IRB/Context.html#method-i-history_file-3D","(hist)","<p>Set <code>IRB.conf[:HISTORY_FILE]</code> to the given <code>hist</code>.\n",null,1],["history_search_backward","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-history_search_backward","(key, arg: 1)","",null,1],["history_search_forward","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-history_search_forward","(key, arg: 1)","",null,1],["hkdf","OpenSSL::KDF","ruby/classes/OpenSSL/KDF.html#method-c-hkdf","(p1, p2 = {})","<p>HMAC-based Extract-and-Expand Key Derivation Function (HKDF) as specified in RFC 5869.\n<p>New in OpenSSL …\n",null,1],["holds_all_syntax_errors?","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-holds_all_syntax_errors-3F","(block_array = @queue, can_cache: true)","<p>Returns true if the document is valid with all lines removed. By default it checks all blocks in present …\n",null,1],["home","Bundler","ruby/classes/Bundler.html#method-c-home","()","",null,1],["home","Dir","ruby/classes/Dir.html#method-c-home","(*args)","<p>Retruns the home directory path of the user specified with <code>user_name</code> if it is not <code>nil</code>, or the current …\n",null,1],["home","RDoc","ruby/classes/RDoc.html#method-c-home","()","<p>Seaches and returns the directory for settings.\n<p><code>$HOME/.rdoc</code> directory, if it exists.\n<p>The <code>rdoc</code> directory …\n",null,1],["home_workspace","IRB::Context","ruby/classes/IRB/Context.html#method-i-home_workspace","()","<p>Inherited from <code>TOPLEVEL_BINDING</code>.\n",null,1],["hook_for","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-hook_for","(*names, &block)","<p>Invoke a generator based on the value supplied by the user to the given option named “name”. …\n",null,0],["host","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-host","()","<p>Returns the host for this request, such as “example.com”.\n\n<pre><code>req = ActionDispatch::Request.new ...\n</code></pre>\n",null,0],["host","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-host","()","",null,0],["host","Gem","ruby/classes/Gem.html#method-c-host","()","<p>Get the default RubyGems API host. This is normally <code>https://rubygems.org</code>.\n",null,1],["host","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-host","()","<p>The host to connect to either from the RUBYGEMS_HOST environment variable or from the user’s configuration …\n",null,1],["host=","Gem","ruby/classes/Gem.html#method-c-host-3D","(host)","<p>Set the default RubyGems API host.\n",null,1],["host=","URI::Generic","ruby/classes/URI/Generic.html#method-i-host-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["host_with_port","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-host_with_port","()","<p>Returns a host:port string for this request, such as “example.com” or “example.com:8080”. …\n",null,0],["hostname","URI::Generic","ruby/classes/URI/Generic.html#method-i-hostname","()","<p>Extract the host part of the URI and unwrap brackets for IPv6 addresses.\n<p>This method is the same as URI::Generic#host …\n",null,1],["hostname=","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-hostname-3D","(p1)","<p>Sets the server hostname used for SNI. This needs to be set before SSLSocket#connect.\n",null,1],["hostname=","URI::Generic","ruby/classes/URI/Generic.html#method-i-hostname-3D","(v)","<p>Sets the host part of the URI as the argument with brackets for IPv6 addresses.\n<p>This method is the same …\n",null,1],["hostname_error","ActiveRecord::DatabaseConnectionError","rails/classes/ActiveRecord/DatabaseConnectionError.html#method-c-hostname_error","(hostname)","",null,0],["hour","Numeric","rails/classes/Numeric.html#method-i-hour","()","",null,0],["hour","DateTime","ruby/classes/DateTime.html#method-i-hour","()","<p>Returns the hour in range (0..23):\n\n<pre><code>DateTime.new(2001, 2, 3, 4, 5, 6).hour # =&gt; 4\n</code></pre>\n",null,1],["hour","Time","ruby/classes/Time.html#method-i-hour","()","<p>Returns the integer hour of the day for <code>self</code>, in range (0..23):\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, 6)\n# ...\n</code></pre>\n",null,1],["hours","Numeric","rails/classes/Numeric.html#method-i-hours","()","<p>Returns a Duration instance matching the number of hours provided.\n\n<pre><code>2.hours # =&gt; 2 hours\n</code></pre>\n",null,0],["hstore","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-hstore","","",null,0],["html","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-html","(attributes = {})","<p>Generate a top-level HTML element as a string.\n<p>The attributes of the element are specified as a hash. …\n",null,1],["html","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-html","","<p>Allow HTML\n",null,1],["html?","Mime::AllType","rails/classes/Mime/AllType.html#method-i-html-3F","()","",null,0],["html?","Mime::Type","rails/classes/Mime/Type.html#method-i-html-3F","()","",null,0],["html_escape","ERB::Util","rails/classes/ERB/Util.html#method-c-html_escape","(s)","<p>A utility method for escaping HTML tag characters. This method is also aliased as <code>h</code>.\n\n<pre><code>puts html_escape(&#39;is ...\n</code></pre>\n",null,0],["html_escape","ERB::Escape","ruby/classes/ERB/Escape.html#method-c-html_escape","(s)","",null,1],["html_escape_once","ERB::Util","rails/classes/ERB/Util.html#method-c-html_escape_once","(s)","<p>A utility method for escaping HTML without affecting existing escaped entities.\n\n<pre><code>html_escape_once(&#39;1 &lt; ...\n</code></pre>\n",null,0],["html_name","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-html_name","()","<p>HTML id-friendly version of <code>#new_name</code>.\n",null,1],["html_name","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-html_name","()","<p>HTML id-friendly method/attribute name\n",null,1],["html_safe","String","rails/classes/String.html#method-i-html_safe","()","<p>Marks a string as trusted safe. It will be inserted into HTML with no additional escaping performed. …\n",null,0],["html_safe?","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-html_safe-3F","()","",null,0],["html_safe?","Numeric","rails/classes/Numeric.html#method-i-html_safe-3F","()","",null,0],["html_safe?","Object","rails/classes/Object.html#method-i-html_safe-3F","()","",null,0],["hton","IPAddr","ruby/classes/IPAddr.html#method-i-hton","()","<p>Returns a network byte ordered string form of the IP address.\n",null,1],["http_auth_salt","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-http_auth_salt","()","",null,0],["http_basic_authenticate_or_request_with","ActionController::HttpAuthentication::Basic::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-http_basic_authenticate_or_request_with","(name:, password:, realm: nil, message: nil)","",null,0],["http_basic_authenticate_with","ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html#method-i-http_basic_authenticate_with","(name:, password:, realm: nil, **options)","<p>Enables HTTP Basic authentication.\n<p>See ActionController::HttpAuthentication::Basic for example usage. …\n",null,0],["http_cache_forever","ActionController::ConditionalGet","rails/classes/ActionController/ConditionalGet.html#method-i-http_cache_forever","(public: false)","<p>Cache or yield the block. The cache is supposed to never expire.\n<p>You can use this method when you have …\n",null,0],["http_default_port","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-http_default_port","()","<p>Returns integer <code>80</code>, the default port to use for HTTP requests:\n\n<pre><code>Net::HTTP.http_default_port # =&gt; 80\n</code></pre>\n",null,1],["http_header","CGI","ruby/classes/CGI.html#method-i-http_header","(options='text/html')","<p>Create an HTTP header block as a string.\n<p>Includes the empty line that ends the header block.\n<p><code>content_type_string</code> … &mdash; ",null,1],["http_url","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-http_url","(prefix)","<p>URL for this with a <code>prefix</code>\n",null,1],["http_url","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-http_url","(prefix)","<p>URL for this with a <code>prefix</code>\n",null,1],["httpdate","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-httpdate","()","<p>Returns a string of the object’s date and time in the format used by HTTP requests.\n\n<pre><code>Time.zone.now.httpdate ...\n</code></pre>\n",null,0],["httpdate","Date","ruby/classes/Date.html#method-c-httpdate","(p1 = v1, p2 = v2, p3 = {})","<p>Returns a new Date object with values parsed from <code>string</code>, which should be a valid HTTP date format:\n\n<pre><code>d ...\n</code></pre>\n",null,1],["httpdate","Date","ruby/classes/Date.html#method-i-httpdate","()","<p>Equivalent to #strftime with argument <code>&#39;%a, %d %b %Y %T GMT&#39;</code>; see Formats for Dates and Times …\n",null,1],["httpdate","DateTime","ruby/classes/DateTime.html#method-c-httpdate","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a new DateTime object by parsing from a string according to some RFC 2616 format.\n\n<pre><code>DateTime.httpdate(&#39;Sat, ...\n</code></pre>\n",null,1],["httpdate","Time","ruby/classes/Time.html#method-i-httpdate","()","<p>Returns a string which represents the time as RFC 1123 date of HTTP-date defined by RFC 2616:\n\n<pre><code>day-of-week, ...\n</code></pre>\n",null,1],["httpdate","Time","ruby/classes/Time.html#method-c-httpdate","(date)","<p>Parses <code>date</code> as an HTTP-date defined by RFC 2616 and converts it to a Time object.\n<p>ArgumentError is raised …\n",null,1],["httponly=","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-httponly-3D","(val)","<p>Set whether the Cookie is a httponly cookie or not.\n<p><code>val</code> must be a boolean.\n",null,1],["https?","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-https-3F","(uri)","",null,1],["https_default_port","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-https_default_port","()","<p>Returns integer <code>443</code>, the default port to use for HTTPS requests:\n\n<pre><code>Net::HTTP.https_default_port # =&gt; 443\n</code></pre>\n",null,1],["human","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-human","(options = {})","<p>Transform the model name into a more human format, using I18n. By default, it will underscore then humanize …\n",null,0],["human","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-human","(rule, replacement)","<p>Specifies a humanized form of a string by a regular expression rule or by a string mapping. When using …\n",null,0],["human_attribute_name","ActiveModel::Translation","rails/classes/ActiveModel/Translation.html#method-i-human_attribute_name","(attribute, options = {})","<p>Transforms attribute names into a more human format, such as “First name” instead of “first_name”. …\n",null,0],["human_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-human_name","()","",null,0],["humanize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-humanize","(lower_case_and_underscored_word, capitalize: true, keep_id_suffix: false)","<p>Tweaks an attribute name for display to end users.\n<p>Specifically, performs these transformations:\n<p>Applies …\n",null,0],["humanize","String","rails/classes/String.html#method-i-humanize","(capitalize: true, keep_id_suffix: false)","<p>Capitalizes the first word, turns underscores into spaces, and (by default)strips a trailing ‘_id’ …\n",null,0],["hypot","Math","ruby/classes/Math.html#method-c-hypot","(p1, p2)","<p>Returns <code>sqrt(a**2 + b**2)</code>, which is the length of the longest side <code>c</code> (the hypotenuse) of the right triangle …\n",null,1],["i","Numeric","ruby/classes/Numeric.html#method-i-i","()","<p>Returns <code>Complex(0, self)</code>:\n\n<pre><code>2.i              # =&gt; (0+2i)\n-2.i             # =&gt; (0-2i)\n2.0.i            # ...\n</code></pre>\n",null,1],["i18n_scope","ActiveModel::Translation","rails/classes/ActiveModel/Translation.html#method-i-i18n_scope","()","<p>Returns the <code>i18n_scope</code> for the class. Override if you want custom lookup.\n",null,0],["i18n_scope","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-i18n_scope","()","",null,0],["iconv","JSON","ruby/classes/JSON.html#method-c-iconv","(to, from, string)","<p>Encodes string using String.encode.\n",null,1],["id","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-id","()","<p>Generate an HTML <code>id</code> attribute value.\n<p>return the <code>&lt;form&gt;</code> element’s <code>id</code> attribute.\n\n<pre><code>&lt;%= form_for @post ...\n</code></pre>\n",null,0],["id","ActiveRecord::AttributeMethods::PrimaryKey","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id","()","<p>Returns the primary key column’s value.\n",null,0],["id","ActiveRecord::Encryption::Key","rails/classes/ActiveRecord/Encryption/Key.html#method-i-id","()","",null,0],["id","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-id","()","<p>Gets the id for this engine.\n\n<pre><code>OpenSSL::Engine.load\nOpenSSL::Engine.engines #=&gt; [#&lt;OpenSSL::Engine#&gt;, ...] ...\n</code></pre>\n",null,1],["id","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-id","()","<p>Returns the Session ID.\n",null,1],["id2name","Symbol","ruby/classes/Symbol.html#method-i-id2name","()","<p>Returns a string representation of <code>self</code> (not including the leading colon):\n\n<pre><code>:foo.to_s # =&gt; &quot;foo&quot;\n</code></pre>\n<p>Related: …\n",null,1],["id=","ActiveRecord::AttributeMethods::PrimaryKey","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3D","(value)","<p>Sets the primary key column’s value.\n",null,0],["id?","ActiveRecord::AttributeMethods::PrimaryKey","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3F","()","<p>Queries the primary key column’s value.\n",null,0],["id_before_type_cast","ActiveRecord::AttributeMethods::PrimaryKey","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id_before_type_cast","()","<p>Returns the primary key column’s value before type cast.\n",null,0],["id_in_database","ActiveRecord::AttributeMethods::PrimaryKey","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id_in_database","()","<p>Returns the primary key column’s value from the database.\n",null,0],["id_was","ActiveRecord::AttributeMethods::PrimaryKey","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id_was","()","<p>Returns the primary key column’s previous value.\n",null,0],["ident","Syslog","ruby/classes/Syslog.html#method-c-ident","()","<p>Returns the identity string used in the last call to open()\n",null,1],["identical?","File","ruby/classes/File.html#method-c-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n<p><em>file_1</em> and <em>file_2</em> can be an IO object.\n\n<pre><code>open(&quot;a&quot;, &quot;w&quot;) {} ...\n</code></pre>\n",null,1],["identical?","FileTest","ruby/classes/FileTest.html#method-i-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n<p><em>file_1</em> and <em>file_2</em> can be an IO object.\n\n<pre><code>open(&quot;a&quot;, &quot;w&quot;) {} ...\n</code></pre>\n",null,1],["identical?","FileUtils","ruby/classes/FileUtils.html#method-c-identical-3F","(a, b)","",null,1],["identified?","ActiveStorage::Blob::Identifiable","rails/classes/ActiveStorage/Blob/Identifiable.html#method-i-identified-3F","()","",null,0],["identified_by","ActionCable::Connection::Identification::ClassMethods","rails/classes/ActionCable/Connection/Identification/ClassMethods.html#method-i-identified_by","(*identifiers)","<p>Mark a key as being a connection identifier index that can then be used to find the specific connection …\n",null,0],["identifier","ActionCable::SubscriptionAdapter::Base","rails/classes/ActionCable/SubscriptionAdapter/Base.html#method-i-identifier","()","",null,0],["identify","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-identify","(label, column_type = :integer)","<p>Returns a consistent, platform-independent identifier for <code>label</code>. Integer identifiers are values less …\n",null,0],["identify","ActiveStorage::Blob::Identifiable","rails/classes/ActiveStorage/Blob/Identifiable.html#method-i-identify","()","",null,0],["identify_without_saving","ActiveStorage::Blob::Identifiable","rails/classes/ActiveStorage/Blob/Identifiable.html#method-i-identify_without_saving","()","",null,0],["identity","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-identity","()","",null,1],["idle_time","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-idle_time","()","<p>Returns the idle time time (in milliseconds) passed since the call to <code>start!</code> and the call to <code>finish!</code> …\n",null,0],["idle_timeout","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-idle_timeout","()","",null,0],["ids","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-ids","()","<p>Pluck all the ID’s for the relation using the table’s primary key\n\n<pre><code>Person.ids # SELECT people.id ...\n</code></pre>\n",null,0],["if_modified_since","ActionDispatch::Http::Cache::Request","rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_modified_since","()","",null,0],["if_modified_since","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-if_modified_since","(req, res, path = nil)","<p>Handles the If-Modified-Since HTTP header on <code>req</code> for <code>path</code>.  If the file has not been modified a Not  …\n",null,1],["if_none_match","ActionDispatch::Http::Cache::Request","rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_none_match","()","",null,0],["if_none_match_etags","ActionDispatch::Http::Cache::Request","rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_none_match_etags","()","",null,0],["ifindex","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-ifindex","()","<p>Returns the interface index of <em>ifaddr</em>.\n",null,1],["iflush","IO","ruby/classes/IO.html#method-i-iflush","()","<p>Flushes input buffer in kernel.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["ignore","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-ignore","()","<p>Use this to ignore a CodeObject and all its children until found again (#record_location is called). …\n",null,1],["ignore_case?","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-ignore_case-3F","()","",null,0],["ignore_deadlock","Thread","ruby/classes/Thread.html#method-c-ignore_deadlock","()","<p>Returns the status of the global “ignore deadlock” condition. The default is <code>false</code>, so that …\n",null,1],["ignore_deadlock=","Thread","ruby/classes/Thread.html#method-c-ignore_deadlock-3D","(p1)","<p>Returns the new state. When set to <code>true</code>, the VM will not check for deadlock conditions. It is only useful …\n",null,1],["ignore_newline?","SyntaxSuggest::LexValue","ruby/classes/SyntaxSuggest/LexValue.html#method-i-ignore_newline-3F","()","",null,1],["ignore_newline_not_beg?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-ignore_newline_not_beg-3F","()","<p>Not stable API &mdash; Lines that have a ‘on_ignored_nl` type token and NOT a `BEG` type seem to be a good proxy …\n",null,1],["ignored?","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-ignored-3F","()","<p>Has this class been ignored?\n<p>See also #ignore\n",null,1],["ignored_columns","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-ignored_columns","()","<p>The list of columns names the model should ignore. Ignored columns won’t have attribute accessors …\n",null,0],["ignored_columns=","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-ignored_columns-3D","(columns)","<p>Sets the columns names the model should ignore. Ignored columns won’t have attribute accessors defined, …\n",null,0],["imag","Complex","ruby/classes/Complex.html#method-i-imag","()","<p>Returns the imaginary value for <code>self</code>:\n\n<pre><code>Complex(7).imaginary      #=&gt; 0\nComplex(9, -4).imaginary  #=&gt; -4\n</code></pre>\n",null,1],["imag","Numeric","ruby/classes/Numeric.html#method-i-imag","()","",null,1],["image","ActiveStorage::Preview","rails/classes/ActiveStorage/Preview.html#method-i-image","()","<p>Returns the blob’s attached preview image.\n",null,0],["image","ActiveStorage::Variant","rails/classes/ActiveStorage/Variant.html#method-i-image","()","<p>Returns the receiving variant. Allows ActiveStorage::Variant and ActiveStorage::Preview instances to …\n",null,0],["image","ActiveStorage::VariantWithRecord","rails/classes/ActiveStorage/VariantWithRecord.html#method-i-image","()","",null,0],["image?","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-image-3F","()","<p>Returns true if the content_type of this blob is in the image range, like image/png.\n",null,0],["image_button","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-image_button","(src = \"\", name = nil, alt = nil)","<p>Generate an Image Button Input element as a string.\n<p><code>src</code> is the URL of the image to use for the button. …\n",null,1],["image_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-image_path","(source, options = {})","<p>Computes the path to an image asset. Full paths from the document root will be passed through. Used internally …\n",null,0],["image_submit_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-image_submit_tag","(source, options = {})","<p>Displays an image which when clicked will submit the form.\n<p><code>source</code> is passed to AssetTagHelper#path_to_image …\n",null,0],["image_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_tag","(source, options = {})","<p>Returns an HTML image tag for the <code>source</code>. The <code>source</code> can be a full path, a file, or an Active Storage …\n",null,0],["image_url","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-image_url","(source, options = {})","<p>Computes the full URL to an image asset. This will use <code>image_path</code> internally, so most of their behaviors …\n",null,0],["imaginary","Complex","ruby/classes/Complex.html#method-i-imaginary","()","<p>Returns the imaginary value for <code>self</code>:\n\n<pre><code>Complex(7).imaginary      #=&gt; 0\nComplex(9, -4).imaginary  #=&gt; -4\n</code></pre>\n",null,1],["imaginary","Numeric","ruby/classes/Numeric.html#method-i-imaginary","()","<p>Returns zero.\n",null,1],["img","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-img","(src = \"\", alt = \"\", width = nil, height = nil)","<p>Generate an Image element as a string.\n<p><code>src</code> is the URL of the image.  <code>alt</code> is the alternative text for the …\n",null,1],["immutable_strings_by_default=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-immutable_strings_by_default-3D","","<p>Determines whether columns should infer their type as <code>:string</code> or <code>:immutable_string</code>. This setting does …\n",null,0],["implemented_ole_types","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-implemented_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["implicit?","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-implicit-3F","()","<p>Indicate that the request is for a gem requested as a dependency of another gem\n",null,1],["implicit_conversion","","ruby/files/ruby/doc/implicit_conversion_rdoc.html","","<p>Implicit Conversions\n<p>Some Ruby methods accept one or more objects that can be either:\n<p><em>Of a given class</em> …\n",null,1],["implicit_order_column","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-implicit_order_column","","<p>The name of the column records are ordered by if no explicit order clause is used during an ordered finder …\n",null,0],["implicit_order_column=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-implicit_order_column-3D","","<p>Sets the column to sort records by when no explicit order clause is used during an ordered finder call. …\n",null,0],["import","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-import","(error, override_options = {})","<p>Imports one error. Imported errors are wrapped as a NestedError, providing access to original error object. …\n",null,0],["import","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-import","(deps)","<p>Add <code>deps</code> Gem::Dependency objects to the set.\n",null,1],["import_function","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-import_function","(name, ctype, argtype, call_type = nil)","<p>Returns a new Fiddle::Function instance at the memory address of the given <code>name</code> function.\n<p>Raises a DLError …\n",null,1],["import_symbol","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-import_symbol","(name)","<p>Returns a new Fiddle::Pointer instance at the memory address of the given <code>name</code> symbol.\n<p>Raises a DLError …\n",null,1],["import_value","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-import_value","(ty, addr)","<p>Returns a new instance of the C struct with the value <code>ty</code> at the <code>addr</code> address.\n",null,1],["in","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-in","(other)","",null,0],["in","Date","rails/classes/Date.html#method-i-in","(seconds)","",null,0],["in","DateTime","rails/classes/DateTime.html#method-i-in","(seconds)","",null,0],["in","Time","rails/classes/Time.html#method-i-in","(seconds)","",null,0],["in?","Object","rails/classes/Object.html#method-i-in-3F","(another_object)","<p>Returns true if this object is included in the argument. Argument must be any object which responds to …\n",null,0],["in_batches","ActiveRecord::Batches","rails/classes/ActiveRecord/Batches.html#method-i-in_batches","(of: 1000, start: nil, finish: nil, load: false, error_on_ignore: nil, order: :asc)","<p>Yields ActiveRecord::Relation objects to work with a batch of records.\n\n<pre><code>Person.where(&quot;age &gt; 21&quot;).in_batches ...\n</code></pre>\n",null,0],["in_days","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-in_days","()","<p>Returns the amount of days a duration covers as a float\n\n<pre><code>12.hours.in_days # =&gt; 0.5\n</code></pre>\n",null,0],["in_groups","Array","rails/classes/Array.html#method-i-in_groups","(number, fill_with = nil, &block)","<p>Splits or iterates over the array in <code>number</code> of groups, padding any remaining slots with <code>fill_with</code> unless …\n",null,0],["in_groups_of","Array","rails/classes/Array.html#method-i-in_groups_of","(number, fill_with = nil, &block)","<p>Splits or iterates over the array in groups of size <code>number</code>, padding any remaining slots with <code>fill_with</code> …\n",null,0],["in_hours","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-in_hours","()","<p>Returns the amount of hours a duration covers as a float\n\n<pre><code>1.day.in_hours # =&gt; 24.0\n</code></pre>\n",null,0],["in_milliseconds","Numeric","rails/classes/Numeric.html#method-i-in_milliseconds","()","<p>Returns the number of milliseconds equivalent to the seconds provided. Used with the standard time durations. …\n",null,0],["in_minutes","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-in_minutes","()","<p>Returns the amount of minutes a duration covers as a float\n\n<pre><code>1.day.in_minutes # =&gt; 1440.0\n</code></pre>\n",null,0],["in_months","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-in_months","()","<p>Returns the amount of months a duration covers as a float\n\n<pre><code>9.weeks.in_months # =&gt; 2.07\n</code></pre>\n",null,0],["in_order_of","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-in_order_of","(column, values)","<p>Allows to specify an order by a specific set of values.\n\n<pre><code>User.in_order_of(:id, [1, 5, 3])\n# SELECT &quot;users&quot;.* ...\n</code></pre>\n",null,0],["in_order_of","Enumerable","rails/classes/Enumerable.html#method-i-in_order_of","(key, series)","<p>Returns a new <code>Array</code> where the order has been set to that provided in the <code>series</code>, based on the <code>key</code> of …\n",null,0],["in_pasting?","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-in_pasting-3F","()","",null,1],["in_pasting?","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-in_pasting-3F","()","",null,1],["in_pasting?","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-in_pasting-3F","()","",null,1],["in_rendering_context","ActionView::Base","rails/classes/ActionView/Base.html#method-i-in_rendering_context","(options)","",null,0],["in_seconds","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-in_seconds","()","",null,0],["in_time_zone","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-in_time_zone","(new_zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>, or the specified zone.\n",null,0],["in_time_zone","DateAndTime::Zones","rails/classes/DateAndTime/Zones.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code> if a zone is given or if Time.zone_default is set. Otherwise …\n",null,0],["in_time_zone","String","rails/classes/String.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Converts String to a TimeWithZone in the current zone if Time.zone or Time.zone_default is set, otherwise …\n",null,0],["in_weeks","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-in_weeks","()","<p>Returns the amount of weeks a duration covers as a float\n\n<pre><code>2.months.in_weeks # =&gt; 8.696\n</code></pre>\n",null,0],["in_years","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-in_years","()","<p>Returns the amount of years a duration covers as a float\n\n<pre><code>30.days.in_years # =&gt; 0.082\n</code></pre>\n",null,0],["inc","OptionParser","ruby/classes/OptionParser.html#method-i-inc","(*args)","",null,1],["inc","OptionParser","ruby/classes/OptionParser.html#method-c-inc","(arg, default = nil)","<p>Returns an incremented value of <code>default</code> according to <code>arg</code>.\n",null,1],["incinerate","ActionMailbox::InboundEmail::Incineratable","rails/classes/ActionMailbox/InboundEmail/Incineratable.html#method-i-incinerate","()","",null,0],["incinerate_later","ActionMailbox::InboundEmail::Incineratable","rails/classes/ActionMailbox/InboundEmail/Incineratable.html#method-i-incinerate_later","()","",null,0],["include","Module","ruby/classes/Module.html#method-i-include","(*args)","<p>Invokes Module.append_features on each parameter in reverse order.\n",null,1],["include?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-include-3F","","<p>Returns true if the given key is present in the parameters.\n",null,0],["include?","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-include-3F","(key)","",null,0],["include?","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-include-3F","(attribute)","<p>Returns <code>true</code> if the error messages include an error for the given key <code>attribute</code>, <code>false</code> otherwise.\n\n<pre><code>person.errors.messages ...\n</code></pre>\n",null,0],["include?","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-include-3F","(record)","<p>Returns <code>true</code> if the given <code>record</code> is present in the collection.\n\n<pre><code>class Person &lt; ActiveRecord::Base\n  has_many ...\n</code></pre>\n",null,0],["include?","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-include-3F","(record)","<p>Returns true if the relation contains the given record or false otherwise.\n<p>No query is performed if the …\n",null,0],["include?","ActiveSupport::CompareWithRange","rails/classes/ActiveSupport/CompareWithRange.html#method-i-include-3F","(value)","<p>Extends the default Range#include? to support range comparisons.\n\n<pre><code>(1..5).include?(1..5)  # =&gt; true\n(1..5).include?(2..3) ...\n</code></pre>\n",null,0],["include?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-include-3F","(key)","",null,0],["include?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-include-3F","(key)","",null,0],["include?","Array","ruby/classes/Array.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if for some index <code>i</code> in <code>self</code>, <code>obj == self[i]</code>; otherwise <code>false</code>:\n\n<pre><code>[0, 1, 2].include?(2) # =&gt; ...\n</code></pre>\n",null,1],["include?","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-include-3F","(*args)","",null,1],["include?","CSV::Row","ruby/classes/CSV/Row.html#method-i-include-3F","(header)","",null,1],["include?","ENV","ruby/classes/ENV.html#method-c-include-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the given <code>name</code>:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; ...\n</code></pre>\n",null,1],["include?","Enumerable","ruby/classes/Enumerable.html#method-i-include-3F","(p1)","<p>Returns whether for any element <code>object == element</code>:\n\n<pre><code>(1..4).include?(2)                       # =&gt; true ...\n</code></pre>\n",null,1],["include?","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-include-3F","(other)","<p>Returns true if this source list includes <code>other</code> which may be a Gem::Source or a source URI.\n",null,1],["include?","Hash","ruby/classes/Hash.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["include?","IPAddr","ruby/classes/IPAddr.html#method-i-include-3F","(other)","<p>Returns true if the given ipaddr is in the range.\n<p>e.g.:\n\n<pre><code>require &#39;ipaddr&#39;\nnet1 = IPAddr.new(&quot;192.168.2.0/24&quot;) ...\n</code></pre>\n",null,1],["include?","Module","ruby/classes/Module.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>module</em> is included or prepended in <em>mod</em> or one of <em>mod</em>’s ancestors.\n\n<pre><code>module A\nend\nclass ...\n</code></pre>\n",null,1],["include?","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["include?","Range","ruby/classes/Range.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <code>object</code> is an element of <code>self</code>, <code>false</code> otherwise:\n\n<pre><code>(1..4).include?(2)        # =&gt; true\n(1..4).include?(5) ...\n</code></pre>\n",null,1],["include?","Set","ruby/classes/Set.html#method-i-include-3F","(o)","<p>Returns true if the set contains the given object.\n<p>Note that <code>include?</code> and <code>member?</code> do not test member\nequality ...\n",null,1],["include?","String","ruby/classes/String.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> contains <code>other_string</code>, <code>false</code> otherwise:\n\n<pre><code>s = &#39;foo&#39;\ns.include?(&#39;f&#39;)    # =&gt; true\ns.include?(&#39;fo&#39;) ...\n</code></pre>\n",null,1],["included","ActiveModel::Validations::AcceptanceValidator::LazilyDefineAttributes","rails/classes/ActiveModel/Validations/AcceptanceValidator/LazilyDefineAttributes.html#method-i-included","(klass)","",null,0],["included","ActiveSupport::Concern","rails/classes/ActiveSupport/Concern.html#method-i-included","(base = nil, &block)","<p>Evaluate given block in context of base class, so that you can write class macros here. When you define …\n",null,0],["included","ActiveSupport::Deprecation::DeprecatedConstantAccessor","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantAccessor.html#method-c-included","(base)","",null,0],["included","OpenSSL::Marshal","ruby/classes/OpenSSL/Marshal.html#method-c-included","(base)","",null,1],["included","Syslog::Constants","ruby/classes/Syslog/Constants.html#method-c-included","(p1)","",null,1],["included","Syslog::Macros","ruby/classes/Syslog/Macros.html#method-c-included","(p1)","",null,1],["included_modules","Module","ruby/classes/Module.html#method-i-included_modules","()","<p>Returns the list of modules included or prepended in <em>mod</em> or one of <em>mod</em>’s ancestors.\n\n<pre><code>module Sub\nend ...\n</code></pre>\n",null,1],["includes","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-includes","(*args)","<p>Specify relationships to be included in the result set. For example:\n\n<pre><code>users = User.includes(:address)\nusers.each ...\n</code></pre>\n",null,0],["includes_column?","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-includes_column-3F","(name)","<p>Returns true if this result set includes the column named <code>name</code>\n",null,0],["including","Array","rails/classes/Array.html#method-i-including","(*elements)","<p>Returns a new array that includes the passed elements.\n\n<pre><code>[ 1, 2, 3 ].including(4, 5) # =&gt; [ 1, 2, 3, 4, ...\n</code></pre>\n",null,0],["including","Enumerable","rails/classes/Enumerable.html#method-i-including","(*elements)","<p>Returns a new array that includes the passed elements.\n\n<pre><code>[ 1, 2, 3 ].including(4, 5)\n# =&gt; [ 1, 2, 3, 4, ...\n</code></pre>\n",null,0],["incompatible_argument_styles","OptionParser::Switch","ruby/classes/OptionParser/Switch.html#method-c-incompatible_argument_styles","(arg, t)","",null,1],["incompatible_argument_styles","OptionParser::Switch::NoArgument","ruby/classes/OptionParser/Switch/NoArgument.html#method-c-incompatible_argument_styles","(*)","",null,1],["incomplete_input?","Encoding::InvalidByteSequenceError","ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-incomplete_input-3F","()","<p>Returns true if the invalid byte sequence error is caused by premature end of string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...\n</code></pre>\n",null,1],["increment","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-increment","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and adds the value passed as <code>by</code> (default is 1). The increment is …\n",null,0],["increment","ActiveSupport::Cache::FileStore","rails/classes/ActiveSupport/Cache/FileStore.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increments an already existing integer value that is stored in the cache. If the key is not found nothing …\n",null,0],["increment","ActiveSupport::Cache::MemCacheStore","rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment a cached value. This method uses the memcached incr atomic operator and can only be used on …\n",null,0],["increment","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n",null,0],["increment","ActiveSupport::Cache::NullStore","rails/classes/ActiveSupport/Cache/NullStore.html#method-i-increment","(name, amount = 1, options = nil)","",null,0],["increment","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-increment","(name, amount = 1, options = nil)","<p>Cache Store API implementation.\n<p>Increment a cached value. This method uses the Redis incr atomic operator …\n",null,0],["increment","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increments an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>Some …\n",null,0],["increment!","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-increment-21","(attribute, by = 1, touch: nil)","<p>Wrapper around #increment that writes the update to the database. Only <code>attribute</code> is updated; the record …\n",null,0],["increment_counter","ActiveRecord::CounterCache::ClassMethods","rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-increment_counter","(counter_name, id, touch: nil)","<p>Increment a numeric field by one, via a direct SQL update.\n<p>This method is used primarily for maintaining …\n",null,0],["increment_load_index","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-increment_load_index","()","",null,0],["indent","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-i-indent","(content, multiplier = 2)","",null,0],["indent","String","rails/classes/String.html#method-i-indent","(amount, indent_string = nil, indent_empty_lines = false)","<p>Indents the lines in the receiver:\n\n<pre><code>&lt;&lt;EOS.indent(2)\ndef some_method\n  some_code\nend\nEOS\n# =&gt;\n  def some_method ...\n</code></pre>\n",null,0],["indent","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-indent","()","<p>Returns the string that is used to indent levels in the JSON text.\n",null,1],["indent!","String","rails/classes/String.html#method-i-indent-21","(amount, indent_string = nil, indent_empty_lines = false)","<p>Same as <code>indent</code>, except it indents the receiver in-place.\n<p>Returns the indented string, or <code>nil</code> if there …\n",null,0],["indent=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-indent-3D","(p1)","<p>Sets the string that is used to indent levels in the JSON text.\n",null,1],["indent_index","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-indent_index","()","<p>Used for stable sort via indentation level\n<p>Ruby’s sort is not “stable” meaning that when …\n",null,1],["indentation","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-indentation","()","<p>Indent the <code>Gemfile</code> to the depth of @indentation\n",null,0],["indentation","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-indentation","()","<p>Get the indentation level.\n",null,1],["indentation=","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-indentation-3D","(p1)","<p>Set the indentation level to <code>level</code>.  The level must be less than 10 and greater than 1.\n",null,1],["index","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index","(column_name, **options)","<p>Adds a new index to the table. <code>column_name</code> can be a single Symbol, or an Array of Symbols.\n\n<pre><code>t.index(:name) ...\n</code></pre>\n",null,0],["index","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-index","(column_name, **options)","<p>Adds index options to the indexes hash, keyed by column name This is primarily used to track indexes …\n",null,0],["index","Rails::Rails::Conductor::ActionMailbox::InboundEmailsController","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmailsController.html#method-i-index","()","",null,0],["index","Array","ruby/classes/Array.html#method-i-index","(*args)","<p>Returns the index of a specified element.\n<p>When argument <code>object</code> is given but no block, returns the index …\n",null,1],["index","CSV::Row","ruby/classes/CSV/Row.html#method-i-index","(header, minimum_index = 0)","<p>Returns the index for the given header, if it exists; otherwise returns <code>nil</code>.\n<p>With the single argument …\n",null,1],["index","String","ruby/classes/String.html#method-i-index","(p1, p2 = v2)","<p>Returns the integer index of the first match for the given argument, or <code>nil</code> if none found; the search …\n",null,1],["index","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-index","( keystr )","<p>Deprecated, used YAML::DBM#key instead.\n<p>Note: YAML::DBM#index makes warning from internal of ::DBM#index …\n",null,1],["index.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/scaffold/templates/index_html_erb_tt.html","","<p>&lt;p style=“color: green”&gt;&lt;%%= notice %&gt;&lt;/p&gt;\n<p>&lt;h1&gt;&lt;%= human_name.pluralize …\n",null,0],["index.js","","rails/files/rails/actiontext/app/javascript/actiontext/index_js.html","","<p>import { AttachmentUpload } from “./attachment_upload”\n<p>addEventListener(“trix-attachment-add”, …\n",null,0],["index.js","","rails/files/rails/actioncable/app/javascript/action_cable/index_js.html","","<p>import Connection from “./connection” import ConnectionMonitor from “./connection_monitor” …\n",null,0],["index.js","","rails/files/rails/activestorage/app/javascript/activestorage/index_js.html","","<p>import { start } from “./ujs” import { DirectUpload } from “./direct_upload” export …\n",null,0],["index.js.tt","","rails/files/rails/actioncable/lib/rails/generators/channel/templates/javascript/index_js_tt.html","","<p>// Import all the channels to be used by Action Cable\n",null,0],["index_algorithms","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-index_algorithms","()","<p>A list of index algorithms, to be filled by adapters that support them.\n",null,0],["index_algorithms","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-index_algorithms","()","",null,0],["index_algorithms","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-index_algorithms","()","",null,0],["index_by","Enumerable","rails/classes/Enumerable.html#method-i-index_by","()","<p>Convert an enumerable to a hash, using the block result as the key and the element as the value.\n\n<pre><code>people.index_by(&amp;:login) ...\n</code></pre>\n",null,0],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_exists-3F","(table_name, column_name, **options)","<p>Checks to see if an index exists on a table for a given index definition.\n\n<pre><code># Check an index exists\nindex_exists?(:suppliers, ...\n</code></pre>\n",null,0],["index_exists?","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index_exists-3F","(column_name, **options)","<p>Checks to see if an index exists.\n\n<pre><code>unless t.index_exists?(:branch_id)\n  t.index(:branch_id)\nend\n</code></pre>\n<p>See connection.index_exists? …\n",null,0],["index_helper","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-index_helper","(type: nil)","",null,0],["index_name_exists?","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-index_name_exists-3F","(table_name, index_name)","<p>Verifies existence of an index with a given name.\n",null,0],["index_name_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_name_exists-3F","(table_name, index_name)","<p>Verifies the existence of an index with a given name.\n",null,0],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-index_name_length","()","<p>Returns the maximum length of an index name.\n",null,0],["index_with","Enumerable","rails/classes/Enumerable.html#method-i-index_with","(default = (no_default = true))","<p>Convert an enumerable to a hash, using the element as the key and the block result as the value.\n\n<pre><code>post ...\n</code></pre>\n",null,0],["index_with_name_deprecation.js","","rails/files/rails/actioncable/app/javascript/action_cable/index_with_name_deprecation_js.html","","<p>export * from “./index” console.log(“DEPRECATION: action_cable.js has been renamed to …\n",null,0],["indexes","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-indexes","(table_name)","",null,0],["indexes","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-indexes","(table_name)","<p>Returns an array of indexes for the given table.\n",null,0],["inet","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-inet","","",null,0],["infinite?","BigDecimal","ruby/classes/BigDecimal.html#method-i-infinite-3F","()","<p>Returns nil, -1, or +1 depending on whether the value is finite, -Infinity, or +Infinity.\n",null,1],["infinite?","Complex","ruby/classes/Complex.html#method-i-infinite-3F","()","<p>Returns <code>1</code> if either <code>self.real.infinite?</code> or <code>self.imag.infinite?</code> is true, <code>nil</code> otherwise:\n\n<pre><code>Complex(Float::INFINITY, ...\n</code></pre>\n",null,1],["infinite?","Date","ruby/classes/Date.html#method-i-infinite-3F","()","<p>Returns <code>false</code>\n",null,1],["infinite?","Float","ruby/classes/Float.html#method-i-infinite-3F","()","<p>Returns:\n<p>1, if <code>self</code> is <code>Infinity</code>.\n<p>-1 if <code>self</code> is <code>-Infinity</code>.\n",null,1],["infinite?","Numeric","ruby/classes/Numeric.html#method-i-infinite-3F","()","<p>Returns <code>nil</code>, -1, or 1 depending on whether <code>self</code> is finite, <code>-Infinity</code>, or <code>+Infinity</code>.\n",null,1],["infinity?","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-infinity-3F","()","",null,1],["inflate","Gem::Util","ruby/classes/Gem/Util.html#method-c-inflate","(data)","<p>A Zlib::Inflate#inflate wrapper\n",null,1],["inflate","Zlib","ruby/classes/Zlib.html#method-c-inflate","(p1)","<p>Decompresses <code>string</code>. Raises a Zlib::NeedDict exception if a preset dictionary is needed for decompression. …\n",null,1],["inflate","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-c-inflate","(p1)","<p>Decompresses <code>string</code>. Raises a Zlib::NeedDict exception if a preset dictionary is needed for decompression. …\n",null,1],["inflate","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-i-inflate","(p1)","<p>Inputs <code>deflate_string</code> into the inflate stream and returns the output from the stream.  Calling this method, …\n",null,1],["inflections","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-inflections","(locale = :en)","<p>Yields a singleton instance of Inflector::Inflections so you can specify additional inflector rules. …\n",null,0],["inflections.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/initializers/inflections_rb_tt.html","","<p># Be sure to restart your server when you modify this file.\n<p># Add new inflection rules using the following …\n",null,0],["info","Logger","ruby/classes/Logger.html#method-i-info","(progname = nil, &block)","<p>Equivalent to calling #add with severity <code>Logger::INFO</code>.\n",null,1],["info","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-i-info","","<p>Logs a <code>message</code> at the info (syslog info) log level, or logs the message returned from the block.\n",null,1],["info","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-info","()","<p>Returns key information as Array of: :num_keys\n\n<pre><code>The number of subkeys.\n</code></pre>\n<p>:max_key_length\n",null,1],["info!","Logger","ruby/classes/Logger.html#method-i-info-21","()","<p>Sets the log level to Logger::INFO. See Log Level.\n",null,1],["info?","Logger","ruby/classes/Logger.html#method-i-info-3F","()","<p>Returns <code>true</code> if the log level allows entries with severity Logger::INFO to be written, <code>false</code> otherwise. …\n",null,1],["ingress.rake","","rails/files/rails/actionmailbox/lib/tasks/ingress_rake.html","","<p># frozen_string_literal: true\n<p>namespace :action_mailbox do\n\n<pre><code>namespace :ingress do\n  task :environment do ...\n</code></pre>\n",null,0],["inheritable_copy","ActiveSupport::InheritableOptions","rails/classes/ActiveSupport/InheritableOptions.html#method-i-inheritable_copy","()","",null,0],["inheritance_column","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-inheritance_column","","<p>The name of the table column which stores the class name on single-table inheritance situations.\n<p>The default …\n",null,0],["inheritance_column=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-inheritance_column-3D","","<p>Defines the name of the table column which will store the class name on single-table inheritance situations. …\n",null,0],["inherited","AbstractController::Helpers::ClassMethods","rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-inherited","(klass)","<p>When a class is inherited, wrap its helper module in a new module. This ensures that the parent class’s …\n",null,0],["inherited","ActionController::ParamsWrapper::Options::ClassMethods","rails/classes/ActionController/ParamsWrapper/Options/ClassMethods.html#method-i-inherited","(klass)","<p>Sets the default wrapper key or model which will be used to determine wrapper key and attribute names. …\n",null,0],["inherited","ActionController::Railties::Helpers","rails/classes/ActionController/Railties/Helpers.html#method-i-inherited","(klass)","",null,0],["inherited","ActionController::Rendering::ClassMethods","rails/classes/ActionController/Rendering/ClassMethods.html#method-i-inherited","(klass)","",null,0],["inherited","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-inherited","(subclass)","",null,0],["inherited","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-i-inherited","(base)","",null,0],["inherited","Rails::Application","rails/classes/Rails/Application.html#method-c-inherited","(base)","",null,0],["inherited","Rails::Engine","rails/classes/Rails/Engine.html#method-c-inherited","(base)","",null,0],["inherited","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-inherited","(subclass)","",null,0],["inherited","Rails::Railtie::Configurable::ClassMethods","rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-inherited","(base)","",null,0],["inherited","Gem::Installer","ruby/classes/Gem/Installer.html#method-c-inherited","(klass)","<p>Changes in rubygems to lazily loading ‘rubygems/command` (in order to lazily load `optparse` as a side …\n",null,1],["init","Gem::PackageTask","ruby/classes/Gem/PackageTask.html#method-i-init","(gem)","<p>Initialization tasks without the “yield self” or define operations.\n",null,1],["init","IRB::Inspector","ruby/classes/IRB/Inspector.html#method-i-init","()","<p>Proc to call when the inspector is activated, good for requiring dependent libraries.\n",null,1],["init_ruby_model","IRB::RubyModel","ruby/classes/IRB/RubyModel.html#method-i-init_ruby_model","()","",null,1],["init_with","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-init_with","(coder)","",null,0],["init_with","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-init_with","(coder, &block)","<p>Initialize an empty model object from <code>coder</code>. <code>coder</code> should be the result of previously encoding an Active …\n",null,0],["initgroups","Process","ruby/classes/Process.html#method-c-initgroups","(p1, p2)","<p>Sets the supplemental group access list; the new list includes:\n<p>The group IDs of those groups to which …\n",null,1],["initialize","Gem::Package","ruby/classes/Gem/Package.html#method-i-initialize","(gem, security_policy)","<p>Creates a new package that will read or write to the file <code>gem</code>.\n",null,1],["initialize_clone","Set","ruby/classes/Set.html#method-i-initialize_clone","(orig, **options)","<p>Clone internal hash.\n",null,1],["initialize_clone","Tempfile","ruby/classes/Tempfile.html#method-i-initialize_clone","(other)","",null,1],["initialize_copy","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActionDispatch::PermissionsPolicy","rails/classes/ActionDispatch/PermissionsPolicy.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-initialize_copy","(other)","",null,0],["initialize_copy","Array","ruby/classes/Array.html#method-i-initialize_copy","(p1)","<p>Replaces the content of <code>self</code> with the content of <code>other_array</code>; returns <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.replace([&#39;foo&#39;, ...\n</code></pre>\n",null,1],["initialize_copy","CSV::Row","ruby/classes/CSV/Row.html#method-i-initialize_copy","(other)","<p>Calls superclass method.\n",null,1],["initialize_copy","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-initialize_copy","(other_spec)","<p>Duplicates Array and Gem::Requirement attributes from <code>other_spec</code> so state isn’t shared.\n",null,1],["initialize_copy","Hash","ruby/classes/Hash.html#method-i-initialize_copy","(p1)","<p>Replaces the entire contents of <code>self</code> with the contents of <code>other_hash</code>; returns <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: ...\n</code></pre>\n",null,1],["initialize_copy","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-initialize_copy","(p1)","<p>Make an internal copy of the source buffer. Updates to the copy will not affect the source buffer.\n\n<pre><code>source ...\n</code></pre>\n",null,1],["initialize_copy","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-initialize_copy","(p1)","<p>Initializes this object from orig if it can be duplicated/cloned and returns it.\n",null,1],["initialize_copy","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::OCSP::Response","ruby/classes/OpenSSL/OCSP/Response.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKCS12","ruby/classes/OpenSSL/PKCS12.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-initialize_copy","(p1)","",null,1],["initialize_copy","String","ruby/classes/String.html#method-i-initialize_copy","(p1)","<p>Replaces the contents of <code>self</code> with the contents of <code>other_string</code>:\n\n<pre><code>s = &#39;foo&#39;        # =&gt; &quot;foo&quot;\ns.replace(&#39;bar&#39;) ...\n</code></pre>\n",null,1],["initialize_copy","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-i-initialize_copy","(p1)","<p>Duplicates the deflate stream.\n",null,1],["initialize_dup","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-initialize_dup","(other)","",null,0],["initialize_dup","ActiveRecord::Inheritance","rails/classes/ActiveRecord/Inheritance.html#method-i-initialize_dup","(other)","",null,0],["initialize_dup","Set","ruby/classes/Set.html#method-i-initialize_dup","(orig)","<p>Dup internal hash.\n",null,1],["initialize_dup","Tempfile","ruby/classes/Tempfile.html#method-i-initialize_dup","(other)","",null,1],["initialize_load_schema_monitor","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-initialize_load_schema_monitor","()","",null,0],["initialize_methods_etc","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-initialize_methods_etc","()","<p>Sets the defaults for methods and so-forth\n",null,1],["initialize_readline","IRB::ReadlineInputMethod","ruby/classes/IRB/ReadlineInputMethod.html#method-c-initialize_readline","()","",null,1],["initialize_sid","ActionDispatch::Session::Compatibility","rails/classes/ActionDispatch/Session/Compatibility.html#method-i-initialize_sid","()","",null,0],["initialize_tracer","IRB","ruby/classes/IRB.html#method-c-initialize_tracer","()","<p>initialize tracing function\n",null,1],["initialized?","Rails::Application","rails/classes/Rails/Application.html#method-i-initialized-3F","()","<p>Returns true if the application is initialized.\n",null,0],["initializer","Rails::Application","rails/classes/Rails/Application.html#method-i-initializer","(name, opts = {}, &block)","<p>Sends the initializers to the <code>initializer</code> method defined in the Rails::Initializable module. Each Rails::Application …\n",null,0],["initializer","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-initializer","(filename, data = nil)","<p>Creates an initializer file in <code>config/initializers/</code>. The code can be specified as an argument or as the …\n",null,0],["initializer","Rails::Initializable::ClassMethods","rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializer","(name, opts = {}, &blk)","",null,0],["initializers","Rails::Initializable","rails/classes/Rails/Initializable.html#method-i-initializers","()","",null,0],["initializers","Rails::Initializable::ClassMethods","rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers","()","",null,0],["initializers_chain","Rails::Initializable::ClassMethods","rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_chain","()","",null,0],["initializers_for","Rails::Initializable::ClassMethods","rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_for","(binding)","",null,0],["inject","Enumerable","ruby/classes/Enumerable.html#method-i-inject","(p1 = v1, p2 = v2)","<p>Returns an object formed from operands via either:\n<p>A method named by <code>symbol</code>.\n<p>A block to which each operand …\n",null,1],["inject_into_list","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-inject_into_list","(dep_list)","",null,1],["inline","ActionMailer::Base::LateAttachmentsProxy","rails/classes/ActionMailer/Base/LateAttachmentsProxy.html#method-i-inline","()","",null,0],["inner_getc","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-inner_getc","(timeout_second)","",null,1],["ino","File::Stat","ruby/classes/File/Stat.html#method-i-ino","()","<p>Returns the inode number for <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).ino   #=&gt; 1083669\n</code></pre>\n",null,1],["inplace_mode","ARGF","ruby/classes/ARGF.html#method-i-inplace_mode","()","<p>Returns the file extension appended to the names of backup copies of modified files under in-place edit …\n",null,1],["inplace_mode=","ARGF","ruby/classes/ARGF.html#method-i-inplace_mode-3D","(p1)","<p>Sets the filename extension for in-place editing mode to the given String. The backup copy of each file …\n",null,1],["input=","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-input-3D","(val)","",null,1],["input=","Reline::Core","ruby/classes/Reline/Core.html#method-i-input-3D","(val)","",null,1],["input=","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-input-3D","(val)","",null,1],["input?","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-input-3F","()","<p>Returns true if the parameter is input.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["input_key","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-input_key","(key)","",null,1],["inputrc_path","Reline::Config","ruby/classes/Reline/Config.html#method-i-inputrc_path","()","",null,1],["inquiry","Array","rails/classes/Array.html#method-i-inquiry","()","<p>Wraps the array in an ActiveSupport::ArrayInquirer object, which gives a friendlier way to check its …\n",null,0],["inquiry","String","rails/classes/String.html#method-i-inquiry","()","<p>Wraps the current string in the ActiveSupport::StringInquirer class, which gives you a prettier way to …\n",null,0],["insert","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert","(index, klass, *args, &block)","",null,0],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert","(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])","<p>Executes an INSERT query and returns the new record’s ID\n<p><code>id_value</code> will be returned unless the value …\n",null,0],["insert","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-insert","(attributes, returning: nil, unique_by: nil, record_timestamps: nil)","<p>Inserts a single record into the database in a single SQL INSERT statement. It does not instantiate any …\n",null,0],["insert","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-insert","(index, value)","",null,0],["insert","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-insert","(...)","",null,0],["insert","Array","ruby/classes/Array.html#method-i-insert","(*args)","<p>Inserts given <code>objects</code> before or after the element at Integer index <code>offset</code>; returns <code>self</code>.\n<p>When <code>index</code> is …\n",null,1],["insert","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-insert","(irb)","<p>Add the given <code>irb</code> session to the jobs Array.\n",null,1],["insert","String","ruby/classes/String.html#method-i-insert","(p1, p2)","<p>Inserts the given <code>other_string</code> into <code>self</code>; returns <code>self</code>.\n<p>If the Integer <code>index</code> is positive, inserts <code>other_string</code> …\n",null,1],["insert!","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-insert-21","(attributes, returning: nil, record_timestamps: nil)","<p>Inserts a single record into the database in a single SQL INSERT statement. It does not instantiate any …\n",null,0],["insert_after","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_after","(index, *args, &block)","",null,0],["insert_after","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-insert_after","(...)","",null,0],["insert_all","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-insert_all","(attributes, returning: nil, unique_by: nil, record_timestamps: nil)","<p>Inserts multiple records into the database in a single SQL INSERT statement. It does not instantiate …\n",null,0],["insert_all!","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-insert_all-21","(attributes, returning: nil, record_timestamps: nil)","<p>Inserts multiple records into the database in a single SQL INSERT statement. It does not instantiate …\n",null,0],["insert_before","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_before","(index, klass, *args, &block)","",null,0],["insert_before","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-insert_before","(...)","",null,0],["insert_debug_break","IRB::Debug","ruby/classes/IRB/Debug.html#method-c-insert_debug_break","(pre_cmds: nil, do_cmds: nil)","",null,1],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_fixture","(fixture, table_name)","<p>Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple …\n",null,0],["insert_fixtures_set","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_fixtures_set","(fixture_set, tables_to_delete = [])","",null,0],["insert_output","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-insert_output","(p1)","<p>Inserts string into the encoding converter. The string will be converted to the destination encoding …\n",null,1],["insert_text","Reline","ruby/classes/Reline.html#method-c-insert_text","(*args, &block)","",null,1],["insert_text","Reline","ruby/classes/Reline.html#method-c-insert_text","(*args, &block)","",null,1],["insert_text","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-insert_text","(text)","",null,1],["inside_template","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-inside_template","()","",null,0],["inside_template?","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-inside_template-3F","()","",null,0],["inspect","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-inspect","()","",null,0],["inspect","ActionDispatch::MiddlewareStack::Middleware","rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-inspect","()","",null,0],["inspect","ActionDispatch::Routing::PathRedirect","rails/classes/ActionDispatch/Routing/PathRedirect.html#method-i-inspect","()","",null,0],["inspect","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-i-inspect","()","",null,0],["inspect","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-i-inspect","()","",null,0],["inspect","ActionText::Content","rails/classes/ActionText/Content.html#method-i-inspect","()","",null,0],["inspect","ActionView::Base","rails/classes/ActionView/Base.html#method-c-inspect","()","",null,0],["inspect","ActionView::Template","rails/classes/ActionView/Template.html#method-i-inspect","()","",null,0],["inspect","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-inspect","()","<p>Returns the contents of the record as a nicely formatted string.\n",null,0],["inspect","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-inspect","()","",null,0],["inspect","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-inspect","()","",null,0],["inspect","ActiveSupport::Deprecation::DeprecatedConstantProxy","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html#method-i-inspect","()","<p>Don’t give a deprecation warning on inspect since test/unit and error logs rely on it for diagnostics. …\n",null,0],["inspect","ActiveSupport::OrderedOptions","rails/classes/ActiveSupport/OrderedOptions.html#method-i-inspect","()","",null,0],["inspect","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-inspect","()","<p>Returns a string of the object’s date, time, zone, and offset from UTC.\n\n<pre><code>Time.zone.now.inspect # =&gt; ...\n</code></pre>\n",null,0],["inspect","Date","rails/classes/Date.html#method-i-inspect","()","",null,0],["inspect","DateTime","rails/classes/DateTime.html#method-i-inspect","()","",null,0],["inspect","Rails::Info","rails/classes/Rails/Info.html#method-c-inspect","()","",null,0],["inspect","ARGF","ruby/classes/ARGF.html#method-i-inspect","()","<p>Returns “ARGF”.\n",null,1],["inspect","Addrinfo","ruby/classes/Addrinfo.html#method-i-inspect","()","<p>returns a string which shows addrinfo in human-readable form.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).inspect #=&gt; ...\n</code></pre>\n",null,1],["inspect","Array","ruby/classes/Array.html#method-i-inspect","()","<p>Returns the new String formed by calling method <code>#inspect</code> on each array element:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.inspect ...\n</code></pre>\n",null,1],["inspect","BigDecimal","ruby/classes/BigDecimal.html#method-i-inspect","()","<p>Returns a string representation of self.\n\n<pre><code>BigDecimal(&quot;1234.5678&quot;).inspect\n  #=&gt; &quot;0.12345678e4&quot;\n</code></pre>\n",null,1],["inspect","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-inspect","()","<p>A summary of cookie string.\n",null,1],["inspect","CSV","ruby/classes/CSV.html#method-i-inspect","()","<p>Returns a String showing certain properties of <code>self</code>:\n\n<pre><code>string = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot;\ncsv ...\n</code></pre>\n",null,1],["inspect","CSV::Row","ruby/classes/CSV/Row.html#method-i-inspect","()","<p>Returns an ASCII-compatible String showing:\n<p>Class CSV::Row.\n<p>Header-value pairs.\n",null,1],["inspect","CSV::Table","ruby/classes/CSV/Table.html#method-i-inspect","()","<p>Returns a <code>US-ASCII</code>-encoded String showing table:\n<p>Class: <code>CSV::Table</code>.\n<p>Access mode: <code>:row</code>, <code>:col</code>, or <code>:col_or_row</code> …\n",null,1],["inspect","Complex","ruby/classes/Complex.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Complex(2).inspect                      # =&gt; &quot;(2+0i)&quot;\nComplex(&#39;-8/6&#39;).inspect ...\n</code></pre>\n",null,1],["inspect","Data","ruby/classes/Data.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Measure = Data.define(:amount, :unit)\n\ndistance = Measure[10, ...\n</code></pre>\n",null,1],["inspect","Date","ruby/classes/Date.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Date.new(2001, 2, 3).inspect\n# =&gt; &quot;#&lt;Date: 2001-02-03 ((2451944j,0s,0n),+0s,2299161j)&gt;&quot;\n</code></pre>\n",null,1],["inspect","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-inspect","()","<p>Creates a printable version of the digest object.\n",null,1],["inspect","Dir","ruby/classes/Dir.html#method-i-inspect","()","<p>Returns a string description of <code>self</code>:\n\n<pre><code>Dir.new(&#39;example&#39;).inspect # =&gt; &quot;#&lt;Dir:example&gt;&quot;\n</code></pre>\n",null,1],["inspect","ENV","ruby/classes/ENV.html#method-c-inspect","()","<p>Returns the contents of the environment as a String:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;)\nENV.inspect ...\n</code></pre>\n",null,1],["inspect","Encoding","ruby/classes/Encoding.html#method-i-inspect","()","<p>Returns a string which represents the encoding for programmers.\n\n<pre><code>Encoding::UTF_8.inspect       #=&gt; &quot;#&lt;Encoding:UTF-8&gt;&quot; ...\n</code></pre>\n",null,1],["inspect","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-inspect","()","<p>Returns a printable version of <em>ec</em>\n\n<pre><code>ec = Encoding::Converter.new(&quot;iso-8859-1&quot;, &quot;utf-8&quot;)\nputs ec.inspect ...\n</code></pre>\n",null,1],["inspect","Enumerator","ruby/classes/Enumerator.html#method-i-inspect","()","<p>Creates a printable version of <em>e</em>.\n",null,1],["inspect","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-inspect","()","<p>Convert this arithmetic sequence to a printable form.\n",null,1],["inspect","Enumerator::Chain","ruby/classes/Enumerator/Chain.html#method-i-inspect","()","<p>Returns a printable version of the enumerator chain.\n",null,1],["inspect","Enumerator::Product","ruby/classes/Enumerator/Product.html#method-i-inspect","()","<p>Returns a printable version of the product enumerator.\n",null,1],["inspect","Exception","ruby/classes/Exception.html#method-i-inspect","()","<p>Return this exception’s class name and message.\n",null,1],["inspect","FalseClass","ruby/classes/FalseClass.html#method-i-inspect","()","<p>The string representation of <code>false</code> is “false”.\n",null,1],["inspect","Fiber","ruby/classes/Fiber.html#method-i-inspect","()","",null,1],["inspect","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-inspect","()","<p>Returns a string formatted with an easily readable representation of the internal state of the pointer. …\n",null,1],["inspect","File::Stat","ruby/classes/File/Stat.html#method-i-inspect","()","<p>Produce a nicely formatted description of <em>stat</em>.\n\n<pre><code>File.stat(&quot;/etc/passwd&quot;).inspect\n   #=&gt; &quot;#&lt;File::Stat ...\n</code></pre>\n",null,1],["inspect","Float","ruby/classes/Float.html#method-i-inspect","()","<p>Returns a string containing a representation of <code>self</code>; depending of the value of <code>self</code>, the string representation …\n",null,1],["inspect","Hash","ruby/classes/Hash.html#method-i-inspect","()","<p>Returns a new String containing the hash entries:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.inspect # =&gt; &quot;{:foo=&gt;0, ...\n</code></pre>\n",null,1],["inspect","IO","ruby/classes/IO.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>f = File.open(&#39;t.txt&#39;)\nf.inspect # =&gt; &quot;#&lt;File:t.txt&gt;&quot;\nf.close\n</code></pre>\n",null,1],["inspect","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-inspect","()","<p>Inspect the buffer and report useful information about it’s internal state. Only a limited portion …\n",null,1],["inspect","IPAddr","ruby/classes/IPAddr.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the ipaddr. (“#&lt;IPAddr: family:address/mask&gt;”) …\n",null,1],["inspect","IPSocket","ruby/classes/IPSocket.html#method-i-inspect","()","<p>Return a string describing this IPSocket object.\n",null,1],["inspect","IRB::FileInputMethod","ruby/classes/IRB/FileInputMethod.html#method-i-inspect","()","<p>For debug message\n",null,1],["inspect","IRB::InputMethod","ruby/classes/IRB/InputMethod.html#method-i-inspect","()","<p>For debug message\n",null,1],["inspect","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-inspect","()","<p>Outputs the local variables to this current session, including #signal_status and #context, using IRB::Locale …\n",null,1],["inspect","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-inspect","()","<p>Outputs a list of jobs, see the irb command <code>irb_jobs</code>, or <code>jobs</code>.\n",null,1],["inspect","IRB::ReadlineInputMethod","ruby/classes/IRB/ReadlineInputMethod.html#method-i-inspect","()","<p>For debug message\n",null,1],["inspect","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-inspect","()","<p>For debug message\n",null,1],["inspect","IRB::StdioInputMethod","ruby/classes/IRB/StdioInputMethod.html#method-i-inspect","()","<p>For debug message\n",null,1],["inspect","Integer","ruby/classes/Integer.html#method-i-inspect","(*args)","<p>Returns a string containing the place-value representation of <code>self</code> in radix <code>base</code> (in 2..36).\n\n<pre><code>12345.to_s ...\n</code></pre>\n",null,1],["inspect","MatchData","ruby/classes/MatchData.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>m = /.$/.match(&quot;foo&quot;)\n# =&gt; #&lt;MatchData &quot;o&quot;&gt;\nm.inspect # =&gt; &quot;#&lt;MatchData ...\n</code></pre>\n",null,1],["inspect","Method","ruby/classes/Method.html#method-i-inspect","()","<p>Returns a human-readable description of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: ...\n</code></pre>\n",null,1],["inspect","Module","ruby/classes/Module.html#method-i-inspect","()","<p>Returns a string representing this module or class. For basic classes and modules, this is the name. …\n",null,1],["inspect","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Net::HTTP.new(hostname).inspect\n# =&gt; &quot;#&lt;Net::HTTP jsonplaceholder.typicode.com:80 ...\n</code></pre>\n",null,1],["inspect","Net::HTTPGenericRequest","ruby/classes/Net/HTTPGenericRequest.html#method-i-inspect","()","<p>Returns a string representation of the request:\n\n<pre><code>Net::HTTP::Post.new(uri).inspect # =&gt; &quot;#&lt;Net::HTTP::Post ...\n</code></pre>\n",null,1],["inspect","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-i-inspect","()","",null,1],["inspect","Net::WriteAdapter","ruby/classes/Net/WriteAdapter.html#method-i-inspect","()","",null,1],["inspect","NilClass","ruby/classes/NilClass.html#method-i-inspect","()","<p>Returns string <code>&#39;nil&#39;</code>:\n\n<pre><code>nil.inspect # =&gt; &quot;nil&quot;\n</code></pre>\n",null,1],["inspect","Object","ruby/classes/Object.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of <em>obj</em>. The default #inspect shows the object’s …\n",null,1],["inspect","ObjectSpace::InternalObjectWrapper","ruby/classes/ObjectSpace/InternalObjectWrapper.html#method-i-inspect","()","<p>See Object#inspect.\n",null,1],["inspect","ObjectSpace::WeakKeyMap","ruby/classes/ObjectSpace/WeakKeyMap.html#method-i-inspect","()","<p>Returns a new String containing informations about the map:\n\n<pre><code>m = ObjectSpace::WeakKeyMap.new\nm[key] = value ...\n</code></pre>\n",null,1],["inspect","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-inspect","()","",null,1],["inspect","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-i-inspect","()","<p>String representation of this configuration object, including the class name and its sections.\n",null,1],["inspect","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-inspect","()","<p>Pretty prints this engine.\n",null,1],["inspect","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-inspect","()","<p>Returns the authentication code as a hex-encoded string. The <em>digest</em> parameter specifies the digest algorithm …\n",null,1],["inspect","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-inspect","()","<p>Returns a string describing the PKey object.\n",null,1],["inspect","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-inspect","()","",null,1],["inspect","OpenStruct","ruby/classes/OpenStruct.html#method-i-inspect","()","<p>Returns a string containing a detailed summary of the keys and values.\n",null,1],["inspect","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-i-inspect","()","",null,1],["inspect","Prism::EmbDocComment","ruby/classes/Prism/EmbDocComment.html#method-i-inspect","()","<p>Returns a string representation of this comment.\n",null,1],["inspect","Prism::InlineComment","ruby/classes/Prism/InlineComment.html#method-i-inspect","()","<p>Returns a string representation of this comment.\n",null,1],["inspect","Prism::Location","ruby/classes/Prism/Location.html#method-i-inspect","()","<p>Returns a string representation of this location.\n",null,1],["inspect","Prism::MagicComment","ruby/classes/Prism/MagicComment.html#method-i-inspect","()","<p>Returns a string representation of this magic comment.\n",null,1],["inspect","Prism::ParseError","ruby/classes/Prism/ParseError.html#method-i-inspect","()","<p>Returns a string representation of this error.\n",null,1],["inspect","Prism::ParseWarning","ruby/classes/Prism/ParseWarning.html#method-i-inspect","()","<p>Returns a string representation of this warning.\n",null,1],["inspect","Proc","ruby/classes/Proc.html#method-i-inspect","()","<p>Returns the unique identifier for this proc, along with an indication of where the proc was defined. …\n",null,1],["inspect","Process::Status","ruby/classes/Process/Status.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>system(&quot;false&quot;)\n$?.inspect # =&gt; &quot;#&lt;Process::Status: pid 1303494 ...\n</code></pre>\n",null,1],["inspect","Ractor","ruby/classes/Ractor.html#method-i-inspect","()","",null,1],["inspect","Range","ruby/classes/Range.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>, including <code>begin.inspect</code> and <code>end.inspect</code>:\n\n<pre><code>(1..4).inspect  # =&gt; ...\n</code></pre>\n",null,1],["inspect","Rational","ruby/classes/Rational.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n\n<pre><code>Rational(2).inspect      #=&gt; &quot;(2/1)&quot;\nRational(-8, 6).inspect ...\n</code></pre>\n",null,1],["inspect","Regexp","ruby/classes/Regexp.html#method-i-inspect","()","<p>Returns a nicely-formatted string representation of <code>self</code>:\n\n<pre><code>/ab+c/ix.inspect # =&gt; &quot;/ab+c/ix&quot;\n</code></pre>\n<p>Related: Regexp#to_s …\n",null,1],["inspect","Ripper::Lexer::Elem","ruby/classes/Ripper/Lexer/Elem.html#method-i-inspect","()","",null,1],["inspect","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-inspect","()","<p>Returns debugging information about this node as a string.\n",null,1],["inspect","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-inspect","()","<p>Returns a human-readable string representation of this instruction sequence, including the #label and …\n",null,1],["inspect","Set","ruby/classes/Set.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of the\nset (&quot;#&lt;Set: {element1, element2, ...\n",null,1],["inspect","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-inspect","()","<p>returns a string which shows ancillarydata in human-readable form.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, ...\n</code></pre>\n",null,1],["inspect","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-inspect","()","<p>Returns a string to show contents of <em>ifaddr</em>.\n",null,1],["inspect","Socket::Option","ruby/classes/Socket/Option.html#method-i-inspect","()","<p>Returns a string which shows sockopt in human-readable form.\n\n<pre><code>p Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, ...\n</code></pre>\n",null,1],["inspect","String","ruby/classes/String.html#method-i-inspect","()","<p>Returns a printable version of <code>self</code>, enclosed in double-quotes, and with special characters escaped: …\n",null,1],["inspect","StringScanner","ruby/classes/StringScanner.html#method-i-inspect","()","<p>Returns a string that represents the StringScanner object, showing:\n<p>the current position\n<p>the size of the …\n",null,1],["inspect","Struct","ruby/classes/Struct.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Customer = Struct.new(:name, :address, :zip) # =&gt; Customer\njoe ...\n</code></pre>\n",null,1],["inspect","Symbol","ruby/classes/Symbol.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code> (including the leading colon):\n\n<pre><code>:foo.inspect # =&gt; &quot;:foo&quot;\n</code></pre>\n<p>Related: …\n",null,1],["inspect","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-inspect","()","<p>Managable rspec errors\n",null,1],["inspect","SyntaxSuggest::BlockExpand","ruby/classes/SyntaxSuggest/BlockExpand.html#method-i-inspect","()","<p>Managable rspec errors\n",null,1],["inspect","Syslog","ruby/classes/Syslog.html#method-c-inspect","()","<p>Returns an inspect() string summarizing the object state.\n",null,1],["inspect","Thread","ruby/classes/Thread.html#method-i-inspect","()","<p>Dump the name, id, and status of <em>thr</em> to a string.\n",null,1],["inspect","Thread::Backtrace::Location","ruby/classes/Thread/Backtrace/Location.html#method-i-inspect","()","<p>Returns the same as calling <code>inspect</code> on the string representation of #to_str\n",null,1],["inspect","Time","ruby/classes/Time.html#method-i-inspect","()","<p>Returns a string representation of <code>self</code> with subseconds:\n\n<pre><code>t = Time.new(2000, 12, 31, 23, 59, 59, 0.5)\nt.inspect ...\n</code></pre>\n",null,1],["inspect","TracePoint","ruby/classes/TracePoint.html#method-i-inspect","()","<p>Return a string containing a human-readable TracePoint status.\n",null,1],["inspect","TrueClass","ruby/classes/TrueClass.html#method-i-inspect","()","<p>Returns string <code>&#39;true&#39;</code>:\n\n<pre><code>true.to_s # =&gt; &quot;true&quot;\n</code></pre>\n<p>TrueClass#inspect is an alias for TrueClass#to_s. …\n",null,1],["inspect","URI::Generic","ruby/classes/URI/Generic.html#method-i-inspect","()","",null,1],["inspect","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-inspect","()","",null,1],["inspect","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-inspect","()","",null,1],["inspect","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-inspect","()","<p>Returns a human-readable description of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: ...\n</code></pre>\n",null,1],["inspect","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-inspect","()","<p>Returns the method name with class name.\n",null,1],["inspect","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-inspect","()","<p>Returns the parameter name with class name. If the parameter has default value, then returns name=value …\n",null,1],["inspect","WIN32OLE::Record","ruby/classes/WIN32OLE/Record.html#method-i-inspect","()","<p>Returns the OLE struct name and member name and the value of member\n<p>If COM server in VB.NET ComServer …\n",null,1],["inspect","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-inspect","()","<p>Returns the type name with class name.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;)\nie.ole_type.inspect ...\n</code></pre>\n",null,1],["inspect","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-inspect","()","<p>Returns the type library name with class name.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object ...\n</code></pre>\n",null,1],["inspect","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-inspect","()","<p>Returns the OLE variable name and the value with class name.\n",null,1],["inspect","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-inspect","()","",null,1],["inspect","Zlib::GzipFile::Error","ruby/classes/Zlib/GzipFile/Error.html#method-i-inspect","()","<p>Constructs a String of the GzipFile Error\n",null,1],["inspect?","IRB::Context","ruby/classes/IRB/Context.html#method-i-inspect-3F","()","<p>Whether #inspect_mode is set or not, see #inspect_mode= for more detail.\n",null,1],["inspect_colorable?","IRB::Color","ruby/classes/IRB/Color.html#method-c-inspect_colorable-3F","(obj, seen: {}.compare_by_identity)","",null,1],["inspect_mode=","IRB::Context","ruby/classes/IRB/Context.html#method-i-inspect_mode-3D","(opt)","<p>Specifies the inspect mode with <code>opt</code>:\n<p><code>true</code> &mdash; display <code>inspect</code>\n<p><code>false</code> &mdash; display <code>to_s</code>\n",null,1],["inspect_sockaddr","Addrinfo","ruby/classes/Addrinfo.html#method-i-inspect_sockaddr","()","<p>returns a string which shows the sockaddr in <em>addrinfo</em> with human-readable form.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, ...\n</code></pre>\n",null,1],["inspect_value","IRB::Inspector","ruby/classes/IRB/Inspector.html#method-i-inspect_value","(v)","<p>Proc to call when the input is evaluated and output in irb.\n",null,1],["install","FileUtils","ruby/classes/FileUtils.html#method-c-install","(src, dest, mode: nil, owner: nil, group: nil, preserve: nil, noop: nil, verbose: nil)","<p>Copies a file entry. See install(1).\n<p>Arguments <code>src</code> (a single path or an array of paths) and <code>dest</code> (a single …\n",null,1],["install","Gem","ruby/classes/Gem.html#method-c-install","(name, version = Gem::Requirement.default, *options)","<p>Top level install helper method. Allows you to install gems interactively:\n\n<pre><code>% irb\n&gt;&gt; Gem.install &quot;minitest&quot; ...\n</code></pre>\n",null,1],["install","Gem::DependencyInstaller","ruby/classes/Gem/DependencyInstaller.html#method-i-install","(dep_or_name, version = Gem::Requirement.default)","<p>Installs the gem <code>dep_or_name</code> and all its dependencies.  Returns an Array of installed gem specifications. …\n",null,1],["install","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-install","()","<p>Installs the gem and returns a loaded Gem::Specification for the installed gem.\n<p>The gem will be installed …\n",null,1],["install","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-install","(options)","<p>Installs gems for this RequestSet using the Gem::Installer <code>options</code>.\n<p>If a <code>block</code> is given an activation …\n",null,1],["install","Gem::Resolver::GitSpecification","ruby/classes/Gem/Resolver/GitSpecification.html#method-i-install","(options = {})","<p>Installing a git gem only involves building the extensions and generating the executables.\n",null,1],["install","Gem::Resolver::InstalledSpecification","ruby/classes/Gem/Resolver/InstalledSpecification.html#method-i-install","(options = {})","<p>This is a null install as this specification is already installed. <code>options</code> are ignored.\n",null,1],["install","Gem::Resolver::LockSpecification","ruby/classes/Gem/Resolver/LockSpecification.html#method-i-install","(options = {})","<p>This is a null install as a locked specification is considered installed. <code>options</code> are ignored.\n",null,1],["install","Gem::Resolver::Specification","ruby/classes/Gem/Resolver/Specification.html#method-i-install","(options = {})","<p>Installs this specification using the Gem::Installer <code>options</code>.  The install method yields a Gem::Installer …\n",null,1],["install","Gem::Resolver::VendorSpecification","ruby/classes/Gem/Resolver/VendorSpecification.html#method-i-install","(options = {})","<p>This is a null install as this gem was unpacked into a directory. <code>options</code> are ignored.\n",null,1],["install.rake","","rails/files/rails/actionmailbox/lib/tasks/install_rake.html","","<p># frozen_string_literal: true\n<p>desc “Installs Action Mailbox and its dependencies” task “action_mailbox:install” …\n",null,0],["install_acl","DRb","ruby/classes/DRb.html#method-c-install_acl","(acl)","<p>Set the default ACL to <code>acl</code>.\n<p>See DRb::DRbServer.default_acl.\n",null,1],["install_alias_method","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-i-install_alias_method","(to, from, override = NO_OVERRIDE)","<p>Installs alias methods for the default irb commands, see ::install_extend_commands.\n",null,1],["install_default_bundler_gem","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_default_bundler_gem","(bin_dir)","",null,1],["install_executables","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_executables","(bin_dir)","",null,1],["install_executor_hooks","ActiveRecord::QueryCache","rails/classes/ActiveRecord/QueryCache.html#method-c-install_executor_hooks","(executor = ActiveSupport::Executor)","",null,0],["install_extend_commands","IRB::ContextExtender","ruby/classes/IRB/ContextExtender.html#method-c-install_extend_commands","()","<p>Installs the default context extensions as irb commands:\n<p>Context#eval_history= &mdash; <code>irb/ext/history.rb</code>\n<p>Context#use_tracer= … &mdash; ",null,1],["install_extend_commands","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-c-install_extend_commands","()","<p>Installs the default irb commands.\n",null,1],["install_file","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_file","(file, dest_dir)","",null,1],["install_file_list","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_file_list","(files, dest_dir)","",null,1],["install_from_gemdeps","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-install_from_gemdeps","(options, &block)","<p>Installs from the gem dependencies files in the <code>:gemdeps</code> option in <code>options</code>, yielding to the <code>block</code> as …\n",null,1],["install_hooks","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-install_hooks","(requests, options)","<p>Call hooks on installed gems\n",null,1],["install_id_conv","DRb","ruby/classes/DRb.html#method-c-install_id_conv","(idconv)","<p>Set the default id conversion object.\n<p>This is expected to be an instance such as DRb::DRbIdConv that responds …\n",null,1],["install_into","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-install_into","(dir, force = true, options = {})","",null,1],["install_javascript_dependencies","ActionText::Generators::InstallGenerator","rails/classes/ActionText/Generators/InstallGenerator.html#method-i-install_javascript_dependencies","()","",null,0],["install_lib","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_lib","(lib_dir)","",null,1],["install_list","ACL","ruby/classes/ACL.html#method-i-install_list","(list)","<p>Adds <code>list</code> of ACL entries to this ACL.\n",null,1],["install_path","Bundler","ruby/classes/Bundler.html#method-c-install_path","()","",null,1],["install_rdoc","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-install_rdoc","()","",null,1],["install_siginfo_handler","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-install_siginfo_handler","()","<p>Installs a siginfo handler that prints the current filename.\n",null,1],["install_support","ActiveRecord::Encryption::ExtendedDeterministicQueries","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries.html#method-c-install_support","()","",null,0],["install_support","ActiveRecord::Encryption::ExtendedDeterministicUniquenessValidator","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicUniquenessValidator.html#method-c-install_support","()","",null,0],["install_update_defaults_str","Gem::InstallUpdateOptions","ruby/classes/Gem/InstallUpdateOptions.html#method-i-install_update_defaults_str","()","<p>Default description for the gem install and update commands.\n",null,1],["install_update_options","Gem::InstallUpdateOptions","ruby/classes/Gem/InstallUpdateOptions.html#method-i-install_update_options","()","<p>Default options for the gem install and update commands.\n",null,1],["installable?","Gem::Platform","ruby/classes/Gem/Platform.html#method-c-installable-3F","(spec)","",null,1],["installable_platform?","Gem::Resolver::InstalledSpecification","ruby/classes/Gem/Resolver/InstalledSpecification.html#method-i-installable_platform-3F","()","<p>Returns <code>true</code> if this gem is installable for the current platform.\n",null,1],["installable_platform?","Gem::Resolver::LocalSpecification","ruby/classes/Gem/Resolver/LocalSpecification.html#method-i-installable_platform-3F","()","<p>Returns <code>true</code> if this gem is installable for the current platform.\n",null,1],["installable_platform?","Gem::Resolver::Specification","ruby/classes/Gem/Resolver/Specification.html#method-i-installable_platform-3F","()","<p>Returns true if this specification is installable on this platform.\n",null,1],["installation_satisfies_dependency?","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-installation_satisfies_dependency-3F","(dependency)","<p>True if the gems in the system satisfy <code>dependency</code>.\n",null,1],["installed?","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-installed-3F","()","<p>True if the requested gem has already been installed.\n",null,1],["installed_docs","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-installed_docs","()","<p>Returns an Array of installed documentation.\n<p>Each entry contains the documentation name (gem name, ‘Ruby …\n",null,1],["installed_specs","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-installed_specs","()","<p>Return an Array of Specifications contained within the gem_home we’ll be installing into.\n",null,1],["instance","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-c-instance","()","<p>Returns singleton instance for this class in this thread. If none exists, one is created.\n",null,0],["instance","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-c-instance","(locale = :en)","",null,0],["instance","ActiveSupport::PerThreadRegistry","rails/classes/ActiveSupport/PerThreadRegistry.html#method-i-instance","()","",null,0],["instance","Rails::Application","rails/classes/Rails/Application.html#method-c-instance","()","",null,0],["instance","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-instance","()","<p>Since Rails::Railtie cannot be instantiated, any methods that call <code>instance</code> are intended to be called …\n",null,0],["instance","Rails::Railtie::Configurable::ClassMethods","rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-instance","()","",null,0],["instance","CSV","ruby/classes/CSV.html#method-c-instance","(data = $stdout, **options)","<p>Creates or retrieves cached CSV objects. For arguments and options, see CSV.new.\n<p>This API is not Ractor-safe. …\n",null,1],["instance","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-c-instance","()","<p>Return the authoritative instance of the command manager.\n",null,1],["instance","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-instance","()","<p>Returns self. Allows a CommandManager instance to stand in for the class itself.\n",null,1],["instance","Singleton","ruby/classes/Singleton.html#method-c-instance","","<p>Returns the singleton instance.\n",null,1],["instance","Syslog","ruby/classes/Syslog.html#method-c-instance","()","<p>Returns self, for backward compatibility.\n",null,1],["instance_attributes","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-instance_attributes","()","<p>Instance attributes\n",null,1],["instance_delegate","Forwardable","ruby/classes/Forwardable.html#method-i-instance_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols.  These symbols correspond …\n",null,1],["instance_eval","BasicObject","ruby/classes/BasicObject.html#method-i-instance_eval","(*args)","<p>Evaluates a string containing Ruby source code, or the given block, within the context of the receiver …\n",null,1],["instance_eval","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-instance_eval","(*args)","",null,1],["instance_exec","BasicObject","ruby/classes/BasicObject.html#method-i-instance_exec","(*args)","<p>Executes the given block within the context of the receiver (<em>obj</em>). In order to set the context, the variable …\n",null,1],["instance_exec","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-instance_exec","(*args)","",null,1],["instance_method","Module","ruby/classes/Module.html#method-i-instance_method","(p1)","<p>Returns an <code>UnboundMethod</code> representing the given instance method in <em>mod</em>.\n\n<pre><code>class Interpreter\n  def do_a() ...\n</code></pre>\n",null,1],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-instance_method_already_implemented-3F","(method_name)","<p>Raises an ActiveRecord::DangerousAttributeError exception when an Active Record method is defined in …\n",null,0],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-instance_method_already_implemented-3F","(method_name)","",null,0],["instance_method_list","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-instance_method_list","()","<p>Instance methods\n",null,1],["instance_methods","Module","ruby/classes/Module.html#method-i-instance_methods","(*args)","<p>Returns an array containing the names of the public and protected instance methods in the receiver.  …\n",null,1],["instance_methods","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-instance_methods","()","<p>Instance methods\n",null,1],["instance_methods","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-instance_methods","()","<p>Instance methods cache accessor.  Maps a class to an Array of its instance methods (not full name).\n",null,1],["instance_of?","Object","ruby/classes/Object.html#method-i-instance_of-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an instance of the given class. See also Object#kind_of?.\n\n<pre><code>class A;     end\nclass ...\n</code></pre>\n",null,1],["instance_or_fallback","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-c-instance_or_fallback","(locale)","",null,0],["instance_values","Object","rails/classes/Object.html#method-i-instance_values","()","<p>Returns a hash with string keys that maps instance variable names without “@” to their corresponding …\n",null,0],["instance_variable_defined?","Object","ruby/classes/Object.html#method-i-instance_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given instance variable is defined in <em>obj</em>. String arguments are converted to symbols. …\n",null,1],["instance_variable_get","Object","ruby/classes/Object.html#method-i-instance_variable_get","(p1)","<p>Returns the value of the given instance variable, or nil if the instance variable is not set. The <code>@</code> part …\n",null,1],["instance_variable_names","Object","rails/classes/Object.html#method-i-instance_variable_names","()","<p>Returns an array of instance variable names as strings including “@”.\n\n<pre><code>class C\n  def initialize(x, ...\n</code></pre>\n",null,0],["instance_variable_set","Object","ruby/classes/Object.html#method-i-instance_variable_set","(p1, p2)","<p>Sets the instance variable named by <em>symbol</em> to the given object. This may circumvent the encapsulation …\n",null,1],["instance_variables","Object","ruby/classes/Object.html#method-i-instance_variables","()","<p>Returns an array of instance variable names for the receiver. Note that simply defining an accessor does …\n",null,1],["instantiate","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-instantiate","(attributes, column_types = {}, &block)","<p>Given an attributes hash, <code>instantiate</code> returns a new instance of the appropriate class. Accepts only keys …\n",null,0],["instantiate_all_loaded_fixtures","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-instantiate_all_loaded_fixtures","(object, load_instances = true)","",null,0],["instantiate_fixtures","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-instantiate_fixtures","(object, fixture_set, load_instances = true)","",null,0],["instruction_sequence","TracePoint","ruby/classes/TracePoint.html#method-i-instruction_sequence","()","<p>Compiled instruction sequence represented by a RubyVM::InstructionSequence instance on the <code>:script_compiled</code> …\n",null,1],["instrument","ActionView::Template","rails/classes/ActionView/Template.html#method-i-instrument","(action, &block)","",null,0],["instrument","ActiveRecord::FutureResult::EventBuffer","rails/classes/ActiveRecord/FutureResult/EventBuffer.html#method-i-instrument","(name, payload = {}, &block)","",null,0],["instrument","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-i-instrument","(analyzer, &block)","",null,0],["instrument","ActiveSupport::Notifications","rails/classes/ActiveSupport/Notifications.html#method-c-instrument","(name, payload = {})","",null,0],["instrument","ActiveSupport::Notifications::Instrumenter","rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-instrument","(name, payload = {})","<p>Given a block, instrument it by measuring the time taken to execute and publish it. Without a block, …\n",null,0],["instrumenter","ActiveSupport::Notifications","rails/classes/ActiveSupport/Notifications.html#method-c-instrumenter","()","",null,0],["int","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-c-int","(p1, p2, p3, p4)","<p>Creates a new Socket::AncillaryData object which contains a int as data.\n<p>The size and endian is dependent …\n",null,1],["int","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-int","()","<p>Returns the data in <em>ancillarydata</em> as an int.\n<p>The size and endian is dependent on the host.\n\n<pre><code>ancdata = Socket::AncillaryData.int(:UNIX, ...\n</code></pre>\n",null,1],["int","Socket::Option","ruby/classes/Socket/Option.html#method-i-int","()","<p>Returns the data in <em>sockopt</em> as an int.\n<p>The size and endian is dependent on the platform.\n\n<pre><code>sockopt = Socket::Option.int(:INET, ...\n</code></pre>\n",null,1],["int","Socket::Option","ruby/classes/Socket/Option.html#method-c-int","(p1, p2, p3, p4)","<p>Creates a new Socket::Option object which contains an int as data.\n<p>The size and endian is dependent on …\n",null,1],["int4range","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-int4range","","",null,0],["int8range","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-int8range","","",null,0],["integer?","Integer","ruby/classes/Integer.html#method-i-integer-3F","()","<p>Since <code>self</code> is already an Integer, always returns <code>true</code>.\n",null,1],["integer?","Numeric","ruby/classes/Numeric.html#method-i-integer-3F","()","<p>Returns <code>true</code> if <code>self</code> is an Integer.\n\n<pre><code>1.0.integer? # =&gt; false\n1.integer?   # =&gt; true\n</code></pre>\n",null,1],["intern","String","ruby/classes/String.html#method-i-intern","()","<p>Returns the Symbol corresponding to <em>str</em>, creating the symbol if it did not previously exist. See Symbol#id2name …\n",null,1],["intern","Symbol","ruby/classes/Symbol.html#method-i-intern","()","",null,1],["internal.js","","rails/files/rails/actioncable/app/javascript/action_cable/internal_js.html","","<p>export default {\n\n<pre><code>&quot;message_types&quot;: {\n  &quot;welcome&quot;: &quot;welcome&quot;,\n  &quot;disconnect&quot;: &quot;disconnect&quot;,\n  &quot;ping&quot;: &quot;ping&quot;, ...\n</code></pre>\n",null,0],["internal?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-internal-3F","()","<p>If the buffer is <em>internal</em>, meaning it references memory allocated by the buffer itself.\n<p>An internal buffer …\n",null,1],["internal_class_of","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-internal_class_of","(p1)","<p>MRI specific feature &mdash; Return internal class of obj.\n\n<p>obj can be an instance of InternalObjectWrapper.\n<p>Note …\n",null,1],["internal_encoding","ARGF","ruby/classes/ARGF.html#method-i-internal_encoding","()","<p>Returns the internal encoding for strings read from ARGF as an Encoding object.\n<p>If ARGF.set_encoding has …\n",null,1],["internal_encoding","IO","ruby/classes/IO.html#method-i-internal_encoding","()","<p>Returns the Encoding object that represents the encoding of the internal string, if conversion is specified, …\n",null,1],["internal_encoding","StringIO","ruby/classes/StringIO.html#method-i-internal_encoding","()","<p>Returns the Encoding of the internal string if conversion is specified.  Otherwise returns <code>nil</code>.\n",null,1],["internal_metadata_table_name","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-internal_metadata_table_name","","<p>The name of the internal metadata table. By default, the value is <code>&quot;ar_internal_metadata&quot;</code>.\n",null,0],["internal_metadata_table_name=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-internal_metadata_table_name-3D","","<p>Sets the name of the internal metadata table.\n",null,0],["internal_methods","AbstractController::Base","rails/classes/AbstractController/Base.html#method-c-internal_methods","()","<p>A list of all internal methods for a controller. This finds the first abstract superclass of a controller, …\n",null,0],["internal_object_id","ObjectSpace::InternalObjectWrapper","ruby/classes/ObjectSpace/InternalObjectWrapper.html#method-i-internal_object_id","()","<p>Returns the Object#object_id of the internal object.\n",null,1],["internal_super_of","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-internal_super_of","(p1)","<p>MRI specific feature &mdash; Return internal super class of cls (Class or Module).\n\n<p>obj can be an instance of  …\n",null,1],["interpret_loosely","BigDecimal","ruby/classes/BigDecimal.html#method-c-interpret_loosely","(p1)","",null,1],["intersect?","Array","ruby/classes/Array.html#method-i-intersect-3F","(p1)","<p>Returns <code>true</code> if the array and <code>other_ary</code> have at least one element in common, otherwise returns <code>false</code> …\n",null,1],["intersect?","Set","ruby/classes/Set.html#method-i-intersect-3F","(set)","<p>Returns true if the set and the given enumerable have at least one\nelement in common.\n\n<pre><code>Set[1, 2, 3].intersect? ...\n</code></pre>\n",null,1],["intersection","Array","ruby/classes/Array.html#method-i-intersection","(*args)","<p>Returns a new Array containing each element found both in <code>self</code> and in all of the given Arrays <code>other_arrays</code> …\n",null,1],["intersection","Set","ruby/classes/Set.html#method-i-intersection","(enum)","",null,1],["interval","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-interval","","",null,0],["invalid?","ActiveModel::Validations","rails/classes/ActiveModel/Validations.html#method-i-invalid-3F","(context = nil)","<p>Performs the opposite of <code>valid?</code>. Returns <code>true</code> if errors were added, <code>false</code> otherwise.\n\n<pre><code>class Person\n  include ...\n</code></pre>\n",null,0],["invalid?","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-invalid-3F","(source)","",null,1],["invalid?","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-invalid-3F","()","",null,1],["invalidate!","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-invalidate-21","()","",null,0],["invalidated?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-invalidated-3F","()","",null,0],["inverse_of","ActiveRecord::Migration::CommandRecorder","rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-inverse_of","(command, args, &block)","<p>Returns the inverse of the given command. For example:\n\n<pre><code>recorder.inverse_of(:rename_table, [:old, :new]) ...\n</code></pre>\n",null,0],["invert","ENV","ruby/classes/ENV.html#method-c-invert","()","<p>Returns a Hash whose keys are the ENV values, and whose values are the corresponding ENV names:\n\n<pre><code>ENV.replace(&#39;foo&#39; ...\n</code></pre>\n",null,1],["invert","Hash","ruby/classes/Hash.html#method-i-invert","()","<p>Returns a new Hash object with the each key-value pair inverted:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh1 = h.invert ...\n</code></pre>\n",null,1],["invert","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-invert","()","<p>Returns a Hash (not a DBM database) created by using each value in the database as a key, with the corresponding …\n",null,1],["invert!","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-invert-21","()","",null,1],["invert_where","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-invert_where","()","<p>Allows you to invert an entire where clause instead of manually applying conditions.\n\n<pre><code>class User\n  scope ...\n</code></pre>\n",null,0],["inverted_lambda","ActiveSupport::Callbacks::CallTemplate::InstanceExec0","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec0.html#method-i-inverted_lambda","()","",null,0],["inverted_lambda","ActiveSupport::Callbacks::CallTemplate::InstanceExec1","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec1.html#method-i-inverted_lambda","()","",null,0],["inverted_lambda","ActiveSupport::Callbacks::CallTemplate::InstanceExec2","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec2.html#method-i-inverted_lambda","()","",null,0],["inverted_lambda","ActiveSupport::Callbacks::CallTemplate::MethodCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/MethodCall.html#method-i-inverted_lambda","()","",null,0],["inverted_lambda","ActiveSupport::Callbacks::CallTemplate::ObjectCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ObjectCall.html#method-i-inverted_lambda","()","",null,0],["inverted_lambda","ActiveSupport::Callbacks::CallTemplate::ProcCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ProcCall.html#method-i-inverted_lambda","()","",null,0],["invkind","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-invkind","()","<p>Returns the method invoke kind.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;) ...\n</code></pre>\n",null,1],["invoke","Rails::Command","rails/classes/Rails/Command.html#method-c-invoke","(full_namespace, args = [], **config)","<p>Receives a namespace, arguments, and the behavior to invoke the command.\n",null,0],["invoke","Rails::Generators","rails/classes/Rails/Generators.html#method-c-invoke","(namespace, args = ARGV, config = {})","<p>Receives a namespace, arguments, and the behavior to invoke the generator. It’s used as the default …\n",null,0],["invoke","Gem::Command","ruby/classes/Gem/Command.html#method-i-invoke","(*args)","<p>Invoke the command with the given list of arguments.\n",null,1],["invoke","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-invoke","(*args)","<p>Runs OLE method. The first argument specifies the method name of OLE Automation object. The others specify …\n",null,1],["invoke_callback","ActionCable::SubscriptionAdapter::Async::AsyncSubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/Async/AsyncSubscriberMap.html#method-i-invoke_callback","(*)","",null,0],["invoke_callback","ActionCable::SubscriptionAdapter::PostgreSQL::Listener","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL/Listener.html#method-i-invoke_callback","(*)","",null,0],["invoke_callback","ActionCable::SubscriptionAdapter::Redis::Listener","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener.html#method-i-invoke_callback","(*)","",null,0],["invoke_callback","ActionCable::SubscriptionAdapter::SubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html#method-i-invoke_callback","(callback, message)","",null,0],["invoke_kind","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-invoke_kind","()","<p>Returns the method kind string. The string is “UNKNOWN” or “PROPERTY” or “PROPERTY” …\n",null,1],["invoke_with_build_args","Gem::Command","ruby/classes/Gem/Command.html#method-i-invoke_with_build_args","(args, build_args)","<p>Invoke the command with the given list of normal arguments and additional build arguments.\n",null,1],["invoke_with_build_args","Gem::Commands::GenerateIndexCommand::RubygemsTrampoline","ruby/classes/Gem/Commands/GenerateIndexCommand/RubygemsTrampoline.html#method-i-invoke_with_build_args","(args, build_args)","",null,1],["io_gate","Reline::Core","ruby/classes/Reline/Core.html#method-i-io_gate","()","",null,1],["io_gate","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-io_gate","()","",null,1],["io_pread","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-io_pread","(p1, p2, p3, p4, p5)","<p>Invoked by IO#pread or IO::Buffer#pread to read <code>length</code> bytes from <code>io</code> at offset <code>from</code> into a specified …\n",null,1],["io_pwrite","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-io_pwrite","(p1, p2, p3, p4, p5)","<p>Invoked by IO#pwrite or IO::Buffer#pwrite to write <code>length</code> bytes to <code>io</code> at offset <code>from</code> into a specified …\n",null,1],["io_read","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-io_read","(p1, p2, p3, p4)","<p>Invoked by IO#read or IO#Buffer.read to read <code>length</code> bytes from <code>io</code> into a specified <code>buffer</code> (see IO::Buffer …\n",null,1],["io_select","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-io_select","(p1, p2, p3, p4)","<p>Invoked by IO.select to ask whether the specified descriptors are ready for specified events within the …\n",null,1],["io_wait","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-io_wait","(p1, p2, p3)","<p>Invoked by IO#wait, IO#wait_readable, IO#wait_writable to ask whether the specified descriptor is ready …\n",null,1],["io_write","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-io_write","(p1, p2, p3, p4)","<p>Invoked by IO#write or IO::Buffer#write to write <code>length</code> bytes to <code>io</code> from from a specified <code>buffer</code> (see …\n",null,1],["ioctl","CSV","ruby/classes/CSV.html#method-i-ioctl","(*args)","",null,1],["ioctl","IO","ruby/classes/IO.html#method-i-ioctl","(p1, p2 = v2)","<p>Invokes Posix system call ioctl(2), which issues a low-level command to an I/O device.\n<p>Issues a low-level …\n",null,1],["ioflush","IO","ruby/classes/IO.html#method-i-ioflush","()","<p>Flushes input and output buffers in kernel.\n<p>You must require ‘io/console’ to use this method. …\n",null,1],["ip","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-ip","()","<p>Returns the IP address of client as a <code>String</code>.\n",null,0],["ip","Addrinfo","ruby/classes/Addrinfo.html#method-c-ip","(p1)","<p>returns an addrinfo object for IP address.\n<p>The port, socktype, protocol of the result is filled by zero. …\n",null,1],["ip6_arpa","IPAddr","ruby/classes/IPAddr.html#method-i-ip6_arpa","()","<p>Returns a string for DNS reverse lookup compatible with RFC3172.\n",null,1],["ip6_int","IPAddr","ruby/classes/IPAddr.html#method-i-ip6_int","()","<p>Returns a string for DNS reverse lookup compatible with RFC1886.\n",null,1],["ip?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ip-3F","()","<p>returns true if addrinfo is internet (IPv4/IPv6) address. returns false otherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, ...\n</code></pre>\n",null,1],["ip_address","Addrinfo","ruby/classes/Addrinfo.html#method-i-ip_address","()","<p>Returns the IP address as a string.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ip_address    #=&gt; &quot;127.0.0.1&quot;\nAddrinfo.tcp(&quot;::1&quot;, ...\n</code></pre>\n",null,1],["ip_address_list","Socket","ruby/classes/Socket.html#method-c-ip_address_list","()","<p>Returns local IP addresses as an array.\n<p>The array contains Addrinfo objects.\n\n<pre><code>pp Socket.ip_address_list ...\n</code></pre>\n",null,1],["ip_pktinfo","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-c-ip_pktinfo","(p1, p2, p3 = v3)","<p>Returns new ancillary data for IP_PKTINFO.\n<p>If spec_dst is not given, addr is used.\n<p>IP_PKTINFO is not standard. …\n",null,1],["ip_pktinfo","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-ip_pktinfo","()","<p>Extracts addr, ifindex and spec_dst from IP_PKTINFO ancillary data.\n<p>IP_PKTINFO is not standard.\n<p>Supported …\n",null,1],["ip_port","Addrinfo","ruby/classes/Addrinfo.html#method-i-ip_port","()","<p>Returns the port number as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ip_port    #=&gt; 80\nAddrinfo.tcp(&quot;::1&quot;, ...\n</code></pre>\n",null,1],["ip_unpack","Addrinfo","ruby/classes/Addrinfo.html#method-i-ip_unpack","()","<p>Returns the IP address and port number as 2-element array.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ip_unpack    ...\n</code></pre>\n",null,1],["ipaddr","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-ipaddr","()","<p>Returns the IP address for the connection.\n<p>If the session has not been started, returns the value set …\n",null,1],["ipaddr=","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-ipaddr-3D","(addr)","<p>Sets the IP address for the connection:\n\n<pre><code>http = Net::HTTP.new(hostname)\nhttp.ipaddr # =&gt; nil\nhttp.ipaddr ...\n</code></pre>\n",null,1],["ips_from","ActionDispatch::RemoteIp::GetIp","rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-ips_from","(header)","",null,0],["ipv4?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv4-3F","()","<p>returns true if addrinfo is IPv4 address. returns false otherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ipv4? ...\n</code></pre>\n",null,1],["ipv4?","IPAddr","ruby/classes/IPAddr.html#method-i-ipv4-3F","()","<p>Returns true if the ipaddr is an IPv4 address.\n",null,1],["ipv4_compat","IPAddr","ruby/classes/IPAddr.html#method-i-ipv4_compat","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an IPv4-compatible IPv6 address. …\n",null,1],["ipv4_compat?","IPAddr","ruby/classes/IPAddr.html#method-i-ipv4_compat-3F","()","<p>Returns true if the ipaddr is an IPv4-compatible IPv6 address.\n",null,1],["ipv4_loopback?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv4_loopback-3F","()","<p>Returns true for IPv4 loopback address (127.0.0.0/8). It returns false otherwise.\n",null,1],["ipv4_mapped","IPAddr","ruby/classes/IPAddr.html#method-i-ipv4_mapped","()","<p>Returns a new ipaddr built by converting the native IPv4 address into an IPv4-mapped IPv6 address.\n",null,1],["ipv4_mapped?","IPAddr","ruby/classes/IPAddr.html#method-i-ipv4_mapped-3F","()","<p>Returns true if the ipaddr is an IPv4-mapped IPv6 address.\n",null,1],["ipv4_multicast?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv4_multicast-3F","()","<p>Returns true for IPv4 multicast address (224.0.0.0/4). It returns false otherwise.\n",null,1],["ipv4_multicast_loop","Socket::Option","ruby/classes/Socket/Option.html#method-i-ipv4_multicast_loop","()","<p>Returns the ipv4_multicast_loop data in <em>sockopt</em> as an integer.\n\n<pre><code>sockopt = Socket::Option.ipv4_multicast_loop(10) ...\n</code></pre>\n",null,1],["ipv4_multicast_loop","Socket::Option","ruby/classes/Socket/Option.html#method-c-ipv4_multicast_loop","(p1)","<p>Creates a new Socket::Option object for IP_MULTICAST_LOOP.\n<p>The size is dependent on the platform.\n\n<pre><code>sockopt ...\n</code></pre>\n",null,1],["ipv4_multicast_ttl","Socket::Option","ruby/classes/Socket/Option.html#method-c-ipv4_multicast_ttl","(p1)","<p>Creates a new Socket::Option object for IP_MULTICAST_TTL.\n<p>The size is dependent on the platform.\n\n<pre><code>p Socket::Option.ipv4_multicast_ttl(10) ...\n</code></pre>\n",null,1],["ipv4_multicast_ttl","Socket::Option","ruby/classes/Socket/Option.html#method-i-ipv4_multicast_ttl","()","<p>Returns the ipv4_multicast_ttl data in <em>sockopt</em> as an integer.\n\n<pre><code>sockopt = Socket::Option.ipv4_multicast_ttl(10) ...\n</code></pre>\n",null,1],["ipv4_private?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv4_private-3F","()","<p>Returns true for IPv4 private address (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16). It returns false otherwise. …\n",null,1],["ipv6?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6-3F","()","<p>returns true if addrinfo is IPv6 address. returns false otherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).ipv6? ...\n</code></pre>\n",null,1],["ipv6?","IPAddr","ruby/classes/IPAddr.html#method-i-ipv6-3F","()","<p>Returns true if the ipaddr is an IPv6 address.\n",null,1],["ipv6_linklocal?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_linklocal-3F","()","<p>Returns true for IPv6 link local address (fe80::/10). It returns false otherwise.\n",null,1],["ipv6_loopback?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_loopback-3F","()","<p>Returns true for IPv6 loopback address (::1). It returns false otherwise.\n",null,1],["ipv6_mc_global?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_mc_global-3F","()","<p>Returns true for IPv6 multicast global scope address. It returns false otherwise.\n",null,1],["ipv6_mc_linklocal?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_mc_linklocal-3F","()","<p>Returns true for IPv6 multicast link-local scope address. It returns false otherwise.\n",null,1],["ipv6_mc_nodelocal?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_mc_nodelocal-3F","()","<p>Returns true for IPv6 multicast node-local scope address. It returns false otherwise.\n",null,1],["ipv6_mc_orglocal?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_mc_orglocal-3F","()","<p>Returns true for IPv6 multicast organization-local scope address. It returns false otherwise.\n",null,1],["ipv6_mc_sitelocal?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_mc_sitelocal-3F","()","<p>Returns true for IPv6 multicast site-local scope address. It returns false otherwise.\n",null,1],["ipv6_multicast?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_multicast-3F","()","<p>Returns true for IPv6 multicast address (ff00::/8). It returns false otherwise.\n",null,1],["ipv6_pktinfo","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo","()","<p>Extracts addr and ifindex from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = ...\n</code></pre>\n",null,1],["ipv6_pktinfo","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-c-ipv6_pktinfo","(p1, p2)","<p>Returns new ancillary data for IPV6_PKTINFO.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = Addrinfo.ip(&quot;::1&quot;) ...\n</code></pre>\n",null,1],["ipv6_pktinfo_addr","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo_addr","()","<p>Extracts addr from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = Addrinfo.ip(&quot;::1&quot;) ...\n</code></pre>\n",null,1],["ipv6_pktinfo_ifindex","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-ipv6_pktinfo_ifindex","()","<p>Extracts ifindex from IPV6_PKTINFO ancillary data.\n<p>IPV6_PKTINFO is defined by RFC 3542.\n\n<pre><code>addr = Addrinfo.ip(&quot;::1&quot;) ...\n</code></pre>\n",null,1],["ipv6_sitelocal?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_sitelocal-3F","()","<p>Returns true for IPv6 site local address (fec0::/10). It returns false otherwise.\n",null,1],["ipv6_to_ipv4","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_to_ipv4","()","<p>Returns IPv4 address of IPv4 mapped/compatible IPv6 address. It returns nil if <code>self</code> is not IPv4 mapped/compatible …\n",null,1],["ipv6_unique_local?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_unique_local-3F","()","<p>Returns true for IPv6 unique local address (fc00::/7, RFC4193). It returns false otherwise.\n",null,1],["ipv6_unspecified?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_unspecified-3F","()","<p>Returns true for IPv6 unspecified address (::). It returns false otherwise.\n",null,1],["ipv6_v4compat?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_v4compat-3F","()","<p>Returns true for IPv4-compatible IPv6 address (::/80). It returns false otherwise.\n",null,1],["ipv6_v4mapped?","Addrinfo","ruby/classes/Addrinfo.html#method-i-ipv6_v4mapped-3F","()","<p>Returns true for IPv4-mapped IPv6 address (::ffff:0:0/80). It returns false otherwise.\n",null,1],["ipv6only!","Socket","ruby/classes/Socket.html#method-i-ipv6only-21","()","<p>enable the socket option IPV6_V6ONLY if IPV6_V6ONLY is available.\n",null,1],["irb","Binding","ruby/classes/Binding.html#method-i-irb","(show_code: true)","<p>Opens an IRB session where <code>binding.irb</code> is called which allows for interactive debugging. You can call …\n",null,1],["irb","IRB","ruby/classes/IRB.html#method-c-irb","(file = nil, *main)","<p>Creates a new IRB session, see Irb.new.\n<p>The optional <code>file</code> argument is given to Context.new, along with …\n",null,1],["irb","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-irb","(key)","<p>Returns the irb session for the given <code>key</code> object, see #search for more information.\n",null,1],["irb_abort","IRB","ruby/classes/IRB.html#method-c-irb_abort","(irb, exception = Abort)","<p>Aborts then interrupts irb.\n<p>Will raise an Abort exception, or the given <code>exception</code>.\n",null,1],["irb_context","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_context","()","<p>Displays current configuration.\n<p>Modifying the configuration is achieved by sending a message to IRB.conf …\n",null,1],["irb_exit","IRB","ruby/classes/IRB.html#method-c-irb_exit","(irb, ret)","<p>Quits irb\n",null,1],["irb_exit","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_exit","(ret = 0)","<p>Quits the current irb context\n<p><code>ret</code> is the optional signal or message to send to Context#exit\n<p>Same as <code>IRB.CurrentContext.exit</code> …\n",null,1],["irb_level","IRB::Context","ruby/classes/IRB/Context.html#method-i-irb_level","()","<p>Size of the current WorkSpace stack\n",null,1],["irb_load","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_load","(*opts, &b)","<p>Loads the given file similarly to Kernel#load, see IrbLoader#irb_load\n",null,1],["irb_load","IRB::IrbLoader","ruby/classes/IRB/IrbLoader.html#method-i-irb_load","(fn, priv = nil)","<p>Loads the given file similarly to Kernel#load\n",null,1],["irb_require","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-i-irb_require","(*opts, &b)","<p>Loads the given file similarly to Kernel#require\n",null,1],["irregular","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-irregular","(singular, plural)","<p>Specifies a new irregular that applies to both pluralization and singularization at the same time. This …\n",null,0],["isEqual","Jacobian","ruby/classes/Jacobian.html#method-i-isEqual","(a,b,zero=0.0,e=1.0e-8)","<p>Determines the equality of two numbers by comparing to zero, or using the epsilon value\n",null,1],["is_a?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-is_a-3F","(klass)","<p>Say we’re a Time to thwart type checking.\n",null,0],["is_a?","Object","ruby/classes/Object.html#method-i-is_a-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>, or if <em>class</em> is one of the superclasses of <em>obj</em> or modules included …\n",null,1],["is_alias_for","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-is_alias_for","()","<p>The module or class this constant is an alias for\n",null,1],["is_assignment?","IRB::Statement","ruby/classes/IRB/Statement.html#method-i-is_assignment-3F","()","",null,1],["is_assignment?","IRB::Statement::Command","ruby/classes/IRB/Statement/Command.html#method-i-is_assignment-3F","()","",null,1],["is_assignment?","IRB::Statement::Expression","ruby/classes/IRB/Statement/Expression.html#method-i-is_assignment-3F","()","",null,1],["is_end?","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-is_end-3F","()","",null,1],["is_end?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-is_end-3F","()","<p>Returns true if the code line is determined to contain an ‘end` keyword\n",null,1],["is_end?","SyntaxSuggest::LexValue","ruby/classes/SyntaxSuggest/LexValue.html#method-i-is_end-3F","()","",null,1],["is_kw?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-is_kw-3F","()","<p>Returns true if the code line is determined to contain a keyword that matches with an ‘end`\n<p>For example: …\n",null,1],["is_kw?","SyntaxSuggest::LexValue","ruby/classes/SyntaxSuggest/LexValue.html#method-i-is_kw-3F","()","",null,1],["is_missing?","LoadError","rails/classes/LoadError.html#method-i-is_missing-3F","(location)","<p>Returns true if the given path name (except perhaps for the “.rb” extension) is the missing …\n",null,0],["is_utc?","ActiveRecord::Type::Internal::Timezone","rails/classes/ActiveRecord/Type/Internal/Timezone.html#method-i-is_utc-3F","()","",null,0],["is_utf8?","String","rails/classes/String.html#method-i-is_utf8-3F","()","<p>Returns <code>true</code> if string has utf_8 encoding.\n\n<pre><code>utf_8_str = &quot;some string&quot;.encode &quot;UTF-8&quot;\niso_str = &quot;some string&quot;.encode ...\n</code></pre>\n",null,0],["is_version_1_2?","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-is_version_1_2-3F","()","",null,1],["isatty","IO","ruby/classes/IO.html#method-i-isatty","()","<p>Returns <code>true</code> if the stream is associated with a terminal device (tty), <code>false</code> otherwise:\n\n<pre><code>f = File.new(&#39;t.txt&#39;).isatty ...\n</code></pre>\n",null,1],["isatty","StringIO","ruby/classes/StringIO.html#method-i-isatty","()","<p>Returns <code>false</code>.  Just for compatibility to IO.\n",null,1],["isdst","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-isdst","()","",null,0],["isdst","Time","ruby/classes/Time.html#method-i-isdst","()","<p>Returns <code>true</code> if <code>self</code> is in daylight saving time, <code>false</code> otherwise:\n\n<pre><code>t = Time.local(2000, 1, 1) # =&gt; 2000-01-01 ...\n</code></pre>\n",null,1],["iseuc","Kconv","ruby/classes/Kconv.html#method-c-iseuc","(str)","<p>Returns whether input encoding is EUC-JP or not.\n<p><strong>Note</strong> don’t expect this return value is MatchData …\n",null,1],["iseuc","String","ruby/classes/String.html#method-i-iseuc","()","<p>Returns whether <code>self</code>‘s encoding is EUC-JP or not.\n",null,1],["isjis","Kconv","ruby/classes/Kconv.html#method-c-isjis","(str)","<p>Returns whether input encoding is ISO-2022-JP or not.\n",null,1],["isjis","String","ruby/classes/String.html#method-i-isjis","()","<p>Returns whether <code>self</code>‘s encoding is ISO-2022-JP or not.\n",null,1],["iso8601","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-iso8601","(precision: nil)","<p>Build ISO 8601 Duration string for this duration. The <code>precision</code> parameter can be used to limit seconds’ …\n",null,0],["iso8601","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-iso8601","(fraction_digits = 0)","",null,0],["iso8601","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-iso8601","(str)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone of <code>self</code> from an ISO 8601 string. …\n",null,0],["iso8601","Date","ruby/classes/Date.html#method-i-iso8601","()","<p>Equivalent to #strftime with argument <code>&#39;%Y-%m-%d&#39;</code> (or its shorthand form <code>&#39;%F&#39;</code>);\n\n<pre><code>Date.new(2001, ...\n</code></pre>\n",null,1],["iso8601","Date","ruby/classes/Date.html#method-c-iso8601","(p1 = v1, p2 = v2, p3 = {})","<p>Returns a new Date object with values parsed from <code>string</code>, which should contain an ISO 8601 formatted …\n",null,1],["iso8601","DateTime","ruby/classes/DateTime.html#method-c-iso8601","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a new DateTime object by parsing from a string according to some typical ISO 8601 formats.\n\n<pre><code>DateTime.iso8601(&#39;2001-02-03T04:05:06+07:00&#39;) ...\n</code></pre>\n",null,1],["iso8601","DateTime","ruby/classes/DateTime.html#method-i-iso8601","(*args)","<p>This method is equivalent to strftime(‘%FT%T%:z’). The optional argument <code>n</code> is the number of digits …\n",null,1],["iso8601","Time","ruby/classes/Time.html#method-c-iso8601","(time)","",null,1],["iso8601","Time","ruby/classes/Time.html#method-i-iso8601","(fraction_digits=0)","",null,1],["isolate_namespace","Rails::Application","rails/classes/Rails/Application.html#method-i-isolate_namespace","(mod)","<p>Sends the <code>isolate_namespace</code> method up to the class method.\n",null,0],["isolate_namespace","Rails::Engine","rails/classes/Rails/Engine.html#method-c-isolate_namespace","(mod)","",null,0],["issetugid","Process::Sys","ruby/classes/Process/Sys.html#method-c-issetugid","()","<p>Returns <code>true</code> if the process was created as a result of an execve(2) system call which had either of the …\n",null,1],["issjis","Kconv","ruby/classes/Kconv.html#method-c-issjis","(str)","<p>Returns whether input encoding is Shift_JIS or not.\n",null,1],["issjis","String","ruby/classes/String.html#method-i-issjis","()","<p>Returns whether <code>self</code>‘s encoding is Shift_JIS or not.\n",null,1],["issuer","OpenSSL::PKCS7::RecipientInfo","ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-issuer","()","",null,1],["issuer","OpenSSL::PKCS7::SignerInfo","ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-issuer","()","",null,1],["issuer","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-issuer","()","",null,1],["issuer","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-issuer","()","",null,1],["issuer=","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-issuer-3D","(p1)","",null,1],["issuer=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-issuer-3D","(p1)","",null,1],["issuer_certificate=","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-issuer_certificate-3D","(p1)","",null,1],["issuer_key_hash","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-issuer_key_hash","()","<p>Returns the issuerKeyHash of this certificate ID, the hash of the issuer’s public key.\n",null,1],["issuer_name_hash","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-issuer_name_hash","()","<p>Returns the issuerNameHash of this certificate ID, the hash of the issuer’s distinguished name calculated …\n",null,1],["issuer_of","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-i-issuer_of","(certificate)","<p>Returns the issuer certificate of the given <code>certificate</code> if it exists in the trust directory.\n",null,1],["isutf8","Kconv","ruby/classes/Kconv.html#method-c-isutf8","(str)","<p>Returns whether input encoding is UTF-8 or not.\n",null,1],["isutf8","String","ruby/classes/String.html#method-i-isutf8","()","<p>Returns whether <code>self</code>‘s encoding is UTF-8 or not.\n",null,1],["italy","Date","ruby/classes/Date.html#method-i-italy","()","<p>Equivalent to Date#new_start with argument Date::ITALY.\n",null,1],["iterate_guarding_exceptions","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-iterate_guarding_exceptions","(listeners)","",null,0],["iteration!","Gem::Resolver::Stats","ruby/classes/Gem/Resolver/Stats.html#method-i-iteration-21","()","",null,1],["iterator?","Kernel","ruby/classes/Kernel.html#method-i-iterator-3F","()","<p>Deprecated.  Use block_given? instead.\n",null,1],["itself","Object","ruby/classes/Object.html#method-i-itself","()","<p>Returns the receiver.\n\n<pre><code>string = &quot;my string&quot;\nstring.itself.object_id == string.object_id   #=&gt; true\n</code></pre>\n",null,1],["iv=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-iv-3D","(p1)","<p>Sets the cipher IV. Please note that since you should never be using ECB mode, an IV is always explicitly …\n",null,1],["iv_len","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-iv_len","()","<p>Returns the expected length in bytes for an IV for this Cipher.\n",null,1],["iv_len=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-iv_len-3D","(p1)","<p>Sets the IV/nonce length of the Cipher. Normally block ciphers don’t allow changing the IV length, …\n",null,1],["iv_length","ActiveRecord::Encryption::Cipher","rails/classes/ActiveRecord/Encryption/Cipher.html#method-i-iv_length","()","",null,0],["iv_length","ActiveRecord::Encryption::Cipher::Aes256Gcm","rails/classes/ActiveRecord/Encryption/Cipher/Aes256Gcm.html#method-c-iv_length","()","",null,0],["j","ActionView::Helpers::JavaScriptHelper","rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-j","(javascript)","",null,0],["jacobian","Jacobian","ruby/classes/Jacobian.html#method-i-jacobian","(f,fx,x)","<p>Computes the Jacobian of <code>f</code> at <code>x</code>. <code>fx</code> is the value of <code>f</code> at <code>x</code>.\n",null,1],["java_platform?","Gem","ruby/classes/Gem.html#method-c-java_platform-3F","()","<p>Is this a java platform?\n",null,1],["javascript_include_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-javascript_include_tag","(*sources)","<p>Returns an HTML script tag for each of the <code>sources</code> provided.\n<p>Sources may be paths to JavaScript files. …\n",null,0],["javascript_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-javascript_path","(source, options = {})","<p>Computes the path to a JavaScript asset in the public javascripts directory. If the <code>source</code> filename has …\n",null,0],["javascript_tag","ActionView::Helpers::JavaScriptHelper","rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-javascript_tag","(content_or_options_with_block = nil, html_options = {}, &block)","<p>Returns a JavaScript tag with the <code>content</code> inside. Example:\n\n<pre><code>javascript_tag &quot;alert(&#39;All is good&#39;)&quot;\n</code></pre>\n<p>Returns: …\n",null,0],["javascript_url","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-javascript_url","(source, options = {})","<p>Computes the full URL to a JavaScript asset in the public javascripts directory. This will use <code>javascript_path</code> …\n",null,0],["javascripts.js.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/rails/javascripts_js_tt.html","","<p>// This is a manifest file that’ll be compiled into application.js, which will include all the files …\n",null,0],["jd","Date","ruby/classes/Date.html#method-i-jd","()","<p>Returns the Julian day number.  This is a whole number, which is adjusted by the offset as the local …\n",null,1],["jd","Date","ruby/classes/Date.html#method-c-jd","(p1 = v1, p2 = v2)","<p>Returns a new Date object formed from the arguments:\n\n<pre><code>Date.jd(2451944).to_s # =&gt; &quot;2001-02-03&quot;\nDate.jd(2451945).to_s ...\n</code></pre>\n",null,1],["jd","DateTime","ruby/classes/DateTime.html#method-c-jd","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6)","<p>Creates a DateTime object denoting the given chronological Julian day number.\n\n<pre><code>DateTime.jd(2451944)    ...\n</code></pre>\n",null,1],["jdbc.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/jdbc_yml_tt.html","","<p># If you are using mssql, derby, hsqldb, or h2 with one of the # ActiveRecord JDBC adapters, install …\n",null,0],["jdbcmysql.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/jdbcmysql_yml_tt.html","","<p># MySQL. Versions 5.5.8 and up are supported. # # Install the MySQL driver: #   gem install activerecord-jdbcmysql-adapter …\n",null,0],["jdbcpostgresql.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/jdbcpostgresql_yml_tt.html","","<p># PostgreSQL. Versions 9.3 and up are supported. # # Configure Using Gemfile # gem “activerecord-jdbcpostgresql-adapter” …\n",null,0],["jdbcsqlite3.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/jdbcsqlite3_yml_tt.html","","<p># SQLite. Versions 3.8.0 and up are supported. #   gem “activerecord-jdbcsqlite3-adapter” # …\n",null,0],["jisx0301","Date","ruby/classes/Date.html#method-i-jisx0301","()","<p>Returns a string representation of the date in <code>self</code> in JIS X 0301 format.\n\n<pre><code>Date.new(2001, 2, 3).jisx0301 ...\n</code></pre>\n",null,1],["jisx0301","Date","ruby/classes/Date.html#method-c-jisx0301","(p1 = v1, p2 = v2, p3 = {})","<p>Returns a new Date object with values parsed from <code>string</code>, which should be a valid JIS X 0301 format: …\n",null,1],["jisx0301","DateTime","ruby/classes/DateTime.html#method-i-jisx0301","(*args)","<p>Returns a string in a JIS X 0301 format. The optional argument <code>n</code> is the number of digits for fractional …\n",null,1],["jisx0301","DateTime","ruby/classes/DateTime.html#method-c-jisx0301","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a new DateTime object by parsing from a string according to some typical JIS X 0301 formats. …\n",null,1],["job.rb.tt","","rails/files/rails/activejob/lib/rails/generators/job/templates/job_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= class_name %&gt;Job &lt; ApplicationJob\n\n<pre><code>queue_as :&lt;%= ...\n</code></pre>\n",null,0],["job_or_instantiate","ActiveJob::Enqueuing::ClassMethods","rails/classes/ActiveJob/Enqueuing/ClassMethods.html#method-i-job_or_instantiate","(*args)","",null,0],["join","Array","ruby/classes/Array.html#method-i-join","(*args)","<p>Returns the new String formed by joining the array elements after conversion. For each element <code>element</code> …\n",null,1],["join","File","ruby/classes/File.html#method-c-join","(*args)","<p>Returns a new string formed by joining the strings using <code>&quot;/&quot;</code>.\n\n<pre><code>File.join(&quot;usr&quot;, &quot;mail&quot;, &quot;gumby&quot;) ...\n</code></pre>\n",null,1],["join","Pathname","ruby/classes/Pathname.html#method-i-join","(*args)","<p>Joins the given pathnames onto <code>self</code> to create a new Pathname object. This is effectively the same as …\n",null,1],["join","Prism::Location","ruby/classes/Prism/Location.html#method-i-join","(other)","<p>Returns a new location that stretches from this location to the given other location. Raises an error …\n",null,1],["join","Set","ruby/classes/Set.html#method-i-join","(separator=nil)","<p>Returns a string created by converting each element of the set to a string\nSee also: Array#join\n",null,1],["join","Shellwords","ruby/classes/Shellwords.html#method-c-join","(array)","",null,1],["join","Thread","ruby/classes/Thread.html#method-i-join","(*args)","<p>The calling thread will suspend execution and run this <code>thr</code>.\n<p>Does not return until <code>thr</code> exits or until the …\n",null,1],["join","URI","ruby/classes/URI.html#method-c-join","(*str)","<p>Merges the given URI strings <code>str</code> per RFC 2396.\n<p>Each string in <code>str</code> is converted to an RFC3986 URI before …\n",null,1],["join","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-join","(*uris)","<p>Args\n<p><code>uris</code> &mdash; an Array of Strings\n\n<p>Description\n",null,1],["join","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-join","(*uris)","<p>Args\n<p><code>uris</code> &mdash; an Array of Strings\n\n<p>Description\n",null,1],["join_consecutive!","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-join_consecutive-21","()","<p>Smushes logically “consecutive” lines\n\n<pre><code>source = &lt;&lt;~&#39;EOM&#39;\n  User.\n    where(name: &#39;schneems&#39;). ...\n</code></pre>\n",null,1],["join_groups","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-join_groups","(groups)","<p>Helper method for joining “groups” of lines\n<p>Input is expected to be type Array&lt;Array&lt;CodeLine&gt;&gt; …\n",null,1],["join_heredoc!","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-join_heredoc-21","()","<p>Smushes all heredoc lines into one line\n\n<pre><code>source = &lt;&lt;~&#39;EOM&#39;\n  foo = &lt;&lt;~HEREDOC\n     lol\n     hehehe\n  HEREDOC ...\n</code></pre>\n",null,1],["join_trailing_slash!","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-join_trailing_slash-21","()","<p>Join lines with a trailing slash\n\n<pre><code>source = &lt;&lt;~&#39;EOM&#39;\n  it &quot;code can be split&quot; \\\n     &quot;across multiple lines&quot; ...\n</code></pre>\n",null,1],["joined_includes_values","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-joined_includes_values","()","<p>Joins that are also marked for preloading. In which case we should just eager load them. Note that this …\n",null,0],["joins","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-joins","(*args)","<p>Performs JOINs on <code>args</code>. The given symbol(s) should match the name of the association(s).\n\n<pre><code>User.joins(:posts) ...\n</code></pre>\n",null,0],["js_template","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-js_template","(source, destination)","",null,0],["json_creatable?","Class","ruby/classes/Class.html#method-i-json_creatable-3F","()","<p>Returns true if this class can be used to create an instance from a serialised JSON string. The class …\n",null,1],["json_creatable?","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-c-json_creatable-3F","()","",null,1],["json_create","BigDecimal","ruby/classes/BigDecimal.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Complex","ruby/classes/Complex.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Date","ruby/classes/Date.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","DateTime","ruby/classes/DateTime.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Exception","ruby/classes/Exception.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-c-json_create","(data)","",null,1],["json_create","OpenStruct","ruby/classes/OpenStruct.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Range","ruby/classes/Range.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Rational","ruby/classes/Rational.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Regexp","ruby/classes/Regexp.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Set","ruby/classes/Set.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Struct","ruby/classes/Struct.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_create","Symbol","ruby/classes/Symbol.html#method-c-json_create","(o)","<p>See #as_json.\n",null,1],["json_create","Time","ruby/classes/Time.html#method-c-json_create","(object)","<p>See #as_json.\n",null,1],["json_escape","ERB::Util","rails/classes/ERB/Util.html#method-c-json_escape","(s)","<p>A utility method for escaping HTML entities in JSON strings. Specifically, the &amp;, &gt; and &lt; characters …\n",null,0],["jsonb","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-jsonb","","",null,0],["julian","Date","ruby/classes/Date.html#method-i-julian","()","<p>Equivalent to Date#new_start with argument Date::JULIAN.\n",null,1],["julian?","Date","ruby/classes/Date.html#method-i-julian-3F","()","<p>Returns <code>true</code> if the date is before the date of calendar reform, <code>false</code> otherwise:\n\n<pre><code>(Date.new(1582, 10, 15) ...\n</code></pre>\n",null,1],["julian_leap?","Date","ruby/classes/Date.html#method-c-julian_leap-3F","(p1)","<p>Returns <code>true</code> if the given year is a leap year in the proleptic Julian calendar, <code>false</code> otherwise:\n\n<pre><code>Date.julian_leap?(1900) ...\n</code></pre>\n",null,1],["just_cursor_moving","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-just_cursor_moving","()","",null,1],["just_move_cursor","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-just_move_cursor","()","",null,1],["karma.conf.js","","rails/files/rails/actioncable/karma_conf_js.html","","<p>const config = {\n\n<pre><code>browsers: [&quot;ChromeHeadless&quot;],\nframeworks: [&quot;qunit&quot;],\nfiles: [\n  &quot;test/javascript/compiled/test.js&quot;, ...\n</code></pre>\n",null,0],["kconv","Kconv","ruby/classes/Kconv.html#method-c-kconv","(str, to_enc, from_enc=nil)","<p>Convert <code>str</code> to <code>to_enc</code>. <code>to_enc</code> and <code>from_enc</code> are given as constants of Kconv or Encoding objects.\n",null,1],["kconv","String","ruby/classes/String.html#method-i-kconv","(to_enc, from_enc=nil)","<p>Convert <code>self</code> to <code>to_enc</code>. <code>to_enc</code> and <code>from_enc</code> are given as constants of Kconv or Encoding objects.\n",null,1],["keep","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-keep","(k = nil)","<p>Keeps either the entire current flash or a specific flash entry available for the next action:\n\n<pre><code>flash.keep ...\n</code></pre>\n",null,0],["keep_back","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-keep_back","()","",null,1],["keep_back","CSV::Parser::Scanner","ruby/classes/CSV/Parser/Scanner.html#method-i-keep_back","()","",null,1],["keep_drop","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-keep_drop","()","",null,1],["keep_drop","CSV::Parser::Scanner","ruby/classes/CSV/Parser/Scanner.html#method-i-keep_drop","()","",null,1],["keep_end","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-keep_end","()","",null,1],["keep_end","CSV::Parser::Scanner","ruby/classes/CSV/Parser/Scanner.html#method-i-keep_end","()","",null,1],["keep_if","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-keep_if","(&block)","",null,0],["keep_if","Array","ruby/classes/Array.html#method-i-keep_if","()","<p>Retains those elements for which the block returns a truthy value; deletes all other elements; returns …\n",null,1],["keep_if","ENV","ruby/classes/ENV.html#method-c-keep_if","()","<p>Yields each environment variable name and its value as a 2-element Array, deleting each environment variable …\n",null,1],["keep_if","Hash","ruby/classes/Hash.html#method-i-keep_if","()","<p>Calls the block for each key-value pair; retains the entry if the block returns a truthy value; otherwise …\n",null,1],["keep_if","Set","ruby/classes/Set.html#method-i-keep_if","()","<p>Deletes every element of the set for which block evaluates to\nfalse, and returns self. Returns an enumerator ...\n",null,1],["keep_only_files_and_directories","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-keep_only_files_and_directories","()","",null,1],["keep_script_lines","RubyVM","ruby/classes/RubyVM.html#method-c-keep_script_lines","()","<p>Return current <code>keep_script_lines</code> status. Now it only returns <code>true</code> of <code>false</code>, but it can return other objects …\n",null,1],["keep_script_lines=","RubyVM","ruby/classes/RubyVM.html#method-c-keep_script_lines-3D","(p1)","<p>It set <code>keep_script_lines</code> flag. If the flag is set, all loaded scripts are recorded in a interpreter process. …\n",null,1],["keep_start","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-keep_start","()","",null,1],["keep_start","CSV::Parser::Scanner","ruby/classes/CSV/Parser/Scanner.html#method-i-keep_start","()","",null,1],["kernel_sleep","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-kernel_sleep","(p1)","<p>Invoked by Kernel#sleep and Mutex#sleep and is expected to provide an implementation of sleeping in a …\n",null,1],["key","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-key","()","<p>Returns the key pointing to the file on the service that’s associated with this blob. The key is …\n",null,0],["key","ActiveStorage::Preview","rails/classes/ActiveStorage/Preview.html#method-i-key","()","<p>Returns a combination key of the blob and the variation that together identifies a specific variant. …\n",null,0],["key","ActiveStorage::Variant","rails/classes/ActiveStorage/Variant.html#method-i-key","()","<p>Returns a combination key of the blob and the variation that together identifies a specific variant. …\n",null,0],["key","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-i-key","()","<p>Returns a signed key for all the <code>transformations</code> that this variation was instantiated with.\n",null,0],["key","ActiveSupport::EncryptedFile","rails/classes/ActiveSupport/EncryptedFile.html#method-i-key","()","<p>Returns the encryption key, first trying the environment variable specified by <code>env_key</code>, then trying the …\n",null,0],["key","ENV","ruby/classes/ENV.html#method-c-key","(p1)","<p>Returns the name of the first environment variable with <code>value</code>, if it exists:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, ...\n</code></pre>\n",null,1],["key","Hash","ruby/classes/Hash.html#method-i-key","(p1)","<p>Returns the key for the first-found entry with the given <code>value</code> (see Entry Order):\n\n<pre><code>h = {foo: 0, bar: 2, ...\n</code></pre>\n",null,1],["key","KeyError","ruby/classes/KeyError.html#method-i-key","()","<p>Return the key caused this KeyError exception.\n",null,1],["key","NoMatchingPatternKeyError","ruby/classes/NoMatchingPatternKeyError.html#method-i-key","()","<p>Return the key caused this NoMatchingPatternKeyError exception.\n",null,1],["key","Prism::MagicComment","ruby/classes/Prism/MagicComment.html#method-i-key","()","<p>Returns the key of the magic comment by slicing it from the source code.\n",null,1],["key","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-key","()","",null,1],["key","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-key","( keystr )","<p>Returns the key for the specified value.\n",null,1],["key=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-key-3D","(p1)","<p>Sets the cipher key. To generate a key, you should either use a secure random byte string or, if the …\n",null,1],["key?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-key-3F","","",null,0],["key?","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-key-3F","(name)","",null,0],["key?","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-key-3F","(key)","",null,0],["key?","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-key-3F","(key)","<p>Returns true if the request has a header matching the given key parameter.\n\n<pre><code>request.key? :ip_spoofing_check ...\n</code></pre>\n",null,0],["key?","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-key-3F","(attribute)","",null,0],["key?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["key?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["key?","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-key-3F","(*args)","",null,1],["key?","CSV::Row","ruby/classes/CSV/Row.html#method-i-key-3F","(header)","",null,1],["key?","ENV","ruby/classes/ENV.html#method-c-key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the given <code>name</code>:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; ...\n</code></pre>\n",null,1],["key?","Hash","ruby/classes/Hash.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["key?","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-key-3F","(key)","<p>Returns <code>true</code> if the field for the case-insensitive <code>key</code> exists, <code>false</code> otherwise:\n\n<pre><code>req = Net::HTTP::Get.new(uri) ...\n</code></pre>\n",null,1],["key?","ObjectSpace::WeakKeyMap","ruby/classes/ObjectSpace/WeakKeyMap.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["key?","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["key?","PStore","ruby/classes/PStore.html#method-i-key-3F","(key)","<p>Returns <code>true</code> if <code>key</code> exists, <code>false</code> otherwise:\n\n<pre><code>example_store do |store|\n  store.transaction do\n    store.key?(:foo) ...\n</code></pre>\n",null,1],["key?","Thread","ruby/classes/Thread.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the given string (or symbol) exists as a fiber-local variable.\n\n<pre><code>me = Thread.current\nme[:oliver] ...\n</code></pre>\n",null,1],["key_bindings","Reline::Config","ruby/classes/Reline/Config.html#method-i-key_bindings","()","",null,1],["key_generator","Rails::Application","rails/classes/Rails/Application.html#method-i-key_generator","()","<p>Returns the application’s KeyGenerator\n",null,0],["key_len","ActiveSupport::MessageEncryptor","rails/classes/ActiveSupport/MessageEncryptor.html#method-c-key_len","(cipher = default_cipher)","<p>Given a cipher, returns the key length of the cipher to help generate the key of desired size\n",null,0],["key_len","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-key_len","()","<p>Returns the key length in bytes of the Cipher.\n",null,1],["key_len=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-key_len-3D","(p1)","<p>Sets the key length of the cipher.  If the cipher is a fixed length cipher then attempting to set the …\n",null,1],["key_length","ActiveRecord::Encryption::Cipher","rails/classes/ActiveRecord/Encryption/Cipher.html#method-i-key_length","()","",null,0],["key_length","ActiveRecord::Encryption::Cipher::Aes256Gcm","rails/classes/ActiveRecord/Encryption/Cipher/Aes256Gcm.html#method-c-key_length","()","",null,0],["key_matcher","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-key_matcher","(pattern, options)","<p>Adds the namespace defined in the options to a pattern designed to match keys. Implementations that support …\n",null,0],["key_name","Resolv::DNS::SvcParam","ruby/classes/Resolv/DNS/SvcParam.html#method-c-key_name","()","<p>Get the presentation name of the SvcParamKey.\n",null,1],["key_notation_to_code","Reline::Config","ruby/classes/Reline/Config.html#method-i-key_notation_to_code","(notation)","",null,1],["key_number","Resolv::DNS::SvcParam","ruby/classes/Resolv/DNS/SvcParam.html#method-c-key_number","()","<p>Get the registered number of the SvcParamKey.\n",null,1],["key_provider","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-key_provider","()","",null,0],["keymap","Reline::Config","ruby/classes/Reline/Config.html#method-i-keymap","()","",null,1],["keys","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-keys","","<p>Returns a new array of the keys of the parameters.\n",null,0],["keys","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-keys","()","",null,0],["keys","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-keys","()","",null,0],["keys","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-keys","(*args)","<p>Return all query parameter names as an array of String.\n",null,1],["keys","ENV","ruby/classes/ENV.html#method-c-keys","()","<p>Returns all variable names in an Array:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;)\nENV.keys # =&gt; [&#39;bar&#39;, ...\n</code></pre>\n",null,1],["keys","Hash","ruby/classes/Hash.html#method-i-keys","()","<p>Returns a new Array containing all keys in <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.keys # =&gt; [:foo, :bar, ...\n</code></pre>\n",null,1],["keys","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-keys","()","<p>Returns a new Array containing all keys in the map.\n",null,1],["keys","PStore","ruby/classes/PStore.html#method-i-keys","()","<p>Returns an array of the existing keys:\n\n<pre><code>example_store do |store|\n  store.transaction do\n    store.keys ...\n</code></pre>\n",null,1],["keys","Thread","ruby/classes/Thread.html#method-i-keys","()","<p>Returns an array of the names of the fiber-local variables (as Symbols).\n\n<pre><code>thr = Thread.new do\n  Thread.current[:cat] ...\n</code></pre>\n",null,1],["keys","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-keys","()","<p>return keys as an array\n",null,1],["keys_with_inspector","IRB::Inspector","ruby/classes/IRB/Inspector.html#method-c-keys_with_inspector","(inspector)","<p>Determines the inspector to use where <code>inspector</code> is one of the keys passed during inspector definition. …\n",null,1],["keyword_init?","Struct","ruby/classes/Struct.html#method-c-keyword_init-3F","()","<p>Returns <code>true</code> if the class was initialized with <code>keyword_init: true</code>. Otherwise returns <code>nil</code> or <code>false</code>.\n<p>Examples: …\n",null,1],["keywords","","ruby/files/ruby/doc/keywords_rdoc.html","","<p>Keywords\n<p>The following keywords are used by Ruby.\n<p>__ENCODING__ &mdash; The script encoding of the current file. …\n",null,1],["kill","DRb::ThreadObject","ruby/classes/DRb/ThreadObject.html#method-i-kill","()","",null,1],["kill","Fiber","ruby/classes/Fiber.html#method-i-kill","()","<p>Terminates the fiber by raising an uncatchable exception. It only terminates the given fiber and no other …\n",null,1],["kill","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-kill","(*keys)","<p>Terminates the irb sessions specified by the given <code>keys</code>.\n<p>Raises an IrbAlreadyDead exception if one of …\n",null,1],["kill","Process","ruby/classes/Process.html#method-c-kill","(*args)","<p>Sends a signal to each process specified by <code>ids</code> (which must specify at least one ID); returns the count …\n",null,1],["kill","Thread","ruby/classes/Thread.html#method-c-kill","(p1)","<p>Causes the given <code>thread</code> to exit, see also Thread::exit.\n\n<pre><code>count = 0\na = Thread.new { loop { count += 1 } ...\n</code></pre>\n",null,1],["kill","Thread","ruby/classes/Thread.html#method-i-kill","()","<p>Terminates <code>thr</code> and schedules another thread to be run, returning the terminated Thread.  If this is the …\n",null,1],["kill_line","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-kill_line","(key)","",null,1],["kill_whole_line","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-kill_whole_line","(key)","",null,1],["kill_word","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-kill_word","(key)","",null,1],["kilobyte","Numeric","rails/classes/Numeric.html#method-i-kilobyte","()","",null,0],["kilobytes","Numeric","rails/classes/Numeric.html#method-i-kilobytes","()","<p>Returns the number of bytes equivalent to the kilobytes provided.\n\n<pre><code>2.kilobytes # =&gt; 2048\n</code></pre>\n",null,0],["kind","ActiveModel::Validator","rails/classes/ActiveModel/Validator.html#method-i-kind","()","<p>Returns the kind for this validator.\n\n<pre><code>PresenceValidator.new(attributes: [:username]).kind # =&gt; :presence ...\n</code></pre>\n",null,0],["kind","ActiveModel::Validator","rails/classes/ActiveModel/Validator.html#method-c-kind","()","<p>Returns the kind of the validator.\n\n<pre><code>PresenceValidator.kind   # =&gt; :presence\nAcceptanceValidator.kind # ...\n</code></pre>\n",null,0],["kind_of?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-kind_of-3F","(klass)","",null,0],["kind_of?","Object","ruby/classes/Object.html#method-i-kind_of-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>, or if <em>class</em> is one of the superclasses of <em>obj</em> or modules included …\n",null,1],["klass","ActiveJob::Serializers::ObjectSerializer","rails/classes/ActiveJob/Serializers/ObjectSerializer.html#method-i-klass","()","<p>The class of the object that will be serialized.\n",null,0],["klass","ActiveRecord::Reflection::MacroReflection","rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-klass","()","<p>Returns the class for the macro.\n<p><code>composed_of :balance, class_name: &#39;Money&#39;</code> returns the Money class …\n",null,0],["l","AbstractController::Translation","rails/classes/AbstractController/Translation.html#method-i-l","(object, **options)","",null,0],["l","ActionView::Helpers::TranslationHelper","rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-l","(object, **options)","",null,0],["label","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-label","(method, text = nil, options = {}, &block)","<p>Returns a label tag tailored for labelling an input field for a specified attribute (identified by <code>method</code> …\n",null,0],["label","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-label","(object_name, method, content_or_options = nil, options = nil, &block)","<p>Returns a label tag tailored for labelling an input field for a specified attribute (identified by <code>method</code> …\n",null,0],["label","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-label","()","<p>Returns the label of this instruction sequence.\n<p><code>&lt;main&gt;</code> if it’s at the top level, <code>&lt;compiled&gt;</code> …\n",null,1],["label","Thread::Backtrace::Location","ruby/classes/Thread/Backtrace/Location.html#method-i-label","()","<p>Returns the label of this frame.\n<p>Usually consists of method, class, module, etc names with decoration. …\n",null,1],["label_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-label_tag","(name = nil, content_or_options = nil, options = nil, &block)","<p>Creates a label element. Accepts a block.\n<p>Options\n<p>Creates standard HTML attributes for the tag.\n",null,0],["lambda","Kernel","ruby/classes/Kernel.html#method-i-lambda","()","<p>Equivalent to Proc.new, except the resulting Proc objects check the number of parameters passed when …\n",null,1],["lambda?","Proc","ruby/classes/Proc.html#method-i-lambda-3F","()","<p>Returns <code>true</code> if a Proc object is lambda. <code>false</code> if non-lambda.\n<p>The lambda-ness affects argument handling …\n",null,1],["last","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-last","()","",null,0],["last","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-last","(limit = nil)","<p>Returns the last record, or the last <code>n</code> records, from the collection. If the collection is empty, the …\n",null,0],["last","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-last","(limit = nil)","<p>Find the last record (or last N records if a parameter is supplied). If no order is defined it will order …\n",null,0],["last","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-last","(n = nil)","<p>Returns the last record from the rows collection.\n",null,0],["last","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-last","()","",null,0],["last","String","rails/classes/String.html#method-i-last","(limit = 1)","<p>Returns the last character of the string. If a limit is supplied, returns a substring from the end of …\n",null,0],["last","Array","ruby/classes/Array.html#method-i-last","(n = unspecified = true)","<p>Returns elements from <code>self</code>; <code>self</code> is not modified.\n<p>When no argument is given, returns the last element: …\n",null,1],["last","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-last","(p1)","<p>Returns the last number in this arithmetic sequence, or an array of the last <code>n</code> elements.\n",null,1],["last","Range","ruby/classes/Range.html#method-i-last","(*args)","<p>With no argument, returns the last element of <code>self</code>, if it exists:\n\n<pre><code>(1..4).last     # =&gt; 4\n(&#39;a&#39;..&#39;d&#39;).last ...\n</code></pre>\n",null,1],["last","SyntaxSuggest::LexAll","ruby/classes/SyntaxSuggest/LexAll.html#method-i-last","()","",null,1],["last!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-last-21","()","<p>Same as #last but raises ActiveRecord::RecordNotFound if no record is found. Note that #last! accepts …\n",null,0],["last?","ActionView::PartialIteration","rails/classes/ActionView/PartialIteration.html#method-i-last-3F","()","<p>Check if this is the last iteration of the partial.\n",null,0],["last_column","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-last_column","()","<p>The column number in the source code where this AST’s text ended.\n",null,1],["last_error","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-last_error","()","<p>Returns an exception object for the last conversion. Returns nil if the last conversion did not produce …\n",null,1],["last_error","Fiddle","ruby/classes/Fiddle.html#method-c-last_error","()","<p>Returns the last <code>Error</code> of the current executing <code>Thread</code> or nil if none\n",null,1],["last_error=","Fiddle","ruby/classes/Fiddle.html#method-c-last_error-3D","(error)","<p>Sets the last <code>Error</code> of the current executing <code>Thread</code> to <code>error</code>\n",null,1],["last_lineno","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-last_lineno","()","<p>The line number in the source code where this AST’s text ended.\n",null,1],["last_match","Regexp","ruby/classes/Regexp.html#method-c-last_match","(*args)","<p>With no argument, returns the value of <code>$!</code>, which is the result of the most recent pattern match (see …\n",null,1],["last_modified","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified","()","",null,0],["last_modified","OpenURI::Meta","ruby/classes/OpenURI/Meta.html#method-i-last_modified","()","<p>returns a Time that represents the Last-Modified field.\n",null,1],["last_modified","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-last_modified","()","<p>Time this file was last modified, if known\n",null,1],["last_modified=","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3D","(utc_time)","",null,0],["last_modified?","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3F","()","",null,0],["last_month","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-last_month","()","<p>Short-hand for <code>months_ago(1)</code>.\n",null,0],["last_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-last_quarter","()","",null,0],["last_status","Process","ruby/classes/Process.html#method-c-last_status","()","<p>Returns a Process::Status object representing the most recently exited child process in the current thread, …\n",null,1],["last_update","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-last_update","()","",null,1],["last_update=","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-last_update-3D","(p1)","",null,1],["last_update_check","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-last_update_check","()","<p>Reads time of last update check from state file\n",null,1],["last_update_check=","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-last_update_check-3D","(timestamp)","<p>Writes time of last update check to state file\n",null,1],["last_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-last_week","(start_day = Date.beginning_of_week, same_time: false)","",null,0],["last_weekday","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-last_weekday","()","",null,0],["last_year","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-last_year","()","<p>Short-hand for <code>years_ago(1)</code>.\n",null,0],["latest_compact_info","GC","ruby/classes/GC.html#method-c-latest_compact_info","()","<p>Returns information about object moved in the most recent GC compaction.\n<p>The returned hash has two keys …\n",null,1],["latest_gc_info","GC","ruby/classes/GC.html#method-c-latest_gc_info","(hash_or_key = nil)","<p>Returns information about the most recent garbage collection.\n<p>If the optional argument, hash, is given, …\n",null,1],["latest_rubygems_version","Gem","ruby/classes/Gem.html#method-c-latest_rubygems_version","()","<p>Returns the latest release version of RubyGems.\n",null,1],["latest_spec_for","Gem","ruby/classes/Gem.html#method-c-latest_spec_for","(name)","<p>Returns the latest release-version specification for the gem <code>name</code>.\n",null,1],["latest_spec_for","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-latest_spec_for","(name)","<p>Return the latest installed spec for gem <code>name</code>.\n",null,1],["latest_specs","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-latest_specs","(prerelease = false)","<p>Return the latest specs, optionally including prerelease specs if <code>prerelease</code> is true.\n",null,1],["latest_version?","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-latest_version-3F","()","<p>Is this dependency simply asking for the latest version of a gem?\n",null,1],["latest_version_for","Gem","ruby/classes/Gem.html#method-c-latest_version_for","(name)","<p>Returns the version of the latest release-version of gem <code>name</code>\n",null,1],["layout","ActionView::Layouts::ClassMethods","rails/classes/ActionView/Layouts/ClassMethods.html#method-i-layout","(layout, conditions = {})","<p>Specify the layout to use for this class.\n<p>If the specified layout is a:\n<p>String &mdash; the String is the template …\n",null,0],["layout.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/mailer/templates/layout_html_erb_tt.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; ...\n</code></pre>\n",null,0],["layout.text.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/mailer/templates/layout_text_erb_tt.html","","<p>&lt;%%= yield %&gt;\n",null,0],["lazy","Enumerable","ruby/classes/Enumerable.html#method-i-lazy","()","<p>Returns an Enumerator::Lazy, which redefines most Enumerable methods to postpone enumeration and enumerate …\n",null,1],["lazy","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-lazy","()","<p>Returns self.\n",null,1],["lazy_schema_cache_path","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-lazy_schema_cache_path","()","",null,0],["lchmod","File","ruby/classes/File.html#method-c-lchmod","(*args)","<p>Equivalent to File::chmod, but does not follow symbolic links (so it will change the permissions associated …\n",null,1],["lchmod","Pathname","ruby/classes/Pathname.html#method-i-lchmod","(p1)","<p>Same as Pathname.chmod, but does not follow symbolic links.\n<p>See File.lchmod.\n",null,1],["lchown","File","ruby/classes/File.html#method-c-lchown","(*args)","<p>Equivalent to File::chown, but does not follow symbolic links (so it will change the owner associated …\n",null,1],["lchown","Pathname","ruby/classes/Pathname.html#method-i-lchown","(p1, p2)","<p>Same as Pathname.chown, but does not follow symbolic links.\n<p>See File.lchown.\n",null,1],["lcm","Integer","ruby/classes/Integer.html#method-i-lcm","(p1)","<p>Returns the least common multiple of the two integers. The result is always positive. 0.lcm(x) and x.lcm …\n",null,1],["ld","Date","ruby/classes/Date.html#method-i-ld","()","<p>Returns the Lilian day number, which is the number of days since the beginning of the Gregorian calendar, …\n",null,1],["ldexp","Math","ruby/classes/Math.html#method-c-ldexp","(p1, p2)","<p>Returns the value of <code>fraction * 2**exponent</code>.\n<p>Domain of <code>fraction</code>: <code>[0.0, 1.0)</code>.\n<p>Domain of <code>exponent</code>: <code>[0, 1024]</code> …\n",null,1],["leap?","Date","ruby/classes/Date.html#method-c-leap-3F","(p1)","<p>Returns <code>true</code> if the given year is a leap year in the proleptic Gregorian calendar, <code>false</code> otherwise:\n\n<pre><code>Date.gregorian_leap?(2000) ...\n</code></pre>\n",null,1],["leap?","Date","ruby/classes/Date.html#method-i-leap-3F","()","<p>Returns <code>true</code> if the year is a leap year, <code>false</code> otherwise:\n\n<pre><code>Date.new(2000).leap? # =&gt; true\nDate.new(2001).leap? ...\n</code></pre>\n",null,1],["lease","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-lease","()","<p>this method must only be called while holding connection pool’s mutex\n",null,0],["left_joins","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-left_joins","(*args)","",null,0],["left_outer_joins","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-left_outer_joins","(*args)","<p>Performs LEFT OUTER JOINs on <code>args</code>:\n\n<pre><code>User.left_outer_joins(:posts)\n=&gt; SELECT &quot;users&quot;.* FROM &quot;users&quot; LEFT ...\n</code></pre>\n",null,0],["length","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-length","","<p>Returns the size of the collection calling <code>size</code> on the target. If the collection has been already loaded, …\n",null,0],["length","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-length","()","<p>Returns the number of elements in the rows array.\n",null,0],["length","Array","ruby/classes/Array.html#method-i-length","()","<p>Returns the count of elements in <code>self</code>.\n",null,1],["length","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-length","()","<p>Returns digest_obj.digest_length().\n",null,1],["length","ENV","ruby/classes/ENV.html#method-c-length","()","<p>Returns the count of environment variables:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;)\nENV.length # =&gt; 2 ...\n</code></pre>\n",null,1],["length","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-length","()","",null,1],["length","Hash","ruby/classes/Hash.html#method-i-length","()","<p>Returns the count of entries in <code>self</code>:\n\n<pre><code>{foo: 0, bar: 1, baz: 2}.length # =&gt; 3\n</code></pre>\n",null,1],["length","MatchData","ruby/classes/MatchData.html#method-i-length","()","<p>Returns size of the match array:\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\n# =&gt; #&lt;MatchData &quot;HX1138&quot; 1:&quot;H&quot; ...\n</code></pre>\n",null,1],["length","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-length","()","<p>Returns the number of referenced objects\n",null,1],["length","Set","ruby/classes/Set.html#method-i-length","()","",null,1],["length","String","ruby/classes/String.html#method-i-length","()","<p>Returns the count of characters (not bytes) in <code>self</code>:\n\n<pre><code>&#39;foo&#39;.length        # =&gt; 3\n&#39;тест&#39;.length       # ...\n</code></pre>\n",null,1],["length","StringIO","ruby/classes/StringIO.html#method-i-length","()","<p>Returns the size of the buffer string.\n",null,1],["length","Struct","ruby/classes/Struct.html#method-i-length","()","<p>Returns the number of members.\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe Smith&quot;, ...\n</code></pre>\n",null,1],["length","Symbol","ruby/classes/Symbol.html#method-i-length","()","<p>Equivalent to <code>self.to_s.length</code>; see String#length.\n",null,1],["length","SyntaxSuggest::PriorityEngulfQueue","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html#method-i-length","()","",null,1],["length","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-length","()","",null,1],["length","Tempfile","ruby/classes/Tempfile.html#method-i-length","()","",null,1],["length","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-length","()","<p>Returns the length of the queue.\n",null,1],["length","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-length","()","<p>Returns the length of the queue.\n",null,1],["level","Logger","ruby/classes/Logger.html#method-i-level","()","<p>Logging severity threshold (e.g. <code>Logger::INFO</code>).\n",null,1],["level","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-level","()","<p>returns the cmsg level as an integer.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).level\n#=&gt; ...\n</code></pre>\n",null,1],["level","Socket::Option","ruby/classes/Socket/Option.html#method-i-level","()","<p>returns the socket level as an integer.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).level ...\n</code></pre>\n",null,1],["level","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-level","()","<p>Returns compression level.\n",null,1],["level=","IRB::Notifier::CompositeNotifier","ruby/classes/IRB/Notifier/CompositeNotifier.html#method-i-level-3D","(value)","",null,1],["level=","Logger","ruby/classes/Logger.html#method-i-level-3D","(severity)","<p>Sets the log level; returns <code>severity</code>. See Log Level.\n<p>Argument <code>severity</code> may be an integer, a string, or …\n",null,1],["level_notifier=","IRB::Notifier::CompositeNotifier","ruby/classes/IRB/Notifier/CompositeNotifier.html#method-i-level_notifier-3D","(value)","<p>Sets the leveled notifier for this object.\n<p>When the given <code>value</code> is an instance of AbstractNotifier, #level_notifier …\n",null,1],["levenshtein_distance","Gem::Text","ruby/classes/Gem/Text.html#method-i-levenshtein_distance","(str1, str2)","<p>Returns a value representing the “cost” of transforming str1 into str2 Vendored version of …\n",null,1],["lex","Prism","ruby/classes/Prism.html#method-c-lex","(code, **options)","<p>Mirror the Prism.lex API by using the serialization API.\n",null,1],["lex","Ripper","ruby/classes/Ripper.html#method-c-lex","(src, filename = '-', lineno = 1, **kw)","<p>Tokenizes the Ruby program and returns an array of an array, which is formatted like <code>[[lineno, column],</code> …\n",null,1],["lex","SyntaxSuggest::LexAll","ruby/classes/SyntaxSuggest/LexAll.html#method-c-lex","(source, line_number)","",null,1],["lex_compat","Prism","ruby/classes/Prism.html#method-c-lex_compat","(source, **options)","<p>Returns a parse result whose value is an array of tokens that closely resembles the return value of  …\n",null,1],["lex_file","Prism","ruby/classes/Prism.html#method-c-lex_file","(filepath, **options)","<p>Mirror the Prism.lex_file API by using the serialization API.\n",null,1],["lex_ripper","Prism","ruby/classes/Prism.html#method-c-lex_ripper","(source)","<p>This lexes with the Ripper lex. It drops any space events but otherwise returns the same tokens. Raises …\n",null,1],["lgamma","Math","ruby/classes/Math.html#method-c-lgamma","(p1)","<p>Returns a 2-element array equivalent to:\n\n<pre><code>[Math.log(Math.gamma(x).abs), Math.gamma(x) &lt; 0 ? -1 : 1]\n</code></pre>\n<p>See …\n",null,1],["lib","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-lib","()","",null,0],["lib","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-lib","(filename, data = nil)","<p>Creates a file in <code>lib/</code>. The contents can be specified as an argument or as the return value of the block. …\n",null,0],["lib","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-lib","()","",null,0],["lib_dirs_glob","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-lib_dirs_glob","()","<p>Returns a string usable in Dir.glob to match all requirable paths for this spec.\n",null,1],["lib_files","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-lib_files","()","<p>Files in the Gem under one of the require_paths\n",null,1],["liberal_parsing?","CSV","ruby/classes/CSV.html#method-i-liberal_parsing-3F","()","<p>Returns the value that determines whether illegal input is to be handled; used for parsing; see {Option …\n",null,1],["liberal_parsing?","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-liberal_parsing-3F","()","",null,1],["library_name","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-library_name","()","<p>Returns library name. If the method fails to access library name, WIN32OLERuntimeError is raised.\n\n<pre><code>tlib ...\n</code></pre>\n",null,1],["libyaml_version","Psych","ruby/classes/Psych.html#method-c-libyaml_version","()","<p>Returns the version of libyaml being used\n",null,1],["license","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-license","()","",null,0],["license","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-license","()","<p>Singular accessor for #licenses\n",null,1],["license=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-license-3D","(o)","<p>The license for this gem.\n<p>The license must be no more than 64 characters.\n<p>This should just be the name …\n",null,1],["licenses","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-licenses","()","<p>Plural accessor for setting licenses\n<p>See #license= for details\n",null,1],["licenses=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-licenses-3D","(licenses)","<p>The license(s) for the library.\n<p>Each license must be a short name, no more than 64 characters.\n<p>This should …\n",null,1],["limit","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-limit","(value)","<p>Specifies a limit for the number of records to retrieve.\n\n<pre><code>User.limit(10) # generated SQL has &#39;LIMIT 10&#39; ...\n</code></pre>\n",null,0],["limit","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-limit","(limit)","<p>Limits the byte size of the string to a number of bytes without breaking characters. Usable when the …\n",null,0],["limit","BigDecimal","ruby/classes/BigDecimal.html#method-c-limit","(p1 = v1)","<p>Limit the number of significant digits in newly created BigDecimal numbers to the specified value. Rounding …\n",null,1],["limit","Thread::Backtrace","ruby/classes/Thread/Backtrace.html#method-c-limit","()","<p>Returns maximum backtrace length set by <code>--backtrace-limit</code> command-line option. The default is <code>-1</code> which …\n",null,1],["line","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-line","","",null,0],["line","CSV","ruby/classes/CSV.html#method-i-line","()","<p>Returns the line most recently read:\n\n<pre><code>string = &quot;foo,0\\nbar,1\\nbaz,2\\n&quot;\npath = &#39;t.csv&#39;\nFile.write(path, ...\n</code></pre>\n",null,1],["line","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-line","()","",null,1],["line","IRB::Canvas","ruby/classes/IRB/Canvas.html#method-i-line","((x1, y1), (x2, y2))","",null,1],["line","IRB::StdioInputMethod","ruby/classes/IRB/StdioInputMethod.html#method-i-line","(line_no)","<p>Returns the current line number for #io.\n<p>#line counts the number of times #gets is called.\n<p>See IO#lineno …\n",null,1],["line","Prism::Source","ruby/classes/Prism/Source.html#method-i-line","(byte_offset)","<p>Binary search through the offsets to find the line number for the given byte offset.\n",null,1],["line_editor","Reline","ruby/classes/Reline.html#method-c-line_editor","()","",null,1],["line_editor","Reline","ruby/classes/Reline.html#method-c-line_editor","()","",null,1],["line_start","Prism::Source","ruby/classes/Prism/Source.html#method-i-line_start","(byte_offset)","<p>Return the byte offset of the start of the line corresponding to the given byte offset.\n",null,1],["line_statistics","","rails/files/rails/tools/line_statistics.html","","<p># Class used to calculate LOC for a provided file list. # # Example: #   files = FileList[“lib/active_record/ …\n",null,0],["line_stub","Coverage","ruby/classes/Coverage.html#method-c-line_stub","(file)","",null,1],["line_width","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-line_width","()","<p>Get the preferred line width.\n",null,1],["line_width=","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-line_width-3D","(p1)","<p>Set the preferred line with to <code>width</code>.\n",null,1],["linear_time?","Regexp","ruby/classes/Regexp.html#method-c-linear_time-3F","(*args)","<p>Returns <code>true</code> if matching against <code>re</code> can be done in linear time to the input string.\n\n<pre><code>Regexp.linear_time?(/re/) ...\n</code></pre>\n",null,1],["lineno","ARGF","ruby/classes/ARGF.html#method-i-lineno","()","<p>Returns the current line number of ARGF as a whole. This value can be set manually with ARGF.lineno= …\n",null,1],["lineno","CSV","ruby/classes/CSV.html#method-i-lineno","()","<p>Returns the count of the rows parsed or generated.\n<p>Parsing:\n\n<pre><code>string = &quot;foo,0\\nbar,1\\nbaz,2\\n&quot;\npath = &#39;t.csv&#39; ...\n</code></pre>\n",null,1],["lineno","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-lineno","()","",null,1],["lineno","IO","ruby/classes/IO.html#method-i-lineno","()","<p>Returns the current line number for the stream; see Line Number.\n",null,1],["lineno","Ripper::Filter","ruby/classes/Ripper/Filter.html#method-i-lineno","()","<p>The line number of the current token. This value starts from 1. This method is valid only in event handlers. …\n",null,1],["lineno","StringIO","ruby/classes/StringIO.html#method-i-lineno","()","<p>Returns the current line number in <code>self</code>; see Line Number.\n",null,1],["lineno","Thread::Backtrace::Location","ruby/classes/Thread/Backtrace/Location.html#method-i-lineno","()","<p>Returns the line number of this frame.\n<p>For example, using <code>caller_locations.rb</code> from Thread::Backtrace::Location …\n",null,1],["lineno","TracePoint","ruby/classes/TracePoint.html#method-i-lineno","()","<p>Line number of the event\n",null,1],["lineno","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-lineno","()","<p>The line number of the last row read from this file.\n",null,1],["lineno=","ARGF","ruby/classes/ARGF.html#method-i-lineno-3D","(p1)","<p>Sets the line number of ARGF as a whole to the given Integer.\n<p>ARGF sets the line number automatically …\n",null,1],["lineno=","IO","ruby/classes/IO.html#method-i-lineno-3D","(p1)","<p>Sets and returns the line number for the stream; see Line Number.\n",null,1],["lineno=","StringIO","ruby/classes/StringIO.html#method-i-lineno-3D","(p1)","<p>Sets the current line number in <code>self</code> to the given <code>new_line_number</code>; see Line Number.\n",null,1],["lineno=","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-lineno-3D","(p1)","<p>Specify line number of the last row read from this file.\n",null,1],["lines","String","ruby/classes/String.html#method-i-lines","(*args)","<p>Forms substrings (“lines”) of <code>self</code> according to the given arguments (see String#each_line for …\n",null,1],["lines","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-lines","()","<p>Returns the lines matched by the current scan as an array of CodeLines\n",null,1],["lines","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-lines","()","<p>Return an array of CodeLines in the document\n",null,1],["lines","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-lines","()","",null,1],["linger","Socket::Option","ruby/classes/Socket/Option.html#method-c-linger","(p1, p2)","<p>Creates a new Socket::Option object for SOL_SOCKET/SO_LINGER.\n<p><em>onoff</em> should be an integer or a boolean. …\n",null,1],["linger","Socket::Option","ruby/classes/Socket/Option.html#method-i-linger","()","<p>Returns the linger data in <em>sockopt</em> as a pair of boolean and integer.\n\n<pre><code>sockopt = Socket::Option.linger(true, ...\n</code></pre>\n",null,1],["link","File","ruby/classes/File.html#method-c-link","(p1, p2)","<p>Creates a new name for an existing file using a hard link. Will not overwrite <em>new_name</em> if it already …\n",null,1],["link","FileUtils","ruby/classes/FileUtils.html#method-c-link","(src, dest, force: nil, noop: nil, verbose: nil)","",null,1],["link_entry","FileUtils","ruby/classes/FileUtils.html#method-c-link_entry","(src, dest, dereference_root = false, remove_destination = false)","<p>Creates hard links; returns <code>nil</code>.\n<p>Arguments <code>src</code> and <code>dest</code> should be interpretable as paths.\n<p>If <code>src</code> is the …\n",null,1],["link_local?","IPAddr","ruby/classes/IPAddr.html#method-i-link_local-3F","()","<p>Returns true if the ipaddr is a link-local address.  IPv4 addresses in 169.254.0.0/16 reserved by RFC …\n",null,1],["link_to","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to","(name = nil, options = nil, html_options = nil, &block)","<p>Creates an anchor element of the given <code>name</code> using a URL created by the set of <code>options</code>. See the valid …\n",null,0],["link_to","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-link_to","(content, label = content, text = nil)","<p>Finds a link reference for <code>label</code> and creates a new link to it with\n<code>content</code> as the link text. If <code>label</code> ...\n",null,1],["link_to_if","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_if","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by the set of <code>options</code> if <code>condition</code> is true, …\n",null,0],["link_to_unless","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by the set of <code>options</code> unless <code>condition</code> is true, …\n",null,0],["link_to_unless_current","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless_current","(name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by the set of <code>options</code> unless the current request …\n",null,0],["links","ActionText::Content","rails/classes/ActionText/Content.html#method-i-links","()","",null,0],["list","Encoding","ruby/classes/Encoding.html#method-c-list","()","<p>Returns the list of loaded encodings.\n\n<pre><code>Encoding.list\n#=&gt; [#&lt;Encoding:ASCII-8BIT&gt;, #&lt;Encoding:UTF-8&gt;,\n  ...\n</code></pre>\n",null,1],["list","Signal","ruby/classes/Signal.html#method-c-list","()","<p>Returns a list of signal names mapped to the corresponding underlying signal numbers.\n\n<pre><code>Signal.list   #=&gt; ...\n</code></pre>\n",null,1],["list","Thread","ruby/classes/Thread.html#method-c-list","()","<p>Returns an array of Thread objects for all threads that are either runnable or stopped.\n\n<pre><code>Thread.new { sleep(200) ...\n</code></pre>\n",null,1],["list","ThreadGroup","ruby/classes/ThreadGroup.html#method-i-list","()","<p>Returns an array of all existing Thread objects that belong to this group.\n\n<pre><code>ThreadGroup::Default.list  ...\n</code></pre>\n",null,1],["list_files_in_directory","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-list_files_in_directory","(dir)","<p>Return a list of the files to be processed in a directory. We know that this directory doesn’t have …\n",null,1],["list_item_from","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-list_item_from","(unparsed)","<p>Creates an RDoc::Markup::ListItem by parsing the <code>unparsed</code> content from\nthe first parsing pass.\n",null,1],["listen","ActionCable::SubscriptionAdapter::PostgreSQL::Listener","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL/Listener.html#method-i-listen","()","",null,0],["listen","ActionCable::SubscriptionAdapter::Redis::Listener","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener.html#method-i-listen","(conn)","",null,0],["listen","Addrinfo","ruby/classes/Addrinfo.html#method-i-listen","(backlog=Socket::SOMAXCONN)","<p>creates a listening socket bound to self.\n",null,1],["listen","OpenSSL::SSL::SSLServer","ruby/classes/OpenSSL/SSL/SSLServer.html#method-i-listen","(backlog=Socket::SOMAXCONN)","<p>See TCPServer#listen for details.\n",null,1],["listen","Socket","ruby/classes/Socket.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the backlog. A call to <em>listen</em> only applies if the …\n",null,1],["listen","TCPServer","ruby/classes/TCPServer.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the backlog. A call to <em>listen</em> only applies if the …\n",null,1],["listen","UNIXServer","ruby/classes/UNIXServer.html#method-i-listen","(p1)","<p>Listens for connections, using the specified <code>int</code> as the backlog. A call to <em>listen</em> only applies if the …\n",null,1],["listener_thread","Gem::GemcutterUtilities::WebauthnListener","ruby/classes/Gem/GemcutterUtilities/WebauthnListener.html#method-c-listener_thread","(host, server)","",null,1],["listeners_for","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-listeners_for","(name)","",null,0],["listening?","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-listening-3F","(name)","",null,0],["literals","","ruby/files/ruby/doc/syntax/literals_rdoc.html","","<p>Literals\n<p>Literals create objects you can use in your program.  Literals include:\n<p>Boolean and Nil Literals …\n",null,1],["ljust","String","ruby/classes/String.html#method-i-ljust","(*args)","<p>Returns a left-justified copy of <code>self</code>.\n<p>If integer argument <code>size</code> is greater than the size (in characters) …\n",null,1],["ln","FileUtils","ruby/classes/FileUtils.html#method-c-ln","(src, dest, force: nil, noop: nil, verbose: nil)","<p>Creates hard links.\n<p>Arguments <code>src</code> (a single path or an array of paths) and <code>dest</code> (a single path) should …\n",null,1],["ln","OpenSSL::ASN1::ObjectId","ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-ln","()","<p>The long name of the ObjectId, as defined in &lt;openssl/objects.h&gt;.\n",null,1],["ln_s","FileUtils","ruby/classes/FileUtils.html#method-c-ln_s","(src, dest, force: nil, relative: false, target_directory: true, noop: nil, verbose: nil)","<p>Creates symbolic links.\n<p>Arguments <code>src</code> (a single path or an array of paths) and <code>dest</code> (a single path) should …\n",null,1],["ln_sf","FileUtils","ruby/classes/FileUtils.html#method-c-ln_sf","(src, dest, noop: nil, verbose: nil)","<p>Like FileUtils.ln_s, but always with keyword argument <code>force: true</code> given.\n",null,1],["ln_sr","FileUtils","ruby/classes/FileUtils.html#method-c-ln_sr","(src, dest, target_directory: true, force: nil, noop: nil, verbose: nil)","<p>Like FileUtils.ln_s, but create links relative to <code>dest</code>.\n",null,1],["load","ActionText::Serialization","rails/classes/ActionText/Serialization.html#method-i-load","(content)","",null,0],["load","ActiveRecord::Encryption::MessageSerializer","rails/classes/ActiveRecord/Encryption/MessageSerializer.html#method-i-load","(serialized_content)","",null,0],["load","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-load","(&block)","<p>Causes the records to be loaded from the database if they have not been loaded already. You can use this …\n",null,0],["load","ActiveSupport::Cache::Coders::Loader","rails/classes/ActiveSupport/Cache/Coders/Loader.html#method-i-load","(payload)","",null,0],["load","ActiveSupport::Cache::MemCacheStore::Coders::Loader","rails/classes/ActiveSupport/Cache/MemCacheStore/Coders/Loader.html#method-i-load","(payload)","",null,0],["load","Bundler","ruby/classes/Bundler.html#method-c-load","()","",null,1],["load","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-load","()","<p>Loads the gem dependency file and returns self.\n",null,1],["load","Gem::SafeMarshal","ruby/classes/Gem/SafeMarshal.html#method-c-load","(input, permitted_classes: [::Symbol], permitted_symbols: [], permitted_ivars: {})","",null,1],["load","Gem::SafeYAML","ruby/classes/Gem/SafeYAML.html#method-c-load","(input)","",null,1],["load","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-load","(file)","<p>Loads Ruby format gemspec from <code>file</code>.\n",null,1],["load","Gem::YAMLSerializer","ruby/classes/Gem/YAMLSerializer.html#method-i-load","(str)","",null,1],["load","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-load","(file)","",null,1],["load","JSON","ruby/classes/JSON.html#method-i-load","(source, proc = nil, options = {})","<p>Returns the Ruby objects created by parsing the given <code>source</code>.\n<p>Argument <code>source</code> must be, or be convertible …\n",null,1],["load","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-c-load","(source, proc = nil, opts = {})","",null,1],["load","Kernel","ruby/classes/Kernel.html#method-i-load","(p1, p2 = v2)","<p>Loads and executes the Ruby program in the file <em>filename</em>.\n<p>If the filename is an absolute path (e.g. starts …\n",null,1],["load","Marshal","ruby/classes/Marshal.html#method-c-load","(source, proc = nil, freeze: false)","<p>Returns the result of converting the serialized data in source into a Ruby object (possibly with associated …\n",null,1],["load","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-c-load","(p1 = v1)","<p>This method loads engines. If <em>name</em> is nil, then all builtin engines are loaded. Otherwise, the given …\n",null,1],["load","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-c-load","(p1)","<p>Read the chained certificates from the given input. Supports both PEM and DER encoded certificates.\n<p>PEM …\n",null,1],["load","OptionParser","ruby/classes/OptionParser.html#method-i-load","(filename = nil, into: nil)","<p>Loads options from file names as <code>filename</code>. Does nothing when the file is not present. Returns whether …\n",null,1],["load","Prism","ruby/classes/Prism.html#method-c-load","(source, serialized)","<p>Load the serialized AST using the source as a reference into a tree.\n",null,1],["load","Psych","ruby/classes/Psych.html#method-c-load","(yaml, permitted_classes: [Symbol], permitted_symbols: [], aliases: false, filename: nil, fallback: nil, symbolize_names: false, freeze: false, strict_integer: false)","<p>Load <code>yaml</code> in to a Ruby data structure.  If multiple documents are provided, the object contained in the …\n",null,1],["load_all","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-load_all","()","<p>Loads all items from this store into memory.  This recreates a documentation tree for use by a generator …\n",null,1],["load_api_keys","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-load_api_keys","()","",null,1],["load_async","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-load_async","()","<p>Schedule the query to be performed from a background thread pool.\n\n<pre><code>Post.where(published: true).load_async ...\n</code></pre>\n",null,0],["load_cache","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-load_cache","()","<p>Loads cache file for this store\n",null,1],["load_certificate","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-i-load_certificate","(certificate_file)","<p>Loads the given <code>certificate_file</code>\n",null,1],["load_class","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-load_class","(klass_name)","<p>Loads ri data for <code>klass_name</code> and hooks it up to this store.\n",null,1],["load_class_data","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-load_class_data","(klass_name)","<p>Loads ri data for <code>klass_name</code>\n",null,1],["load_command","IRB::ExtendCommandBundle","ruby/classes/IRB/ExtendCommandBundle.html#method-c-load_command","(command)","<p>Convert a command name to its implementation class if such command exists\n",null,1],["load_commands_to_main","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-i-load_commands_to_main","()","",null,1],["load_config_initializer","Rails::Engine","rails/classes/Rails/Engine.html#method-i-load_config_initializer","(initializer)","",null,0],["load_console","Rails::Engine","rails/classes/Rails/Engine.html#method-i-load_console","(app = self)","<p>Load console and invoke the registered hooks. Check Rails::Railtie.console for more info.\n",null,0],["load_default_cert","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-load_default_cert","()","",null,1],["load_default_key","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-load_default_key","()","",null,1],["load_defaults","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-load_defaults","(target_version)","<p>Loads default configuration values for a target version. This includes defaults for versions prior to …\n",null,0],["load_defaults","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-load_defaults","()","<p>Loads the default specifications. It should be called only once.\n",null,1],["load_env_plugins","Gem","ruby/classes/Gem.html#method-c-load_env_plugins","()","<p>Find all ‘rubygems_plugin’ files in $LOAD_PATH and load them\n",null,1],["load_file","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-load_file","(filename)","",null,1],["load_file","IRB::IrbLoader","ruby/classes/IRB/IrbLoader.html#method-i-load_file","(path, priv = nil)","<p>Loads the given file in the current session’s context and evaluates it.\n<p>See Irb#suspend_input_method …\n",null,1],["load_file","JSON","ruby/classes/JSON.html#method-i-load_file","(filespec, opts = {})","<p>Calls:\n\n<pre><code>parse(File.read(path), opts)\n</code></pre>\n<p>See method #parse.\n",null,1],["load_file","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-c-load_file","(path)","",null,1],["load_file","Psych","ruby/classes/Psych.html#method-c-load_file","(filename, **kwargs)","<p>Loads the document contained in <code>filename</code>.  Returns the yaml contained in <code>filename</code> as a Ruby object, or …\n",null,1],["load_file!","JSON","ruby/classes/JSON.html#method-i-load_file-21","(filespec, opts = {})","<p>Calls:\n\n<pre><code>JSON.parse!(File.read(path, opts))\n</code></pre>\n<p>See method #parse!\n",null,1],["load_from","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-c-load_from","(filename)","",null,0],["load_from_binary","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-load_from_binary","(p1)","<p>Load an iseq object from binary format String object created by RubyVM::InstructionSequence.to_binary …\n",null,1],["load_from_binary_extra_data","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-load_from_binary_extra_data","(p1)","<p>Load extra data embed into binary format String object.\n",null,1],["load_gemdeps","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-load_gemdeps","(path, without_groups = [], installing = false)","<p>Load a dependency management file.\n",null,1],["load_gemspec","Bundler","ruby/classes/Bundler.html#method-c-load_gemspec","(file, validate = false)","",null,1],["load_gemspec_uncached","Bundler","ruby/classes/Bundler.html#method-c-load_gemspec_uncached","(file, validate = false)","",null,1],["load_generators","Rails::Command::Actions","rails/classes/Rails/Command/Actions.html#method-i-load_generators","()","",null,0],["load_generators","Rails::Engine","rails/classes/Rails/Engine.html#method-i-load_generators","(app = self)","<p>Load Rails generators and invoke the registered hooks. Check Rails::Railtie.generators for more info. …\n",null,0],["load_initial_configs","Reline::Face","ruby/classes/Reline/Face.html#method-c-load_initial_configs","()","",null,1],["load_interlock","ActiveSupport::Dependencies","rails/classes/ActiveSupport/Dependencies.html#method-c-load_interlock","(&block)","<p>Execute the supplied block while holding an exclusive lock, preventing any other thread from being inside …\n",null,0],["load_method","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-load_method","(klass_name, method_name)","<p>Loads ri data for <code>method_name</code> in <code>klass_name</code>\n",null,1],["load_options","RDoc::Options","ruby/classes/RDoc/Options.html#method-c-load_options","()","<p>Loads options from .rdoc_options if the file exists, otherwise creates a new RDoc::Options instance. …\n",null,1],["load_page","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-load_page","(page_name)","<p>Loads ri data for <code>page_name</code>\n",null,1],["load_path_insert_index","Gem","ruby/classes/Gem.html#method-c-load_path_insert_index","()","<p>The index to insert activated gem paths into the $LOAD_PATH. The activated gem’s paths are inserted …\n",null,1],["load_paths","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-load_paths","()","",null,0],["load_plugins","Gem","ruby/classes/Gem.html#method-c-load_plugins","()","<p>Find rubygems plugin files in the standard location and load them\n",null,1],["load_private_key","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-load_private_key","(p1 = v1, p2 = v2)","<p>Loads the given private key identified by <em>id</em> and <em>data</em>.\n<p>An EngineError is raised of the OpenSSL::PKey is …\n",null,1],["load_public_key","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-load_public_key","(p1 = v1, p2 = v2)","<p>Loads the given public key identified by <em>id</em> and <em>data</em>.\n<p>An EngineError is raised of the OpenSSL::PKey is …\n",null,1],["load_random_file","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-load_random_file","(p1)","<p>Reads bytes from <em>filename</em> and adds them to the PRNG.\n",null,1],["load_rdoc","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-c-load_rdoc","()","<p>Loads the RDoc generator\n",null,1],["load_rdoc","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-c-load_rdoc","()","<p>Loads the RDoc generator\n",null,1],["load_records","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-load_records","(records)","",null,0],["load_records_for_keys","ActiveRecord::Associations::Preloader::Association::LoaderQuery","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderQuery.html#method-i-load_records_for_keys","(keys, &block)","",null,0],["load_records_in_batch","ActiveRecord::Associations::Preloader::Association::LoaderQuery","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderQuery.html#method-i-load_records_in_batch","(loaders)","",null,0],["load_runner","Rails::Engine","rails/classes/Rails/Engine.html#method-i-load_runner","(app = self)","<p>Load Rails runner and invoke the registered hooks. Check Rails::Railtie.runner for more info.\n",null,0],["load_safe_marshal","Gem","ruby/classes/Gem.html#method-c-load_safe_marshal","()","",null,1],["load_schema!","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-load_schema-21","()","",null,0],["load_schema_current","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-load_schema_current","(format = ActiveRecord.schema_format, file = nil, environment = env)","",null,0],["load_schema_if_pending!","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-c-load_schema_if_pending-21","()","",null,0],["load_seed","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-load_seed","()","",null,0],["load_seed","Rails::Engine","rails/classes/Rails/Engine.html#method-i-load_seed","()","<p>Load data from db/seeds.rb file. It can be used in to load engines’ seeds, e.g.:\n<p>Blog::Engine.load_seed …\n",null,0],["load_server","Rails::Engine","rails/classes/Rails/Engine.html#method-i-load_server","(app = self)","<p>Invoke the server registered hooks. Check Rails::Railtie.server for more info.\n",null,0],["load_session","ActionDispatch::Session::CookieStore","rails/classes/ActionDispatch/Session/CookieStore.html#method-i-load_session","(req)","",null,0],["load_session","ActionDispatch::Session::StaleSessionCheck","rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-load_session","(env)","",null,0],["load_specs","Gem::Source","ruby/classes/Gem/Source.html#method-i-load_specs","(type)","<p>Loads <code>type</code> kind of specs fetching from +@uri+ if the on-disk cache is out of date.\n<p><code>type</code> is one of the …\n",null,1],["load_stream","Psych","ruby/classes/Psych.html#method-c-load_stream","(yaml, filename: nil, fallback: [], **kwargs)","<p>Load multiple documents given in <code>yaml</code>.  Returns the parsed documents as a list.  If a block is given, …\n",null,1],["load_target","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-load_target","()","",null,0],["load_tasks","Rails::Command::Actions","rails/classes/Rails/Command/Actions.html#method-i-load_tasks","()","",null,0],["load_tasks","Rails::Engine","rails/classes/Rails/Engine.html#method-i-load_tasks","(app = self)","<p>Load Rake and railties tasks, and invoke the registered hooks. Check Rails::Railtie.rake_tasks for more …\n",null,0],["load_variable_map","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-load_variable_map","(map_name)","<p>Loads the variable map with the given <code>name</code> from the RDoc::Store, if present.\n",null,1],["load_with_rubygems_config_hash","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-c-load_with_rubygems_config_hash","(yaml)","",null,1],["load_yaml","Gem","ruby/classes/Gem.html#method-c-load_yaml","()","<p>Loads YAML, preferring Psych\n",null,1],["load_yaml","RDoc","ruby/classes/RDoc.html#method-c-load_yaml","()","<p>Loads the best available YAML library.\n",null,1],["loaded","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-loaded","()","",null,0],["loaded?","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-loaded-3F","()","<p>Returns <code>true</code> if the association has been loaded, otherwise <code>false</code>.\n\n<pre><code>person.pets.loaded? # =&gt; false\nperson.pets.records ...\n</code></pre>\n",null,0],["loading","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-loading","(&block)","",null,0],["local","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-local","(*args)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone of <code>self</code> from given values. …\n",null,0],["local","Gem::Platform","ruby/classes/Gem/Platform.html#method-c-local","()","",null,1],["local","Time","ruby/classes/Time.html#method-c-local","(*args)","<p>Like Time.utc, except that the returned <code>Time</code> object has the local timezone, not the UTC timezone:\n\n<pre><code># With ...\n</code></pre>\n",null,1],["local?","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-local-3F","()","<p>True if the request came from localhost, 127.0.0.1, or ::1.\n",null,0],["local?","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-local-3F","()","<p>Is local fetching enabled?\n",null,1],["local_address","BasicSocket","ruby/classes/BasicSocket.html#method-i-local_address","()","<p>Returns an Addrinfo object for local address obtained by getsockname.\n<p>Note that addrinfo.protocol is filled …\n",null,1],["local_assigns","ActionView::Template","rails/classes/ActionView/Template.html#method-i-local_assigns","","<p>Returns a hash with the defined local variables.\n<p>Given this sub template rendering:\n\n<pre><code>&lt;%= render &quot;shared/header&quot;, ...\n</code></pre>\n",null,0],["local_platform","Bundler","ruby/classes/Bundler.html#method-c-local_platform","()","",null,1],["local_to_utc","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-local_to_utc","(time, dst = true)","<p>Adjust the given time to the simultaneous time in UTC. Returns a Time.utc() instance.\n",null,0],["local_variable_defined?","Binding","ruby/classes/Binding.html#method-i-local_variable_defined-3F","(p1)","<p>Returns <code>true</code> if a local variable <code>symbol</code> exists.\n\n<pre><code>def foo\n  a = 1\n  binding.local_variable_defined?(:a) ...\n</code></pre>\n",null,1],["local_variable_get","Binding","ruby/classes/Binding.html#method-i-local_variable_get","(p1)","<p>Returns the value of the local variable <code>symbol</code>.\n\n<pre><code>def foo\n  a = 1\n  binding.local_variable_get(:a) #=&gt; 1 ...\n</code></pre>\n",null,1],["local_variable_get","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-i-local_variable_get","(name)","",null,1],["local_variable_set","Binding","ruby/classes/Binding.html#method-i-local_variable_set","(p1, p2)","<p>Set local variable named <code>symbol</code> as <code>obj</code>.\n\n<pre><code>def foo\n  a = 1\n  bind = binding\n  bind.local_variable_set(:a, ...\n</code></pre>\n",null,1],["local_variable_set","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-i-local_variable_set","(name, value)","",null,1],["local_variables","Binding","ruby/classes/Binding.html#method-i-local_variables","()","<p>Returns the names of the binding’s local variables as symbols.\n\n<pre><code>def foo\n  a = 1\n  2.times do |n|\n  ...\n</code></pre>\n",null,1],["local_variables","Kernel","ruby/classes/Kernel.html#method-i-local_variables","()","<p>Returns the names of the current local variables.\n\n<pre><code>fred = 1\nfor i in 1..10\n   # ...\nend\nlocal_variables ...\n</code></pre>\n",null,1],["local_variables","NameError","ruby/classes/NameError.html#method-i-local_variables","()","<p>Return a list of the local variable names defined where this NameError exception was raised.\n<p>Internal …\n",null,1],["locale","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-locale","()","<p>Returns current locale id (lcid). The default locale is WIN32OLE::LOCALE_SYSTEM_DEFAULT.\n\n<pre><code>lcid = WIN32OLE.locale\n</code></pre>\n",null,1],["locale=","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-locale-3D","(p1)","<p>Sets current locale id (lcid).\n\n<pre><code>WIN32OLE.locale = 1033 # set locale English(U.S)\nobj = WIN32OLE_VARIANT.new(&quot;$100,000&quot;, ...\n</code></pre>\n",null,1],["locale_charmap","Encoding","ruby/classes/Encoding.html#method-c-locale_charmap","()","<p>Returns the locale charmap name. It returns nil if no appropriate information.\n\n<pre><code>Debian GNU/Linux\n  LANG=C ...\n</code></pre>\n",null,1],["localize","AbstractController::Translation","rails/classes/AbstractController/Translation.html#method-i-localize","(object, **options)","<p>Delegates to <code>I18n.localize</code>.\n",null,0],["localize","ActionView::Helpers::TranslationHelper","rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-localize","(object, **options)","<p>Delegates to <code>I18n.localize</code> with no additional functionality.\n<p>See www.rubydoc.info/gems/i18n/I18n/Backend/Base:localize …\n",null,0],["localtime","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-localtime","(utc_offset = nil)","<p>Returns a <code>Time</code> instance of the simultaneous time in the system timezone.\n",null,0],["localtime","DateTime","rails/classes/DateTime.html#method-i-localtime","(utc_offset = nil)","<p>Returns a <code>Time</code> instance of the simultaneous time in the system timezone.\n",null,0],["localtime","Time","ruby/classes/Time.html#method-i-localtime","(*args)","<p>With no argument given:\n<p>Returns <code>self</code> if <code>self</code> is a local time.\n<p>Otherwise returns a new <code>Time</code> in the user’s …\n",null,1],["location","Prism::LexCompat::Token","ruby/classes/Prism/LexCompat/Token.html#method-i-location","()","<p>The location of the token in the source.\n",null,1],["location=","ERB","ruby/classes/ERB.html#method-i-location-3D","((filename, lineno))","<p>Sets optional filename and line number that will be used in ERB code evaluation and error reporting. …\n",null,1],["location_of_caller","Gem","ruby/classes/Gem.html#method-c-location_of_caller","(depth = 1)","<p>The file name and line number of the caller of the caller of this method.\n<p><code>depth</code> is how many layers up …\n",null,1],["lock","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-lock","(locks = true)","<p>Specifies locking settings (default to <code>true</code>). For more information on locking, please see ActiveRecord::Locking …\n",null,0],["lock","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-lock","(path, body, initheader = nil)","<p>Sends a LOCK request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["lock","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-i-lock","()","<p>Attempts to grab the lock and waits if it isn’t available. Raises <code>ThreadError</code> if <code>mutex</code> was locked …\n",null,1],["lock!","ActiveRecord::Locking::Pessimistic","rails/classes/ActiveRecord/Locking/Pessimistic.html#method-i-lock-21","(lock = true)","<p>Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking …\n",null,0],["lock_thread=","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-lock_thread-3D","(lock_thread)","",null,0],["locked","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-locked","()","<p>Allows to process a buffer in exclusive way, for concurrency-safety. While the block is performed, the …\n",null,1],["locked?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-locked-3F","()","<p>If the buffer is <em>locked</em>, meaning it is inside #locked block execution. Locked buffer can’t be resized …\n",null,1],["locked?","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-i-locked-3F","()","<p>Returns <code>true</code> if this lock is currently held by some thread.\n",null,1],["locked_gems","Bundler","ruby/classes/Bundler.html#method-c-locked_gems","()","",null,1],["locking_column=","ActiveRecord::Locking::Optimistic::ClassMethods","rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_column-3D","(value)","<p>Set the column to use for optimistic locking. Defaults to <code>lock_version</code>.\n",null,0],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_enabled-3F","()","<p>Returns true if the <code>lock_optimistically</code> flag is set to true (which it is, by default) and the table includes …\n",null,0],["log","ActionCable::Connection::TaggedLoggerProxy","rails/classes/ActionCable/Connection/TaggedLoggerProxy.html#method-i-log","(type, message)","",null,0],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-log","(sql, name = \"SQL\", binds = [], type_casted_binds = [], statement_name = nil, async: false, &block)","",null,0],["log","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-log","()","",null,0],["log","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-log","(*args)","<p>Define log for backwards compatibility. If just one argument is sent, invoke say, otherwise invoke say_status. …\n",null,0],["log","BigMath","ruby/classes/BigMath.html#method-c-log","(p1, p2)","<p>Computes the natural logarithm of <code>decimal</code> to the specified number of digits of precision, <code>numeric</code>.\n<p>If …\n",null,1],["log","Logger","ruby/classes/Logger.html#method-i-log","(severity, message = nil, progname = nil)","",null,1],["log","Math","ruby/classes/Math.html#method-c-log","(*args)","<p>Returns the base <code>base</code> logarithm of <code>x</code>.\n<p>Domain: <code>[0, INFINITY]</code>.\n<p>Range: <code>[-INFINITY, INFINITY)]</code>.\n",null,1],["log","Syslog","ruby/classes/Syslog.html#method-c-log","(*args)","<p>Log a message with the specified priority. Example:\n\n<pre><code>Syslog.log(Syslog::LOG_CRIT, &quot;Out of disk space&quot;) ...\n</code></pre>\n",null,1],["log.rake","","rails/files/rails/railties/lib/rails/tasks/log_rake.html","","<p># frozen_string_literal: true\n<p>namespace :log do\n\n<pre><code>##\n# Truncates all/specified log files\n# ENV[&#39;LOGS&#39;]\n# ...\n</code></pre>\n",null,0],["log10","Math","ruby/classes/Math.html#method-c-log10","(p1)","<p>Returns the base 10 logarithm of <code>x</code>.\n<p>Domain: <code>[0, INFINITY]</code>.\n<p>Range: <code>[-INFINITY, INFINITY]</code>.\n",null,1],["log2","Math","ruby/classes/Math.html#method-c-log2","(p1)","<p>Returns the base 2 logarithm of <code>x</code>.\n<p>Domain: <code>[0, INFINITY]</code>.\n<p>Range: <code>[-INFINITY, INFINITY]</code>.\n",null,1],["log_at","ActionController::Logging::ClassMethods","rails/classes/ActionController/Logging/ClassMethods.html#method-i-log_at","(level, **options)","<p>Set a different log level per request.\n\n<pre><code># Use the debug log level if a particular cookie is set.\nclass ...\n</code></pre>\n",null,0],["log_subscribers","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-c-log_subscribers","()","",null,0],["logger","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-c-logger","()","",null,0],["logger","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-logger","()","",null,0],["logger","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-logger","()","",null,0],["logger","ActionMailer::LogSubscriber","rails/classes/ActionMailer/LogSubscriber.html#method-i-logger","()","<p>Use the logger configured for ActionMailer::Base.\n",null,0],["logger","ActionView::Digestor","rails/classes/ActionView/Digestor.html#method-c-logger","()","",null,0],["logger","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-logger","()","",null,0],["logger","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-logger","","<p>Accepts a logger conforming to the interface of Log4r which is then passed on to any new database connections …\n",null,0],["logger","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-i-logger","()","",null,0],["logger","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-logger","()","",null,0],["logger","ActiveStorage::Previewer","rails/classes/ActiveStorage/Previewer.html#method-i-logger","()","",null,0],["logger","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-c-logger","()","",null,0],["logger","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-i-logger","()","",null,0],["logger.js","","rails/files/rails/actioncable/app/javascript/action_cable/logger_js.html","","<p>import adapters from “./adapters”\n<p>// The logger is disabled by default. You can enable it with: …\n",null,0],["logger_outputs_to?","ActiveSupport::Logger","rails/classes/ActiveSupport/Logger.html#method-c-logger_outputs_to-3F","(logger, *sources)","<p>Returns true if the logger destination matches one of the sources\n\n<pre><code>logger = Logger.new(STDOUT)\nActiveSupport::Logger.logger_outputs_to?(logger, ...\n</code></pre>\n",null,0],["long_name","OpenSSL::ASN1::ObjectId","ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-long_name","()","<p>The long name of the ObjectId, as defined in &lt;openssl/objects.h&gt;.\n",null,1],["longblob","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-longblob","","",null,0],["longtext","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-longtext","","",null,0],["look","Exhibit","rails/classes/Exhibit.html#method-c-look","(exhibits)","",null,0],["look","Exhibit","rails/classes/Exhibit.html#method-i-look","()","",null,0],["look_for_directives_in","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-look_for_directives_in","(context, comment)","<p>Look for directives in a normal comment block:\n\n<pre><code>/*\n * :title: My Awesome Project\n */\n</code></pre>\n<p>This method modifies …\n",null,1],["look_for_directives_in","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-look_for_directives_in","(container, comment)","<p>Look for directives in a normal comment block:\n\n<pre><code># :stopdoc:\n# Don&#39;t display comment from this point forward\n</code></pre>\n",null,1],["lookahead_balance_one_line","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-lookahead_balance_one_line","()","<p>Scanning is intentionally conservative because we have no way of rolling back an agressive block (at …\n",null,1],["lookup","ActiveJob::QueueAdapters","rails/classes/ActiveJob/QueueAdapters.html#method-c-lookup","(name)","<p>Returns adapter for specified name.\n\n<pre><code>ActiveJob::QueueAdapters.lookup(:sidekiq)\n# =&gt; ActiveJob::QueueAdapters::SidekiqAdapter\n</code></pre>\n",null,0],["lookup","Mime::Type","rails/classes/Mime/Type.html#method-c-lookup","(string)","",null,0],["lookup_ancestors","ActiveModel::Translation","rails/classes/ActiveModel/Translation.html#method-i-lookup_ancestors","()","<p>When localizing a string, it goes through the lookup returned by this method, which is used in ActiveModel::Name#human …\n",null,0],["lookup_by_extension","Mime::Type","rails/classes/Mime/Type.html#method-c-lookup_by_extension","(extension)","",null,0],["lookup_context","ActionView::ViewPaths","rails/classes/ActionView/ViewPaths.html#method-i-lookup_context","()","<p>LookupContext is the object responsible for holding all information required for looking up templates, …\n",null,0],["lookup_paths","Rails::Command","rails/classes/Rails/Command.html#method-c-lookup_paths","()","",null,0],["lookup_paths","Rails::Generators","rails/classes/Rails/Generators.html#method-c-lookup_paths","()","",null,0],["lookup_ring","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-i-lookup_ring","(timeout=5, &block)","<p>Looks up RingServers waiting <code>timeout</code> seconds.  RingServers will be given <code>block</code> as a callback, which will …\n",null,1],["lookup_ring_any","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-i-lookup_ring_any","(timeout=5)","<p>Returns the first found remote TupleSpace.  Any further recovered TupleSpaces can be found by calling …\n",null,1],["lookup_store","ActiveSupport::Cache","rails/classes/ActiveSupport/Cache.html#method-c-lookup_store","(store = nil, *parameters)","<p>Creates a new Store object according to the given options.\n<p>If no arguments are passed to this method, …\n",null,0],["loop","Kernel","ruby/classes/Kernel.html#method-i-loop","()","<p>Repeatedly executes the block.\n<p>If no block is given, an enumerator is returned instead.\n\n<pre><code>loop do\n  print ...\n</code></pre>\n",null,1],["loopback?","IPAddr","ruby/classes/IPAddr.html#method-i-loopback-3F","()","<p>Returns true if the ipaddr is a loopback address.\n",null,1],["lower","Win32::SSPI::SecurityHandle","ruby/classes/Win32/SSPI/SecurityHandle.html#method-i-lower","()","",null,1],["lseg","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-lseg","","",null,0],["lshift!","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-lshift-21","(p1)","",null,1],["lstat","File","ruby/classes/File.html#method-c-lstat","(p1)","<p>Like File::stat, but does not follow the last symbolic link; instead, returns a File::Stat object for …\n",null,1],["lstat","File","ruby/classes/File.html#method-i-lstat","()","<p>Like File#stat, but does not follow the last symbolic link; instead, returns a File::Stat object for …\n",null,1],["lstat","Pathname","ruby/classes/Pathname.html#method-i-lstat","()","<p>See File.lstat.\n",null,1],["lstrip","String","ruby/classes/String.html#method-i-lstrip","()","<p>Returns a copy of <code>self</code> with leading whitespace removed; see Whitespace in Strings:\n\n<pre><code>whitespace = &quot;\\x00\\t\\n\\v\\f\\r ...\n</code></pre>\n",null,1],["lstrip!","String","ruby/classes/String.html#method-i-lstrip-21","()","<p>Like String#lstrip, except that any modifications are made in <code>self</code>; returns <code>self</code> if any modification …\n",null,1],["ltree","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-ltree","","",null,0],["ludecomp","LUSolve","ruby/classes/LUSolve.html#method-i-ludecomp","(a,n,zero=0,one=1)","<p>Performs LU decomposition of the n by n matrix a.\n",null,1],["lusolve","LUSolve","ruby/classes/LUSolve.html#method-i-lusolve","(a,b,ps,zero=0.0)","<p>Solves a*x = b for x, using LU decomposition.\n<p>a is a matrix, b is a constant vector, x is the solution …\n",null,1],["lutime","File","ruby/classes/File.html#method-c-lutime","(*args)","<p>Sets the access and modification times of each named file to the first two arguments. If a file is a …\n",null,1],["lutime","Pathname","ruby/classes/Pathname.html#method-i-lutime","(p1, p2)","<p>Update the access and modification times of the file.\n<p>Same as Pathname#utime, but does not follow symbolic …\n",null,1],["macaddr","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-macaddr","","",null,0],["magnitude","Complex","ruby/classes/Complex.html#method-i-magnitude","()","<p>Returns the absolute value (magnitude) for <code>self</code>; see polar coordinates:\n\n<pre><code>Complex.polar(-1, 0).abs # =&gt; ...\n</code></pre>\n",null,1],["magnitude","Float","ruby/classes/Float.html#method-i-magnitude","()","",null,1],["magnitude","Integer","ruby/classes/Integer.html#method-i-magnitude","()","",null,1],["magnitude","Numeric","ruby/classes/Numeric.html#method-i-magnitude","()","<p>Returns the absolute value of <code>self</code>.\n\n<pre><code>12.abs        #=&gt; 12\n(-34.56).abs  #=&gt; 34.56\n-34.56.abs    #=&gt; 34.56\n</code></pre>\n",null,1],["magnitude","Rational","ruby/classes/Rational.html#method-i-magnitude","()","<p>Returns the absolute value of <code>rat</code>.\n\n<pre><code>(1/2r).abs    #=&gt; (1/2)\n(-1/2r).abs   #=&gt; (1/2)\n</code></pre>\n",null,1],["mail","ActionMailbox::InboundEmail","rails/classes/ActionMailbox/InboundEmail.html#method-i-mail","()","",null,0],["mail","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-i-mail","(headers = {}, &block)","<p>The main method that creates the message and renders the email templates. There are two ways to call …\n",null,0],["mail_to","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-mail_to","(email_address, name = nil, html_options = {}, &block)","<p>Creates a mailto link tag to the specified <code>email_address</code>, which is also used as the name of the link …\n",null,0],["mailbox.rb.tt","","rails/files/rails/actionmailbox/lib/rails/generators/mailbox/templates/mailbox_rb_tt.html","","<p>class &lt;%= class_name %&gt;Mailbox &lt; ApplicationMailbox\n\n<pre><code>def process\nend\n</code></pre>\n<p>end\n",null,0],["mailbox_class","ActionMailbox::Router::Route","rails/classes/ActionMailbox/Router/Route.html#method-i-mailbox_class","()","",null,0],["mailbox_for","ActionMailbox::Router","rails/classes/ActionMailbox/Router.html#method-i-mailbox_for","(inbound_email)","",null,0],["mailbox_for","ActionMailbox::Routing","rails/classes/ActionMailbox/Routing.html#method-i-mailbox_for","(inbound_email)","",null,0],["mailer","ActionMailer::MailHelper","rails/classes/ActionMailer/MailHelper.html#method-i-mailer","()","<p>Access the mailer instance.\n",null,0],["mailer.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/views/layouts/mailer_html_erb_tt.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; ...\n</code></pre>\n",null,0],["mailer.rb.tt","","rails/files/rails/actionmailer/lib/rails/generators/mailer/templates/mailer_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= class_name %&gt;Mailer &lt; ApplicationMailer &lt;%  …\n",null,0],["mailer.text.erb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/views/layouts/mailer_text_erb_tt.html","","<p>&lt;%%= yield %&gt;\n",null,0],["mailer_name","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-mailer_name","()","<p>Returns the name of the current mailer. This method is also being used as a path for a view lookup.  …\n",null,0],["mailer_name","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-i-mailer_name","()","<p>Returns the name of the mailer object.\n",null,0],["main","IRB::Context","ruby/classes/IRB/Context.html#method-i-main","()","<p>The top-level workspace, see WorkSpace#main\n",null,1],["main","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-main","()","<p>Gets the main page for this RDoc store.  This page is used as the root of the RDoc server.\n",null,1],["main","Ractor","ruby/classes/Ractor.html#method-c-main","()","<p>returns main ractor\n",null,1],["main","Thread","ruby/classes/Thread.html#method-c-main","()","<p>Returns the main thread.\n",null,1],["main=","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-main-3D","(page)","<p>Sets the main page for this RDoc store.\n",null,1],["main_irb","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-main_irb","()","<p>Returns the top level irb session.\n",null,1],["main_thread","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-main_thread","()","<p>Returns the top level thread.\n",null,1],["main_type","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-main_type","()","<p>Returns the leading (‘type’) part of the media type from the value of field <code>&#39;Content-Type&#39;</code> …\n",null,1],["maintainers","","ruby/files/ruby/doc/maintainers_md.html","","<p>Maintainers\n<p>This page describes the current module, library, and extension maintainers of Ruby.\n<p>Module …\n",null,1],["major_or_security?","Announcement::Version","rails/classes/Announcement/Version.html#method-i-major_or_security-3F","()","",null,0],["major_version","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-major_version","()","<p>Returns major version.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Word 10.0 Object Library&#39;, &#39;Documents&#39;)\nputs ...\n</code></pre>\n",null,1],["major_version","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-major_version","()","<p>Returns the type library major version.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...\n</code></pre>\n",null,1],["make","Gem::Ext::Builder","ruby/classes/Gem/Ext/Builder.html#method-c-make","(dest_path, results, make_dir = Dir.pwd, sitedir = nil, targets = [\"clean\", \"\", \"install\"])","",null,1],["make_affine!","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-make_affine-21","()","<p>This method is deprecated and should not be used. This is a no-op.\n",null,1],["make_compiler","ERB","ruby/classes/ERB.html#method-i-make_compiler","(trim_mode)","<p>Creates a new compiler for ERB.  See ERB::Compiler.new for details\n",null,1],["make_destination_dirs","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-make_destination_dirs","()","",null,1],["make_expires","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-make_expires","(sec=nil)","<p>Returns an expiry Time based on <code>sec</code> which can be one of:\n<p>Numeric &mdash; <code>sec</code> seconds into the future\n<p><code>true</code> &mdash; the expiry …\n",null,1],["make_lambda","ActiveSupport::Callbacks::CallTemplate::InstanceExec0","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec0.html#method-i-make_lambda","()","",null,0],["make_lambda","ActiveSupport::Callbacks::CallTemplate::InstanceExec1","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec1.html#method-i-make_lambda","()","",null,0],["make_lambda","ActiveSupport::Callbacks::CallTemplate::InstanceExec2","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec2.html#method-i-make_lambda","()","",null,0],["make_lambda","ActiveSupport::Callbacks::CallTemplate::MethodCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/MethodCall.html#method-i-make_lambda","()","",null,0],["make_lambda","ActiveSupport::Callbacks::CallTemplate::ObjectCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ObjectCall.html#method-i-make_lambda","()","",null,0],["make_lambda","ActiveSupport::Callbacks::CallTemplate::ProcCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ProcCall.html#method-i-make_lambda","()","",null,0],["make_link","Pathname","ruby/classes/Pathname.html#method-i-make_link","(p1)","<p>Creates a hard link at <em>pathname</em>.\n<p>See File.link.\n",null,1],["make_message","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-make_message","(message)","<p>Adds useful info about the parser to <code>message</code>\n",null,1],["make_methods","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-c-make_methods","(meth)","<p>Builds a methods for level <code>meth</code>.\n",null,1],["make_parser","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-make_parser","(set, platforms)","",null,1],["make_pool","DRb::DRbConn","ruby/classes/DRb/DRbConn.html#method-c-make_pool","()","",null,1],["make_regexp","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-make_regexp","(schemes = nil)","<p>Returns Regexp that is default <code>self.regexp[:ABS_URI_REF]</code>, unless <code>schemes</code> is provided. Then it is a Regexp.union …\n",null,1],["make_regexp","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-make_regexp","(schemes = nil)","<p>Returns Regexp that is default <code>self.regexp[:ABS_URI_REF]</code>, unless <code>schemes</code> is provided. Then it is a Regexp.union …\n",null,1],["make_response!","ActionController::DefaultHeaders::ClassMethods","rails/classes/ActionController/DefaultHeaders/ClassMethods.html#method-i-make_response-21","(request)","",null,0],["make_response!","ActionController::Live::ClassMethods","rails/classes/ActionController/Live/ClassMethods.html#method-i-make_response-21","(request)","",null,0],["make_response!","ActionController::Metal","rails/classes/ActionController/Metal.html#method-c-make_response-21","(request)","",null,0],["make_shareable","Ractor","ruby/classes/Ractor.html#method-c-make_shareable","(obj, copy: false)","<p>Make <code>obj</code> shareable between ractors.\n<p><code>obj</code> and all the objects it refers to will be frozen, unless they are …\n",null,1],["make_socket","Rinda::RingServer","ruby/classes/Rinda/RingServer.html#method-i-make_socket","(address, interface_address=nil, multicast_interface=0)","<p>Creates a socket at <code>address</code>\n<p>If <code>address</code> is multicast address then <code>interface_address</code> and <code>multicast_interface</code> …\n",null,1],["make_switch","OptionParser","ruby/classes/OptionParser.html#method-i-make_switch","(opts, block = nil)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["make_symlink","Pathname","ruby/classes/Pathname.html#method-i-make_symlink","(p1)","<p>Creates a symbolic link.\n<p>See File.symlink.\n",null,1],["make_tuple","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-make_tuple","(ary)","<p>Creates a Rinda::Tuple for <code>ary</code>.\n",null,1],["make_variable_map","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-make_variable_map","(variables)","<p>Converts the variable =&gt; ClassModule map <code>variables</code> from a C parser into a variable =&gt; class name …\n",null,1],["make_wstr","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-make_wstr","(str)","",null,1],["makedirs","FileUtils","ruby/classes/FileUtils.html#method-c-makedirs","(list, mode: nil, noop: nil, verbose: nil)","",null,1],["making_changes_to_ruby","","ruby/files/ruby/doc/contributing/making_changes_to_ruby_md.html","","<p>Contributing a pull request\n<p>Code style\n<p>Here are some general rules to follow when writing Ruby and C code …\n",null,1],["making_changes_to_stdlibs","","ruby/files/ruby/doc/contributing/making_changes_to_stdlibs_md.html","","<p>Making Changes To Standard Libraries\n<p>Everything in the lib directory is mirrored from a standalone repository …\n",null,1],["malloc","Fiddle","ruby/classes/Fiddle.html#method-c-malloc","(p1)","<p>Allocate <code>size</code> bytes of memory and return the integer memory address for the allocated memory.\n",null,1],["malloc","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-c-malloc","(types, func = nil, size = size(types), &block)","<p>Allocates a C struct with the <code>types</code> provided.\n<p>See Fiddle::Pointer.malloc for memory management issues. …\n",null,1],["malloc","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-c-malloc","(p1, p2 = v2)","<p>Examples\n\n<pre><code># Automatically freeing the pointer when the block is exited - recommended\nFiddle::Pointer.malloc(size, ...\n</code></pre>\n",null,1],["malloc_allocated_size","GC","ruby/classes/GC.html#method-c-malloc_allocated_size","()","<p>Returns the size of memory allocated by malloc().\n<p>Only available if ruby was built with <code>CALC_EXACT_MALLOC_SIZE</code> …\n",null,1],["malloc_allocations","GC","ruby/classes/GC.html#method-c-malloc_allocations","()","<p>Returns the number of malloc() allocations.\n<p>Only available if ruby was built with <code>CALC_EXACT_MALLOC_SIZE</code> …\n",null,1],["manage_owners","Gem::Commands::OwnerCommand","ruby/classes/Gem/Commands/OwnerCommand.html#method-i-manage_owners","(method, name, owners)","",null,1],["manifest.js.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/app/assets/config/manifest_js_tt.html","","<p>//= link_tree ../images //= link_directory ../stylesheets .css\n",null,0],["many?","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-many-3F","","<p>Returns true if the collection has more than one record. Equivalent to <code>collection.size &gt; 1</code>.\n\n<pre><code>class Person ...\n</code></pre>\n",null,0],["many?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-many-3F","()","<p>Returns true if there is more than one record.\n",null,0],["many?","Enumerable","rails/classes/Enumerable.html#method-i-many-3F","()","<p>Returns <code>true</code> if the enumerable has more than 1 element. Functionally equivalent to <code>enum.to_a.size &gt;</code> …\n",null,0],["map","Array","ruby/classes/Array.html#method-i-map","()","<p>Calls the block, if given, with each element of <code>self</code>; returns a new Array whose elements are the return …\n",null,1],["map","Enumerable","ruby/classes/Enumerable.html#method-i-map","()","<p>Returns an array of objects returned by the block.\n<p>With a block given, calls the block with successive …\n",null,1],["map","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-map","()","<p>Like Enumerable#map, but chains operation to be lazy-evaluated.\n\n<pre><code>(1..Float::INFINITY).lazy.map {|i| i**2 ...\n</code></pre>\n",null,1],["map","IO::Buffer","ruby/classes/IO/Buffer.html#method-c-map","(*args)","<p>Create an IO::Buffer for reading from <code>file</code> by memory-mapping the file. <code>file_io</code> should be a <code>File</code> instance, …\n",null,1],["map","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-map","(tag = @tag, style = @style)","<p>Emit a map.  The coder will be yielded to the block.\n",null,1],["map!","Array","ruby/classes/Array.html#method-i-map-21","()","<p>Calls the block, if given, with each element; replaces the element with the block’s return value: …\n",null,1],["map!","Set","ruby/classes/Set.html#method-i-map-21","()","",null,1],["map=","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-map-3D","(map)","<p>Emit a map with <code>value</code>\n",null,1],["mapped?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-mapped-3F","()","<p>If the buffer is <em>mapped</em>, meaning it references memory mapped by the buffer.\n<p>Mapped buffers are either …\n",null,1],["mapping?","Psych::Nodes::Mapping","ruby/classes/Psych/Nodes/Mapping.html#method-i-mapping-3F","()","",null,1],["mapping?","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-mapping-3F","()","",null,1],["mark","Psych::Parser","ruby/classes/Psych/Parser.html#method-i-mark","()","<p>Returns a Psych::Parser::Mark object that contains line, column, and index information.\n",null,1],["mark_for_destruction","ActiveRecord::AutosaveAssociation","rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-mark_for_destruction","()","<p>Marks this record to be destroyed as part of the parent’s save transaction. This does <em>not</em> actually …\n",null,0],["mark_for_same_origin_verification!","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-mark_for_same_origin_verification-21","()","<p>GET requests are checked for cross-origin JavaScript after rendering.\n",null,0],["mark_invisible","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-mark_invisible","()","",null,1],["mark_invisible","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-mark_invisible","()","<p>Used to hide lines\n<p>The search alorithm will group lines into blocks then if those blocks are determined …\n",null,1],["mark_newlines!","Prism::ParseResult","ruby/classes/Prism/ParseResult.html#method-i-mark_newlines-21","()","<p>Walk the tree and mark nodes that are on a new line.\n",null,1],["mark_version","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-mark_version","()","<p>Sets the rubygems_version to the current RubyGems version.\n",null,1],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-marked_for_destruction-3F","()","<p>Returns whether or not this record will be destroyed as part of the parent’s save transaction.\n<p>Only …\n",null,0],["marked_for_same_origin_verification?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-marked_for_same_origin_verification-3F","()","<p>If the <code>verify_authenticity_token</code> before_action ran, verify that JavaScript responses are only served …\n",null,0],["markup","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-markup","(text)","<p>Convert a string in markup format into HTML.\n<p>Requires the including class to implement #formatter\n",null,1],["marshal","","ruby/files/ruby/doc/marshal_rdoc.html","","<p>Marshal Format\n<p>The Marshal format is used to serialize ruby objects.  The format can store arbitrary objects …\n",null,1],["marshal_dump","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-marshal_dump","()","",null,0],["marshal_dump","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_dump","()","",null,0],["marshal_dump","Delegator","ruby/classes/Delegator.html#method-i-marshal_dump","()","<p>Serialization support for the object returned by _<em>getobj</em>_.\n",null,1],["marshal_dump","Gem::Version","ruby/classes/Gem/Version.html#method-i-marshal_dump","()","<p>Dump only the raw version string, not the complete object. It’s a string for backwards (RubyGems …\n",null,1],["marshal_dump","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-marshal_dump","()","<p>Dumps this AnyMethod for use by ri.  See also #marshal_load\n",null,1],["marshal_dump","RDoc::Attr","ruby/classes/RDoc/Attr.html#method-i-marshal_dump","()","<p>Dumps this Attr for use by ri.  See also #marshal_load\n",null,1],["marshal_dump","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-marshal_dump","()","<p>Dumps this Constant for use by ri.  See also #marshal_load\n",null,1],["marshal_dump","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-marshal_dump","()","<p>Dumps this TopLevel for use by ri.  See also #marshal_load\n",null,1],["marshal_load","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-marshal_load","(array)","",null,0],["marshal_load","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_load","(variables)","",null,0],["marshal_load","Delegator","ruby/classes/Delegator.html#method-i-marshal_load","(data)","<p>Reinitializes delegation from a serialized object.\n",null,1],["marshal_load","Gem::SafeMarshal::Visitors::ToRuby::RationalCompat","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/RationalCompat.html#method-i-marshal_load","(s)","",null,1],["marshal_load","Gem::Version","ruby/classes/Gem/Version.html#method-i-marshal_load","(array)","<p>Load custom marshal format. It’s a string for backwards (RubyGems 1.3.5 and earlier) compatibility. …\n",null,1],["marshal_load","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-marshal_load","(array)","<p>Loads this AnyMethod from <code>array</code>.  For a loaded AnyMethod the following methods will return cached values: …\n",null,1],["marshal_load","RDoc::Attr","ruby/classes/RDoc/Attr.html#method-i-marshal_load","(array)","<p>Loads this Attr from <code>array</code>.  For a loaded Attr the following methods will return cached values:\n<p>#full_name …\n",null,1],["marshal_load","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-marshal_load","(array)","<p>Loads this Constant from <code>array</code>.  For a loaded Constant the following methods will return cached values: …\n",null,1],["marshal_version","Gem","ruby/classes/Gem.html#method-c-marshal_version","()","<p>The version of the Marshal format for your Ruby.\n",null,1],["mask","IPAddr","ruby/classes/IPAddr.html#method-i-mask","(prefixlen)","<p>Returns a new ipaddr built by masking IP address with the given prefixlen/netmask. (e.g. 8, 64, “255.255.255.0”, …\n",null,1],["mask","Syslog","ruby/classes/Syslog.html#method-c-mask","()","<p>Returns the log priority mask in effect. The mask is not reset by opening or closing syslog.\n",null,1],["mask!","IPAddr","ruby/classes/IPAddr.html#method-i-mask-21","(mask)","<p>Set current netmask to given mask.\n",null,1],["mask=","Syslog","ruby/classes/Syslog.html#method-c-mask-3D","(p1)","<p>Sets the log priority mask. A method LOG_UPTO is defined to make it easier to set mask values. Example: …\n",null,1],["mask_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-mask_token","(raw_token)","",null,0],["master_key","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-master_key","()","",null,0],["match","ActionDispatch::Routing::Mapper::Base","rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-match","(path, options = nil)","<p>Matches a URL pattern to one or more routes.\n<p>You should not use the <code>match</code> method in your router without …\n",null,0],["match","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-match","(path, *rest, &block)","<p>Matches a URL pattern to one or more routes. For more information, see match.\n\n<pre><code>match &#39;path&#39; =&gt; &#39;controller#action&#39;, ...\n</code></pre>\n",null,0],["match","ActiveRecord::DynamicMatchers::Method","rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-match","(model, name)","",null,0],["match","ACL::ACLEntry","ruby/classes/ACL/ACLEntry.html#method-i-match","(addr)","<p>Matches <code>addr</code> against this entry.\n",null,1],["match","ACL::ACLList","ruby/classes/ACL/ACLList.html#method-i-match","(addr)","<p>Matches <code>addr</code> against each ACLEntry in this list.\n",null,1],["match","Gem::Platform","ruby/classes/Gem/Platform.html#method-c-match","(platform)","",null,1],["match","MatchData","ruby/classes/MatchData.html#method-i-match","(p1)","<p>Returns the matched substring corresponding to the given argument.\n<p>When non-negative argument <code>n</code> is given, …\n",null,1],["match","OptionParser::CompletingHash","ruby/classes/OptionParser/CompletingHash.html#method-i-match","(key)","<p>Completion for hash key.\n",null,1],["match","Regexp","ruby/classes/Regexp.html#method-i-match","(p1, p2 = v2)","<p>With no block given, returns the MatchData object that describes the match, if any, or <code>nil</code> if none; the …\n",null,1],["match","Rinda::Template","ruby/classes/Rinda/Template.html#method-i-match","(tuple)","<p>Matches this template against <code>tuple</code>.  The <code>tuple</code> must be the same size as the template.  An element with …\n",null,1],["match","Rinda::TemplateEntry","ruby/classes/Rinda/TemplateEntry.html#method-i-match","(tuple)","<p>Matches this TemplateEntry against <code>tuple</code>.  See Template#match for details on how a Template matches a …\n",null,1],["match","String","ruby/classes/String.html#method-i-match","(*args)","<p>Returns a MatchData object (or <code>nil</code>) based on <code>self</code> and the given <code>pattern</code>.\n<p>Note: also updates Regexp@Global+Variables …\n",null,1],["match","Symbol","ruby/classes/Symbol.html#method-i-match","(*args)","<p>Equivalent to <code>self.to_s.match</code>, including possible updates to global variables; see String#match.\n",null,1],["match?","ActionMailbox::Router::Route","rails/classes/ActionMailbox/Router/Route.html#method-i-match-3F","(inbound_email)","",null,0],["match?","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-i-match-3F","(attribute, type = nil, **options)","<p>See if error matches provided <code>attribute</code>, <code>type</code>, and <code>options</code>.\n<p>Omitted params are not checked for a match. …\n",null,0],["match?","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-match-3F","","<p>Equivalent to <code>String#match?</code>. Match the class name against the given regexp. Returns <code>true</code> if there is …\n",null,0],["match?","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-match-3F","(re)","<p>Compare #name and TZInfo identifier to a supplied regexp, returning <code>true</code> if a match is found.\n",null,0],["match?","Mime::Type","rails/classes/Mime/Type.html#method-i-match-3F","(mime_type)","",null,0],["match?","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-match-3F","(obj, version=nil, allow_prerelease=false)","<p>Does this dependency match the specification described by <code>name</code> and <code>version</code> or match <code>spec</code>?\n<p>NOTE:  Unlike …\n",null,1],["match?","Gem::Licenses","ruby/classes/Gem/Licenses.html#method-c-match-3F","(license)","",null,1],["match?","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-match-3F","(spec, allow_prerelease = false)","<p>Does this dependency request match <code>spec</code>?\n<p>NOTE:  #match? only matches prerelease versions when #dependency …\n",null,1],["match?","Regexp","ruby/classes/Regexp.html#method-i-match-3F","(*args)","<p>Returns <code>true</code> or <code>false</code> to indicate whether the regexp is matched or not without updating $~ and other …\n",null,1],["match?","String","ruby/classes/String.html#method-i-match-3F","(*args)","<p>Returns <code>true</code> or <code>false</code> based on whether a match is found for <code>self</code> and <code>pattern</code>.\n<p>Note: does not update Regexp@Global+Variables …\n",null,1],["match?","StringScanner","ruby/classes/StringScanner.html#method-i-match-3F","(p1)","<p>Tests whether the given <code>pattern</code> is matched from the current scan pointer. Returns the length of the match, …\n",null,1],["match?","Symbol","ruby/classes/Symbol.html#method-i-match-3F","(*args)","<p>Equivalent to <code>sym.to_s.match?</code>; see String#match.\n",null,1],["match_gem?","Gem::Platform","ruby/classes/Gem/Platform.html#method-c-match_gem-3F","(platform, gem_name)","",null,1],["match_length","MatchData","ruby/classes/MatchData.html#method-i-match_length","(p1)","<p>Returns the length (in characters) of the matched substring corresponding to the given argument.\n<p>When …\n",null,1],["match_platform!","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-match_platform-21","()","",null,1],["match_platform?","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-match_platform-3F","()","<p>Indicate if this NameTuple matches the current platform.\n",null,1],["match_spec?","Gem::Platform","ruby/classes/Gem/Platform.html#method-c-match_spec-3F","(spec)","",null,1],["match_status","Reline::KeyStroke","ruby/classes/Reline/KeyStroke.html#method-i-match_status","(input)","",null,1],["matched","StringScanner","ruby/classes/StringScanner.html#method-i-matched","()","<p>Returns the last matched string.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.match?(/\\w+/)     # -&gt; 4\ns.matched ...\n</code></pre>\n",null,1],["matched?","StringScanner","ruby/classes/StringScanner.html#method-i-matched-3F","()","<p>Returns <code>true</code> if and only if the last match was successful.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.match?(/\\w+/) ...\n</code></pre>\n",null,1],["matched_size","StringScanner","ruby/classes/StringScanner.html#method-i-matched_size","()","<p>Returns the size of the most recent match in bytes, or <code>nil</code> if there was no recent match.  This is different …\n",null,1],["matchee","NoMatchingPatternKeyError","ruby/classes/NoMatchingPatternKeyError.html#method-i-matchee","()","<p>Return the matchee associated with this NoMatchingPatternKeyError exception.\n",null,1],["matches?","ActiveModel::Validations::AcceptanceValidator::LazilyDefineAttributes","rails/classes/ActiveModel/Validations/AcceptanceValidator/LazilyDefineAttributes.html#method-i-matches-3F","(method_name)","",null,0],["matches?","Reline::Windows::KeyEventRecord","ruby/classes/Reline/Windows/KeyEventRecord.html#method-i-matches-3F","(control_keys: nil, virtual_key_code: nil, char_code: nil)","<p>Verifies if the arguments match with this key event. Nil arguments are ignored, but at least one must …\n",null,1],["matches_for_glob","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-matches_for_glob","(glob)","<p>Return all files in this gem that match for <code>glob</code>.\n",null,1],["matches_spec?","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-matches_spec-3F","(spec)","<p>Does this dependency match <code>spec</code>?\n<p>NOTE:  This is not a convenience method.  Unlike #match? this method …\n",null,1],["matches_spec?","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-matches_spec-3F","(spec)","<p>Does this dependency request match <code>spec</code>?\n<p>NOTE:  #matches_spec? matches prerelease versions.  See also …\n",null,1],["matching_specs","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-matching_specs","(platform_only = false)","",null,1],["materialize!","ActiveRecord::ConnectionAdapters::RealTransaction","rails/classes/ActiveRecord/ConnectionAdapters/RealTransaction.html#method-i-materialize-21","()","",null,0],["materialize!","ActiveRecord::ConnectionAdapters::SavepointTransaction","rails/classes/ActiveRecord/ConnectionAdapters/SavepointTransaction.html#method-i-materialize-21","()","",null,0],["mattr_accessor","Module","rails/classes/Module.html#method-i-mattr_accessor","(*syms, instance_reader: true, instance_writer: true, instance_accessor: true, default: nil, &blk)","<p>Defines both class and instance accessors for class attributes. All class and instance methods created …\n",null,0],["mattr_reader","Module","rails/classes/Module.html#method-i-mattr_reader","(*syms, instance_reader: true, instance_accessor: true, default: nil, location: nil)","<p>Defines a class attribute and creates a class and instance reader methods. The underlying class variable …\n",null,0],["mattr_writer","Module","rails/classes/Module.html#method-i-mattr_writer","(*syms, instance_writer: true, instance_accessor: true, default: nil, location: nil)","<p>Defines a class attribute and creates a class and instance writer methods to allow assignment to the …\n",null,0],["max","Array","ruby/classes/Array.html#method-i-max","(*args)","<p>Returns one of the following:\n<p>The maximum-valued element from <code>self</code>.\n<p>A new Array of maximum-valued elements …\n",null,1],["max","Enumerable","ruby/classes/Enumerable.html#method-i-max","(*args)","<p>Returns the element with the maximum element according to a given criterion. The ordering of equal elements …\n",null,1],["max","Range","ruby/classes/Range.html#method-i-max","(*args)","<p>Returns the maximum value in <code>self</code>, using method <code>&lt;=&gt;</code> or a given block for comparison.\n<p>With no argument …\n",null,1],["max","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-max","()","<p>Returns the maximum size of the queue.\n",null,1],["max=","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-max-3D","(p1)","<p>Sets the maximum size of the queue to the given <code>number</code>.\n",null,1],["max_by","Enumerable","ruby/classes/Enumerable.html#method-i-max_by","(*args)","<p>Returns the elements for which the block returns the maximum values.\n<p>With a block given and no argument, …\n",null,1],["max_field_size","CSV","ruby/classes/CSV.html#method-i-max_field_size","()","<p>Returns the limit for field size; used for parsing; see {Option <code>max_field_size</code>}:\n\n<pre><code>CSV.new(&#39;&#39;).max_field_size ...\n</code></pre>\n",null,1],["max_field_size","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-max_field_size","()","",null,1],["max_identifier_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-max_identifier_length","()","<p>Returns the configured supported identifier length supported by PostgreSQL\n",null,0],["max_nesting","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-max_nesting","()","<p>This integer returns the maximum level of data structure nesting in the generated JSON, max_nesting = …\n",null,1],["max_nesting=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-max_nesting-3D","(p1)","<p>This sets the maximum level of data structure nesting in the generated JSON to the integer depth, max_nesting …\n",null,1],["max_queue","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-max_queue","()","",null,0],["max_retries=","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-max_retries-3D","(retries)","<p>Sets the maximum number of times to retry an idempotent request in case of Net::ReadTimeout, IOError …\n",null,1],["max_threads","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-max_threads","()","",null,0],["max_version=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-max_version-3D","(version)","<p>Sets the upper bound of the supported SSL/TLS protocol version. See #min_version= for the possible values. …\n",null,1],["maxgroups","Process","ruby/classes/Process.html#method-c-maxgroups","()","<p>Returns the maximum number of group IDs allowed in the supplemental group access list:\n\n<pre><code>Process.maxgroups ...\n</code></pre>\n",null,1],["maxgroups=","Process","ruby/classes/Process.html#method-c-maxgroups-3D","(p1)","<p>Sets the maximum number of group IDs allowed in the supplemental group access list.\n",null,1],["maximum","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-maximum","(column_name)","<p>Calculates the maximum value on a given column. The value is returned with the same data type of the …\n",null,0],["maximum","Enumerable","rails/classes/Enumerable.html#method-i-maximum","(key)","<p>Calculates the maximum from the extracted elements.\n\n<pre><code>payments = [Payment.new(5), Payment.new(15), Payment.new(10)] ...\n</code></pre>\n",null,0],["mb_chars","String","rails/classes/String.html#method-i-mb_chars","()","<p>Multibyte proxy\n<p><code>mb_chars</code> is a multibyte safe proxy for string methods.\n<p>It creates and returns an instance …\n",null,0],["mday","Date","ruby/classes/Date.html#method-i-mday","()","<p>Returns the day of the month in range (1..31):\n\n<pre><code>Date.new(2001, 2, 3).mday # =&gt; 3\n</code></pre>\n",null,1],["mday","Time","ruby/classes/Time.html#method-i-mday","()","<p>Returns the integer day of the month for <code>self</code>, in range (1..31):\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, 6) ...\n</code></pre>\n",null,1],["measure","Benchmark","ruby/classes/Benchmark.html#method-c-measure","(label = \"\")","<p>Returns the time used to execute the given block as a Benchmark::Tms object. Takes <code>label</code> option.\n\n<pre><code>require ...\n</code></pre>\n",null,1],["measure_total_time","GC","ruby/classes/GC.html#method-c-measure_total_time","()","<p>Return measure_total_time flag (default: <code>true</code>). Note that measurement can affect the application performance. …\n",null,1],["measure_total_time=","GC","ruby/classes/GC.html#method-c-measure_total_time-3D","(flag)","<p>Enable to measure GC time. You can get the result with <code>GC.stat(:time)</code>. Note that GC time measurement …\n",null,1],["media_type","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-media_type","()","<p>The <code>String</code> MIME type of the request.\n\n<pre><code># get &quot;/articles&quot;\nrequest.media_type # =&gt; &quot;application/x-www-form-urlencoded&quot;\n</code></pre>\n",null,0],["media_type","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-media_type","()","<p>Media type of response.\n",null,0],["mediumblob","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-mediumblob","","",null,0],["mediumtext","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-mediumtext","","",null,0],["megabyte","Numeric","rails/classes/Numeric.html#method-i-megabyte","()","",null,0],["megabytes","Numeric","rails/classes/Numeric.html#method-i-megabytes","()","<p>Returns the number of bytes equivalent to the megabytes provided.\n\n<pre><code>2.megabytes # =&gt; 2_097_152\n</code></pre>\n",null,0],["member","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-member","(&block)","<p>To add a member route, add a member block into the resource block:\n\n<pre><code>resources :photos do\n  member do\n  ...\n</code></pre>\n",null,0],["member?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-member-3F","","",null,0],["member?","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-member-3F","(record)","",null,0],["member?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-member-3F","(key)","",null,0],["member?","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-member-3F","(key)","",null,0],["member?","CSV::Row","ruby/classes/CSV/Row.html#method-i-member-3F","(header)","",null,1],["member?","ENV","ruby/classes/ENV.html#method-c-member-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the given <code>name</code>:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; ...\n</code></pre>\n",null,1],["member?","Enumerable","ruby/classes/Enumerable.html#method-i-member-3F","(p1)","<p>Returns whether for any element <code>object == element</code>:\n\n<pre><code>(1..4).include?(2)                       # =&gt; true ...\n</code></pre>\n",null,1],["member?","Hash","ruby/classes/Hash.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["member?","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if <code>key</code> is a key in <code>self</code>, otherwise <code>false</code>.\n",null,1],["member?","Range","ruby/classes/Range.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if <code>object</code> is an element of <code>self</code>, <code>false</code> otherwise:\n\n<pre><code>(1..4).include?(2)        # =&gt; true\n(1..4).include?(5) ...\n</code></pre>\n",null,1],["member?","Set","ruby/classes/Set.html#method-i-member-3F","(o)","",null,1],["members","Data","ruby/classes/Data.html#method-i-members","()","<p>Returns the member names from <code>self</code> as an array:\n\n<pre><code>Measure = Data.define(:amount, :unit)\ndistance = Measure[10, ...\n</code></pre>\n",null,1],["members","Data","ruby/classes/Data.html#method-c-members","()","<p>Returns an array of member names of the data class:\n\n<pre><code>Measure = Data.define(:amount, :unit)\nMeasure.members ...\n</code></pre>\n",null,1],["members","Struct","ruby/classes/Struct.html#method-c-members","()","<p>Returns the member names of the Struct descendant as an array:\n\n<pre><code>Customer = Struct.new(:name, :address, ...\n</code></pre>\n",null,1],["members","Struct","ruby/classes/Struct.html#method-i-members","()","<p>Returns the member names from <code>self</code> as an array:\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\nCustomer.new.members ...\n</code></pre>\n",null,1],["memberwise","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-memberwise","(op, x)","<p>Returns a new Tms object obtained by memberwise operation <code>op</code> of the individual times for this Tms object …\n",null,1],["memory_view","","ruby/files/ruby/doc/memory_view_md.html","","<p>MemoryView\n<p>MemoryView provides the features to share multidimensional homogeneous arrays of\nfixed-size ...\n",null,1],["memsize_of","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-memsize_of","(p1)","<p>Return consuming memory size of obj in bytes.\n<p>Note that the return size is incomplete.  You need to deal …\n",null,1],["memsize_of_all","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-memsize_of_all","(p1 = v1)","<p>Return consuming memory size of all living objects in bytes.\n<p>If <code>klass</code> (should be Class object) is given, …\n",null,1],["merge","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-merge","(other_hash)","<p>Returns a new <code>ActionController::Parameters</code> instance with all keys from <code>other_hash</code> merged into current …\n",null,0],["merge","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-merge","(headers_or_env)","<p>Returns a new Http::Headers instance containing the contents of <code>headers_or_env</code> and the original instance. …\n",null,0],["merge","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-merge","(other_scheme)","",null,0],["merge","ActiveRecord::SpawnMethods","rails/classes/ActiveRecord/SpawnMethods.html#method-i-merge","(other, *rest)","<p>Merges in the conditions from <code>other</code>, if <code>other</code> is an ActiveRecord::Relation. Returns an array representing …\n",null,0],["merge","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(*hashes, &block)","<p>This method has the same semantics of <code>update</code>, except it does not modify the receiver but rather returns …\n",null,0],["merge","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(*hashes, &block)","<p>This method has the same semantics of <code>update</code>, except it does not modify the receiver but rather returns …\n",null,0],["merge","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-merge","(other)","<p>Merges the requirements of <code>other</code> into this dependency\n",null,1],["merge","Hash","ruby/classes/Hash.html#method-i-merge","(*args)","<p>Returns the new Hash formed by merging each of <code>other_hashes</code> into a copy of <code>self</code>.\n<p>Each argument in <code>other_hashes</code> …\n",null,1],["merge","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-merge","(p1)","<p>Configure this State instance with the Hash <em>opts</em>, and return itself.\n",null,1],["merge","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-merge","(class_module)","<p>Merges <code>class_module</code> into this ClassModule.\n<p>The data in <code>class_module</code> is preferred over the receiver.\n",null,1],["merge","Set","ruby/classes/Set.html#method-i-merge","(*enums, **nil)","<p>Merges the elements of the given enumerable objects to the set and\nreturns self.\n",null,1],["merge","URI::Generic","ruby/classes/URI/Generic.html#method-i-merge","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["merge!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-merge-21","(other_hash)","<p>Returns the current <code>ActionController::Parameters</code> instance with <code>other_hash</code> merged into current hash.\n",null,0],["merge!","ActionDispatch::Http::Headers","rails/classes/ActionDispatch/Http/Headers.html#method-i-merge-21","(headers_or_env)","<p>Adds the contents of <code>headers_or_env</code> to original instance entries; duplicate keys are overwritten with …\n",null,0],["merge!","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-merge-21","(other)","<p>Merges the errors from <code>other</code>, each Error wrapped as NestedError.\n<p>Parameters\n<p><code>other</code> - The ActiveModel::Errors …\n",null,0],["merge!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge-21","(*other_hashes, &block)","",null,0],["merge!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge-21","(*other_hashes, &block)","",null,0],["merge!","ENV","ruby/classes/ENV.html#method-c-merge-21","(*args)","<p>Adds to ENV each key/value pair in the given <code>hash</code>; returns ENV:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;) ...\n</code></pre>\n",null,1],["merge!","Hash","ruby/classes/Hash.html#method-i-merge-21","(*args)","<p>Merges each of <code>other_hashes</code> into <code>self</code>; returns <code>self</code>.\n<p>Each argument in <code>other_hashes</code> must be a Hash.\n<p>With …\n",null,1],["merge!","URI::Generic","ruby/classes/URI/Generic.html#method-i-merge-21","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["merge_default_headers","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-c-merge_default_headers","(original, default)","",null,0],["merge_dump_options","JSON","ruby/classes/JSON.html#method-i-merge_dump_options","(opts, strict: NOT_SET)","",null,1],["merge_options","Gem::Command","ruby/classes/Gem/Command.html#method-i-merge_options","(new_options)","<p>Merge a set of command options with the set of default options (without modifying the default option …\n",null,1],["message","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-message","()","<p>Returns the corresponding message for the current HTTP status code:\n\n<pre><code>response.status = 200\nresponse.message ...\n</code></pre>\n",null,0],["message","ActionMailer::MailHelper","rails/classes/ActionMailer/MailHelper.html#method-i-message","()","<p>Access the message instance.\n",null,0],["message","ActionMailer::MessageDelivery","rails/classes/ActionMailer/MessageDelivery.html#method-i-message","()","<p>Returns the resulting Mail::Message\n",null,0],["message","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-i-message","()","<p>Returns the error message.\n\n<pre><code>error = ActiveModel::Error.new(person, :name, :too_short, count: 5)\nerror.message ...\n</code></pre>\n",null,0],["message","Exception","ruby/classes/Exception.html#method-i-message","()","<p>Returns the result of invoking <code>exception.to_s</code>. Normally this returns the exception’s message or name. …\n",null,1],["message","Gem::RuntimeRequirementNotMetError","ruby/classes/Gem/RuntimeRequirementNotMetError.html#method-i-message","()","",null,1],["message","Net::ReadTimeout","ruby/classes/Net/ReadTimeout.html#method-i-message","()","",null,1],["message","Net::WriteTimeout","ruby/classes/Net/WriteTimeout.html#method-i-message","()","",null,1],["message","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-i-message","()","<p>Default stringizing method to emit standard error message.\n",null,1],["message_for","DidYouMean::Formatter","ruby/classes/DidYouMean/Formatter.html#method-i-message_for","(corrections)","",null,1],["message_for","DidYouMean::Formatter","ruby/classes/DidYouMean/Formatter.html#method-c-message_for","(corrections)","<p>Returns a human readable string that contains <code>corrections</code>. This formatter is designed to be less verbose …\n",null,1],["message_for","DidYouMean::Formatter","ruby/classes/DidYouMean/Formatter.html#method-i-message_for","(corrections)","",null,1],["message_for","DidYouMean::Formatter","ruby/classes/DidYouMean/Formatter.html#method-c-message_for","(corrections)","<p>Returns a human readable string that contains <code>corrections</code>. This formatter is designed to be less verbose …\n",null,1],["message_for","DidYouMean::Formatter","ruby/classes/DidYouMean/Formatter.html#method-c-message_for","(corrections)","<p>Returns a human readable string that contains <code>corrections</code>. This formatter is designed to be less verbose …\n",null,1],["message_for","DidYouMean::Formatter","ruby/classes/DidYouMean/Formatter.html#method-i-message_for","(corrections)","",null,1],["message_for","ErrorHighlight::DefaultFormatter","ruby/classes/ErrorHighlight/DefaultFormatter.html#method-c-message_for","(spot)","",null,1],["message_imprint","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-message_imprint","()","<p>Returns the message imprint (digest) of the data to be timestamped.\n",null,1],["message_imprint","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-message_imprint","()","<p>Returns the message imprint digest. For valid timestamps, this is the same value that was already given …\n",null,1],["message_imprint=","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-message_imprint-3D","(p1)","<p>Set the message imprint digest.\n",null,1],["message_loop","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-c-message_loop","()","<p>Translates and dispatches Windows message.\n",null,1],["message_verifier","Rails::Application","rails/classes/Rails/Application.html#method-i-message_verifier","(verifier_name)","<p>Returns a message verifier object.\n<p>This verifier can be used to generate and verify signed messages in …\n",null,0],["messages","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-messages","()","<p>Returns a Hash of attributes with an array of their error messages.\n",null,0],["messages_for","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-messages_for","(attribute)","<p>Returns all the error messages for a given attribute in an array.\n\n<pre><code>class Person\n  validates_presence_of ...\n</code></pre>\n",null,0],["metadata","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-i-metadata","()","<p>Override this method in a concrete subclass. Have it return a Hash of metadata.\n",null,0],["metadata","ActiveStorage::Analyzer::AudioAnalyzer","rails/classes/ActiveStorage/Analyzer/AudioAnalyzer.html#method-i-metadata","()","",null,0],["metadata","ActiveStorage::Analyzer::ImageAnalyzer","rails/classes/ActiveStorage/Analyzer/ImageAnalyzer.html#method-i-metadata","()","",null,0],["metadata","ActiveStorage::Analyzer::VideoAnalyzer","rails/classes/ActiveStorage/Analyzer/VideoAnalyzer.html#method-i-metadata","()","",null,0],["method","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-method","()","<p>Returns the original value of the environment’s REQUEST_METHOD, even if it was overridden by middleware. …\n",null,0],["method","Object","ruby/classes/Object.html#method-i-method","(p1)","<p>Looks up the named method as a receiver in <em>obj</em>, returning a Method object (or raising NameError). The …\n",null,1],["method","RDoc::MarkupReference","ruby/classes/RDoc/MarkupReference.html#method-i-method","(foo, bar)","<p>This method is documented only by RDoc, except for these comments.\n<p>Click on the calling sequence to see …\n",null,1],["method.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/features/method_coffee.html","","<p>#= require_tree ../utils\n<p>{ stopEverything } = Rails { isContentEditable } = Rails\n<p># Handles “data-method” …\n",null,0],["method_added","AbstractController::Base","rails/classes/AbstractController/Base.html#method-c-method_added","(name)","<p>Refresh the cached action_methods when a new action_method is added.\n",null,0],["method_added","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-c-method_added","(name)","<p>Refresh the cached action_methods when a new action_method is added.\n",null,0],["method_added","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-c-method_added","(event)","<p>Adds event subscribers for all new methods added to the class.\n",null,0],["method_defined?","Module","ruby/classes/Module.html#method-i-method_defined-3F","(*args)","<p>Returns <code>true</code> if the named method is defined by <em>mod</em>.  If <em>inherit</em> is set, the lookup will also search  …\n",null,1],["method_file","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-method_file","(klass_name, method_name)","<p>Path to the ri data for <code>method_name</code> in <code>klass_name</code>\n",null,1],["method_id","TracePoint","ruby/classes/TracePoint.html#method-i-method_id","()","<p>Return the name at the definition of the method being called\n",null,1],["method_missing","ActiveModel::AttributeMethods","rails/classes/ActiveModel/AttributeMethods.html#method-i-method_missing","(method, *args, &block)","<p>Allows access to the object attributes, which are held in the hash returned by <code>attributes</code>, as though …\n",null,0],["method_missing","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-method_missing","(method, *arguments, &block)","",null,0],["method_missing","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-method_missing","(method, *args, &block)","<p>Forward all undefined methods to the wrapped string.\n",null,0],["method_missing","ActiveSupport::OrderedOptions","rails/classes/ActiveSupport/OrderedOptions.html#method-i-method_missing","(name, *args)","",null,0],["method_missing","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-method_missing","(...)","<p>Send the missing method to <code>time</code> instance, and wrap result in a new TimeWithZone with the existing <code>time_zone</code> …\n",null,0],["method_missing","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-method_missing","(msg_id, *a, &b)","",null,1],["method_missing","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-method_missing","(msg_id, *a, &b)","",null,1],["method_missing","DRb::ThreadObject","ruby/classes/DRb/ThreadObject.html#method-i-method_missing","(msg, *arg, &blk)","",null,1],["method_missing","Delegator","ruby/classes/Delegator.html#method-i-method_missing","(m, *args, &block)","",null,1],["method_missing","Gem::Uri","ruby/classes/Gem/Uri.html#method-i-method_missing","(method_name, *args, &blk)","",null,1],["method_missing","Ractor::MovedObject","ruby/classes/Ractor/MovedObject.html#method-i-method_missing","(*args)","",null,1],["method_missing","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-method_missing","(*args)","<p>Calls WIN32OLE#invoke method.\n",null,1],["method_missing","WIN32OLE::Record","ruby/classes/WIN32OLE/Record.html#method-i-method_missing","(*args)","<p>Returns value specified by the member name of VT_RECORD OLE variable. Or sets value specified by the …\n",null,1],["method_names","DidYouMean::MethodNameChecker","ruby/classes/DidYouMean/MethodNameChecker.html#method-i-method_names","()","",null,1],["method_symbol","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-method_symbol","()","<p>Returns a symbol form of the #method.\n",null,0],["methods","","ruby/files/ruby/doc/syntax/methods_rdoc.html","","<p>Methods\n<p>Methods implement the functionality of your program.  Here is a simple method definition:\n\n<pre><code>def one_plus_one ...\n</code></pre>\n",null,1],["methods","","ruby/files/ruby/doc/regexp/methods_rdoc.html","","<p>Regexp Methods\n<p>Each of these Ruby core methods can accept a regexp as an argument:\n<p>Enumerable#all?\n",null,1],["methods","Delegator","ruby/classes/Delegator.html#method-i-methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this object’s and _<em>getobj</em> …\n",null,1],["methods","Object","ruby/classes/Object.html#method-i-methods","(*args)","<p>Returns a list of the names of public and protected methods of <em>obj</em>. This will include all the methods …\n",null,1],["methods","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-methods","(*args)","<p>By overriding Object#methods, WIN32OLE might work well with did_you_mean gem. This is experimental.\n\n<pre><code>require ...\n</code></pre>\n",null,1],["methods_by_type","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-methods_by_type","(section = nil)","<p>Breaks method_list into a nested hash by type (<code>&#39;class&#39;</code> or <code>&#39;instance&#39;</code>) and visibility …\n",null,1],["methods_matching","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-methods_matching","(methods, singleton = false, &block)","<p>Yields AnyMethod and Attr entries matching the list of names in <code>methods</code>.\n",null,1],["mfa_unauthorized?","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-mfa_unauthorized-3F","(response)","",null,1],["midday","Date","rails/classes/Date.html#method-i-midday","()","",null,0],["midday","DateTime","rails/classes/DateTime.html#method-i-midday","()","",null,0],["midday","Time","rails/classes/Time.html#method-i-midday","()","",null,0],["middle_of_day","Date","rails/classes/Date.html#method-i-middle_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion set to the middle of the day …\n",null,0],["middle_of_day","DateTime","rails/classes/DateTime.html#method-i-middle_of_day","()","<p>Returns a new DateTime representing the middle of the day (12:00)\n",null,0],["middle_of_day","Time","rails/classes/Time.html#method-i-middle_of_day","()","<p>Returns a new Time representing the middle of the day (12:00)\n",null,0],["middleware","ActionController::Metal","rails/classes/ActionController/Metal.html#method-c-middleware","()","<p>Alias for <code>middleware_stack</code>.\n",null,0],["middleware","ActiveSupport::Cache::Strategy::LocalCache","rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-middleware","()","<p>Middleware class can be inserted as a Rack handler to be local cache for the duration of request.\n",null,0],["middleware","Rails::Server","rails/classes/Rails/Server.html#method-i-middleware","()","",null,0],["middleware.rake","","rails/files/rails/railties/lib/rails/tasks/middleware_rake.html","","<p># frozen_string_literal: true\n<p>desc “Prints out your Rack middleware stack” task middleware: …\n",null,0],["midnight","Date","rails/classes/Date.html#method-i-midnight","()","",null,0],["midnight","DateTime","rails/classes/DateTime.html#method-i-midnight","()","",null,0],["midnight","Time","rails/classes/Time.html#method-i-midnight","()","",null,0],["migrate","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-c-migrate","(direction)","",null,0],["migrate","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-migrate","(direction)","<p>Execute this migration in the named direction\n",null,0],["migrate","ActiveRecord::MigrationContext","rails/classes/ActiveRecord/MigrationContext.html#method-i-migrate","(target_version = nil, &block)","<p>Runs the migrations in the <code>migrations_path</code>.\n<p>If <code>target_version</code> is <code>nil</code>, <code>migrate</code> will run <code>up</code>.\n<p>If the <code>current_version</code> …\n",null,0],["migrate","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-migrate","(version = nil)","",null,0],["migrate_status","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-migrate_status","()","",null,0],["migration.rb.tt","","rails/files/rails/activerecord/lib/rails/generators/active_record/migration/templates/migration_rb_tt.html","","<p>class &lt;%= migration_class_name %&gt; &lt; ActiveRecord::Migration[&lt;%= ActiveRecord::Migration.current_version …\n",null,0],["migration_template","Rails::Generators::Migration","rails/classes/Rails/Generators/Migration.html#method-i-migration_template","(source, destination, config = {})","<p>Creates a migration template at the given destination. The difference to the default template method …\n",null,0],["migrations_paths","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-migrations_paths","()","<p>The migrations paths for a database configuration. If the <code>migrations_paths</code> key is present in the config, …\n",null,0],["migrations_paths","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-migrations_paths","()","",null,0],["min","Array","ruby/classes/Array.html#method-i-min","(*args)","<p>Returns one of the following:\n<p>The minimum-valued element from <code>self</code>.\n<p>A new Array of minimum-valued elements …\n",null,1],["min","DateTime","ruby/classes/DateTime.html#method-i-min","()","<p>Returns the minute in range (0..59):\n\n<pre><code>DateTime.new(2001, 2, 3, 4, 5, 6).min # =&gt; 5\n</code></pre>\n",null,1],["min","Enumerable","ruby/classes/Enumerable.html#method-i-min","(*args)","<p>Returns the element with the minimum element according to a given criterion. The ordering of equal elements …\n",null,1],["min","Range","ruby/classes/Range.html#method-i-min","(*args)","<p>Returns the minimum value in <code>self</code>, using method <code>&lt;=&gt;</code> or a given block for comparison.\n<p>With no argument …\n",null,1],["min","Time","ruby/classes/Time.html#method-i-min","()","<p>Returns the integer minute of the hour for <code>self</code>, in range (0..59):\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, 6) ...\n</code></pre>\n",null,1],["min_by","Enumerable","ruby/classes/Enumerable.html#method-i-min_by","(*args)","<p>Returns the elements for which the block returns the minimum values.\n<p>With a block given and no argument, …\n",null,1],["min_threads","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-min_threads","()","",null,0],["min_version=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-min_version-3D","(version)","<p>Sets the lower bound on the supported SSL/TLS protocol version. The version may be specified by an integer …\n",null,1],["minimum","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-minimum","(column_name)","<p>Calculates the minimum value on a given column. The value is returned with the same data type of the …\n",null,0],["minimum","Enumerable","rails/classes/Enumerable.html#method-i-minimum","(key)","<p>Calculates the minimum from the extracted elements.\n\n<pre><code>payments = [Payment.new(5), Payment.new(15), Payment.new(10)] ...\n</code></pre>\n",null,0],["minmax","Array","ruby/classes/Array.html#method-i-minmax","()","<p>Returns a new 2-element Array containing the minimum and maximum values from <code>self</code>, either per method …\n",null,1],["minmax","Enumerable","ruby/classes/Enumerable.html#method-i-minmax","()","<p>Returns a 2-element array containing the minimum and maximum elements according to a given criterion. …\n",null,1],["minmax","Range","ruby/classes/Range.html#method-i-minmax","()","<p>Returns a 2-element array containing the minimum and maximum value in <code>self</code>, either according to comparison …\n",null,1],["minmax_by","Enumerable","ruby/classes/Enumerable.html#method-i-minmax_by","()","<p>Returns a 2-element array containing the elements for which the block returns minimum and maximum values: …\n",null,1],["minor_version","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-minor_version","()","<p>Returns minor version.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Word 10.0 Object Library&#39;, &#39;Documents&#39;)\nputs ...\n</code></pre>\n",null,1],["minor_version","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-minor_version","()","<p>Returns the type library minor version.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...\n</code></pre>\n",null,1],["minus_with_coercion","Time","rails/classes/Time.html#method-i-minus_with_coercion","(other)","<p>Time#- can also be used to determine the number of seconds between two Time instances. We’re layering …\n",null,0],["minus_without_coercion","Time","rails/classes/Time.html#method-i-minus_without_coercion","(other)","",null,0],["minus_without_duration","Time","rails/classes/Time.html#method-i-minus_without_duration","(other)","",null,0],["minute","Numeric","rails/classes/Numeric.html#method-i-minute","()","",null,0],["minute","DateTime","ruby/classes/DateTime.html#method-i-minute","()","<p>Returns the minute in range (0..59):\n\n<pre><code>DateTime.new(2001, 2, 3, 4, 5, 6).min # =&gt; 5\n</code></pre>\n",null,1],["minutes","Numeric","rails/classes/Numeric.html#method-i-minutes","()","<p>Returns a Duration instance matching the number of minutes provided.\n\n<pre><code>2.minutes # =&gt; 2 minutes\n</code></pre>\n",null,0],["mirror","ActiveStorage::Service::MirrorService","rails/classes/ActiveStorage/Service/MirrorService.html#method-i-mirror","(key, checksum:)","<p>Copy the file at the <code>key</code> from the primary service to each of the mirrors where it doesn’t already …\n",null,0],["misc.rake","","rails/files/rails/railties/lib/rails/tasks/misc_rake.html","","<p># frozen_string_literal: true\n<p>desc “Generate a cryptographically secure secret key (this is typically …\n",null,0],["miscellaneous","","ruby/files/ruby/doc/syntax/miscellaneous_rdoc.html","","<p>Miscellaneous Syntax\n<p>Ending an Expression\n<p>Ruby uses a newline as the end of an expression.  When ending …\n",null,1],["missing","ActiveRecord::QueryMethods::WhereChain","rails/classes/ActiveRecord/QueryMethods/WhereChain.html#method-i-missing","(*associations)","<p>Returns a new relation with left outer joins and where clause to identify missing relations.\n<p>For example, …\n",null,0],["missing","SyntaxSuggest::ExplainSyntax","ruby/classes/SyntaxSuggest/ExplainSyntax.html#method-i-missing","()","<p>Returns an array of missing elements\n<p>For example this:\n\n<pre><code>ExplainSyntax.new(code_lines: lines).missing\n# =&gt; ...\n</code></pre>\n",null,1],["missing","SyntaxSuggest::LeftRightLexCount","ruby/classes/SyntaxSuggest/LeftRightLexCount.html#method-i-missing","()","<p>Returns an array of missing syntax characters or ‘“end”` or `“keyword”`\n\n<pre><code>left_right.missing ...\n</code></pre>\n",null,1],["missing_extensions?","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-missing_extensions-3F","()","<p>Is this specification missing its extensions?  When this returns true you probably want to build_extensions …\n",null,1],["missing_name","NameError","rails/classes/NameError.html#method-i-missing_name","()","<p>Extract the name of the missing constant from the exception message.\n\n<pre><code>begin\n  HelloWorld\nrescue NameError ...\n</code></pre>\n",null,0],["missing_name?","NameError","rails/classes/NameError.html#method-i-missing_name-3F","(name)","<p>Was this exception raised because the given name was missing?\n\n<pre><code>begin\n  HelloWorld\nrescue NameError =&gt; e ...\n</code></pre>\n",null,0],["mjd","Date","ruby/classes/Date.html#method-i-mjd","()","<p>Returns the modified Julian day number.  This is a whole number, which is adjusted by the offset as the …\n",null,1],["mkcol","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-mkcol","(path, body = nil, initheader = nil)","<p>Sends a MKCOL request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["mkdir","Dir","ruby/classes/Dir.html#method-c-mkdir","(p1, p2 = v2)","<p>Creates a directory in the underlying file system at <code>dirpath</code> with the given <code>permissions</code>; returns zero: …\n",null,1],["mkdir","FileUtils","ruby/classes/FileUtils.html#method-c-mkdir","(list, mode: nil, noop: nil, verbose: nil)","<p>Creates directories at the paths in the given <code>list</code> (a single path or an array of paths); returns <code>list</code> …\n",null,1],["mkdir","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-i-mkdir","(name, mode)","<p>Creates a new directory in the tar file <code>name</code> with <code>mode</code>\n",null,1],["mkdir","Pathname","ruby/classes/Pathname.html#method-i-mkdir","(p1 = v1)","<p>Create the referenced directory.\n<p>See Dir.mkdir.\n",null,1],["mkdir_p","Bundler","ruby/classes/Bundler.html#method-c-mkdir_p","(path)","",null,1],["mkdir_p","FileUtils","ruby/classes/FileUtils.html#method-c-mkdir_p","(list, mode: nil, noop: nil, verbose: nil)","<p>Creates directories at the paths in the given <code>list</code> (a single path or an array of paths), also creating …\n",null,1],["mkdir_p","Gem::Commands::SetupCommand::MakeDirs","ruby/classes/Gem/Commands/SetupCommand/MakeDirs.html#method-i-mkdir_p","(path, **opts)","",null,1],["mkfifo","File","ruby/classes/File.html#method-c-mkfifo","(*args)","<p>Creates a FIFO special file with name <em>file_name</em>.  <em>mode</em> specifies the FIFO’s permissions. It is modified …\n",null,1],["mkpath","FileUtils","ruby/classes/FileUtils.html#method-c-mkpath","(list, mode: nil, noop: nil, verbose: nil)","",null,1],["mkpath","Pathname","ruby/classes/Pathname.html#method-i-mkpath","(mode: nil)","<p>Creates a full path, including any intermediate directories that don’t yet exist.\n<p>See FileUtils.mkpath …\n",null,1],["mktime","Time","ruby/classes/Time.html#method-c-mktime","(*args)","<p>Like Time.utc, except that the returned <code>Time</code> object has the local timezone, not the UTC timezone:\n\n<pre><code># With ...\n</code></pre>\n",null,1],["mktmpdir","Dir","ruby/classes/Dir.html#method-c-mktmpdir","(prefix_suffix=nil, *rest, **options)","<p>Dir.mktmpdir creates a temporary directory.\n<p>The directory is created with 0700 permission. Application …\n",null,1],["mod_add","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-mod_add","(p1, p2)","",null,1],["mod_exp","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-mod_exp","(p1, p2)","",null,1],["mod_inverse","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-mod_inverse","(p1)","",null,1],["mod_mul","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-mod_mul","(p1, p2)","",null,1],["mod_sqr","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-mod_sqr","(p1)","",null,1],["mod_sqrt","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-mod_sqrt","(p1)","",null,1],["mod_sub","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-mod_sub","(p1, p2)","",null,1],["mode","BigDecimal","ruby/classes/BigDecimal.html#method-c-mode","(p1, p2 = v2)","<p>Returns an integer representing the mode settings for exception handling and rounding.\n<p>These modes control …\n",null,1],["mode","File::Stat","ruby/classes/File/Stat.html#method-i-mode","()","<p>Returns an integer representing the permission bits of <em>stat</em>. The meaning of the bits is platform dependent; …\n",null,1],["model.rb.tt","","rails/files/rails/activerecord/lib/rails/generators/active_record/model/templates/model_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; class &lt;%= class_name %&gt; &lt; &lt;%= parent_class_name.classify …\n",null,0],["model_name","ActiveModel::Naming","rails/classes/ActiveModel/Naming.html#method-i-model_name","()","<p>Returns an ActiveModel::Name object for module. It can be used to retrieve all kinds of naming-related …\n",null,0],["model_resource_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-model_resource_name","(base_name = singular_table_name, prefix: \"\")","",null,0],["module","RDoc::Mixin","ruby/classes/RDoc/Mixin.html#method-i-module","()","<p>Attempts to locate the included module object.  Returns the name if not known.\n<p>The scoping rules of Ruby …\n",null,1],["module.rb.tt","","rails/files/rails/activerecord/lib/rails/generators/active_record/model/templates/module_rb_tt.html","","<p>&lt;% module_namespacing do -%&gt; module &lt;%= class_path.map(&amp;:camelize).join(“::”) …\n",null,0],["module?","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-module-3F","()","<p>Does this object represent a module?\n",null,1],["module?","RDoc::NormalModule","ruby/classes/RDoc/NormalModule.html#method-i-module-3F","()","<p>This is a module, returns true\n",null,1],["module_eval","Module","ruby/classes/Module.html#method-i-module_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>, except that when a block is given, constant/class …\n",null,1],["module_exec","Module","ruby/classes/Module.html#method-i-module_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method defined in the block will belong …\n",null,1],["module_for_detailed_message","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-module_for_detailed_message","()","<p>SyntaxSuggest.module_for_detailed_message [Private]\n<p>Used to monkeypatch SyntaxError via Module.prepend …\n",null,1],["module_names","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-module_names","()","<p>Modules cache accessor.  An Array of all the module (and class) names in the store.\n",null,1],["module_namespacing","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-i-module_namespacing","(&block)","<p>Wrap block with namespace of current application if namespace exists and is not skipped\n",null,0],["module_parent","Module","rails/classes/Module.html#method-i-module_parent","()","<p>Returns the module which contains this one according to its name.\n\n<pre><code>module M\n  module N\n  end\nend\nX = M::N ...\n</code></pre>\n",null,0],["module_parent_name","Module","rails/classes/Module.html#method-i-module_parent_name","()","<p>Returns the name of the module containing this one.\n\n<pre><code>M::N.module_parent_name # =&gt; &quot;M&quot;\n</code></pre>\n",null,0],["module_parents","Module","rails/classes/Module.html#method-i-module_parents","()","<p>Returns all the parents of this module according to its name, ordered from nested outwards. The receiver …\n",null,0],["modules","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-modules","()","<p>Array of modules in this context\n",null,1],["modules_and_classes","","ruby/files/ruby/doc/syntax/modules_and_classes_rdoc.html","","<p>Modules\n<p>Modules serve two purposes in Ruby, namespacing and mix-in functionality.\n<p>A namespace can be used …\n",null,1],["modules_for_helpers","AbstractController::Helpers::ClassMethods","rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(modules_or_helper_prefixes)","<p>Given an array of values like the ones accepted by <code>helper</code>, this method returns an array with the corresponding …\n",null,0],["modules_for_helpers","ActionController::Helpers::ClassMethods","rails/classes/ActionController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(args)","<p>Override modules_for_helpers to accept <code>:all</code> as argument, which loads all helpers in helpers_path.\n<p>Parameters …\n",null,0],["modules_hash","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-modules_hash","()","<p>Hash of modules keyed by module name\n",null,1],["modules_hash","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-modules_hash","()","<p>Hash of all modules known to RDoc\n",null,1],["modulo","BigDecimal","ruby/classes/BigDecimal.html#method-i-modulo","(p1)","<p>Returns the modulus from dividing by b.\n<p>See BigDecimal#divmod.\n",null,1],["modulo","Float","ruby/classes/Float.html#method-i-modulo","(p1)","<p>Returns <code>self</code> modulo <code>other</code> as a float.\n<p>For float <code>f</code> and real number <code>r</code>, these expressions are equivalent: …\n",null,1],["modulo","Integer","ruby/classes/Integer.html#method-i-modulo","(p1)","<p>Returns <code>self</code> modulo <code>other</code> as a real number.\n<p>For integer <code>n</code> and real number <code>r</code>, these expressions are equivalent: …\n",null,1],["modulo","Numeric","ruby/classes/Numeric.html#method-i-modulo","(p1)","<p>Returns <code>self</code> modulo <code>other</code> as a real number.\n<p>Of the Core and Standard Library classes, only Rational uses …\n",null,1],["mon","Date","ruby/classes/Date.html#method-i-mon","()","<p>Returns the month in range (1..12):\n\n<pre><code>Date.new(2001, 2, 3).mon # =&gt; 2\n</code></pre>\n",null,1],["mon","Time","ruby/classes/Time.html#method-i-mon","()","<p>Returns the integer month of the year for <code>self</code>, in range (1..12):\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, 6) ...\n</code></pre>\n",null,1],["mon_check_owner","Monitor","ruby/classes/Monitor.html#method-i-mon_check_owner","()","",null,1],["mon_enter","ActiveSupport::Concurrency::LoadInterlockAwareMonitor","rails/classes/ActiveSupport/Concurrency/LoadInterlockAwareMonitor.html#method-i-mon_enter","()","<p>Enters an exclusive section, but allows dependency loading while blocked\n",null,0],["mon_enter","Monitor","ruby/classes/Monitor.html#method-i-mon_enter","()","",null,1],["mon_enter","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-mon_enter","()","<p>Enters exclusive section.\n",null,1],["mon_exit","Monitor","ruby/classes/Monitor.html#method-i-mon_exit","()","",null,1],["mon_exit","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-mon_exit","()","<p>Leaves exclusive section.\n",null,1],["mon_locked?","Monitor","ruby/classes/Monitor.html#method-i-mon_locked-3F","()","",null,1],["mon_locked?","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-mon_locked-3F","()","<p>Returns true if this monitor is locked by any thread\n",null,1],["mon_owned?","Monitor","ruby/classes/Monitor.html#method-i-mon_owned-3F","()","",null,1],["mon_owned?","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-mon_owned-3F","()","<p>Returns true if this monitor is locked by current thread.\n",null,1],["mon_synchronize","Monitor","ruby/classes/Monitor.html#method-i-mon_synchronize","()","",null,1],["mon_synchronize","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-mon_synchronize","(&b)","<p>Enters exclusive section and executes the block.  Leaves the exclusive section automatically when the …\n",null,1],["mon_try_enter","Monitor","ruby/classes/Monitor.html#method-i-mon_try_enter","()","",null,1],["mon_try_enter","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-mon_try_enter","()","<p>Attempts to enter exclusive section.  Returns <code>false</code> if lock fails.\n",null,1],["monday","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-monday","()","<p>Returns Monday of this week assuming that week starts on Monday. <code>DateTime</code> objects have their time set …\n",null,0],["monday?","Date","ruby/classes/Date.html#method-i-monday-3F","()","<p>Returns <code>true</code> if <code>self</code> is a Monday, <code>false</code> otherwise.\n",null,1],["monday?","Time","ruby/classes/Time.html#method-i-monday-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a Monday, <code>false</code> otherwise:\n\n<pre><code>t = Time.utc(2000, 1, 3) # =&gt; 2000-01-03 00:00:00 ...\n</code></pre>\n",null,1],["money","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-money","","",null,0],["monotonic_subscribe","ActiveSupport::Notifications","rails/classes/ActiveSupport/Notifications.html#method-c-monotonic_subscribe","(pattern = nil, callback = nil, &block)","<p>Performs the same functionality as #subscribe, but the <code>start</code> and <code>finish</code> block arguments are in monotonic …\n",null,0],["month","Integer","rails/classes/Integer.html#method-i-month","()","",null,0],["month","Date","ruby/classes/Date.html#method-i-month","()","<p>Returns the month in range (1..12):\n\n<pre><code>Date.new(2001, 2, 3).mon # =&gt; 2\n</code></pre>\n",null,1],["month","Time","ruby/classes/Time.html#method-i-month","()","<p>Returns the integer month of the year for <code>self</code>, in range (1..12):\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, 6) ...\n</code></pre>\n",null,1],["month_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-month_field","","<p>Wraps ActionView::Helpers::FormHelper#month_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["month_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-month_field","(object_name, method, options = {})","<p>Returns a text_field of type “month”.\n\n<pre><code>month_field(&quot;user&quot;, &quot;born_on&quot;)\n# =&gt; &lt;input id=&quot;user_born_on&quot; ...\n</code></pre>\n",null,0],["month_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-month_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “month”.\n<p>Options\n<p>Supports the same options as #text_field_tag.  …\n",null,0],["months","Integer","rails/classes/Integer.html#method-i-months","()","<p>Returns a Duration instance matching the number of months provided.\n\n<pre><code>2.months # =&gt; 2 months\n</code></pre>\n",null,0],["months_ago","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-months_ago","(months)","<p>Returns a new date/time the specified number of months ago.\n",null,0],["months_since","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-months_since","(months)","<p>Returns a new date/time the specified number of months in the future.\n",null,0],["most_specific_locked_platform?","Bundler","ruby/classes/Bundler.html#method-c-most_specific_locked_platform-3F","(platform)","",null,1],["mount","ActionDispatch::Routing::Mapper::Base","rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-mount","(app, options = nil)","<p>Mount a Rack-based application to be used within the application.\n\n<pre><code>mount SomeRackApp, at: &quot;some_route&quot;\n</code></pre>\n",null,0],["mountable_engine?","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-mountable_engine-3F","()","",null,0],["mountpoint?","Pathname","ruby/classes/Pathname.html#method-i-mountpoint-3F","()","<p>Returns <code>true</code> if <code>self</code> points to a mountpoint.\n",null,1],["move","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-move","(target, source)","",null,0],["move","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-move","(...)","",null,0],["move","FileUtils","ruby/classes/FileUtils.html#method-c-move","(src, dest, force: nil, noop: nil, verbose: nil, secure: nil)","",null,1],["move","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-move","(path, initheader = nil)","<p>Sends a MOVE request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["move","Rinda::TupleSpace","ruby/classes/Rinda/TupleSpace.html#method-i-move","(port, tuple, sec=nil)","<p>Moves <code>tuple</code> to <code>port</code>.\n",null,1],["move_after","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-move_after","(target, source)","",null,0],["move_after","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-move_after","(...)","",null,0],["move_before","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-move_before","(target, source)","",null,0],["move_before","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-move_before","(...)","",null,0],["move_cursor_column","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-move_cursor_column","(x)","",null,1],["move_cursor_column","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-move_cursor_column","(val)","",null,1],["move_cursor_column","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-move_cursor_column","(val)","",null,1],["move_cursor_down","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-move_cursor_down","(x)","",null,1],["move_cursor_down","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-move_cursor_down","(val)","",null,1],["move_cursor_down","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-move_cursor_down","(val)","",null,1],["move_cursor_up","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-move_cursor_up","(x)","",null,1],["move_cursor_up","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-move_cursor_up","(val)","",null,1],["move_cursor_up","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-move_cursor_up","(val)","",null,1],["ms","Benchmark","rails/classes/Benchmark.html#method-c-ms","(&block)","<p>Benchmark realtime in milliseconds.\n\n<pre><code>Benchmark.realtime { User.all }\n# =&gt; 8.0e-05\n\nBenchmark.ms { User.all ...\n</code></pre>\n",null,0],["msys_tty?","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-msys_tty-3F","(io = @@hConsoleInputHandle)","",null,1],["mtime","File","ruby/classes/File.html#method-c-mtime","(p1)","<p>Returns the modification time for the named file as a Time object.\n<p><em>file_name</em> can be an IO object.\n\n<pre><code>File.mtime(&quot;testfile&quot;) ...\n</code></pre>\n",null,1],["mtime","File","ruby/classes/File.html#method-i-mtime","()","<p>Returns the modification time for <em>file</em>.\n\n<pre><code>File.new(&quot;testfile&quot;).mtime   #=&gt; Wed Apr 09 08:53:14 CDT 2003\n</code></pre>\n",null,1],["mtime","File::Stat","ruby/classes/File/Stat.html#method-i-mtime","()","<p>Returns the modification time of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).mtime   #=&gt; Wed Apr 09 08:53:14 CDT 2003\n</code></pre>\n",null,1],["mtime","Pathname","ruby/classes/Pathname.html#method-i-mtime","()","<p>Returns the last modified time of the file.\n<p>See File.mtime.\n",null,1],["mtime","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-mtime","()","<p>Returns last modification time recorded in the gzip file header.\n",null,1],["mtime=","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-mtime-3D","(p1)","<p>Specify the modification time (<code>mtime</code>) in the gzip header. Using an Integer.\n<p>Setting the mtime in the gzip …\n",null,1],["mu_lock","Mutex_m","ruby/classes/Mutex_m.html#method-i-mu_lock","()","<p>See Thread::Mutex#lock\n",null,1],["mu_locked?","Mutex_m","ruby/classes/Mutex_m.html#method-i-mu_locked-3F","()","<p>See Thread::Mutex#locked?\n",null,1],["mu_synchronize","Mutex_m","ruby/classes/Mutex_m.html#method-i-mu_synchronize","(&block)","<p>See Thread::Mutex#synchronize\n",null,1],["mu_try_lock","Mutex_m","ruby/classes/Mutex_m.html#method-i-mu_try_lock","()","<p>See Thread::Mutex#try_lock\n",null,1],["mu_unlock","Mutex_m","ruby/classes/Mutex_m.html#method-i-mu_unlock","()","<p>See Thread::Mutex#unlock\n",null,1],["mul","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-mul","(p1, p2 = v2, p3 = v3)","<p>Performs elliptic curve point multiplication.\n<p>The first form calculates <code>bn1 * point + bn2 * G</code>, where  …\n",null,1],["mult","BigDecimal","ruby/classes/BigDecimal.html#method-i-mult","(p1, p2)","<p>Returns the BigDecimal product of <code>self</code> and <code>value</code> with a precision of <code>ndigits</code> decimal digits.\n<p>When <code>ndigits</code> …\n",null,1],["multi_db.rb.tt","","rails/files/rails/activerecord/lib/rails/generators/active_record/multi_db/templates/multi_db_rb_tt.html","","<p># Multi-db Configuration # # This file is used for configuration settings related to multiple databases. …\n",null,0],["multiline?","Regexp","rails/classes/Regexp.html#method-i-multiline-3F","()","<p>Returns <code>true</code> if the regexp has the multiline flag set.\n\n<pre><code>(/./).multiline?  # =&gt; false\n(/./m).multiline? ...\n</code></pre>\n",null,0],["multiline_off","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-multiline_off","()","",null,1],["multiline_on","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-multiline_on","()","",null,1],["multipart=","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-multipart-3D","(multipart)","",null,0],["multipart?","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-multipart-3F","()","<p>Returns whether the form contained multipart/form-data\n",null,1],["multipart_form","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-multipart_form","(action = nil, enctype = \"multipart/form-data\")","<p>Generate a Form element with multipart encoding as a String.\n<p>Multipart encoding is used for forms that …\n",null,1],["multiple_of?","Integer","rails/classes/Integer.html#method-i-multiple_of-3F","(number)","<p>Check whether the integer is evenly divisible by the argument.\n\n<pre><code>0.multiple_of?(0)  # =&gt; true\n6.multiple_of?(5) ...\n</code></pre>\n",null,0],["must_C_version","StringScanner","ruby/classes/StringScanner.html#method-c-must_C_version","()","<p>This method is defined for backward compatibility.\n",null,1],["mute","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-mute","()","<p>Silences the logger within a block.\n",null,0],["mutool_exists?","ActiveStorage::Previewer::MuPDFPreviewer","rails/classes/ActiveStorage/Previewer/MuPDFPreviewer.html#method-c-mutool_exists-3F","()","",null,0],["mutool_path","ActiveStorage::Previewer::MuPDFPreviewer","rails/classes/ActiveStorage/Previewer/MuPDFPreviewer.html#method-c-mutool_path","()","",null,0],["mv","FileUtils","ruby/classes/FileUtils.html#method-c-mv","(src, dest, force: nil, noop: nil, verbose: nil, secure: nil)","<p>Moves entries.\n<p>Arguments <code>src</code> (a single path or an array of paths) and <code>dest</code> (a single path) should be  …\n",null,1],["mysql.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/mysql_yml_tt.html","","<p># MySQL. Versions 5.5.8 and up are supported. # # Install the MySQL driver #   gem install mysql2 # # …\n",null,0],["n_jobs","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-n_jobs","()","<p>The total number of irb sessions, used to set <code>irb_name</code> of the current Context.\n",null,1],["n_significant_digits","BigDecimal","ruby/classes/BigDecimal.html#method-i-n_significant_digits","()","<p>Returns the number of decimal significant digits in <code>self</code>.\n\n<pre><code>BigDecimal(&quot;0&quot;).n_significant_digits        ...\n</code></pre>\n",null,1],["name","ActionDispatch::MiddlewareStack::Middleware","rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-name","()","",null,0],["name","ActiveRecord::Faker","rails/classes/ActiveRecord/Faker.html#method-c-name","()","",null,0],["name","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-name","()","",null,0],["name","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-c-name","()","<p>Report class name as ‘Time’ to thwart type checking.\n",null,0],["name","Encoding","ruby/classes/Encoding.html#method-i-name","()","<p>Returns the name of the encoding.\n\n<pre><code>Encoding::UTF_8.name      #=&gt; &quot;UTF-8&quot;\n</code></pre>\n",null,1],["name","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-name","()","<p>Name of the gem\n",null,1],["name","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-name","()","<p>The name of this activation request’s specification\n",null,1],["name","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-name","()","<p>The name of the gem this dependency request is requesting.\n",null,1],["name","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-name","()","<p>The name of the gem for this specification\n",null,1],["name","Gem::UnsatisfiableDependencyError","ruby/classes/Gem/UnsatisfiableDependencyError.html#method-i-name","()","<p>The name of the unresolved dependency\n",null,1],["name","Method","ruby/classes/Method.html#method-i-name","()","<p>Returns the name of the method.\n",null,1],["name","Module","ruby/classes/Module.html#method-i-name","()","<p>Returns the name of the module <em>mod</em>.  Returns nil for anonymous modules.\n",null,1],["name","NameError","ruby/classes/NameError.html#method-i-name","()","<p>Return the name associated with this NameError exception.\n",null,1],["name","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-name","()","<p>Returns the name of the cipher which may differ slightly from the original name provided.\n",null,1],["name","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-i-name","()","<p>Returns the sn of this Digest algorithm.\n<p>Example\n\n<pre><code>digest = OpenSSL::Digest.new(&#39;SHA512&#39;)\nputs digest.name ...\n</code></pre>\n",null,1],["name","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-name","()","<p>Get the descriptive name for this engine.\n\n<pre><code>OpenSSL::Engine.load\nOpenSSL::Engine.engines #=&gt; [#&lt;OpenSSL::Engine#&gt;, ...\n</code></pre>\n",null,1],["name","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-name","()","<p>Method name\n<p>If the method has no assigned name, it extracts it from #call_seq.\n",null,1],["name","Ractor","ruby/classes/Ractor.html#method-i-name","()","<p>The name set in Ractor.new, or <code>nil</code>.\n",null,1],["name","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-name","()","<p>Returns the interface name of <em>ifaddr</em>.\n",null,1],["name","Symbol","ruby/classes/Symbol.html#method-i-name","()","<p>Returns a frozen string representation of <code>self</code> (not including the leading colon):\n\n<pre><code>:foo.name         # ...\n</code></pre>\n",null,1],["name","Thread","ruby/classes/Thread.html#method-i-name","()","<p>show the name of the thread.\n",null,1],["name","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-name","()","<p>Returns the name of the method.\n",null,1],["name","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-name","()","<p>Returns the name of the method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;) ...\n</code></pre>\n",null,1],["name","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-name","()","<p>Returns name.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;)\nmethod = WIN32OLE_METHOD.new(tobj, ...\n</code></pre>\n",null,1],["name","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-name","()","<p>Returns OLE type name.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Application&#39;)\nputs ...\n</code></pre>\n",null,1],["name","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-name","()","<p>Returns the type library name.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;)\nname ...\n</code></pre>\n",null,1],["name","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-name","()","<p>Returns the name of variable.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;XlSheetType&#39;) ...\n</code></pre>\n",null,1],["name","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-name","()","<p>Full path of key such as ‘HKEY_CURRENT_USERSOFTWAREfoobar’.\n",null,1],["name=","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-name-3D","(str)","<p>Set name of this cookie\n",null,1],["name=","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-name-3D","(new_name)","<p>Allows overriding the initial name.\n<p>Used for modules and classes that are constant aliases.\n",null,1],["name=","Thread","ruby/classes/Thread.html#method-i-name-3D","(p1)","<p>set given name to the ruby thread. On some platform, it may set the name to pthread and/or kernel.\n",null,1],["name_for","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-name_for","(dependency)","",null,1],["name_for_path","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-name_for_path","()","<p>Name to use to generate the url: modules and classes that are aliases for another module or class return …\n",null,1],["name_for_path","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-name_for_path","()","<p>Name to use to generate the url. <code>#full_name</code> by default.\n",null,1],["name_list","Encoding","ruby/classes/Encoding.html#method-c-name_list","()","<p>Returns the list of available encoding names.\n\n<pre><code>Encoding.name_list\n#=&gt; [&quot;US-ASCII&quot;, &quot;ASCII-8BIT&quot;, &quot;UTF-8&quot;, ...\n</code></pre>\n",null,1],["name_path","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-i-name_path","(name)","<p>Returns the path to the trusted certificate with the given ASN.1 <code>name</code>\n",null,1],["name_prefix","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-name_prefix","()","<p>‘::’ for the alias of a singleton method/attribute, ‘#’ for instance-level.\n",null,1],["name_prefix","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-name_prefix","()","<p>‘::’ for a class method/attribute, ‘#’ for an instance method.\n",null,1],["name_tuple","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-name_tuple","()","<p>Return a NameTuple that represents this Specification\n",null,1],["named_captures","MatchData","ruby/classes/MatchData.html#method-i-named_captures","(p1 = {})","<p>Returns a hash of the named captures; each key is a capture name; each value is its captured string or …\n",null,1],["named_captures","Regexp","ruby/classes/Regexp.html#method-i-named_captures","()","<p>Returns a hash representing named captures of <code>self</code> (see Named Captures):\n<p>Each key is the name of a named …\n",null,1],["named_captures","StringScanner","ruby/classes/StringScanner.html#method-i-named_captures","()","<p>Returns a hash of string variables matching the regular expression.\n\n<pre><code>scan = StringScanner.new(&#39;foobarbaz&#39;) ...\n</code></pre>\n",null,1],["names","Encoding","ruby/classes/Encoding.html#method-i-names","()","<p>Returns the list of name and aliases of the encoding.\n\n<pre><code>Encoding::WINDOWS_31J.names  #=&gt; [&quot;Windows-31J&quot;, ...\n</code></pre>\n",null,1],["names","MatchData","ruby/classes/MatchData.html#method-i-names","()","<p>Returns an array of the capture names (see Named Captures):\n\n<pre><code>m = /(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/.match(&quot;hoge&quot;) ...\n</code></pre>\n",null,1],["names","Regexp","ruby/classes/Regexp.html#method-i-names","()","<p>Returns an array of names of captures (see Named Captures):\n\n<pre><code>/(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/.names # =&gt; [&quot;foo&quot;, ...\n</code></pre>\n",null,1],["names_to_exclude","DidYouMean::MethodNameChecker","ruby/classes/DidYouMean/MethodNameChecker.html#method-i-names_to_exclude","()","",null,1],["namespace","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-namespace","(path, options = {})","<p>See ActionDispatch::Routing::Mapper::Scoping#namespace.\n",null,0],["namespace","ActionDispatch::Routing::Mapper::Scoping","rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-namespace","(path, options = {}, &block)","<p>Scopes routes to a specific namespace. For example:\n\n<pre><code>namespace :admin do\n  resources :posts\nend\n</code></pre>\n<p>This generates …\n",null,0],["namespace","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-namespace","(name = nil)","<p>Convenience method to get the namespace from the class name. It’s the same as Thor default except …\n",null,0],["namespace","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-namespace","(name = nil)","<p>Convenience method to get the namespace from the class name. It’s the same as Thor default except …\n",null,0],["namespace","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-i-namespace","()","",null,0],["namespaced?","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-i-namespaced-3F","()","",null,0],["namespaced_class_path","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced_class_path","()","",null,0],["namespaced_path","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-i-namespaced_path","()","",null,0],["nan?","BigDecimal","ruby/classes/BigDecimal.html#method-i-nan-3F","()","<p>Returns True if the value is Not a Number.\n",null,1],["nan?","Float","ruby/classes/Float.html#method-i-nan-3F","()","<p>Returns <code>true</code> if <code>self</code> is a NaN, <code>false</code> otherwise.\n\n<pre><code>f = -1.0     #=&gt; -1.0\nf.nan?       #=&gt; false\nf = 0.0/0.0 ...\n</code></pre>\n",null,1],["native","IPAddr","ruby/classes/IPAddr.html#method-i-native","()","<p>Returns a new ipaddr built by converting the IPv6 address into a native IPv4 address.  If the IP address …\n",null,1],["native_database_types","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-native_database_types","()","",null,0],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-native_database_types","()","<p>Returns a hash of mappings from the abstract data types to the native database types. See TableDefinition#column …\n",null,0],["native_thread_id","Thread","ruby/classes/Thread.html#method-i-native_thread_id","()","<p>Return the native thread ID which is used by the Ruby thread.\n<p>The ID depends on the OS. (not POSIX thread …\n",null,1],["need_gvl?","Fiddle::Function","ruby/classes/Fiddle/Function.html#method-i-need_gvl-3F","()","<p>Whether GVL is needed to call this function\n",null,1],["needs","Gem","ruby/classes/Gem.html#method-c-needs","()","",null,1],["negative?","Float","ruby/classes/Float.html#method-i-negative-3F","()","<p>Returns <code>true</code> if <code>self</code> is less than 0, <code>false</code> otherwise.\n",null,1],["negative?","Numeric","ruby/classes/Numeric.html#method-i-negative-3F","()","<p>Returns <code>true</code> if <code>self</code> is less than 0, <code>false</code> otherwise.\n",null,1],["negative?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-negative-3F","()","",null,1],["negative?","Rational","ruby/classes/Rational.html#method-i-negative-3F","()","<p>Returns <code>true</code> if <code>rat</code> is less than 0.\n",null,1],["negotiate_format","ActionController::MimeResponds::Collector","rails/classes/ActionController/MimeResponds/Collector.html#method-i-negotiate_format","(request)","",null,0],["negotiate_mime","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-negotiate_mime","(order)","<p>Returns the first MIME type that matches the provided array of MIME types.\n",null,0],["nest","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-nest","(indent)","<p>Increases left margin after newline with <code>indent</code> for line breaks added in the block.\n",null,1],["nested","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-nested","(&block)","",null,0],["nested_attributes?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-nested_attributes-3F","()","",null,0],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,0],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,0],["nested_under_indifferent_access","Hash","rails/classes/Hash.html#method-i-nested_under_indifferent_access","()","<p>Called when object is nested under an object that receives #with_indifferent_access. This method will …\n",null,0],["nesting","Module","ruby/classes/Module.html#method-c-nesting","()","<p>Returns the list of <code>Modules</code> nested at the point of call.\n\n<pre><code>module M1\n  module M2\n    $a = Module.nesting ...\n</code></pre>\n",null,1],["netmask","IPAddr","ruby/classes/IPAddr.html#method-i-netmask","()","<p>Returns the netmask in string format e.g. 255.255.0.0\n",null,1],["netmask","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-netmask","()","<p>Returns the netmask address of <em>ifaddr</em>. nil is returned if netmask is not available in <em>ifaddr</em>.\n",null,1],["new","AbstractController::DoubleRenderError","rails/classes/AbstractController/DoubleRenderError.html#method-c-new","(message = nil)","",null,0],["new","AbstractController::Helpers::MissingHelperError","rails/classes/AbstractController/Helpers/MissingHelperError.html#method-c-new","(error, path)","",null,0],["new","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-c-new","(connection, identifier, params = {})","",null,0],["new","ActionCable::Connection::Base","rails/classes/ActionCable/Connection/Base.html#method-c-new","(server, env, coder: ActiveSupport::JSON)","",null,0],["new","ActionCable::Connection::StreamEventLoop","rails/classes/ActionCable/Connection/StreamEventLoop.html#method-c-new","()","",null,0],["new","ActionCable::Connection::TaggedLoggerProxy","rails/classes/ActionCable/Connection/TaggedLoggerProxy.html#method-c-new","(logger, tags:)","",null,0],["new","ActionCable::RemoteConnections","rails/classes/ActionCable/RemoteConnections.html#method-c-new","(server)","",null,0],["new","ActionCable::RemoteConnections::RemoteConnection","rails/classes/ActionCable/RemoteConnections/RemoteConnection.html#method-c-new","(server, ids)","",null,0],["new","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-c-new","(config: self.class.config)","",null,0],["new","ActionCable::Server::Broadcasting::Broadcaster","rails/classes/ActionCable/Server/Broadcasting/Broadcaster.html#method-c-new","(server, broadcasting, coder:)","",null,0],["new","ActionCable::Server::Configuration","rails/classes/ActionCable/Server/Configuration.html#method-c-new","()","",null,0],["new","ActionCable::SubscriptionAdapter::Async::AsyncSubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/Async/AsyncSubscriberMap.html#method-c-new","(event_loop)","",null,0],["new","ActionCable::SubscriptionAdapter::Base","rails/classes/ActionCable/SubscriptionAdapter/Base.html#method-c-new","(server)","",null,0],["new","ActionCable::SubscriptionAdapter::PostgreSQL::Listener","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL/Listener.html#method-c-new","(adapter, event_loop)","",null,0],["new","ActionCable::SubscriptionAdapter::Redis::Listener","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener.html#method-c-new","(adapter, config_options, event_loop)","",null,0],["new","ActionCable::SubscriptionAdapter::Redis::Listener::SubscribedClient","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener/SubscribedClient.html#method-c-new","(raw_client)","",null,0],["new","ActionCable::SubscriptionAdapter::SubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html#method-c-new","()","",null,0],["new","ActionController::Live::SSE","rails/classes/ActionController/Live/SSE.html#method-c-new","(stream, options = {})","",null,0],["new","ActionController::Metal","rails/classes/ActionController/Metal.html#method-c-new","()","",null,0],["new","ActionController::MimeResponds::Collector","rails/classes/ActionController/MimeResponds/Collector.html#method-c-new","(mimes, variant = nil)","",null,0],["new","ActionController::MissingRenderer","rails/classes/ActionController/MissingRenderer.html#method-c-new","(format)","",null,0],["new","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-c-new","(parameters = {}, logging_context = {})","<p>Returns a new <code>ActionController::Parameters</code> instance. Also, sets the <code>permitted</code> attribute to the default …\n",null,0],["new","ActionController::Renderer","rails/classes/ActionController/Renderer.html#method-c-new","(controller, env, defaults)","<p>Accepts a custom Rack environment to render templates in. It will be merged with the default Rack environment …\n",null,0],["new","ActionController::Renderer","rails/classes/ActionController/Renderer.html#method-i-new","(env = {})","<p>Create a new renderer for the same controller but with a new env.\n",null,0],["new","ActionController::RequestForgeryProtection::ProtectionMethods::Exception","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/Exception.html#method-c-new","(controller)","",null,0],["new","ActionController::RequestForgeryProtection::ProtectionMethods::NullSession","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/NullSession.html#method-c-new","(controller)","",null,0],["new","ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession","rails/classes/ActionController/RequestForgeryProtection/ProtectionMethods/ResetSession.html#method-c-new","(controller)","",null,0],["new","ActionController::RespondToMismatchError","rails/classes/ActionController/RespondToMismatchError.html#method-c-new","(message = nil)","",null,0],["new","ActionDispatch::Callbacks","rails/classes/ActionDispatch/Callbacks.html#method-c-new","(app)","",null,0],["new","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-c-new","()","",null,0],["new","ActionDispatch::ContentSecurityPolicy::Middleware","rails/classes/ActionDispatch/ContentSecurityPolicy/Middleware.html#method-c-new","(app)","",null,0],["new","ActionDispatch::Cookies","rails/classes/ActionDispatch/Cookies.html#method-c-new","(app)","",null,0],["new","ActionDispatch::DebugExceptions","rails/classes/ActionDispatch/DebugExceptions.html#method-c-new","(app, routes_app = nil, response_format = :default, interceptors = self.class.interceptors)","",null,0],["new","ActionDispatch::DebugLocks","rails/classes/ActionDispatch/DebugLocks.html#method-c-new","(app, path = \"/rails/locks\")","",null,0],["new","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-c-new","(backtrace_cleaner, exception)","",null,0],["new","ActionDispatch::Executor","rails/classes/ActionDispatch/Executor.html#method-c-new","(app, executor)","",null,0],["new","ActionDispatch::FileHandler","rails/classes/ActionDispatch/FileHandler.html#method-c-new","(root, index: \"index\", headers: {}, precompressed: %i[ br gzip ], compressible_content_types: /\\A(?:text\\/|application\\/javascript)/)","",null,0],["new","ActionDispatch::Flash","rails/classes/ActionDispatch/Flash.html#method-c-new","(app)","",null,0],["new","ActionDispatch::HostAuthorization","rails/classes/ActionDispatch/HostAuthorization.html#method-c-new","(app, hosts, exclude: nil, response_app: nil)","",null,0],["new","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-c-new","()","",null,0],["new","ActionDispatch::Http::Parameters::ParseError","rails/classes/ActionDispatch/Http/Parameters/ParseError.html#method-c-new","(message = $!.message)","",null,0],["new","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-c-new","()","",null,0],["new","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-c-new","(*args)","",null,0],["new","ActionDispatch::MiddlewareStack::InstrumentationProxy","rails/classes/ActionDispatch/MiddlewareStack/InstrumentationProxy.html#method-c-new","(middleware, class_name)","",null,0],["new","ActionDispatch::MiddlewareStack::Middleware","rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-c-new","(klass, args, block)","",null,0],["new","ActionDispatch::PermissionsPolicy","rails/classes/ActionDispatch/PermissionsPolicy.html#method-c-new","()","",null,0],["new","ActionDispatch::PermissionsPolicy::Middleware","rails/classes/ActionDispatch/PermissionsPolicy/Middleware.html#method-c-new","(app)","",null,0],["new","ActionDispatch::PublicExceptions","rails/classes/ActionDispatch/PublicExceptions.html#method-c-new","(public_path)","",null,0],["new","ActionDispatch::RailsEntityStore","rails/classes/ActionDispatch/RailsEntityStore.html#method-c-new","(store = Rails.cache)","",null,0],["new","ActionDispatch::RailsMetaStore","rails/classes/ActionDispatch/RailsMetaStore.html#method-c-new","(store = Rails.cache)","",null,0],["new","ActionDispatch::RemoteIp","rails/classes/ActionDispatch/RemoteIp.html#method-c-new","(app, ip_spoofing_check = true, custom_proxies = nil)","<p>Create a new <code>RemoteIp</code> middleware instance.\n<p>The <code>ip_spoofing_check</code> option is on by default. When on, an …\n",null,0],["new","ActionDispatch::RemoteIp::GetIp","rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-c-new","(req, check_ip, proxies)","",null,0],["new","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-c-new","(env)","",null,0],["new","ActionDispatch::RequestId","rails/classes/ActionDispatch/RequestId.html#method-c-new","(app, header:)","",null,0],["new","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-c-new","(status = 200, header = {}, body = [])","",null,0],["new","ActionDispatch::Response::RackBody","rails/classes/ActionDispatch/Response/RackBody.html#method-c-new","(response)","",null,0],["new","ActionDispatch::Routing::ConsoleFormatter::Base","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Base.html#method-c-new","()","",null,0],["new","ActionDispatch::Routing::ConsoleFormatter::Expanded","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Expanded.html#method-c-new","(width: IO.console_size[1])","",null,0],["new","ActionDispatch::Routing::HtmlTableFormatter","rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-c-new","(view)","",null,0],["new","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-new","(&block)","",null,0],["new","ActionDispatch::Routing::UrlFor","rails/classes/ActionDispatch/Routing/UrlFor.html#method-c-new","(...)","",null,0],["new","ActionDispatch::ServerTiming","rails/classes/ActionDispatch/ServerTiming.html#method-c-new","(app)","",null,0],["new","ActionDispatch::Session::CacheStore","rails/classes/ActionDispatch/Session/CacheStore.html#method-c-new","(app, options = {})","",null,0],["new","ActionDispatch::Session::Compatibility","rails/classes/ActionDispatch/Session/Compatibility.html#method-c-new","(app, options = {})","",null,0],["new","ActionDispatch::Session::CookieStore","rails/classes/ActionDispatch/Session/CookieStore.html#method-c-new","(app, options = {})","",null,0],["new","ActionDispatch::Session::CookieStore::SessionId","rails/classes/ActionDispatch/Session/CookieStore/SessionId.html#method-c-new","(session_id, cookie_value = {})","",null,0],["new","ActionDispatch::Session::MemCacheStore","rails/classes/ActionDispatch/Session/MemCacheStore.html#method-c-new","(app, options = {})","",null,0],["new","ActionDispatch::ShowExceptions","rails/classes/ActionDispatch/ShowExceptions.html#method-c-new","(app, exceptions_app)","",null,0],["new","ActionDispatch::Static","rails/classes/ActionDispatch/Static.html#method-c-new","(app, path, index: \"index\", headers: {})","",null,0],["new","ActionMailbox::Base","rails/classes/ActionMailbox/Base.html#method-c-new","(inbound_email)","",null,0],["new","ActionMailbox::InboundEmail::Incineratable::Incineration","rails/classes/ActionMailbox/InboundEmail/Incineratable/Incineration.html#method-c-new","(inbound_email)","",null,0],["new","ActionMailbox::Ingresses::Mailgun::InboundEmailsController::Authenticator","rails/classes/ActionMailbox/Ingresses/Mailgun/InboundEmailsController/Authenticator.html#method-c-new","(key:, timestamp:, token:, signature:)","",null,0],["new","ActionMailbox::Ingresses::Mandrill::InboundEmailsController::Authenticator","rails/classes/ActionMailbox/Ingresses/Mandrill/InboundEmailsController/Authenticator.html#method-c-new","(request, key)","",null,0],["new","ActionMailbox::Relayer","rails/classes/ActionMailbox/Relayer.html#method-c-new","(url:, username: \"actionmailbox\", password:)","",null,0],["new","ActionMailbox::Router","rails/classes/ActionMailbox/Router.html#method-c-new","()","",null,0],["new","ActionMailbox::Router::Route","rails/classes/ActionMailbox/Router/Route.html#method-c-new","(address, to:)","",null,0],["new","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-new","()","",null,0],["new","ActionMailer::Collector","rails/classes/ActionMailer/Collector.html#method-c-new","(context, &block)","",null,0],["new","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-new","(params = {})","",null,0],["new","ActionText::Attachables::RemoteImage","rails/classes/ActionText/Attachables/RemoteImage.html#method-c-new","(attributes = {})","",null,0],["new","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-c-new","(node, attachable)","",null,0],["new","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-c-new","(node)","",null,0],["new","ActionText::Content","rails/classes/ActionText/Content.html#method-c-new","(content = nil, options = {})","",null,0],["new","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-c-new","(source)","",null,0],["new","ActionText::TrixAttachment","rails/classes/ActionText/TrixAttachment.html#method-c-new","(node)","",null,0],["new","ActionView::AbstractRenderer::RenderedCollection::EmptyCollection","rails/classes/ActionView/AbstractRenderer/RenderedCollection/EmptyCollection.html#method-c-new","(format)","",null,0],["new","ActionView::CacheExpiry::Executor","rails/classes/ActionView/CacheExpiry/Executor.html#method-c-new","(watcher:)","",null,0],["new","ActionView::CacheExpiry::ViewModificationWatcher","rails/classes/ActionView/CacheExpiry/ViewModificationWatcher.html#method-c-new","(watcher:, &block)","",null,0],["new","ActionView::Digestor::Node","rails/classes/ActionView/Digestor/Node.html#method-c-new","(name, logical_name, template, children = [])","",null,0],["new","ActionView::FileSystemResolver","rails/classes/ActionView/FileSystemResolver.html#method-c-new","(path)","",null,0],["new","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-c-new","(object_name, object, template, options)","",null,0],["new","ActionView::Helpers::NumberHelper::InvalidNumberError","rails/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html#method-c-new","(number)","",null,0],["new","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-c-new","()","",null,0],["new","ActionView::PartialIteration","rails/classes/ActionView/PartialIteration.html#method-c-new","(size)","",null,0],["new","ActionView::PartialRenderer","rails/classes/ActionView/PartialRenderer.html#method-c-new","(lookup_context, options)","",null,0],["new","ActionView::Renderer","rails/classes/ActionView/Renderer.html#method-c-new","(lookup_context)","",null,0],["new","ActionView::Rendering","rails/classes/ActionView/Rendering.html#method-c-new","()","",null,0],["new","ActionView::Template","rails/classes/ActionView/Template.html#method-c-new","(source, identifier, handler, locals:, format: nil, variant: nil, virtual_path: nil)","",null,0],["new","ActionView::Template::Sources::File","rails/classes/ActionView/Template/Sources/File.html#method-c-new","(filename)","",null,0],["new","ActionView::Template::Types::Type","rails/classes/ActionView/Template/Types/Type.html#method-c-new","(symbol)","",null,0],["new","ActionView::TemplateDetails::Requested","rails/classes/ActionView/TemplateDetails/Requested.html#method-c-new","(locale:, handlers:, formats:, variants:)","",null,0],["new","ActionView::TemplatePath","rails/classes/ActionView/TemplatePath.html#method-c-new","(name, prefix, partial, virtual)","",null,0],["new","ActionView::UnboundTemplate","rails/classes/ActionView/UnboundTemplate.html#method-c-new","(source, identifier, details:, virtual_path:)","",null,0],["new","ActiveJob::Core","rails/classes/ActiveJob/Core.html#method-c-new","(*arguments)","<p>Creates a new job instance. Takes the arguments that will be passed to the perform method.\n",null,0],["new","ActiveJob::QueueAdapters::AsyncAdapter","rails/classes/ActiveJob/QueueAdapters/AsyncAdapter.html#method-c-new","(**executor_options)","<p>See Concurrent::ThreadPoolExecutor for executor options.\n",null,0],["new","ActiveJob::QueueAdapters::SneakersAdapter","rails/classes/ActiveJob/QueueAdapters/SneakersAdapter.html#method-c-new","()","",null,0],["new","ActiveModel::API","rails/classes/ActiveModel/API.html#method-c-new","(attributes = {})","<p>Initializes a new model with the given <code>params</code>.\n\n<pre><code>class Person\n  include ActiveModel::API\n  attr_accessor ...\n</code></pre>\n",null,0],["new","ActiveModel::EachValidator","rails/classes/ActiveModel/EachValidator.html#method-c-new","(options)","<p>Returns a new validator instance. All options will be available via the <code>options</code> reader, however the  …\n",null,0],["new","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-c-new","(base, attribute, type = :invalid, **options)","",null,0],["new","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-c-new","(base)","<p>Pass in the instance of the object that is using the errors object.\n\n<pre><code>class Person\n  def initialize\n    ...\n</code></pre>\n",null,0],["new","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-c-new","(klass, namespace = nil, name = nil, locale = :en)","<p>Returns a new ActiveModel::Name instance. By default, the <code>namespace</code> and <code>name</code> option will take the namespace …\n",null,0],["new","ActiveModel::NestedError","rails/classes/ActiveModel/NestedError.html#method-c-new","(base, inner_error, override_options = {})","",null,0],["new","ActiveModel::SecurePassword::InstanceMethodsOnActivation","rails/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html#method-c-new","(attribute)","",null,0],["new","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-c-new","(precision: nil, limit: nil, scale: nil)","",null,0],["new","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-c-new","(precision: nil, limit: nil, scale: nil)","",null,0],["new","ActiveModel::UnknownAttributeError","rails/classes/ActiveModel/UnknownAttributeError.html#method-c-new","(record, attribute)","",null,0],["new","ActiveModel::UnknownAttributeError","rails/classes/ActiveModel/UnknownAttributeError.html#method-c-new","(record, attribute)","",null,0],["new","ActiveModel::ValidationError","rails/classes/ActiveModel/ValidationError.html#method-c-new","(model)","",null,0],["new","ActiveModel::Validations::AcceptanceValidator::LazilyDefineAttributes","rails/classes/ActiveModel/Validations/AcceptanceValidator/LazilyDefineAttributes.html#method-c-new","(attributes)","",null,0],["new","ActiveModel::Validator","rails/classes/ActiveModel/Validator.html#method-c-new","(options = {})","<p>Accepts options that will be made available through the <code>options</code> reader.\n",null,0],["new","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-new","(attributes = {}, &block)","",null,0],["new","ActiveRecord::Associations::Preloader::Association::LoaderQuery","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderQuery.html#method-c-new","(scope, association_key_name)","",null,0],["new","ActiveRecord::Associations::Preloader::Association::LoaderRecords","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderRecords.html#method-c-new","(loaders, loader_query)","",null,0],["new","ActiveRecord::AttributeAssignmentError","rails/classes/ActiveRecord/AttributeAssignmentError.html#method-c-new","(message = nil, exception = nil, attribute = nil)","",null,0],["new","ActiveRecord::AttributeMethods::Serialization::ColumnNotSerializableError","rails/classes/ActiveRecord/AttributeMethods/Serialization/ColumnNotSerializableError.html#method-c-new","(name, type)","",null,0],["new","ActiveRecord::ConnectionAdapters::AbstractAdapter::Version","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter/Version.html#method-c-new","(version_string, full_version_string = nil)","",null,0],["new","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-new","(connection, logger, connection_options, config)","",null,0],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-c-new","()","",null,0],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-c-new","(pool_config)","<p>Creates a new ConnectionPool object. <code>pool_config</code> is a PoolConfig object which describes database connection …\n",null,0],["new","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-c-new","(lock = Monitor.new)","",null,0],["new","ActiveRecord::ConnectionAdapters::ConnectionPool::Reaper","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Reaper.html#method-c-new","(pool, frequency)","",null,0],["new","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-c-new","()","",null,0],["new","ActiveRecord::ConnectionAdapters::Deduplicable::ClassMethods","rails/classes/ActiveRecord/ConnectionAdapters/Deduplicable/ClassMethods.html#method-i-new","(*, **)","",null,0],["new","ActiveRecord::ConnectionAdapters::MySQL::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/TableDefinition.html#method-c-new","(conn, name, charset: nil, collation: nil, **)","",null,0],["new","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-c-new","(connection, logger, connection_options, config)","",null,0],["new","ActiveRecord::ConnectionAdapters::PostgreSQL::AlterTable","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/AlterTable.html#method-c-new","(td)","",null,0],["new","ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Bit::Data","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/OID/Bit/Data.html#method-c-new","(value)","",null,0],["new","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting::IntegerOutOf64BitRange","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting/IntegerOutOf64BitRange.html#method-c-new","(msg)","",null,0],["new","ActiveRecord::ConnectionAdapters::PostgreSQL::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/TableDefinition.html#method-c-new","(*, **)","",null,0],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-new","(connection, logger, connection_parameters, config)","<p>Initializes and connects a PostgreSQL adapter.\n",null,0],["new","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-c-new","(*)","",null,0],["new","ActiveRecord::ConnectionAdapters::QueryCache::ConnectionPoolConfiguration","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache/ConnectionPoolConfiguration.html#method-c-new","(*)","",null,0],["new","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-c-new","(connection, logger, connection_options, config)","",null,0],["new","ActiveRecord::ConnectionAdapters::SavepointTransaction","rails/classes/ActiveRecord/ConnectionAdapters/SavepointTransaction.html#method-c-new","(connection, savepoint_name, parent_transaction, **options)","",null,0],["new","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-c-new","(conn)","",null,0],["new","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-c-new","(table_name, base)","",null,0],["new","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-c-new","( conn, name, temporary: false, if_not_exists: false, options: nil, as: nil, comment: nil, ** )","",null,0],["new","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-c-new","(state = nil)","",null,0],["new","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-c-new","(attributes = nil)","<p>New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes …\n",null,0],["new","ActiveRecord::DatabaseConfigurations","rails/classes/ActiveRecord/DatabaseConfigurations.html#method-c-new","(configurations = {})","",null,0],["new","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-c-new","(env_name, name, configuration_hash)","",null,0],["new","ActiveRecord::DatabaseConfigurations::UrlConfig","rails/classes/ActiveRecord/DatabaseConfigurations/UrlConfig.html#method-c-new","(env_name, name, url, configuration_hash = {})","",null,0],["new","ActiveRecord::DatabaseConnectionError","rails/classes/ActiveRecord/DatabaseConnectionError.html#method-c-new","(message = nil)","",null,0],["new","ActiveRecord::DynamicMatchers::Method","rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-new","(model, method_name)","",null,0],["new","ActiveRecord::EagerLoadPolymorphicError","rails/classes/ActiveRecord/EagerLoadPolymorphicError.html#method-c-new","(reflection = nil)","",null,0],["new","ActiveRecord::Encryption::Cipher::Aes256Gcm","rails/classes/ActiveRecord/Encryption/Cipher/Aes256Gcm.html#method-c-new","(secret, deterministic: false)","<p>When iv not provided, it will generate a random iv on each encryption operation (default and recommended …\n",null,0],["new","ActiveRecord::Encryption::Config","rails/classes/ActiveRecord/Encryption/Config.html#method-c-new","()","",null,0],["new","ActiveRecord::Encryption::Context","rails/classes/ActiveRecord/Encryption/Context.html#method-c-new","()","",null,0],["new","ActiveRecord::Encryption::DerivedSecretKeyProvider","rails/classes/ActiveRecord/Encryption/DerivedSecretKeyProvider.html#method-c-new","(passwords)","",null,0],["new","ActiveRecord::Encryption::DeterministicKeyProvider","rails/classes/ActiveRecord/Encryption/DeterministicKeyProvider.html#method-c-new","(password)","",null,0],["new","ActiveRecord::Encryption::EncryptedAttributeType","rails/classes/ActiveRecord/Encryption/EncryptedAttributeType.html#method-c-new","(scheme:, cast_type: ActiveModel::Type::String.new, previous_type: false)","<p>Options\n<p><code>:scheme</code> - A <code>Scheme</code> with the encryption properties for this attribute.\n<p><code>:cast_type</code> - A type that …\n",null,0],["new","ActiveRecord::Encryption::EncryptedFixtures","rails/classes/ActiveRecord/Encryption/EncryptedFixtures.html#method-c-new","(fixture, model_class)","",null,0],["new","ActiveRecord::Encryption::ExtendedDeterministicQueries::AdditionalValue","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/AdditionalValue.html#method-c-new","(value, type)","",null,0],["new","ActiveRecord::Encryption::Key","rails/classes/ActiveRecord/Encryption/Key.html#method-c-new","(secret)","",null,0],["new","ActiveRecord::Encryption::KeyProvider","rails/classes/ActiveRecord/Encryption/KeyProvider.html#method-c-new","(keys)","",null,0],["new","ActiveRecord::Encryption::Message","rails/classes/ActiveRecord/Encryption/Message.html#method-c-new","(payload: nil, headers: {})","",null,0],["new","ActiveRecord::Encryption::Properties","rails/classes/ActiveRecord/Encryption/Properties.html#method-c-new","(initial_properties = {})","",null,0],["new","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-c-new","(key_provider: nil, key: nil, deterministic: nil, downcase: nil, ignore_case: nil, previous_schemes: nil, **context_properties)","",null,0],["new","ActiveRecord::EnvironmentMismatchError","rails/classes/ActiveRecord/EnvironmentMismatchError.html#method-c-new","(current: nil, stored: nil)","",null,0],["new","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-new","(_, name, class_name, path, config = ActiveRecord::Base)","",null,0],["new","ActiveRecord::FixtureSet::ClassCache","rails/classes/ActiveRecord/FixtureSet/ClassCache.html#method-c-new","(class_names, config)","",null,0],["new","ActiveRecord::FutureResult::EventBuffer","rails/classes/ActiveRecord/FutureResult/EventBuffer.html#method-c-new","(future_result, instrumenter)","",null,0],["new","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-new","(attributes = nil, &block)","<p>Determines if one of the attributes passed in is the inheritance column, and if the inheritance column …\n",null,0],["new","ActiveRecord::Middleware::DatabaseSelector","rails/classes/ActiveRecord/Middleware/DatabaseSelector.html#method-c-new","(app, resolver_klass = nil, context_klass = nil, options = {})","",null,0],["new","ActiveRecord::Middleware::ShardSelector","rails/classes/ActiveRecord/Middleware/ShardSelector.html#method-c-new","(app, resolver, options = {})","",null,0],["new","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-c-new","(name = self.class.name, version = nil)","",null,0],["new","ActiveRecord::Migration::CheckPending","rails/classes/ActiveRecord/Migration/CheckPending.html#method-c-new","(app, file_watcher: ActiveSupport::FileUpdateChecker)","",null,0],["new","ActiveRecord::Migration::CommandRecorder","rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-c-new","(delegate = nil)","",null,0],["new","ActiveRecord::MigrationContext","rails/classes/ActiveRecord/MigrationContext.html#method-c-new","(migrations_paths, schema_migration = SchemaMigration)","",null,0],["new","ActiveRecord::MismatchedForeignKey","rails/classes/ActiveRecord/MismatchedForeignKey.html#method-c-new","( message: nil, sql: nil, binds: nil, table: nil, foreign_key: nil, target_table: nil, primary_key: nil, primary_key_column: nil )","",null,0],["new","ActiveRecord::MultiparameterAssignmentErrors","rails/classes/ActiveRecord/MultiparameterAssignmentErrors.html#method-c-new","(errors = nil)","",null,0],["new","ActiveRecord::NoDatabaseError","rails/classes/ActiveRecord/NoDatabaseError.html#method-c-new","(message = nil)","",null,0],["new","ActiveRecord::RecordInvalid","rails/classes/ActiveRecord/RecordInvalid.html#method-c-new","(record = nil)","",null,0],["new","ActiveRecord::RecordNotDestroyed","rails/classes/ActiveRecord/RecordNotDestroyed.html#method-c-new","(message = nil, record = nil)","",null,0],["new","ActiveRecord::RecordNotFound","rails/classes/ActiveRecord/RecordNotFound.html#method-c-new","(message = nil, model = nil, primary_key = nil, id = nil)","",null,0],["new","ActiveRecord::RecordNotSaved","rails/classes/ActiveRecord/RecordNotSaved.html#method-c-new","(message = nil, record = nil)","",null,0],["new","ActiveRecord::Reflection::MacroReflection","rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-c-new","(name, scope, options, active_record)","",null,0],["new","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-new","(attributes = nil, &block)","<p>Initializes new record from relation while maintaining the current scope.\n<p>Expects arguments in the same …\n",null,0],["new","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-c-new","(klass, table: klass.arel_table, predicate_builder: klass.predicate_builder, values: {})","",null,0],["new","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-c-new","(columns, rows, column_types = {})","",null,0],["new","ActiveRecord::SoleRecordExceeded","rails/classes/ActiveRecord/SoleRecordExceeded.html#method-c-new","(record = nil)","",null,0],["new","ActiveRecord::StaleObjectError","rails/classes/ActiveRecord/StaleObjectError.html#method-c-new","(record = nil, attempted_action = nil)","",null,0],["new","ActiveRecord::StatementCache::PartialQueryCollector","rails/classes/ActiveRecord/StatementCache/PartialQueryCollector.html#method-c-new","()","",null,0],["new","ActiveRecord::StatementInvalid","rails/classes/ActiveRecord/StatementInvalid.html#method-c-new","(message = nil, sql: nil, binds: nil)","",null,0],["new","ActiveRecord::UnknownPrimaryKey","rails/classes/ActiveRecord/UnknownPrimaryKey.html#method-c-new","(model = nil, description = nil)","",null,0],["new","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-c-new","(blob)","",null,0],["new","ActiveStorage::Attached","rails/classes/ActiveStorage/Attached.html#method-c-new","(name, record)","",null,0],["new","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-c-new","(filename)","",null,0],["new","ActiveStorage::Preview","rails/classes/ActiveStorage/Preview.html#method-c-new","(blob, variation_or_variation_key)","",null,0],["new","ActiveStorage::Previewer","rails/classes/ActiveStorage/Previewer.html#method-c-new","(blob)","",null,0],["new","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-c-new","(storage_account_name:, storage_access_key:, container:, public: false, **options)","",null,0],["new","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-c-new","(root:, public: false, **options)","",null,0],["new","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-c-new","(public: false, **config)","",null,0],["new","ActiveStorage::Service::MirrorService","rails/classes/ActiveStorage/Service/MirrorService.html#method-c-new","(primary:, mirrors:)","",null,0],["new","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-c-new","(bucket:, upload: {}, public: false, **options)","",null,0],["new","ActiveStorage::Transformers::Transformer","rails/classes/ActiveStorage/Transformers/Transformer.html#method-c-new","(transformations)","",null,0],["new","ActiveStorage::Variant","rails/classes/ActiveStorage/Variant.html#method-c-new","(blob, variation_or_variation_key)","",null,0],["new","ActiveStorage::VariantWithRecord","rails/classes/ActiveStorage/VariantWithRecord.html#method-c-new","(blob, variation)","",null,0],["new","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-c-new","(transformations)","",null,0],["new","ActiveSupport::BacktraceCleaner","rails/classes/ActiveSupport/BacktraceCleaner.html#method-c-new","()","",null,0],["new","ActiveSupport::Cache::FileStore","rails/classes/ActiveSupport/Cache/FileStore.html#method-c-new","(cache_path, **options)","",null,0],["new","ActiveSupport::Cache::MemCacheStore","rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-new","(*addresses)","<p>Creates a new MemCacheStore object, with the given memcached server addresses. Each address is either …\n",null,0],["new","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-c-new","(options = nil)","",null,0],["new","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-c-new","(namespace: nil, compress: true, compress_threshold: 1.kilobyte, coder: default_coder, expires_in: nil, race_condition_ttl: nil, error_handler: DEFAULT_ERROR_HANDLER, **redis_options)","<p>Creates a new Redis cache store.\n<p>Handles four options: :redis block, :redis instance, single :url string, …\n",null,0],["new","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-c-new","(options = nil)","<p>Creates a new cache.\n<p>Options\n<p><code>:namespace</code> - Sets the namespace for the cache. This option is especially useful …\n",null,0],["new","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-c-new","()","",null,0],["new","ActiveSupport::CachingKeyGenerator","rails/classes/ActiveSupport/CachingKeyGenerator.html#method-c-new","(key_generator)","",null,0],["new","ActiveSupport::Callbacks::CallTemplate::InstanceExec0","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec0.html#method-c-new","(block)","",null,0],["new","ActiveSupport::Callbacks::CallTemplate::InstanceExec1","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec1.html#method-c-new","(block)","",null,0],["new","ActiveSupport::Callbacks::CallTemplate::InstanceExec2","rails/classes/ActiveSupport/Callbacks/CallTemplate/InstanceExec2.html#method-c-new","(block)","",null,0],["new","ActiveSupport::Callbacks::CallTemplate::MethodCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/MethodCall.html#method-c-new","(method)","",null,0],["new","ActiveSupport::Callbacks::CallTemplate::ObjectCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ObjectCall.html#method-c-new","(target, method)","",null,0],["new","ActiveSupport::Callbacks::CallTemplate::ProcCall","rails/classes/ActiveSupport/Callbacks/CallTemplate/ProcCall.html#method-c-new","(target)","",null,0],["new","ActiveSupport::Callbacks::Conditionals::Value","rails/classes/ActiveSupport/Callbacks/Conditionals/Value.html#method-c-new","(&block)","",null,0],["new","ActiveSupport::CodeGenerator::MethodSet","rails/classes/ActiveSupport/CodeGenerator/MethodSet.html#method-c-new","(namespace)","",null,0],["new","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-c-new","()","",null,0],["new","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-c-new","()","",null,0],["new","ActiveSupport::Deprecation","rails/classes/ActiveSupport/Deprecation.html#method-c-new","(deprecation_horizon = \"7.1\", gem_name = \"Rails\")","<p>It accepts two parameters on initialization. The first is a version of library and the second is a library …\n",null,0],["new","ActiveSupport::Deprecation::DeprecatedConstantProxy","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html#method-c-new","(*args, **options, &block)","",null,0],["new","ActiveSupport::Deprecation::DeprecatedConstantProxy","rails/classes/ActiveSupport/Deprecation/DeprecatedConstantProxy.html#method-c-new","(old_const, new_const, deprecator = ActiveSupport::Deprecation.instance, message: \"#{old_const} is deprecated! Use #{new_const} instead.\")","",null,0],["new","ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy","rails/classes/ActiveSupport/Deprecation/DeprecatedInstanceVariableProxy.html#method-c-new","(instance, method, var = \"@#{method}\", deprecator = ActiveSupport::Deprecation.instance)","",null,0],["new","ActiveSupport::Deprecation::DeprecatedObjectProxy","rails/classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html#method-c-new","(object, message, deprecator = ActiveSupport::Deprecation.instance)","",null,0],["new","ActiveSupport::EncryptedConfiguration","rails/classes/ActiveSupport/EncryptedConfiguration.html#method-c-new","(config_path:, key_path:, env_key:, raise_if_missing_key:)","",null,0],["new","ActiveSupport::EncryptedFile","rails/classes/ActiveSupport/EncryptedFile.html#method-c-new","(content_path:, key_path:, env_key:, raise_if_missing_key:)","",null,0],["new","ActiveSupport::EncryptedFile::InvalidKeyLengthError","rails/classes/ActiveSupport/EncryptedFile/InvalidKeyLengthError.html#method-c-new","()","",null,0],["new","ActiveSupport::EncryptedFile::MissingContentError","rails/classes/ActiveSupport/EncryptedFile/MissingContentError.html#method-c-new","(content_path)","",null,0],["new","ActiveSupport::EncryptedFile::MissingKeyError","rails/classes/ActiveSupport/EncryptedFile/MissingKeyError.html#method-c-new","(key_path:, env_key:)","",null,0],["new","ActiveSupport::ErrorReporter","rails/classes/ActiveSupport/ErrorReporter.html#method-c-new","(*subscribers, logger: nil)","",null,0],["new","ActiveSupport::FileUpdateChecker","rails/classes/ActiveSupport/FileUpdateChecker.html#method-c-new","(files, dirs = {}, &block)","<p>It accepts two parameters on initialization. The first is an array of files and the second is an optional …\n",null,0],["new","ActiveSupport::Gzip::Stream","rails/classes/ActiveSupport/Gzip/Stream.html#method-c-new","(*)","",null,0],["new","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = nil)","",null,0],["new","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = nil)","",null,0],["new","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-c-new","()","",null,0],["new","ActiveSupport::Inflector::Inflections::Uncountables","rails/classes/ActiveSupport/Inflector/Inflections/Uncountables.html#method-c-new","()","",null,0],["new","ActiveSupport::InheritableOptions","rails/classes/ActiveSupport/InheritableOptions.html#method-c-new","(parent = nil)","",null,0],["new","ActiveSupport::KeyGenerator","rails/classes/ActiveSupport/KeyGenerator.html#method-c-new","(secret, options = {})","",null,0],["new","ActiveSupport::Logger","rails/classes/ActiveSupport/Logger.html#method-c-new","(*args, **kwargs)","",null,0],["new","ActiveSupport::MessageEncryptor","rails/classes/ActiveSupport/MessageEncryptor.html#method-c-new","(secret, sign_secret = nil, cipher: nil, digest: nil, serializer: nil)","<p>Initialize a new MessageEncryptor. <code>secret</code> must be at least as long as the cipher key size. For the default …\n",null,0],["new","ActiveSupport::MessageVerifier","rails/classes/ActiveSupport/MessageVerifier.html#method-c-new","(secret, digest: nil, serializer: nil)","",null,0],["new","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-c-new","(string)","<p>Creates a new Chars instance by wrapping <em>string</em>.\n",null,0],["new","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-c-new","(name, start, ending, transaction_id, payload)","",null,0],["new","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-c-new","()","",null,0],["new","ActiveSupport::Notifications::InstrumentationSubscriberError","rails/classes/ActiveSupport/Notifications/InstrumentationSubscriberError.html#method-c-new","(exceptions)","",null,0],["new","ActiveSupport::Notifications::Instrumenter","rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-c-new","(notifier)","",null,0],["new","ActiveSupport::ParameterFilter","rails/classes/ActiveSupport/ParameterFilter.html#method-c-new","(filters = [], mask: FILTERED)","<p>Create instance with given filters. Supported type of filters are <code>String</code>, <code>Regexp</code>, and <code>Proc</code>. Other types …\n",null,0],["new","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-c-new","()","",null,0],["new","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-c-new","(str = \"\")","",null,0],["new","ActiveSupport::SafeBuffer::SafeConcatError","rails/classes/ActiveSupport/SafeBuffer/SafeConcatError.html#method-c-new","()","",null,0],["new","ActiveSupport::SecureCompareRotator","rails/classes/ActiveSupport/SecureCompareRotator.html#method-c-new","(value, **_options)","",null,0],["new","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-c-new","()","",null,0],["new","ActiveSupport::TaggedLogging","rails/classes/ActiveSupport/TaggedLogging.html#method-c-new","(logger)","",null,0],["new","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-c-new","(utc_time, time_zone, local_time = nil, period = nil)","",null,0],["new","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-new","(name)","<p>Returns a TimeZone instance with the given name, or <code>nil</code> if no such TimeZone instance exists. (This exists …\n",null,0],["new","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-new","(name, utc_offset = nil, tzinfo = nil)","<p>Create a new TimeZone object with the given name and offset. The offset is the number of seconds that …\n",null,0],["new","ActiveSupport::XMLConverter::DisallowedType","rails/classes/ActiveSupport/XMLConverter/DisallowedType.html#method-c-new","(type)","",null,0],["new","Announcement::Version","rails/classes/Announcement/Version.html#method-c-new","(version)","",null,0],["new","CodeTools::Profiler","rails/classes/CodeTools/Profiler.html#method-c-new","(path, mode = nil)","",null,0],["new","Mime::AllType","rails/classes/Mime/AllType.html#method-c-new","()","",null,0],["new","Mime::Mimes","rails/classes/Mime/Mimes.html#method-c-new","()","",null,0],["new","Mime::Type","rails/classes/Mime/Type.html#method-c-new","(string, symbol = nil, synonyms = [])","",null,0],["new","Rails::API::Task","rails/classes/Rails/API/Task.html#method-c-new","(name)","",null,0],["new","Rails::Application","rails/classes/Rails/Application.html#method-c-new","(initial_variable_values = {}, &block)","",null,0],["new","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-c-new","(*)","",null,0],["new","Rails::Application::DefaultMiddlewareStack","rails/classes/Rails/Application/DefaultMiddlewareStack.html#method-c-new","(app, config, paths)","",null,0],["new","Rails::Application::RoutesReloader","rails/classes/Rails/Application/RoutesReloader.html#method-c-new","()","",null,0],["new","Rails::BacktraceCleaner","rails/classes/Rails/BacktraceCleaner.html#method-c-new","()","",null,0],["new","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-c-new","(operations = [], delete_operations = [])","",null,0],["new","Rails::Console","rails/classes/Rails/Console.html#method-c-new","(app, options = {})","",null,0],["new","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-c-new","(options = {})","",null,0],["new","Rails::Engine","rails/classes/Rails/Engine.html#method-c-new","()","",null,0],["new","Rails::Engine::Configuration","rails/classes/Rails/Engine/Configuration.html#method-c-new","(root = nil)","",null,0],["new","Rails::Engine::Railties","rails/classes/Rails/Engine/Railties.html#method-c-new","()","",null,0],["new","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-c-new","(name)","",null,0],["new","Rails::Generators::AppBase::GemfileEntry","rails/classes/Rails/Generators/AppBase/GemfileEntry.html#method-c-new","(name, version, comment, options = {}, commented_out = false)","",null,0],["new","Rails::Initializable::Initializer","rails/classes/Rails/Initializable/Initializer.html#method-c-new","(name, context, options, &block)","",null,0],["new","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-c-new","(root, current, paths, options = {})","",null,0],["new","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-c-new","(path)","",null,0],["new","Rails::Rack::Logger","rails/classes/Rails/Rack/Logger.html#method-c-new","(app, taggers = nil)","",null,0],["new","Rails::Rails::Conductor::ActionMailbox::InboundEmails::SourcesController","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmails/SourcesController.html#method-i-new","()","",null,0],["new","Rails::Rails::Conductor::ActionMailbox::InboundEmailsController","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmailsController.html#method-i-new","()","",null,0],["new","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-c-new","()","",null,0],["new","Rails::Secrets::MissingKeyError","rails/classes/Rails/Secrets/MissingKeyError.html#method-c-new","()","",null,0],["new","Rails::Server","rails/classes/Rails/Server.html#method-c-new","(options = nil)","",null,0],["new","Rails::SourceAnnotationExtractor","rails/classes/Rails/SourceAnnotationExtractor.html#method-c-new","(tag)","",null,0],["new","ACL","ruby/classes/ACL.html#method-c-new","(list=nil, order = DENY_ALLOW)","<p>Creates a new ACL from <code>list</code> with an evaluation <code>order</code> of DENY_ALLOW or ALLOW_DENY.\n<p>An ACL <code>list</code> is an Array …\n",null,1],["new","ACL::ACLEntry","ruby/classes/ACL/ACLEntry.html#method-c-new","(str)","<p>Creates a new entry using <code>str</code>.\n<p><code>str</code> may be “*” or “all” to match any address, an IP …\n",null,1],["new","ACL::ACLList","ruby/classes/ACL/ACLList.html#method-c-new","()","<p>Creates an empty ACLList\n",null,1],["new","Addrinfo","ruby/classes/Addrinfo.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>returns a new instance of Addrinfo. The instance contains sockaddr, family, socktype, protocol. sockaddr …\n",null,1],["new","Array","ruby/classes/Array.html#method-c-new","(p1 = v1, p2 = v2)","<p>Returns a new Array.\n<p>With no block and no arguments, returns a new empty Array object.\n<p>With no block and …\n",null,1],["new","BasicObject","ruby/classes/BasicObject.html#method-c-new","()","<p>Returns a new BasicObject.\n",null,1],["new","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-c-new","(utime = 0.0, stime = 0.0, cutime = 0.0, cstime = 0.0, real = 0.0, label = nil)","<p>Returns an initialized Tms object which has <code>utime</code> as the user CPU time, <code>stime</code> as the system CPU time, …\n",null,1],["new","CGI","ruby/classes/CGI.html#method-c-new","(options = {})","<p>Create a new CGI instance.\n<p><code>tag_maker</code> &mdash; This is the same as using the <code>options_hash</code> form with the value <code>{</code> …\n",null,1],["new","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-c-new","(name = \"\", *value)","<p>Create a new CGI::Cookie object.\n<p><code>name_string</code> &mdash; The name of the cookie; in this form, there is no #domain …\n",null,1],["new","CGI::Session","ruby/classes/CGI/Session.html#method-c-new","(request, option={})","<p>Create a new CGI::Session object for <code>request</code>.\n<p><code>request</code> is an instance of the <code>CGI</code> class (see cgi.rb). <code>option</code> …\n",null,1],["new","CGI::Session::FileStore","ruby/classes/CGI/Session/FileStore.html#method-c-new","(session, option={})","<p>Create a new FileStore instance.\n<p>This constructor is used internally by CGI::Session.  The user does not …\n",null,1],["new","CGI::Session::MemoryStore","ruby/classes/CGI/Session/MemoryStore.html#method-c-new","(session, option=nil)","<p>Create a new MemoryStore instance.\n<p><code>session</code> is the session this instance is associated with. <code>option</code> is …\n",null,1],["new","CGI::Session::NullStore","ruby/classes/CGI/Session/NullStore.html#method-c-new","(session, option=nil)","<p>Create a new NullStore instance.\n<p><code>session</code> is the session this instance is associated with. <code>option</code> is a …\n",null,1],["new","CGI::Session::PStore","ruby/classes/CGI/Session/PStore.html#method-c-new","(session, option={})","<p>Create a new CGI::Session::PStore instance\n<p>This constructor is used internally by CGI::Session.  The user …\n",null,1],["new","CSV","ruby/classes/CSV.html#method-c-new","(data, col_sep: \",\", row_sep: :auto, quote_char: '\"', field_size_limit: nil, max_field_size: nil, converters: nil, unconverted_fields: nil, headers: false, return_headers: false, write_headers: nil, header_converters: nil, skip_blanks: false, force_quotes: false, skip_lines: nil, liberal_parsing: false, internal_encoding: nil, external_encoding: nil, encoding: nil, nil_value: nil, empty_value: \"\", strip: false, quote_empty: true, write_converters: nil, write_nil_value: nil, write_empty_value: \"\")","<p>Returns the new CSV object created using <code>string</code> or <code>io</code> and the specified <code>options</code>.\n<p>Argument <code>string</code> should …\n",null,1],["new","CSV::FieldsConverter","ruby/classes/CSV/FieldsConverter.html#method-c-new","(options={})","<p>A CSV::FieldsConverter is a data structure for storing the fields converter properties to be passed as …\n",null,1],["new","CSV::InvalidEncodingError","ruby/classes/CSV/InvalidEncodingError.html#method-c-new","(encoding, line_number)","",null,1],["new","CSV::MalformedCSVError","ruby/classes/CSV/MalformedCSVError.html#method-c-new","(message, line_number)","",null,1],["new","CSV::Parser","ruby/classes/CSV/Parser.html#method-c-new","(input, options)","",null,1],["new","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-c-new","(inputs, encoding, row_separator, chunk_size: 8192)","",null,1],["new","CSV::Parser::Scanner","ruby/classes/CSV/Parser/Scanner.html#method-c-new","(*args)","",null,1],["new","CSV::Row","ruby/classes/CSV/Row.html#method-c-new","(headers, fields, header_row = false)","<p>Returns the new CSV::Row instance constructed from arguments <code>headers</code> and <code>fields</code>; both should be Arrays …\n",null,1],["new","CSV::Table","ruby/classes/CSV/Table.html#method-c-new","(array_of_rows, headers: nil)","<p>Returns a new CSV::Table object.\n<p>Argument <code>array_of_rows</code> must be an Array of CSV::Row objects.\n<p>Argument …\n",null,1],["new","CSV::Writer","ruby/classes/CSV/Writer.html#method-c-new","(output, options)","",null,1],["new","Class","ruby/classes/Class.html#method-i-new","(*args)","<p>Calls #allocate to create a new object of <em>class</em>’s class, then invokes that object’s #initialize …\n",null,1],["new","Class","ruby/classes/Class.html#method-c-new","(*args)","<p>Creates a new anonymous (unnamed) class with the given superclass (or Object if no parameter is given). …\n",null,1],["new","CoreExtensions::TCPSocketExt::Initializer","ruby/classes/CoreExtensions/TCPSocketExt/Initializer.html#method-c-new","(host, serv, *rest)","",null,1],["new","DRb::DRbArray","ruby/classes/DRb/DRbArray.html#method-c-new","(ary)","<p>Creates a new DRbArray that either dumps or wraps all the items in the Array <code>ary</code> so they can be loaded …\n",null,1],["new","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-new","(obj, uri=nil)","<p>Create a new remote object stub.\n<p><code>obj</code> is the (local) object we want to create a stub for.  Normally this …\n",null,1],["new","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-new","(obj, uri=nil)","<p>Create a new remote object stub.\n<p><code>obj</code> is the (local) object we want to create a stub for.  Normally this …\n",null,1],["new","DRb::DRbRemoteError","ruby/classes/DRb/DRbRemoteError.html#method-c-new","(error)","<p>Creates a new remote error that wraps the Exception <code>error</code>\n",null,1],["new","DRb::DRbSSLSocket","ruby/classes/DRb/DRbSSLSocket.html#method-c-new","(uri, soc, config, is_established)","<p>Create a DRb::DRbSSLSocket instance.\n<p><code>uri</code> is the URI we are connected to. <code>soc</code> is the tcp socket we are …\n",null,1],["new","DRb::DRbSSLSocket::SSLConfig","ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-c-new","(config)","<p>Create a new DRb::DRbSSLSocket::SSLConfig instance\n<p>The DRb::DRbSSLSocket will take either a <code>config</code> Hash …\n",null,1],["new","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-c-new","(uri=nil, front=nil, config_or_acl=nil)","<p>Create a new DRbServer instance.\n<p><code>uri</code> is the URI to bind to.  This is normally of the form ‘druby://&lt;hostname&gt;:&lt;port&gt;’ …\n",null,1],["new","DRb::DRbUnknown","ruby/classes/DRb/DRbUnknown.html#method-c-new","(err, buf)","<p>Create a new DRbUnknown object.\n<p><code>buf</code> is a string containing a marshalled object that could not be unmarshalled. …\n",null,1],["new","DRb::DRbUnknownError","ruby/classes/DRb/DRbUnknownError.html#method-c-new","(unknown)","<p>Create a new DRbUnknownError for the DRb::DRbUnknown object <code>unknown</code>\n",null,1],["new","DRb::ExtServ","ruby/classes/DRb/ExtServ.html#method-c-new","(there, name, server=nil)","",null,1],["new","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-c-new","()","",null,1],["new","DRb::GW","ruby/classes/DRb/GW.html#method-c-new","()","<p>Creates a new GW\n",null,1],["new","DRb::ThreadObject","ruby/classes/DRb/ThreadObject.html#method-c-new","(&blk)","",null,1],["new","DRb::TimerIdConv","ruby/classes/DRb/TimerIdConv.html#method-c-new","(keeping=600)","<p>Creates a new TimerIdConv which will hold objects for <code>keeping</code> seconds.\n",null,1],["new","DRb::WeakIdConv","ruby/classes/DRb/WeakIdConv.html#method-c-new","()","",null,1],["new","DRb::WeakIdConv::WeakSet","ruby/classes/DRb/WeakIdConv/WeakSet.html#method-c-new","()","",null,1],["new","Data","ruby/classes/Data.html#method-c-new","(*args)","<p>Constructors for classes defined with ::define accept both positional and keyword arguments.\n\n<pre><code>Measure = ...\n</code></pre>\n",null,1],["new","Date","ruby/classes/Date.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Returns a new Date object constructed from the given arguments:\n\n<pre><code>Date.new(2022).to_s        # =&gt; &quot;2022-01-01&quot; ...\n</code></pre>\n",null,1],["new","DateTime","ruby/classes/DateTime.html#method-c-new","(*args)","<p>Same as DateTime.new.\n",null,1],["new","Delegator","ruby/classes/Delegator.html#method-c-new","(obj)","<p>Pass in the <em>obj</em> to delegate method calls to.  All methods supported by <em>obj</em> will be delegated to.\n",null,1],["new","DidYouMean::ClassNameChecker","ruby/classes/DidYouMean/ClassNameChecker.html#method-c-new","(exception)","",null,1],["new","DidYouMean::ClassNameChecker::ClassName","ruby/classes/DidYouMean/ClassNameChecker/ClassName.html#method-c-new","(name, namespace = '')","",null,1],["new","DidYouMean::KeyErrorChecker","ruby/classes/DidYouMean/KeyErrorChecker.html#method-c-new","(key_error)","",null,1],["new","DidYouMean::MethodNameChecker","ruby/classes/DidYouMean/MethodNameChecker.html#method-c-new","(exception)","",null,1],["new","DidYouMean::NullChecker","ruby/classes/DidYouMean/NullChecker.html#method-c-new","(*)","",null,1],["new","DidYouMean::PatternKeyNameChecker","ruby/classes/DidYouMean/PatternKeyNameChecker.html#method-c-new","(no_matching_pattern_key_error)","",null,1],["new","DidYouMean::RequirePathChecker","ruby/classes/DidYouMean/RequirePathChecker.html#method-c-new","(exception)","",null,1],["new","DidYouMean::SpellChecker","ruby/classes/DidYouMean/SpellChecker.html#method-c-new","(dictionary:)","",null,1],["new","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-c-new","(dictionary:, separator: '/', augment: nil)","",null,1],["new","DidYouMean::VariableNameChecker","ruby/classes/DidYouMean/VariableNameChecker.html#method-c-new","(exception)","",null,1],["new","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-new","()","<p>Returns a new, initialized copy of the digest object.  Equivalent to digest_obj.clone().reset().\n",null,1],["new","Digest::SHA2","ruby/classes/Digest/SHA2.html#method-c-new","(bitlen = 256)","<p>Create a new SHA2 hash object with a given bit length.\n<p>Valid bit lengths are 256, 384 and 512.\n",null,1],["new","Dir","ruby/classes/Dir.html#method-c-new","(name, encoding: nil)","<p>Returns a new Dir object for the directory at <code>dirpath</code>:\n\n<pre><code>Dir.new(&#39;.&#39;) # =&gt; #&lt;Dir:.&gt;\n</code></pre>\n<p>The value given with …\n",null,1],["new","ERB","ruby/classes/ERB.html#method-c-new","(str, safe_level=NOT_GIVEN, legacy_trim_mode=NOT_GIVEN, legacy_eoutvar=NOT_GIVEN, trim_mode: nil, eoutvar: '_erbout')","<p>Constructs a new ERB object with the template specified in <em>str</em>.\n<p>An ERB object works by building a chunk …\n",null,1],["new","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-c-new","(*args)","<p>possible options elements:\n\n<pre><code>hash form:\n  :invalid =&gt; nil            # raise error on invalid byte sequence ...\n</code></pre>\n",null,1],["new","Enumerator","ruby/classes/Enumerator.html#method-c-new","(*args)","<p>Creates a new Enumerator object, which can be used as an Enumerable.\n<p>Iteration is defined by the given …\n",null,1],["new","Enumerator::Chain","ruby/classes/Enumerator/Chain.html#method-c-new","(*args)","<p>Generates a new enumerator object that iterates over the elements of given enumerable objects in sequence. …\n",null,1],["new","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-c-new","(*args)","<p>Creates a new Lazy enumerator. When the enumerator is actually enumerated (e.g. by calling #force),  …\n",null,1],["new","Enumerator::Product","ruby/classes/Enumerator/Product.html#method-c-new","(*args, p2 = {})","<p>Generates a new enumerator object that generates a Cartesian product of given enumerable objects.\n\n<pre><code>e = ...\n</code></pre>\n",null,1],["new","ErrorHighlight::Spotter","ruby/classes/ErrorHighlight/Spotter.html#method-c-new","(node, point_type: :name, name: nil)","",null,1],["new","Exception","ruby/classes/Exception.html#method-c-new","(*args)","<p>Construct a new Exception object, optionally passing in a message.\n",null,1],["new","Fiber","ruby/classes/Fiber.html#method-c-new","(*args)","<p>Creates new Fiber. Initially, the fiber is not running and can be resumed with #resume. Arguments to …\n",null,1],["new","Fiber::Pool","ruby/classes/Fiber/Pool.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3)","",null,1],["new","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-c-new","(addr, types, func = nil)","<p>Wraps the C pointer <code>addr</code> as a C struct with the given <code>types</code>.\n<p>When the instance is garbage collected, the …\n",null,1],["new","Fiddle::Closure","ruby/classes/Fiddle/Closure.html#method-c-new","(*args)","<p>Construct a new Closure object.\n<p><code>ret</code> is the C type to be returned\n<p><code>args</code> is an Array of arguments, passed …\n",null,1],["new","Fiddle::Closure::BlockCaller","ruby/classes/Fiddle/Closure/BlockCaller.html#method-c-new","(ctype, args, abi = Fiddle::Function::DEFAULT, &block)","<p>Description\n<p>Construct a new BlockCaller object.\n<p><code>ctype</code> is the C type to be returned\n",null,1],["new","Fiddle::CompositeHandler","ruby/classes/Fiddle/CompositeHandler.html#method-c-new","(handlers)","<p>Create a new handler with the open <code>handlers</code>\n<p>Used internally by Fiddle::Importer.dlload\n",null,1],["new","Fiddle::Function","ruby/classes/Fiddle/Function.html#method-c-new","(p1, p2, p3, p4 = v4, p5 = {})","<p>Constructs a Function object.\n<p><code>ptr</code> is a referenced function, of a Fiddle::Handle\n<p><code>args</code> is an Array of arguments, …\n",null,1],["new","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-c-new","(p1 = v1, p2 = v2)","<p>Create a new handler that opens <code>library</code> with <code>flags</code>.\n<p>If no <code>library</code> is specified or <code>nil</code> is given, DEFAULT …\n",null,1],["new","Fiddle::Pinned","ruby/classes/Fiddle/Pinned.html#method-c-new","(p1)","<p>Create a new pinned object reference.  The Fiddle::Pinned instance will prevent the GC from moving <code>object</code> …\n",null,1],["new","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Create a new pointer to <code>address</code> with an optional <code>size</code> and <code>freefunc</code>.\n<p><code>freefunc</code> will be called when the instance …\n",null,1],["new","Fiddle::StructArray","ruby/classes/Fiddle/StructArray.html#method-c-new","(ptr, type, initial_values)","",null,1],["new","File","ruby/classes/File.html#method-c-new","(*args)","<p>Opens the file at the given <code>path</code> according to the given <code>mode</code>; creates and returns a new File object for …\n",null,1],["new","File::Stat","ruby/classes/File/Stat.html#method-c-new","(p1)","<p>Create a File::Stat object for the given file name (raising an exception if the file doesn’t exist). …\n",null,1],["new","FrozenError","ruby/classes/FrozenError.html#method-c-new","(*args, p2 = {})","<p>Construct a new FrozenError exception. If given the <em>receiver</em> parameter may subsequently be examined using …\n",null,1],["new","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-c-new","()","",null,1],["new","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-c-new","()","",null,1],["new","Gem::Command","ruby/classes/Gem/Command.html#method-c-new","(command, summary=nil, defaults={})","<p>Initializes a generic gem command named <code>command</code>.  <code>summary</code> is a short description displayed in ‘gem help …\n",null,1],["new","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-c-new","()","<p>Register all the subcommands supported by the gem command.\n",null,1],["new","Gem::Commands::BuildCommand","ruby/classes/Gem/Commands/BuildCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::CheckCommand","ruby/classes/Gem/Commands/CheckCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::CleanupCommand","ruby/classes/Gem/Commands/CleanupCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::DependencyCommand","ruby/classes/Gem/Commands/DependencyCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::EnvironmentCommand","ruby/classes/Gem/Commands/EnvironmentCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::ExecCommand","ruby/classes/Gem/Commands/ExecCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::FetchCommand","ruby/classes/Gem/Commands/FetchCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::GenerateIndexCommand","ruby/classes/Gem/Commands/GenerateIndexCommand.html#method-c-new","()","<p>remove_method(:initialize) warns, but removing new does not warn\n",null,1],["new","Gem::Commands::HelpCommand","ruby/classes/Gem/Commands/HelpCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::InfoCommand","ruby/classes/Gem/Commands/InfoCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::InstallCommand","ruby/classes/Gem/Commands/InstallCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::ListCommand","ruby/classes/Gem/Commands/ListCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::LockCommand","ruby/classes/Gem/Commands/LockCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::MirrorCommand","ruby/classes/Gem/Commands/MirrorCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::OpenCommand","ruby/classes/Gem/Commands/OpenCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::OutdatedCommand","ruby/classes/Gem/Commands/OutdatedCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::OwnerCommand","ruby/classes/Gem/Commands/OwnerCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::PristineCommand","ruby/classes/Gem/Commands/PristineCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::PushCommand","ruby/classes/Gem/Commands/PushCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::QueryCommand","ruby/classes/Gem/Commands/QueryCommand.html#method-c-new","(name = \"query\", summary = \"Query gem information in local or remote repositories\")","",null,1],["new","Gem::Commands::RdocCommand","ruby/classes/Gem/Commands/RdocCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::RebuildCommand","ruby/classes/Gem/Commands/RebuildCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SearchCommand","ruby/classes/Gem/Commands/SearchCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::ServerCommand","ruby/classes/Gem/Commands/ServerCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SigninCommand","ruby/classes/Gem/Commands/SigninCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SignoutCommand","ruby/classes/Gem/Commands/SignoutCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SourcesCommand","ruby/classes/Gem/Commands/SourcesCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::SpecificationCommand","ruby/classes/Gem/Commands/SpecificationCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::StaleCommand","ruby/classes/Gem/Commands/StaleCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::UninstallCommand","ruby/classes/Gem/Commands/UninstallCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::UnpackCommand","ruby/classes/Gem/Commands/UnpackCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::WhichCommand","ruby/classes/Gem/Commands/WhichCommand.html#method-c-new","()","",null,1],["new","Gem::Commands::YankCommand","ruby/classes/Gem/Commands/YankCommand.html#method-c-new","()","",null,1],["new","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-c-new","(args)","<p>Create the config file object.  <code>args</code> is the list of arguments from the command line.\n<p>The following command …\n",null,1],["new","Gem::ConflictError","ruby/classes/Gem/ConflictError.html#method-c-new","(target, conflicts)","",null,1],["new","Gem::ConsoleUI","ruby/classes/Gem/ConsoleUI.html#method-c-new","()","<p>The Console UI has no arguments as it defaults to reading input from stdin, output to stdout and warnings …\n",null,1],["new","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-c-new","(name, *requirements)","<p>Constructs a dependency with <code>name</code> and <code>requirements</code>. The last argument can optionally be the dependency …\n",null,1],["new","Gem::DependencyInstaller","ruby/classes/Gem/DependencyInstaller.html#method-c-new","(options = {})","<p>Creates a new installer instance.\n<p>Options are:\n<p>:cache_dir &mdash; Alternate repository path to store .gem files …\n",null,1],["new","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-c-new","(development = false)","<p>Creates a new DependencyList.  If <code>development</code> is true, development dependencies will be included.\n",null,1],["new","Gem::DependencyResolutionError","ruby/classes/Gem/DependencyResolutionError.html#method-c-new","(conflict)","",null,1],["new","Gem::Doctor","ruby/classes/Gem/Doctor.html#method-c-new","(gem_repository, dry_run = false)","<p>Creates a new Gem::Doctor that will clean up <code>gem_repository</code>.  Only one gem repository may be cleaned …\n",null,1],["new","Gem::Ext::Builder","ruby/classes/Gem/Ext/Builder.html#method-c-new","(spec, build_args = spec.build_args)","<p>Creates a new extension builder for <code>spec</code>.  If the <code>spec</code> does not yet have build arguments, saved, set …\n",null,1],["new","Gem::Ext::CargoBuilder","ruby/classes/Gem/Ext/CargoBuilder.html#method-c-new","()","",null,1],["new","Gem::Ext::CargoBuilder::DylibNotFoundError","ruby/classes/Gem/Ext/CargoBuilder/DylibNotFoundError.html#method-c-new","(dir)","",null,1],["new","Gem::FilePermissionError","ruby/classes/Gem/FilePermissionError.html#method-c-new","(directory)","",null,1],["new","Gem::GemRunner","ruby/classes/Gem/GemRunner.html#method-c-new","()","",null,1],["new","Gem::GemcutterUtilities::WebauthnListener","ruby/classes/Gem/GemcutterUtilities/WebauthnListener.html#method-c-new","(host)","",null,1],["new","Gem::GemcutterUtilities::WebauthnListener::Response","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/Response.html#method-c-new","(host)","",null,1],["new","Gem::GemcutterUtilities::WebauthnListener::SocketResponder","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/SocketResponder.html#method-c-new","(socket)","",null,1],["new","Gem::GemcutterUtilities::WebauthnPoller","ruby/classes/Gem/GemcutterUtilities/WebauthnPoller.html#method-c-new","(options, host)","",null,1],["new","Gem::ImpossibleDependenciesError","ruby/classes/Gem/ImpossibleDependenciesError.html#method-c-new","(request, conflicts)","",null,1],["new","Gem::Installer","ruby/classes/Gem/Installer.html#method-c-new","(package, options={})","<p>Constructs an Installer instance that will install the gem at <code>package</code> which can either be a path or an …\n",null,1],["new","Gem::Installer::FakePackage","ruby/classes/Gem/Installer/FakePackage.html#method-c-new","(spec)","",null,1],["new","Gem::MissingSpecError","ruby/classes/Gem/MissingSpecError.html#method-c-new","(name, requirement, extra_message=nil)","",null,1],["new","Gem::MissingSpecVersionError","ruby/classes/Gem/MissingSpecVersionError.html#method-c-new","(name, requirement, specs)","",null,1],["new","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-c-new","(name, version, platform=Gem::Platform::RUBY)","",null,1],["new","Gem::Package","ruby/classes/Gem/Package.html#method-c-new","(gem, security_policy = nil)","<p>Creates a new Gem::Package for the file at <code>gem</code>. <code>gem</code> can also be provided as an IO object.\n<p>If <code>gem</code> is an …\n",null,1],["new","Gem::Package::DigestIO","ruby/classes/Gem/Package/DigestIO.html#method-c-new","(io, digests)","<p>Creates a new DigestIO instance.  Using ::wrap is recommended, see the ::wrap documentation for documentation …\n",null,1],["new","Gem::Package::FormatError","ruby/classes/Gem/Package/FormatError.html#method-c-new","(message, source = nil)","",null,1],["new","Gem::Package::Old","ruby/classes/Gem/Package/Old.html#method-c-new","(gem, security_policy)","<p>Creates a new old-format package reader for <code>gem</code>.  Old-format packages cannot be written.\n",null,1],["new","Gem::Package::PathError","ruby/classes/Gem/Package/PathError.html#method-c-new","(destination, destination_dir)","",null,1],["new","Gem::Package::SymlinkError","ruby/classes/Gem/Package/SymlinkError.html#method-c-new","(name, destination, destination_dir)","",null,1],["new","Gem::Package::TarHeader","ruby/classes/Gem/Package/TarHeader.html#method-c-new","(vals)","<p>Creates a new TarHeader using <code>vals</code>\n",null,1],["new","Gem::Package::TarReader","ruby/classes/Gem/Package/TarReader.html#method-c-new","(io)","<p>Creates a new tar file reader on <code>io</code> which needs to respond to #pos, #eof?, #read, #getc and #pos=\n",null,1],["new","Gem::Package::TarReader","ruby/classes/Gem/Package/TarReader.html#method-c-new","(io)","<p>Creates a new TarReader on <code>io</code> and yields it to the block, if given.\n",null,1],["new","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-c-new","(header, io)","<p>Creates a new tar entry for <code>header</code> that will be read from <code>io</code>\n",null,1],["new","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-c-new","(io)","<p>Creates a new TarWriter that will write to <code>io</code>\n",null,1],["new","Gem::Package::TarWriter","ruby/classes/Gem/Package/TarWriter.html#method-c-new","(io)","<p>Creates a new TarWriter, yielding it if a block is given\n",null,1],["new","Gem::Package::TarWriter::BoundedStream","ruby/classes/Gem/Package/TarWriter/BoundedStream.html#method-c-new","(io, limit)","<p>Wraps <code>io</code> and allows up to <code>limit</code> bytes to be written\n",null,1],["new","Gem::Package::TarWriter::RestrictedStream","ruby/classes/Gem/Package/TarWriter/RestrictedStream.html#method-c-new","(io)","<p>Creates a new RestrictedStream wrapping <code>io</code>\n",null,1],["new","Gem::PackageTask","ruby/classes/Gem/PackageTask.html#method-c-new","(gem_spec)","<p>Create a Gem Package task library.  Automatically define the gem if a block is given.  If no block is …\n",null,1],["new","Gem::PathSupport","ruby/classes/Gem/PathSupport.html#method-c-new","(env)","<p>Constructor. Takes a single argument which is to be treated like a hashtable, or defaults to ENV, the …\n",null,1],["new","Gem::Platform","ruby/classes/Gem/Platform.html#method-c-new","(arch)","",null,1],["new","Gem::PlatformMismatch","ruby/classes/Gem/PlatformMismatch.html#method-c-new","(name, version)","",null,1],["new","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-c-new","(proxy=nil, dns=nil, headers={})","<p>Initialize a remote fetcher using the source URI and possible proxy information.\n<p><code>proxy</code>\n<p>[String]: explicit …\n",null,1],["new","Gem::RemoteFetcher::FetchError","ruby/classes/Gem/RemoteFetcher/FetchError.html#method-c-new","(message, uri)","",null,1],["new","Gem::Request","ruby/classes/Gem/Request.html#method-c-new","(uri, request_class, last_modified, pool)","",null,1],["new","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-c-new","(*deps)","<p>Creates a RequestSet for a list of Gem::Dependency objects, <code>deps</code>.  You can then #resolve and #install …\n",null,1],["new","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-c-new","(set, path)","<p>Creates a new GemDependencyAPI that will add dependencies to the Gem::RequestSet <code>set</code> based on the dependency …\n",null,1],["new","Gem::RequestSet::Lockfile","ruby/classes/Gem/RequestSet/Lockfile.html#method-c-new","(request_set, gem_deps_file, dependencies)","",null,1],["new","Gem::RequestSet::Lockfile::ParseError","ruby/classes/Gem/RequestSet/Lockfile/ParseError.html#method-c-new","(message, column, line, path)","<p>Raises a ParseError with the given <code>message</code> which was encountered at a <code>line</code> and <code>column</code> while parsing. …\n",null,1],["new","Gem::RequestSet::Lockfile::Parser","ruby/classes/Gem/RequestSet/Lockfile/Parser.html#method-c-new","(tokenizer, set, platforms, filename = nil)","<p>Parses lockfiles\n",null,1],["new","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-c-new","(input, filename = nil, line = 0, pos = 0)","",null,1],["new","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-c-new","(*requirements)","<p>Constructs a requirement from <code>requirements</code>. Requirements can be Strings, Gem::Versions, or Arrays of …\n",null,1],["new","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-c-new","(needed, set = nil)","<p>Create Resolver object which will resolve the tree starting with <code>needed</code> Dependency objects.\n<p><code>set</code> is an …\n",null,1],["new","Gem::Resolver::APISet","ruby/classes/Gem/Resolver/APISet.html#method-c-new","(dep_uri = \"https://index.rubygems.org/info/\")","<p>Creates a new APISet that will retrieve gems from <code>uri</code> using the RubyGems API URL <code>dep_uri</code> which is described …\n",null,1],["new","Gem::Resolver::APISpecification","ruby/classes/Gem/Resolver/APISpecification.html#method-c-new","(set, api_data)","<p>Creates an APISpecification for the given <code>set</code> from the rubygems.org <code>api_data</code>.\n<p>See guides.rubygems.org/rubygems-org-api/#misc-methods …\n",null,1],["new","Gem::Resolver::APISpecification","ruby/classes/Gem/Resolver/APISpecification.html#method-c-new","(set, api_data)","",null,1],["new","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-c-new","(spec, request)","<p>Creates a new ActivationRequest that will activate <code>spec</code>.  The parent <code>request</code> is used to provide diagnostics …\n",null,1],["new","Gem::Resolver::BestSet","ruby/classes/Gem/Resolver/BestSet.html#method-c-new","(sources = Gem.sources)","<p>Creates a BestSet for the given <code>sources</code> or Gem::sources if none are specified.  <code>sources</code> must be a Gem::SourceList …\n",null,1],["new","Gem::Resolver::ComposedSet","ruby/classes/Gem/Resolver/ComposedSet.html#method-c-new","(*sets)","<p>Creates a new ComposedSet containing <code>sets</code>.  Use Gem::Resolver::compose_sets instead.\n",null,1],["new","Gem::Resolver::Conflict","ruby/classes/Gem/Resolver/Conflict.html#method-c-new","(dependency, activated, failed_dep=dependency)","<p>Creates a new resolver conflict when <code>dependency</code> is in conflict with an already <code>activated</code> specification. …\n",null,1],["new","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-c-new","(dependency, requester)","<p>Creates a new DependencyRequest for <code>dependency</code> from <code>requester</code>. +requester may be nil if the request came …\n",null,1],["new","Gem::Resolver::IndexSpecification","ruby/classes/Gem/Resolver/IndexSpecification.html#method-c-new","(set, name, version, source, platform)","<p>An IndexSpecification is created from the index format described in ‘gem help generate_index`.\n<p>The <code>set</code> …\n",null,1],["new","Gem::Resolver::InstallerSet","ruby/classes/Gem/Resolver/InstallerSet.html#method-c-new","(domain)","<p>Creates a new InstallerSet that will look for gems in <code>domain</code>.\n",null,1],["new","Gem::Resolver::LockSet","ruby/classes/Gem/Resolver/LockSet.html#method-c-new","(sources)","<p>Creates a new LockSet from the given <code>sources</code>\n",null,1],["new","Gem::Resolver::LockSpecification","ruby/classes/Gem/Resolver/LockSpecification.html#method-c-new","(set, name, version, sources, platform)","",null,1],["new","Gem::Resolver::RequirementList","ruby/classes/Gem/Resolver/RequirementList.html#method-c-new","()","<p>Creates a new RequirementList.\n",null,1],["new","Gem::Resolver::SourceSet","ruby/classes/Gem/Resolver/SourceSet.html#method-c-new","()","<p>Creates a SourceSet for the given <code>sources</code> or Gem::sources if none are specified.  <code>sources</code> must be a  …\n",null,1],["new","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-c-new","(set, spec, source = nil)","<p>A SpecSpecification is created for a <code>set</code> for a Gem::Specification in <code>spec</code>.  The <code>source</code> is either where …\n",null,1],["new","Gem::Resolver::Specification","ruby/classes/Gem/Resolver/Specification.html#method-c-new","()","<p>Sets default instance variables for the specification.\n",null,1],["new","Gem::Resolver::Stats","ruby/classes/Gem/Resolver/Stats.html#method-c-new","()","",null,1],["new","Gem::S3URISigner","ruby/classes/Gem/S3URISigner.html#method-c-new","(uri)","",null,1],["new","Gem::S3URISigner::ConfigurationError","ruby/classes/Gem/S3URISigner/ConfigurationError.html#method-c-new","(message)","",null,1],["new","Gem::S3URISigner::InstanceProfileError","ruby/classes/Gem/S3URISigner/InstanceProfileError.html#method-c-new","(message)","",null,1],["new","Gem::SafeMarshal::Elements::Array","ruby/classes/Gem/SafeMarshal/Elements/Array.html#method-c-new","(elements)","",null,1],["new","Gem::SafeMarshal::Elements::Bignum","ruby/classes/Gem/SafeMarshal/Elements/Bignum.html#method-c-new","(sign, data)","",null,1],["new","Gem::SafeMarshal::Elements::False","ruby/classes/Gem/SafeMarshal/Elements/False.html#method-c-new","()","",null,1],["new","Gem::SafeMarshal::Elements::Float","ruby/classes/Gem/SafeMarshal/Elements/Float.html#method-c-new","(string)","",null,1],["new","Gem::SafeMarshal::Elements::Hash","ruby/classes/Gem/SafeMarshal/Elements/Hash.html#method-c-new","(pairs)","",null,1],["new","Gem::SafeMarshal::Elements::HashWithDefaultValue","ruby/classes/Gem/SafeMarshal/Elements/HashWithDefaultValue.html#method-c-new","(pairs, default)","",null,1],["new","Gem::SafeMarshal::Elements::Integer","ruby/classes/Gem/SafeMarshal/Elements/Integer.html#method-c-new","(int)","",null,1],["new","Gem::SafeMarshal::Elements::Object","ruby/classes/Gem/SafeMarshal/Elements/Object.html#method-c-new","(name)","",null,1],["new","Gem::SafeMarshal::Elements::ObjectLink","ruby/classes/Gem/SafeMarshal/Elements/ObjectLink.html#method-c-new","(offset)","",null,1],["new","Gem::SafeMarshal::Elements::String","ruby/classes/Gem/SafeMarshal/Elements/String.html#method-c-new","(str)","",null,1],["new","Gem::SafeMarshal::Elements::Symbol","ruby/classes/Gem/SafeMarshal/Elements/Symbol.html#method-c-new","(name)","",null,1],["new","Gem::SafeMarshal::Elements::SymbolLink","ruby/classes/Gem/SafeMarshal/Elements/SymbolLink.html#method-c-new","(offset)","",null,1],["new","Gem::SafeMarshal::Elements::True","ruby/classes/Gem/SafeMarshal/Elements/True.html#method-c-new","()","",null,1],["new","Gem::SafeMarshal::Elements::UserClass","ruby/classes/Gem/SafeMarshal/Elements/UserClass.html#method-c-new","(name, wrapped_object)","",null,1],["new","Gem::SafeMarshal::Elements::UserDefined","ruby/classes/Gem/SafeMarshal/Elements/UserDefined.html#method-c-new","(name, binary_string)","",null,1],["new","Gem::SafeMarshal::Elements::UserMarshal","ruby/classes/Gem/SafeMarshal/Elements/UserMarshal.html#method-c-new","(name, data)","",null,1],["new","Gem::SafeMarshal::Elements::WithIvars","ruby/classes/Gem/SafeMarshal/Elements/WithIvars.html#method-c-new","(object, ivars)","",null,1],["new","Gem::SafeMarshal::Reader","ruby/classes/Gem/SafeMarshal/Reader.html#method-c-new","(io)","",null,1],["new","Gem::SafeMarshal::Visitors::StreamPrinter","ruby/classes/Gem/SafeMarshal/Visitors/StreamPrinter.html#method-c-new","(io, indent: \"\")","",null,1],["new","Gem::SafeMarshal::Visitors::ToRuby","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby.html#method-c-new","(permitted_classes:, permitted_symbols:, permitted_ivars:)","",null,1],["new","Gem::SafeMarshal::Visitors::ToRuby::UnpermittedClassError","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnpermittedClassError.html#method-c-new","(name:, stack:)","",null,1],["new","Gem::SafeMarshal::Visitors::ToRuby::UnpermittedIvarError","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnpermittedIvarError.html#method-c-new","(symbol:, klass:, stack:)","",null,1],["new","Gem::SafeMarshal::Visitors::ToRuby::UnpermittedSymbolError","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnpermittedSymbolError.html#method-c-new","(symbol:, stack:)","",null,1],["new","Gem::SafeMarshal::Visitors::ToRuby::UnsupportedError","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby/UnsupportedError.html#method-c-new","(message, stack:)","",null,1],["new","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-c-new","(name, policy = {}, opt = {})","<p>Create a new Gem::Security::Policy object with the given mode and options.\n",null,1],["new","Gem::Security::Signer","ruby/classes/Gem/Security/Signer.html#method-c-new","(key, cert_chain, passphrase = nil, options = {})","<p>Creates a new signer with an RSA <code>key</code> or path to a key, and a certificate <code>chain</code> containing X509 certificates, …\n",null,1],["new","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-c-new","(dir, permissions = DEFAULT_PERMISSIONS)","<p>Creates a new TrustDir using <code>dir</code> where the directory and file permissions will be checked according to …\n",null,1],["new","Gem::SilentUI","ruby/classes/Gem/SilentUI.html#method-c-new","()","<p>The SilentUI has no arguments as it does not use any stream.\n",null,1],["new","Gem::Source","ruby/classes/Gem/Source.html#method-c-new","(uri)","<p>Creates a new Source which will use the index located at <code>uri</code>.\n",null,1],["new","Gem::Source::Git","ruby/classes/Gem/Source/Git.html#method-c-new","(name, repository, reference, submodules = false)","<p>Creates a new git gem source for a gems from loaded from <code>repository</code> at the given <code>reference</code>.  The <code>name</code> …\n",null,1],["new","Gem::Source::Lock","ruby/classes/Gem/Source/Lock.html#method-c-new","(source)","<p>Creates a new Lock source that wraps <code>source</code> and moves it earlier in the sort list.\n",null,1],["new","Gem::Source::SpecificFile","ruby/classes/Gem/Source/SpecificFile.html#method-c-new","(file)","<p>Creates a new SpecificFile for the gem in <code>file</code>\n",null,1],["new","Gem::Source::Vendor","ruby/classes/Gem/Source/Vendor.html#method-c-new","(path)","<p>Creates a new Vendor source for a gem that was unpacked at <code>path</code>.\n",null,1],["new","Gem::SourceFetchProblem","ruby/classes/Gem/SourceFetchProblem.html#method-c-new","(source, error)","<p>Creates a new SourceFetchProblem for the given <code>source</code> and <code>error</code>.\n",null,1],["new","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-c-new","()","<p>Creates a new SourceList\n",null,1],["new","Gem::SpecFetcher","ruby/classes/Gem/SpecFetcher.html#method-c-new","(sources = nil)","<p>Creates a new SpecFetcher.  Ordinarily you want to use the default fetcher from Gem::SpecFetcher::fetcher …\n",null,1],["new","Gem::SpecificGemNotFoundException","ruby/classes/Gem/SpecificGemNotFoundException.html#method-c-new","(name, version, errors=nil)","<p>Creates a new SpecificGemNotFoundException for a gem with the given <code>name</code> and <code>version</code>.  Any <code>errors</code> encountered …\n",null,1],["new","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-new","(name = nil, version = nil)","<p>Specification constructor. Assigns the default values to the attributes and yields itself for further …\n",null,1],["new","Gem::SpecificationPolicy","ruby/classes/Gem/SpecificationPolicy.html#method-c-new","(specification)","",null,1],["new","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-c-new","(in_stream, out_stream, err_stream=$stderr, usetty=true)","<p>Creates a new StreamUI wrapping <code>in_stream</code> for user input, <code>out_stream</code> for standard output, <code>err_stream</code> …\n",null,1],["new","Gem::StreamUI::SilentDownloadReporter","ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-c-new","(out_stream, *args)","<p>The silent download reporter ignores all arguments\n",null,1],["new","Gem::StreamUI::SilentProgressReporter","ruby/classes/Gem/StreamUI/SilentProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = nil)","<p>Creates a silent progress reporter that ignores all input arguments.\n",null,1],["new","Gem::StreamUI::SimpleProgressReporter","ruby/classes/Gem/StreamUI/SimpleProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = \"complete\")","<p>Creates a new progress reporter that will write to <code>out_stream</code> for <code>size</code> items.  Shows the given <code>initial_message</code> …\n",null,1],["new","Gem::StreamUI::ThreadedDownloadReporter","ruby/classes/Gem/StreamUI/ThreadedDownloadReporter.html#method-c-new","(out_stream, *args)","<p>Creates a new threaded download reporter that will display on <code>out_stream</code>.  The other arguments are ignored. …\n",null,1],["new","Gem::StreamUI::VerboseProgressReporter","ruby/classes/Gem/StreamUI/VerboseProgressReporter.html#method-c-new","(out_stream, size, initial_message, terminal_message = \"complete\")","<p>Creates a new progress reporter that will write to <code>out_stream</code> for <code>size</code> items.  Shows the given <code>initial_message</code> …\n",null,1],["new","Gem::SystemExitException","ruby/classes/Gem/SystemExitException.html#method-c-new","(exit_code)","<p>Creates a new SystemExitException with the given <code>exit_code</code>\n",null,1],["new","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-c-new","(gem, options = {})","<p>Constructs an uninstaller that will uninstall <code>gem</code>\n",null,1],["new","Gem::UnknownCommandError","ruby/classes/Gem/UnknownCommandError.html#method-c-new","(unknown_command)","",null,1],["new","Gem::UnknownCommandSpellChecker","ruby/classes/Gem/UnknownCommandSpellChecker.html#method-c-new","(error)","",null,1],["new","Gem::UnsatisfiableDependencyError","ruby/classes/Gem/UnsatisfiableDependencyError.html#method-c-new","(dep, platform_mismatch=nil)","<p>Creates a new UnsatisfiableDependencyError for the unsatisfiable Gem::Resolver::DependencyRequest <code>dep</code> …\n",null,1],["new","Gem::Uri","ruby/classes/Gem/Uri.html#method-c-new","(source_uri)","",null,1],["new","Gem::UriFormatter","ruby/classes/Gem/UriFormatter.html#method-c-new","(uri)","<p>Creates a new URI formatter for <code>uri</code>.\n",null,1],["new","Gem::Version","ruby/classes/Gem/Version.html#method-c-new","(version)","<p>Constructs a Version from the <code>version</code> string.  A version string is a series of digits or ASCII letters …\n",null,1],["new","Gem::WebauthnVerificationError","ruby/classes/Gem/WebauthnVerificationError.html#method-c-new","(message)","",null,1],["new","GetoptLong","ruby/classes/GetoptLong.html#method-c-new","(*arguments)","<p>Returns a new GetoptLong object based on the given <code>arguments</code>. See Options.\n<p>Example:\n\n<pre><code>require &#39;getoptlong&#39; ...\n</code></pre>\n",null,1],["new","Hash","ruby/classes/Hash.html#method-c-new","(p1 = v1, p2 = {})","<p>Returns a new empty Hash object.\n<p>The initial default value and initial default proc for the new hash depend …\n",null,1],["new","IO","ruby/classes/IO.html#method-c-new","(p1, p2 = v2, p3 = {})","<p>Creates and returns a new IO object (file stream) from a file descriptor.\n<p>IO.new may be useful for interaction …\n",null,1],["new","IO::Buffer","ruby/classes/IO/Buffer.html#method-c-new","(*args)","<p>Create a new zero-filled IO::Buffer of <code>size</code> bytes. By default, the buffer will be <em>internal</em>: directly …\n",null,1],["new","IPAddr","ruby/classes/IPAddr.html#method-c-new","(addr = '::', family = Socket::AF_UNSPEC)","<p>Creates a new ipaddr object either from a human readable IP address representation in string, or from …\n",null,1],["new","IRB::Canvas","ruby/classes/IRB/Canvas.html#method-c-new","((h, w))","",null,1],["new","IRB::Color::SymbolState","ruby/classes/IRB/Color/SymbolState.html#method-c-new","()","",null,1],["new","IRB::Context","ruby/classes/IRB/Context.html#method-c-new","(irb, workspace = nil, input_method = nil)","<p>Creates a new IRB context.\n<p>The optional <code>input_method</code> argument:\n<p><code>nil</code> &mdash; uses stdin or Reline or Readline\n",null,1],["new","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-c-new","(irb)","",null,1],["new","IRB::FileInputMethod","ruby/classes/IRB/FileInputMethod.html#method-c-new","(file)","<p>Creates a new input method object\n",null,1],["new","IRB::Frame","ruby/classes/IRB/Frame.html#method-c-new","()","<p>Creates a new stack frame\n",null,1],["new","IRB::Frame::FrameOverflow","ruby/classes/IRB/Frame/FrameOverflow.html#method-c-new","()","",null,1],["new","IRB::Frame::FrameUnderflow","ruby/classes/IRB/Frame/FrameUnderflow.html#method-c-new","()","",null,1],["new","IRB::Inspector","ruby/classes/IRB/Inspector.html#method-c-new","(inspect_proc, init_proc = nil)","<p>Creates a new inspector object, using the given <code>inspect_proc</code> when output return values in irb.\n",null,1],["new","IRB::Irb","ruby/classes/IRB/Irb.html#method-c-new","(workspace = nil, input_method = nil)","<p>Creates a new irb session\n",null,1],["new","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-c-new","()","<p>Creates a new JobManager object\n",null,1],["new","IRB::Locale","ruby/classes/IRB/Locale.html#method-c-new","(locale = nil)","",null,1],["new","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-c-new","(prefix, base_notifier)","<p>Creates a new Notifier object\n",null,1],["new","IRB::Notifier::CompositeNotifier","ruby/classes/IRB/Notifier/CompositeNotifier.html#method-c-new","(prefix, base_notifier)","<p>Create a new composite notifier object with the given <code>prefix</code>, and <code>base_notifier</code> to use for output.\n",null,1],["new","IRB::Notifier::ErrUndefinedNotifier","ruby/classes/IRB/Notifier/ErrUndefinedNotifier.html#method-c-new","(val)","",null,1],["new","IRB::Notifier::ErrUnrecognizedLevel","ruby/classes/IRB/Notifier/ErrUnrecognizedLevel.html#method-c-new","(val)","",null,1],["new","IRB::Notifier::LeveledNotifier","ruby/classes/IRB/Notifier/LeveledNotifier.html#method-c-new","(base, level, prefix)","<p>Create a new leveled notifier with the given <code>base</code>, and <code>prefix</code> to send to AbstractNotifier.new\n<p>The given …\n",null,1],["new","IRB::Notifier::NoMsgNotifier","ruby/classes/IRB/Notifier/NoMsgNotifier.html#method-c-new","()","<p>Creates a new notifier that should not be used to output messages.\n",null,1],["new","IRB::OutputMethod::NotImplementedError","ruby/classes/IRB/OutputMethod/NotImplementedError.html#method-c-new","(val)","",null,1],["new","IRB::ReadlineInputMethod","ruby/classes/IRB/ReadlineInputMethod.html#method-c-new","()","<p>Creates a new input method object using Readline\n",null,1],["new","IRB::ReidlineInputMethod","ruby/classes/IRB/ReidlineInputMethod.html#method-c-new","()","",null,1],["new","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-c-new","(completor)","<p>Creates a new input method object using Reline\n",null,1],["new","IRB::RubyModel","ruby/classes/IRB/RubyModel.html#method-c-new","()","",null,1],["new","IRB::SourceFinder","ruby/classes/IRB/SourceFinder.html#method-c-new","(irb_context)","",null,1],["new","IRB::Statement::Command","ruby/classes/IRB/Statement/Command.html#method-c-new","(code, command, arg, command_class)","",null,1],["new","IRB::Statement::Expression","ruby/classes/IRB/Statement/Expression.html#method-c-new","(code, is_assignment)","",null,1],["new","IRB::StdioInputMethod","ruby/classes/IRB/StdioInputMethod.html#method-c-new","()","<p>Creates a new input method object\n",null,1],["new","IRB::Vec","ruby/classes/IRB/Vec.html#method-c-new","(x, y, z)","",null,1],["new","IRB::WorkSpace","ruby/classes/IRB/WorkSpace.html#method-c-new","(*main)","<p>Creates a new workspace.\n<p>set self to main if specified, otherwise inherit main from TOPLEVEL_BINDING. …\n",null,1],["new","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-c-new","(p1 = v1)","<p>Instantiates a new State object, configured by <em>opts</em>.\n<p><em>opts</em> can have the following keys:\n<p><strong>indent</strong>: a string …\n",null,1],["new","JSON::Ext::Parser","ruby/classes/JSON/Ext/Parser.html#method-c-new","(p1, p2 = {})","<p>Creates a new JSON::Ext::Parser instance for the string <em>source</em>.\n<p>It will be configured by the <em>opts</em> hash. …\n",null,1],["new","KeyError","ruby/classes/KeyError.html#method-c-new","(p1 = v1, p2 = {})","<p>Construct a new <code>KeyError</code> exception with the given message, receiver and key.\n",null,1],["new","Logger","ruby/classes/Logger.html#method-c-new","(logdev, shift_age = 0, shift_size = 1048576, level: DEBUG, progname: nil, formatter: nil, datetime_format: nil, binmode: false, shift_period_suffix: '%Y%m%d')","<p>With the single argument <code>logdev</code>, returns a new logger with all default options:\n\n<pre><code>Logger.new(&#39;t.log&#39;) # ...\n</code></pre>\n",null,1],["new","Logger::Formatter","ruby/classes/Logger/Formatter.html#method-c-new","()","",null,1],["new","Logger::LogDevice","ruby/classes/Logger/LogDevice.html#method-c-new","(log = nil, shift_age: nil, shift_size: nil, shift_period_suffix: nil, binmode: false)","",null,1],["new","Module","ruby/classes/Module.html#method-c-new","()","<p>Creates a new anonymous module. If a block is given, it is passed the module object, and the block is …\n",null,1],["new","MonitorMixin","ruby/classes/MonitorMixin.html#method-c-new","(...)","<p>Use <code>extend MonitorMixin</code> or <code>include MonitorMixin</code> instead of this constructor.  Have look at the examples …\n",null,1],["new","MonitorMixin::ConditionVariable","ruby/classes/MonitorMixin/ConditionVariable.html#method-c-new","(monitor)","",null,1],["new","NameError","ruby/classes/NameError.html#method-c-new","(*args, p2 = {})","<p>Construct a new NameError exception. If given the <em>name</em> parameter may subsequently be examined using the …\n",null,1],["new","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-new","(address, port = nil, p_addr = :ENV, p_port = nil, p_user = nil, p_pass = nil, p_no_proxy = nil)","<p>Returns a new Net::HTTP object <code>http</code> (but does not open a TCP connection or HTTP session).\n<p>With only string …\n",null,1],["new","Net::HTTPRequest","ruby/classes/Net/HTTPRequest.html#method-c-new","(path, initheader = nil)","<p>Creates an HTTP request object for <code>path</code>.\n<p><code>initheader</code> are the default headers to use.  Net::HTTP adds Accept-Encoding …\n",null,1],["new","Net::ReadTimeout","ruby/classes/Net/ReadTimeout.html#method-c-new","(io = nil)","",null,1],["new","Net::WriteAdapter","ruby/classes/Net/WriteAdapter.html#method-c-new","(writer)","",null,1],["new","Net::WriteTimeout","ruby/classes/Net/WriteTimeout.html#method-c-new","(io = nil)","",null,1],["new","NoMatchingPatternKeyError","ruby/classes/NoMatchingPatternKeyError.html#method-c-new","(p1 = v1, p2 = {})","<p>Construct a new <code>NoMatchingPatternKeyError</code> exception with the given message, matchee and key.\n",null,1],["new","NoMethodError","ruby/classes/NoMethodError.html#method-c-new","(*args, p2 = {})","<p>Construct a NoMethodError exception for a method of the given name called with the given arguments.  …\n",null,1],["new","OLEProperty","ruby/classes/OLEProperty.html#method-c-new","(obj, dispid, gettypes, settypes)","",null,1],["new","OpenSSL::ASN1::ASN1Data","ruby/classes/OpenSSL/ASN1/ASN1Data.html#method-c-new","(p1, p2, p3)","<p><em>value</em>: Please have a look at Constructive and Primitive to see how Ruby types are mapped to ASN.1 types …\n",null,1],["new","OpenSSL::ASN1::Constructive","ruby/classes/OpenSSL/ASN1/Constructive.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p><em>value</em>: is mandatory.\n<p><em>tag</em>: optional, may be specified for tagged values. If no <em>tag</em> is specified, the UNIVERSAL …\n",null,1],["new","OpenSSL::ASN1::Primitive","ruby/classes/OpenSSL/ASN1/Primitive.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p><em>value</em>: is mandatory.\n<p><em>tag</em>: optional, may be specified for tagged values. If no <em>tag</em> is specified, the UNIVERSAL …\n",null,1],["new","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-c-new","(p1, p2 = v2)","<p>Construct a new OpenSSL BIGNUM object.\n<p>If <code>bn</code> is an Integer or OpenSSL::BN, a new instance of OpenSSL::BN …\n",null,1],["new","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-c-new","(*)","<p>Creates an instance of OpenSSL’s buffering IO module.\n",null,1],["new","OpenSSL::Buffering::Buffer","ruby/classes/OpenSSL/Buffering/Buffer.html#method-c-new","()","",null,1],["new","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-c-new","(p1)","<p>The string must contain a valid cipher name like “aes-256-cbc”.\n<p>A list of cipher names is available …\n",null,1],["new","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-c-new","(p1 = v1)","<p>Creates an instance of OpenSSL::Config from the content of the file specified by <em>filename</em>.\n<p>This can be …\n",null,1],["new","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-c-new","(p1, p2 = v2)","<p>Creates a Digest instance based on <em>string</em>, which is either the ln (long name) or sn (short name) of a …\n",null,1],["new","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-c-new","(p1, p2)","<p>Returns an instance of OpenSSL::HMAC set with the key and digest algorithm to be used. The instance represents …\n",null,1],["new","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-c-new","(p1 = v1)","<p>Parameters\n<p><em>request</em> - optional raw request, either in PEM or DER format.\n\n",null,1],["new","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-c-new","(p1 = v1)","<p>Creates a new BasicResponse. If <em>der_string</em> is given, decodes <em>der_string</em> as DER.\n",null,1],["new","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates a new OpenSSL::OCSP::CertificateId for the given <em>subject</em> and <em>issuer</em> X509 certificates.  The  …\n",null,1],["new","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-c-new","(p1 = v1)","<p>Creates a new OpenSSL::OCSP::Request.  The request may be created empty or from a <em>request_der</em> string. …\n",null,1],["new","OpenSSL::OCSP::Response","ruby/classes/OpenSSL/OCSP/Response.html#method-c-new","(p1 = v1)","<p>Creates a new OpenSSL::OCSP::Response.  The response may be created empty or from a <em>response_der</em> string. …\n",null,1],["new","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-c-new","(p1)","<p>Creates a new SingleResponse from <em>der_string</em>.\n",null,1],["new","OpenSSL::PKCS12","ruby/classes/OpenSSL/PKCS12.html#method-c-new","(p1 = v1, p2 = v2)","<p>Parameters\n<p><em>str</em> - Must be a DER encoded PKCS12 string.\n<p><em>pass</em> - string\n",null,1],["new","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-c-new","(p1 = v1)","<p>Many methods in this class aren’t documented.\n",null,1],["new","OpenSSL::PKCS7::RecipientInfo","ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-c-new","(p1)","",null,1],["new","OpenSSL::PKCS7::SignerInfo","ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-c-new","(p1, p2, p3)","",null,1],["new","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-c-new","(p1 = v1)","<p>Creates a new instance of OpenSSL::PKey::DH.\n<p>If called without arguments, an empty instance without any …\n",null,1],["new","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-c-new","(p1 = v1, p2 = v2)","<p>Creates a new DSA instance by reading an existing key from <em>string</em>.\n<p>If called without arguments, creates …\n",null,1],["new","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-c-new","(p1 = v1, p2 = v2)","<p>Creates a new EC object from given arguments.\n",null,1],["new","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a new EC::Group object.\n<p>If the first argument is :GFp or :GF2m, creates a new curve with given …\n",null,1],["new","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-c-new","(p1, p2 = v2)","<p>Creates a new instance of OpenSSL::PKey::EC::Point. If the only argument is an instance of EC::Point …\n",null,1],["new","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-c-new","()","<p>Because PKey is an abstract class, actually calling this method explicitly will raise a NotImplementedError …\n",null,1],["new","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-c-new","(p1 = v1, p2 = v2)","<p>Generates or loads an RSA keypair.\n<p>If called without arguments, creates a new instance with no key components …\n",null,1],["new","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-c-new","(version = nil)","<p>Creates a new SSL context.\n<p>If an argument is given, #ssl_version= is called with the value. Note that …\n",null,1],["new","OpenSSL::SSL::SSLServer","ruby/classes/OpenSSL/SSL/SSLServer.html#method-c-new","(svr, ctx)","<p>Creates a new instance of SSLServer.\n<p><em>srv</em> is an instance of TCPServer.\n<p><em>ctx</em> is an instance of OpenSSL::SSL::SSLContext …\n",null,1],["new","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-c-new","(p1, p2 = v2)","<p>Creates a new SSL socket from <em>io</em> which must be a real IO object (not an IO-like object that responds …\n",null,1],["new","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-c-new","(p1)","<p>Creates a new Session object from an instance of SSLSocket or DER/PEM encoded String.\n",null,1],["new","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-c-new","(p1 = v1)","<p>When creating a Request with the <code>File</code> or <code>string</code> parameter, the corresponding <code>File</code> or <code>string</code> must be DER-encoded. …\n",null,1],["new","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-c-new","(p1)","<p>Creates a Response from a <code>File</code> or <code>string</code> parameter, the corresponding <code>File</code> or <code>string</code> must be DER-encoded. …\n",null,1],["new","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-c-new","(p1)","<p>Creates a TokenInfo from a <code>File</code> or <code>string</code> parameter, the corresponding <code>File</code> or <code>string</code> must be DER-encoded. …\n",null,1],["new","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-c-new","(p1, p2 = v2)","",null,1],["new","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates an X509 extension.\n<p>The extension may be created from <em>der</em> data or from an extension <em>oid</em> and <em>value</em> …\n",null,1],["new","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","",null,1],["new","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-c-new","(p1 = v1, p2 = v2)","<p>Creates a new Name.\n<p>A name may be created from a DER encoded string <em>der</em>, an Array representing a <em>distinguished_name</em> …\n",null,1],["new","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-c-new","(p1 = v1)","",null,1],["new","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-c-new","(*args)","",null,1],["new","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-c-new","(*args)","<p>Creates a new X509::Store.\n",null,1],["new","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Sets up a StoreContext for a verification of the X.509 certificate <em>cert</em>.\n",null,1],["new","OpenStruct","ruby/classes/OpenStruct.html#method-c-new","(hash=nil)","<p>Creates a new OpenStruct object.  By default, the resulting OpenStruct object will have no attributes. …\n",null,1],["new","OpenURI::HTTPError","ruby/classes/OpenURI/HTTPError.html#method-c-new","(message, io)","",null,1],["new","OpenURI::HTTPRedirect","ruby/classes/OpenURI/HTTPRedirect.html#method-c-new","(message, io, uri)","",null,1],["new","OptionParser","ruby/classes/OptionParser.html#method-c-new","(banner = nil, width = 32, indent = ' ' * 4)","<p>Initializes the instance and yields itself if called with a block.\n<p><code>banner</code> &mdash; Banner message.\n<p><code>width</code> &mdash; Summary …\n",null,1],["new","OptionParser","ruby/classes/OptionParser.html#method-i-new","()","<p>Pushes a new List.\n",null,1],["new","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-c-new","(*args)","",null,1],["new","OptionParser::List","ruby/classes/OptionParser/List.html#method-c-new","()","<p>Just initializes all instance variables.\n",null,1],["new","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-c-new","(*args, additional: nil)","",null,1],["new","OptionParser::Switch","ruby/classes/OptionParser/Switch.html#method-c-new","(pattern = nil, conv = nil, short = nil, long = nil, arg = nil, desc = ([] if short or long), block = nil, &_block)","",null,1],["new","PStore","ruby/classes/PStore.html#method-c-new","(file, thread_safe = false)","<p>Returns a new PStore object.\n<p>Argument <code>file</code> is the path to the file in which objects are to be stored; …\n",null,1],["new","Pathname","ruby/classes/Pathname.html#method-c-new","(p1)","<p>Create a Pathname object from the given String (or String-like object). If <code>path</code> contains a NULL character …\n",null,1],["new","PrettyPrint","ruby/classes/PrettyPrint.html#method-c-new","(output=''.dup, maxwidth=79, newline=\"\\n\", &genspace)","<p>Creates a buffer for pretty printing.\n<p><code>output</code> is an output target. If it is not specified, ” is …\n",null,1],["new","PrettyPrint::SingleLine","ruby/classes/PrettyPrint/SingleLine.html#method-c-new","(output, maxwidth=nil, newline=nil)","<p>Create a PrettyPrint::SingleLine object\n<p>Arguments:\n<p><code>output</code> - String (or similar) to store rendered text. …\n",null,1],["new","Prism::Comment","ruby/classes/Prism/Comment.html#method-c-new","(location)","<p>Create a new comment object with the given location.\n",null,1],["new","Prism::Location","ruby/classes/Prism/Location.html#method-c-new","(source, start_offset, length)","<p>Create a new location object with the given source, start byte offset, and byte length.\n",null,1],["new","Prism::MagicComment","ruby/classes/Prism/MagicComment.html#method-c-new","(key_loc, value_loc)","<p>Create a new magic comment object with the given key and value locations.\n",null,1],["new","Prism::Pack::Directive","ruby/classes/Prism/Pack/Directive.html#method-c-new","(version, variant, source, type, signed, endian, size, length_type, length)","<p>Initialize a new directive with the given values.\n",null,1],["new","Prism::Pack::Format","ruby/classes/Prism/Pack/Format.html#method-c-new","(directives, encoding)","<p>Create a new Format with the given directives and encoding.\n",null,1],["new","Prism::ParseError","ruby/classes/Prism/ParseError.html#method-c-new","(message, location)","<p>Create a new error object with the given message and location.\n",null,1],["new","Prism::ParseResult","ruby/classes/Prism/ParseResult.html#method-c-new","(value, comments, magic_comments, data_loc, errors, warnings, source)","<p>Create a new parse result object with the given values.\n",null,1],["new","Prism::ParseResult::Comments","ruby/classes/Prism/ParseResult/Comments.html#method-c-new","(parse_result)","<p>Create a new Comments object that will attach comments to the given parse result.\n",null,1],["new","Prism::ParseResult::Newlines","ruby/classes/Prism/ParseResult/Newlines.html#method-c-new","(newline_marked)","<p>Create a new Newlines visitor with the given newline offsets.\n",null,1],["new","Prism::ParseWarning","ruby/classes/Prism/ParseWarning.html#method-c-new","(message, location)","<p>Create a new warning object with the given message and location.\n",null,1],["new","Prism::Pattern","ruby/classes/Prism/Pattern.html#method-c-new","(query)","<p>Create a new pattern with the given query. The query should be a string containing a Ruby pattern matching …\n",null,1],["new","Prism::Pattern::CompilationError","ruby/classes/Prism/Pattern/CompilationError.html#method-c-new","(repr)","<p>Create a new CompilationError with the given representation of the node that caused the error.\n",null,1],["new","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-c-new","(source)","<p>Create a new RipperCompat object with the given source.\n",null,1],["new","Prism::Source","ruby/classes/Prism/Source.html#method-c-new","(source, start_line = 1, offsets = compute_offsets(source))","<p>Create a new source object with the given source code and newline byte offsets. If no newline byte offsets …\n",null,1],["new","Prism::Token","ruby/classes/Prism/Token.html#method-c-new","(type, value, location)","<p>Create a new token object with the given type, value, and location.\n",null,1],["new","Proc","ruby/classes/Proc.html#method-c-new","(*args)","<p>Creates a new Proc object, bound to the current context.\n\n<pre><code>proc = Proc.new { &quot;hello&quot; }\nproc.call   #=&gt; &quot;hello&quot;\n</code></pre>\n",null,1],["new","Psych::AliasesNotEnabled","ruby/classes/Psych/AliasesNotEnabled.html#method-c-new","()","",null,1],["new","Psych::AnchorNotDefined","ruby/classes/Psych/AnchorNotDefined.html#method-c-new","(anchor_name)","",null,1],["new","Psych::ClassLoader::Restricted","ruby/classes/Psych/ClassLoader/Restricted.html#method-c-new","(classes, symbols)","",null,1],["new","Psych::Coder","ruby/classes/Psych/Coder.html#method-c-new","(tag)","",null,1],["new","Psych::DisallowedClass","ruby/classes/Psych/DisallowedClass.html#method-c-new","(action, klass_name)","",null,1],["new","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-c-new","(p1, p2 = v2)","<p>Create a new Psych::Emitter that writes to <code>io</code>.\n",null,1],["new","Psych::Handler::DumperOptions","ruby/classes/Psych/Handler/DumperOptions.html#method-c-new","()","",null,1],["new","Psych::Handlers::Recorder","ruby/classes/Psych/Handlers/Recorder.html#method-c-new","()","",null,1],["new","Psych::Nodes::Alias","ruby/classes/Psych/Nodes/Alias.html#method-c-new","(anchor)","<p>Create a new Alias that points to an <code>anchor</code>\n",null,1],["new","Psych::Nodes::Document","ruby/classes/Psych/Nodes/Document.html#method-c-new","(version = [], tag_directives = [], implicit = false)","<p>Create a new Psych::Nodes::Document object.\n<p><code>version</code> is a list indicating the YAML version. <code>tags_directives</code> …\n",null,1],["new","Psych::Nodes::Mapping","ruby/classes/Psych/Nodes/Mapping.html#method-c-new","(anchor = nil, tag = nil, implicit = true, style = BLOCK)","<p>Create a new Psych::Nodes::Mapping object.\n<p><code>anchor</code> is the anchor associated with the map or <code>nil</code>. <code>tag</code> is …\n",null,1],["new","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-c-new","()","<p>Create a new Psych::Nodes::Node\n",null,1],["new","Psych::Nodes::Scalar","ruby/classes/Psych/Nodes/Scalar.html#method-c-new","(value, anchor = nil, tag = nil, plain = true, quoted = false, style = ANY)","<p>Create a new Psych::Nodes::Scalar object.\n<p><code>value</code> is the string value of the scalar <code>anchor</code> is an associated …\n",null,1],["new","Psych::Nodes::Sequence","ruby/classes/Psych/Nodes/Sequence.html#method-c-new","(anchor = nil, tag = nil, implicit = true, style = BLOCK)","<p>Create a new object representing a YAML sequence.\n<p><code>anchor</code> is the anchor associated with the sequence or …\n",null,1],["new","Psych::Nodes::Stream","ruby/classes/Psych/Nodes/Stream.html#method-c-new","(encoding = UTF8)","<p>Create a new Psych::Nodes::Stream node with an <code>encoding</code> that defaults to Psych::Nodes::Stream::UTF8. …\n",null,1],["new","Psych::Parser","ruby/classes/Psych/Parser.html#method-c-new","(handler = Handler.new)","<p>Creates a new Psych::Parser instance with <code>handler</code>.  YAML events will be called on <code>handler</code>.  See Psych::Parser …\n",null,1],["new","Psych::ScalarScanner","ruby/classes/Psych/ScalarScanner.html#method-c-new","(class_loader, strict_integer: false)","<p>Create a new scanner\n",null,1],["new","Psych::Streaming::ClassMethods","ruby/classes/Psych/Streaming/ClassMethods.html#method-i-new","(io)","<p>Create a new streaming emitter.  Emitter will print to <code>io</code>.  See Psych::Stream for an example.\n",null,1],["new","Psych::SyntaxError","ruby/classes/Psych/SyntaxError.html#method-c-new","(file, line, col, offset, problem, context)","",null,1],["new","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-c-new","()","<p>Create a new TreeBuilder instance\n",null,1],["new","Psych::Visitors::DepthFirst","ruby/classes/Psych/Visitors/DepthFirst.html#method-c-new","(block)","",null,1],["new","Psych::Visitors::Emitter","ruby/classes/Psych/Visitors/Emitter.html#method-c-new","(io, options = {})","",null,1],["new","Psych::Visitors::RestrictedYAMLTree","ruby/classes/Psych/Visitors/RestrictedYAMLTree.html#method-c-new","(emitter, ss, options)","",null,1],["new","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-c-new","(ss, class_loader, symbolize_names: false, freeze: false)","",null,1],["new","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-c-new","(emitter, ss, options)","",null,1],["new","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-c-new","(text, old_name, new_name, comment, singleton = false)","<p>Creates a new Alias with a token stream of <code>text</code> that aliases <code>old_name</code> to <code>new_name</code>, has <code>comment</code> and is …\n",null,1],["new","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-c-new","(text, name)","<p>Creates a new AnyMethod with a token stream <code>text</code> and <code>name</code>\n",null,1],["new","RDoc::Attr","ruby/classes/RDoc/Attr.html#method-c-new","(text, name, rw, comment, singleton = false)","<p>Creates a new Attr with body <code>text</code>, <code>name</code>, read/write status <code>rw</code> and <code>comment</code>.  <code>singleton</code> marks this as a …\n",null,1],["new","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-c-new","(name, superclass = nil)","<p>Creates a new ClassModule with <code>name</code> with optional <code>superclass</code>\n<p>This is a constructor for subclasses, and …\n",null,1],["new","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-c-new","()","<p>Creates a new CodeObject that will document itself and its children\n",null,1],["new","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-c-new","(text = nil, location = nil, language = nil)","<p>Creates a new comment with <code>text</code> that is found in the RDoc::TopLevel <code>location</code>.\n",null,1],["new","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-c-new","(name, value, comment)","<p>Creates a new constant with <code>name</code>, <code>value</code> and <code>comment</code>\n",null,1],["new","RDoc::Context","ruby/classes/RDoc/Context.html#method-c-new","()","<p>Creates an unnamed empty context with public current visibility\n",null,1],["new","RDoc::CrossReference","ruby/classes/RDoc/CrossReference.html#method-c-new","(context)","<p>Allows cross-references to be created based on the given <code>context</code> (RDoc::Context).\n",null,1],["new","RDoc::ERBIO","ruby/classes/RDoc/ERBIO.html#method-c-new","(str, trim_mode: nil, eoutvar: 'io')","<p>Defaults <code>eoutvar</code> to ‘io’, otherwise is identical to ERB’s initialize\n",null,1],["new","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-c-new","(extensions = DEFAULT_EXTENSIONS, debug = false)","<p>Creates a new markdown parser that enables the given <code>extensions</code>.\n",null,1],["new","RDoc::Markup","ruby/classes/RDoc/Markup.html#method-c-new","(attribute_manager = nil)","<p>Take a block of text and use various heuristics to determine its structure (paragraphs, lists, and so …\n",null,1],["new","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-c-new","(text, name)","<p>Creates a new MethodAttr from token stream <code>text</code> and method or attribute name <code>name</code>.\n<p>Usually this is called …\n",null,1],["new","RDoc::Mixin","ruby/classes/RDoc/Mixin.html#method-c-new","(name, comment)","<p>Creates a new Mixin for <code>name</code> with <code>comment</code>\n",null,1],["new","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Creates a new Parser storing <code>top_level</code>, <code>file_name</code>, <code>content</code>, <code>options</code> and <code>stats</code> in instance variables. …\n",null,1],["new","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Prepares for parsing a C file.  See RDoc::Parser#initialize for details on the arguments.\n",null,1],["new","RDoc::Parser::RipperStateLex","ruby/classes/RDoc/Parser/RipperStateLex.html#method-c-new","(code)","<p>New lexer for <code>code</code>.\n",null,1],["new","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Creates a new Ruby parser.\n",null,1],["new","RDoc::Parser::Simple","ruby/classes/RDoc/Parser/Simple.html#method-c-new","(top_level, file_name, content, options, stats)","<p>Prepare to parse a plain file\n",null,1],["new","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-c-new","()","<p>Creates a new RDoc::RDoc instance.  Call #document to parse files and generate documentation.\n",null,1],["new","RDoc::Require","ruby/classes/RDoc/Require.html#method-c-new","(name, comment)","<p>Creates a new Require that loads <code>name</code> with <code>comment</code>\n",null,1],["new","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-c-new","(spec, generate_rdoc = false, generate_ri = true)","<p>Creates a new documentation generator for <code>spec</code>.  RDoc and ri data generation can be enabled or disabled …\n",null,1],["new","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-c-new","(spec, generate_rdoc = false, generate_ri = true)","<p>Creates a new documentation generator for <code>spec</code>.  RDoc and ri data generation can be enabled or disabled …\n",null,1],["new","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-c-new","(server, stores, cache, mount_path = nil, extra_doc_dirs = [])","<p>Creates a new WEBrick servlet.\n<p>Use <code>mount_path</code> when mounting the servlet somewhere other than /.\n<p>Use <code>extra_doc_dirs</code> …\n",null,1],["new","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-c-new","(store, num_files, verbosity = 1)","<p>Creates a new Stats that will have <code>num_files</code>.  <code>verbosity</code> defaults to 1 which will create an RDoc::Stats::Normal …\n",null,1],["new","RDoc::Store","ruby/classes/RDoc/Store.html#method-c-new","(path = nil, type = nil)","<p>Creates a new Store of <code>type</code> that will load or save to <code>path</code>\n",null,1],["new","RDoc::Store::MissingFileError","ruby/classes/RDoc/Store/MissingFileError.html#method-c-new","(store, file, name)","<p>Creates a new MissingFileError for the missing <code>file</code> for the given <code>name</code> that should have been in the  …\n",null,1],["new","RDoc::Task","ruby/classes/RDoc/Task.html#method-c-new","(name = :rdoc)","<p>Create an RDoc task with the given name. See the RDoc::Task class overview for documentation.\n",null,1],["new","RDoc::TomDoc","ruby/classes/RDoc/TomDoc.html#method-c-new","()","<p>Creates a new TomDoc parser.  See also RDoc::Markup::parse\n",null,1],["new","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-c-new","(absolute_name, relative_name = absolute_name)","<p>Creates a new TopLevel for the file at <code>absolute_name</code>.  If documentation is being generated outside the …\n",null,1],["new","Ractor","ruby/classes/Ractor.html#method-c-new","(*args, name: nil, &block)","<p>Create a new Ractor with args and a block.\n<p>The given block (Proc) will be isolated (can’t access any …\n",null,1],["new","Random","ruby/classes/Random.html#method-c-new","(*args)","<p>Creates a new PRNG using <code>seed</code> to set the initial state. If <code>seed</code> is omitted, the generator is initialized …\n",null,1],["new","Range","ruby/classes/Range.html#method-c-new","(p1, p2, p3 = v3)","<p>Returns a new range based on the given objects <code>begin</code> and <code>end</code>. Optional argument <code>exclude_end</code> determines …\n",null,1],["new","Regexp","ruby/classes/Regexp.html#method-c-new","(*args)","<p>With argument <code>string</code> given, returns a new regexp with the given string and options:\n\n<pre><code>r = Regexp.new(&#39;foo&#39;) ...\n</code></pre>\n",null,1],["new","Reline::Config","ruby/classes/Reline/Config.html#method-c-new","()","",null,1],["new","Reline::Core","ruby/classes/Reline/Core.html#method-c-new","()","",null,1],["new","Reline::Face::Config","ruby/classes/Reline/Face/Config.html#method-c-new","(name, &block)","",null,1],["new","Reline::History","ruby/classes/Reline/History.html#method-c-new","(config)","",null,1],["new","Reline::KeyActor::Base","ruby/classes/Reline/KeyActor/Base.html#method-c-new","()","",null,1],["new","Reline::KeyStroke","ruby/classes/Reline/KeyStroke.html#method-c-new","(config)","",null,1],["new","Reline::KillRing","ruby/classes/Reline/KillRing.html#method-c-new","(max = 1024)","",null,1],["new","Reline::KillRing::RingBuffer","ruby/classes/Reline/KillRing/RingBuffer.html#method-c-new","(max = 1024)","",null,1],["new","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-c-new","(config, encoding)","",null,1],["new","Reline::LineEditor::Dialog","ruby/classes/Reline/LineEditor/Dialog.html#method-c-new","(name, config, proc_scope)","",null,1],["new","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-c-new","(line_editor, config, proc_to_exec, context)","",null,1],["new","Reline::Windows::KeyEventRecord","ruby/classes/Reline/Windows/KeyEventRecord.html#method-c-new","(virtual_key_code, char_code, control_key_state)","",null,1],["new","Reline::Windows::Win32API","ruby/classes/Reline/Windows/Win32API.html#method-c-new","(dllname, func, import, export = \"0\", calltype = :stdcall)","",null,1],["new","Resolv","ruby/classes/Resolv.html#method-c-new","(resolvers=nil, use_ipv6: nil)","<p>Creates a new Resolv using <code>resolvers</code>.\n",null,1],["new","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-c-new","(config_info=nil)","<p>Creates a new DNS resolver.\n<p><code>config_info</code> can be:\n<p>nil &mdash; Uses /etc/resolv.conf.\n",null,1],["new","Resolv::DNS::Resource::DomainName","ruby/classes/Resolv/DNS/Resource/DomainName.html#method-c-new","(name)","<p>Creates a new DomainName from <code>name</code>.\n",null,1],["new","Resolv::DNS::Resource::Generic","ruby/classes/Resolv/DNS/Resource/Generic.html#method-c-new","(data)","<p>Creates a new generic resource.\n",null,1],["new","Resolv::DNS::Resource::HINFO","ruby/classes/Resolv/DNS/Resource/HINFO.html#method-c-new","(cpu, os)","<p>Creates a new HINFO running <code>os</code> on <code>cpu</code>.\n",null,1],["new","Resolv::DNS::Resource::IN::A","ruby/classes/Resolv/DNS/Resource/IN/A.html#method-c-new","(address)","<p>Creates a new A for <code>address</code>.\n",null,1],["new","Resolv::DNS::Resource::IN::AAAA","ruby/classes/Resolv/DNS/Resource/IN/AAAA.html#method-c-new","(address)","<p>Creates a new AAAA for <code>address</code>.\n",null,1],["new","Resolv::DNS::Resource::IN::SRV","ruby/classes/Resolv/DNS/Resource/IN/SRV.html#method-c-new","(priority, weight, port, target)","<p>Create a SRV resource record.\n<p>See the documentation for #priority, #weight, #port and #target for <code>priority</code> …\n",null,1],["new","Resolv::DNS::Resource::IN::ServiceBinding","ruby/classes/Resolv/DNS/Resource/IN/ServiceBinding.html#method-c-new","(priority, target, params = [])","<p>Create a service binding resource record.\n",null,1],["new","Resolv::DNS::Resource::IN::WKS","ruby/classes/Resolv/DNS/Resource/IN/WKS.html#method-c-new","(address, protocol, bitmap)","",null,1],["new","Resolv::DNS::Resource::LOC","ruby/classes/Resolv/DNS/Resource/LOC.html#method-c-new","(version, ssize, hprecision, vprecision, latitude, longitude, altitude)","",null,1],["new","Resolv::DNS::Resource::MINFO","ruby/classes/Resolv/DNS/Resource/MINFO.html#method-c-new","(rmailbx, emailbx)","",null,1],["new","Resolv::DNS::Resource::MX","ruby/classes/Resolv/DNS/Resource/MX.html#method-c-new","(preference, exchange)","<p>Creates a new MX record with <code>preference</code>, accepting mail at <code>exchange</code>.\n",null,1],["new","Resolv::DNS::Resource::SOA","ruby/classes/Resolv/DNS/Resource/SOA.html#method-c-new","(mname, rname, serial, refresh, retry_, expire, minimum)","<p>Creates a new SOA record.  See the attr documentation for the details of each argument.\n",null,1],["new","Resolv::DNS::Resource::TXT","ruby/classes/Resolv/DNS/Resource/TXT.html#method-c-new","(first_string, *rest_strings)","",null,1],["new","Resolv::DNS::SvcParam::ALPN","ruby/classes/Resolv/DNS/SvcParam/ALPN.html#method-c-new","(protocol_ids)","<p>Initialize “alpn” ScvParam.\n",null,1],["new","Resolv::DNS::SvcParam::DoHPath","ruby/classes/Resolv/DNS/SvcParam/DoHPath.html#method-c-new","(template)","<p>Initialize “dohpath” ScvParam.\n",null,1],["new","Resolv::DNS::SvcParam::Generic","ruby/classes/Resolv/DNS/SvcParam/Generic.html#method-c-new","(value)","<p>Create generic SvcParam\n",null,1],["new","Resolv::DNS::SvcParam::IPv4Hint","ruby/classes/Resolv/DNS/SvcParam/IPv4Hint.html#method-c-new","(addresses)","<p>Initialize “ipv4hint” ScvParam.\n",null,1],["new","Resolv::DNS::SvcParam::IPv6Hint","ruby/classes/Resolv/DNS/SvcParam/IPv6Hint.html#method-c-new","(addresses)","<p>Initialize “ipv6hint” ScvParam.\n",null,1],["new","Resolv::DNS::SvcParam::Mandatory","ruby/classes/Resolv/DNS/SvcParam/Mandatory.html#method-c-new","(keys)","<p>Initialize “mandatory” ScvParam.\n",null,1],["new","Resolv::DNS::SvcParam::Port","ruby/classes/Resolv/DNS/SvcParam/Port.html#method-c-new","(port)","<p>Initialize “port” ScvParam.\n",null,1],["new","Resolv::DNS::SvcParams","ruby/classes/Resolv/DNS/SvcParams.html#method-c-new","(params = [])","<p>Create a list of SvcParams with the given initial content.\n<p><code>params</code> has to be an enumerable of +SvcParam+s. …\n",null,1],["new","Resolv::Hosts","ruby/classes/Resolv/Hosts.html#method-c-new","(filename = DefaultFileName)","<p>Creates a new Resolv::Hosts, using <code>filename</code> for its data source.\n",null,1],["new","Resolv::LOC::Alt","ruby/classes/Resolv/LOC/Alt.html#method-c-new","(altitude)","",null,1],["new","Resolv::LOC::Coord","ruby/classes/Resolv/LOC/Coord.html#method-c-new","(coordinates,orientation)","",null,1],["new","Resolv::LOC::Size","ruby/classes/Resolv/LOC/Size.html#method-c-new","(scalar)","",null,1],["new","Resolv::MDNS","ruby/classes/Resolv/MDNS.html#method-c-new","(config_info=nil)","<p>Creates a new one-shot Multicast DNS (mDNS) resolver.\n<p><code>config_info</code> can be:\n<p>nil &mdash; Uses the default mDNS addresses …\n",null,1],["new","Rinda::DRbObjectTemplate","ruby/classes/Rinda/DRbObjectTemplate.html#method-c-new","(uri=nil, ref=nil)","<p>Creates a new DRbObjectTemplate that will match against <code>uri</code> and <code>ref</code>.\n",null,1],["new","Rinda::NotifyTemplateEntry","ruby/classes/Rinda/NotifyTemplateEntry.html#method-c-new","(place, event, tuple, expires=nil)","<p>Creates a new NotifyTemplateEntry that watches <code>place</code> for +event+s that match <code>tuple</code>.\n",null,1],["new","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-c-new","(broadcast_list=@@broadcast_list, port=Ring_PORT)","<p>Creates a new RingFinger that will look for RingServers at <code>port</code> on the addresses in <code>broadcast_list</code>.\n<p>If …\n",null,1],["new","Rinda::RingProvider","ruby/classes/Rinda/RingProvider.html#method-c-new","(klass, front, desc, renewer = nil)","<p>Creates a RingProvider that will provide a <code>klass</code> service running on <code>front</code>, with a <code>description</code>.  <code>renewer</code> …\n",null,1],["new","Rinda::RingServer","ruby/classes/Rinda/RingServer.html#method-c-new","(ts, addresses=[Socket::INADDR_ANY], port=Ring_PORT)","<p>Advertises <code>ts</code> on the given <code>addresses</code> at <code>port</code>.\n<p>If <code>addresses</code> is omitted only the UDP broadcast address is …\n",null,1],["new","Rinda::SimpleRenewer","ruby/classes/Rinda/SimpleRenewer.html#method-c-new","(sec=180)","<p>Creates a new SimpleRenewer that keeps an object alive for another <code>sec</code> seconds.\n",null,1],["new","Rinda::Tuple","ruby/classes/Rinda/Tuple.html#method-c-new","(ary_or_hash)","<p>Creates a new Tuple from <code>ary_or_hash</code> which must be an Array or Hash.\n",null,1],["new","Rinda::TupleBag::TupleBin","ruby/classes/Rinda/TupleBag/TupleBin.html#method-c-new","()","",null,1],["new","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-c-new","(ary, sec=nil)","<p>Creates a TupleEntry based on <code>ary</code> with an optional renewer or expiry time <code>sec</code>.\n<p>A renewer must implement …\n",null,1],["new","Rinda::TupleSpace","ruby/classes/Rinda/TupleSpace.html#method-c-new","(period=60)","<p>Creates a new TupleSpace.  <code>period</code> is used to control how often to look for dead tuples after modifications …\n",null,1],["new","Rinda::TupleSpaceProxy","ruby/classes/Rinda/TupleSpaceProxy.html#method-c-new","(ts)","<p>Creates a new TupleSpaceProxy to wrap <code>ts</code>.\n",null,1],["new","Rinda::WaitTemplateEntry","ruby/classes/Rinda/WaitTemplateEntry.html#method-c-new","(place, ary, expires=nil)","",null,1],["new","Ripper::Filter","ruby/classes/Ripper/Filter.html#method-c-new","(src, filename = '-', lineno = 1)","<p>Creates a new Ripper::Filter instance, passes parameters <code>src</code>, <code>filename</code>, and <code>lineno</code> to Ripper::Lexer.new …\n",null,1],["new","Ripper::Lexer::Elem","ruby/classes/Ripper/Lexer/Elem.html#method-c-new","(pos, event, tok, state, message = nil)","",null,1],["new","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-c-new","(i)","",null,1],["new","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-new","(p1, *args, p3 = {})","<p>Takes <code>source</code>, which can be a string of Ruby code, or an open <code>File</code> object. that contains Ruby source code. …\n",null,1],["new","SOCKSSocket","ruby/classes/SOCKSSocket.html#method-c-new","(p1, p2)","<p>Opens a SOCKS connection to <code>host</code> via the SOCKS server.\n<p>The SOCKS server configuration varies by implementation …\n",null,1],["new","SOCKSSocket","ruby/classes/SOCKSSocket.html#method-c-new","(host, serv)","",null,1],["new","Set","ruby/classes/Set.html#method-c-new","(enum = nil)","<p>Creates a new set containing the elements of the given enumerable\nobject.\n<p>If a block is given, the elements …\n",null,1],["new","SignalException","ruby/classes/SignalException.html#method-c-new","(*args)","<p>Construct a new SignalException object.  <code>sig_name</code> should be a known signal name.\n",null,1],["new","Socket","ruby/classes/Socket.html#method-c-new","(p1, p2, p3 = v3)","<p>Creates a new socket object.\n<p><em>domain</em> should be a communications domain such as: :INET, :INET6, :UNIX, etc. …\n",null,1],["new","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-c-new","(p1, p2, p3, p4)","<p><em>family</em> should be an integer, a string or a symbol.\n<p>Socket::AF_INET, “AF_INET”, “INET”, …\n",null,1],["new","Socket::Option","ruby/classes/Socket/Option.html#method-c-new","(p1, p2, p3, p4)","<p>Returns a new Socket::Option object.\n\n<pre><code>sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(&quot;i&quot;)) ...\n</code></pre>\n",null,1],["new","Socket::UDPSource","ruby/classes/Socket/UDPSource.html#method-c-new","(remote_address, local_address, &reply_proc)","<p><code>remote_address</code> is an Addrinfo object.\n<p><code>local_address</code> is an Addrinfo object.\n<p><code>reply_proc</code> is a Proc used to …\n",null,1],["new","String","ruby/classes/String.html#method-c-new","(p1 = v1, p2 = {})","<p>Returns a new String that is a copy of <code>string</code>.\n<p>With no arguments, returns the empty string with the Encoding …\n",null,1],["new","StringIO","ruby/classes/StringIO.html#method-c-new","(*args)","<p>Note that <code>mode</code> defaults to <code>&#39;r&#39;</code> if <code>string</code> is frozen.\n<p>Returns a new StringIO instance formed from …\n",null,1],["new","StringScanner","ruby/classes/StringScanner.html#method-c-new","(p1, p2 = v2)","<p>Creates a new StringScanner object to scan over the given <code>string</code>.\n<p>If <code>fixed_anchor</code> is <code>true</code>, <code>\\A</code> always matches …\n",null,1],["new","Struct","ruby/classes/Struct.html#method-c-new","(*args, p2 = {})","<p><code>Struct.new</code> returns a new subclass of <code>Struct</code>.  The new subclass:\n<p>May be anonymous, or may have the name …\n",null,1],["new","SyntaxError","ruby/classes/SyntaxError.html#method-c-new","(*args)","<p>Construct a SyntaxError exception.\n",null,1],["new","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-c-new","(code_lines:, block:)","",null,1],["new","SyntaxSuggest::BlockExpand","ruby/classes/SyntaxSuggest/BlockExpand.html#method-c-new","(code_lines:)","",null,1],["new","SyntaxSuggest::Capture::BeforeAfterKeywordEnds","ruby/classes/SyntaxSuggest/Capture/BeforeAfterKeywordEnds.html#method-c-new","(code_lines:, block:)","",null,1],["new","SyntaxSuggest::Capture::FallingIndentLines","ruby/classes/SyntaxSuggest/Capture/FallingIndentLines.html#method-c-new","(code_lines:, block:)","",null,1],["new","SyntaxSuggest::CaptureCodeContext","ruby/classes/SyntaxSuggest/CaptureCodeContext.html#method-c-new","(blocks:, code_lines:)","",null,1],["new","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-c-new","(source:)","",null,1],["new","SyntaxSuggest::Cli","ruby/classes/SyntaxSuggest/Cli.html#method-c-new","(argv:, exit_obj: Kernel, io: $stdout, env: ENV)","<p>ARGV is Everything passed to the executable, does not include executable name\n<p>All other intputs are dependency …\n",null,1],["new","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-c-new","(lines: [])","",null,1],["new","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-c-new","(code_lines:, unvisited: UnvisitedLines.new(code_lines: code_lines))","",null,1],["new","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-c-new","(line:, index:, lex:)","",null,1],["new","SyntaxSuggest::CodeSearch","ruby/classes/SyntaxSuggest/CodeSearch.html#method-c-new","(source, record_dir: DEFAULT_VALUE)","",null,1],["new","SyntaxSuggest::DisplayCodeWithLineNumbers","ruby/classes/SyntaxSuggest/DisplayCodeWithLineNumbers.html#method-c-new","(lines:, highlight_lines: [], terminal: false)","",null,1],["new","SyntaxSuggest::DisplayInvalidBlocks","ruby/classes/SyntaxSuggest/DisplayInvalidBlocks.html#method-c-new","(code_lines:, blocks:, io: $stderr, filename: nil, terminal: DEFAULT_VALUE)","",null,1],["new","SyntaxSuggest::ExplainSyntax","ruby/classes/SyntaxSuggest/ExplainSyntax.html#method-c-new","(code_lines:)","",null,1],["new","SyntaxSuggest::LeftRightLexCount","ruby/classes/SyntaxSuggest/LeftRightLexCount.html#method-c-new","()","",null,1],["new","SyntaxSuggest::LexAll","ruby/classes/SyntaxSuggest/LexAll.html#method-c-new","(source:, source_lines: nil)","",null,1],["new","SyntaxSuggest::LexValue","ruby/classes/SyntaxSuggest/LexValue.html#method-c-new","(line, type, token, state, last_lex = nil)","",null,1],["new","SyntaxSuggest::MiniStringIO","ruby/classes/SyntaxSuggest/MiniStringIO.html#method-c-new","(isatty: $stderr.isatty)","",null,1],["new","SyntaxSuggest::ParseBlocksFromIndentLine","ruby/classes/SyntaxSuggest/ParseBlocksFromIndentLine.html#method-c-new","(code_lines:)","",null,1],["new","SyntaxSuggest::PathnameFromMessage","ruby/classes/SyntaxSuggest/PathnameFromMessage.html#method-c-new","(message, io: $stderr)","",null,1],["new","SyntaxSuggest::PriorityEngulfQueue","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html#method-c-new","()","",null,1],["new","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-c-new","()","",null,1],["new","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-c-new","(code_lines:, block:)","",null,1],["new","SyntaxSuggest::UnvisitedLines","ruby/classes/SyntaxSuggest/UnvisitedLines.html#method-c-new","(code_lines:)","",null,1],["new","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-c-new","(program_name = 'ruby', facility = nil)","<p>Fills in variables for Logger compatibility.  If this is the first instance of Syslog::Logger, <code>program_name</code> …\n",null,1],["new","SystemCallError","ruby/classes/SystemCallError.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>If <em>errno</em> corresponds to a known system error code, constructs the appropriate Errno class for that error, …\n",null,1],["new","SystemExit","ruby/classes/SystemExit.html#method-c-new","(*args)","<p>Create a new <code>SystemExit</code> exception with the given status and message. Status is true, false, or an integer. …\n",null,1],["new","TCPServer","ruby/classes/TCPServer.html#method-c-new","(p1 = v1, p2)","<p>Creates a new server socket bound to <em>port</em>.\n<p>If <em>hostname</em> is given, the socket is bound to it.\n\n<pre><code>serv = TCPServer.new(&quot;127.0.0.1&quot;, ...\n</code></pre>\n",null,1],["new","TCPSocket","ruby/classes/TCPSocket.html#method-c-new","(host, serv, *rest)","",null,1],["new","TCPSocket","ruby/classes/TCPSocket.html#method-c-new","(p1, p2, p3 = v3, p4 = v4, p5 = {})","<p>Opens a TCP connection to <code>remote_host</code> on <code>remote_port</code>.  If <code>local_host</code> and <code>local_port</code> are specified, then …\n",null,1],["new","Tempfile","ruby/classes/Tempfile.html#method-c-new","(basename=\"\", tmpdir=nil, mode: 0, **options)","<p>Creates a file in the underlying file system; returns a new Tempfile object based on that file.\n<p>If possible, …\n",null,1],["new","Thread","ruby/classes/Thread.html#method-c-new","(*args)","<p>Creates a new thread executing the given block.\n<p>Any <code>args</code> given to ::new will be passed to the block:\n\n<pre><code>arr ...\n</code></pre>\n",null,1],["new","Thread::ConditionVariable","ruby/classes/Thread/ConditionVariable.html#method-c-new","()","<p>Creates a new condition variable instance.\n",null,1],["new","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-c-new","()","<p>Creates a new Mutex\n",null,1],["new","Thread::Queue","ruby/classes/Thread/Queue.html#method-c-new","(p1 = v1)","<p>Creates a new queue instance, optionally using the contents of an <code>enumerable</code> for its initial state.\n<p>Example: …\n",null,1],["new","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-c-new","(p1)","<p>Creates a fixed-length queue with a maximum size of <code>max</code>.\n",null,1],["new","Time","ruby/classes/Time.html#method-c-new","(year = (now = true), mon = (str = year; nil), mday = nil, hour = nil, min = nil, sec = nil, zone = nil, in: nil, precision: 9)","<p>Returns a new <code>Time</code> object based on the given arguments, by default in the local timezone.\n<p>With no positional …\n",null,1],["new","TracePoint","ruby/classes/TracePoint.html#method-c-new","(*events)","<p>Returns a new TracePoint object, not enabled by default.\n<p>Next, in order to activate the trace, you must …\n",null,1],["new","UDPSocket","ruby/classes/UDPSocket.html#method-c-new","(p1 = v1)","<p>Creates a new UDPSocket object.\n<p><em>address_family</em> should be an integer, a string or a symbol: Socket::AF_INET …\n",null,1],["new","UNIXServer","ruby/classes/UNIXServer.html#method-c-new","(p1)","<p>Creates a new UNIX server socket bound to <em>path</em>.\n\n<pre><code>require &#39;socket&#39;\n\nserv = UNIXServer.new(&quot;/tmp/sock&quot;)\ns ...\n</code></pre>\n",null,1],["new","UNIXSocket","ruby/classes/UNIXSocket.html#method-c-new","(p1)","<p>Creates a new UNIX client socket connected to <em>path</em>.\n\n<pre><code>require &#39;socket&#39;\n\ns = UNIXSocket.new(&quot;/tmp/sock&quot;) ...\n</code></pre>\n",null,1],["new","URI::FTP","ruby/classes/URI/FTP.html#method-c-new","(scheme, userinfo, host, port, registry, path, opaque, query, fragment, parser = nil, arg_check = false)","<p>Description\n<p>Creates a new URI::FTP object from generic URL components with no syntax checking.\n<p>Unlike build(), …\n",null,1],["new","URI::Generic","ruby/classes/URI/Generic.html#method-c-new","(scheme, userinfo, host, port, registry, path, opaque, query, fragment, parser = DEFAULT_PARSER, arg_check = false)","<p>Args\n<p><code>scheme</code> &mdash; Protocol scheme, i.e. ‘http’,‘ftp’,‘mailto’ and so on.\n<p><code>userinfo</code> &mdash; User …\n",null,1],["new","URI::LDAP","ruby/classes/URI/LDAP.html#method-c-new","(*arg)","<p>Description\n<p>Creates a new URI::LDAP object from generic URI components as per RFC 2396. No LDAP-specific …\n",null,1],["new","URI::MailTo","ruby/classes/URI/MailTo.html#method-c-new","(*arg)","<p>Description\n<p>Creates a new URI::MailTo object from generic URL components with no syntax checking.\n<p>This …\n",null,1],["new","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-c-new","(opts = {})","<p>Synopsis\n\n<pre><code>URI::Parser.new([opts])\n</code></pre>\n<p>Args\n",null,1],["new","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-c-new","(opts = {})","<p>Synopsis\n\n<pre><code>URI::Parser.new([opts])\n</code></pre>\n<p>Args\n",null,1],["new","UncaughtThrowError","ruby/classes/UncaughtThrowError.html#method-c-new","(*args)","<p>Document-class: UncaughtThrowError\n<p>Raised when <code>throw</code> is called with a <em>tag</em> which does not have corresponding …\n",null,1],["new","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-new","(p1, p2 = v2, *args, p4 = {})","<p>Returns a new WIN32OLE object(OLE Automation object). The first argument server specifies OLE Automation …\n",null,1],["new","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-c-new","(*args)","<p>Returns OLE event object. The first argument specifies WIN32OLE object. The second argument specifies …\n",null,1],["new","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_METHOD object which represents the information about OLE method. The first argument …\n",null,1],["new","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-c-new","(p1, p2)","<p>Returns WIN32OLE_PARAM object which represents OLE parameter information. 1st argument should be WIN32OLE_METHOD …\n",null,1],["new","WIN32OLE::Record","ruby/classes/WIN32OLE/Record.html#method-c-new","(p1, p2)","<p>Returns WIN32OLE_RECORD object. The first argument is struct name (String or Symbol). The second parameter …\n",null,1],["new","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-c-new","(p1, p2)","<p>Returns a new WIN32OLE_TYPE object. The first argument <em>typelib</em> specifies OLE type library name. The second …\n",null,1],["new","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-c-new","(*args)","<p>Returns a new WIN32OLE_TYPELIB object.\n<p>The first argument <em>typelib</em>  specifies OLE type library name or …\n",null,1],["new","WIN32OLE::Variant","ruby/classes/WIN32OLE/Variant.html#method-c-new","(*args)","<p>Returns Ruby object wrapping OLE variant. The first argument specifies Ruby object to convert OLE variant …\n",null,1],["new","WeakRef","ruby/classes/WeakRef.html#method-c-new","(orig)","<p>Creates a weak reference to <code>orig</code>\n",null,1],["new","Win32::Registry","ruby/classes/Win32/Registry.html#method-c-new","(hkey, parent, keyname, disposition)","<p>initialize\n",null,1],["new","Win32::Registry::Error","ruby/classes/Win32/Registry/Error.html#method-c-new","(code)","",null,1],["new","Win32::Registry::PredefinedKey","ruby/classes/Win32/Registry/PredefinedKey.html#method-c-new","(hkey, keyname)","",null,1],["new","Win32::SSPI::Identity","ruby/classes/Win32/SSPI/Identity.html#method-c-new","(user = nil, domain = nil, password = nil)","",null,1],["new","Win32::SSPI::NegotiateAuth","ruby/classes/Win32/SSPI/NegotiateAuth.html#method-c-new","(user = nil, domain = nil)","<p>Creates a new instance ready for authentication as the given user in the given domain. Defaults to current …\n",null,1],["new","Win32::SSPI::SSPIResult","ruby/classes/Win32/SSPI/SSPIResult.html#method-c-new","(value)","",null,1],["new","Win32::SSPI::SecurityBuffer","ruby/classes/Win32/SSPI/SecurityBuffer.html#method-c-new","(buffer = nil)","",null,1],["new","XMP","ruby/classes/XMP.html#method-c-new","(bind = nil)","<p>Creates a new XMP object.\n<p>The top-level binding or, optional <code>bind</code> parameter will be used when creating …\n",null,1],["new","XMP::StringInputMethod","ruby/classes/XMP/StringInputMethod.html#method-c-new","()","<p>Creates a new StringInputMethod object\n",null,1],["new","YAML::Store","ruby/classes/YAML/Store.html#method-c-new","( *o )","<p>Creates a new YAML::Store object, which will store data in <code>file_name</code>. If the file does not already exist, …\n",null,1],["new","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-c-new","(p1 = v1, p2 = v2, p3 = v3, p4 = v4)","<p>Creates a new deflate stream for compression. If a given argument is nil, the default value of that argument …\n",null,1],["new","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-c-new","(p1, p2 = {})","<p>Creates a GzipReader object associated with <code>io</code>. The GzipReader object reads gzipped data from <code>io</code>, and …\n",null,1],["new","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates a GzipWriter object associated with <code>io</code>. <code>level</code> and <code>strategy</code> should be the same as the arguments …\n",null,1],["new","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-c-new","(p1 = v1)","<p>Creates a new inflate stream for decompression.  <code>window_bits</code> sets the size of the history buffer and …\n",null,1],["new.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/scaffold/templates/new_html_erb_tt.html","","<p>&lt;h1&gt;New &lt;%= human_name.downcase %&gt;&lt;/h1&gt;\n<p>&lt;%%= render “form”, &lt;%= singular_table_name …\n",null,0],["new_client","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-c-new_client","(config)","",null,0],["new_client","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-new_client","(conn_params)","",null,0],["new_comment","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-new_comment","(text = nil, location = nil, language = nil)","<p>Creates a RDoc::Comment instance.\n",null,1],["new_comment","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-new_comment","(comment, line_no = nil)","<p>Creates a comment with the correct format\n",null,1],["new_cond","Monitor","ruby/classes/Monitor.html#method-i-new_cond","()","",null,1],["new_cond","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-new_cond","()","<p>Creates a new MonitorMixin::ConditionVariable associated with the Monitor object.\n",null,1],["new_framework_defaults_7_0.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_0_rb_tt.html","","<p># Be sure to restart your server when you modify this file. # # This file eases your Rails 7.0 framework …\n",null,0],["new_helper","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-new_helper","(type: :url)","",null,0],["new_ntoh","IPAddr","ruby/classes/IPAddr.html#method-c-new_ntoh","(addr)","<p>Creates a new ipaddr containing the given network byte ordered string form of an IP address.\n",null,1],["new_offset","DateTime","ruby/classes/DateTime.html#method-i-new_offset","(p1 = v1)","<p>Duplicates self and resets its offset.\n\n<pre><code>d = DateTime.new(2001,2,3,4,5,6,&#39;-02:00&#39;)\n                     ...\n</code></pre>\n",null,1],["new_raw_private_key","OpenSSL::PKey","ruby/classes/OpenSSL/PKey.html#method-c-new_raw_private_key","(p1, p2)","<p>See the OpenSSL documentation for EVP_PKEY_new_raw_private_key()\n",null,1],["new_raw_public_key","OpenSSL::PKey","ruby/classes/OpenSSL/PKey.html#method-c-new_raw_public_key","(p1, p2)","<p>See the OpenSSL documentation for EVP_PKEY_new_raw_public_key()\n",null,1],["new_record?","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-new_record-3F","()","<p>Returns true if this object hasn’t been saved yet – that is, a record for the object doesn’t …\n",null,0],["new_seed","Random","ruby/classes/Random.html#method-c-new_seed","()","<p>Returns an arbitrary seed value. This is used by Random.new when no seed value is specified as an argument. …\n",null,1],["new_session","Rails::ConsoleMethods","rails/classes/Rails/ConsoleMethods.html#method-i-new_session","()","<p>create a new session. If a block is given, the new session will be yielded to the block before being …\n",null,0],["new_start","Date","ruby/classes/Date.html#method-i-new_start","(p1 = v1)","<p>Returns a copy of <code>self</code> with the given <code>start</code> value:\n\n<pre><code>d0 = Date.new(2000, 2, 3)\nd0.julian? # =&gt; false\nd1 ...\n</code></pre>\n",null,1],["new_with","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-new_with","(uri, ref)","<p>Creates a DRb::DRbObject given the reference information to the remote host <code>uri</code> and object <code>ref</code>.\n",null,1],["new_with","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-new_with","(uri, ref)","<p>Creates a DRb::DRbObject given the reference information to the remote host <code>uri</code> and object <code>ref</code>.\n",null,1],["new_with_uri","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-new_with_uri","(uri)","<p>Create a new DRbObject from a URI alone.\n",null,1],["new_with_uri","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-c-new_with_uri","(uri)","<p>Create a new DRbObject from a URI alone.\n",null,1],["newlines","Prism::Debug","ruby/classes/Prism/Debug.html#method-c-newlines","(source)","<p>For the given source string, return the byte offsets of every newline in the source.\n",null,1],["newobj","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-newobj","(address, port = nil, p_addr = :ENV, p_port = nil, p_user = nil, p_pass = nil, p_no_proxy = nil)","",null,1],["next","Date","ruby/classes/Date.html#method-i-next","()","<p>Returns a new Date object representing the following day:\n\n<pre><code>d = Date.new(2001, 2, 3)\nd.to_s      # =&gt; &quot;2001-02-03&quot; ...\n</code></pre>\n",null,1],["next","Enumerator","ruby/classes/Enumerator.html#method-i-next","()","<p>Returns the next object in the enumerator, and move the internal position forward.  When the position …\n",null,1],["next","Integer","ruby/classes/Integer.html#method-i-next","()","<p>Returns the successor integer of <code>self</code> (equivalent to <code>self + 1</code>):\n\n<pre><code>1.succ  #=&gt; 2\n-1.succ #=&gt; 0\n</code></pre>\n<p>Related: Integer#pred …\n",null,1],["next","String","ruby/classes/String.html#method-i-next","()","<p>Returns the successor to <code>self</code>. The successor is calculated by incrementing characters.\n<p>The first character …\n",null,1],["next","Symbol","ruby/classes/Symbol.html#method-i-next","()","<p>Equivalent to <code>self.to_s.succ.to_sym</code>:\n\n<pre><code>:foo.succ # =&gt; :fop\n</code></pre>\n<p>Related: String#succ.\n",null,1],["next!","String","ruby/classes/String.html#method-i-next-21","()","<p>Equivalent to String#succ, but modifies <code>self</code> in place; returns <code>self</code>.\n",null,1],["next5","Gem::Resolver::RequirementList","ruby/classes/Gem/Resolver/RequirementList.html#method-i-next5","()","<p>Returns the oldest five entries from the list.\n",null,1],["next_day","Time","rails/classes/Time.html#method-i-next_day","(days = 1)","<p>Returns a new time the specified number of days in the future.\n",null,0],["next_day","Date","ruby/classes/Date.html#method-i-next_day","(p1 = v1)","<p>Equivalent to Date#+ with argument <code>n</code>.\n",null,1],["next_day?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-next_day-3F","()","",null,0],["next_day?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-next_day-3F","()","",null,0],["next_down","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-next_down","()","",null,1],["next_float","Float","ruby/classes/Float.html#method-i-next_float","()","<p>Returns the next-larger representable Float.\n<p>These examples show the internally stored values (64-bit …\n",null,1],["next_history","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-next_history","(key, arg: 1)","",null,1],["next_indent_line","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-next_indent_line","()","",null,1],["next_migration_number","ActiveRecord::Generators::Migration::ClassMethods","rails/classes/ActiveRecord/Generators/Migration/ClassMethods.html#method-i-next_migration_number","(dirname)","<p>Implement the required interface for Rails::Generators::Migration.\n",null,0],["next_migration_number","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-next_migration_number","(number)","<p>Determines the version number of the next migration.\n",null,0],["next_month","Time","rails/classes/Time.html#method-i-next_month","(months = 1)","<p>Returns a new time the specified number of months in the future.\n",null,0],["next_month","Date","ruby/classes/Date.html#method-i-next_month","(p1 = v1)","<p>Equivalent to #>> with argument <code>n</code>.\n",null,1],["next_occurring","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-next_occurring","(day_of_week)","<p>Returns a new date/time representing the next occurrence of the specified day of week.\n\n<pre><code>today = Date.today ...\n</code></pre>\n",null,0],["next_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-next_quarter","()","<p>Short-hand for <code>months_since(3)</code>.\n",null,0],["next_rotate_time","Logger::Period","ruby/classes/Logger/Period.html#method-i-next_rotate_time","(now, shift_age)","",null,1],["next_sequence_value","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-next_sequence_value","()","<p>Returns the next value that will be used as the primary key on an insert statement.\n",null,0],["next_token","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-next_token","()","",null,1],["next_up","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-next_up","()","",null,1],["next_update","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-next_update","()","",null,1],["next_update","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-next_update","()","",null,1],["next_update=","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-next_update-3D","(p1)","",null,1],["next_values","Enumerator","ruby/classes/Enumerator.html#method-i-next_values","()","<p>Returns the next object as an array in the enumerator, and move the internal position forward.  When …\n",null,1],["next_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-next_week","(given_day_in_next_week = Date.beginning_of_week, same_time: false)","<p>Returns a new date/time representing the given day in the next week.\n\n<pre><code>today = Date.today # =&gt; Thu, 07 May ...\n</code></pre>\n",null,0],["next_weekday","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-next_weekday","()","<p>Returns a new date/time representing the next weekday.\n",null,0],["next_year","Time","rails/classes/Time.html#method-i-next_year","(years = 1)","<p>Returns a new time the specified number of years in the future.\n",null,0],["next_year","Date","ruby/classes/Date.html#method-i-next_year","(p1 = v1)","<p>Equivalent to #>> with argument <code>n * 12</code>.\n",null,1],["nil?","Mime::NullType","rails/classes/Mime/NullType.html#method-i-nil-3F","()","",null,0],["nil?","NilClass","ruby/classes/NilClass.html#method-i-nil-3F","()","<p>Returns <code>true</code>. For all other objects, method <code>nil?</code> returns <code>false</code>.\n",null,1],["nil?","Object","ruby/classes/Object.html#method-i-nil-3F","()","<p>Only the object <em>nil</em> responds <code>true</code> to <code>nil?</code>.\n\n<pre><code>Object.new.nil?   #=&gt; false\nnil.nil?          #=&gt; true\n</code></pre>\n",null,1],["nkf","NKF","ruby/classes/NKF.html#method-c-nkf","(p1, p2)","<p>Convert <em>str</em> and return converted result. Conversion details are specified by <em>opt</em> as String.\n\n<pre><code>require &#39;nkf&#39; ...\n</code></pre>\n",null,1],["nlink","File::Stat","ruby/classes/File/Stat.html#method-i-nlink","()","<p>Returns the number of hard links to <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).nlink             #=&gt; 1\nFile.link(&quot;testfile&quot;, ...\n</code></pre>\n",null,1],["nlsolve","Newton","ruby/classes/Newton.html#method-i-nlsolve","(f,x)","<p>See also Newton\n",null,1],["no_routes","ActionDispatch::Routing::ConsoleFormatter::Base","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Base.html#method-i-no_routes","(routes, filter)","",null,0],["no_routes","ActionDispatch::Routing::HtmlTableFormatter","rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-no_routes","(*)","",null,0],["no_store","ActionController::ConditionalGet","rails/classes/ActionController/ConditionalGet.html#method-i-no_store","()","<p>Sets an HTTP 1.1 <code>Cache-Control</code> header of <code>no-store</code>. This means the resource may not be stored in any cache. …\n",null,0],["no_touching","ActiveRecord::NoTouching::ClassMethods","rails/classes/ActiveRecord/NoTouching/ClassMethods.html#method-i-no_touching","(&block)","<p>Lets you selectively disable calls to <code>touch</code> for the duration of a block.\n<p>Examples\n\n<pre><code>ActiveRecord::Base.no_touching ...\n</code></pre>\n",null,0],["no_touching?","ActiveRecord::NoTouching","rails/classes/ActiveRecord/NoTouching.html#method-i-no_touching-3F","()","<p>Returns <code>true</code> if the class has <code>no_touching</code> set, <code>false</code> otherwise.\n\n<pre><code>Project.no_touching do\n  Project.first.no_touching? ...\n</code></pre>\n",null,0],["nobits?","Integer","ruby/classes/Integer.html#method-i-nobits-3F","(p1)","<p>Returns <code>true</code> if no bit that is set (=1) in <code>mask</code> is also set in <code>self</code>; returns <code>false</code> otherwise.\n<p>Example …\n",null,1],["nobits?","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-nobits-3F","(i)","",null,1],["node_id","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-node_id","()","<p>Returns an internal node_id number. Note that this is an API for ruby internal use, debugging, and research. …\n",null,1],["node_id_for_backtrace_location","RubyVM::AbstractSyntaxTree","ruby/classes/RubyVM/AbstractSyntaxTree.html#method-c-node_id_for_backtrace_location","(backtrace_location)","<p>Returns the node id for the given backtrace location.\n\n<pre><code>begin\n  raise\nrescue =&gt;  e\n  loc = e.backtrace_locations.first ...\n</code></pre>\n",null,1],["node_to_html","ActionText::HtmlConversion","rails/classes/ActionText/HtmlConversion.html#method-i-node_to_html","(node)","",null,0],["node_to_plain_text","ActionText::PlainTextConversion","rails/classes/ActionText/PlainTextConversion.html#method-i-node_to_plain_text","(node)","",null,0],["noecho","IO","ruby/classes/IO.html#method-i-noecho","()","<p>Yields <code>self</code> with disabling echo back.\n\n<pre><code>STDIN.noecho(&amp;:gets)\n</code></pre>\n<p>will read and return a line without echo back. …\n",null,1],["non_aliases","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-non_aliases","()","<p>Returns the classes and modules that are not constants aliasing another class or module. For use by formatters …\n",null,1],["non_nil_attributes","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-non_nil_attributes","()","<p>Specification attributes that must be non-nil\n",null,1],["non_xhr_javascript_response?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-non_xhr_javascript_response-3F","()","<p>Check for cross-origin JavaScript responses.\n",null,0],["nonblock","IO","ruby/classes/IO.html#method-i-nonblock","(p1 = v1)","<p>Yields <code>self</code> in non-blocking mode.\n<p>When <code>false</code> is given as an argument, <code>self</code> is yielded in blocking mode. …\n",null,1],["nonblock=","IO","ruby/classes/IO.html#method-i-nonblock-3D","(p1)","<p>Enables non-blocking mode on a stream when set to <code>true</code>, and blocking mode when set to <code>false</code>.\n<p>This method …\n",null,1],["nonblock?","IO","ruby/classes/IO.html#method-i-nonblock-3F","()","<p>Returns <code>true</code> if an IO object is in non-blocking mode.\n",null,1],["nonce","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-nonce","(secret_key, time = Time.now)","<p>Uses an MD5 digest based on time to generate a value to be used only once.\n<p>A server-specified data string …\n",null,0],["nonce","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-nonce","()","<p>Returns the nonce (number used once) that the server shall include in its response.\n",null,1],["nonce","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-nonce","()","<p>If the timestamp token is valid then this field contains the same nonce that was passed to the timestamp …\n",null,1],["nonce=","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-nonce-3D","(p1)","<p>Sets the nonce (number used once) that the server shall include in its response. If the nonce is set, …\n",null,1],["none","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-none","()","<p>Returns a chainable relation with zero records.\n<p>The returned relation implements the Null Object pattern. …\n",null,0],["none?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-none-3F","()","<p>Returns true if there are no records.\n",null,0],["none?","Array","ruby/classes/Array.html#method-i-none-3F","(*args)","<p>Returns <code>true</code> if no element of <code>self</code> meet a given criterion.\n<p>With no block given and no argument, returns …\n",null,1],["none?","Enumerable","ruby/classes/Enumerable.html#method-i-none-3F","(*args)","<p>Returns whether no element meets a given criterion.\n<p>With no argument and no block, returns whether no …\n",null,1],["none?","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-none-3F","()","<p>true if this gem has no requirements.\n",null,1],["nonzero?","BigDecimal","ruby/classes/BigDecimal.html#method-i-nonzero-3F","()","<p>Returns self if the value is non-zero, nil otherwise.\n",null,1],["nonzero?","Numeric","ruby/classes/Numeric.html#method-i-nonzero-3F","()","<p>Returns <code>self</code> if <code>self</code> is not a zero value, <code>nil</code> otherwise; uses method <code>zero?</code> for the evaluation.\n<p>The returned …\n",null,1],["noon","Date","rails/classes/Date.html#method-i-noon","()","",null,0],["noon","DateTime","rails/classes/DateTime.html#method-i-noon","()","",null,0],["noon","Time","rails/classes/Time.html#method-i-noon","()","",null,0],["normalize","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-normalize","()","<p>Normalize the list of files so that:\n<p>All file lists have redundancies removed.\n<p>Files referenced in the …\n",null,1],["normalize","Gem::UriFormatter","ruby/classes/Gem/UriFormatter.html#method-i-normalize","()","<p>Normalize the URI by adding “http://” if it is missing.\n",null,1],["normalize","IRB::Vec","ruby/classes/IRB/Vec.html#method-i-normalize","()","",null,1],["normalize","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-normalize","()","<p>Normalizes the text.  See RDoc::Text#normalize_comment for details\n",null,1],["normalize","URI::Generic","ruby/classes/URI/Generic.html#method-i-normalize","()","<p>Returns normalized URI.\n\n<pre><code>require &#39;uri&#39;\n\nURI(&quot;HTTP://my.EXAMPLE.com&quot;).normalize\n#=&gt; #&lt;URI::HTTP http://my.example.com/&gt;\n</code></pre>\n",null,1],["normalize!","URI::Generic","ruby/classes/URI/Generic.html#method-i-normalize-21","()","<p>Destructive version of #normalize.\n",null,1],["normalize_action_path","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-normalize_action_path","(action_path)","",null,0],["normalize_comment","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-normalize_comment","(text)","<p>Strips hashes, expands tabs then flushes <code>text</code> to the left\n",null,1],["normalize_name","ActionDispatch::Routing::Mapper","rails/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_name","(name)","",null,0],["normalize_path","ActionDispatch::Routing::Mapper","rails/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_path","(path)","<p>Invokes Journey::Router::Utils.normalize_path, then ensures that /(:locale) becomes (/:locale). Except …\n",null,0],["normalize_path","Gem::Package","ruby/classes/Gem/Package.html#method-i-normalize_path","(pathname)","",null,1],["normalize_yaml_input","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-normalize_yaml_input","(input)","<p>Make sure the YAML specification is properly formatted with dashes\n",null,1],["normalized_file_list","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-normalized_file_list","(relative_files, force_doc = false, exclude_pattern = nil)","<p>Given a list of files and directories, create a list of all the Ruby files they contain.\n<p>If <code>force_doc</code> …\n",null,1],["normalized_linux_version","Gem::Platform","ruby/classes/Gem/Platform.html#method-i-normalized_linux_version","()","",null,1],["not","ActiveRecord::QueryMethods::WhereChain","rails/classes/ActiveRecord/QueryMethods/WhereChain.html#method-i-not","(opts, *rest)","<p>Returns a new relation expressing WHERE + NOT condition according to the conditions in the arguments. …\n",null,0],["not!","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-not-21","()","<p>Modify the source buffer in place by applying the binary NOT operation to the source.\n\n<pre><code>source = IO::Buffer.for(&quot;1234567890&quot;).dup ...\n</code></pre>\n",null,1],["not_after","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_after","()","",null,1],["not_after=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_after-3D","(p1)","",null,1],["not_before","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_before","()","",null,1],["not_before=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-not_before-3D","(p1)","",null,1],["not_empty?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-not_empty-3F","()","<p>Opposite of ‘empty?` (note: different than `visible?`)\n",null,1],["not_found","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-not_found","(generator, req, res, message = nil)","<p>Returns a 404 page built by <code>generator</code> for <code>req</code> on <code>res</code>.\n",null,1],["not_modified?","ActionDispatch::Http::Cache::Request","rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-not_modified-3F","(modified_at)","",null,0],["note","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-note","(label)","<p>Stores <code>label</code> as a note and fills in previously unknown note references.\n",null,1],["note_for","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-note_for","(ref)","<p>Creates a new link for the footnote <code>reference</code> and adds the reference to\nthe note order list for proper ...\n",null,1],["notes","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-notes","","<p>Enables the notes extension\n",null,1],["notice","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice","()","<p>Convenience accessor for <code>flash[:notice]</code>.\n",null,0],["notice=","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice-3D","(message)","<p>Convenience accessor for <code>flash[:notice]=</code>.\n",null,0],["notify","Rinda::NotifyTemplateEntry","ruby/classes/Rinda/NotifyTemplateEntry.html#method-i-notify","(ev)","<p>Called by TupleSpace to notify this NotifyTemplateEntry of a new event.\n",null,1],["notify","Rinda::TupleSpace","ruby/classes/Rinda/TupleSpace.html#method-i-notify","(event, tuple, sec=nil)","<p>Registers for notifications of <code>event</code>.  Returns a NotifyTemplateEntry. See NotifyTemplateEntry for examples …\n",null,1],["notify","Rinda::TupleSpaceProxy","ruby/classes/Rinda/TupleSpaceProxy.html#method-i-notify","(ev, tuple, sec=nil)","<p>Registers for notifications of event <code>ev</code> on the proxied TupleSpace. See TupleSpace#notify\n",null,1],["notify?","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-notify-3F","()","<p>A wrapper method used to determine whether notifications are enabled.\n<p>Defaults to <code>true</code>.\n",null,1],["notify?","IRB::Notifier::LeveledNotifier","ruby/classes/IRB/Notifier/LeveledNotifier.html#method-i-notify-3F","()","<p>Whether to output messages to the output method, depending on the level of this notifier object.\n",null,1],["notify?","IRB::Notifier::NoMsgNotifier","ruby/classes/IRB/Notifier/NoMsgNotifier.html#method-i-notify-3F","()","<p>Ensures notifications are ignored, see AbstractNotifier#notify? for more information.\n",null,1],["notify_observers","DRb::DRbObservable","ruby/classes/DRb/DRbObservable.html#method-i-notify_observers","(*arg)","<p>Notifies observers of a change in state.  See also Observable#notify_observers\n",null,1],["notify_observers","Observable","ruby/classes/Observable.html#method-i-notify_observers","(*arg)","<p>Notify observers of a change in state <strong>if</strong> this object’s changed state is <code>true</code>.\n<p>This will invoke the …\n",null,1],["now","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-now","()","<p>Sets a flash that will not be available to the next action, only to the current.\n\n<pre><code>flash.now[:message] = ...\n</code></pre>\n",null,0],["now","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-now","()","<p>Returns an ActiveSupport::TimeWithZone instance representing the current time in the time zone represented …\n",null,0],["now","DateTime","ruby/classes/DateTime.html#method-c-now","(p1 = v1)","<p>Creates a DateTime object denoting the present time.\n\n<pre><code>DateTime.now              #=&gt; #&lt;DateTime: 2011-06-11T21:20:44+09:00 ...\n</code></pre>\n",null,1],["now","Time","ruby/classes/Time.html#method-c-now","(in: nil)","<p>Creates a new <code>Time</code> object from the current system time. This is the same as Time.new without arguments. …\n",null,1],["now_is_loaded?","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-now_is_loaded-3F","()","",null,0],["npn_protocol","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-npn_protocol","()","<p>Returns the protocol string that was finally selected by the client during the handshake.\n",null,1],["nprocessors","Etc","ruby/classes/Etc.html#method-c-nprocessors","()","<p>Returns the number of online processors.\n<p>The result is intended as the number of processes to use all …\n",null,1],["nread","IO","ruby/classes/IO.html#method-i-nread","()","<p>Returns number of bytes that can be read without blocking. Returns zero if no information available. …\n",null,1],["nsec","DateTime","rails/classes/DateTime.html#method-i-nsec","()","<p>Returns the fraction of a second as nanoseconds\n",null,0],["nsec","Time","ruby/classes/Time.html#method-i-nsec","()","<p>Returns the number of nanoseconds in the subseconds part of <code>self</code> in the range (0..999_999_999); lower-order …\n",null,1],["ntop","IPAddr","ruby/classes/IPAddr.html#method-c-ntop","(addr)","<p>Convert a network byte ordered string form of an IP address into human readable form.\n",null,1],["null","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-c-null","()","<p>A null NameTuple, ie name=nil, version=0\n",null,1],["null","Prism::Location","ruby/classes/Prism/Location.html#method-c-null","()","<p>Returns a null location that does not correspond to a source and points to the beginning of the file. …\n",null,1],["null?","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-null-3F","()","<p>Returns <code>true</code> if this is a null pointer.\n",null,1],["null?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-null-3F","()","<p>If the buffer was freed with #free, transferred with #transfer, or was never allocated in the first place. …\n",null,1],["nullify!","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-nullify-21","()","",null,0],["num_bits","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-num_bits","()","",null,1],["num_bytes","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-num_bytes","()","",null,1],["num_waiting","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-num_waiting","()","<p>Returns the number of threads currently waiting on this queue.\n",null,0],["num_waiting","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n",null,1],["num_waiting","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-num_waiting","()","<p>Returns the number of threads waiting on the queue.\n",null,1],["number_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-number_field","","<p>Wraps ActionView::Helpers::FormHelper#number_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["number_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-number_field","(object_name, method, options = {})","<p>Returns an input tag of type “number”.\n<p>Options\n<p>Supports the same options as FormTagHelper#number_field_tag …\n",null,0],["number_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-number_field_tag","(name, value = nil, options = {})","<p>Creates a number field.\n<p>Options\n<p>Supports the same options as #text_field_tag. Additionally, supports:\n",null,0],["number_to_currency","ActionView::Helpers::NumberHelper","rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_currency","(number, options = {})","<p>Formats a <code>number</code> into a currency string (e.g., $13.65). You can customize the format in the <code>options</code> hash. …\n",null,0],["number_to_currency","ActiveSupport::NumberHelper","rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_currency","(number, options = {})","<p>Formats a <code>number</code> into a currency string (e.g., $13.65). You can customize the format in the <code>options</code> hash. …\n",null,0],["number_to_delimited","ActiveSupport::NumberHelper","rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_delimited","(number, options = {})","<p>Formats a <code>number</code> with grouped thousands using <code>delimiter</code> (e.g., 12,324). You can customize the format …\n",null,0],["number_to_human","ActionView::Helpers::NumberHelper","rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human","(number, options = {})","<p>Pretty prints (formats and approximates) a number in a way it is more readable by humans (e.g.: 1200000000 …\n",null,0],["number_to_human","ActiveSupport::NumberHelper","rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_human","(number, options = {})","<p>Pretty prints (formats and approximates) a number in a way it is more readable by humans (e.g.: 1200000000 …\n",null,0],["number_to_human_size","ActionView::Helpers::NumberHelper","rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human_size","(number, options = {})","<p>Formats the bytes in <code>number</code> into a more understandable representation (e.g., giving it 1500 yields 1.46 …\n",null,0],["number_to_human_size","ActiveSupport::NumberHelper","rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_human_size","(number, options = {})","<p>Formats the bytes in <code>number</code> into a more understandable representation (e.g., giving it 1500 yields 1.46 …\n",null,0],["number_to_percentage","ActionView::Helpers::NumberHelper","rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_percentage","(number, options = {})","<p>Formats a <code>number</code> as a percentage string (e.g., 65%). You can customize the format in the <code>options</code> hash. …\n",null,0],["number_to_percentage","ActiveSupport::NumberHelper","rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_percentage","(number, options = {})","<p>Formats a <code>number</code> as a percentage string (e.g., 65%). You can customize the format in the <code>options</code> hash. …\n",null,0],["number_to_phone","ActionView::Helpers::NumberHelper","rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_phone","(number, options = {})","<p>Formats a <code>number</code> into a phone number (US by default e.g., (555) 123-9876). You can customize the format …\n",null,0],["number_to_phone","ActiveSupport::NumberHelper","rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_phone","(number, options = {})","<p>Formats a <code>number</code> into a phone number (US by default e.g., (555) 123-9876). You can customize the format …\n",null,0],["number_to_rounded","ActiveSupport::NumberHelper","rails/classes/ActiveSupport/NumberHelper.html#method-i-number_to_rounded","(number, options = {})","<p>Formats a <code>number</code> with the specified level of <code>:precision</code> (e.g., 112.32 has a precision of 2 if <code>:significant</code> …\n",null,0],["number_with_delimiter","ActionView::Helpers::NumberHelper","rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_delimiter","(number, options = {})","<p>Formats a <code>number</code> with grouped thousands using <code>delimiter</code> (e.g., 12,324). You can customize the format …\n",null,0],["number_with_precision","ActionView::Helpers::NumberHelper","rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_precision","(number, options = {})","<p>Formats a <code>number</code> with the specified level of <code>:precision</code> (e.g., 112.32 has a precision of 2 if <code>:significant</code> …\n",null,0],["numerator","Complex","ruby/classes/Complex.html#method-i-numerator","()","<p>Returns the Complex object created from the numerators of the real and imaginary parts of <code>self</code>, after …\n",null,1],["numerator","Float","ruby/classes/Float.html#method-i-numerator","()","<p>Returns the numerator.  The result is machine dependent.\n\n<pre><code>n = 0.3.numerator    #=&gt; 5404319552844595\nd = ...\n</code></pre>\n",null,1],["numerator","Integer","ruby/classes/Integer.html#method-i-numerator","()","<p>Returns <code>self</code>.\n",null,1],["numerator","Numeric","ruby/classes/Numeric.html#method-i-numerator","()","<p>Returns the numerator.\n",null,1],["numerator","Rational","ruby/classes/Rational.html#method-i-numerator","()","<p>Returns the numerator.\n\n<pre><code>Rational(7).numerator        #=&gt; 7\nRational(7, 1).numerator     #=&gt; 7\nRational(9, ...\n</code></pre>\n",null,1],["numrange","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-numrange","","",null,0],["object","ActionView::Helpers::ActiveModelInstanceTag","rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-object","()","",null,0],["object_address_group","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-object_address_group","(obj, &block)","<p>A convenience method, like object_group, but also reformats the Object’s object_id.\n",null,1],["object_class","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-object_class","()","<p>Returns the NormalClass “Object”, creating it if not found.\n<p>Records <code>self</code> as a location in “Object”. …\n",null,1],["object_group","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-object_group","(obj)","<p>A convenience method which is same as follows:\n\n<pre><code>group(1, &#39;#&lt;&#39; + obj.class.name, &#39;&gt;&#39;) { ... }\n</code></pre>\n",null,1],["object_id","Object","ruby/classes/Object.html#method-i-object_id","()","<p>Returns an integer identifier for <code>obj</code>.\n<p>The same number will be returned on all calls to <code>object_id</code> for …\n",null,1],["object_nl","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-object_nl","()","<p>This string is put at the end of a line that holds a JSON object (or Hash).\n",null,1],["object_nl=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-object_nl-3D","(p1)","<p>This string is put at the end of a line that holds a JSON object (or Hash).\n",null,1],["ocsp_uris","OpenSSL::X509::Extension::AuthorityInfoAccess","ruby/classes/OpenSSL/X509/Extension/AuthorityInfoAccess.html#method-i-ocsp_uris","()","<p>Get the URIs for OCSP from the certificate’s authority information access extension exteension, as …\n",null,1],["oct","String","ruby/classes/String.html#method-i-oct","()","<p>Interprets the leading substring of <code>self</code> as a string of octal digits (with an optional sign) and returns …\n",null,1],["oct_or_256based","Gem::Package::TarHeader","ruby/classes/Gem/Package/TarHeader.html#method-c-oct_or_256based","(str)","",null,1],["odd?","Integer","ruby/classes/Integer.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <code>self</code> is an odd number, <code>false</code> otherwise.\n",null,1],["odd?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-odd-3F","()","",null,1],["of","RubyVM::AbstractSyntaxTree","ruby/classes/RubyVM/AbstractSyntaxTree.html#method-c-of","(body, keep_script_lines: RubyVM.keep_script_lines, error_tolerant: false, keep_tokens: false)","<p>Returns AST nodes of the given <em>proc</em> or <em>method</em>.\n\n<pre><code>RubyVM::AbstractSyntaxTree.of(proc {1 + 2})\n# =&gt; #&lt;RubyVM::AbstractSyntaxTree::Node:SCOPE@1:35-1:42&gt; ...\n</code></pre>\n",null,1],["of","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-c-of","(p1)","<p>Returns the instruction sequence containing the given proc or method.\n<p>For example, using irb:\n\n<pre><code># a proc ...\n</code></pre>\n",null,1],["of_kind?","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-of_kind-3F","(attribute, type = :invalid)","<p>Returns <code>true</code> if an error on the attribute with the given type is present, or <code>false</code> otherwise. <code>type</code> is …\n",null,0],["off_event","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-i-off_event","(p1 = v1)","<p>removes the callback of event.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;)\nev = WIN32OLE_EVENT.new(ie) ...\n</code></pre>\n",null,1],["offset","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-offset","(value)","<p>Specifies the number of rows to skip before returning rows.\n\n<pre><code>User.offset(10) # generated SQL has &quot;OFFSET ...\n</code></pre>\n",null,0],["offset","DateTime","ruby/classes/DateTime.html#method-i-offset","()","<p>Returns the offset.\n\n<pre><code>DateTime.parse(&#39;04pm+0730&#39;).offset        #=&gt; (5/16)\n</code></pre>\n",null,1],["offset","MatchData","ruby/classes/MatchData.html#method-i-offset","(p1)","<p>Returns a 2-element array containing the beginning and ending offsets (in characters) of the specified …\n",null,1],["offset_vtbl","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-offset_vtbl","()","<p>Returns the offset ov VTBL.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;) ...\n</code></pre>\n",null,1],["oflush","IO","ruby/classes/IO.html#method-i-oflush","()","<p>Flushes output buffer in kernel.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["oid","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-oid","","",null,0],["oid","OpenSSL::ASN1::ObjectId","ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-oid","()","<p>Returns a String representing the Object Identifier in the dot notation, e.g. “1.2.3.4.5”\n",null,1],["oid","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-oid","()","<p>Returns the short name of the OID associated with <em>pkey</em>.\n",null,1],["oid","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-i-oid","()","",null,1],["oid","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-oid","()","",null,1],["oid=","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-i-oid-3D","(p1)","",null,1],["oid=","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-oid-3D","(p1)","",null,1],["ok?","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-ok-3F","()","<p>Are all the dependencies in the list satisfied?\n",null,1],["ok?","Win32::SSPI::SSPIResult","ruby/classes/Win32/SSPI/SSPIResult.html#method-i-ok-3F","()","",null,1],["ok_to_remove?","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-ok_to_remove-3F","(full_name, check_dev=true)","<p>It is ok to remove a gemspec from the dependency list?\n<p>If removing the gemspec creates breaks a currently …\n",null,1],["ole_activex_initialize","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_activex_initialize","()","<p>Initialize WIN32OLE object(ActiveX Control) by calling IPersistMemory::InitNew.\n<p>Before calling OLE method, …\n",null,1],["ole_classes","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-c-ole_classes","(p1)","<p>Returns array of WIN32OLE_TYPE objects defined by the <em>typelib</em> type library. This method will be OBSOLETE …\n",null,1],["ole_classes","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-ole_classes","()","<p>Returns the type library file path.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...\n</code></pre>\n",null,1],["ole_free","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-ole_free","(p1)","<p>Invokes Release method of Dispatch interface of WIN32OLE object. You should not use this method because …\n",null,1],["ole_free","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_free","()","<p>invokes Release method of Dispatch interface of WIN32OLE object. Usually, you do not need to call this …\n",null,1],["ole_func_methods","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_func_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is property (settable) of WIN32OLE …\n",null,1],["ole_get_methods","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_get_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is property (gettable) of WIN32OLE …\n",null,1],["ole_instance_variable_get","WIN32OLE::Record","ruby/classes/WIN32OLE/Record.html#method-i-ole_instance_variable_get","(p1)","<p>Returns value specified by the member name of VT_RECORD OLE object. If the member name is not correct, …\n",null,1],["ole_instance_variable_set","WIN32OLE::Record","ruby/classes/WIN32OLE/Record.html#method-i-ole_instance_variable_set","(p1, p2)","<p>Sets value specified by the member name of VT_RECORD OLE object. If the member name is not correct,  …\n",null,1],["ole_method","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_method","(p1)","<p>Returns WIN32OLE_METHOD object corresponding with method specified by 1st argument.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;) ...\n</code></pre>\n",null,1],["ole_method_help","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_method_help","(p1)","<p>Returns WIN32OLE_METHOD object corresponding with method specified by 1st argument.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;) ...\n</code></pre>\n",null,1],["ole_methods","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_methods","()","<p>Returns the array of WIN32OLE_METHOD object. The element is OLE method of WIN32OLE object.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;) ...\n</code></pre>\n",null,1],["ole_methods","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-ole_methods","()","<p>Returns array of WIN32OLE_METHOD objects which represent OLE method defined in OLE type library.\n\n<pre><code>tobj ...\n</code></pre>\n",null,1],["ole_obj_help","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_obj_help","()","<p>Returns WIN32OLE_TYPE object.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;)\ntobj = excel.ole_type\n</code></pre>\n",null,1],["ole_put_methods","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_put_methods","()","<p>Returns the array of WIN32OLE_METHOD object . The element of the array is property (settable) of WIN32OLE …\n",null,1],["ole_query_interface","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_query_interface","(p1)","<p>Returns WIN32OLE object for a specific dispatch or dual interface specified by iid.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;) ...\n</code></pre>\n",null,1],["ole_reference_count","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-ole_reference_count","(p1)","<p>Returns reference counter of Dispatch interface of WIN32OLE object. You should not use this method because …\n",null,1],["ole_respond_to?","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_respond_to-3F","(p1)","<p>Returns true when OLE object has OLE method, otherwise returns false.\n\n<pre><code>ie = WIN32OLE.new(&#39;InternetExplorer.Application&#39;) ...\n</code></pre>\n",null,1],["ole_show_help","WIN32OLE","ruby/classes/WIN32OLE.html#method-c-ole_show_help","(p1, p2 = v2)","<p>Displays helpfile. The 1st argument specifies WIN32OLE_TYPE object or WIN32OLE_METHOD object or helpfile. …\n",null,1],["ole_type","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_type","()","<p>Returns WIN32OLE_TYPE object.\n\n<pre><code>excel = WIN32OLE.new(&#39;Excel.Application&#39;)\ntobj = excel.ole_type\n</code></pre>\n",null,1],["ole_type","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-ole_type","()","<p>Returns OLE type of WIN32OLE_PARAM object(parameter of OLE method).\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["ole_type","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-ole_type","()","<p>returns type of OLE class.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Application&#39;) ...\n</code></pre>\n",null,1],["ole_type","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-ole_type","()","<p>Returns OLE type string.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;XlSheetType&#39;) ...\n</code></pre>\n",null,1],["ole_type_detail","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-ole_type_detail","()","<p>Returns detail information of type of argument.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["ole_type_detail","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-ole_type_detail","()","<p>Returns detail information of type. The information is array of type.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;DirectX ...\n</code></pre>\n",null,1],["ole_typelib","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object. The object represents the type library which contains the WIN32OLE …\n",null,1],["ole_typelib","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-ole_typelib","()","<p>Returns the WIN32OLE_TYPELIB object which is including the WIN32OLE_TYPE object. If it is not found, …\n",null,1],["ole_types","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-ole_types","()","<p>Returns the type library file path.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...\n</code></pre>\n",null,1],["on","OptionParser","ruby/classes/OptionParser.html#method-i-on","(*opts, &block)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["on_alias_error","SyntaxSuggest::RipperErrors","ruby/classes/SyntaxSuggest/RipperErrors.html#method-i-on_alias_error","(msg)","",null,1],["on_assign_error","SyntaxSuggest::RipperErrors","ruby/classes/SyntaxSuggest/RipperErrors.html#method-i-on_assign_error","(msg)","",null,1],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_cdata_block","(string)","",null,0],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_characters","(string)","",null,0],["on_class_name_error","SyntaxSuggest::RipperErrors","ruby/classes/SyntaxSuggest/RipperErrors.html#method-i-on_class_name_error","(msg)","",null,1],["on_curve?","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-on_curve-3F","()","",null,1],["on_encrypted_attribute_declared","ActiveRecord::Encryption::Configurable","rails/classes/ActiveRecord/Encryption/Configurable.html#method-i-on_encrypted_attribute_declared","(&block)","<p>Register callback to be invoked when an encrypted attribute is declared.\n<p>Example:\n\n<pre><code>ActiveRecord::Encryption.on_encrypted_attribute_declared ...\n</code></pre>\n",null,0],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_document","()","",null,0],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_element","(name)","",null,0],["on_event","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-i-on_event","(*args)","<p>Defines the callback event. If argument is omitted, this method defines the callback of all events.  …\n",null,1],["on_event_with_outargs","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-i-on_event_with_outargs","(*args)","<p>Defines the callback of event. If you want modify argument in callback, you could use this method instead …\n",null,1],["on_head","OptionParser","ruby/classes/OptionParser.html#method-i-on_head","(*opts, &block)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["on_load","ActiveSupport::LazyLoadHooks","rails/classes/ActiveSupport/LazyLoadHooks.html#method-i-on_load","(name, options = {}, &block)","<p>Declares a block that will be executed when a Rails component is fully loaded. If the component has already …\n",null,0],["on_param_error","SyntaxSuggest::RipperErrors","ruby/classes/SyntaxSuggest/RipperErrors.html#method-i-on_param_error","(msg)","",null,1],["on_parse_error","SyntaxSuggest::RipperErrors","ruby/classes/SyntaxSuggest/RipperErrors.html#method-i-on_parse_error","(msg)","<p>Comes from ripper, called on every parse error, msg is a string\n",null,1],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_document","()","",null,0],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_element","(name, attrs = {})","",null,0],["on_subscribe","ActionCable::Channel::Callbacks::ClassMethods","rails/classes/ActionCable/Channel/Callbacks/ClassMethods.html#method-i-on_subscribe","(*methods, &block)","",null,0],["on_tail","OptionParser","ruby/classes/OptionParser.html#method-i-on_tail","(*opts, &block)","<p>Creates an option from the given parameters <code>params</code>. See Parameters for New Options.\n<p>The block, if given, …\n",null,1],["on_unsubscribe","ActionCable::Channel::Callbacks::ClassMethods","rails/classes/ActionCable/Channel/Callbacks/ClassMethods.html#method-i-on_unsubscribe","(*methods, &block)","",null,0],["on_weekday?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-on_weekday-3F","()","<p>Returns true if the date/time does not fall on a Saturday or Sunday.\n",null,0],["on_weekend?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-on_weekend-3F","()","<p>Returns true if the date/time falls on a Saturday or Sunday.\n",null,0],["one?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-one-3F","()","<p>Returns true if there is exactly one record.\n",null,0],["one?","Array","ruby/classes/Array.html#method-i-one-3F","(*args)","<p>Returns <code>true</code> if exactly one element of <code>self</code> meets a given criterion.\n<p>With no block given and no argument, …\n",null,1],["one?","Enumerable","ruby/classes/Enumerable.html#method-i-one-3F","(*args)","<p>Returns whether exactly one element meets a given criterion.\n<p>With no argument and no block, returns whether …\n",null,1],["one?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-one-3F","()","",null,1],["ongoing_visibility=","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-ongoing_visibility-3D","(visibility)","<p>Changes the visibility for new methods to <code>visibility</code>\n",null,1],["only","ActiveRecord::SpawnMethods","rails/classes/ActiveRecord/SpawnMethods.html#method-i-only","(*onlies)","<p>Removes any condition from the query other than the one(s) specified in <code>onlies</code>.\n\n<pre><code>Post.order(&#39;id asc&#39;).only(:where) ...\n</code></pre>\n",null,0],["opaque","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-opaque","(secret_key)","<p>Opaque based on digest of secret key\n",null,0],["opaque=","URI::Generic","ruby/classes/URI/Generic.html#method-i-opaque-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["open","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-open","()","<p>Shortcut for <code>tempfile.open</code>.\n",null,0],["open","ActionDispatch::RailsEntityStore","rails/classes/ActionDispatch/RailsEntityStore.html#method-i-open","(key)","",null,0],["open","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-open","(tmpdir: nil, &block)","<p>Downloads the blob to a tempfile on disk. Yields the tempfile.\n<p>The tempfile’s name is prefixed with …\n",null,0],["open","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-open","(*args, **options, &block)","",null,0],["open","CSV","ruby/classes/CSV.html#method-c-open","(filename, mode=\"r\", **options)","<p>possible options elements:\n\n<pre><code>keyword form:\n  :invalid =&gt; nil      # raise error on invalid byte sequence ...\n</code></pre>\n",null,1],["open","DRb::DRbProtocol","ruby/classes/DRb/DRbProtocol.html#method-c-open","(uri, config, first=true)","<p>Open a client connection to <code>uri</code> with the configuration <code>config</code>.\n<p>The DRbProtocol module asks each registered …\n",null,1],["open","DRb::DRbSSLSocket","ruby/classes/DRb/DRbSSLSocket.html#method-c-open","(uri, config)","<p>Return an DRb::DRbSSLSocket instance as a client-side connection, with the SSL connected.  This is called …\n",null,1],["open","Dir","ruby/classes/Dir.html#method-c-open","(name, encoding: nil, &block)","<p>Creates a new Dir object <em>dir</em> for the directory at <code>dirpath</code>.\n<p>With no block, the method equivalent to Dir.new …\n",null,1],["open","File","ruby/classes/File.html#method-c-open","(*args)","<p>Creates a new File object, via File.new with the given arguments.\n<p>With no block given, returns the File …\n",null,1],["open","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-c-open","(header, io, &block)","<p>Creates a new tar entry for <code>header</code> that will be read from <code>io</code> If a block is given, the entry is yielded …\n",null,1],["open","IO","ruby/classes/IO.html#method-c-open","(*args)","<p>Creates a new IO object, via IO.new with the given arguments.\n<p>With no block given, returns the IO object. …\n",null,1],["open","IRB::FileInputMethod","ruby/classes/IRB/FileInputMethod.html#method-c-open","(file, &block)","",null,1],["open","Kernel","ruby/classes/Kernel.html#method-i-open","(*args)","<p>Creates an IO object connected to the given file.\n<p>This method has potential security vulnerabilities if …\n",null,1],["open","OpenURI::OpenRead","ruby/classes/OpenURI/OpenRead.html#method-i-open","(*rest, &block)","<p>OpenURI::OpenRead#open provides ‘open’ for URI::HTTP and URI::FTP.\n<p>OpenURI::OpenRead#open takes optional …\n",null,1],["open","PTY","ruby/classes/PTY.html#method-c-open","()","<p>Allocates a pty (pseudo-terminal).\n<p>In the block form, yields an array of two elements (<code>master_io, slave_file</code> …\n",null,1],["open","Pathname","ruby/classes/Pathname.html#method-i-open","(p1 = v1, p2 = v2, p3 = v3)","<p>Opens the file for reading or writing.\n<p>See File.open.\n",null,1],["open","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-c-open","(*args)","<p>Creates a new DNS resolver.  See Resolv::DNS.new for argument details.\n<p>Yields the created DNS resolver …\n",null,1],["open","StringIO","ruby/classes/StringIO.html#method-c-open","(*args)","<p>Note that <code>mode</code> defaults to <code>&#39;r&#39;</code> if <code>string</code> is frozen.\n<p>Creates a new StringIO instance formed from …\n",null,1],["open","Syslog","ruby/classes/Syslog.html#method-c-open","(p1 = v1, p2 = v2, p3 = v3)","<p>Open the syslog facility. Raises a runtime exception if it is already open.\n<p>Can be called with or without …\n",null,1],["open","Tempfile","ruby/classes/Tempfile.html#method-c-open","(*args, **kw)","<p>Creates a new Tempfile.\n<p>This method is not recommended and exists mostly for backward compatibility.  …\n",null,1],["open","Tempfile","ruby/classes/Tempfile.html#method-i-open","()","<p>Opens or reopens the file with mode “r+”.\n",null,1],["open","URI","ruby/classes/URI.html#method-c-open","(name, *rest, &block)","<p>Allows the opening of various resources including URIs.\n<p>If the first argument responds to the ‘open’ …\n",null,1],["open","Win32::Registry","ruby/classes/Win32/Registry.html#method-c-open","(hkey, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)","<p>— Registry.open(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)\n<p>— Registry.open(key, subkey, …\n",null,1],["open","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-open","(subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED, &blk)","<p>Same as Win32::Registry.open (self, subkey, desired, opt)\n",null,1],["open","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-c-open","(*args)","<p>Opens a file specified by <code>filename</code> as a gzipped file, and returns a GzipReader object associated with …\n",null,1],["open","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-c-open","(*args)","<p>Opens a file specified by <code>filename</code> for writing gzip compressed data, and returns a GzipWriter object …\n",null,1],["open!","Syslog","ruby/classes/Syslog.html#method-c-open-21","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n",null,1],["open?","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-open-3F","()","<p>Returns if key is not closed.\n",null,1],["open_cert","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-open_cert","(certificate_file)","",null,1],["open_editor","Gem::Commands::OpenCommand","ruby/classes/Gem/Commands/OpenCommand.html#method-i-open_editor","(path)","",null,1],["open_file","Gem","ruby/classes/Gem.html#method-c-open_file","(path, flags, &block)","<p>Open a file with given flags, and on Windows protect access with flock\n",null,1],["open_gem","Gem::Commands::OpenCommand","ruby/classes/Gem/Commands/OpenCommand.html#method-i-open_gem","(name)","",null,1],["open_private_key","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-open_private_key","(key_file)","",null,1],["open_server","DRb::DRbProtocol","ruby/classes/DRb/DRbProtocol.html#method-c-open_server","(uri, config, first=true)","<p>Open a server listening for connections at <code>uri</code> with configuration <code>config</code>.\n<p>The DRbProtocol module asks …\n",null,1],["open_server","DRb::DRbSSLSocket","ruby/classes/DRb/DRbSSLSocket.html#method-c-open_server","(uri, config)","<p>Returns a DRb::DRbSSLSocket instance as a server-side connection, with the SSL connected.  This is called …\n",null,1],["open_tokens","IRB::NestingParser","ruby/classes/IRB/NestingParser.html#method-c-open_tokens","(tokens)","",null,1],["opendir","Pathname","ruby/classes/Pathname.html#method-i-opendir","()","<p>Opens the referenced directory.\n<p>See Dir.open.\n",null,1],["opened?","Syslog","ruby/classes/Syslog.html#method-c-opened-3F","()","<p>Returns true if the syslog is open.\n",null,1],["operating_system_defaults","Gem","ruby/classes/Gem.html#method-c-operating_system_defaults","()","<p>Default options for gem commands for Ruby packagers.\n<p>The options here should be structured as an array …\n",null,1],["operators","","ruby/files/ruby/doc/syntax/operators_rdoc.html","","<p>Operators\n<p>In Ruby, operators such as <code>+</code>, are defined as methods on the class. Literals define their methods …\n",null,1],["opt_parser","Rails::Server","rails/classes/Rails/Server.html#method-i-opt_parser","()","",null,0],["optimize_indentation","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-optimize_indentation","(value, amount = 0)","<p>Returns optimized string with indentation\n",null,0],["optimize_routes_generation?","ActionDispatch::Routing::UrlFor","rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-optimize_routes_generation-3F","()","",null,0],["optimizer_hints","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-optimizer_hints","(*args)","<p>Specify optimizer hints to be used in the SELECT statement.\n<p>Example (for MySQL):\n\n<pre><code>Topic.optimizer_hints(&quot;MAX_EXECUTION_TIME(50000)&quot;, ...\n</code></pre>\n",null,0],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-option_groups_from_collection_for_select","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","<p>Returns a string of <code>&lt;option&gt;</code> tags, like <code>options_from_collection_for_select</code>, but groups them by …\n",null,0],["option_list","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-option_list","()","<p>List of options that will be supplied to RDoc\n",null,1],["option_params","","ruby/files/ruby/doc/optparse/option_params_rdoc.html","","<p>Parameters for New Options\n<p>Option-creating methods in <code>OptionParser</code> accept arguments that determine the …\n",null,1],["optional?","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-optional-3F","()","<p>Returns true if argument is optional.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;) ...\n</code></pre>\n",null,1],["optional_port","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-optional_port","()","<p>Returns a number port suffix like 8080 if the port number of this request is not the default HTTP port …\n",null,0],["options","ActionDispatch::Routing::Mapper::HttpHelpers","rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-options","(*args, &block)","<p>Define a route that only recognizes HTTP OPTIONS. For supported arguments, see match\n\n<pre><code>options &#39;carrots&#39;, ...\n</code></pre>\n",null,0],["options","FileUtils","ruby/classes/FileUtils.html#method-c-options","()","<p>Returns an array of the string keyword names:\n\n<pre><code>FileUtils.options.take(3) # =&gt; [&quot;noop&quot;, &quot;verbose&quot;, &quot;force&quot;]\n</code></pre>\n",null,1],["options","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-options","(path, initheader = nil)","<p>Sends an Options request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["options","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-options","()","<p>Gets various OpenSSL options.\n",null,1],["options","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-i-options","()","<p>Actual OptionParser object, automatically created if nonexistent.\n<p>If called with a block, yields the  …\n",null,1],["options","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-options","()","<p>The options instance from the store this CodeObject is attached to, or a default options instance if …\n",null,1],["options","Regexp","ruby/classes/Regexp.html#method-i-options","()","<p>Returns an integer whose bits show the options set in <code>self</code>.\n<p>The option bits are:\n\n<pre><code>Regexp::IGNORECASE # =&gt; ...\n</code></pre>\n",null,1],["options","Syslog","ruby/classes/Syslog.html#method-c-options","()","<p>Returns the options bitmask used in the last call to open()\n",null,1],["options=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-options-3D","(p1)","<p>Sets various OpenSSL options.\n",null,1],["options=","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-i-options-3D","(opt)","<p>Sets OptionParser object, when <code>opt</code> is <code>false</code> or <code>nil</code>, methods OptionParser::Arguable#options and OptionParser::Arguable#options= …\n",null,1],["options_for_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_for_select","(container, selected = nil)","<p>Accepts a container (hash, array, enumerable, your type) and returns a string of option tags. Given a …\n",null,0],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_from_collection_for_select","(collection, value_method, text_method, selected = nil)","<p>Returns a string of option tags that have been compiled by iterating over the <code>collection</code> and assigning …\n",null,0],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-options_include_default-3F","(options)","",null,0],["options_of","FileUtils","ruby/classes/FileUtils.html#method-c-options_of","(mid)","<p>Returns an array of the string keyword name for method <code>mid</code>; the argument may be a string or a symbol: …\n",null,1],["optname","Socket::Option","ruby/classes/Socket/Option.html#method-i-optname","()","<p>returns the socket option name as an integer.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).optname ...\n</code></pre>\n",null,1],["or","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-or","(other)","<p>Returns a new relation, which is the logical union of this relation and the one passed as an argument. …\n",null,0],["or!","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-or-21","(p1)","<p>Modify the source buffer in place by applying the binary OR operation to the source, using the mask, …\n",null,1],["oracle.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/oracle_yml_tt.html","","<p># Oracle/OCI 11g or higher recommended # # Requires Ruby/OCI8: #  github.com/kubo/ruby-oci8 # # Specify …\n",null,0],["ord","Integer","ruby/classes/Integer.html#method-i-ord","()","<p>Returns <code>self</code>; intended for compatibility to character literals in Ruby 1.9.\n",null,1],["ord","String","ruby/classes/String.html#method-i-ord","()","<p>Returns the integer ordinal of the first character of <code>self</code>:\n\n<pre><code>&#39;h&#39;.ord         # =&gt; 104\n&#39;hello&#39;.ord     # ...\n</code></pre>\n",null,1],["order","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-order","(*args)","<p>Applies an <code>ORDER BY</code> clause to a query.\n<p>#order accepts arguments in one of several formats.\n<p>symbols\n",null,0],["order","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-order","()","<p>Returns the order of the group.\n<p>See the OpenSSL documentation for EC_GROUP_get_order()\n",null,1],["order","OptionParser","ruby/classes/OptionParser.html#method-i-order","(*argv, into: nil, &nonopt)","<p>Parses command line arguments <code>argv</code> in order. When a block is given, each non-option argument is yielded. …\n",null,1],["order!","OptionParser","ruby/classes/OptionParser.html#method-i-order-21","(argv = default_argv, into: nil, &nonopt)","<p>Same as #order, but removes switches destructively. Non-option arguments remain in <code>argv</code>.\n",null,1],["order!","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-i-order-21","(&blk)","<p>Parses <code>self</code> destructively in order and returns <code>self</code> containing the rest arguments left unparsed.\n",null,1],["ordering","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-ordering","()","<p>If the ordering field is missing, or if the ordering field is present and set to false, then the genTime …\n",null,1],["ordering=","GetoptLong","ruby/classes/GetoptLong.html#method-i-ordering-3D","(ordering)","<p>Sets the ordering; see Ordering; returns the new ordering.\n<p>If the given <code>ordering</code> is <code>PERMUTE</code> and environment …\n",null,1],["ordinal","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-ordinal","(number)","<p>Returns the suffix that should be added to a number to denote the position in an ordered sequence such …\n",null,0],["ordinal","Integer","rails/classes/Integer.html#method-i-ordinal","()","<p>Ordinal returns the suffix used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, …\n",null,0],["ordinal","Date","ruby/classes/Date.html#method-c-ordinal","(p1 = v1, p2 = v2, p3 = v3)","<p>Returns a new Date object formed fom the arguments.\n<p>With no arguments, returns the date for January 1, …\n",null,1],["ordinal","DateTime","ruby/classes/DateTime.html#method-c-ordinal","(p1 = v1, p2 = v2, p3 = v3, p4 = v4, p5 = v5, p6 = v6, p7 = v7)","<p>Creates a DateTime object denoting the given ordinal date.\n\n<pre><code>DateTime.ordinal(2001,34) #=&gt; #&lt;DateTime: 2001-02-03T00:00:00+00:00 ...\n</code></pre>\n",null,1],["ordinalize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-ordinalize","(number)","<p>Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, …\n",null,0],["ordinalize","Integer","rails/classes/Integer.html#method-i-ordinalize","()","<p>Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such …\n",null,0],["orig_initialize","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-orig_initialize","(extensions = DEFAULT_EXTENSIONS, debug = false)","<p>TODO remove when kpeg 0.10 is released\n",null,1],["orig_name","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-orig_name","()","<p>Returns original filename recorded in the gzip file header, or <code>nil</code> if original filename is not present. …\n",null,1],["orig_name=","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-orig_name-3D","(p1)","<p>Specify the original name (<code>str</code>) in the gzip header.\n",null,1],["origin","URI::HTTP","ruby/classes/URI/HTTP.html#method-i-origin","()","<p>Description\n<p>Returns the origin for an HTTP uri, as defined in datatracker.ietf.org/doc/html/rfc6454.\n<p>Example: …\n",null,1],["original_concat","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-original_concat","(value)","",null,0],["original_env","Bundler","ruby/classes/Bundler.html#method-c-original_env","()","<p>@return [Hash] Environment present before Bundler was activated\n",null,1],["original_exec","Bundler","ruby/classes/Bundler.html#method-c-original_exec","(*args)","<p>Run a ‘Kernel.exec` to a subcommand with the environment present before Bundler was activated\n",null,1],["original_fullpath","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-original_fullpath","()","<p>Returns a <code>String</code> with the last requested path including their params.\n\n<pre><code># get &#39;/foo&#39;\nrequest.original_fullpath ...\n</code></pre>\n",null,0],["original_message","DidYouMean::Correctable","ruby/classes/DidYouMean/Correctable.html#method-i-original_message","()","<p>just for compatibility\n",null,1],["original_name","Method","ruby/classes/Method.html#method-i-original_name","()","<p>Returns the original name of the method.\n\n<pre><code>class C\n  def foo; end\n  alias bar foo\nend\nC.instance_method(:bar).original_name ...\n</code></pre>\n",null,1],["original_name","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-original_name","()","<p>Returns the original name of the method.\n\n<pre><code>class C\n  def foo; end\n  alias bar foo\nend\nC.instance_method(:bar).original_name ...\n</code></pre>\n",null,1],["original_system","Bundler","ruby/classes/Bundler.html#method-c-original_system","(*args)","<p>Run subcommand with the environment present before Bundler was activated\n",null,1],["original_url","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-original_url","()","<p>Returns the original request URL as a <code>String</code>.\n\n<pre><code># get &quot;/articles?page=2&quot;\nrequest.original_url # =&gt; &quot;http://www.example.com/articles?page=2&quot;\n</code></pre>\n",null,0],["os_code","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-os_code","()","<p>Returns OS code number recorded in the gzip file header.\n",null,1],["otp","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-otp","()","<p>The OTP code from the command options or from the user’s configuration.\n",null,1],["out","CGI","ruby/classes/CGI.html#method-i-out","(options = \"text/html\")","<p>Print an HTTP header and body to $DEFAULT_OUTPUT ($&gt;)\n<p><code>content_type_string</code> &mdash; If a string is passed, it …\n",null,1],["outdated","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-outdated","()","<p>Return a list of all outdated local gem names.  This method is HEAVY as it must go fetch specifications …\n",null,1],["outdated_and_latest_version","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-outdated_and_latest_version","()","<p>Enumerates the outdated local gems yielding the local specification and the latest remote version.\n<p>This …\n",null,1],["output","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-output","()","",null,1],["output=","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-output-3D","(val)","",null,1],["output=","Reline::Core","ruby/classes/Reline/Core.html#method-i-output-3D","(val)","",null,1],["output?","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-output-3F","()","<p>Returns true if argument is output.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Internet Controls&#39;, &#39;DWebBrowserEvents&#39;) ...\n</code></pre>\n",null,1],["output_flag_file","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-output_flag_file","(op_dir)","<p>Return the path name of the flag file in an output directory.\n",null,1],["output_modifier_proc=","Reline::Core","ruby/classes/Reline/Core.html#method-i-output_modifier_proc-3D","(p)","",null,1],["output_name","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-output_name","(context)","<p>Name for output to HTML.  For class methods the full name with a “.” is used like <code>SomeClass.method_name</code> …\n",null,1],["overlap?","Range","ruby/classes/Range.html#method-i-overlap-3F","(p1)","<p>Returns <code>true</code> if <code>range</code> overlaps with <code>self</code>, <code>false</code> otherwise:\n\n<pre><code>(0..2).overlap?(1..3) #=&gt; true\n(0..2).overlap?(3..4) ...\n</code></pre>\n",null,1],["overlaps?","Range","rails/classes/Range.html#method-i-overlaps-3F","(other)","<p>Compare two ranges and see if they overlap each other\n\n<pre><code>(1..5).overlaps?(4..6) # =&gt; true\n(1..5).overlaps?(7..9) ...\n</code></pre>\n",null,0],["override_accessors_to_preserve_original","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-override_accessors_to_preserve_original","(name, original_attribute_name)","",null,0],["owned?","File","ruby/classes/File.html#method-c-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used id of the calling process is the owner of …\n",null,1],["owned?","File::Stat","ruby/classes/File/Stat.html#method-i-owned-3F","()","<p>Returns <code>true</code> if the effective user id of the process is the same as the owner of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).owned? ...\n</code></pre>\n",null,1],["owned?","FileTest","ruby/classes/FileTest.html#method-i-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used id of the calling process is the owner of …\n",null,1],["owned?","Pathname","ruby/classes/Pathname.html#method-i-owned-3F","()","<p>See FileTest.owned?.\n",null,1],["owned?","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-i-owned-3F","()","<p>Returns <code>true</code> if this lock is currently held by current thread.\n",null,1],["owner","Method","ruby/classes/Method.html#method-i-owner","()","<p>Returns the class or module on which this method is defined. In other words,\n\n<pre><code>meth.owner.instance_methods(false).include?(meth.name) ...\n</code></pre>\n",null,1],["owner","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-owner","()","<p>Returns the class or module on which this method is defined. In other words,\n\n<pre><code>meth.owner.instance_methods(false).include?(meth.name) ...\n</code></pre>\n",null,1],["p","Kernel","ruby/classes/Kernel.html#method-i-p","(*args)","<p>For each object <code>obj</code>, executes:\n\n<pre><code>$stdout.write(obj.inspect, &quot;\\n&quot;)\n</code></pre>\n<p>With one object given, returns the object; …\n",null,1],["pack","Array","ruby/classes/Array.html#method-i-pack","(fmt, buffer: nil)","<p>Formats each element in <code>self</code> into a binary string; returns that string. See Packed Data.\n",null,1],["pack_sockaddr_in","Socket","ruby/classes/Socket.html#method-c-pack_sockaddr_in","(p1, p2)","<p>Packs <em>port</em> and <em>host</em> as an AF_INET/AF_INET6 sockaddr string.\n\n<pre><code>Socket.sockaddr_in(80, &quot;127.0.0.1&quot;)\n#=&gt; &quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&quot; ...\n</code></pre>\n",null,1],["pack_sockaddr_un","Socket","ruby/classes/Socket.html#method-c-pack_sockaddr_un","(p1)","<p>Packs <em>path</em> as an AF_UNIX sockaddr string.\n\n<pre><code>Socket.sockaddr_un(&quot;/tmp/sock&quot;) #=&gt; &quot;\\x01\\x00/tmp/sock\\x00\\x00...&quot;\n</code></pre>\n",null,1],["package.json","","rails/files/rails/actionview/package_json.html","","<p>{\n\n<pre><code>&quot;name&quot;: &quot;@rails/ujs&quot;,\n&quot;version&quot;: &quot;7.0.8-3&quot;,\n&quot;description&quot;: &quot;Ruby on Rails unobtrusive scripting adapter&quot;, ...\n</code></pre>\n",null,0],["package.json","","rails/files/rails/activestorage/package_json.html","","<p>{\n\n<pre><code>&quot;name&quot;: &quot;@rails/activestorage&quot;,\n&quot;version&quot;: &quot;7.0.8-3&quot;,\n&quot;description&quot;: &quot;Attach cloud and local files in ...\n</code></pre>\n",null,0],["package.json","","rails/files/rails/actiontext/package_json.html","","<p>{\n\n<pre><code>&quot;name&quot;: &quot;@rails/actiontext&quot;,\n&quot;version&quot;: &quot;7.0.8-3&quot;,\n&quot;description&quot;: &quot;Edit and display rich text in Rails ...\n</code></pre>\n",null,0],["package.json","","rails/files/rails/actioncable/package_json.html","","<p>{\n\n<pre><code>&quot;name&quot;: &quot;@rails/actioncable&quot;,\n&quot;version&quot;: &quot;7.0.8-3&quot;,\n&quot;description&quot;: &quot;WebSocket framework for Ruby on ...\n</code></pre>\n",null,0],["package.json","","rails/files/rails/package_json.html","","<p>{\n\n<pre><code>&quot;private&quot;: true,\n&quot;workspaces&quot;: [\n  &quot;actioncable&quot;,\n  &quot;actiontext&quot;,\n  &quot;activestorage&quot;,\n  &quot;actionview&quot; ...\n</code></pre>\n",null,0],["packdw","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-packdw","(dw)","",null,1],["packed_data","","ruby/files/ruby/doc/packed_data_rdoc.html","","<p>Packed Data\n<p>Certain Ruby core methods deal with packing and unpacking data:\n<p>Method Array#pack: Formats …\n",null,1],["packhandle","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-packhandle","(h)","",null,1],["packqw","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-packqw","(qw)","",null,1],["padding=","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-padding-3D","(p1)","<p>Enables or disables padding. By default encryption operations are padded using standard block padding …\n",null,1],["page","IRB::Pager","ruby/classes/IRB/Pager.html#method-c-page","(retain_content: false)","",null,1],["page","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-page","(name)","<p>Returns the RDoc::TopLevel that is a text file and has the given <code>name</code>\n",null,1],["page_content","IRB::Pager","ruby/classes/IRB/Pager.html#method-c-page_content","(content, **options)","",null,1],["page_file","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-page_file","(page_name)","<p>Path to the ri data for <code>page_name</code>\n",null,1],["page_name","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-page_name","()","<p>Base name of this file without the extension\n",null,1],["pair","Socket","ruby/classes/Socket.html#method-c-pair","(p1, p2, p3 = v3)","<p>Creates a pair of sockets connected each other.\n<p><em>domain</em> should be a communications domain such as: :INET, …\n",null,1],["pair","UNIXSocket","ruby/classes/UNIXSocket.html#method-c-pair","(p1 = v1, p2 = v2)","<p>Creates a pair of sockets connected to each other.\n<p><em>type</em> should be a socket type such as: :STREAM, :DGRAM, …\n",null,1],["paragraph","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-paragraph","(parts)","<p>Creates an RDoc::Markup::Paragraph from <code>parts</code> and including\nextension-specific behavior\n",null,1],["param_encoding","ActionController::ParameterEncoding::ClassMethods","rails/classes/ActionController/ParameterEncoding/ClassMethods.html#method-i-param_encoding","(action, param, encoding)","<p>Specify the encoding for a parameter on an action. If not specified the default is UTF-8.\n<p>You can specify …\n",null,0],["param_key","ActiveModel::Naming","rails/classes/ActiveModel/Naming.html#method-c-param_key","(record_or_class)","<p>Returns string to use for params names. It differs for namespaced models regarding whether it’s inside …\n",null,0],["param_list","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-param_list","()","<p>A list of this method’s method and yield parameters.  <code>call-seq</code> params are preferred over parsed method …\n",null,1],["param_seq","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-param_seq","()","<p>Pretty parameter list for this method.  If the method’s parameters were given by <code>call-seq</code> it is preferred …\n",null,1],["parameter_filter","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter","()","",null,0],["parameter_filter_for","ActionDispatch::Http::FilterParameters","rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter_for","(filters)","",null,0],["parameter_parsers=","ActionDispatch::Http::Parameters::ClassMethods","rails/classes/ActionDispatch/Http/Parameters/ClassMethods.html#method-i-parameter_parsers-3D","(parsers)","<p>Configure the parameter parser for a given MIME type.\n<p>It accepts a hash where the key is the symbol of …\n",null,0],["parameterize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-parameterize","(string, separator: \"-\", preserve_case: false, locale: nil)","<p>Replaces special characters in a string so that it may be used as part of a ‘pretty’ URL.\n\n<pre><code>parameterize(&quot;Donald ...\n</code></pre>\n",null,0],["parameterize","String","rails/classes/String.html#method-i-parameterize","(separator: \"-\", preserve_case: false, locale: nil)","<p>Replaces special characters in a string so that it may be used as part of a ‘pretty’ URL.\n<p>If the …\n",null,0],["parameters","ActionDispatch::Http::Parameters","rails/classes/ActionDispatch/Http/Parameters.html#method-i-parameters","()","<p>Returns both GET and POST parameters in a single hash.\n",null,0],["parameters","Method","ruby/classes/Method.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n\n<pre><code>def foo(bar); end\nmethod(:foo).parameters #=&gt; [[:req, ...\n</code></pre>\n",null,1],["parameters","Proc","ruby/classes/Proc.html#method-i-parameters","(p1 = {})","<p>Returns the parameter information of this proc.  If the lambda keyword is provided and not nil, treats …\n",null,1],["parameters","TracePoint","ruby/classes/TracePoint.html#method-i-parameters","()","<p>Return the parameters definition of the method or block that the current hook belongs to. Format is the …\n",null,1],["parameters","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n\n<pre><code>def foo(bar); end\nmethod(:foo).parameters #=&gt; [[:req, ...\n</code></pre>\n",null,1],["params","ActionController::Metal","rails/classes/ActionController/Metal.html#method-i-params","()","",null,0],["params","ActionController::StrongParameters","rails/classes/ActionController/StrongParameters.html#method-i-params","()","<p>Returns a new ActionController::Parameters object that has been instantiated with the <code>request.parameters</code> …\n",null,0],["params","ActionDispatch::Http::Parameters","rails/classes/ActionDispatch/Http/Parameters.html#method-i-params","()","",null,0],["params","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-params","()","<p>Stores all parameters of key to the hash INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!! Don’t use …\n",null,1],["params","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-params","()","<p>Stores all parameters of key to the hash INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!! Don’t use …\n",null,1],["params","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-params","()","<p>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n<p>Stores all parameters of key to the hash. …\n",null,1],["params","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-params","()","<p>returns array of WIN32OLE_PARAM object corresponding with method parameters.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["params","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-i-params","(p1, p2)","<p>Changes the parameters of the deflate stream to allow changes between different types of data that require …\n",null,1],["params=","ActionController::Metal","rails/classes/ActionController/Metal.html#method-i-params-3D","(val)","",null,0],["params=","ActionController::StrongParameters","rails/classes/ActionController/StrongParameters.html#method-i-params-3D","(value)","<p>Assigns the given <code>value</code> to the <code>params</code> hash. If <code>value</code> is a Hash, this will create an ActionController::Parameters …\n",null,0],["params=","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-params-3D","(hash)","<p>Set all the parameters.\n",null,1],["params_array_from","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-params_array_from","(raw_params)","<p>Takes <code>raw_params</code> and turns it into an array of parameters.\n",null,0],["params_ok?","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-params_ok-3F","()","<p>Validates the Diffie-Hellman parameters associated with this instance. It checks whether a safe prime …\n",null,1],["params_readable?","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-params_readable-3F","()","",null,0],["parent","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-parent","()","<p>Return the ActivationRequest that contained the dependency that we were activated for.\n",null,1],["parent","Pathname","ruby/classes/Pathname.html#method-i-parent","()","<p>Returns the parent directory.\n<p>This is same as <code>self + &#39;..&#39;</code>.\n",null,1],["parent","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-parent","()","<p>Our parent CodeObject.  The parent may be missing for classes loaded from legacy RI data stores.\n",null,1],["parent_file_name","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-parent_file_name","()","<p>File name of our parent\n",null,1],["parent_name","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-parent_name","()","<p>Name of our parent\n",null,1],["parent_name","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-parent_name","()","<p>Name of our parent with special handling for un-marshaled methods\n",null,1],["parent_of?","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-parent_of-3F","(event)","",null,0],["parse","ActionView::TemplatePath","rails/classes/ActionView/TemplatePath.html#method-c-parse","(virtual)","<p>Build a TemplatePath form a virtual path\n",null,0],["parse","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-c-parse","(iso8601duration)","<p>Creates a new Duration from string formatted according to ISO 8601 Duration.\n<p>See ISO 8601 for more information. …\n",null,0],["parse","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-parse","(str, now = now())","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone of <code>self</code> from parsed string. …\n",null,0],["parse","Mime::Type","rails/classes/Mime/Type.html#method-c-parse","(accept_header)","",null,0],["parse","CGI","ruby/classes/CGI.html#method-c-parse","(query)","<p>Parse an HTTP query string into a hash of key=&gt;value pairs.\n\n<pre><code>params = CGI.parse(&quot;query_string&quot;)\n  # ...\n</code></pre>\n",null,1],["parse","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-c-parse","(raw_cookie)","<p>Parse a raw cookie string into a hash of cookie-name=&gt;Cookie pairs.\n\n<pre><code>cookies = CGI::Cookie.parse(&quot;raw_cookie_string&quot;) ...\n</code></pre>\n",null,1],["parse","CSV","ruby/classes/CSV.html#method-c-parse","(str, **options, &block)","<p>Parses <code>string</code> or <code>io</code> using the specified <code>options</code>.\n<p>Argument <code>string</code> should be a String object; it will be …\n",null,1],["parse","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-parse","(&block)","",null,1],["parse","Date","ruby/classes/Date.html#method-c-parse","(p1 = v1, p2 = v2, p3 = v3, p4 = {})","<p><strong>Note</strong>: This method recognizes many forms in <code>string</code>, but it is not a validator. For formats, see “Specialized …\n",null,1],["parse","DateTime","ruby/classes/DateTime.html#method-c-parse","(p1 = v1, p2 = v2, p3 = v3, p4 = {})","<p>Parses the given representation of date and time, and creates a DateTime object.\n<p>This method <strong>does</strong> <strong>not</strong> …\n",null,1],["parse","Gem::RequestSet::Lockfile::Parser","ruby/classes/Gem/RequestSet/Lockfile/Parser.html#method-i-parse","()","",null,1],["parse","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-c-parse","(obj)","<p>Parse <code>obj</code>, returning an <code>[op, version]</code> pair. <code>obj</code> can be a String or a Gem::Version.\n<p>If <code>obj</code> is a String …\n",null,1],["parse","Gem::Resolver::APISet::GemParser","ruby/classes/Gem/Resolver/APISet/GemParser.html#method-i-parse","(line)","",null,1],["parse","Gem::Uri","ruby/classes/Gem/Uri.html#method-c-parse","(uri)","<p>Parses uri, returning the original uri if it’s invalid\n",null,1],["parse","JSON","ruby/classes/JSON.html#method-i-parse","(source, opts = {})","<p>Returns the Ruby objects created by parsing the given <code>source</code>.\n<p>Argument <code>source</code> contains the String to be …\n",null,1],["parse","JSON::Ext::Parser","ruby/classes/JSON/Ext/Parser.html#method-i-parse","()","<p>Parses the current JSON text <em>source</em> and returns the complete data structure as a result. It raises JSON::ParserError …\n",null,1],["parse","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-c-parse","(p1)","<p>Parses a given <em>string</em> as a blob that contains configuration for OpenSSL.\n",null,1],["parse","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-c-parse","(str, template=OBJECT_TYPE_TEMPLATE)","",null,1],["parse","OptionParser","ruby/classes/OptionParser.html#method-i-parse","(*argv, into: nil)","<p>Parses command line arguments <code>argv</code> in order when environment variable POSIXLY_CORRECT is set, and in …\n",null,1],["parse","OptionParser::Switch::NoArgument","ruby/classes/OptionParser/Switch/NoArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if any arguments given.\n",null,1],["parse","OptionParser::Switch::OptionalArgument","ruby/classes/OptionParser/Switch/OptionalArgument.html#method-i-parse","(arg, argv, &error)","<p>Parses argument if given, or uses default value.\n",null,1],["parse","OptionParser::Switch::PlacedArgument","ruby/classes/OptionParser/Switch/PlacedArgument.html#method-i-parse","(arg, argv, &error)","<p>Returns nil if argument is not present or begins with ‘-’ and is not ‘-’.\n",null,1],["parse","OptionParser::Switch::RequiredArgument","ruby/classes/OptionParser/Switch/RequiredArgument.html#method-i-parse","(arg, argv)","<p>Raises an exception if argument is not present.\n",null,1],["parse","Prism","ruby/classes/Prism.html#method-c-parse","(code, **options)","<p>Mirror the Prism.parse API by using the serialization API.\n",null,1],["parse","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-parse","()","<p>Parse the source and return the result.\n",null,1],["parse","Psych","ruby/classes/Psych.html#method-c-parse","(yaml, filename: nil)","<p>Parse a YAML string in <code>yaml</code>.  Returns the Psych::Nodes::Document. <code>filename</code> is used in the exception message …\n",null,1],["parse","Psych::Parser","ruby/classes/Psych/Parser.html#method-i-parse","(yaml, path = yaml.respond_to?(:path) ? yaml.path : \"<unknown>\")","<p>Parse the YAML document contained in <code>yaml</code>.  Events will be called on the handler set on the parser instance. …\n",null,1],["parse","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-parse","(comment_location)","<p>Parses <code>comment_location</code> into an RDoc::Markup::Document composed of multiple RDoc::Markup::Documents with …\n",null,1],["parse","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-parse","()","<p>Parses the comment into an RDoc::Markup::Document.  The parsed document is cached until the text is changed. …\n",null,1],["parse","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-parse","(markdown)","<p>Parses <code>markdown</code> into an RDoc::Document\n",null,1],["parse","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-c-parse","(markdown)","<p>Parses the <code>markdown</code> document into an RDoc::Document using the default\nextensions.\n",null,1],["parse","RDoc::Markup","ruby/classes/RDoc/Markup.html#method-c-parse","(str)","<p>Parses <code>str</code> into an RDoc::Markup::Document.\n",null,1],["parse","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-parse","(argv)","<p>Parses command line options.\n",null,1],["parse","RDoc::Parser::RipperStateLex","ruby/classes/RDoc/Parser/RipperStateLex.html#method-c-parse","(code)","<p>Returns tokens parsed from <code>code</code>.\n",null,1],["parse","RDoc::RD","ruby/classes/RDoc/RD.html#method-c-parse","(rd)","<p>Parses <code>rd</code> source and returns an RDoc::Markup::Document.  If the <code>=begin</code> or <code>=end</code> lines are missing they …\n",null,1],["parse","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-parse","(text, format = 'rdoc')","<p>Normalizes <code>text</code> then builds a RDoc::Markup::Document from it\n",null,1],["parse","RDoc::TomDoc","ruby/classes/RDoc/TomDoc.html#method-c-parse","(text)","<p>Parses TomDoc from text\n<p>text &mdash; A String containing TomDoc-format text.\n\n<p>Examples\n",null,1],["parse","Ripper","ruby/classes/Ripper.html#method-c-parse","(src, filename = '(ripper)', lineno = 1)","<p>Parses the given Ruby program read from <code>src</code>. <code>src</code> must be a String or an IO or a object with a #gets method. …\n",null,1],["parse","Ripper::Filter","ruby/classes/Ripper/Filter.html#method-i-parse","(init = nil)","<p>Starts the parser. <code>init</code> is a data accumulator and is passed to the next event handler (as of Enumerable#inject …\n",null,1],["parse","RubyVM::AbstractSyntaxTree","ruby/classes/RubyVM/AbstractSyntaxTree.html#method-c-parse","(string, keep_script_lines: RubyVM.keep_script_lines, error_tolerant: false, keep_tokens: false)","<p>Parses the given <em>string</em> into an abstract syntax tree, returning the root node of that tree.\n\n<pre><code>RubyVM::AbstractSyntaxTree.parse(&quot;x ...\n</code></pre>\n",null,1],["parse","SyntaxSuggest::Cli","ruby/classes/SyntaxSuggest/Cli.html#method-i-parse","()","",null,1],["parse","Time","ruby/classes/Time.html#method-c-parse","(date, now=self.now)","<p>Takes a string representation of a Time and attempts to parse it using a heuristic.\n<p>This method **does …\n",null,1],["parse","URI","ruby/classes/URI.html#method-c-parse","(uri)","<p>Returns a new URI object constructed from the given string <code>uri</code>:\n\n<pre><code>URI.parse(&#39;https://john.doe@www.example.com:123/forum/questions/?tag=networking&amp;order=newest#top&#39;) ...\n</code></pre>\n",null,1],["parse","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-parse","(uri)","<p>Args\n<p><code>uri</code> &mdash; String\n\n<p>Description\n",null,1],["parse","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-parse","(uri)","<p>Args\n<p><code>uri</code> &mdash; String\n\n<p>Description\n",null,1],["parse!","Rails::Server::Options","rails/classes/Rails/Server/Options.html#method-i-parse-21","(args)","",null,0],["parse!","Gem::Uri","ruby/classes/Gem/Uri.html#method-c-parse-21","(uri)","<p>Parses uri, raising if it’s invalid\n",null,1],["parse!","JSON","ruby/classes/JSON.html#method-i-parse-21","(source, opts = {})","<p>Calls\n\n<pre><code>parse(source, opts)\n</code></pre>\n<p>with <code>source</code> and possibly modified <code>opts</code>.\n",null,1],["parse!","OptionParser","ruby/classes/OptionParser.html#method-i-parse-21","(argv = default_argv, into: nil)","<p>Same as #parse, but removes switches destructively. Non-option arguments remain in <code>argv</code>.\n",null,1],["parse!","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-i-parse-21","()","<p>Parses <code>self</code> destructively and returns <code>self</code> containing the rest arguments left unparsed.\n",null,1],["parse_alias","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_alias","(context, single, tk, comment)","<p>Parses an <code>alias</code> in <code>context</code> with <code>comment</code>\n",null,1],["parse_attr","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_attr","(context, single, tk, comment)","<p>Creates an RDoc::Attr for the name following <code>tk</code>, setting the comment to <code>comment</code>.\n",null,1],["parse_attr_accessor","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_attr_accessor","(context, single, tk, comment)","<p>Creates an RDoc::Attr for each attribute listed after <code>tk</code>, setting the comment for each to <code>comment</code>.\n",null,1],["parse_by_line","IRB::NestingParser","ruby/classes/IRB/NestingParser.html#method-c-parse_by_line","(tokens)","<p>Calculates token information [line_tokens, prev_opens, next_opens, min_depth] for each line. Example …\n",null,1],["parse_call_parameters","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_call_parameters","(tk)","<p>Extracts call parameters from the token stream.\n",null,1],["parse_class","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_class","(container, single, tk, comment)","<p>Parses a class in <code>context</code> with <code>comment</code>\n",null,1],["parse_comment","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_comment","(container, tk, comment)","<p>Generates an RDoc::Method or RDoc::Attr from <code>comment</code> by looking for :method: or :attr: directives in …\n",null,1],["parse_comment_tomdoc","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_comment_tomdoc","(container, tk, comment)","<p>Creates an RDoc::Method on <code>container</code> from <code>comment</code> if there is a Signature section in the comment\n",null,1],["parse_comments","Prism","ruby/classes/Prism.html#method-c-parse_comments","(code, **options)","<p>Mirror the Prism.parse_comments API by using the serialization API.\n",null,1],["parse_config","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-c-parse_config","(p1)","<p>Parses the configuration data read from <em>io</em> and returns the whole content as a Hash.\n",null,1],["parse_constant","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_constant","(container, tk, comment, ignore_constants = false)","<p>Parses a constant in <code>context</code> with <code>comment</code>.  If <code>ignore_constants</code> is true, no found constants will be added …\n",null,1],["parse_constant_visibility","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_constant_visibility","(container, single, tk)","<p>Parses a Module#private_constant or Module#public_constant call from <code>tk</code>.\n",null,1],["parse_ctype","Fiddle::CParser","ruby/classes/Fiddle/CParser.html#method-i-parse_ctype","(ty, tymap=nil)","<p>Given a String of C type <code>ty</code>, returns the corresponding Fiddle constant.\n<p><code>ty</code> can also accept an Array of …\n",null,1],["parse_data_with_trailing_star","Mime::Type","rails/classes/Mime/Type.html#method-c-parse_data_with_trailing_star","(type)","<p>For an input of <code>&#39;text&#39;</code>, returns <code>[Mime[:json], Mime[:xml], Mime[:ics], Mime[:html], Mime[:css],</code> …\n",null,0],["parse_date","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-parse_date","(date)","<p>Parse date in ISO-8601, RFC-2822, or default of Git\n",null,1],["parse_dot_doc_file","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-parse_dot_doc_file","(in_dir, filename)","<p>The .document file contains a list of file and directory name patterns, representing candidates for documentation. …\n",null,1],["parse_entries","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-parse_entries","()","<p>Parses the entries in the ChangeLog.\n<p>Returns an Array of each ChangeLog entry in order of parsing.\n<p>A ChangeLog …\n",null,1],["parse_entries","RDoc::Parser::ChangeLog::Git","ruby/classes/RDoc/Parser/ChangeLog/Git.html#method-i-parse_entries","()","<p>Parses the entries in the Git commit logs\n",null,1],["parse_error","ActiveSupport::JSON","rails/classes/ActiveSupport/JSON.html#method-c-parse_error","()","<p>Returns the class of the error that will be raised when there is an error in decoding JSON. Using this …\n",null,0],["parse_failure?","Prism","ruby/classes/Prism.html#method-c-parse_failure-3F","(source, **options)","<p>Returns true if the source parses with errors.\n",null,1],["parse_file","Prism","ruby/classes/Prism.html#method-c-parse_file","(filepath, **options)","<p>Mirror the Prism.parse_file API by using the serialization API. This uses native strings instead of  …\n",null,1],["parse_file","Psych","ruby/classes/Psych.html#method-c-parse_file","(filename, fallback: false)","<p>Parse a file at <code>filename</code>. Returns the Psych::Nodes::Document.\n<p>Raises a Psych::SyntaxError when a YAML …\n",null,1],["parse_file","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-parse_file","(filename)","<p>Parses <code>filename</code> and returns an RDoc::TopLevel\n",null,1],["parse_file","RubyVM::AbstractSyntaxTree","ruby/classes/RubyVM/AbstractSyntaxTree.html#method-c-parse_file","(pathname, keep_script_lines: RubyVM.keep_script_lines, error_tolerant: false, keep_tokens: false)","<p>Reads the file from <em>pathname</em>, then parses it like ::parse, returning the root node of the abstract syntax …\n",null,1],["parse_file_comments","Prism","ruby/classes/Prism.html#method-c-parse_file_comments","(filepath, **options)","<p>Mirror the Prism.parse_file_comments API by using the serialization API. This uses native strings instead …\n",null,1],["parse_file_failure?","Prism","ruby/classes/Prism.html#method-c-parse_file_failure-3F","(filepath, **options)","<p>Returns true if the file at filepath parses with errors.\n",null,1],["parse_file_success?","Prism","ruby/classes/Prism.html#method-c-parse_file_success-3F","(filepath, **options)","<p>Mirror the Prism.parse_file_success? API by using the serialization API.\n",null,1],["parse_files","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-parse_files","(files)","<p>Parse each file on the command line, recursively entering directories.\n",null,1],["parse_files_matching","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-parse_files_matching","(regexp)","<p>Record which file types this parser can understand.\n<p>It is ok to call this multiple times.\n",null,1],["parse_info","RDoc::Parser::ChangeLog::Git","ruby/classes/RDoc/Parser/ChangeLog/Git.html#method-i-parse_info","(info)","<p>Parses auxiliary info.  Currentry ‘base-url` to expand references is effective.\n",null,1],["parse_int","Psych::ScalarScanner","ruby/classes/Psych/ScalarScanner.html#method-i-parse_int","(string)","<p>Parse and return an int from <code>string</code>\n",null,1],["parse_keyseq","Reline::Config","ruby/classes/Reline/Config.html#method-i-parse_keyseq","(str)","",null,1],["parse_lex","Prism","ruby/classes/Prism.html#method-c-parse_lex","(code, **options)","<p>Mirror the Prism.parse_lex API by using the serialization API.\n",null,1],["parse_lex_file","Prism","ruby/classes/Prism.html#method-c-parse_lex_file","(filepath, **options)","<p>Mirror the Prism.parse_lex_file API by using the serialization API.\n",null,1],["parse_line","CSV","ruby/classes/CSV.html#method-c-parse_line","(line, **options)","<p>Returns the data created by parsing the first line of <code>string</code> or <code>io</code> using the specified <code>options</code>.\n<p>Argument …\n",null,1],["parse_meta_attr","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_meta_attr","(context, single, tk, comment)","<p>Parses a meta-programmed attribute and creates an RDoc::Attr.\n<p>To create foo and bar attributes on class …\n",null,1],["parse_meta_method","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_meta_method","(container, single, tk, comment)","<p>Parses a meta-programmed method\n",null,1],["parse_method","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method","(container, single, tk, comment)","<p>Parses a normal method defined by <code>def</code>\n",null,1],["parse_method_dummy","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method_dummy","(container)","<p>Parses a method that needs to be ignored.\n",null,1],["parse_method_or_yield_parameters","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method_or_yield_parameters","(method = nil, modifiers = RDoc::METHOD_MODIFIERS)","<p>Extracts <code>yield</code> parameters from <code>method</code>\n",null,1],["parse_method_parameters","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method_parameters","(method)","<p>Capture the method’s parameters. Along the way, look for a comment containing:\n\n<pre><code># yields: ....\n</code></pre>\n<p>and add …\n",null,1],["parse_method_params_and_body","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_method_params_and_body","(container, single, meth, added_container)","<p>Parses the parameters and body of <code>meth</code>\n",null,1],["parse_module","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_module","(container, single, tk, comment)","<p>Parses an RDoc::NormalModule in <code>container</code> with <code>comment</code>\n",null,1],["parse_openssl","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-c-parse_openssl","(str, template=OBJECT_TYPE_TEMPLATE)","<p>Parses the string representation of a distinguished name. Two different forms are supported:\n<p>OpenSSL format …\n",null,1],["parse_printf_format","IRB::OutputMethod","ruby/classes/IRB/OutputMethod.html#method-i-parse_printf_format","(format, opts)","<p>Returns an array of the given <code>format</code> and <code>opts</code> to be used by Kernel#sprintf, if there was a successful …\n",null,1],["parse_require","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_require","(context, comment)","<p>Parses an RDoc::Require in <code>context</code> containing <code>comment</code>\n",null,1],["parse_rescue","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_rescue","()","<p>Parses a rescue\n",null,1],["parse_rfc2253","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-c-parse_rfc2253","(str, template=OBJECT_TYPE_TEMPLATE)","<p>Parses the UTF-8 string representation of a distinguished name, according to RFC 2253.\n<p>See also #to_utf8 …\n",null,1],["parse_signature","Fiddle::CParser","ruby/classes/Fiddle/CParser.html#method-i-parse_signature","(signature, tymap=nil)","<p>Parses a C prototype signature\n<p>If Hash <code>tymap</code> is provided, the return value and the arguments from the …\n",null,1],["parse_statements","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_statements","(container, single = NORMAL, current_method = nil, comment = new_comment(''))","<p>The core of the Ruby parser.\n",null,1],["parse_stream","Psych","ruby/classes/Psych.html#method-c-parse_stream","(yaml, filename: nil, &block)","<p>Parse a YAML string in <code>yaml</code>.  Returns the Psych::Nodes::Stream. This method can handle multiple YAML …\n",null,1],["parse_struct_signature","Fiddle::CParser","ruby/classes/Fiddle/CParser.html#method-i-parse_struct_signature","(signature, tymap=nil)","<p>Parses a C struct’s members\n<p>Example:\n\n<pre><code>require &#39;fiddle/import&#39;\n\ninclude Fiddle::CParser\n  #=&gt; Object ...\n</code></pre>\n",null,1],["parse_success?","Prism","ruby/classes/Prism.html#method-c-parse_success-3F","(code, **options)","<p>Mirror the Prism.parse_success? API by using the serialization API.\n",null,1],["parse_symbol_arg","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_symbol_arg","(no = nil)","<p>Parse up to <code>no</code> symbol arguments\n",null,1],["parse_symbol_in_arg","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_symbol_in_arg","()","<p>Returns symbol text from the next token\n",null,1],["parse_time","Psych::ScalarScanner","ruby/classes/Psych/ScalarScanner.html#method-i-parse_time","(string)","<p>Parse and return a Time from <code>string</code>\n",null,1],["parse_top_level_statements","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_top_level_statements","(container)","<p>Parses statements in the top-level <code>container</code>\n",null,1],["parse_trailing_star","Mime::Type","rails/classes/Mime/Type.html#method-c-parse_trailing_star","(accept_header)","",null,0],["parse_visibility","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_visibility","(container, single, tk)","<p>Determines the visibility in <code>container</code> from <code>tk</code>\n",null,1],["parse_yield","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-parse_yield","(context, single, tk, method)","<p>Determines the block parameter for <code>context</code>\n",null,1],["parser","Psych","ruby/classes/Psych.html#method-c-parser","()","<p>Returns a default parser\n",null,1],["parser","SyntaxSuggest::Cli","ruby/classes/SyntaxSuggest/Cli.html#method-i-parser","()","",null,1],["parser","URI::Generic","ruby/classes/URI/Generic.html#method-i-parser","()","<p>Returns the parser to be used.\n<p>Unless a URI::Parser is defined, DEFAULT_PARSER is used.\n",null,1],["parser=","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-parser-3D","(val)","<p>Sets the parser for this toplevel context, also the store.\n",null,1],["partial.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/scaffold/templates/partial_html_erb_tt.html","","<p>&lt;div id=“&lt;%%= dom_id &lt;%= singular_name %&gt; %&gt;”&gt; &lt;% attributes.reject(&amp;:password_digest?).each …\n",null,0],["partial_writes","ActiveRecord::AttributeMethods::Dirty::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/Dirty/ClassMethods.html#method-i-partial_writes","()","",null,0],["partial_writes=","ActiveRecord::AttributeMethods::Dirty::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/Dirty/ClassMethods.html#method-i-partial_writes-3D","(value)","",null,0],["partial_writes?","ActiveRecord::AttributeMethods::Dirty::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/Dirty/ClassMethods.html#method-i-partial_writes-3F","()","",null,0],["partition","Enumerable","ruby/classes/Enumerable.html#method-i-partition","()","<p>With a block given, returns an array of two arrays:\n<p>The first having those elements for which the block …\n",null,1],["partition","String","ruby/classes/String.html#method-i-partition","(p1)","<p>Returns a 3-element array of substrings of <code>self</code>.\n<p>Matches a pattern against <code>self</code>, scanning from the beginning. …\n",null,1],["partition_segments","Gem::Version","ruby/classes/Gem/Version.html#method-i-partition_segments","(ver)","",null,1],["parts","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-parts","()","<p>Returns a copy of the parts hash that defines the duration\n",null,0],["pass","Thread","ruby/classes/Thread.html#method-c-pass","()","<p>Give the thread scheduler a hint to pass execution to another thread. A running thread may or may not …\n",null,1],["passwd","Etc","ruby/classes/Etc.html#method-c-passwd","()","<p>Provides a convenient Ruby iterator which executes a block for each entry in the <code>/etc/passwd</code> file.\n<p>The …\n",null,1],["password","URI::Generic","ruby/classes/URI/Generic.html#method-i-password","()","<p>Returns the password component (without URI decoding).\n",null,1],["password=","URI::Generic","ruby/classes/URI/Generic.html#method-i-password-3D","(password)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["password_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-password_field","","<p>Wraps ActionView::Helpers::FormHelper#password_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do ...\n</code></pre>\n",null,0],["password_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-password_field","(object_name, method, options = {})","<p>Returns an input tag of the “password” type tailored for accessing a specified attribute (identified …\n",null,0],["password_field","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-password_field","(name = \"\", value = nil, size = 40, maxlength = nil)","<p>Generate a Password Input element as a string.\n<p><code>name</code> is the name of the input field.  <code>value</code> is its default …\n",null,1],["password_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-password_field_tag","(name = \"password\", value = nil, options = {})","<p>Creates a password field, a masked text field that will hide the users input behind a mask character. …\n",null,0],["past?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-past-3F","()","<p>Returns true if the current object’s time is in the past.\n",null,0],["past?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-past-3F","()","<p>Returns true if the date/time is in the past.\n",null,0],["patch","ActionDispatch::Routing::Mapper::HttpHelpers","rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-patch","(*args, &block)","<p>Define a route that only recognizes HTTP PATCH. For supported arguments, see match\n\n<pre><code>patch &#39;bacon&#39;, to: ...\n</code></pre>\n",null,0],["patch","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-patch","(path, data, initheader = nil, dest = nil)","<p>Sends a PATCH request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["path","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-path","()","<p>Shortcut for <code>tempfile.path</code>.\n",null,0],["path","ActionDispatch::Routing::PathRedirect","rails/classes/ActionDispatch/Routing/PathRedirect.html#method-i-path","(params, request)","",null,0],["path","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-path","","",null,0],["path","Rails::Generators::AppBase::GemfileEntry","rails/classes/Rails/Generators/AppBase/GemfileEntry.html#method-c-path","(name, path, comment = nil)","",null,0],["path","ARGF","ruby/classes/ARGF.html#method-i-path","()","<p>Returns the current filename. “-” is returned when the current file is STDIN.\n<p>For example:\n\n<pre><code>$ ...\n</code></pre>\n",null,1],["path","CSV","ruby/classes/CSV.html#method-i-path","()","",null,1],["path","Dir","ruby/classes/Dir.html#method-i-path","()","<p>Returns the <code>dirpath</code> string that was used to create <code>self</code> (or <code>nil</code> if created by method Dir.for_fd):\n\n<pre><code>Dir.new(&#39;example&#39;).path ...\n</code></pre>\n",null,1],["path","File","ruby/classes/File.html#method-c-path","(p1)","<p>Returns the string representation of the path\n\n<pre><code>File.path(File::NULL)           #=&gt; &quot;/dev/null&quot;\nFile.path(Pathname.new(&quot;/tmp&quot;)) ...\n</code></pre>\n",null,1],["path","Gem","ruby/classes/Gem.html#method-c-path","()","",null,1],["path","IO","ruby/classes/IO.html#method-i-path","()","<p>Returns the path associated with the IO, or <code>nil</code> if there is no path associated with the IO. It is not …\n",null,1],["path","PStore","ruby/classes/PStore.html#method-i-path","()","<p>Returns the string file path used to create the store:\n\n<pre><code>store.path # =&gt; &quot;flat.store&quot;\n</code></pre>\n",null,1],["path","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-path","()","<p>Path to this class or module for use with HTML generator output.\n",null,1],["path","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-path","()","<p>Path to this constant for use with HTML generator output.\n",null,1],["path","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-path","()","<p>Path to this method for use with HTML generator output.\n",null,1],["path","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-path","()","<p>Path to this file for use with HTML generator output.\n",null,1],["path","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-path","()","<p>Returns the path of this instruction sequence.\n<p><code>&lt;compiled&gt;</code> if the iseq was evaluated from a string. …\n",null,1],["path","Tempfile","ruby/classes/Tempfile.html#method-i-path","()","<p>Returns the full path name of the temporary file. This will be nil if #unlink has been called.\n",null,1],["path","Thread::Backtrace::Location","ruby/classes/Thread/Backtrace/Location.html#method-i-path","()","<p>Returns the file name of this frame. This will generally be an absolute path, unless the frame is in …\n",null,1],["path","TracePoint","ruby/classes/TracePoint.html#method-i-path","()","<p>Path of the file being run\n",null,1],["path","UNIXSocket","ruby/classes/UNIXSocket.html#method-i-path","()","<p>Returns the path of the local address of unixsocket.\n\n<pre><code>s = UNIXServer.new(&quot;/tmp/sock&quot;)\np s.path #=&gt; &quot;/tmp/sock&quot;\n</code></pre>\n",null,1],["path","URI::FTP","ruby/classes/URI/FTP.html#method-i-path","()","<p>Returns the path from an FTP URI.\n<p>RFC 1738 specifically states that the path for an FTP URI does not include …\n",null,1],["path","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-path","()","<p>Returns the type library file path.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;) ...\n</code></pre>\n",null,1],["path=","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-path-3D","(str)","<p>Set path for which this cookie applies\n",null,1],["path=","URI::Generic","ruby/classes/URI/Generic.html#method-i-path-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["path_for","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-c-path_for","(options)","",null,0],["path_ok?","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-path_ok-3F","(gem_dir, spec)","<p>Is <code>spec</code> in <code>gem_dir</code>?\n",null,1],["path_parameters","ActionDispatch::Http::Parameters","rails/classes/ActionDispatch/Http/Parameters.html#method-i-path_parameters","()","<p>Returns a hash with the parameters used to form the path of the request. Returned hash keys are strings: …\n",null,0],["path_separator","Gem","ruby/classes/Gem.html#method-c-path_separator","()","<p>How String Gem paths should be split.  Overridable for esoteric platforms.\n",null,1],["path_to_asset","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_asset","(source, options = {})","",null,0],["path_to_audio","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_audio","(source, options = {})","",null,0],["path_to_font","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_font","(source, options = {})","",null,0],["path_to_image","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_image","(source, options = {})","",null,0],["path_to_javascript","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_javascript","(source, options = {})","",null,0],["path_to_stylesheet","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_stylesheet","(source, options = {})","",null,0],["path_to_video","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-path_to_video","(source, options = {})","",null,0],["pathconf","IO","ruby/classes/IO.html#method-i-pathconf","(p1)","<p>Returns pathname configuration variable using fpathconf().\n<p><em>name</em> should be a constant under <code>Etc</code> which begins …\n",null,1],["paths","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-paths","()","",null,0],["paths","Rails::Engine::Configuration","rails/classes/Rails/Engine/Configuration.html#method-i-paths","()","",null,0],["paths","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-paths","()","",null,0],["paths","Gem","ruby/classes/Gem.html#method-c-paths","()","<p>Retrieve the PathSupport object that RubyGems uses to lookup files.\n",null,1],["paths=","Gem","ruby/classes/Gem.html#method-c-paths-3D","(env)","<p>Initialize the filesystem paths to use from <code>env</code>. <code>env</code> is a hash-like object (typically ENV) that is queried …\n",null,1],["pattern","ActiveRecord::DynamicMatchers::Method","rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-pattern","()","",null,0],["pattern","OptionParser::Switch","ruby/classes/OptionParser/Switch.html#method-c-pattern","()","",null,1],["pattern","OptionParser::Switch::NoArgument","ruby/classes/OptionParser/Switch/NoArgument.html#method-c-pattern","()","",null,1],["pattern_matching","","ruby/files/ruby/doc/syntax/pattern_matching_rdoc.html","","<p>Pattern matching\n<p>Pattern matching is a feature allowing deep matching of structured values: checking the …\n",null,1],["pbkdf2_hmac","OpenSSL::KDF","ruby/classes/OpenSSL/KDF.html#method-c-pbkdf2_hmac","(p1, p2 = {})","<p>PKCS #5 PBKDF2 (Password-Based Key Derivation Function 2) in combination with HMAC. Takes <em>pass</em>, <em>salt</em> …\n",null,1],["pbkdf2_hmac","OpenSSL::PKCS5","ruby/classes/OpenSSL/PKCS5.html#method-i-pbkdf2_hmac","(pass, salt, iter, keylen, digest)","<p>OpenSSL::PKCS5.pbkdf2_hmac has been renamed to OpenSSL::KDF.pbkdf2_hmac. This method is provided for …\n",null,1],["pbkdf2_hmac_sha1","OpenSSL::PKCS5","ruby/classes/OpenSSL/PKCS5.html#method-i-pbkdf2_hmac_sha1","(pass, salt, iter, keylen)","",null,1],["pdftoppm_exists?","ActiveStorage::Previewer::PopplerPDFPreviewer","rails/classes/ActiveStorage/Previewer/PopplerPDFPreviewer.html#method-c-pdftoppm_exists-3F","()","",null,0],["pdftoppm_path","ActiveStorage::Previewer::PopplerPDFPreviewer","rails/classes/ActiveStorage/Previewer/PopplerPDFPreviewer.html#method-c-pdftoppm_path","()","",null,0],["peek","Enumerator","ruby/classes/Enumerator.html#method-i-peek","()","<p>Returns the next object in the enumerator, but doesn’t move the internal position forward.  If the …\n",null,1],["peek","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-peek","()","",null,1],["peek","StringScanner","ruby/classes/StringScanner.html#method-i-peek","(p1)","<p>Extracts a string corresponding to <code>string[pos,len]</code>, without advancing the scan pointer.\n\n<pre><code>s = StringScanner.new(&#39;test ...\n</code></pre>\n",null,1],["peek","SyntaxSuggest::PriorityEngulfQueue","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html#method-i-peek","()","",null,1],["peek","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-peek","()","",null,1],["peek","SyntaxSuggest::UnvisitedLines","ruby/classes/SyntaxSuggest/UnvisitedLines.html#method-i-peek","()","",null,1],["peek_read","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-peek_read","()","<p>Peek equivalent for get_tkread\n",null,1],["peek_result","Coverage","ruby/classes/Coverage.html#method-c-peek_result","()","<p>Returns a hash that contains filename as key and coverage array as value. This is the same as ‘Coverage.result(stop: …\n",null,1],["peek_tk","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-peek_tk","()","<p>Peek at the next token, but don’t remove it from the stream\n",null,1],["peek_values","Enumerator","ruby/classes/Enumerator.html#method-i-peek_values","()","<p>Returns the next object as an array, similar to Enumerator#next_values, but doesn’t move the internal …\n",null,1],["peep","StringScanner","ruby/classes/StringScanner.html#method-i-peep","(p1)","<p>Equivalent to #peek. This method is obsolete; use #peek instead.\n",null,1],["peer_cert","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-peer_cert","()","<p>Returns the X509 certificate chain (an array of strings) for the session’s socket peer, or <code>nil</code> if …\n",null,1],["peer_cert","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-peer_cert","()","<p>The X509 certificate for this socket’s peer.\n",null,1],["peer_cert_chain","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-peer_cert_chain","()","<p>The X509 certificate chain for this socket’s peer.\n",null,1],["peer_finished_message","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-peer_finished_message","()","<p>Returns the last <strong>Finished</strong> message received\n",null,1],["peeraddr","IPSocket","ruby/classes/IPSocket.html#method-i-peeraddr","(*args)","<p>Returns the remote address as an array which contains address_family, port, hostname and numeric_address. …\n",null,1],["peeraddr","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-peeraddr","()","",null,1],["peeraddr","UNIXSocket","ruby/classes/UNIXSocket.html#method-i-peeraddr","()","<p>Returns the remote address as an array which contains address_family and unix_path.\n<p>Example\n\n<pre><code>serv = UNIXServer.new(&quot;/tmp/sock&quot;) ...\n</code></pre>\n",null,1],["peg_parse","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-peg_parse","(markdown)","<p>The internal kpeg parse method\n",null,1],["pending","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-pending","()","<p>The number of bytes that are immediately available for reading.\n",null,1],["pending_interrupt?","Thread","ruby/classes/Thread.html#method-i-pending_interrupt-3F","(*args)","<p>Returns whether or not the asynchronous queue is empty for the target thread.\n<p>If <code>error</code> is given, then …\n",null,1],["pending_interrupt?","Thread","ruby/classes/Thread.html#method-c-pending_interrupt-3F","(*args)","<p>Returns whether or not the asynchronous queue is empty.\n<p>Since Thread::handle_interrupt can be used to …\n",null,1],["per_form_csrf_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-per_form_csrf_token","(session, action_path, method)","",null,0],["percent_doc","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-percent_doc","()","<p>Calculates the percentage of items documented.\n",null,1],["perform","ActionMailbox::IncinerationJob","rails/classes/ActionMailbox/IncinerationJob.html#method-i-perform","(inbound_email)","",null,0],["perform","ActionMailbox::RoutingJob","rails/classes/ActionMailbox/RoutingJob.html#method-i-perform","(inbound_email)","",null,0],["perform","ActiveJob::Execution","rails/classes/ActiveJob/Execution.html#method-i-perform","(*)","",null,0],["perform","ActiveRecord::DestroyAssociationAsyncJob","rails/classes/ActiveRecord/DestroyAssociationAsyncJob.html#method-i-perform","( owner_model_name: nil, owner_id: nil, association_class: nil, association_ids: nil, association_primary_key_column: nil, ensuring_owner_was_method: nil )","",null,0],["perform","ActiveStorage::AnalyzeJob","rails/classes/ActiveStorage/AnalyzeJob.html#method-i-perform","(blob)","",null,0],["perform","ActiveStorage::MirrorJob","rails/classes/ActiveStorage/MirrorJob.html#method-i-perform","(key, checksum:)","",null,0],["perform","ActiveStorage::PurgeJob","rails/classes/ActiveStorage/PurgeJob.html#method-i-perform","(blob)","",null,0],["perform_action","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-perform_action","(data)","<p>Extract the action name from the passed data and process it via the channel. The process will ensure …\n",null,0],["perform_later","ActiveJob::Enqueuing::ClassMethods","rails/classes/ActiveJob/Enqueuing/ClassMethods.html#method-i-perform_later","(...)","<p>Push a job onto the queue. By default the arguments must be either String, Integer, Float, NilClass, …\n",null,0],["perform_now","ActiveJob::Execution","rails/classes/ActiveJob/Execution.html#method-i-perform_now","()","<p>Performs the job immediately. The job is not sent to the queuing adapter but directly executed by blocking …\n",null,0],["perform_now","ActiveJob::Execution::ClassMethods","rails/classes/ActiveJob/Execution/ClassMethods.html#method-i-perform_now","(...)","<p>Performs the job immediately.\n\n<pre><code>MyJob.perform_now(&quot;mike&quot;)\n</code></pre>\n",null,0],["performed?","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-performed-3F","()","<p>Tests if a response body is set. Used to determine if the <code>process_action</code> callback needs to be terminated …\n",null,0],["performed?","ActionController::Metal","rails/classes/ActionController/Metal.html#method-i-performed-3F","()","<p>Tests if render or redirect has already happened.\n",null,0],["period","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-period","()","<p>Returns the underlying <code>TZInfo::TimezonePeriod</code>.\n",null,0],["period_for_local","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-period_for_local","(time, dst = true)","<p>Available so that TimeZone instances respond like <code>TZInfo::Timezone</code> instances.\n",null,0],["period_for_utc","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-period_for_utc","(time)","<p>Available so that TimeZone instances respond like <code>TZInfo::Timezone</code> instances.\n",null,0],["periodically","ActionCable::Channel::PeriodicTimers::ClassMethods","rails/classes/ActionCable/Channel/PeriodicTimers/ClassMethods.html#method-i-periodically","(callback_or_method_name = nil, every:, &block)","<p>Periodically performs a task on the channel, like updating an online user counter, polling a backend …\n",null,0],["permanent","ActionDispatch::Cookies::ChainedCookieJars","rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-permanent","()","<p>Returns a jar that’ll automatically set the assigned cookies to have an expiration date 20 years …\n",null,0],["permanent_failure?","ActionMailbox::Relayer::Result","rails/classes/ActionMailbox/Relayer/Result.html#method-i-permanent_failure-3F","()","",null,0],["permissions_policy","ActionController::PermissionsPolicy::ClassMethods","rails/classes/ActionController/PermissionsPolicy/ClassMethods.html#method-i-permissions_policy","(**options, &block)","<p>Overrides parts of the globally configured <code>Feature-Policy</code> header:\n\n<pre><code>class PagesController &lt; ApplicationController ...\n</code></pre>\n",null,0],["permissions_policy","ActionDispatch::PermissionsPolicy::Request","rails/classes/ActionDispatch/PermissionsPolicy/Request.html#method-i-permissions_policy","()","",null,0],["permissions_policy","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-permissions_policy","(&block)","<p>Configures the ActionDispatch::PermissionsPolicy.\n",null,0],["permissions_policy.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/initializers/permissions_policy_rb_tt.html","","<p># Define an application-wide HTTP permissions policy. For further # information see developers.google.com/web/updates/2018/06/feature-policy …\n",null,0],["permissions_policy=","ActionDispatch::PermissionsPolicy::Request","rails/classes/ActionDispatch/PermissionsPolicy/Request.html#method-i-permissions_policy-3D","(policy)","",null,0],["permit","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-permit","(*filters)","<p>Returns a new <code>ActionController::Parameters</code> instance that includes only the given <code>filters</code> and sets the …\n",null,0],["permit!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-permit-21","()","<p>Sets the <code>permitted</code> attribute to <code>true</code>. This can be used to pass mass assignment. Returns <code>self</code>.\n\n<pre><code>class Person ...\n</code></pre>\n",null,0],["permit_concurrent_loads","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-permit_concurrent_loads","(&block)","",null,0],["permitted?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-permitted-3F","()","<p>Returns <code>true</code> if the parameter is permitted, <code>false</code> otherwise.\n\n<pre><code>params = ActionController::Parameters.new ...\n</code></pre>\n",null,0],["permutation","Array","ruby/classes/Array.html#method-i-permutation","(*args)","<p>When invoked with a block, yield all permutations of elements of <code>self</code>; returns <code>self</code>. The order of permutations …\n",null,1],["permute","OptionParser","ruby/classes/OptionParser.html#method-i-permute","(*argv, into: nil)","<p>Parses command line arguments <code>argv</code> in permutation mode and returns list of non-option arguments. When …\n",null,1],["permute!","OptionParser","ruby/classes/OptionParser.html#method-i-permute-21","(argv = default_argv, into: nil)","<p>Same as #permute, but removes switches destructively. Non-option arguments remain in <code>argv</code>.\n",null,1],["permute!","OptionParser::Arguable","ruby/classes/OptionParser/Arguable.html#method-i-permute-21","()","<p>Parses <code>self</code> destructively in permutation mode and returns <code>self</code> containing the rest arguments left unparsed. …\n",null,1],["persisted?","ActiveModel::API","rails/classes/ActiveModel/API.html#method-i-persisted-3F","()","<p>Indicates if the model is persisted. Default is <code>false</code>.\n\n<pre><code>class Person\n  include ActiveModel::API\n  attr_accessor ...\n</code></pre>\n",null,0],["persisted?","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-persisted-3F","()","<p>Returns true if the record is persisted, i.e. it’s not a new record and it was not destroyed, otherwise …\n",null,0],["petabyte","Numeric","rails/classes/Numeric.html#method-i-petabyte","()","",null,0],["petabytes","Numeric","rails/classes/Numeric.html#method-i-petabytes","()","<p>Returns the number of bytes equivalent to the petabytes provided.\n\n<pre><code>2.petabytes # =&gt; 2_251_799_813_685_248\n</code></pre>\n",null,0],["pfamily","Addrinfo","ruby/classes/Addrinfo.html#method-i-pfamily","()","<p>returns the protocol family as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).pfamily == Socket::PF_INET #=&gt; ...\n</code></pre>\n",null,1],["phase","Complex","ruby/classes/Complex.html#method-i-phase","()","<p>Returns the argument (angle) for <code>self</code> in radians; see polar coordinates:\n\n<pre><code>Complex.polar(3, Math::PI/2).arg ...\n</code></pre>\n",null,1],["phase","Float","ruby/classes/Float.html#method-i-phase","()","<p>Returns 0 if <code>self</code> is positive, Math::PI otherwise.\n",null,1],["phase","Numeric","ruby/classes/Numeric.html#method-i-phase","()","<p>Returns zero if <code>self</code> is positive, Math::PI otherwise.\n",null,1],["phone_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-phone_field","","<p>Wraps ActionView::Helpers::FormHelper#phone_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["phone_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-phone_field","(object_name, method, options = {})","<p>aliases telephone_field\n",null,0],["phone_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-phone_field_tag","(name, value = nil, options = {})","",null,0],["phone_to","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-phone_to","(phone_number, name = nil, html_options = {}, &block)","<p>Creates a TEL anchor link tag to the specified <code>phone_number</code>. When the link is clicked, the default app …\n",null,0],["pick","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-pick","(*column_names)","<p>Pick the value(s) from the named column(s) in the current relation. This is short-hand for <code>relation.limit(1).pluck(*column_names).first</code> …\n",null,0],["pick","Enumerable","rails/classes/Enumerable.html#method-i-pick","(*keys)","<p>Extract the given key from the first element in the enumerable.\n\n<pre><code>[{ name: &quot;David&quot; }, { name: &quot;Rafael&quot; }, ...\n</code></pre>\n",null,0],["pick_best!","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-pick_best-21","()","",null,1],["pid","IO","ruby/classes/IO.html#method-i-pid","()","<p>Returns the process ID of a child process associated with the stream, which will have been set by IO#popen …\n",null,1],["pid","Process","ruby/classes/Process.html#method-c-pid","()","<p>Returns the process ID of the current process:\n\n<pre><code>Process.pid # =&gt; 15668\n</code></pre>\n",null,1],["pid","Process::Status","ruby/classes/Process/Status.html#method-i-pid","()","<p>Returns the process ID of the process:\n\n<pre><code>system(&quot;false&quot;)\n$?.pid # =&gt; 1247002\n</code></pre>\n",null,1],["pid","StringIO","ruby/classes/StringIO.html#method-i-pid","()","<p>Returns <code>nil</code>.  Just for compatibility to IO.\n",null,1],["pipe","IO","ruby/classes/IO.html#method-c-pipe","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a pair of pipe endpoints, <code>read_io</code> and <code>write_io</code>, connected to each other.\n<p>If argument <code>enc_string</code> …\n",null,1],["pipe?","File","ruby/classes/File.html#method-c-pipe-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a pipe, <code>false</code> otherwise:\n\n<pre><code>File.mkfifo(&#39;tmp/fifo&#39;)\nFile.pipe?(&#39;tmp/fifo&#39;) ...\n</code></pre>\n",null,1],["pipe?","File::Stat","ruby/classes/File/Stat.html#method-i-pipe-3F","()","<p>Returns <code>true</code> if the operating system supports pipes and <em>stat</em> is a pipe; <code>false</code> otherwise.\n",null,1],["pipe?","FileTest","ruby/classes/FileTest.html#method-i-pipe-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a pipe, <code>false</code> otherwise:\n\n<pre><code>File.mkfifo(&#39;tmp/fifo&#39;)\nFile.pipe?(&#39;tmp/fifo&#39;) ...\n</code></pre>\n",null,1],["pipe?","Pathname","ruby/classes/Pathname.html#method-i-pipe-3F","()","<p>See FileTest.pipe?.\n",null,1],["pipeline","Open3","ruby/classes/Open3.html#method-c-pipeline","(*cmds)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process for each of the given <code>cmds</code> by calling …\n",null,1],["pipeline_r","Open3","ruby/classes/Open3.html#method-c-pipeline_r","(*cmds, &block)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process for each of the given <code>cmds</code> by calling …\n",null,1],["pipeline_rw","Open3","ruby/classes/Open3.html#method-c-pipeline_rw","(*cmds, &block)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process for each of the given <code>cmds</code> by calling …\n",null,1],["pipeline_start","Open3","ruby/classes/Open3.html#method-c-pipeline_start","(*cmds, &block)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process for each of the given <code>cmds</code> by calling …\n",null,1],["pipeline_w","Open3","ruby/classes/Open3.html#method-c-pipeline_w","(*cmds, &block)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process for each of the given <code>cmds</code> by calling …\n",null,1],["pkcs5_keyivgen","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-pkcs5_keyivgen","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Generates and sets the key/IV based on a password.\n<p><strong>WARNING</strong>: This method is only PKCS5 v1.5 compliant when …\n",null,1],["pkg_config","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-pkg_config","(pkg, *options)","<p>Returns compile/link information about an installed library in a tuple of <code>[cflags, ldflags, libs]</code>, by …\n",null,1],["platform","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-platform","()","<p>Platform of the gem\n",null,1],["platform","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-platform","(*platforms)","<p>Block form for restricting gems to a set of platforms.\n<p>The gem dependencies platform is different from …\n",null,1],["platform","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-platform","()","<p>The platform of this activation request’s specification\n",null,1],["platform","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-platform","()","<p>The platform this gem works on.\n",null,1],["platform","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-platform","()","<p>The platform this gem runs on.  See Gem::Platform for details.\n",null,1],["platform=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-platform-3D","(platform)","<p>The platform this gem runs on.\n<p>This is usually Gem::Platform::RUBY or Gem::Platform::CURRENT.\n<p>Most gems …\n",null,1],["platform_defaults","Gem","ruby/classes/Gem.html#method-c-platform_defaults","()","<p>Default options for gem commands for Ruby implementers.\n<p>The options here should be structured as an array …\n",null,1],["platforms","Gem","ruby/classes/Gem.html#method-c-platforms","()","<p>Array of platforms this RubyGems supports.\n",null,1],["platforms","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-platforms","(*platforms)","<p>Block form for restricting gems to a particular set of platforms.  See #platform.\n",null,1],["platforms=","Gem","ruby/classes/Gem.html#method-c-platforms-3D","(platforms)","<p>Set array of platforms this RubyGems supports (primarily for testing).\n",null,1],["plausible_dimensions","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-i-plausible_dimensions","(input)","",null,1],["pluck","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-pluck","(*column_names)","",null,0],["pluck","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-pluck","(*column_names)","<p>Use #pluck as a shortcut to select one or more attributes without loading an entire record object per …\n",null,0],["pluck","Enumerable","rails/classes/Enumerable.html#method-i-pluck","(*keys)","<p>Extract the given key from each element in the enumerable.\n\n<pre><code>[{ name: &quot;David&quot; }, { name: &quot;Rafael&quot; }, { name: ...\n</code></pre>\n",null,0],["plugin_suffix_pattern","Gem","ruby/classes/Gem.html#method-c-plugin_suffix_pattern","()","<p>Glob pattern for require-able plugin suffixes.\n",null,1],["plugin_suffix_regexp","Gem","ruby/classes/Gem.html#method-c-plugin_suffix_regexp","()","<p>Regexp for require-able plugin suffixes.\n",null,1],["plugin_types","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-plugin_types","(*types)","<p>Restricts the set of plugins that can be embedded:\n\n<pre><code>policy.plugin_types &quot;application/x-shockwave-flash&quot;\n</code></pre>\n",null,0],["plugindir","Gem","ruby/classes/Gem.html#method-c-plugindir","(install_dir=Gem.dir)","<p>The path were rubygems plugins are to be installed.\n",null,1],["plugins","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-plugins","()","<p>Returns the list of plugins in this spec.\n",null,1],["plural","ActiveModel::Naming","rails/classes/ActiveModel/Naming.html#method-c-plural","(record_or_class)","<p>Returns the plural class name of a record or class.\n\n<pre><code>ActiveModel::Naming.plural(post)             # =&gt; ...\n</code></pre>\n",null,0],["plural","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-plural","(rule, replacement)","<p>Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular …\n",null,0],["plural_file_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-plural_file_name","()","",null,0],["plural_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-plural_name","()","",null,0],["plural_route_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-plural_route_name","()","",null,0],["plural_table_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-plural_table_name","()","",null,0],["pluralize","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-pluralize","(count, singular, plural_arg = nil, plural: plural_arg, locale: I18n.locale)","<p>Attempts to pluralize the <code>singular</code> word unless <code>count</code> is 1. If <code>plural</code> is supplied, it will use that when …\n",null,0],["pluralize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-pluralize","(word, locale = :en)","<p>Returns the plural form of the word in the string.\n<p>If passed an optional <code>locale</code> parameter, the word will …\n",null,0],["pluralize","String","rails/classes/String.html#method-i-pluralize","(count = nil, locale = :en)","<p>Returns the plural form of the word in the string.\n<p>If the optional parameter <code>count</code> is specified, the singular …\n",null,0],["pluralize_table_names","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-pluralize_table_names","","<p>Indicates whether table names should be the pluralized versions of the corresponding class names. If …\n",null,0],["pluralize_table_names=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-pluralize_table_names-3D","","<p>Set whether table names should be the pluralized versions of the corresponding class names. If true, …\n",null,0],["pluralize_table_names?","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-pluralize_table_names-3F","()","",null,0],["point","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-point","","",null,0],["point_conversion_form","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-point_conversion_form","()","<p>Returns the form how EC::Point data is encoded as ASN.1.\n<p>See also #point_conversion_form=.\n",null,1],["point_conversion_form=","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-point_conversion_form-3D","(p1)","<p>Sets the form how EC::Point data is encoded as ASN.1 as defined in X9.62.\n<p><em>format</em> can be one of these: …\n",null,1],["pointer","StringScanner","ruby/classes/StringScanner.html#method-i-pointer","()","<p>Returns the byte position of the scan pointer.  In the ‘reset’ position, this value is zero. …\n",null,1],["pointer=","StringScanner","ruby/classes/StringScanner.html#method-i-pointer-3D","(p1)","<p>Sets the byte position of the scan pointer.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.pos = 7            ...\n</code></pre>\n",null,1],["polar","Complex","ruby/classes/Complex.html#method-i-polar","()","<p>Returns the array <code>[self.abs, self.arg]</code>:\n\n<pre><code>Complex.polar(1, 2).polar # =&gt; [1.0, 2.0]\n</code></pre>\n<p>See Polar Coordinates …\n",null,1],["polar","Complex","ruby/classes/Complex.html#method-c-polar","(p1, p2 = v2)","<p>Returns a new Complex object formed from the arguments, each of which must be an instance of Numeric …\n",null,1],["polar","Numeric","ruby/classes/Numeric.html#method-i-polar","()","<p>Returns array <code>[self.abs, self.arg]</code>.\n",null,1],["policy_id","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-policy_id","()","<p>Returns the ‘short name’ of the object identifier that represents the timestamp policy under …\n",null,1],["policy_id","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-policy_id","()","<p>Returns the timestamp policy object identifier of the policy this timestamp was created under. If status …\n",null,1],["policy_id=","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-policy_id-3D","(p1)","<p>Allows to set the object identifier that represents the timestamp policy under which the server shall …\n",null,1],["poll","ActiveRecord::ConnectionAdapters::ConnectionPool::Queue","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Queue.html#method-i-poll","(timeout = nil)","<p>Remove the head of the queue.\n<p>If <code>timeout</code> is not given, remove and return the head of the queue if the …\n",null,0],["poll_for_otp","Gem::GemcutterUtilities::WebauthnPoller","ruby/classes/Gem/GemcutterUtilities/WebauthnPoller.html#method-i-poll_for_otp","(webauthn_url, credentials)","",null,1],["poll_thread","Gem::GemcutterUtilities::WebauthnPoller","ruby/classes/Gem/GemcutterUtilities/WebauthnPoller.html#method-c-poll_thread","(options, host, webauthn_url, credentials)","",null,1],["polygon","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-polygon","","",null,0],["polymorphic_class_for","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-polymorphic_class_for","(name)","<p>Returns the class for the provided <code>name</code>.\n<p>It is used to find the class correspondent to the value stored …\n",null,0],["polymorphic_name","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-polymorphic_name","()","<p>Returns the value to be stored in the polymorphic type column for Polymorphic Associations.\n",null,0],["polymorphic_path","ActionDispatch::Routing::PolymorphicRoutes","rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_path","(record_or_hash_or_array, options = {})","<p>Returns the path component of a URL for the given record.\n",null,0],["polymorphic_url","ActionDispatch::Routing::PolymorphicRoutes","rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_url","(record_or_hash_or_array, options = {})","<p>Constructs a call to a named RESTful route for the given record and returns the resulting URL string. …\n",null,0],["pool","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-pool","()","",null,0],["pop","Array","ruby/classes/Array.html#method-i-pop","(*args)","<p>Removes and returns trailing elements.\n<p>When no argument is given and <code>self</code> is not empty, removes and returns …\n",null,1],["pop","Rinda::NotifyTemplateEntry","ruby/classes/Rinda/NotifyTemplateEntry.html#method-i-pop","()","<p>Retrieves a notification.  Raises RequestExpiredError when this NotifyTemplateEntry expires.\n",null,1],["pop","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-pop","()","<p>Returns a code block with the largest indentation possible\n",null,1],["pop","SyntaxSuggest::PriorityEngulfQueue","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html#method-i-pop","()","",null,1],["pop","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-pop","()","",null,1],["pop","SyntaxSuggest::UnvisitedLines","ruby/classes/SyntaxSuggest/UnvisitedLines.html#method-i-pop","()","",null,1],["pop","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-pop","(non_block = false, timeout: nil)","<p>Retrieves data from the queue.\n<p>If the queue is empty, the calling thread is suspended until data is pushed …\n",null,1],["pop","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-pop","(non_block = false, timeout: nil)","<p>Retrieves data from the queue.\n<p>If the queue is empty, the calling thread is suspended until data is pushed …\n",null,1],["pop_inspect_key","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-pop_inspect_key","(id)","<p>Removes an object from the set of objects being pretty printed.\n",null,1],["pop_token","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-i-pop_token","()","<p>Remove the last token from the collected tokens\n",null,1],["pop_workspace","IRB::Context","ruby/classes/IRB/Context.html#method-i-pop_workspace","()","<p>Removes the last element from the current #workspaces stack and returns it, or <code>nil</code> if the current workspace …\n",null,1],["popen","Gem::Util","ruby/classes/Gem/Util.html#method-c-popen","(*command)","<p>This calls IO.popen and reads the result\n",null,1],["popen","IO","ruby/classes/IO.html#method-c-popen","(*args)","<p>Executes the given command <code>cmd</code> as a subprocess whose $stdin and $stdout are connected to a new stream …\n",null,1],["popen2","Open3","ruby/classes/Open3.html#method-c-popen2","(*cmd, &block)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process, by calling Process.spawn with the …\n",null,1],["popen2e","Open3","ruby/classes/Open3.html#method-c-popen2e","(*cmd, &block)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process, by calling Process.spawn with the …\n",null,1],["popen3","Open3","ruby/classes/Open3.html#method-c-popen3","(*cmd, &block)","<p>Basically a wrapper for Process.spawn that:\n<p>Creates a child process, by calling Process.spawn with the …\n",null,1],["popup_menu","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-popup_menu","(name = \"\", *values)","<p>Generate a Select element as a string.\n<p><code>name</code> is the name of the element.  The <code>values</code> are the options that …\n",null,1],["port","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-port","()","<p>Returns the port number of this request as an integer.\n\n<pre><code>req = ActionDispatch::Request.new &#39;HTTP_HOST&#39; =&gt; ...\n</code></pre>\n",null,0],["port=","URI::Generic","ruby/classes/URI/Generic.html#method-i-port-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["port_string","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-port_string","()","<p>Returns a string port suffix, including colon, like “:8080” if the port number of this request …\n",null,0],["pos","ARGF","ruby/classes/ARGF.html#method-i-pos","()","<p>Returns the current offset (in bytes) of the current file in ARGF.\n\n<pre><code>ARGF.pos    #=&gt; 0\nARGF.gets   #=&gt; &quot;This ...\n</code></pre>\n",null,1],["pos","Dir","ruby/classes/Dir.html#method-i-pos","()","<p>Returns the current position of <code>self</code>; see Dir As Stream-Like:\n\n<pre><code>dir = Dir.new(&#39;example&#39;)\ndir.tell  # =&gt; ...\n</code></pre>\n",null,1],["pos","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-pos","()","<p>The position in the tar entry\n",null,1],["pos","IO","ruby/classes/IO.html#method-i-pos","()","<p>Returns the current position (in bytes) in <code>self</code> (see Position):\n\n<pre><code>f = File.open(&#39;t.txt&#39;)\nf.tell # =&gt; 0\nf.gets ...\n</code></pre>\n",null,1],["pos","StringIO","ruby/classes/StringIO.html#method-i-pos","()","<p>Returns the current position (in bytes); see Position.\n",null,1],["pos","StringScanner","ruby/classes/StringScanner.html#method-i-pos","()","<p>Returns the byte position of the scan pointer.  In the ‘reset’ position, this value is zero. …\n",null,1],["pos","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-pos","()","<p>Total number of output bytes output so far.\n",null,1],["pos","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-pos","()","<p>Total number of input bytes read so far.\n",null,1],["pos=","ARGF","ruby/classes/ARGF.html#method-i-pos-3D","(p1)","<p>Seeks to the position given by <em>position</em> (in bytes) in ARGF.\n<p>For example:\n\n<pre><code>ARGF.pos = 17\nARGF.gets   #=&gt; ...\n</code></pre>\n",null,1],["pos=","Dir","ruby/classes/Dir.html#method-i-pos-3D","(p1)","<p>Sets the position in <code>self</code> and returns <code>position</code>. The value of <code>position</code> should have been returned from …\n",null,1],["pos=","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-pos-3D","(new_pos)","<p>Seek to the position in the tar entry\n",null,1],["pos=","IO","ruby/classes/IO.html#method-i-pos-3D","(p1)","<p>Seeks to the given <code>new_position</code> (in bytes); see Position:\n\n<pre><code>f = File.open(&#39;t.txt&#39;)\nf.tell     # =&gt; 0\nf.pos ...\n</code></pre>\n",null,1],["pos=","StringIO","ruby/classes/StringIO.html#method-i-pos-3D","(p1)","<p>Sets the current position (in bytes); see Position.\n",null,1],["pos=","StringScanner","ruby/classes/StringScanner.html#method-i-pos-3D","(p1)","<p>Sets the byte position of the scan pointer.\n\n<pre><code>s = StringScanner.new(&#39;test string&#39;)\ns.pos = 7            ...\n</code></pre>\n",null,1],["positive?","Float","ruby/classes/Float.html#method-i-positive-3F","()","<p>Returns <code>true</code> if <code>self</code> is greater than 0, <code>false</code> otherwise.\n",null,1],["positive?","Numeric","ruby/classes/Numeric.html#method-i-positive-3F","()","<p>Returns <code>true</code> if <code>self</code> is greater than 0, <code>false</code> otherwise.\n",null,1],["positive?","Rational","ruby/classes/Rational.html#method-i-positive-3F","()","<p>Returns <code>true</code> if <code>rat</code> is greater than 0.\n",null,1],["possible_paths","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-i-possible_paths","(states)","",null,1],["post","ActionCable::Connection::StreamEventLoop","rails/classes/ActionCable/Connection/StreamEventLoop.html#method-i-post","(task = nil, &block)","",null,0],["post","ActionDispatch::Routing::Mapper::HttpHelpers","rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-post","(*args, &block)","<p>Define a route that only recognizes HTTP POST. For supported arguments, see match\n\n<pre><code>post &#39;bacon&#39;, to: &#39;food#bacon&#39;\n</code></pre>\n",null,0],["post","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-post","(path, data, initheader = nil, dest = nil)","<p>Sends a POST request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["post","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-post","(url, data, header = nil)","<p>Posts data to a host; returns a Net::HTTPResponse object.\n<p>Argument <code>url</code> must be a URL; argument <code>data</code> must …\n",null,1],["post2","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-post2","(path, data, initheader = nil)","",null,1],["post_build","Gem","ruby/classes/Gem.html#method-c-post_build","(&hook)","<p>Adds a post-build hook that will be passed an Gem::Installer instance when Gem::Installer#install is …\n",null,1],["post_connection_check","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-post_connection_check","(hostname)","<p>Perform hostname verification following RFC 6125.\n<p>This method MUST be called after calling #connect to …\n",null,1],["post_form","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-post_form","(url, params)","<p>Posts data to a host; returns a Net::HTTPResponse object.\n<p>Argument <code>url</code> must be a URI; argument <code>data</code> must …\n",null,1],["post_install","Gem","ruby/classes/Gem.html#method-c-post_install","(&hook)","<p>Adds a post-install hook that will be passed an Gem::Installer instance when Gem::Installer#install is …\n",null,1],["post_match","MatchData","ruby/classes/MatchData.html#method-i-post_match","()","<p>Returns the substring of the target string from the end of the first match in <code>self</code> (that is, <code>self[0]</code> …\n",null,1],["post_match","StringScanner","ruby/classes/StringScanner.html#method-i-post_match","()","<p>Returns the <strong><em>post</strong>-match</em> (in the regular expression sense) of the last scan.\n\n<pre><code>s = StringScanner.new(&#39;test ...\n</code></pre>\n",null,1],["post_reset","Gem","ruby/classes/Gem.html#method-c-post_reset","(&hook)","<p>Adds a hook that will get run after Gem::Specification.reset is run.\n",null,1],["post_uninstall","Gem","ruby/classes/Gem.html#method-c-post_uninstall","(&hook)","<p>Adds a post-uninstall hook that will be passed a Gem::Uninstaller instance and the spec that was uninstalled …\n",null,1],["postgresql.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/postgresql_yml_tt.html","","<p># PostgreSQL. Versions 9.3 and up are supported. # # Install the pg driver: #   gem install pg # On macOS …\n",null,0],["pow","Integer","ruby/classes/Integer.html#method-i-pow","(*args)","<p>Returns (modular) exponentiation as:\n\n<pre><code>a.pow(b)     #=&gt; same as a**b\na.pow(b, m)  #=&gt; same as (a**b) % m, ...\n</code></pre>\n",null,1],["power","BigDecimal","ruby/classes/BigDecimal.html#method-i-power","(p1, p2 = v2)","<p>Returns the value raised to the power of n.\n<p>Note that n must be an Integer.\n<p>Also available as the operator …\n",null,1],["pp","IRB::ColorPrinter","ruby/classes/IRB/ColorPrinter.html#method-c-pp","(obj, out = $>, width = screen_width)","",null,1],["pp","IRB::ColorPrinter","ruby/classes/IRB/ColorPrinter.html#method-i-pp","(obj)","",null,1],["pp","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-pp","(*objs)","<p>Same as #ppx, except it uses the #prefix given during object initialization. See OutputMethod#ppx for …\n",null,1],["pp","IRB::OutputMethod","ruby/classes/IRB/OutputMethod.html#method-i-pp","(*objs)","<p>Prints the given <code>objs</code> calling Object#inspect on each.\n<p>See #puts for more detail.\n",null,1],["pp","Kernel","ruby/classes/Kernel.html#method-c-pp","(*objs)","<p>prints arguments in pretty form.\n<p>pp returns argument(s).\n",null,1],["pp","PP","ruby/classes/PP.html#method-c-pp","(obj, out=$>, width=width_for(out))","<p>Outputs <code>obj</code> to <code>out</code> in pretty printed format of <code>width</code> columns in width.\n<p>If <code>out</code> is omitted, <code>$&gt;</code> is assumed. …\n",null,1],["pp","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-pp","(obj)","<p>Adds <code>obj</code> to the pretty printing buffer using Object#pretty_print or Object#pretty_print_cycle.\n<p>Object#pretty_print_cycle …\n",null,1],["pp_hash","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-pp_hash","(obj)","<p>A pretty print for a Hash\n",null,1],["pp_object","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-pp_object","(obj)","<p>A present standard failsafe for pretty printing any given Object\n",null,1],["ppid","Process","ruby/classes/Process.html#method-c-ppid","()","<p>Returns the process ID of the parent of the current process:\n\n<pre><code>puts &quot;Pid is #{Process.pid}.&quot;\nfork { puts ...\n</code></pre>\n",null,1],["ppx","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-ppx","(prefix, *objs)","<p>Same as #pp, except it concatenates the given <code>prefix</code> with the #prefix given during object initialization. …\n",null,1],["ppx","IRB::OutputMethod","ruby/classes/IRB/OutputMethod.html#method-i-ppx","(prefix, *objs)","<p>Prints the given <code>objs</code> calling Object#inspect on each and appending the given <code>prefix</code>.\n<p>See #puts for more …\n",null,1],["pre_input_hook=","Reline::Core","ruby/classes/Reline/Core.html#method-i-pre_input_hook-3D","(p)","",null,1],["pre_install","Gem","ruby/classes/Gem.html#method-c-pre_install","(&hook)","<p>Adds a pre-install hook that will be passed an Gem::Installer instance when Gem::Installer#install is …\n",null,1],["pre_install_checks","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-pre_install_checks","()","<p>Performs various checks before installing the gem such as the install repository is writable and its …\n",null,1],["pre_match","MatchData","ruby/classes/MatchData.html#method-i-pre_match","()","<p>Returns the substring of the target string from its beginning up to the first match in <code>self</code> (that is, …\n",null,1],["pre_match","StringScanner","ruby/classes/StringScanner.html#method-i-pre_match","()","<p>Returns the <strong><em>pre</strong>-match</em> (in the regular expression sense) of the last scan.\n\n<pre><code>s = StringScanner.new(&#39;test ...\n</code></pre>\n",null,1],["pre_reset","Gem","ruby/classes/Gem.html#method-c-pre_reset","(&hook)","<p>Adds a hook that will get run before Gem::Specification.reset is run.\n",null,1],["pre_uninstall","Gem","ruby/classes/Gem.html#method-c-pre_uninstall","(&hook)","<p>Adds a pre-uninstall hook that will be passed an Gem::Uninstaller instance and the spec that will be …\n",null,1],["pread","IO","ruby/classes/IO.html#method-i-pread","(p1, p2, p3 = v3)","<p>Behaves like IO#readpartial, except that it:\n<p>Reads at the given <code>offset</code> (in bytes).\n<p>Disregards, and does …\n",null,1],["pread","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-pread","(*args)","<p>Read at least <code>length</code> bytes from the <code>io</code> starting at the specified <code>from</code> position, into the buffer starting …\n",null,1],["pread","StringIO","ruby/classes/StringIO.html#method-i-pread","(p1, p2, p3 = v3)","<p>See IO#pread.\n",null,1],["precedence","","ruby/files/ruby/doc/syntax/precedence_rdoc.html","","<p>Precedence\n<p>From highest to lowest, this is the precedence table for ruby.  High precedence operations …\n",null,1],["precision","BigDecimal","ruby/classes/BigDecimal.html#method-i-precision","()","<p>Returns the number of decimal digits in <code>self</code>:\n\n<pre><code>BigDecimal(&quot;0&quot;).precision         # =&gt; 0\nBigDecimal(&quot;1&quot;).precision ...\n</code></pre>\n",null,1],["precision_scale","BigDecimal","ruby/classes/BigDecimal.html#method-i-precision_scale","()","<p>Returns a 2-length array; the first item is the result of BigDecimal#precision and the second one is …\n",null,1],["precs","BigDecimal","ruby/classes/BigDecimal.html#method-i-precs","()","<p>Returns an Array of two Integer values that represent platform-dependent internal storage properties. …\n",null,1],["pred","Integer","ruby/classes/Integer.html#method-i-pred","()","<p>Returns the predecessor of <code>self</code> (equivalent to <code>self - 1</code>):\n\n<pre><code>1.pred  #=&gt; 0\n-1.pred #=&gt; -2\n</code></pre>\n<p>Related: Integer#succ …\n",null,1],["preferred_dialog_height","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-preferred_dialog_height","()","",null,1],["preferred_gemfile_name","Bundler","ruby/classes/Bundler.html#method-c-preferred_gemfile_name","()","",null,1],["prefetch","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-prefetch","(reqs)","",null,1],["prefetch","Gem::Resolver::APISet","ruby/classes/Gem/Resolver/APISet.html#method-i-prefetch","(reqs)","<p>A hint run by the resolver to allow the Set to fetch data for DependencyRequests <code>reqs</code>.\n",null,1],["prefetch","Gem::Resolver::ComposedSet","ruby/classes/Gem/Resolver/ComposedSet.html#method-i-prefetch","(reqs)","<p>Prefetches <code>reqs</code> in all sets.\n",null,1],["prefetch","Gem::Resolver::GitSet","ruby/classes/Gem/Resolver/GitSet.html#method-i-prefetch","(reqs)","<p>Prefetches specifications from the git repositories in this set.\n",null,1],["prefetch","Gem::Resolver::InstallerSet","ruby/classes/Gem/Resolver/InstallerSet.html#method-i-prefetch","(reqs)","",null,1],["prefetch","Gem::Resolver::Set","ruby/classes/Gem/Resolver/Set.html#method-i-prefetch","(reqs)","<p>The #prefetch method may be overridden, but this is not necessary.  This default implementation does …\n",null,1],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-prefetch_primary_key-3F","(table_name = nil)","<p>Should primary key values be selected from their corresponding sequence before the insert statement? …\n",null,0],["prefetch_primary_key?","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-prefetch_primary_key-3F","()","<p>Determines if the primary key values should be selected from their corresponding sequence before the …\n",null,0],["prefix","ActiveRecord::DynamicMatchers::FindBy","rails/classes/ActiveRecord/DynamicMatchers/FindBy.html#method-c-prefix","()","",null,0],["prefix","ActiveRecord::DynamicMatchers::FindByBang","rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html#method-c-prefix","()","",null,0],["prefix","ActiveRecord::DynamicMatchers::Method","rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-prefix","()","",null,0],["prefix","Gem","ruby/classes/Gem.html#method-c-prefix","()","<p>The directory prefix this RubyGems was installed at. If your prefix is in a standard location (ie, rubygems …\n",null,1],["prefix","IPAddr","ruby/classes/IPAddr.html#method-i-prefix","()","<p>Returns the prefix length in bits for the ipaddr.\n",null,1],["prefix=","IPAddr","ruby/classes/IPAddr.html#method-i-prefix-3D","(prefix)","<p>Sets the prefix length in bits\n",null,1],["preload","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-preload","(*args)","<p>Allows preloading of <code>args</code>, in the same way that #includes does:\n\n<pre><code>User.preload(:posts)\n# SELECT &quot;posts&quot;.* ...\n</code></pre>\n",null,0],["preload_link_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-preload_link_tag","(source, options = {})","<p>Returns a link tag that browsers can use to preload the <code>source</code>. The <code>source</code> can be the path of a resource …\n",null,0],["prep","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-prep","()","",null,1],["prep","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-prep","()","",null,1],["prep","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-prep","()","",null,1],["prepare","ActiveStorage::FixtureSet","rails/classes/ActiveStorage/FixtureSet.html#method-i-prepare","(instance, **attributes)","",null,0],["prepare!","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-prepare-21","()","",null,0],["prepare_all","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-prepare_all","()","",null,0],["prepared_statements","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-prepared_statements","()","",null,0],["prepared_statements?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-prepared_statements-3F","()","",null,0],["preparing_gem_layout_for","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-i-preparing_gem_layout_for","(version)","",null,1],["prepend","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-prepend","(value)","",null,0],["prepend","Array","ruby/classes/Array.html#method-i-prepend","(*args)","<p>Prepends the given <code>objects</code> to <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.unshift(:bam, :bat) # =&gt; [:bam, :bat, :foo, ...\n</code></pre>\n",null,1],["prepend","Module","ruby/classes/Module.html#method-i-prepend","(*args)","<p>Invokes Module.prepend_features on each parameter in reverse order.\n",null,1],["prepend","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-prepend","(*args)","<p>Inserts <code>switch</code> at the head of the list, and associates short, long and negated long options. Arguments …\n",null,1],["prepend","String","ruby/classes/String.html#method-i-prepend","(*args)","<p>Prepends each string in <code>other_strings</code> to <code>self</code> and returns <code>self</code>:\n\n<pre><code>s = &#39;foo&#39;\ns.prepend(&#39;bar&#39;, &#39;baz&#39;) # =&gt; ...\n</code></pre>\n",null,1],["prepend_after_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_after_action","","<p>Prepend a callback after actions. See _insert_callbacks for parameter details.\n",null,0],["prepend_around_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_around_action","","<p>Prepend a callback around actions. See _insert_callbacks for parameter details.\n",null,0],["prepend_before_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_before_action","","<p>Prepend a callback before actions. See _insert_callbacks for parameter details.\n<p>If the callback renders …\n",null,0],["prepend_destdir_if_present","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-prepend_destdir_if_present","(path)","",null,1],["prepend_view_path","ActionView::ViewPaths","rails/classes/ActionView/ViewPaths.html#method-i-prepend_view_path","(path)","<p>Prepend a path to the list of view paths for the current LookupContext.\n<p>Parameters\n<p><code>path</code> - If a String is …\n",null,0],["prepend_view_path","ActionView::ViewPaths::ClassMethods","rails/classes/ActionView/ViewPaths/ClassMethods.html#method-i-prepend_view_path","(path)","<p>Prepend a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, …\n",null,0],["prepended","ActiveSupport::Concern","rails/classes/ActiveSupport/Concern.html#method-i-prepended","(base = nil, &block)","<p>Evaluate given block in context of base class, so that you can write class macros here. When you define …\n",null,0],["prepended","CoreExtensions::TCPSocketExt","ruby/classes/CoreExtensions/TCPSocketExt.html#method-c-prepended","(base)","",null,1],["prerelease=","Gem::Resolver::ComposedSet","ruby/classes/Gem/Resolver/ComposedSet.html#method-i-prerelease-3D","(allow_prerelease)","<p>When <code>allow_prerelease</code> is set to <code>true</code> prereleases gems are allowed to match dependencies.\n",null,1],["prerelease=","Gem::Resolver::InstallerSet","ruby/classes/Gem/Resolver/InstallerSet.html#method-i-prerelease-3D","(allow_prerelease)","",null,1],["prerelease?","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-prerelease-3F","()","<p>Does this dependency require a prerelease?\n",null,1],["prerelease?","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-prerelease-3F","()","<p>Indicate if this NameTuple is for a prerelease version.\n",null,1],["prerelease?","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-prerelease-3F","()","<p>A requirement is a prerelease if any of the versions inside of it are prereleases\n",null,1],["prerelease?","Gem::Version","ruby/classes/Gem/Version.html#method-i-prerelease-3F","()","<p>A version is considered a prerelease if it contains a letter.\n",null,1],["presence","Object","rails/classes/Object.html#method-i-presence","()","<p>Returns the receiver if it’s present otherwise returns <code>nil</code>. <code>object.presence</code> is equivalent to\n\n<pre><code>object.present? ...\n</code></pre>\n",null,0],["presence_in","Object","rails/classes/Object.html#method-i-presence_in","(another_object)","<p>Returns the receiver if it’s included in the argument otherwise returns <code>nil</code>. Argument must be any …\n",null,0],["present?","Object","rails/classes/Object.html#method-i-present-3F","()","<p>An object is present if it’s not blank.\n<p>@return [true, false]\n",null,0],["preserve_original_encrypted","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-preserve_original_encrypted","(name)","",null,0],["pressed?","IO","ruby/classes/IO.html#method-i-pressed-3F","(p1)","",null,1],["pretty","CGI::Util","ruby/classes/CGI/Util.html#method-i-pretty","(string, shift = \" \")","<p>Prettify (indent) an HTML string.\n<p><code>string</code> is the HTML string to indent.  <code>shift</code> is the indentation unit …\n",null,1],["pretty_generate","JSON","ruby/classes/JSON.html#method-i-pretty_generate","(obj, opts = nil)","<p>Arguments <code>obj</code> and <code>opts</code> here are the same as arguments <code>obj</code> and <code>opts</code> in JSON.generate.\n<p>Default options are: …\n",null,1],["pretty_inspect","Kernel","ruby/classes/Kernel.html#method-i-pretty_inspect","()","<p>Returns a pretty printed object as a string.\n<p>See the PP module for more information.\n",null,1],["pretty_name","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-pretty_name","()","",null,1],["pretty_name","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-pretty_name","()","<p>Method/attribute name with class/instance indicator\n",null,1],["pretty_new_name","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-pretty_new_name","()","<p>New name with prefix ‘::’ or ‘#’.\n",null,1],["pretty_old_name","RDoc::Alias","ruby/classes/RDoc/Alias.html#method-i-pretty_old_name","()","<p>Old name with prefix ‘::’ or ‘#’.\n",null,1],["pretty_print","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-pretty_print","(pp)","<p>Takes a PP and prettily prints this record to it, allowing you to get a nice result from <code>pp record</code> when …\n",null,0],["pretty_print","ActiveRecord::Core::InspectionMask","rails/classes/ActiveRecord/Core/InspectionMask.html#method-i-pretty_print","(pp)","",null,0],["pretty_print","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-pretty_print","(q)","",null,0],["pretty_print","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-pretty_print","(q)","",null,1],["pretty_print","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-pretty_print","(q)","",null,1],["pretty_print","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-pretty_print","(q)","",null,1],["pretty_print","Prism::Location","ruby/classes/Prism/Location.html#method-i-pretty_print","(q)","<p>Implement the pretty print interface for Location.\n",null,1],["pretty_print","Prism::Token","ruby/classes/Prism/Token.html#method-i-pretty_print","(q)","<p>Implement the pretty print interface for Token.\n",null,1],["pretty_print","Ripper::Lexer::Elem","ruby/classes/Ripper/Lexer/Elem.html#method-i-pretty_print","(q)","",null,1],["pretty_print","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-pretty_print","(q)","",null,1],["pretty_print","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-pretty_print","(q)","",null,1],["pretty_print_children","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-pretty_print_children","(q, names = [])","",null,1],["prev_day","Time","rails/classes/Time.html#method-i-prev_day","(days = 1)","<p>Returns a new time the specified number of days ago.\n",null,0],["prev_day","Date","ruby/classes/Date.html#method-i-prev_day","(p1 = v1)","<p>Equivalent to Date#- with argument <code>n</code>.\n",null,1],["prev_day?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-prev_day-3F","()","",null,0],["prev_day?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-prev_day-3F","()","",null,0],["prev_float","Float","ruby/classes/Float.html#method-i-prev_float","()","<p>Returns the next-smaller representable Float.\n<p>These examples show the internally stored values (64-bit …\n",null,1],["prev_month","Time","rails/classes/Time.html#method-i-prev_month","(months = 1)","<p>Returns a new time the specified number of months ago.\n",null,0],["prev_month","Date","ruby/classes/Date.html#method-i-prev_month","(p1 = v1)","<p>Equivalent to #<< with argument <code>n</code>.\n",null,1],["prev_occurring","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-prev_occurring","(day_of_week)","<p>Returns a new date/time representing the previous occurrence of the specified day of week.\n\n<pre><code>today = Date.today ...\n</code></pre>\n",null,0],["prev_quarter","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-prev_quarter","()","<p>Short-hand for <code>months_ago(3)</code>.\n",null,0],["prev_week","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-prev_week","(start_day = Date.beginning_of_week, same_time: false)","<p>Returns a new date/time representing the given day in the previous week. Week is assumed to start on …\n",null,0],["prev_weekday","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-prev_weekday","()","<p>Returns a new date/time representing the previous weekday.\n",null,0],["prev_year","Time","rails/classes/Time.html#method-i-prev_year","(years = 1)","<p>Returns a new time the specified number of years ago.\n",null,0],["prev_year","Date","ruby/classes/Date.html#method-i-prev_year","(p1 = v1)","<p>Equivalent to #<< with argument <code>n * 12</code>.\n",null,1],["preventing_writes?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-preventing_writes-3F","()","<p>Determines whether writes are currently being prevented.\n<p>Returns true if the connection is a replica. …\n",null,0],["preview","ActiveStorage::Blob::Representable","rails/classes/ActiveStorage/Blob/Representable.html#method-i-preview","(transformations)","<p>Returns an ActiveStorage::Preview instance with the set of <code>transformations</code> provided. A preview is an …\n",null,0],["preview","ActiveStorage::Previewer","rails/classes/ActiveStorage/Previewer.html#method-i-preview","(**options)","<p>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything …\n",null,0],["preview","ActiveStorage::Previewer::MuPDFPreviewer","rails/classes/ActiveStorage/Previewer/MuPDFPreviewer.html#method-i-preview","(**options)","",null,0],["preview","ActiveStorage::Previewer::PopplerPDFPreviewer","rails/classes/ActiveStorage/Previewer/PopplerPDFPreviewer.html#method-i-preview","(**options)","",null,0],["preview","ActiveStorage::Previewer::VideoPreviewer","rails/classes/ActiveStorage/Previewer/VideoPreviewer.html#method-i-preview","(**options)","",null,0],["preview_name","ActionMailer::Preview","rails/classes/ActionMailer/Preview.html#method-c-preview_name","()","<p>Returns the underscored name of the mailer preview without the suffix.\n",null,0],["previewable?","ActiveStorage::Blob::Representable","rails/classes/ActiveStorage/Blob/Representable.html#method-i-previewable-3F","()","<p>Returns true if any registered previewer accepts the blob. By default, this will return true for videos …\n",null,0],["previewable_attachable?","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-previewable_attachable-3F","()","",null,0],["previewable_attachable?","ActionText::Engine","rails/classes/ActionText/Engine.html#method-i-previewable_attachable-3F","()","",null,0],["previous","Announcement::Version","rails/classes/Announcement/Version.html#method-i-previous","()","",null,0],["previous=","ActiveRecord::Encryption::Config","rails/classes/ActiveRecord/Encryption/Config.html#method-i-previous-3D","(previous_schemes_properties)","<p>Configure previous encryption schemes.\n\n<pre><code>config.active_record.encryption.previous = [ { key_provider: MyOldKeyProvider.new ...\n</code></pre>\n",null,0],["previous_changes","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-previous_changes","()","<p>Returns a hash of attributes that were changed before the model was saved.\n\n<pre><code>person.name # =&gt; &quot;bob&quot;\nperson.name ...\n</code></pre>\n",null,0],["previous_history","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-previous_history","(key, arg: 1)","",null,1],["previous_period_end","Logger::Period","ruby/classes/Logger/Period.html#method-i-previous_period_end","(now, shift_age)","",null,1],["previously_new_record?","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-previously_new_record-3F","()","<p>Returns true if this object was just created – that is, prior to the last update or delete, the object …\n",null,0],["previously_persisted?","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-previously_persisted-3F","()","<p>Returns true if this object was previously persisted but now it has been deleted.\n",null,0],["primary","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-c-primary","()","<p>Returns the first advertised TupleSpace.\n",null,1],["primary_abstract_class","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-primary_abstract_class","()","<p>Sets the application record class for Active Record\n<p>This is useful if your application uses a different …\n",null,0],["primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key","()","<p>Defines the primary key field – can be overridden in subclasses. Overwriting will negate any effect …\n",null,0],["primary_key","ActiveRecord::ConnectionAdapters::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/ColumnMethods.html#method-i-primary_key","(name, type = :primary_key, **options)","<p>Appends a primary key definition to the table definition. Can be called multiple times, but this is probably …\n",null,0],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-primary_key","(name, type = :primary_key, **options)","<p>Defines the primary key field. Use of the native PostgreSQL UUID type is supported, and can be used by …\n",null,0],["primary_key","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-primary_key","(table_name)","<p>Returns just a table’s primary key\n",null,0],["primary_key=","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key-3D","(value)","<p>Sets the name of the primary key column.\n\n<pre><code>class Project &lt; ActiveRecord::Base\n  self.primary_key = &#39;sysid&#39; ...\n</code></pre>\n",null,0],["primary_key_prefix_type","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-primary_key_prefix_type","","<p>The prefix type that will be prepended to every primary key column name. The options are <code>:table_name</code> …\n",null,0],["primary_key_prefix_type=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-primary_key_prefix_type-3D","","<p>Sets the prefix type that will be prepended to every primary key column name. The options are <code>:table_name</code> …\n",null,0],["primary_keys","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-primary_keys","(table_name)","",null,0],["prime?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-prime-3F","(*args)","<p>Performs a Miller-Rabin probabilistic primality test for <code>bn</code>.\n<p><strong><code>checks</code> parameter is deprecated in version</strong> …\n",null,1],["prime_fasttest?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-prime_fasttest-3F","(*args)","<p>Performs a Miller-Rabin probabilistic primality test for <code>bn</code>.\n<p><strong>Deprecated in version 3.0.</strong> Use #prime? instead. …\n",null,1],["primitive_convert","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-primitive_convert","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = {})","<p>possible opt elements:\n\n<pre><code>hash form:\n  :partial_input =&gt; true           # source buffer may be part of larger ...\n</code></pre>\n",null,1],["primitive_errinfo","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-primitive_errinfo","()","<p>primitive_errinfo returns important information regarding the last error as a 5-element array:\n\n<pre><code>[result, ...\n</code></pre>\n",null,1],["print","ARGF","ruby/classes/ARGF.html#method-i-print","(*args)","<p>Writes the given objects to the stream; returns <code>nil</code>. Appends the output record separator <code>$OUTPUT_RECORD_SEPARATOR</code> …\n",null,1],["print","CGI","ruby/classes/CGI.html#method-i-print","(*options)","<p>Print an argument or list of arguments to the default output stream\n\n<pre><code>cgi = CGI.new\ncgi.print    # default: ...\n</code></pre>\n",null,1],["print","Gem::SilentUI::NullIO","ruby/classes/Gem/SilentUI/NullIO.html#method-i-print","(*args)","",null,1],["print","IO","ruby/classes/IO.html#method-i-print","(*args)","<p>Writes the given objects to the stream; returns <code>nil</code>. Appends the output record separator <code>$OUTPUT_RECORD_SEPARATOR</code> …\n",null,1],["print","IO::generic_writable","ruby/classes/IO/generic_writable.html#method-i-print","(*args)","<p>See IO#print.\n",null,1],["print","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-print","(*opts)","",null,1],["print","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-print","(*opts)","<p>See OutputMethod#print for more detail.\n",null,1],["print","IRB::OutputMethod","ruby/classes/IRB/OutputMethod.html#method-i-print","(*opts)","<p>Open this method to implement your own output method, raises a NotImplementedError if you don’t define …\n",null,1],["print","IRB::StdioOutputMethod","ruby/classes/IRB/StdioOutputMethod.html#method-i-print","(*opts)","<p>Prints the given <code>opts</code> to standard output, see IO#print for more information.\n",null,1],["print","Kernel","ruby/classes/Kernel.html#method-i-print","(*args)","<p>Equivalent to <code>$stdout.print(*objects)</code>, this method is the straightforward way to write to <code>$stdout</code>.\n<p>Writes …\n",null,1],["print","Net::WriteAdapter","ruby/classes/Net/WriteAdapter.html#method-i-print","(str)","",null,1],["print","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-print","(*args)","<p>Writes <em>args</em> to the stream.\n<p>See IO#print for full details.\n",null,1],["print","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-print","(*args)","<p>Same as IO.\n",null,1],["print_generators","Rails::Generators","rails/classes/Rails/Generators.html#method-c-print_generators","()","",null,0],["print_list","Rails::Generators","rails/classes/Rails/Generators.html#method-c-print_list","(base, namespaces)","",null,0],["print_usage","IRB","ruby/classes/IRB.html#method-c-print_usage","()","<p>Outputs the irb help message, see IRB@Command-Line+Options.\n",null,1],["printf","ARGF","ruby/classes/ARGF.html#method-i-printf","(*args)","<p>Formats and writes <code>objects</code> to the stream.\n<p>For details on <code>format_string</code>, see Format Specifications.\n",null,1],["printf","IO","ruby/classes/IO.html#method-i-printf","(*args)","<p>Formats and writes <code>objects</code> to the stream.\n<p>For details on <code>format_string</code>, see Format Specifications.\n",null,1],["printf","IO::generic_writable","ruby/classes/IO/generic_writable.html#method-i-printf","(*args)","<p>See IO#printf.\n",null,1],["printf","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-printf","(*opts)","",null,1],["printf","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-printf","(format, *opts)","<p>See OutputMethod#printf for more detail.\n",null,1],["printf","IRB::OutputMethod","ruby/classes/IRB/OutputMethod.html#method-i-printf","(format, *opts)","<p>Extends IO#printf to format the given <code>opts</code> for Kernel#sprintf using #parse_printf_format\n",null,1],["printf","Kernel","ruby/classes/Kernel.html#method-i-printf","(*args)","<p>Equivalent to:\n\n<pre><code>io.write(sprintf(format_string, *objects))\n</code></pre>\n<p>For details on <code>format_string</code>, see Format Specifications …\n",null,1],["printf","Net::WriteAdapter","ruby/classes/Net/WriteAdapter.html#method-i-printf","(*args)","",null,1],["printf","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-printf","(s, *args)","<p>Formats and writes to the stream converting parameters under control of the format string.\n<p>See Kernel#sprintf …\n",null,1],["printf","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-printf","(*args)","<p>Same as IO.\n",null,1],["printing_commands","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-printing_commands","()","",null,0],["printn","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-printn","(*opts)","<p>See OutputMethod#printn for more detail.\n",null,1],["printn","IRB::OutputMethod","ruby/classes/IRB/OutputMethod.html#method-i-printn","(*opts)","<p>Prints the given <code>opts</code>, with a newline delimiter.\n",null,1],["prioritize!","Gem::BundlerVersionFinder","ruby/classes/Gem/BundlerVersionFinder.html#method-c-prioritize-21","(specs)","",null,1],["prioritizes_bundler?","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-prioritizes_bundler-3F","()","",null,1],["priority","ActiveJob::QueuePriority","rails/classes/ActiveJob/QueuePriority.html#method-i-priority","()","<p>Returns the priority that the job will be created with\n",null,0],["priority","Thread","ruby/classes/Thread.html#method-i-priority","()","<p>Returns the priority of <em>thr</em>. Default is inherited from the current thread which creating the new thread, …\n",null,1],["priority=","Thread","ruby/classes/Thread.html#method-i-priority-3D","(p1)","<p>Sets the priority of <em>thr</em> to <em>integer</em>. Higher-priority threads will run more frequently than lower-priority …\n",null,1],["prism_locals","Prism::Debug","ruby/classes/Prism/Debug.html#method-c-prism_locals","(source)","<p>For the given source, parses with prism and returns a list of all of the sets of local variables that …\n",null,1],["private?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-private-3F","()","<p>If the buffer is <em>private</em>, meaning modifications to the buffer will not be replicated to the underlying …\n",null,1],["private?","IPAddr","ruby/classes/IPAddr.html#method-i-private-3F","()","<p>Returns true if the ipaddr is a private address.  IPv4 addresses in 10.0.0.0/8, 172.16.0.0/12 and 192.168.0.0/16 …\n",null,1],["private?","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-private-3F","()","<p>Indicates whether this DH instance has a private key associated with it or not. The private key may be …\n",null,1],["private?","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-private-3F","()","<p>Indicates whether this DSA instance has a private key associated with it or not. The private key may …\n",null,1],["private?","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-private-3F","()","<p>Returns whether this EC instance has a private key. The private key (BN) can be retrieved with EC#private_key …\n",null,1],["private?","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-private-3F","()","<p>Does this keypair contain a private key?\n",null,1],["private_call?","NoMethodError","ruby/classes/NoMethodError.html#method-i-private_call-3F","()","<p>Return true if the caused method was called as private.\n",null,1],["private_class_method","Module","ruby/classes/Module.html#method-i-private_class_method","(*args)","<p>Makes existing class methods private. Often used to hide the default constructor <code>new</code>.\n<p>String arguments …\n",null,1],["private_constant","Module","ruby/classes/Module.html#method-i-private_constant","(*args)","<p>Makes a list of existing constants private.\n",null,1],["private_decrypt","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-private_decrypt","(data, padding = PKCS1_PADDING)","<p>Decrypt <code>string</code>, which has been encrypted with the public key, with the private key. <code>padding</code> defaults …\n",null,1],["private_encrypt","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-private_encrypt","(string, padding = PKCS1_PADDING)","<p>Encrypt <code>string</code> with the private key.  <code>padding</code> defaults to PKCS1_PADDING, which is known to be insecure …\n",null,1],["private_instance_methods","Module","ruby/classes/Module.html#method-i-private_instance_methods","(*args)","<p>Returns a list of the private instance methods defined in <em>mod</em>. If the optional parameter is <code>false</code>, the …\n",null,1],["private_key","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-private_key","()","<p>See the OpenSSL documentation for EC_KEY_get0_private_key()\n",null,1],["private_key=","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-private_key-3D","(p1)","<p>See the OpenSSL documentation for EC_KEY_set_private_key()\n",null,1],["private_key?","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-private_key-3F","()","<p>Returns whether this EC instance has a private key. The private key (BN) can be retrieved with EC#private_key …\n",null,1],["private_method_defined?","Module","ruby/classes/Module.html#method-i-private_method_defined-3F","(*args)","<p>Returns <code>true</code> if the named private method is defined by <em>mod</em>.  If <em>inherit</em> is set, the lookup will also …\n",null,1],["private_methods","Object","ruby/classes/Object.html#method-i-private_methods","(*args)","<p>Returns the list of private methods accessible to <em>obj</em>. If the <em>all</em> parameter is set to <code>false</code>, only those …\n",null,1],["private_to_der","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-private_to_der","(*args)","<p>Serializes the private key to DER-encoded PKCS #8 format. If called without arguments, unencrypted PKCS …\n",null,1],["private_to_pem","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-private_to_pem","(*args)","<p>Serializes the private key to PEM-encoded PKCS #8 format. See #private_to_der for more details.\n<p>An unencrypted …\n",null,1],["proc","Kernel","ruby/classes/Kernel.html#method-i-proc","()","<p>Equivalent to Proc.new.\n",null,1],["proc_for_binds","ActiveRecord::Encryption::ExtendedDeterministicQueries::InWithAdditionalValues","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/InWithAdditionalValues.html#method-i-proc_for_binds","()","",null,0],["process","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-process","(action, *args)","<p>Calls the action going through the entire action dispatch stack.\n<p>The actual method that is called is determined …\n",null,0],["process","ActionController::Live","rails/classes/ActionController/Live.html#method-i-process","(name)","",null,0],["process","ActionMailbox::Base","rails/classes/ActionMailbox/Base.html#method-i-process","()","",null,0],["process","ActionMailer::LogSubscriber","rails/classes/ActionMailer/LogSubscriber.html#method-i-process","(event)","<p>An email was generated.\n",null,0],["process","ActiveStorage::Transformers::Transformer","rails/classes/ActiveStorage/Transformers/Transformer.html#method-i-process","(file, format:)","<p>Returns an open Tempfile containing a transformed image in the given <code>format</code>. All subclasses implement …\n",null,0],["process","ActiveStorage::VariantWithRecord","rails/classes/ActiveStorage/VariantWithRecord.html#method-i-process","()","",null,0],["process","Reline::KillRing","ruby/classes/Reline/KillRing.html#method-i-process","()","",null,1],["process_action","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-process_action","(event)","",null,0],["process_args","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-process_args","(args, build_args=nil)","",null,1],["process_key_event","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-process_key_event","(repeat_count, virtual_key_code, virtual_scan_code, char_code, control_key_state)","",null,1],["process_wait","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-process_wait","(p1, p2)","<p>Invoked by Process::Status.wait in order to wait for a specified process. See that method description …\n",null,1],["processed","ActiveStorage::Preview","rails/classes/ActiveStorage/Preview.html#method-i-processed","()","<p>Processes the preview if it has not been processed yet. Returns the receiving Preview instance for convenience: …\n",null,0],["processed","ActiveStorage::Variant","rails/classes/ActiveStorage/Variant.html#method-i-processed","()","<p>Returns the variant instance itself after it’s been processed or an existing processing has been …\n",null,0],["processed","ActiveStorage::VariantWithRecord","rails/classes/ActiveStorage/VariantWithRecord.html#method-i-processed","()","",null,0],["processed?","ActionMailbox::InboundEmail","rails/classes/ActionMailbox/InboundEmail.html#method-i-processed-3F","()","",null,0],["processed?","ActionMailer::MessageDelivery","rails/classes/ActionMailer/MessageDelivery.html#method-i-processed-3F","()","<p>Was the delegate loaded, causing the mailer action to be processed?\n",null,0],["processed?","ActiveStorage::VariantWithRecord","rails/classes/ActiveStorage/VariantWithRecord.html#method-i-processed-3F","()","",null,0],["produce","Enumerator","ruby/classes/Enumerator.html#method-c-produce","(p1 = v1)","<p>Creates an infinite enumerator from any block, just called over and over.  The result of the previous …\n",null,1],["product","Array","ruby/classes/Array.html#method-i-product","(*args)","<p>Computes and returns or yields all combinations of elements from all the Arrays, including both <code>self</code> …\n",null,1],["product","Enumerator","ruby/classes/Enumerator.html#method-c-product","(*args, p2 = {}, &block)","<p>Generates a new enumerator object that generates a Cartesian product of given enumerable objects.  This …\n",null,1],["production.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/environments/production_rb_tt.html","","<p>require “active_support/core_ext/integer/time”\n<p>Rails.application.configure do\n\n<pre><code># Settings specified ...\n</code></pre>\n",null,0],["profile_requires","CodeTools::Profiler","rails/classes/CodeTools/Profiler.html#method-i-profile_requires","()","",null,0],["progid","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-progid","()","<p>Returns ProgID if it exists. If not found, then returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel ...\n</code></pre>\n",null,1],["progids","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-c-progids","()","<p>Returns array of ProgID.\n",null,1],["program_name","OptionParser","ruby/classes/OptionParser.html#method-i-program_name","()","<p>Program name to be emitted in error message and default banner, defaults to $0.\n",null,1],["progress_bar","Object","rails/classes/Object.html#method-i-progress_bar","(int)","",null,0],["progress_reporter","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-progress_reporter","(*args)","<p>Return a progress reporter object chosen from the current verbosity.\n",null,1],["prohibit_shard_swapping","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-prohibit_shard_swapping","(enabled = true)","<p>Prohibit swapping shards while inside of the passed block.\n<p>In some cases you may want to be able to swap …\n",null,0],["prompt_mode=","IRB::Context","ruby/classes/IRB/Context.html#method-i-prompt_mode-3D","(mode)","<p>Sets the <code>mode</code> of the prompt in this context.\n<p>See Custom Prompts for more information.\n",null,1],["prompt_n","IRB::Context","ruby/classes/IRB/Context.html#method-i-prompt_n","()","<p>TODO: Remove this when developing v2.0\n",null,1],["prompt_n=","IRB::Context","ruby/classes/IRB/Context.html#method-i-prompt_n-3D","(_)","<p>TODO: Remove this when developing v2.0\n",null,1],["prompt_proc=","Reline::Core","ruby/classes/Reline/Core.html#method-i-prompt_proc-3D","(p)","",null,1],["prompting?","IRB::Context","ruby/classes/IRB/Context.html#method-i-prompting-3F","()","<p>Whether #verbose? is <code>true</code>, and <code>input_method</code> is either StdioInputMethod or RelineInputMethod or ReadlineInputMethod …\n",null,1],["proper_subset?","Set","ruby/classes/Set.html#method-i-proper_subset-3F","(set)","<p>Returns true if the set is a proper subset of the given set.\n",null,1],["proper_superset?","Set","ruby/classes/Set.html#method-i-proper_superset-3F","(set)","<p>Returns true if the set is a proper superset of the given set.\n",null,1],["proper_table_name","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-proper_table_name","(name, options = {})","<p>Finds the correct table name given an Active Record object. Uses the Active Record object’s own  …\n",null,0],["property","Rails::Info","rails/classes/Rails/Info.html#method-c-property","(name, value = nil)","",null,0],["propfind","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-propfind","(path, body = nil, initheader = {'Depth' => '0'})","<p>Sends a PROPFIND request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["proppatch","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proppatch","(path, body, initheader = nil)","<p>Sends a PROPPATCH request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["protect_against_forgery?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-protect_against_forgery-3F","()","<p>Checks if the controller allows forgery protection.\n",null,0],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","rails/classes/ActionController/RequestForgeryProtection/ClassMethods.html#method-i-protect_from_forgery","(options = {})","<p>Turn on request forgery protection. Bear in mind that GET and HEAD requests are not checked.\n\n<pre><code>class ApplicationController ...\n</code></pre>\n",null,0],["protected_environments","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-protected_environments","()","<p>The array of names of environments where destructive actions should be prohibited. By default, the value …\n",null,0],["protected_environments=","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-protected_environments-3D","(environments)","<p>Sets an array of names of environments where destructive actions should be prohibited.\n",null,0],["protected_instance_methods","Module","ruby/classes/Module.html#method-i-protected_instance_methods","(*args)","<p>Returns a list of the protected instance methods defined in <em>mod</em>. If the optional parameter is <code>false</code>, …\n",null,1],["protected_method_defined?","Module","ruby/classes/Module.html#method-i-protected_method_defined-3F","(*args)","<p>Returns <code>true</code> if the named protected method is defined <em>mod</em>.  If <em>inherit</em> is set, the lookup will also search …\n",null,1],["protected_methods","Delegator","ruby/classes/Delegator.html#method-i-protected_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this object’s and _<em>getobj</em> …\n",null,1],["protected_methods","Object","ruby/classes/Object.html#method-i-protected_methods","(*args)","<p>Returns the list of protected methods accessible to <em>obj</em>. If the <em>all</em> parameter is set to <code>false</code>, only those …\n",null,1],["protecting_encrypted_data","ActiveRecord::Encryption::Contexts","rails/classes/ActiveRecord/Encryption/Contexts.html#method-i-protecting_encrypted_data","(&block)","<p>Runs the provided block in an encryption context where:\n<p>Reading encrypted content will return its ciphertext. …\n",null,0],["protocol","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-protocol","()","<p>Returns ‘https://’ if this is an SSL request and ‘http://’ otherwise.\n\n<pre><code>req = ActionDispatch::Request.new ...\n</code></pre>\n",null,0],["protocol","Addrinfo","ruby/classes/Addrinfo.html#method-i-protocol","()","<p>returns the socket type as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).protocol == Socket::IPPROTO_TCP #=&gt; ...\n</code></pre>\n",null,1],["provide","ActionView::Helpers::CaptureHelper","rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-provide","(name, content = nil, &block)","<p>The same as <code>content_for</code> but when used with streaming flushes straight back to the layout. In other words, …\n",null,0],["provide","Rinda::RingProvider","ruby/classes/Rinda/RingProvider.html#method-i-provide","()","<p>Advertises this service on the primary remote TupleSpace.\n",null,1],["proxy?","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxy-3F","()","<p>Returns <code>true</code> if a proxy server is defined, <code>false</code> otherwise; see Proxy Server.\n",null,1],["proxy_address","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxy_address","()","<p>Returns the address of the proxy server, if defined, <code>nil</code> otherwise; see Proxy Server.\n",null,1],["proxy_auth_get","Win32::SSPI::NegotiateAuth","ruby/classes/Win32/SSPI/NegotiateAuth.html#method-c-proxy_auth_get","(http, path, user = nil, domain = nil)","<p>Given a connection and a request path, performs authentication as the current user and returns the response …\n",null,1],["proxy_basic_auth","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-proxy_basic_auth","(account, password)","<p>Sets header <code>&#39;Proxy-Authorization&#39;</code> using the given <code>account</code> and <code>password</code> strings:\n\n<pre><code>req.proxy_basic_auth(&#39;my_account&#39;, ...\n</code></pre>\n",null,1],["proxy_class","ActiveSupport::Multibyte","rails/classes/ActiveSupport/Multibyte.html#method-c-proxy_class","()","<p>Returns the current proxy class.\n",null,0],["proxy_class=","ActiveSupport::Multibyte","rails/classes/ActiveSupport/Multibyte.html#method-c-proxy_class-3D","(klass)","<p>The proxy class returned when calling mb_chars. You can use this accessor to configure your own proxy …\n",null,0],["proxy_class?","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-proxy_class-3F","()","<p>Returns true if self is a class which was created by HTTP::Proxy.\n",null,1],["proxy_from_env?","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxy_from_env-3F","()","<p>Returns <code>true</code> if the proxy server is defined in the environment, <code>false</code> otherwise; see Proxy Server.\n",null,1],["proxy_pass","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxy_pass","()","<p>Returns the password of the proxy server, if defined, <code>nil</code> otherwise; see Proxy Server.\n",null,1],["proxy_port","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxy_port","()","<p>Returns the port number of the proxy server, if defined, <code>nil</code> otherwise; see Proxy Server.\n",null,1],["proxy_uri","Gem::Request","ruby/classes/Gem/Request.html#method-i-proxy_uri","()","",null,1],["proxy_user","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxy_user","()","<p>Returns the user name of the proxy server, if defined, <code>nil</code> otherwise; see Proxy Server.\n",null,1],["proxyaddr","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxyaddr","()","",null,1],["proxyport","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-proxyport","()","",null,1],["prune","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-prune","(target_size, max_time = nil)","<p>To ensure entries fit within the specified memory prune the cache by removing the least recently accessed …\n",null,0],["prune","Find","ruby/classes/Find.html#method-c-prune","()","<p>Skips the current file or directory, restarting the loop with the next entry. If the current file is …\n",null,1],["pruning?","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-pruning-3F","()","<p>Returns true if the cache is currently being pruned.\n",null,0],["ptr","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-ptr","()","<p>Returns a new Fiddle::Pointer instance that is a dereferenced pointer for this pointer.\n<p>Analogous to the …\n",null,1],["public?","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-public-3F","()","",null,0],["public?","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-public-3F","()","<p>Indicates whether this DH instance has a public key associated with it or not. The public key may be …\n",null,1],["public?","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-public-3F","()","<p>Indicates whether this DSA instance has a public key associated with it or not. The public key may be …\n",null,1],["public?","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-public-3F","()","<p>Returns whether this EC instance has a public key. The public key (EC::Point) can be retrieved with  …\n",null,1],["public?","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-public-3F","()","<p>The return value is always <code>true</code> since every private key is also a public key.\n",null,1],["public_class_method","Module","ruby/classes/Module.html#method-i-public_class_method","(*args)","<p>Makes a list of existing class methods public.\n<p>String arguments are converted to symbols. An Array of …\n",null,1],["public_compute_asset_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-public_compute_asset_path","(source, options = {})","",null,0],["public_constant","Module","ruby/classes/Module.html#method-i-public_constant","(*args)","<p>Makes a list of existing constants public.\n",null,1],["public_decrypt","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_decrypt","(string, padding = PKCS1_PADDING)","<p>Decrypt <code>string</code>, which has been encrypted with the private key, with the public key.  <code>padding</code> defaults …\n",null,1],["public_directory","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-public_directory","()","",null,0],["public_encrypt","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_encrypt","(data, padding = PKCS1_PADDING)","<p>Encrypt <code>string</code> with the public key.  <code>padding</code> defaults to PKCS1_PADDING, which is known to be insecure …\n",null,1],["public_instance_method","Module","ruby/classes/Module.html#method-i-public_instance_method","(p1)","<p>Similar to <em>instance_method</em>, searches public method only.\n",null,1],["public_instance_methods","Module","ruby/classes/Module.html#method-i-public_instance_methods","(*args)","<p>Returns a list of the public instance methods defined in <em>mod</em>. If the optional parameter is <code>false</code>, the …\n",null,1],["public_key","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-public_key","()","<p>Returns the public key associated with the SPKI, an instance of OpenSSL::PKey.\n",null,1],["public_key","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-public_key","()","<p>Returns a new DH instance that carries just the DH parameters.\n<p>Contrary to the method name, the returned …\n",null,1],["public_key","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-public_key","()","<p>Returns a new DSA instance that carries just the DSA parameters and the public key.\n<p>This method is provided …\n",null,1],["public_key","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-public_key","()","<p>See the OpenSSL documentation for EC_KEY_get0_public_key()\n",null,1],["public_key","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-public_key","()","<p>Returns a new RSA instance that carries just the public key components.\n<p>This method is provided for backwards …\n",null,1],["public_key","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-public_key","()","",null,1],["public_key","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-public_key","()","",null,1],["public_key=","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-public_key-3D","(p1)","<p>Parameters\n<p><em>pub</em> - the public key to be set for this instance\n\n<p>Sets the public key to be associated with the …\n",null,1],["public_key=","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-public_key-3D","(p1)","<p>See the OpenSSL documentation for EC_KEY_set_public_key()\n",null,1],["public_key=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-public_key-3D","(p1)","",null,1],["public_key=","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-public_key-3D","(p1)","",null,1],["public_key?","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-public_key-3F","()","<p>Returns whether this EC instance has a public key. The public key (EC::Point) can be retrieved with  …\n",null,1],["public_method","Object","ruby/classes/Object.html#method-i-public_method","(p1)","<p>Similar to <em>method</em>, searches public method only.\n",null,1],["public_method_defined?","Module","ruby/classes/Module.html#method-i-public_method_defined-3F","(*args)","<p>Returns <code>true</code> if the named public method is defined by <em>mod</em>.  If <em>inherit</em> is set, the lookup will also search …\n",null,1],["public_methods","Delegator","ruby/classes/Delegator.html#method-i-public_methods","(all=true)","<p>Returns the methods available to this delegate object as the union of this object’s and _<em>getobj</em> …\n",null,1],["public_methods","Object","ruby/classes/Object.html#method-i-public_methods","(*args)","<p>Returns the list of public methods accessible to <em>obj</em>. If the <em>all</em> parameter is set to <code>false</code>, only those …\n",null,1],["public_namespaces","Rails::Generators","rails/classes/Rails/Generators.html#method-c-public_namespaces","()","",null,0],["public_path","Rails","rails/classes/Rails.html#method-c-public_path","()","<p>Returns a Pathname object of the public folder of the current Rails project, otherwise it returns <code>nil</code> …\n",null,0],["public_send","Object","ruby/classes/Object.html#method-i-public_send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments specified. Unlike send, public_send …\n",null,1],["public_to_der","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-public_to_der","()","<p>Serializes the public key to DER-encoded X.509 SubjectPublicKeyInfo format.\n",null,1],["public_to_pem","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-public_to_pem","()","<p>Serializes the public key to PEM-encoded X.509 SubjectPublicKeyInfo format.\n<p>A PEM-encoded key will look …\n",null,1],["publish","ActiveSupport::Notifications","rails/classes/ActiveSupport/Notifications.html#method-c-publish","(name, *args)","",null,0],["publish","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-publish","(name, *args)","",null,0],["publish_event","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-i-publish_event","(event)","",null,0],["publish_event","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-publish_event","(event)","",null,0],["publish_event","ActiveSupport::Notifications::Fanout::Subscribers::EventObject","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/EventObject.html#method-i-publish_event","(event)","",null,0],["pubsub","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-pubsub","()","<p>Adapter used for all streams/broadcasting.\n",null,0],["pubsub_adapter","ActionCable::Server::Configuration","rails/classes/ActionCable/Server/Configuration.html#method-i-pubsub_adapter","()","<p>Returns constant of subscription adapter specified in config/cable.yml. If the adapter cannot be found, …\n",null,0],["puma.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/puma_rb_tt.html","","<p># Puma can serve each request in a thread from an internal thread pool. # The ‘threads` method setting …\n",null,0],["purge","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-purge","(configuration)","",null,0],["purge","ActiveStorage::Attached::Many","rails/classes/ActiveStorage/Attached/Many.html#method-i-purge","","<p>Directly purges each associated attachment (i.e. destroys the blobs and attachments and deletes the files …\n",null,0],["purge","ActiveStorage::Attached::Model","rails/classes/ActiveStorage/Attached/Model.html#method-i-purge","()","",null,0],["purge","ActiveStorage::Attached::One","rails/classes/ActiveStorage/Attached/One.html#method-i-purge","","<p>Directly purges the attachment (i.e. destroys the blob and attachment and deletes the file on the service). …\n",null,0],["purge","ActiveStorage::Attachment","rails/classes/ActiveStorage/Attachment.html#method-i-purge","()","<p>Synchronously deletes the attachment and purges the blob.\n",null,0],["purge","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-purge","()","<p>Destroys the blob record and then deletes the file on the service. This is the recommended way to dispose …\n",null,0],["purge_all","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-purge_all","()","",null,0],["purge_current","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-purge_current","(environment = env)","",null,0],["purge_later","ActiveStorage::Attached::Many","rails/classes/ActiveStorage/Attached/Many.html#method-i-purge_later","","<p>Purges each associated attachment through the queuing system.\n",null,0],["purge_later","ActiveStorage::Attached::Model","rails/classes/ActiveStorage/Attached/Model.html#method-i-purge_later","()","",null,0],["purge_later","ActiveStorage::Attached::One","rails/classes/ActiveStorage/Attached/One.html#method-i-purge_later","","<p>Purges the attachment through the queuing system.\n",null,0],["purge_later","ActiveStorage::Attachment","rails/classes/ActiveStorage/Attachment.html#method-i-purge_later","()","<p>Deletes the attachment and enqueues a background job to purge the blob.\n",null,0],["purge_later","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-purge_later","()","<p>Enqueues an ActiveStorage::PurgeJob to call #purge. This is the recommended way to purge blobs from a …\n",null,0],["purpose=","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-purpose-3D","(p1)","<p>Sets the store’s default verification purpose. If specified, the verifications on the store will …\n",null,1],["purpose=","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-purpose-3D","(p1)","<p>Sets the purpose of the context. This overrides the default value set by Store#purpose=.\n<p>See also the …\n",null,1],["push","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-push","(*records)","",null,0],["push","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-push","(path)","",null,0],["push","Array","ruby/classes/Array.html#method-i-push","(*args)","<p>Appends trailing elements.\n<p>Appends each argument in <code>objects</code> to <code>self</code>;  returns <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2] ...\n</code></pre>\n",null,1],["push","CSV::Row","ruby/classes/CSV/Row.html#method-i-push","(*args)","<p>Appends each of the given <code>values</code> to <code>self</code> as a field; returns <code>self</code>:\n\n<pre><code>source = &quot;Name,Name,Name\\nFoo,Bar,Baz\\n&quot; ...\n</code></pre>\n",null,1],["push","CSV::Table","ruby/classes/CSV/Table.html#method-i-push","(*rows)","<p>A shortcut for appending multiple rows. Equivalent to:\n\n<pre><code>rows.each {|row| self &lt;&lt; row }\n</code></pre>\n<p>Each argument may …\n",null,1],["push","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-push","(object)","",null,1],["push","Reline::History","ruby/classes/Reline/History.html#method-i-push","(*val)","",null,1],["push","Rinda::TupleBag","ruby/classes/Rinda/TupleBag.html#method-i-push","(tuple)","<p>Add <code>tuple</code> to the TupleBag.\n",null,1],["push","SyntaxSuggest::CodeSearch","ruby/classes/SyntaxSuggest/CodeSearch.html#method-i-push","(block, name:)","",null,1],["push","SyntaxSuggest::PriorityEngulfQueue","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html#method-i-push","(block)","",null,1],["push","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-push","(p1)","<p>Pushes the given <code>object</code> to the queue.\n",null,1],["push","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-push","(object, non_block = false, timeout: nil)","<p>Pushes <code>object</code> to the queue.\n<p>If there is no space left in the queue, waits until space becomes available, …\n",null,1],["push_inspect_key","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-push_inspect_key","(id)","<p>Adds the object_id <code>id</code> to the set of objects being pretty printed, so as to not repeat objects.\n",null,1],["push_workspace","IRB::Context","ruby/classes/IRB/Context.html#method-i-push_workspace","(*_main)","<p>Creates a new workspace with the given object or binding, and appends it onto the current #workspaces …\n",null,1],["put","ActionDispatch::Routing::Mapper::HttpHelpers","rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-put","(*args, &block)","<p>Define a route that only recognizes HTTP PUT. For supported arguments, see match\n\n<pre><code>put &#39;bacon&#39;, to: &#39;food#bacon&#39;\n</code></pre>\n",null,0],["put","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-put","(path, data, initheader = nil)","<p>Sends a PUT request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["putback","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-putback","(*args)","<p>Put back the bytes which will be converted.\n<p>The bytes are caused by invalid_byte_sequence error. When …\n",null,1],["putc","ARGF","ruby/classes/ARGF.html#method-i-putc","(p1)","<p>Writes a character to the stream. See Character IO.\n<p>If <code>object</code> is numeric, converts to integer if necessary, …\n",null,1],["putc","IO","ruby/classes/IO.html#method-i-putc","(p1)","<p>Writes a character to the stream. See Character IO.\n<p>If <code>object</code> is numeric, converts to integer if necessary, …\n",null,1],["putc","Kernel","ruby/classes/Kernel.html#method-i-putc","(p1)","<p>Equivalent to:\n\n<pre><code>$stdout.putc(int)\n</code></pre>\n<p>See IO#putc for important information regarding multi-byte characters. …\n",null,1],["putc","StringIO","ruby/classes/StringIO.html#method-i-putc","(p1)","<p>See IO#putc.\n",null,1],["putc","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-putc","(p1)","<p>Same as IO.\n",null,1],["puts","ARGF","ruby/classes/ARGF.html#method-i-puts","(*args)","<p>Writes the given <code>objects</code> to the stream, which must be open for writing; returns <code>nil</code>.\\ Writes a newline …\n",null,1],["puts","CSV","ruby/classes/CSV.html#method-i-puts","(row)","",null,1],["puts","Gem::SilentUI::NullIO","ruby/classes/Gem/SilentUI/NullIO.html#method-i-puts","(*args)","",null,1],["puts","IO","ruby/classes/IO.html#method-i-puts","(*args)","<p>Writes the given <code>objects</code> to the stream, which must be open for writing; returns <code>nil</code>.\\ Writes a newline …\n",null,1],["puts","IO::generic_writable","ruby/classes/IO/generic_writable.html#method-i-puts","(*args)","<p>See IO#puts.\n",null,1],["puts","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-puts","(str = nil)","",null,1],["puts","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-puts","(*opts)","",null,1],["puts","IRB::Notifier::AbstractNotifier","ruby/classes/IRB/Notifier/AbstractNotifier.html#method-i-puts","(*objs)","<p>See OutputMethod#puts for more detail.\n",null,1],["puts","IRB::OutputMethod","ruby/classes/IRB/OutputMethod.html#method-i-puts","(*objs)","<p>Calls #print on each element in the given <code>objs</code>, followed by a newline character.\n",null,1],["puts","Kernel","ruby/classes/Kernel.html#method-i-puts","(*args)","<p>Equivalent to\n\n<pre><code>$stdout.puts(objects)\n</code></pre>\n",null,1],["puts","Net::WriteAdapter","ruby/classes/Net/WriteAdapter.html#method-i-puts","(str = '')","",null,1],["puts","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-puts","(*args)","<p>Writes <em>args</em> to the stream along with a record separator.\n<p>See IO#puts for full details.\n",null,1],["puts","SyntaxSuggest::MiniStringIO","ruby/classes/SyntaxSuggest/MiniStringIO.html#method-i-puts","(value = $/, **)","",null,1],["puts","XMP","ruby/classes/XMP.html#method-i-puts","(exps)","<p>Evaluates the given <code>exps</code>, for example:\n\n<pre><code>require &#39;irb/xmp&#39;\nx = XMP.new\n\nx.puts &#39;{:a =&gt; 1, :b =&gt; 2, :c =&gt; ...\n</code></pre>\n",null,1],["puts","XMP::StringInputMethod","ruby/classes/XMP/StringInputMethod.html#method-i-puts","(exps)","<p>Concatenates all expressions in this printer, separated by newlines.\n<p>An Encoding::CompatibilityError is …\n",null,1],["puts","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-puts","(*args)","<p>Same as IO.\n",null,1],["pwd","Dir","ruby/classes/Dir.html#method-c-pwd","()","<p>Returns the path to the current working directory:\n\n<pre><code>Dir.chdir(&quot;/tmp&quot;) # =&gt; 0\nDir.pwd           # =&gt; &quot;/tmp&quot;\n</code></pre>\n",null,1],["pwd","FileUtils","ruby/classes/FileUtils.html#method-c-pwd","()","<p>Returns a string containing the path to the current directory:\n\n<pre><code>FileUtils.pwd # =&gt; &quot;/rdoc/fileutils&quot;\n</code></pre>\n<p>Related: …\n",null,1],["pwd","Pathname","ruby/classes/Pathname.html#method-c-pwd","()","<p>Returns the current working directory as a Pathname.\n\n<pre><code>Pathname.getwd\n    #=&gt; #&lt;Pathname:/home/zzak/projects/ruby&gt;\n</code></pre>\n",null,1],["pwrite","IO","ruby/classes/IO.html#method-i-pwrite","(p1, p2)","<p>Behaves like IO#write, except that it:\n<p>Writes at the given <code>offset</code> (in bytes).\n<p>Disregards, and does not …\n",null,1],["pwrite","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-pwrite","(*args)","<p>Write at least <code>length</code> bytes from the buffer starting at <code>offset</code>, into the <code>io</code> starting at the specified …\n",null,1],["query=","URI::Generic","ruby/classes/URI/Generic.html#method-i-query-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["query_attribute","ActiveRecord::AttributeMethods::Query","rails/classes/ActiveRecord/AttributeMethods/Query.html#method-i-query_attribute","(attr_name)","",null,0],["query_cache_enabled","ActiveRecord::ConnectionAdapters::QueryCache::ConnectionPoolConfiguration","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache/ConnectionPoolConfiguration.html#method-i-query_cache_enabled","()","",null,0],["query_parameters","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-query_parameters","()","",null,0],["queue_adapter","ActiveJob::QueueAdapter::ClassMethods","rails/classes/ActiveJob/QueueAdapter/ClassMethods.html#method-i-queue_adapter","()","<p>Returns the backend queue provider. The default queue adapter is the <code>:async</code> queue. See QueueAdapters …\n",null,0],["queue_adapter=","ActiveJob::QueueAdapter::ClassMethods","rails/classes/ActiveJob/QueueAdapter/ClassMethods.html#method-i-queue_adapter-3D","(name_or_adapter)","<p>Specify the backend queue provider. The default queue adapter is the <code>:async</code> queue. See QueueAdapters …\n",null,0],["queue_adapter_name","ActiveJob::QueueAdapter::ClassMethods","rails/classes/ActiveJob/QueueAdapter/ClassMethods.html#method-i-queue_adapter_name","()","<p>Returns string denoting the name of the configured queue adapter. By default returns <code>&quot;async&quot;</code> …\n",null,0],["queue_as","ActiveJob::QueueName::ClassMethods","rails/classes/ActiveJob/QueueName/ClassMethods.html#method-i-queue_as","(part_name = nil, &block)","<p>Specifies the name of the queue to process the job on.\n\n<pre><code>class PublishToFeedJob &lt; ActiveJob::Base\n  queue_as ...\n</code></pre>\n",null,0],["queue_name","ActiveJob::QueueName","rails/classes/ActiveJob/QueueName.html#method-i-queue_name","()","<p>Returns the name of the queue the job will be run on.\n",null,0],["queue_with_priority","ActiveJob::QueuePriority::ClassMethods","rails/classes/ActiveJob/QueuePriority/ClassMethods.html#method-i-queue_with_priority","(priority = nil, &block)","<p>Specifies the priority of the queue to create the job with.\n\n<pre><code>class PublishToFeedJob &lt; ActiveJob::Base\n ...\n</code></pre>\n",null,0],["quiet","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-quiet","()","<p>Don’t display progress as we process the files\n",null,1],["quiet=","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-quiet-3D","(bool)","<p>Set quietness to <code>bool</code>\n",null,1],["quit","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-quit","(n)","",null,1],["quo","BigDecimal","ruby/classes/BigDecimal.html#method-i-quo","(p1, p2 = v2)","<p>Divide by the specified value.\n<p>digits &mdash; If specified and less than the number of significant digits of the …\n",null,1],["quo","Complex","ruby/classes/Complex.html#method-i-quo","(p1)","<p>Returns the quotient of <code>self</code> and <code>numeric</code>:\n\n<pre><code>Complex(2, 3)  / Complex(2, 3)  # =&gt; ((1/1)+(0/1)*i)\nComplex(900) ...\n</code></pre>\n",null,1],["quo","Float","ruby/classes/Float.html#method-i-quo","(p1)","<p>Returns the quotient from dividing <code>self</code> by <code>other</code>:\n\n<pre><code>f = 3.14\nf.quo(2)              # =&gt; 1.57\nf.quo(-2)  ...\n</code></pre>\n",null,1],["quo","Numeric","ruby/classes/Numeric.html#method-i-quo","(p1)","<p>Returns the most exact division (rational for integers, float for floats).\n",null,1],["quo","Rational","ruby/classes/Rational.html#method-i-quo","(p1)","<p>Performs division.\n\n<pre><code>Rational(2, 3)  / Rational(2, 3)   #=&gt; (1/1)\nRational(900)   / Rational(1)      #=&gt; ...\n</code></pre>\n",null,1],["quote","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote","(value)","<p>Quotes the column value to help prevent SQL injection attacks.\n",null,0],["quote","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-quote","(value)","<p>Always returns value in double quotes.\n",null,0],["quote","Regexp","ruby/classes/Regexp.html#method-c-quote","(p1)","<p>Returns a new string that escapes any characters that have special meaning in a regular expression:\n\n<pre><code>s ...\n</code></pre>\n",null,1],["quote_bound_value","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_bound_value","(value)","<p>Quote a value to be used as a bound parameter of unknown type. For example, MySQL might perform dangerous …\n",null,0],["quote_char","CSV","ruby/classes/CSV.html#method-i-quote_char","()","<p>Returns the encoded quote character; used for parsing and writing; see {Option <code>quote_char</code>}:\n\n<pre><code>CSV.new(&#39;&#39;).quote_char ...\n</code></pre>\n",null,1],["quote_character","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-quote_character","()","",null,1],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_column_name","(column_name)","<p>Quotes the column name. Defaults to no quoting.\n",null,0],["quote_schema_name","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html#method-i-quote_schema_name","(name)","<p>Quotes schema names for use in SQL queries.\n",null,0],["quote_string","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-quote_string","(string)","",null,0],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_string","(s)","<p>Quotes a string, escaping any ‘ (single quote) and \\ (backslash) characters.\n",null,0],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_table_name","(table_name)","<p>Quotes the table name. Defaults to column name quoting.\n",null,0],["quote_table_name_for_assignment","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html#method-i-quote_table_name_for_assignment","(table, attr)","",null,0],["quote_table_name_for_assignment","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_table_name_for_assignment","(table, attr)","<p>Override to return the quoted table name for assignment. Defaults to table quoting.\n<p>This works for mysql2 …\n",null,0],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_date","(value)","<p>Quote date/time values for use in SQL input. Includes microseconds if the value is a Time responding …\n",null,0],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_false","()","",null,0],["quoted_insert","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-quoted_insert","(str, arg: 1)","",null,1],["quoted_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-quoted_primary_key","()","<p>Returns a quoted version of the primary key name, used to construct SQL statements.\n",null,0],["quoted_table_name","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-quoted_table_name","()","<p>Returns a quoted version of the table name, used to construct SQL statements.\n",null,0],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_true","()","",null,0],["ractor","","ruby/files/ruby/doc/ractor_md.html","","<p>Ractor - Ruby’s Actor-like concurrent abstraction\n<p>Ractor is designed to provide a parallel execution …\n",null,1],["radio_button","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-radio_button","(method, tag_value, options = {})","<p>Returns a radio button tag for accessing a specified attribute (identified by <code>method</code>) on an object assigned …\n",null,0],["radio_button","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-radio_button","(object_name, method, tag_value, options = {})","<p>Returns a radio button tag for accessing a specified attribute (identified by <code>method</code>) on an object assigned …\n",null,0],["radio_button","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-radio_button","(name = \"\", value = nil, checked = nil)","<p>Generates a radio-button Input element.\n<p><code>name</code> is the name of the input field.  <code>value</code> is the value of the …\n",null,1],["radio_button_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-radio_button_tag","(name, value, checked = false, options = {})","<p>Creates a radio button; use groups of radio buttons named the same to allow users to select from a group …\n",null,0],["radio_group","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-radio_group","(name = \"\", *values)","<p>Generate a sequence of radio button Input elements, as a String.\n<p>This works the same as #checkbox_group() …\n",null,1],["rails-ujs.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs_coffee.html","","<p>#= require ./rails-ujs/BANNER #= export Rails #= require_self #= require_tree ./rails-ujs/utils #= require_tree …\n",null,0],["rails.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/bin/rails_tt.html","","<p># This command will automatically be run when you run “rails” with Rails gems # installed from …\n",null,0],["rails.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/bin/rails_tt.html","","<p>APP_PATH = File.expand_path(“../config/application”, __dir__) require_relative “../config/boot” …\n",null,0],["rails_command","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-rails_command","(command, options = {})","<p>Runs the specified Rails command.\n\n<pre><code>rails_command &quot;db:migrate&quot;\nrails_command &quot;db:migrate&quot;, env: &quot;production&quot; ...\n</code></pre>\n",null,0],["rails_root","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-rails_root","()","",null,0],["rails_version","Rails::API::EdgeTask","rails/classes/Rails/API/EdgeTask.html#method-i-rails_version","()","",null,0],["rails_version","Rails::API::StableTask","rails/classes/Rails/API/StableTask.html#method-i-rails_version","()","",null,0],["railtie.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/lib/%namespaced_name%/railtie_rb_tt.html","","<p>&lt;%= wrap_in_modules &lt;&lt;~rb\n\n<pre><code>class Railtie &lt; ::Rails::Railtie\nend\n</code></pre>\n<p>rb %&gt;\n",null,0],["railtie_name","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-railtie_name","(name = nil)","",null,0],["railties","Rails::Engine","rails/classes/Rails/Engine.html#method-i-railties","()","",null,0],["raise","ActiveSupport::ProxyObject","rails/classes/ActiveSupport/ProxyObject.html#method-i-raise","(*args)","<p>Let ActiveSupport::ProxyObject at least raise exceptions.\n",null,0],["raise","Delegator","ruby/classes/Delegator.html#method-i-raise","","<p>Use #__raise__ if your Delegator does not have a object to delegate the #raise method call.\n",null,1],["raise","Fiber","ruby/classes/Fiber.html#method-i-raise","(*args)","<p>Raises an exception in the fiber at the point at which the last <code>Fiber.yield</code> was called. If the fiber …\n",null,1],["raise","Kernel","ruby/classes/Kernel.html#method-i-raise","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a RuntimeError if <code>$!</code> is <code>nil</code>.  With a single  …\n",null,1],["raise","Thread","ruby/classes/Thread.html#method-i-raise","(*args)","<p>Raises an exception from the given thread. The caller does not have to be <code>thr</code>. See Kernel#raise for more …\n",null,1],["raise_for_multi_db","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-raise_for_multi_db","(environment = env, command:)","",null,0],["raise_validation_error","ActiveModel::Validations","rails/classes/ActiveModel/Validations.html#method-i-raise_validation_error","()","",null,0],["raised_exception","TracePoint","ruby/classes/TracePoint.html#method-i-raised_exception","()","<p>Value from exception raised on the <code>:raise</code> event, or rescued on the <code>:rescue</code> event.\n",null,1],["rake","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-rake","(command, options = {})","<p>Runs the specified Rake task.\n\n<pre><code>rake &quot;db:migrate&quot;\nrake &quot;db:migrate&quot;, env: &quot;production&quot;\nrake &quot;db:migrate&quot;, ...\n</code></pre>\n",null,0],["rake.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/bin/rake_tt.html","","<p>require_relative “../config/boot” require “rake” Rake.application.run\n",null,0],["rake_tasks","Rails::Application","rails/classes/Rails/Application.html#method-i-rake_tasks","(&block)","<p>If you try to define a set of Rake tasks on the instance, these will get passed up to the Rake tasks …\n",null,0],["rake_tasks","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-rake_tasks","(&blk)","",null,0],["rakefile","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-rakefile","()","",null,0],["rakefile","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-rakefile","(filename, data = nil)","<p>Creates a Rake tasks file in <code>lib/tasks/</code>. The code can be specified as an argument or as the return value …\n",null,0],["rakefile","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-rakefile","()","",null,0],["rand","Kernel","ruby/classes/Kernel.html#method-i-rand","(*args)","<p>If called without an argument, or if <code>max.to_i.abs == 0</code>, rand returns a pseudo-random floating point number …\n",null,1],["rand","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-c-rand","(p1, p2 = v2, p3 = v3)","<p>Generates a cryptographically strong pseudo-random number of <code>bits</code>.\n<p>See also the man page BN_rand(3).\n",null,1],["rand","Random","ruby/classes/Random.html#method-i-rand","(*args)","<p>When <code>max</code> is an Integer, <code>rand</code> returns a random integer greater than or equal to zero and less than <code>max</code> …\n",null,1],["rand","Random","ruby/classes/Random.html#method-c-rand","(*args)","<p>Returns a random number using the Ruby system PRNG.\n<p>See also Random#rand.\n",null,1],["rand","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-rand","(*args)","<p>Generates formatted random number from raw random bytes. See Random#rand.\n",null,1],["rand_range","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-c-rand_range","(p1)","<p>Generates a cryptographically strong pseudo-random number in the range 0…<code>range</code>.\n<p>See also the man page …\n",null,1],["random_add","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-random_add","(p1, p2)","<p>Mixes the bytes from <em>str</em> into the Pseudo Random Number Generator(PRNG) state.\n<p>Thus, if the data from  …\n",null,1],["random_bytes","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-random_bytes","(p1)","<p>Generates a String with <em>length</em> number of cryptographically strong pseudo-random bytes.\n<p>Example\n\n<pre><code>OpenSSL::Random.random_bytes(12) ...\n</code></pre>\n",null,1],["random_bytes","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-random_bytes","(n=nil)","<p>Generate a random binary string.\n<p>The argument <em>n</em> specifies the length of the result string.\n<p>If <em>n</em> is not …\n",null,1],["random_iv","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-random_iv","()","<p>Generate a random IV with OpenSSL::Random.random_bytes and sets it to the cipher, and returns it.\n<p>You …\n",null,1],["random_key","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-random_key","()","<p>Generate a random key with OpenSSL::Random.random_bytes and sets it to the cipher, and returns it.\n<p>You …\n",null,1],["random_number","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-random_number","(*args)","<p>Generates formatted random number from raw random bytes. See Random#rand.\n",null,1],["range","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-range","()","<p>Returns an array of Range objects that represent the value of field <code>&#39;Range&#39;</code>, or <code>nil</code> if there …\n",null,1],["range=","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-range-3D","(r, e = nil)","",null,1],["range_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-range_field","","<p>Wraps ActionView::Helpers::FormHelper#range_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["range_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-range_field","(object_name, method, options = {})","<p>Returns an input tag of type “range”.\n<p>Options\n<p>Supports the same options as FormTagHelper#range_field_tag …\n",null,0],["range_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-range_field_tag","(name, value = nil, options = {})","<p>Creates a range form element.\n<p>Options\n<p>Supports the same options as #number_field_tag.\n",null,0],["range_length","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-range_length","()","<p>Returns the integer representing length of the value of field <code>&#39;Content-Range&#39;</code>, or <code>nil</code> if no such …\n",null,1],["rassoc","Array","ruby/classes/Array.html#method-i-rassoc","(p1)","<p>Returns the first element in <code>self</code> that is an Array whose second element <code>==</code> <code>obj</code>:\n\n<pre><code>a = [{foo: 0}, [2, 4], ...\n</code></pre>\n",null,1],["rassoc","ENV","ruby/classes/ENV.html#method-c-rassoc","(p1)","<p>Returns a 2-element Array containing the name and value of the <strong>first</strong> <strong>found</strong> environment variable that …\n",null,1],["rassoc","Hash","ruby/classes/Hash.html#method-i-rassoc","(p1)","<p>Returns a new 2-element Array consisting of the key and value of the first-found entry whose value is …\n",null,1],["rationalize","Complex","ruby/classes/Complex.html#method-i-rationalize","(*args)","<p>Returns a Rational object whose value is exactly or approximately equivalent to that of <code>self.real</code>.\n<p>With …\n",null,1],["rationalize","Float","ruby/classes/Float.html#method-i-rationalize","(*args)","<p>Returns a simpler approximation of the value (flt-|eps| &lt;= result &lt;= flt+|eps|).  If the optional …\n",null,1],["rationalize","Integer","ruby/classes/Integer.html#method-i-rationalize","(*args)","<p>Returns the value as a rational.  The optional argument <code>eps</code> is always ignored.\n",null,1],["rationalize","NilClass","ruby/classes/NilClass.html#method-i-rationalize","(*args)","<p>Returns zero as a Rational:\n\n<pre><code>nil.rationalize # =&gt; (0/1)\n</code></pre>\n<p>Argument <code>eps</code> is ignored.\n",null,1],["rationalize","Rational","ruby/classes/Rational.html#method-i-rationalize","(*args)","<p>Returns a simpler approximation of the value if the optional argument <code>eps</code> is given (rat-|eps| &lt;= result …\n",null,1],["raw","ActionView::Helpers::OutputSafetyHelper","rails/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-raw","(stringish)","<p>This method outputs without escaping a string. Since escaping tags is now default, this can be used when …\n",null,0],["raw","IO","ruby/classes/IO.html#method-i-raw","(*args)","<p>Yields <code>self</code> within raw mode, and returns the result of the block.\n\n<pre><code>STDIN.raw(&amp;:gets)\n</code></pre>\n<p>will read and return …\n",null,1],["raw!","IO","ruby/classes/IO.html#method-i-raw-21","(*args)","<p>Enables raw mode, and returns <code>io</code>.\n<p>If the terminal mode needs to be back, use <code>io.raw { ... }</code>.\n<p>See IO#raw …\n",null,1],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-raw_connection","()","<p>Provides access to the underlying database driver for this adapter. For example, this method returns …\n",null,0],["raw_cookie","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-raw_cookie","()","<p>Get the raw cookies as a string.\n",null,1],["raw_cookie2","CGI::QueryExtension","ruby/classes/CGI/QueryExtension.html#method-i-raw_cookie2","()","<p>Get the raw RFC2965 cookies as a string.\n",null,1],["raw_data","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-raw_data","()","<p>Returns an Array of individual raw profile data Hashes ordered from earliest to latest by <code>:GC_INVOKE_TIME</code> …\n",null,1],["raw_host_with_port","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-raw_host_with_port","()","<p>Returns the host and port for this request, such as “example.com:8080”.\n\n<pre><code>req = ActionDispatch::Request.new ...\n</code></pre>\n",null,0],["raw_params","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-raw_params","(auth)","<p>This method takes an authorization body and splits up the key-value pairs by the standardized <code>:</code>, <code>;</code>, or …\n",null,0],["raw_post","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-raw_post","()","<p>Read the request body. This is useful for web services that need to work with raw requests directly. …\n",null,0],["raw_private_key","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-raw_private_key","()","<p>See the OpenSSL documentation for EVP_PKEY_get_raw_private_key()\n",null,1],["raw_public_key","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-raw_public_key","()","<p>See the OpenSSL documentation for EVP_PKEY_get_raw_public_key()\n",null,1],["raw_request_method","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-raw_request_method","()","",null,0],["raw_spec","Gem::Package","ruby/classes/Gem/Package.html#method-c-raw_spec","(path, security_policy = nil)","<p>Extracts the Gem::Specification and raw metadata from the .gem file at <code>path</code>.\n",null,1],["rb_scan_args","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-rb_scan_args","(method_body)","<p>Extracts parameters from the <code>method_body</code> and returns a method parameter string.  Follows 1.9.3dev’s …\n",null,1],["rc?","Announcement::Version","rails/classes/Announcement/Version.html#method-i-rc-3F","()","",null,0],["rdev","File::Stat","ruby/classes/File/Stat.html#method-i-rdev","()","<p>Returns an integer representing the device type on which <em>stat</em> resides. Returns <code>nil</code> if the operating system …\n",null,1],["rdev_major","File::Stat","ruby/classes/File/Stat.html#method-i-rdev_major","()","<p>Returns the major part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).rdev_major   #=&gt; 2\nFile.stat(&quot;/dev/tty&quot;).rdev_major ...\n</code></pre>\n",null,1],["rdev_minor","File::Stat","ruby/classes/File/Stat.html#method-i-rdev_minor","()","<p>Returns the minor part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre><code>File.stat(&quot;/dev/fd1&quot;).rdev_minor   #=&gt; 1\nFile.stat(&quot;/dev/tty&quot;).rdev_minor ...\n</code></pre>\n",null,1],["rdoc_installed?","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-rdoc_installed-3F","()","<p>Is rdoc documentation installed?\n",null,1],["rdoc_installed?","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-rdoc_installed-3F","()","<p>Is rdoc documentation installed?\n",null,1],["rdoc_options","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-rdoc_options","()","<p>Specifies the rdoc options to be used when generating API documentation.\n<p>Usage:\n\n<pre><code>spec.rdoc_options &lt;&lt; &#39;--title&#39; ...\n</code></pre>\n",null,1],["rdoc_options=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-rdoc_options-3D","(options)","<p>Sets rdoc_options to <code>value</code>, ensuring it is an array.\n",null,1],["rdoc_task_description","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-rdoc_task_description","()","<p>Task description for the rdoc task or its renamed equivalent\n",null,1],["re_exchange","Process::GID","ruby/classes/Process/GID.html#method-c-re_exchange","()","<p>Exchange real and effective group IDs and return the new effective group ID. Not available on all platforms. …\n",null,1],["re_exchange","Process::UID","ruby/classes/Process/UID.html#method-c-re_exchange","()","<p>Exchange real and effective user IDs and return the new effective user ID. Not available on all platforms. …\n",null,1],["re_exchangeable?","Process::GID","ruby/classes/Process/GID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective group IDs of a process may be exchanged on the current platform. …\n",null,1],["re_exchangeable?","Process::UID","ruby/classes/Process/UID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective user IDs of a process may be exchanged on the current platform. …\n",null,1],["re_sign","Gem::Security","ruby/classes/Gem/Security.html#method-c-re_sign","(expired_certificate, private_key, age = ONE_YEAR, extensions = EXTENSIONS)","<p>Signs <code>expired_certificate</code> with <code>private_key</code> if the keys match and the expired certificate was self-signed. …\n",null,1],["re_sign_cert","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-re_sign_cert","(cert, cert_path, private_key)","",null,1],["re_sign_cert","Gem::Security::Signer","ruby/classes/Gem/Security/Signer.html#method-c-re_sign_cert","(expired_cert, expired_cert_path, private_key)","<p>Attempts to re-sign an expired cert with a given private key\n",null,1],["reachable_objects_from","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-reachable_objects_from","(p1)","<p>MRI specific feature &mdash; Return all reachable objects from ‘obj’.\n\n<p>This method returns all reachable objects …\n",null,1],["reachable_objects_from_root","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-reachable_objects_from_root","()","<p>MRI specific feature &mdash; Return all reachable objects from root.\n\n",null,1],["read","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-read","(length = nil, buffer = nil)","<p>Shortcut for <code>tempfile.read</code>.\n",null,0],["read","ActionDispatch::RailsEntityStore","rails/classes/ActionDispatch/RailsEntityStore.html#method-i-read","(key)","",null,0],["read","ActionDispatch::RailsMetaStore","rails/classes/ActionDispatch/RailsMetaStore.html#method-i-read","(key)","",null,0],["read","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-read","(name, options = nil)","<p>Reads data from the cache, using the given key. If there is data in the cache with the given key, then …\n",null,0],["read","ActiveSupport::EncryptedConfiguration","rails/classes/ActiveSupport/EncryptedConfiguration.html#method-i-read","()","<p>Reads the file and returns the decrypted content. See EncryptedFile#read.\n",null,0],["read","ActiveSupport::EncryptedFile","rails/classes/ActiveSupport/EncryptedFile.html#method-i-read","()","<p>Reads the file and returns the decrypted content.\n<p>Raises:\n<p>MissingKeyError if the key is missing and <code>raise_if_missing_key</code> …\n",null,0],["read","ARGF","ruby/classes/ARGF.html#method-i-read","(p1 = v1, p2 = v2)","<p>Reads <em>length</em> bytes from ARGF. The files named on the command line are concatenated and treated as a single …\n",null,1],["read","CSV","ruby/classes/CSV.html#method-c-read","(path, **options)","<p>Opens the given <code>source</code> with the given <code>options</code> (see CSV.open), reads the source (see CSV#read), and returns …\n",null,1],["read","CSV","ruby/classes/CSV.html#method-i-read","()","<p>Forms the remaining rows from <code>self</code> into:\n<p>A CSV::Table object, if headers are in use.\n<p>An Array of Arrays …\n",null,1],["read","Dir","ruby/classes/Dir.html#method-i-read","()","<p>Reads and returns the next entry name from <code>self</code>; returns <code>nil</code> if at end-of-stream; see Dir As Stream-Like …\n",null,1],["read","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-c-read","(p1, p2)","<p>Or read the memory at address <code>address</code> with length <code>len</code> and return a string with that memory\n",null,1],["read","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-read","(maxlen = nil)","<p>Reads <code>maxlen</code> bytes from the tar file entry, or the rest of the entry if nil\n",null,1],["read","IO","ruby/classes/IO.html#method-c-read","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Opens the stream, reads and returns some or all of its content, and closes the stream; returns <code>nil</code> if …\n",null,1],["read","IO","ruby/classes/IO.html#method-i-read","(p1 = v1, p2 = v2)","<p>Reads bytes from the stream; the stream must be opened for reading (see Access Modes):\n<p>If <code>maxlen</code> is <code>nil</code> …\n",null,1],["read","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-read","(*args)","<p>Read at least <code>length</code> bytes from the <code>io</code>, into the buffer starting at <code>offset</code>. If an error occurs, return …\n",null,1],["read","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-read","(size=nil, buf=nil)","<p>Reads <em>size</em> bytes from the stream.  If <em>buf</em> is provided it must reference a string which will receive the …\n",null,1],["read","OpenSSL::PKey","ruby/classes/OpenSSL/PKey.html#method-c-read","(p1, p2 = v2)","<p>Reads a DER or PEM encoded string from <em>string</em> or <em>io</em> and returns an instance of the appropriate PKey class. …\n",null,1],["read","OpenURI::OpenRead","ruby/classes/OpenURI/OpenRead.html#method-i-read","(options={})","<p>OpenURI::OpenRead#read([ options ]) reads a content referenced by self and returns the content as string. …\n",null,1],["read","Pathname","ruby/classes/Pathname.html#method-i-read","(p1 = v1, p2 = v2, p3 = v3)","<p>Returns all data from the file, or the first <code>N</code> bytes if specified.\n<p>See File.read.\n",null,1],["read","Reline::Config","ruby/classes/Reline/Config.html#method-i-read","(file = nil)","",null,1],["read","Rinda::TupleSpace","ruby/classes/Rinda/TupleSpace.html#method-i-read","(tuple, sec=nil)","<p>Reads <code>tuple</code>, but does not remove it.\n",null,1],["read","Rinda::TupleSpaceProxy","ruby/classes/Rinda/TupleSpaceProxy.html#method-i-read","(tuple, sec=nil, &block)","<p>Reads <code>tuple</code> from the proxied TupleSpace.  See TupleSpace#read.\n",null,1],["read","Rinda::WaitTemplateEntry","ruby/classes/Rinda/WaitTemplateEntry.html#method-i-read","(tuple)","",null,1],["read","StringIO","ruby/classes/StringIO.html#method-i-read","(*args)","<p>See IO#read.\n",null,1],["read","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-read","(name, *rtype)","<p>Read a registry value named name and return array of [ type, data ]. When name is nil, the ‘default’ …\n",null,1],["read","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-read","(p1 = v1)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["read!","Gem::SafeMarshal::Reader","ruby/classes/Gem/SafeMarshal/Reader.html#method-i-read-21","()","",null,1],["read_all","Rinda::TupleSpace","ruby/classes/Rinda/TupleSpace.html#method-i-read_all","(tuple)","<p>Returns all tuples matching <code>tuple</code>.  Does not remove the found tuples.\n",null,1],["read_all","Rinda::TupleSpaceProxy","ruby/classes/Rinda/TupleSpaceProxy.html#method-i-read_all","(tuple)","<p>Reads all tuples matching <code>tuple</code> from the proxied TupleSpace.  See TupleSpace#read_all.\n",null,1],["read_attribute","ActiveRecord::AttributeMethods::Read","rails/classes/ActiveRecord/AttributeMethods/Read.html#method-i-read_attribute","(attr_name, &block)","<p>Returns the value of the attribute identified by <code>attr_name</code> after it has been typecast (for example, “2004-12-12” …\n",null,0],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-read_attribute_before_type_cast","(attr_name)","<p>Returns the value of the attribute identified by <code>attr_name</code> before typecasting and deserialization.\n\n<pre><code>class ...\n</code></pre>\n",null,0],["read_bin","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-read_bin","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry value named name.\n<p>If the values …\n",null,1],["read_binary","Gem","ruby/classes/Gem.html#method-c-read_binary","(path)","<p>Safely read a file in binary mode on all platforms.\n",null,1],["read_body","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-i-read_body","(dest = nil, &block)","<p>Gets the entity body returned by the remote HTTP server.\n<p>If a block is given, the body is passed to the …\n",null,1],["read_checksums","Gem::Package","ruby/classes/Gem/Package.html#method-i-read_checksums","(gem)","<p>Reads and loads checksums.yaml.gz from the tar file <code>gem</code>\n",null,1],["read_directive","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-read_directive","(allowed)","<p>Directives are modifier comments that can appear after class, module, or method names. For example:\n\n<pre><code>def ...\n</code></pre>\n",null,1],["read_documentation_modifiers","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-read_documentation_modifiers","(context, allowed)","<p>Handles directives following the definition for <code>context</code> (any RDoc::CodeObject) if the directives are …\n",null,1],["read_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-read_entry","(key)","",null,0],["read_file","Bundler","ruby/classes/Bundler.html#method-c-read_file","(file)","",null,1],["read_file","RDoc::Encoding","ruby/classes/RDoc/Encoding.html#method-c-read_file","(filename, encoding, force_transcode = false)","<p>Reads the contents of <code>filename</code> and handles any encoding directives in the file.\n<p>The content will be converted …\n",null,1],["read_fragment","AbstractController::Caching::Fragments","rails/classes/AbstractController/Caching/Fragments.html#method-i-read_fragment","(key, options = nil)","<p>Reads a cached fragment from the location signified by <code>key</code> (see <code>expire_fragment</code> for acceptable formats). …\n",null,0],["read_i","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-read_i","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry value named name.\n<p>If the values …\n",null,1],["read_input","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-read_input","(prompt)","",null,1],["read_lines","Reline::Config","ruby/classes/Reline/Config.html#method-i-read_lines","(lines, file = nil)","",null,1],["read_multi","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-read_multi","(*names)","<p>Cache Store API implementation.\n<p>Read multiple values at once. Returns a hash of requested keys -&gt; fetched …\n",null,0],["read_multi","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-read_multi","(*names)","<p>Reads multiple values at once from the cache. Options can be passed in the last argument.\n<p>Some cache implementation …\n",null,0],["read_multi_entries","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-read_multi_entries","(keys)","",null,0],["read_nonblock","ARGF","ruby/classes/ARGF.html#method-i-read_nonblock","(p1, p2 = v2, p3 = {})","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream in non-blocking mode.\n",null,1],["read_nonblock","IO","ruby/classes/IO.html#method-i-read_nonblock","(len, buf = nil, exception: true)","<p>Reads at most <em>maxlen</em> bytes from <em>ios</em> using the read(2) system call after O_NONBLOCK is set for the underlying …\n",null,1],["read_nonblock","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-read_nonblock","(p1, p2 = v2, p3 = {})","<p>Similar to #read, but raises <code>EOFError</code> at end of string unless the +exception: false+ option is passed …\n",null,1],["read_nonblock","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-read_nonblock","(maxlen, buf=nil, exception: true)","<p>Reads at most <em>maxlen</em> bytes in the non-blocking manner.\n<p>When no data can be read without blocking it raises …\n",null,1],["read_s","Resolv::SZ","ruby/classes/Resolv/SZ.html#method-i-read_s","(key)","<p>ad hoc workaround for broken registry\n",null,1],["read_s","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-read_s","(name)","<p>Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin) registry value named name.\n<p>If the values …\n",null,1],["read_s_expand","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-read_s_expand","(name)","<p>Read a REG_SZ or REG_EXPAND_SZ registry value named name.\n<p>If the value type is REG_EXPAND_SZ, environment …\n",null,1],["read_smime","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-c-read_smime","(p1)","",null,1],["read_store_attribute","ActiveRecord::Store","rails/classes/ActiveRecord/Store.html#method-i-read_store_attribute","(store_attribute, key)","",null,0],["read_timeout=","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-read_timeout-3D","(sec)","<p>Sets the read timeout, in seconds, for <code>self</code> to integer <code>sec</code>; the initial value is 60.\n<p>Argument <code>sec</code> must …\n",null,1],["readable?","File","ruby/classes/File.html#method-c-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective user and group id of this process. See eaccess(3). …\n",null,1],["readable?","File::Stat","ruby/classes/File/Stat.html#method-i-readable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the effective user id of this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).readable? ...\n</code></pre>\n",null,1],["readable?","FileTest","ruby/classes/FileTest.html#method-i-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective user and group id of this process. See eaccess(3). …\n",null,1],["readable?","Pathname","ruby/classes/Pathname.html#method-i-readable-3F","()","<p>See FileTest.readable?.\n",null,1],["readable_after_eof?","IRB::InputMethod","ruby/classes/IRB/InputMethod.html#method-i-readable_after_eof-3F","()","<p>Whether this input method is still readable when there is no more data to read.\n<p>See IO#eof for more information. …\n",null,1],["readable_after_eof?","IRB::StdioInputMethod","ruby/classes/IRB/StdioInputMethod.html#method-i-readable_after_eof-3F","()","<p>Whether this input method is still readable when there is no more data to read.\n<p>See IO#eof for more information. …\n",null,1],["readable_inspect","Date","rails/classes/Date.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon, 21 Feb 2005”\n",null,0],["readable_inspect","DateTime","rails/classes/DateTime.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon, 21 Feb 2005 14:30:00 …\n",null,0],["readable_real?","File","ruby/classes/File.html#method-c-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user and group id of this process. See access(3). …\n",null,1],["readable_real?","File::Stat","ruby/classes/File/Stat.html#method-i-readable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the real user id of this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).readable_real? ...\n</code></pre>\n",null,1],["readable_real?","FileTest","ruby/classes/FileTest.html#method-i-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user and group id of this process. See access(3). …\n",null,1],["readable_real?","Pathname","ruby/classes/Pathname.html#method-i-readable_real-3F","()","<p>See FileTest.readable_real?.\n",null,1],["readagain_bytes","Encoding::InvalidByteSequenceError","ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-readagain_bytes","()","<p>Returns the bytes to be read again when Encoding::InvalidByteSequenceError occurs.\n",null,1],["readbyte","ARGF","ruby/classes/ARGF.html#method-i-readbyte","()","<p>Reads the next 8-bit byte from ARGF and returns it as an Integer. Raises an EOFError after the last byte …\n",null,1],["readbyte","IO","ruby/classes/IO.html#method-i-readbyte","()","<p>Reads and returns the next byte (in range 0..255) from the stream; raises EOFError if already at end-of-stream. …\n",null,1],["readbyte","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-readbyte","()","<p>Like <code>getbyte</code>, but raises an exception if already at end-of-stream; see Byte IO.\n",null,1],["readbyte","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-readbyte","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readchar","ARGF","ruby/classes/ARGF.html#method-i-readchar","()","<p>Reads the next character from ARGF and returns it as a String. Raises an EOFError after the last character …\n",null,1],["readchar","IO","ruby/classes/IO.html#method-i-readchar","()","<p>Reads and returns the next 1-character string from the stream; raises EOFError if already at end-of-stream. …\n",null,1],["readchar","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-readchar","()","<p>Like <code>getc</code>, but raises an exception if already at end-of-stream; see Character IO.\n",null,1],["readchar","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-readchar","()","<p>Reads a one-character string from the stream.  Raises an EOFError at end of file.\n",null,1],["readchar","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-readchar","()","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readline","ARGF","ruby/classes/ARGF.html#method-i-readline","(*args)","<p>Returns the next line from the current file in ARGF.\n<p>By default lines are assumed to be separated by  …\n",null,1],["readline","CSV","ruby/classes/CSV.html#method-i-readline","()","",null,1],["readline","IO","ruby/classes/IO.html#method-i-readline","(sep = $/, limit = nil, chomp: false)","<p>Reads a line as with IO#gets, but raises EOFError if already at end-of-stream.\n<p>Optional keyword argument …\n",null,1],["readline","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-readline","(*args)","<p>Reads a line as with IO#gets, but raises EOFError if already at end-of-file; see Line IO.\n",null,1],["readline","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-readline","(_)","",null,1],["readline","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-readline","(*rs)","",null,1],["readline","Kernel","ruby/classes/Kernel.html#method-i-readline","(*args)","<p>Equivalent to method Kernel#gets, except that it raises an exception if called at end-of-stream:\n\n<pre><code>$ cat ...\n</code></pre>\n",null,1],["readline","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-readline","(eol=$/)","<p>Reads a line from the stream which is separated by <em>eol</em>.\n<p>Raises EOFError if at end of file.\n",null,1],["readline","Reline::Core","ruby/classes/Reline/Core.html#method-i-readline","(prompt = '', add_hist = false)","",null,1],["readline","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-readline","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readlines","ARGF","ruby/classes/ARGF.html#method-i-readlines","(*args)","<p>Reads each file in ARGF in its entirety, returning an Array containing lines from the files. Lines are …\n",null,1],["readlines","CSV","ruby/classes/CSV.html#method-c-readlines","(path, **options)","<p>Alias for CSV.read.\n",null,1],["readlines","CSV","ruby/classes/CSV.html#method-i-readlines","()","",null,1],["readlines","IO","ruby/classes/IO.html#method-c-readlines","(p1, p2 = v2, p3 = v3, p4 = {})","<p>Returns an array of all lines read from the stream.\n<p>When called from class IO (but not subclasses of  …\n",null,1],["readlines","IO","ruby/classes/IO.html#method-i-readlines","(*args)","<p>Reads and returns all remaining line from the stream; does not modify <code>$_</code>. See Line IO.\n<p>With no arguments …\n",null,1],["readlines","Kernel","ruby/classes/Kernel.html#method-i-readlines","(*args)","<p>Returns an array containing the lines returned by calling Kernel#gets until the end-of-stream is reached; …\n",null,1],["readlines","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-readlines","(eol=$/)","<p>Reads lines from the stream which are separated by <em>eol</em>.\n<p>See also #gets\n",null,1],["readlines","Pathname","ruby/classes/Pathname.html#method-i-readlines","(p1 = v1, p2 = v2, p3 = v3)","<p>Returns all the lines from the file.\n<p>See File.readlines.\n",null,1],["readlines","StringIO","ruby/classes/StringIO.html#method-i-readlines","(*args)","<p>See IO#readlines.\n",null,1],["readlines","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-readlines","(*args)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["readlink","File","ruby/classes/File.html#method-c-readlink","(p1)","<p>Returns the name of the file referenced by the given link. Not available on all platforms.\n\n<pre><code>File.symlink(&quot;testfile&quot;, ...\n</code></pre>\n",null,1],["readlink","Pathname","ruby/classes/Pathname.html#method-i-readlink","()","<p>Read symbolic link.\n<p>See File.readlink.\n",null,1],["readme","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-readme","()","",null,0],["readme","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-readme","(path)","<p>Reads the given file at the source root and prints it in the console.\n\n<pre><code>readme &quot;README&quot;\n</code></pre>\n",null,0],["readme","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-readme","()","",null,0],["readmultiline","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-readmultiline","()","",null,1],["readmultiline","Reline::Core","ruby/classes/Reline/Core.html#method-i-readmultiline","(prompt = '', add_hist = false, &confirm_multiline_termination)","",null,1],["readonly","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-readonly","(value = true)","<p>Sets readonly attributes for the returned relation. If value is true (default), attempting to update …\n",null,0],["readonly!","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-readonly-21","()","<p>Marks this record as read only.\n",null,0],["readonly?","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-readonly-3F","()","<p>Returns <code>true</code> if the record is read only.\n",null,0],["readonly?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-readonly-3F","()","<p>If the buffer is <em>read only</em>, meaning the buffer cannot be modified using #set_value, #set_string or #copy …\n",null,1],["readonly_attributes","ActiveRecord::ReadonlyAttributes::ClassMethods","rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-readonly_attributes","()","<p>Returns an array of all the attributes that have been specified as readonly.\n",null,0],["readpartial","ARGF","ruby/classes/ARGF.html#method-i-readpartial","(*args)","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream.\n<p>If the optional <em>outbuf</em> argument is present, it must reference …\n",null,1],["readpartial","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-readpartial","(maxlen, outbuf = \"\".b)","",null,1],["readpartial","IO","ruby/classes/IO.html#method-i-readpartial","(*args)","<p>Reads up to <code>maxlen</code> bytes from the stream; returns a string (either a new string or the given <code>out_string</code> …\n",null,1],["readpartial","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-readpartial","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead of returning <code>nil</code>, as well as IO#sysread …\n",null,1],["readpartial","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-readpartial","(maxlen, buf=nil)","<p>Reads at most <em>maxlen</em> bytes from the stream.  If <em>buf</em> is provided it must reference a string which will …\n",null,1],["readpartial","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-readpartial","(p1, p2 = v2)","<p>Reads at most <em>maxlen</em> bytes from the gziped stream but it blocks only if <em>gzipreader</em> has no data immediately …\n",null,1],["ready?","IO","ruby/classes/IO.html#method-i-ready-3F","()","<p>Returns a truthy value if input available without blocking, or a falsy value.\n<p>You must require ‘io/wait’ …\n",null,1],["real","Complex","ruby/classes/Complex.html#method-i-real","()","<p>Returns the real value for <code>self</code>:\n\n<pre><code>Complex(7).real      #=&gt; 7\nComplex(9, -4).real  #=&gt; 9\n</code></pre>\n<p>If <code>self</code> was created …\n",null,1],["real","Numeric","ruby/classes/Numeric.html#method-i-real","()","<p>Returns <code>self</code>.\n",null,1],["real?","Complex","ruby/classes/Complex.html#method-i-real-3F","()","<p>Returns <code>false</code>; for compatibility with Numeric#real?.\n",null,1],["real?","Numeric","ruby/classes/Numeric.html#method-i-real-3F","()","<p>Returns <code>true</code> if <code>self</code> is a real number (i.e. not Complex).\n",null,1],["real_csrf_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-real_csrf_token","(session)","",null,0],["realdirpath","File","ruby/classes/File.html#method-c-realdirpath","(*args)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual filesystem. The real pathname doesn’t …\n",null,1],["realdirpath","Pathname","ruby/classes/Pathname.html#method-i-realdirpath","(p1 = v1)","<p>Returns the real (absolute) pathname of <code>self</code> in the actual filesystem.\n<p>Does not contain symlinks or useless …\n",null,1],["realloc","Fiddle","ruby/classes/Fiddle.html#method-c-realloc","(p1, p2)","<p>Change the size of the memory allocated at the memory location <code>addr</code> to <code>size</code> bytes.  Returns the memory …\n",null,1],["really_verbose","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-really_verbose","()","<p>Really verbose mode gives you extra output.\n",null,1],["realpath","File","ruby/classes/File.html#method-c-realpath","(*args)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual filesystem not containing symlinks or …\n",null,1],["realpath","Pathname","ruby/classes/Pathname.html#method-i-realpath","(p1 = v1)","<p>Returns the real (absolute) pathname for <code>self</code> in the actual filesystem.\n<p>Does not contain symlinks or useless …\n",null,1],["realtime","Benchmark","ruby/classes/Benchmark.html#method-c-realtime","()","<p>Returns the elapsed real time used to execute the given block.\n",null,1],["reap","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-reap","()","<p>Recover lost connections for the pool. A lost connection can occur if a programmer forgets to checkin …\n",null,0],["reaping_frequency","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-reaping_frequency","()","<p><code>reaping_frequency</code> is configurable mostly for historical reasons, but it could also be useful if someone …\n",null,0],["reason","LocalJumpError","ruby/classes/LocalJumpError.html#method-i-reason","()","<p>The reason this block was terminated: :break, :redo, :retry, :next, :return, or :noreason.\n",null,1],["reason","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-i-reason","()","<p>Returns error reason. Override this for I18N.\n",null,1],["receive","ActionMailbox::Base","rails/classes/ActionMailbox/Base.html#method-c-receive","(inbound_email)","",null,0],["receive","Ractor","ruby/classes/Ractor.html#method-c-receive","()","<p>Receive a message from the incoming port of the current ractor (which was sent there by #send from another …\n",null,1],["receive_if","Ractor","ruby/classes/Ractor.html#method-c-receive_if","(&b)","<p>Receive only a specific message.\n<p>Instead of Ractor.receive, Ractor.receive_if can be given a pattern (or …\n",null,1],["receiver","Binding","ruby/classes/Binding.html#method-i-receiver","()","<p>Returns the bound receiver of the binding object.\n",null,1],["receiver","FrozenError","ruby/classes/FrozenError.html#method-i-receiver","()","<p>Return the receiver associated with this FrozenError exception.\n",null,1],["receiver","KeyError","ruby/classes/KeyError.html#method-i-receiver","()","<p>Return the receiver associated with this KeyError exception.\n",null,1],["receiver","Method","ruby/classes/Method.html#method-i-receiver","()","<p>Returns the bound receiver of the method object.\n\n<pre><code>(1..3).method(:map).receiver # =&gt; 1..3\n</code></pre>\n",null,1],["receiver","NameError","ruby/classes/NameError.html#method-i-receiver","()","<p>Return the receiver associated with this NameError exception.\n",null,1],["recipients","Mail::Message","rails/classes/Mail/Message.html#method-i-recipients","()","",null,0],["recipients","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-recipients","()","",null,1],["recipients_addresses","Mail::Message","rails/classes/Mail/Message.html#method-i-recipients_addresses","()","",null,0],["reconfigure","Reline::Face::Config","ruby/classes/Reline/Face/Config.html#method-i-reconfigure","()","",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reconnect-21","()","<p>Disconnects from the database if already connected, and establishes a new connection with the database. …\n",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reconnect-21","()","",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reconnect-21","()","<p>Close then reopen the connection.\n",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-reconnect-21","()","",null,0],["record","ActiveRecord::Migration::CommandRecorder","rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-record","(*command, &block)","<p>Record <code>command</code>. <code>command</code> should be a method name and arguments. For example:\n\n<pre><code>recorder.record(:method_name, ...\n</code></pre>\n",null,0],["record","ActiveSupport::ErrorReporter","rails/classes/ActiveSupport/ErrorReporter.html#method-i-record","(error_class = StandardError, severity: :error, context: {})","",null,0],["record","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-record","()","",null,0],["record","SyntaxSuggest::CodeSearch","ruby/classes/SyntaxSuggest/CodeSearch.html#method-i-record","(block:, name: \"record\")","<p>Used for debugging\n",null,1],["record_depth","Gem::Resolver::Stats","ruby/classes/Gem/Resolver/Stats.html#method-i-record_depth","(stack)","",null,1],["record_dir","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-record_dir","(dir)","<p>SyntaxSuggest.record_dir [Private]\n<p>Used to generate a unique directory to record search steps for debugging …\n",null,1],["record_key_for_dom_id","ActionView::RecordIdentifier","rails/classes/ActionView/RecordIdentifier.html#method-i-record_key_for_dom_id","(record)","<p>Returns a string representation of the key attribute(s) that is suitable for use in an HTML DOM id.  …\n",null,0],["record_location","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-record_location","(top_level)","<p>Records the RDoc::TopLevel (file) where this code object was defined\n",null,1],["record_location","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-record_location","(top_level)","<p>Record <code>top_level</code> as a file <code>self</code> is in.\n",null,1],["record_requirements","Gem::Resolver::Stats","ruby/classes/Gem/Resolver/Stats.html#method-i-record_requirements","(reqs)","",null,1],["records","ActiveRecord::Associations::Preloader::Association::LoaderRecords","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderRecords.html#method-i-records","()","",null,0],["records_for","ActiveRecord::Associations::Preloader::Association::LoaderQuery","rails/classes/ActiveRecord/Associations/Preloader/Association/LoaderQuery.html#method-i-records_for","(loaders)","",null,0],["recover","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-i-recover","(argv)","<p>Pushes back erred argument(s) to <code>argv</code>.\n",null,1],["recreate_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-recreate_database","(name, options = {})","<p>Drops the database specified on the <code>name</code> attribute and creates it again using the provided <code>options</code>.\n",null,0],["rect","Complex","ruby/classes/Complex.html#method-c-rect","(p1, p2 = v2)","<p>Returns a new Complex object formed from the arguments, each of which must be an instance of Numeric …\n",null,1],["rect","Complex","ruby/classes/Complex.html#method-i-rect","()","<p>Returns a new Complex object formed from the arguments, each of which must be an instance of Numeric …\n",null,1],["rect","Numeric","ruby/classes/Numeric.html#method-i-rect","()","<p>Returns array <code>[self, 0]</code>.\n",null,1],["rectangular","Complex","ruby/classes/Complex.html#method-c-rectangular","(p1, p2 = v2)","<p>Returns a new Complex object formed from the arguments, each of which must be an instance of Numeric …\n",null,1],["rectangular","Complex","ruby/classes/Complex.html#method-i-rectangular","()","<p>Returns the array <code>[self.real, self.imag]</code>:\n\n<pre><code>Complex.rect(1, 2).rect # =&gt; [1, 2]\n</code></pre>\n<p>See Rectangular Coordinates …\n",null,1],["rectangular","Numeric","ruby/classes/Numeric.html#method-i-rectangular","()","<p>Returns array <code>[self, 0]</code>.\n",null,1],["recv","BasicSocket","ruby/classes/BasicSocket.html#method-i-recv","(*args)","<p>Receives a message.\n<p><em>maxlen</em> is the maximum number of bytes to receive.\n<p><em>flags</em> should be a bitwise OR of  …\n",null,1],["recv","Ractor","ruby/classes/Ractor.html#method-i-recv","()","",null,1],["recv","Ractor","ruby/classes/Ractor.html#method-c-recv","()","",null,1],["recv_io","UNIXSocket","ruby/classes/UNIXSocket.html#method-i-recv_io","(p1 = v1, p2 = v2)","<p>Example\n\n<pre><code>UNIXServer.open(&quot;/tmp/sock&quot;) {|serv|\n  UNIXSocket.open(&quot;/tmp/sock&quot;) {|c|\n    s = serv.accept\n ...\n</code></pre>\n",null,1],["recv_nonblock","BasicSocket","ruby/classes/BasicSocket.html#method-i-recv_nonblock","(len, flag = 0, str = nil, exception: true)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code> using recvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,1],["recvfrom","IPSocket","ruby/classes/IPSocket.html#method-i-recvfrom","(*args)","<p>Receives a message and return the message as a string and an address which the message come from.\n<p><em>maxlen</em> …\n",null,1],["recvfrom","Socket","ruby/classes/Socket.html#method-i-recvfrom","(*args)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code>. <em>flags</em> is zero or more of the <code>MSG_</code> options. The first element …\n",null,1],["recvfrom","UNIXSocket","ruby/classes/UNIXSocket.html#method-i-recvfrom","(*args)","<p>Receives a message via <em>unixsocket</em>.\n<p><em>maxlen</em> is the maximum number of bytes to receive.\n<p><em>flags</em> should be a …\n",null,1],["recvfrom_nonblock","Socket","ruby/classes/Socket.html#method-i-recvfrom_nonblock","(len, flag = 0, str = nil, exception: true)","<p>Receives up to <em>maxlen</em> bytes from <code>socket</code> using recvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,1],["recvfrom_nonblock","UDPSocket","ruby/classes/UDPSocket.html#method-i-recvfrom_nonblock","(len, flag = 0, outbuf = nil, exception: true)","<p>Receives up to <em>maxlen</em> bytes from <code>udpsocket</code> using recvfrom(2) after O_NONBLOCK is set for the underlying …\n",null,1],["recvmsg","BasicSocket","ruby/classes/BasicSocket.html#method-i-recvmsg","(dlen = nil, flags = 0, clen = nil, scm_rights: false)","<p>recvmsg receives a message using recvmsg(2) system call in blocking manner.\n<p><em>maxmesglen</em> is the maximum …\n",null,1],["recvmsg_nonblock","BasicSocket","ruby/classes/BasicSocket.html#method-i-recvmsg_nonblock","(dlen = nil, flags = 0, clen = nil, scm_rights: false, exception: true)","<p>recvmsg receives a message using recvmsg(2) system call in non-blocking manner.\n<p>It is similar to BasicSocket#recvmsg …\n",null,1],["redact","Gem::Uri","ruby/classes/Gem/Uri.html#method-c-redact","(uri)","<p>Parses and redacts uri\n",null,1],["redact_credentials_from","Gem::Uri","ruby/classes/Gem/Uri.html#method-i-redact_credentials_from","(text)","",null,1],["redacted","Gem::Uri","ruby/classes/Gem/Uri.html#method-i-redacted","()","",null,1],["redefine_method","Module","rails/classes/Module.html#method-i-redefine_method","(method, &block)","<p>Replaces the existing method definition, if there is one, with the passed block as its body.\n",null,0],["redefine_singleton_method","Module","rails/classes/Module.html#method-i-redefine_singleton_method","(method, &block)","<p>Replaces the existing singleton method definition, if there is one, with the passed block as its body. …\n",null,0],["redirect","ActionDispatch::Routing::Redirection","rails/classes/ActionDispatch/Routing/Redirection.html#method-i-redirect","(*args, &block)","<p>Redirect any path to another path:\n\n<pre><code>get &quot;/stories&quot; =&gt; redirect(&quot;/posts&quot;)\n</code></pre>\n<p>This will redirect the user, while …\n",null,0],["redirect_back","ActionController::Redirecting","rails/classes/ActionController/Redirecting.html#method-i-redirect_back","(fallback_location:, allow_other_host: _allow_other_host, **args)","<p>Soft deprecated alias for #redirect_back_or_to where the <code>fallback_location</code> location is supplied as a …\n",null,0],["redirect_back_or_to","ActionController::Redirecting","rails/classes/ActionController/Redirecting.html#method-i-redirect_back_or_to","(fallback_location, allow_other_host: _allow_other_host, **options)","<p>Redirects the browser to the page that issued the request (the referrer) if possible, otherwise redirects …\n",null,0],["redirect_resource_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-redirect_resource_name","()","",null,0],["redirect_to","ActionController::Flash","rails/classes/ActionController/Flash.html#method-i-redirect_to","(options = {}, response_options_and_flash = {})","",null,0],["redirect_to","ActionController::Instrumentation","rails/classes/ActionController/Instrumentation.html#method-i-redirect_to","(*)","",null,0],["redirect_to","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-redirect_to","(event)","",null,0],["redirect_to","ActionController::Redirecting","rails/classes/ActionController/Redirecting.html#method-i-redirect_to","(options = {}, response_options = {})","<p>Redirects the browser to the target specified in <code>options</code>. This parameter can be any one of:\n<p><code>Hash</code> - The …\n",null,0],["redis","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-redis","()","",null,0],["reduce","Enumerable","ruby/classes/Enumerable.html#method-i-reduce","(p1 = v1, p2 = v2)","<p>Returns an object formed from operands via either:\n<p>A method named by <code>symbol</code>.\n<p>A block to which each operand …\n",null,1],["ref","ActionView::Template::Types::Type","rails/classes/ActionView/Template/Types/Type.html#method-i-ref","()","",null,0],["ref","Mime::NullType","rails/classes/Mime/NullType.html#method-i-ref","()","",null,0],["ref","Mime::Type","rails/classes/Mime/Type.html#method-i-ref","()","",null,0],["ref","Fiddle::Pinned","ruby/classes/Fiddle/Pinned.html#method-i-ref","()","<p>Return the object that this pinned instance references.\n",null,1],["ref","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-ref","()","<p>Returns a new Fiddle::Pointer instance that is a reference pointer for this pointer.\n<p>Analogous to the …\n",null,1],["reference","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-reference","(label, link)","<p>Stores <code>label</code> as a reference to <code>link</code> and fills in previously unknown\nlink references.\n",null,1],["references","ActiveRecord::ConnectionAdapters::SQLite3::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3/TableDefinition.html#method-i-references","(*args, **options)","",null,0],["references","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-references","(*args, **options)","<p>Adds a reference.\n\n<pre><code>t.references(:user)\nt.belongs_to(:supplier, foreign_key: true)\n</code></pre>\n<p>See connection.add_reference …\n",null,0],["references","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-references","(*args, **options)","<p>Adds a reference.\n\n<pre><code>t.references(:user)\nt.belongs_to(:supplier, foreign_key: true)\nt.belongs_to(:supplier, ...\n</code></pre>\n",null,0],["references","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-references","(*table_names)","<p>Use to indicate that the given <code>table_names</code> are referenced by an SQL string, and should therefore be  …\n",null,0],["refinements","","ruby/files/ruby/doc/syntax/refinements_rdoc.html","","<p>Refinements\n<p>Due to Ruby’s open classes you can redefine or add functionality to existing classes. …\n",null,1],["refinements","Module","ruby/classes/Module.html#method-i-refinements","()","<p>Returns an array of modules defined within the receiver.\n\n<pre><code>module A\n  refine Integer do\n  end\n\n  refine ...\n</code></pre>\n",null,1],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_aggregation","(aggregation)","<p>Returns the AggregateReflection object for the named <code>aggregation</code> (use the symbol).\n\n<pre><code>Account.reflect_on_aggregation(:balance) ...\n</code></pre>\n",null,0],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_aggregations","()","<p>Returns an array of AggregateReflection objects for all the aggregations in the class.\n",null,0],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_associations","(macro = nil)","<p>Returns an array of AssociationReflection objects for all the associations in the class. If you only …\n",null,0],["reflect_on_all_attachments","ActiveStorage::Reflection::ActiveRecordExtensions::ClassMethods","rails/classes/ActiveStorage/Reflection/ActiveRecordExtensions/ClassMethods.html#method-i-reflect_on_all_attachments","()","<p>Returns an array of reflection objects for all the attachments in the class.\n",null,0],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_autosave_associations","()","<p>Returns an array of AssociationReflection objects for all associations which have <code>:autosave</code> enabled. …\n",null,0],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_association","(association)","<p>Returns the AssociationReflection object for the <code>association</code> (use the symbol).\n\n<pre><code>Account.reflect_on_association(:owner) ...\n</code></pre>\n",null,0],["reflect_on_attachment","ActiveStorage::Reflection::ActiveRecordExtensions::ClassMethods","rails/classes/ActiveStorage/Reflection/ActiveRecordExtensions/ClassMethods.html#method-i-reflect_on_attachment","(attachment)","<p>Returns the reflection object for the named <code>attachment</code>.\n\n<pre><code>User.reflect_on_attachment(:avatar)\n# =&gt; the avatar ...\n</code></pre>\n",null,0],["reflections","ActiveRecord::Reflection::ClassMethods","rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflections","()","<p>Returns a Hash of name of the reflection as the key and an AssociationReflection as the value.\n\n<pre><code>Account.reflections ...\n</code></pre>\n",null,0],["refresh","Gem","ruby/classes/Gem.html#method-c-refresh","()","<p>Refresh available gems from disk.\n",null,1],["regenerate_binstubs","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-regenerate_binstubs","(bindir)","",null,1],["regenerate_plugins","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-regenerate_plugins","(bindir)","",null,1],["regenerate_plugins","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-regenerate_plugins","()","<p>Regenerates plugin wrappers after removal.\n",null,1],["regenerate_plugins_for","Gem::InstallerUninstallerUtils","ruby/classes/Gem/InstallerUninstallerUtils.html#method-i-regenerate_plugins_for","(spec, plugins_dir)","",null,1],["regexp","MatchData","ruby/classes/MatchData.html#method-i-regexp","()","<p>Returns the regexp that produced the match:\n\n<pre><code>m = /a.*b/.match(&quot;abc&quot;) # =&gt; #&lt;MatchData &quot;ab&quot;&gt;\nm.regexp   ...\n</code></pre>\n",null,1],["regexp","OptionParser::Completion","ruby/classes/OptionParser/Completion.html#method-c-regexp","(key, icase)","",null,1],["regist","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-i-regist","(name, ro)","",null,1],["regist_server","DRb","ruby/classes/DRb.html#method-c-regist_server","(server)","<p>Registers <code>server</code> with DRb.\n<p>This is called when a new DRb::DRbServer is created.\n<p>If there is no primary …\n",null,1],["register","ActiveModel::Type","rails/classes/ActiveModel/Type.html#method-c-register","(type_name, klass = nil, &block)","<p>Add a new type to the registry, allowing it to be referenced as a symbol by attribute.\n",null,0],["register","ActiveRecord::Type","rails/classes/ActiveRecord/Type.html#method-c-register","(type_name, klass = nil, **options, &block)","<p>Add a new type to the registry, allowing it to be referenced as a symbol by ActiveRecord::Base.attribute …\n",null,0],["register","Mime::Type","rails/classes/Mime/Type.html#method-c-register","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",null,0],["register","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-i-register","(name, ro)","",null,1],["register","Gem::NoAliasYAMLTree","ruby/classes/Gem/NoAliasYAMLTree.html#method-i-register","(target, obj)","<p>Noop this out so there are no anchors\n",null,1],["register","OpenSSL::ASN1::ObjectId","ruby/classes/OpenSSL/ASN1/ObjectId.html#method-c-register","(p1, p2, p3)","<p>This adds a new ObjectId to the internal tables. Where <em>object_id</em> is the numerical form, <em>short_name</em> is …\n",null,1],["register_alias","Mime::Type","rails/classes/Mime/Type.html#method-c-register_alias","(string, symbol, extension_synonyms = [])","<p>Registers an alias that’s not used on MIME type lookup, but can be referenced directly. Especially …\n",null,0],["register_callback","Mime::Type","rails/classes/Mime/Type.html#method-c-register_callback","(&block)","",null,0],["register_command","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-register_command","(command, obj=false)","<p>Register the Symbol <code>command</code> as a gem command.\n",null,1],["register_default_spec","Gem","ruby/classes/Gem.html#method-c-register_default_spec","(spec)","<p>Register a Gem::Specification for default gem.\n<p>Two formats for the specification are supported:\n<p>MRI 2.0 …\n",null,1],["register_directories","Rails::SourceAnnotationExtractor::Annotation","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html#method-c-register_directories","(*dirs)","<p>Registers additional directories to be included\n\n<pre><code>Rails::SourceAnnotationExtractor::Annotation.register_directories(&quot;spec&quot;, ...\n</code></pre>\n",null,0],["register_engulf_block","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-register_engulf_block","(block)","<p>When one element fully encapsulates another we remove the smaller block from the frontier. This prevents …\n",null,1],["register_extensions","Rails::SourceAnnotationExtractor::Annotation","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html#method-c-register_extensions","(*exts, &block)","<p>Registers new Annotations File Extensions\n\n<pre><code>Rails::SourceAnnotationExtractor::Annotation.register_extensions(&quot;css&quot;, ...\n</code></pre>\n",null,0],["register_hook","ActiveSupport::ExecutionWrapper","rails/classes/ActiveSupport/ExecutionWrapper.html#method-c-register_hook","(hook, outer: false)","<p>Register an object to be invoked during both the <code>run</code> and <code>complete</code> steps.\n<p><code>hook.complete</code> will be passed …\n",null,0],["register_indent_block","SyntaxSuggest::CodeFrontier","ruby/classes/SyntaxSuggest/CodeFrontier.html#method-i-register_indent_block","(block)","<p>Keeps track of what lines have been added to blocks and which are not yet visited.\n",null,1],["register_interceptor","ActionDispatch::DebugExceptions","rails/classes/ActionDispatch/DebugExceptions.html#method-c-register_interceptor","(object = nil, &block)","",null,0],["register_interceptor","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-register_interceptor","(interceptor)","<p>Register an Interceptor which will be called before mail is sent. Either a class, string, or symbol can …\n",null,0],["register_interceptors","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-register_interceptors","(*interceptors)","<p>Register one or more Interceptors which will be called before mail is sent.\n",null,0],["register_observer","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-register_observer","(observer)","<p>Register an Observer which will be notified when mail is delivered. Either a class, string, or symbol …\n",null,0],["register_observers","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-register_observers","(*observers)","<p>Register one or more Observers which will be notified when mail is delivered.\n",null,0],["register_preview_interceptor","ActionMailer::Previews::ClassMethods","rails/classes/ActionMailer/Previews/ClassMethods.html#method-i-register_preview_interceptor","(interceptor)","<p>Register an Interceptor which will be called before mail is previewed. Either a class or a string can …\n",null,0],["register_preview_interceptors","ActionMailer::Previews::ClassMethods","rails/classes/ActionMailer/Previews/ClassMethods.html#method-i-register_preview_interceptors","(*interceptors)","<p>Register one or more Interceptors which will be called before mail is previewed.\n",null,0],["register_scheme","URI","ruby/classes/URI.html#method-c-register_scheme","(scheme, klass)","<p>Registers the given <code>klass</code> as the class to be instantiated when parsing a URI with the given <code>scheme</code>:\n\n<pre><code>URI.register_scheme(&#39;MS_SEARCH&#39;, ...\n</code></pre>\n",null,1],["register_tags","Rails::SourceAnnotationExtractor::Annotation","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html#method-c-register_tags","(*additional_tags)","<p>Registers additional tags\n\n<pre><code>Rails::SourceAnnotationExtractor::Annotation.register_tags(&quot;TESTME&quot;, &quot;DEPRECATEME&quot;)\n</code></pre>\n",null,0],["register_task","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-register_task","(pattern, task)","",null,0],["registry","ActiveRecord::ConnectionAdapters::Deduplicable::ClassMethods","rails/classes/ActiveRecord/ConnectionAdapters/Deduplicable/ClassMethods.html#method-i-registry","()","",null,0],["registry=","URI::Generic","ruby/classes/URI/Generic.html#method-i-registry-3D","(v)","",null,1],["regular_class_path","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-regular_class_path","()","",null,0],["regular_update","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(*other_hashes, &block)","",null,0],["regular_update","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(*other_hashes, &block)","",null,0],["regular_writer","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,0],["regular_writer","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,0],["rehash","ENV","ruby/classes/ENV.html#method-c-rehash","()","<p>(Provided for compatibility with Hash.)\n<p>Does not modify ENV; returns <code>nil</code>.\n",null,1],["rehash","Hash","ruby/classes/Hash.html#method-i-rehash","()","<p>Rebuilds the hash table by recomputing the hash index for each key; returns <code>self</code>.\n<p>The hash table becomes …\n",null,1],["reject","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-reject","()","",null,0],["reject","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-reject","(&block)","<p>Returns a new <code>ActionController::Parameters</code> instance with items that the block evaluates to true removed. …\n",null,0],["reject","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reject","(*args, &block)","",null,0],["reject","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reject","(*args, &block)","",null,0],["reject","Array","ruby/classes/Array.html#method-i-reject","()","<p>Returns a new Array whose elements are all those from <code>self</code> for which the block returns <code>false</code> or <code>nil</code>: …\n",null,1],["reject","ENV","ruby/classes/ENV.html#method-c-reject","()","<p>Yields each environment variable name and its value as a 2-element Array. Returns a Hash whose items …\n",null,1],["reject","Enumerable","ruby/classes/Enumerable.html#method-i-reject","()","<p>Returns an array of objects rejected by the block.\n<p>With a block given, calls the block with successive …\n",null,1],["reject","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-reject","()","<p>Like Enumerable#reject, but chains operation to be lazy-evaluated.\n",null,1],["reject","Hash","ruby/classes/Hash.html#method-i-reject","()","<p>Returns a new Hash object whose entries are all those from <code>self</code> for which the block returns <code>false</code> or …\n",null,1],["reject","OptionParser","ruby/classes/OptionParser.html#method-c-reject","(*args, &blk)","<p>See #reject.\n",null,1],["reject","OptionParser","ruby/classes/OptionParser.html#method-i-reject","(*args, &blk)","<p>Directs to reject specified class argument.\n<p><code>t</code> &mdash; Argument class specifier, any object including Class.\n\n\n<pre><code>reject(t)\n</code></pre>\n",null,1],["reject","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-reject","(t)","<p>See OptionParser.reject.\n",null,1],["reject","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-reject","()","<p>Converts the contents of the database to an in-memory Hash, then calls Hash#reject with the specified …\n",null,1],["reject!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-reject-21","(&block)","<p>Removes items that the block evaluates to true and returns self.\n",null,0],["reject!","Array","ruby/classes/Array.html#method-i-reject-21","()","<p>Removes each element for which the block returns a truthy value.\n<p>Returns <code>self</code> if any elements removed: …\n",null,1],["reject!","ENV","ruby/classes/ENV.html#method-c-reject-21","()","<p>Similar to ENV.delete_if, but returns <code>nil</code> if no changes were made.\n<p>Yields each environment variable name …\n",null,1],["reject!","Hash","ruby/classes/Hash.html#method-i-reject-21","()","<p>Returns <code>self</code>, whose remaining entries are those for which the block returns <code>false</code> or <code>nil</code>:\n\n<pre><code>h = {foo: 0, ...\n</code></pre>\n",null,1],["reject!","Set","ruby/classes/Set.html#method-i-reject-21","(&block)","<p>Equivalent to Set#delete_if, but returns nil if no changes were\nmade. Returns an enumerator if no block ...\n",null,1],["reject_unauthorized_connection","ActionCable::Connection::Authorization","rails/classes/ActionCable/Connection/Authorization.html#method-i-reject_unauthorized_connection","()","<p>Closes the WebSocket connection if it is open and returns a 404 “File not Found” response. …\n",null,0],["relative?","Pathname","ruby/classes/Pathname.html#method-i-relative-3F","()","<p>The opposite of Pathname#absolute?\n<p>It returns <code>false</code> if the pathname begins with a slash.\n\n<pre><code>p = Pathname.new(&#39;/im/sure&#39;) ...\n</code></pre>\n",null,1],["relative?","URI::Generic","ruby/classes/URI/Generic.html#method-i-relative-3F","()","<p>Returns true if URI does not have a scheme (e.g. http:// or https://) specified.\n",null,1],["relative_path_from","Pathname","ruby/classes/Pathname.html#method-i-relative_path_from","(base_directory)","<p>Returns a relative path from the given <code>base_directory</code> to the receiver.\n<p>If <code>self</code> is absolute, then <code>base_directory</code> …\n",null,1],["relay","ActionMailbox::Relayer","rails/classes/ActionMailbox/Relayer.html#method-i-relay","(source)","",null,0],["release","Gem::Version","ruby/classes/Gem/Version.html#method-i-release","()","<p>The release for this version (e.g. 1.2.0.a -&gt; 1.2.0). Non-prerelease versions return themselves.\n",null,1],["release","OptionParser","ruby/classes/OptionParser.html#method-i-release","()","<p>Release code\n",null,1],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-release_connection","(owner_thread = Thread.current)","<p>Signal that the thread is finished with the current connection. #release_connection releases the connection-thread …\n",null,0],["release_savepoint","ActiveRecord::ConnectionAdapters::Savepoints","rails/classes/ActiveRecord/ConnectionAdapters/Savepoints.html#method-i-release_savepoint","(name = current_savepoint_name)","",null,0],["release_unload_lock!","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-i-release_unload_lock-21","()","<p>Release the unload lock if it has been previously obtained\n",null,0],["reload","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-reload","()","<p>Reloads the collection from the database. Returns <code>self</code>.\n\n<pre><code>class Person &lt; ActiveRecord::Base\n  has_many :pets ...\n</code></pre>\n",null,0],["reload","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-reload","(*)","<p><code>reload</code> the record and clears changed attributes.\n",null,0],["reload","ActiveRecord::AutosaveAssociation","rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-reload","(options = nil)","<p>Reloads the attributes of the object as usual and clears <code>marked_for_destruction</code> flag.\n",null,0],["reload","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-reload","(options = nil)","<p>Reloads the record from the database.\n<p>This method finds the record by its primary key (which could be …\n",null,0],["reload","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-reload","()","<p>Forces reloading of relation.\n",null,0],["reload","DRb::DRbUnknown","ruby/classes/DRb/DRbUnknown.html#method-i-reload","()","<p>Attempt to load the wrapped marshalled object again.\n<p>If the class of the object is now known locally, …\n",null,1],["reload!","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-c-reload-21","()","<p>Initiate a manual reload\n",null,0],["reload!","Rails::Application::RoutesReloader","rails/classes/Rails/Application/RoutesReloader.html#method-i-reload-21","()","",null,0],["reload!","Rails::ConsoleMethods","rails/classes/Rails/ConsoleMethods.html#method-i-reload-21","(print = true)","<p>reloads the environment\n",null,0],["reload_routes!","Rails::Application","rails/classes/Rails/Application.html#method-i-reload_routes-21","()","<p>Reload application routes regardless if they changed or not.\n",null,0],["remainder","BigDecimal","ruby/classes/BigDecimal.html#method-i-remainder","(p1)","<p>Returns the remainder from dividing by the value.\n<p>x.remainder(y) means x-y*(x/y).truncate\n",null,1],["remainder","Integer","ruby/classes/Integer.html#method-i-remainder","(p1)","<p>Returns the remainder after dividing <code>self</code> by <code>other</code>.\n<p>Examples:\n\n<pre><code>11.remainder(4)              # =&gt; 3\n11.remainder(-4) ...\n</code></pre>\n",null,1],["remainder","Numeric","ruby/classes/Numeric.html#method-i-remainder","(p1)","<p>Returns the remainder after dividing <code>self</code> by <code>other</code>.\n<p>Of the Core and Standard Library classes, only Float …\n",null,1],["remote.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/features/remote_coffee.html","","<p>#= require_tree ../utils\n<p>{\n\n<pre><code>matches, getData, setData\nfire, stopEverything\najax, isCrossDomain\nserializeElement, ...\n</code></pre>\n",null,0],["remote=","Gem::Resolver::ComposedSet","ruby/classes/Gem/Resolver/ComposedSet.html#method-i-remote-3D","(remote)","<p>Sets the remote network access for all composed sets.\n",null,1],["remote?","Gem::LocalRemoteOptions","ruby/classes/Gem/LocalRemoteOptions.html#method-i-remote-3F","()","<p>Is remote fetching enabled?\n",null,1],["remote?","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-remote-3F","()","",null,1],["remote_address","BasicSocket","ruby/classes/BasicSocket.html#method-i-remote_address","()","<p>Returns an Addrinfo object for remote address obtained by getpeername.\n<p>Note that addrinfo.protocol is …\n",null,1],["remote_connections","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-remote_connections","()","<p>Gateway to RemoteConnections. See that class for details.\n",null,0],["remote_ip","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-remote_ip","()","<p>Returns the IP address of client as a <code>String</code>, usually set by the RemoteIp middleware.\n",null,0],["remote_ip=","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-remote_ip-3D","(remote_ip)","",null,0],["remove","ActionController::Renderers","rails/classes/ActionController/Renderers.html#method-c-remove","(key)","<p>This method is the opposite of add method.\n<p>To remove a csv renderer:\n\n<pre><code>ActionController::Renderers.remove(:csv)\n</code></pre>\n",null,0],["remove","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-remove","(conn)","<p>Remove a connection from the connection pool. The connection will remain open and active but will no …\n",null,0],["remove","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove","(*column_names, **options)","<p>Removes the column(s) from the table definition.\n\n<pre><code>t.remove(:qualification)\nt.remove(:qualification, :experience)\n</code></pre>\n",null,0],["remove","String","rails/classes/String.html#method-i-remove","(*patterns)","<p>Returns a new string with all occurrences of the patterns removed.\n\n<pre><code>str = &quot;foo bar test&quot;\nstr.remove(&quot; test&quot;) ...\n</code></pre>\n",null,0],["remove","FileUtils","ruby/classes/FileUtils.html#method-c-remove","(list, force: nil, noop: nil, verbose: nil)","",null,1],["remove","Gem::Resolver::RequirementList","ruby/classes/Gem/Resolver/RequirementList.html#method-i-remove","()","<p>Remove the oldest DependencyRequest from the list.\n",null,1],["remove","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-remove","(spec)","<p>spec &mdash; the spec of the gem to be uninstalled\n\n",null,1],["remove","OptionParser","ruby/classes/OptionParser.html#method-i-remove","()","<p>Removes the last List.\n",null,1],["remove","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-remove","()","<p>Removes generated RDoc and ri data\n",null,1],["remove","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-remove","()","<p>Removes generated RDoc and ri data\n",null,1],["remove","Ractor::Selector","ruby/classes/Ractor/Selector.html#method-i-remove","(p1)","",null,1],["remove!","String","rails/classes/String.html#method-i-remove-21","(*patterns)","<p>Alters the string by removing all occurrences of the patterns.\n\n<pre><code>str = &quot;foo bar test&quot;\nstr.remove!(&quot; test&quot;, ...\n</code></pre>\n",null,0],["remove_all","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-remove_all","(list)","<p>Removes all gems in <code>list</code>.\n<p>NOTE: removes uninstalled gems from <code>list</code>.\n",null,1],["remove_belongs_to","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_belongs_to","(table_name, ref_name, foreign_key: false, polymorphic: false, **options)","",null,0],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_belongs_to","(*args, **options)","",null,0],["remove_by_name","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-remove_by_name","(full_name)","<p>Removes the gemspec matching <code>full_name</code> from the dependency list\n",null,1],["remove_channel","ActionCable::SubscriptionAdapter::PostgreSQL::Listener","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL/Listener.html#method-i-remove_channel","(channel)","",null,0],["remove_channel","ActionCable::SubscriptionAdapter::Redis::Listener","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener.html#method-i-remove_channel","(channel)","",null,0],["remove_channel","ActionCable::SubscriptionAdapter::SubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html#method-i-remove_channel","(channel)","",null,0],["remove_check_constraint","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_check_constraint","(table_name, expression = nil, **options)","<p>Removes the given check constraint from the table.\n\n<pre><code>remove_check_constraint :products, name: &quot;price_check&quot;\n</code></pre>\n",null,0],["remove_check_constraint","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_check_constraint","(*args, **options)","<p>Removes the given check constraint from the table.\n\n<pre><code>t.remove_check_constraint(name: &quot;price_check&quot;)\n</code></pre>\n<p>See  …\n",null,0],["remove_class_variable","Module","ruby/classes/Module.html#method-i-remove_class_variable","(p1)","<p>Removes the named class variable from the receiver, returning that variable’s value.\n\n<pre><code>class Example ...\n</code></pre>\n",null,1],["remove_coding_comment","RDoc::Parser::Simple","ruby/classes/RDoc/Parser/Simple.html#method-i-remove_coding_comment","(text)","<p>Removes the encoding magic comment from <code>text</code>\n",null,1],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_column","(table_name, column_name, type = nil, **options)","<p>Removes the column from the table definition.\n\n<pre><code>remove_column(:suppliers, :qualification)\n</code></pre>\n<p>The <code>type</code> and <code>options</code> …\n",null,0],["remove_column","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-remove_column","(name)","<p>remove the column <code>name</code> from the table.\n\n<pre><code>remove_column(:account_id)\n</code></pre>\n",null,0],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_columns","(table_name, *column_names, type: nil, **options)","<p>Removes the given columns from the table definition.\n\n<pre><code>remove_columns(:suppliers, :qualification, :experience)\n</code></pre>\n",null,0],["remove_commented_out_lines","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-remove_commented_out_lines","()","<p>Removes lines that are commented out that might otherwise get picked up when scanning for classes and …\n",null,1],["remove_connection","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-remove_connection","(name = nil)","",null,0],["remove_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-remove_connection_pool","(owner, role: ActiveRecord::Base.current_role, shard: ActiveRecord::Base.current_shard)","",null,0],["remove_dir","FileUtils","ruby/classes/FileUtils.html#method-c-remove_dir","(path, force = false)","<p>Recursively removes the directory entry given by <code>path</code>, which should be the entry for a regular file, …\n",null,1],["remove_entry","FileUtils","ruby/classes/FileUtils.html#method-c-remove_entry","(path, force = false)","<p>Removes the entry given by <code>path</code>, which should be the entry for a regular file, a symbolic link, or a …\n",null,1],["remove_entry_secure","FileUtils","ruby/classes/FileUtils.html#method-c-remove_entry_secure","(path, force = false)","<p>Securely removes the entry given by <code>path</code>, which should be the entry for a regular file, a symbolic link, …\n",null,1],["remove_event_subscriber","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-c-remove_event_subscriber","(event)","",null,0],["remove_executables","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-remove_executables","(spec)","<p>Removes installed executables and batch files (windows only) for <code>spec</code>.\n",null,1],["remove_file","FileUtils","ruby/classes/FileUtils.html#method-c-remove_file","(path, force = false)","<p>Removes the file entry given by <code>path</code>, which should be the entry for a regular file or a symbolic link. …\n",null,1],["remove_file_list","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-remove_file_list","(files, dir)","",null,1],["remove_filters!","ActiveSupport::BacktraceCleaner","rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_filters-21","()","<p>Removes all filters, but leaves in the silencers. Useful if you suddenly need to see entire filepaths …\n",null,0],["remove_foreign_key","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_foreign_key","(from_table, to_table = nil, **options)","<p>Removes the given foreign key from the table. Any option parameters provided will be used to re-add the …\n",null,0],["remove_foreign_key","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_foreign_key","(*args, **options)","<p>Removes the given foreign key from the table.\n\n<pre><code>t.remove_foreign_key(:authors)\nt.remove_foreign_key(column: ...\n</code></pre>\n",null,0],["remove_from_documentation?","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-remove_from_documentation-3F","()","<p>Should we remove this context from the documentation?\n<p>The answer is yes if:\n<p>#received_nodoc is <code>true</code>\n",null,1],["remove_hook_for","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-remove_hook_for","(*names)","<p>Remove a previously added hook.\n\n<pre><code>remove_hook_for :orm\n</code></pre>\n",null,0],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_index","(table_name, column_name = nil, **options)","<p>Removes the given index from the table.\n<p>Removes the index on <code>branch_id</code> in the <code>accounts</code> table if exactly …\n",null,0],["remove_index","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_index","(column_name = nil, **options)","<p>Removes the given index from the table.\n\n<pre><code>t.remove_index(:branch_id)\nt.remove_index(column: [:branch_id, ...\n</code></pre>\n",null,0],["remove_installed!","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-remove_installed-21","(dep)","",null,1],["remove_instance_variable","Object","ruby/classes/Object.html#method-i-remove_instance_variable","(p1)","<p>Removes the named instance variable from <em>obj</em>, returning that variable’s value. String arguments are …\n",null,1],["remove_invisible","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-remove_invisible","(min_visibility)","<p>Removes methods and attributes with a visibility less than <code>min_visibility</code>.\n",null,1],["remove_magic_comment","RDoc::Encoding","ruby/classes/RDoc/Encoding.html#method-c-remove_magic_comment","(string)","<p>Removes magic comments and shebang\n",null,1],["remove_method","Module","ruby/classes/Module.html#method-i-remove_method","(*args)","<p>Removes the method identified by <em>symbol</em> from the current class. For an example, see Module#undef_method …\n",null,1],["remove_modeline","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-remove_modeline","(content)","<p>Removes an emacs-style modeline from the first line of the document\n",null,1],["remove_nodoc","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-remove_nodoc","(all_hash)","<p>Removes from <code>all_hash</code> the contexts that are nodoc or have no content.\n<p>See RDoc::Context#remove_from_documentation? …\n",null,1],["remove_nodoc_children","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-remove_nodoc_children","()","<p>Updates the child modules or classes of class/module <code>parent</code> by deleting the ones that have been removed …\n",null,1],["remove_old_bin_files","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-remove_old_bin_files","(bin_dir)","",null,1],["remove_old_lib_files","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-remove_old_lib_files","(lib_dir)","",null,1],["remove_old_man_files","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-remove_old_man_files","(old_man_dir)","",null,1],["remove_option","Gem::Command","ruby/classes/Gem/Command.html#method-i-remove_option","(name)","<p>Remove previously defined command-line argument <code>name</code>.\n",null,1],["remove_owners","Gem::Commands::OwnerCommand","ruby/classes/Gem/Commands/OwnerCommand.html#method-i-remove_owners","(name, owners)","",null,1],["remove_plugins_for","Gem::InstallerUninstallerUtils","ruby/classes/Gem/InstallerUninstallerUtils.html#method-i-remove_plugins_for","(spec, plugins_dir)","",null,1],["remove_possible_method","Module","rails/classes/Module.html#method-i-remove_possible_method","(method)","<p>Removes the named method, if it exists.\n",null,0],["remove_possible_singleton_method","Module","rails/classes/Module.html#method-i-remove_possible_singleton_method","(method)","<p>Removes the named singleton method, if it exists.\n",null,0],["remove_private","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-remove_private","()","<p>Removes private sections from this comment.  Private sections are flush to the comment marker and start …\n",null,1],["remove_private_comment","RDoc::Parser::Simple","ruby/classes/RDoc/Parser/Simple.html#method-i-remove_private_comment","(comment)","<p>Removes private comments.\n<p>Unlike RDoc::Comment#remove_private this implementation only looks for two dashes …\n",null,1],["remove_reference","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_reference","(table_name, ref_name, foreign_key: false, polymorphic: false, **options)","<p>Removes the reference(s). Also removes a <code>type</code> column if one exists. #remove_reference and #remove_belongs_to …\n",null,0],["remove_references","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_references","(*args, **options)","<p>Removes a reference. Optionally removes a <code>type</code> column.\n\n<pre><code>t.remove_references(:user)\nt.remove_belongs_to(:supplier, ...\n</code></pre>\n",null,0],["remove_renderer","ActionController","rails/classes/ActionController.html#method-c-remove_renderer","(key)","<p>See Renderers.remove\n",null,0],["remove_server","DRb","ruby/classes/DRb.html#method-c-remove_server","(server)","<p>Removes <code>server</code> from the list of registered servers.\n",null,1],["remove_siginfo_handler","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-remove_siginfo_handler","()","<p>Removes a siginfo handler and replaces the previous\n",null,1],["remove_silencers!","ActiveSupport::BacktraceCleaner","rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_silencers-21","()","<p>Removes all silencers, but leaves in the filters. Useful if your context of debugging suddenly expands …\n",null,0],["remove_spec","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-remove_spec","(spec)","<p>Removes <code>spec</code> from the known specs.\n",null,1],["remove_specs_unsatisfied_by","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-remove_specs_unsatisfied_by","(dependencies)","<p>Remove everything in the DependencyList that matches but doesn’t satisfy items in <code>dependencies</code> (a …\n",null,1],["remove_stress_to_class","GC","ruby/classes/GC.html#method-c-remove_stress_to_class","(*args)","<p>No longer raises NoMemoryError when allocating an instance of the given classes.\n",null,1],["remove_subscriber","ActionCable::SubscriptionAdapter::SubscriberMap","rails/classes/ActionCable/SubscriptionAdapter/SubscriberMap.html#method-i-remove_subscriber","(channel, subscriber)","",null,0],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_timestamps","(table_name, **options)","<p>Removes the timestamp columns (<code>created_at</code> and <code>updated_at</code>) from the table definition.\n\n<pre><code>remove_timestamps(:suppliers)\n</code></pre>\n",null,0],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_timestamps","(**options)","<p>Removes the timestamp columns (<code>created_at</code> and <code>updated_at</code>) from the table.\n\n<pre><code>t.remove_timestamps\n</code></pre>\n<p>See connection.remove_timestamps …\n",null,0],["remove_token_listener","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-remove_token_listener","(obj)","<p>Removes the token listener <code>obj</code>\n",null,1],["remove_unparseable","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-remove_unparseable","(files)","<p>Removes file extensions known to be unparseable from <code>files</code> and TAGS files for emacs and vim.\n",null,1],["removed_method_calls","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-removed_method_calls","()","",null,1],["rename","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-rename","(column_name, new_column_name)","<p>Renames a column.\n\n<pre><code>t.rename(:description, :name)\n</code></pre>\n<p>See connection.rename_column\n",null,0],["rename","File","ruby/classes/File.html#method-c-rename","(p1, p2)","<p>Renames the given file to the new name. Raises a SystemCallError if the file cannot be renamed.\n\n<pre><code>File.rename(&quot;afile&quot;, ...\n</code></pre>\n",null,1],["rename","Pathname","ruby/classes/Pathname.html#method-i-rename","(p1)","<p>Rename the file.\n<p>See File.rename.\n",null,1],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_column","(table_name, column_name, new_column_name)","<p>Renames a column.\n\n<pre><code>rename_column(:suppliers, :description, :name)\n</code></pre>\n",null,0],["rename_index","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_index","(table_name, old_name, new_name)","",null,0],["rename_index","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-rename_index","(table_name, old_name, new_name)","<p>Renames an index of a table. Raises error if length of new index name is greater than allowed limit. …\n",null,0],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_index","(table_name, old_name, new_name)","<p>Renames an index.\n<p>Rename the <code>index_people_on_last_name</code> index to <code>index_users_on_last_name</code>:\n\n<pre><code>rename_index ...\n</code></pre>\n",null,0],["rename_index","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-rename_index","(index_name, new_index_name)","<p>Renames the given index on the table.\n\n<pre><code>t.rename_index(:user_id, :account_id)\n</code></pre>\n<p>See connection.rename_index …\n",null,0],["rename_key","ActiveSupport::XmlMini","rails/classes/ActiveSupport/XmlMini.html#method-i-rename_key","(key, options = {})","",null,0],["rename_table","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre><code>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)\n</code></pre>\n",null,0],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table. Also renames a table’s primary key sequence if the sequence name exists and matches …\n",null,0],["rename_table","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre><code>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)\n</code></pre>\n",null,0],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n\n<pre><code>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)\n</code></pre>\n",null,0],["render","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-render","(*args, &block)","<p>Normalizes arguments and options, and then delegates to render_to_body and sticks the result in <code>self.response_body</code> …\n",null,0],["render","ActionController::Instrumentation","rails/classes/ActionController/Instrumentation.html#method-i-render","(*)","",null,0],["render","ActionController::Renderer","rails/classes/ActionController/Renderer.html#method-i-render","(*args)","<p>Renders a template to a string, just like ActionController::Rendering#render_to_string.\n",null,0],["render","ActionController::Rendering","rails/classes/ActionController/Rendering.html#method-i-render","(*args)","<p>Renders a template and assigns the result to <code>self.response_body</code>.\n<p>If no rendering mode option is specified, …\n",null,0],["render","ActionView::Helpers::RenderingHelper","rails/classes/ActionView/Helpers/RenderingHelper.html#method-i-render","(options = {}, locals = {}, &block)","<p>Returns the result of a render that’s dictated by the options hash. The primary options are:\n<p><code>:partial</code> …\n",null,0],["render","ActionView::Helpers::Tags::ActionText","rails/classes/ActionView/Helpers/Tags/ActionText.html#method-i-render","()","",null,0],["render","ActionView::PartialRenderer","rails/classes/ActionView/PartialRenderer.html#method-i-render","(partial, context, block)","",null,0],["render","ActionView::Renderer","rails/classes/ActionView/Renderer.html#method-i-render","(context, options)","<p>Main render entry point shared by Action View and Action Controller.\n",null,0],["render","ActionView::Template","rails/classes/ActionView/Template.html#method-i-render","(view, locals, buffer = ActionView::OutputBuffer.new, add_to_stack: true, &block)","<p>Render a template. If the template was not compiled yet, it is done exactly before rendering.\n<p>This method …\n",null,0],["render_action_text_attachments","ActionText::ContentHelper","rails/classes/ActionText/ContentHelper.html#method-i-render_action_text_attachments","(content)","",null,0],["render_action_text_content","ActionText::ContentHelper","rails/classes/ActionText/ContentHelper.html#method-i-render_action_text_content","(content)","",null,0],["render_attachment_galleries","ActionText::Content","rails/classes/ActionText/Content.html#method-i-render_attachment_galleries","(&block)","",null,0],["render_attachments","ActionText::Content","rails/classes/ActionText/Content.html#method-i-render_attachments","(**options, &block)","",null,0],["render_body","ActionView::Renderer","rails/classes/ActionView/Renderer.html#method-i-render_body","(context, options)","<p>Render but returns a valid Rack body. If fibers are defined, we return a streaming body that renders …\n",null,0],["render_collection","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-render_collection","(event)","",null,0],["render_count","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-render_count","(payload)","",null,0],["render_frame","IRB::RubyModel","ruby/classes/IRB/RubyModel.html#method-i-render_frame","(i)","",null,1],["render_layout","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-render_layout","(event)","",null,0],["render_partial","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-render_partial","(event)","",null,0],["render_template","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-render_template","(event)","",null,0],["render_to_body","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-render_to_body","(options = {})","<p>Performs the actual template rendering.\n",null,0],["render_to_body","ActionController::ApiRendering","rails/classes/ActionController/ApiRendering.html#method-i-render_to_body","(options = {})","",null,0],["render_to_body","ActionController::Renderers","rails/classes/ActionController/Renderers.html#method-i-render_to_body","(options)","<p>Called by <code>render</code> in AbstractController::Rendering which sets the return value as the <code>response_body</code>.\n<p>If …\n",null,0],["render_to_body","ActionView::Rendering","rails/classes/ActionView/Rendering.html#method-i-render_to_body","(options = {})","",null,0],["render_to_string","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-render_to_string","(*args, &block)","<p>Similar to #render, but only returns the rendered template as a string, instead of setting <code>self.response_body</code> …\n",null,0],["render_to_string","ActionController::Renderer","rails/classes/ActionController/Renderer.html#method-i-render_to_string","(*args)","",null,0],["render_to_string","ActionController::Rendering","rails/classes/ActionController/Rendering.html#method-i-render_to_string","(*)","<p>Similar to #render, but only returns the rendered template as a string, instead of setting <code>self.response_body</code> …\n",null,0],["rendered_format","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-rendered_format","()","<p>Returns <code>Content-Type</code> of rendered content.\n",null,0],["renew","Rinda::SimpleRenewer","ruby/classes/Rinda/SimpleRenewer.html#method-i-renew","()","<p>Called by the TupleSpace to check if the object is still alive.\n",null,1],["renew","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-renew","(sec_or_renewer)","<p>Reset the expiry time according to <code>sec_or_renewer</code>.\n<p><code>nil</code> &mdash; it is set to expire in the far future.\n<p><code>true</code> &mdash; it has …\n",null,1],["reopen","IO","ruby/classes/IO.html#method-i-reopen","(p1, p2 = v2, p3 = {})","<p>Reassociates the stream with another stream, which may be of a different class. This method may be used …\n",null,1],["reopen","Logger","ruby/classes/Logger.html#method-i-reopen","(logdev = nil)","<p>Sets the logger’s output stream:\n<p>If <code>logdev</code> is <code>nil</code>, reopens the current output stream.\n<p>If <code>logdev</code> is …\n",null,1],["reopen","Logger::LogDevice","ruby/classes/Logger/LogDevice.html#method-i-reopen","(log = nil)","",null,1],["reopen","StringIO","ruby/classes/StringIO.html#method-i-reopen","(*args)","<p>Reinitializes the stream with the given <code>other</code> (string or StringIO) and <code>mode</code>; see IO.new:\n\n<pre><code>StringIO.open(&#39;foo&#39;) ...\n</code></pre>\n",null,1],["reopen","Syslog","ruby/classes/Syslog.html#method-c-reopen","(*args)","<p>Closes and then reopens the syslog.\n<p>Arguments are the same as for open().\n",null,1],["reorder","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-reorder","(*args)","<p>Replaces any existing order defined on the relation with the specified order.\n\n<pre><code>User.order(&#39;email DESC&#39;).reorder(&#39;id ...\n</code></pre>\n",null,0],["repeated_combination","Array","ruby/classes/Array.html#method-i-repeated_combination","(p1)","<p>Calls the block with each repeated combination of length <code>n</code> of the elements of <code>self</code>; each combination …\n",null,1],["repeated_permutation","Array","ruby/classes/Array.html#method-i-repeated_permutation","(p1)","<p>Calls the block with each repeated permutation of length <code>n</code> of the elements of <code>self</code>; each permutation …\n",null,1],["replace","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-i-replace","(selector)","",null,0],["replace","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-replace","(other_array)","<p>Replaces this collection with <code>other_array</code>. This will perform a diff and delete/add only records that …\n",null,0],["replace","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-replace","(other_hash)","<p>Replaces the contents of this hash with other_hash.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.replace({ &quot;c&quot; =&gt; ...\n</code></pre>\n",null,0],["replace","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-replace","(other_hash)","<p>Replaces the contents of this hash with other_hash.\n\n<pre><code>h = { &quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200 }\nh.replace({ &quot;c&quot; =&gt; ...\n</code></pre>\n",null,0],["replace","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-replace","(value)","",null,0],["replace","Array","ruby/classes/Array.html#method-i-replace","(p1)","<p>Replaces the content of <code>self</code> with the content of <code>other_array</code>; returns <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.replace([&#39;foo&#39;, ...\n</code></pre>\n",null,1],["replace","ENV","ruby/classes/ENV.html#method-c-replace","(p1)","<p>Replaces the entire content of the environment variables with the name/value pairs in the given <code>hash</code> …\n",null,1],["replace","Fiddle::CStruct","ruby/classes/Fiddle/CStruct.html#method-i-replace","(another)","",null,1],["replace","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-replace","(other)","<p>Replaces this SourceList with the sources in <code>other</code>  See #<< for acceptable items in <code>other</code>.\n",null,1],["replace","Hash","ruby/classes/Hash.html#method-i-replace","(p1)","<p>Replaces the entire contents of <code>self</code> with the contents of <code>other_hash</code>; returns <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: ...\n</code></pre>\n",null,1],["replace","Set","ruby/classes/Set.html#method-i-replace","(enum)","<p>Replaces the contents of the set with the contents of the given\nenumerable object and returns self.\n\n<pre><code>set ...\n</code></pre>\n",null,1],["replace","String","ruby/classes/String.html#method-i-replace","(p1)","<p>Replaces the contents of <code>self</code> with the contents of <code>other_string</code>:\n\n<pre><code>s = &#39;foo&#39;        # =&gt; &quot;foo&quot;\ns.replace(&#39;bar&#39;) ...\n</code></pre>\n",null,1],["replace","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-replace","( hsh )","<p>Replaces the contents of the database with the contents of the specified object. Takes any object which …\n",null,1],["replacement","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-replacement","()","<p>Returns the replacement string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;euc-jp&quot;, &quot;us-ascii&quot;)\np ec.replacement   ...\n</code></pre>\n",null,1],["replacement=","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-replacement-3D","(p1)","<p>Sets the replacement string.\n\n<pre><code>ec = Encoding::Converter.new(&quot;utf-8&quot;, &quot;us-ascii&quot;, :undef =&gt; :replace)\nec.replacement ...\n</code></pre>\n",null,1],["replay","ActiveRecord::Migration::CommandRecorder","rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-replay","(migration)","",null,0],["replica?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-replica-3F","()","",null,0],["replica?","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-replica-3F","()","<p>Determines whether a database configuration is for a replica / readonly connection. If the <code>replica</code> key …\n",null,0],["reply","Socket::UDPSource","ruby/classes/Socket/UDPSource.html#method-i-reply","(msg)","<p>Sends the String <code>msg</code> to the source\n",null,1],["reply_service","Rinda::RingServer","ruby/classes/Rinda/RingServer.html#method-i-reply_service","()","<p>Creates a thread that notifies waiting clients from the TupleSpace.\n",null,1],["report","ActiveSupport::ErrorReporter","rails/classes/ActiveSupport/ErrorReporter.html#method-i-report","(error, handled:, severity: handled ? :warning : :error, context: {})","<p>When the block based <code>handle</code> and <code>record</code> methods are not suitable, you can directly use <code>report</code>\n\n<pre><code>Rails.error.report(error, ...\n</code></pre>\n",null,0],["report","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-report","(*args)","<p>Writes the GC::Profiler.result to <code>$stdout</code> or the given IO object.\n",null,1],["report","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-report","()","<p>Returns a report on which items are not documented\n",null,1],["report_attributes","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-report_attributes","(cm)","<p>Returns a report on undocumented attributes in ClassModule <code>cm</code>\n",null,1],["report_class_module","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-report_class_module","(cm)","<p>Returns a report on undocumented items in ClassModule <code>cm</code>\n",null,1],["report_constants","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-report_constants","(cm)","<p>Returns a report on undocumented constants in ClassModule <code>cm</code>\n",null,1],["report_methods","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-report_methods","(cm)","<p>Returns a report on undocumented methods in ClassModule <code>cm</code>\n",null,1],["report_on_exception","Thread","ruby/classes/Thread.html#method-c-report_on_exception","()","<p>Returns the status of the global “report on exception” condition.\n<p>The default is <code>true</code> since …\n",null,1],["report_on_exception","Thread","ruby/classes/Thread.html#method-i-report_on_exception","()","<p>Returns the status of the thread-local “report on exception” condition for this <code>thr</code>.\n<p>The default …\n",null,1],["report_on_exception=","Thread","ruby/classes/Thread.html#method-i-report_on_exception-3D","(p1)","<p>When set to <code>true</code>, a message is printed on $stderr if an exception kills this <code>thr</code>.  See ::report_on_exception …\n",null,1],["report_on_exception=","Thread","ruby/classes/Thread.html#method-c-report_on_exception-3D","(p1)","<p>Returns the new state. When set to <code>true</code>, all threads created afterwards will inherit the condition and …\n",null,1],["report_uri","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-report_uri","(uri)","<p>Enable the report-uri directive. Violation reports will be sent to the specified URI:\n\n<pre><code>policy.report_uri ...\n</code></pre>\n",null,0],["reporting_issues","","ruby/files/ruby/doc/contributing/reporting_issues_md.html","","<p>Reporting Issues\n<p>Reporting security issues\n<p>If you’ve found a security vulnerability, please follow …\n",null,1],["represent_map","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-represent_map","(tag, map)","<p>Emit a sequence with <code>map</code> and <code>tag</code>\n",null,1],["represent_object","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-represent_object","(tag, obj)","<p>Emit an arbitrary object <code>obj</code> and <code>tag</code>\n",null,1],["represent_scalar","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-represent_scalar","(tag, value)","<p>Emit a scalar with <code>value</code> and <code>tag</code>\n",null,1],["represent_seq","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-represent_seq","(tag, list)","<p>Emit a sequence with <code>list</code> and <code>tag</code>\n",null,1],["representable?","ActiveStorage::Blob::Representable","rails/classes/ActiveStorage/Blob/Representable.html#method-i-representable-3F","()","<p>Returns true if the blob is variable or previewable.\n",null,0],["representation","ActiveStorage::Blob::Representable","rails/classes/ActiveStorage/Blob/Representable.html#method-i-representation","(transformations)","<p>Returns an ActiveStorage::Preview for a previewable blob or an ActiveStorage::Variant for a variable …\n",null,0],["request","ActionCable::Connection::Base","rails/classes/ActionCable/Connection/Base.html#method-i-request","()","<p>The request that initiated the WebSocket connection is available here. This gives access to the environment, …\n",null,0],["request","ActionController::Base","rails/classes/ActionController/Base.html#method-i-request","","<p>Returns an ActionDispatch::Request instance that represents the current request.\n",null,0],["request","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-request","(uri, request_class, last_modified = nil)","<p>Performs a Gem::Net::HTTP request of type <code>request_class</code> on <code>uri</code> returning a Gem::Net::HTTP response object. …\n",null,1],["request","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-request","(req, body = nil)","<p>Sends the given request <code>req</code> to the server; forms the response into a Net::HTTPResponse object.\n<p>The given …\n",null,1],["request_authenticity_tokens","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-request_authenticity_tokens","()","<p>Possible authenticity tokens sent in the request.\n",null,0],["request_body_permitted?","Net::HTTPGenericRequest","ruby/classes/Net/HTTPGenericRequest.html#method-i-request_body_permitted-3F","()","<p>Returns whether the request may have a body:\n\n<pre><code>Net::HTTP::Post.new(uri).request_body_permitted? # =&gt; true ...\n</code></pre>\n",null,1],["request_context","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-request_context","()","<p>Return a String indicating who caused this request to be added (only valid for implicit requests)\n",null,1],["request_get","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-request_get","(path, initheader = nil)","<p>Sends a GET request to the server; forms the response into a Net::HTTPResponse object.\n<p>The request is …\n",null,1],["request_head","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-request_head","(path, initheader = nil, &block)","<p>Sends a HEAD request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-request_http_basic_authentication","(realm = \"Application\", message = nil)","",null,0],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-request_http_digest_authentication","(realm = \"Application\", message = nil)","<p>Render an HTTP header requesting the client to send a Digest for authentication.\n",null,0],["request_http_token_authentication","ActionController::HttpAuthentication::Token::ControllerMethods","rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-request_http_token_authentication","(realm = \"Application\", message = nil)","<p>Render an HTTP header requesting the client to send a Bearer token for authentication.\n",null,0],["request_id","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-request_id","()","<p>Returns the unique request id, which is based on either the <code>X-Request-Id</code> header that can be generated …\n",null,0],["request_method","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-request_method","()","<p>Returns the HTTP method that the application should see. In the case where the method was overridden …\n",null,0],["request_method_symbol","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-request_method_symbol","()","<p>Returns a symbol form of the #request_method.\n",null,0],["request_parameters","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-request_parameters","()","",null,0],["request_parameters=","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-request_parameters-3D","(params)","",null,0],["request_path","Gem::Resolver::Conflict","ruby/classes/Gem/Resolver/Conflict.html#method-i-request_path","(current)","<p>Path of activations from the <code>current</code> list.\n",null,1],["request_post","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-request_post","(path, data, initheader = nil)","<p>Sends a POST request to the server; forms the response into a Net::HTTPResponse object.\n<p>The request is …\n",null,1],["request_uri","URI::HTTP","ruby/classes/URI/HTTP.html#method-i-request_uri","()","<p>Description\n<p>Returns the full path for an HTTP request, as required by Net::HTTP::Get.\n<p>If the URI contains …\n",null,1],["request_uri","URI::WS","ruby/classes/URI/WS.html#method-i-request_uri","()","<p>Description\n<p>Returns the full path for a WS URI, as required by Net::HTTP::Get.\n<p>If the URI contains a query, …\n",null,1],["requester","Gem::Resolver::Conflict","ruby/classes/Gem/Resolver/Conflict.html#method-i-requester","()","<p>Return the Specification that listed the dependency\n",null,1],["require","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-require","(key)","<p>This method accepts both a single key and an array of keys.\n<p>When passed a single key, if it exists and …\n",null,0],["require","Bundler","ruby/classes/Bundler.html#method-c-require","(*groups)","<p>Setups Bundler environment (see Bundler.setup) if it is not already set, and loads all gems from groups …\n",null,1],["require","Kernel","ruby/classes/Kernel.html#method-i-require","(path)","<p>When RubyGems is required, Kernel#require is replaced with our own which is capable of loading gems on …\n",null,1],["require_application!","Rails::Command::Actions","rails/classes/Rails/Command/Actions.html#method-i-require_application-21","()","",null,0],["require_application_and_environment!","Rails::Command::Actions","rails/classes/Rails/Command/Actions.html#method-i-require_application_and_environment-21","()","",null,0],["require_dependency","ActiveSupport::Dependencies::RequireDependency","rails/classes/ActiveSupport/Dependencies/RequireDependency.html#method-i-require_dependency","(filename)","<p><strong>Warning:</strong> This method is obsolete. The semantics of the autoloader match Ruby’s and you do not need …\n",null,0],["require_engine","ActionView::Template::Handlers::Builder","rails/classes/ActionView/Template/Handlers/Builder.html#method-i-require_engine","()","",null,0],["require_environment!","Rails::Command::Actions","rails/classes/Rails/Command/Actions.html#method-i-require_environment-21","()","",null,0],["require_io_console","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-require_io_console","()","",null,1],["require_path","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-require_path","()","<p>Singular accessor for #require_paths\n",null,1],["require_path=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-require_path-3D","(path)","<p>Singular accessor for #require_paths\n",null,1],["require_paths","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-require_paths","()","<p>Paths in the gem to add to <code>$LOAD_PATH</code> when this gem is activated.\n<p>See also #require_paths=\n<p>If you have …\n",null,1],["require_paths=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-require_paths-3D","(val)","<p>Paths in the gem to add to <code>$LOAD_PATH</code> when this gem is activated. If you have an extension you do not …\n",null,1],["require_relative","Kernel","ruby/classes/Kernel.html#method-i-require_relative","(p1)","<p>Ruby tries to load the library named <em>string</em> relative to the directory containing the requiring file. …\n",null,1],["require_sri_for","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-require_sri_for","(*types)","<p>Specify asset types for which Subresource Integrity is required:\n\n<pre><code>policy.require_sri_for :script, :style\n</code></pre>\n",null,0],["require_unload_lock!","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-i-require_unload_lock-21","()","<p>Acquire the ActiveSupport::Dependencies::Interlock unload lock, ensuring it will be released automatically …\n",null,0],["requireables","DidYouMean::RequirePathChecker","ruby/classes/DidYouMean/RequirePathChecker.html#method-c-requireables","()","",null,1],["required","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-required","(key)","",null,0],["required_attribute?","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-required_attribute-3F","(name)","<p>Is <code>name</code> a required attribute?\n",null,1],["required_attributes","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-required_attributes","()","<p>Required specification attributes\n",null,1],["required_ruby_version","Gem::Resolver::IndexSpecification","ruby/classes/Gem/Resolver/IndexSpecification.html#method-i-required_ruby_version","()","<p>The required_ruby_version constraint for this specification\n<p>A fallback is included because when generated, …\n",null,1],["required_ruby_version","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-required_ruby_version","()","<p>The required_ruby_version constraint for this specification\n",null,1],["required_ruby_version=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-required_ruby_version-3D","(req)","<p>The version of Ruby required by this gem.  The ruby version can be specified to the patch-level:\n\n<pre><code>$ ruby ...\n</code></pre>\n",null,1],["required_rubygems_version","Gem::Resolver::IndexSpecification","ruby/classes/Gem/Resolver/IndexSpecification.html#method-i-required_rubygems_version","()","<p>The required_rubygems_version constraint for this specification\n<p>A fallback is included because the original …\n",null,1],["required_rubygems_version","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-required_rubygems_version","()","<p>The required_rubygems_version constraint for this specification\n",null,1],["required_rubygems_version=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-required_rubygems_version-3D","(req)","<p>The RubyGems version required by this gem\n",null,1],["requirement","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-requirement","()","<p>What does this dependency require?\n",null,1],["requirement","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-requirement","()","<p>The version requirement for this dependency request\n",null,1],["requirement!","Gem::Resolver::Stats","ruby/classes/Gem/Resolver/Stats.html#method-i-requirement-21","()","",null,1],["requirement_satisfied_by?","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-requirement_satisfied_by-3F","(requirement, activated, spec)","",null,1],["requirements","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-requirements","()","<p>Lists the external (to RubyGems) requirements that must be met for this gem to work.  It’s simply …\n",null,1],["requirements=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-requirements-3D","(req)","<p>Set requirements to <code>req</code>, ensuring it is an array.\n",null,1],["requirements_list","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-requirements_list","()","",null,1],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-requires_reloading-3F","()","<p>Returns true if its required to reload the connection between requests for development mode.\n",null,0],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-requires_reloading-3F","()","",null,0],["rerdoc_task_description","RDoc::Task","ruby/classes/RDoc/Task.html#method-i-rerdoc_task_description","()","<p>Task description for the rerdoc task or its renamed description\n",null,1],["rerender","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-rerender","()","",null,1],["rerender_all","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-rerender_all","()","",null,1],["rescue_from","ActiveSupport::Rescuable::ClassMethods","rails/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from","(*klasses, with: nil, &block)","<p>Registers exception classes with a handler to be called by <code>rescue_with_handler</code>.\n<p><code>rescue_from</code> receives a …\n",null,0],["rescue_response?","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-rescue_response-3F","()","",null,0],["rescue_template","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-rescue_template","()","",null,0],["rescue_with_handler","ActiveSupport::Rescuable","rails/classes/ActiveSupport/Rescuable.html#method-i-rescue_with_handler","(exception)","<p>Delegates to the class method, but uses the instance as the subject for rescue_from handlers (method …\n",null,0],["rescue_with_handler","ActiveSupport::Rescuable::ClassMethods","rails/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_with_handler","(exception, object: self, visited_exceptions: [])","<p>Matches an exception to a handler based on the exception class.\n<p>If no handler matches the exception, check …\n",null,0],["reselect","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-reselect","(*args)","<p>Allows you to change a previously set select statement.\n\n<pre><code>Post.select(:title, :body)\n# SELECT `posts`.`title`, ...\n</code></pre>\n",null,0],["reset","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-reset","()","<p>Unloads the association. Returns <code>self</code>.\n\n<pre><code>class Person &lt; ActiveRecord::Base\n  has_many :pets\nend\n\nperson.pets ...\n</code></pre>\n",null,0],["reset","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-reset","()","",null,0],["reset","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-i-reset","()","<p>Reset all attributes. Should be called before and after actions, when used as a per-request singleton. …\n",null,0],["reset","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-reset","(value = nil, name = nil)","<p>Generate a reset button Input element, as a String.\n<p>This resets the values on a form to their initial …\n",null,1],["reset","Digest::Base","ruby/classes/Digest/Base.html#method-i-reset","()","<p>Reset the digest to its initial state and return <code>self</code>.\n",null,1],["reset","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-reset","()","<p>Resets the digest to the initial state and returns self.\n<p>This method is overridden by each implementation …\n",null,1],["reset","Digest::SHA2","ruby/classes/Digest/SHA2.html#method-i-reset","()","<p>Reset the digest to the initial state and return self.\n",null,1],["reset","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-c-reset","()","<p>Reset the authoritative instance of the command manager.\n",null,1],["reset","Gem::Request","ruby/classes/Gem/Request.html#method-i-reset","(connection)","<p>Resets HTTP connection <code>connection</code>.\n",null,1],["reset","Gem::Security","ruby/classes/Gem/Security.html#method-c-reset","()","<p>Resets the trust directory for verifying gems.\n",null,1],["reset","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-reset","()","<p>Reset the list of known specs, running pre and post reset hooks registered in Gem.\n",null,1],["reset","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-reset","()","<p>Fully resets the internal state of the Cipher. By using this, the same Cipher instance may be used several …\n",null,1],["reset","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-i-reset","()","<p>Resets the Digest in the sense that any Digest#update that has been performed is abandoned and the Digest …\n",null,1],["reset","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-reset","()","<p>Returns <em>hmac</em> as it was when it was first initialized, with all processed data cleared from it.\n<p>Example …\n",null,1],["reset","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-reset","()","<p>Resets the tools\n",null,1],["reset","Reline::Config","ruby/classes/Reline/Config.html#method-i-reset","()","",null,1],["reset","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-reset","(encoding: nil)","",null,1],["reset","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-reset","(prompt = '', encoding:)","",null,1],["reset","Set","ruby/classes/Set.html#method-i-reset","()","<p>Resets the internal state after modification to existing elements\nand returns self.\n<p>Elements will be reindexed …\n",null,1],["reset","StringScanner","ruby/classes/StringScanner.html#method-i-reset","()","<p>Reset the scan pointer (index 0) and clear matching data.\n",null,1],["reset","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-reset","()","<p>Resets and initializes the stream. All data in both input and output buffer are discarded.\n",null,1],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reset-21","()","<p>Reset the state of this connection, directing the DBMS to clear transactions and other connection-related …\n",null,0],["reset!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reset-21","()","",null,0],["reset!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reset-21","()","",null,0],["reset!","Bundler","ruby/classes/Bundler.html#method-c-reset-21","()","",null,1],["reset_body!","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-reset_body-21","()","",null,0],["reset_cache","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-c-reset_cache","()","",null,0],["reset_callbacks","ActiveSupport::Callbacks::ClassMethods","rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-reset_callbacks","(name)","<p>Remove all set callbacks for the given event.\n",null,0],["reset_column_information","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-reset_column_information","()","<p>Resets all the cached information about columns, which will cause them to be reloaded on the next request. …\n",null,0],["reset_counters","ActiveRecord::CounterCache::ClassMethods","rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-reset_counters","(id, *counters, touch: nil)","<p>Resets one or more counter caches to their correct value using an SQL count query. This is useful when …\n",null,0],["reset_cycle","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-reset_cycle","(name = \"default\")","<p>Resets a cycle so that it starts from the first element the next time it is called. Pass in <code>name</code> to reset …\n",null,0],["reset_default_key_bindings","Reline::Config","ruby/classes/Reline/Config.html#method-i-reset_default_key_bindings","()","",null,1],["reset_default_key_bindings","Reline::KeyActor::Base","ruby/classes/Reline/KeyActor/Base.html#method-i-reset_default_key_bindings","()","",null,1],["reset_line","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-reset_line","()","",null,1],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-reset_locking_column","()","<p>Reset the column used for optimistic locking back to the <code>lock_version</code> default.\n",null,0],["reset_nil_attributes_to_default","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-reset_nil_attributes_to_default","()","<p>Reset nil attributes to their default values to make the spec valid\n",null,1],["reset_oneshot_key_bindings","Reline::Config","ruby/classes/Reline/Config.html#method-i-reset_oneshot_key_bindings","()","",null,1],["reset_paths!","Bundler","ruby/classes/Bundler.html#method-c-reset_paths-21","()","",null,1],["reset_rubygems!","Bundler","ruby/classes/Bundler.html#method-c-reset_rubygems-21","()","",null,1],["reset_runtime","ActiveRecord::LogSubscriber","rails/classes/ActiveRecord/LogSubscriber.html#method-c-reset_runtime","()","",null,0],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-reset_sequence-21","(table, column, sequence = nil)","<p>Set the sequence to the max value of the table’s column.\n",null,0],["reset_session","ActionController::Metal","rails/classes/ActionController/Metal.html#method-i-reset_session","()","",null,0],["reset_session","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-reset_session","()","",null,0],["reset_settings_and_root!","Bundler","ruby/classes/Bundler.html#method-c-reset_settings_and_root-21","()","",null,1],["reset_stats!","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-reset_stats-21","()","<p>Discard statistics collected for <code>--yjit-stats</code>.\n",null,1],["reset_to_initial_configs","Reline::Face","ruby/classes/Reline/Face.html#method-c-reset_to_initial_configs","()","",null,1],["reset_variables","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-reset_variables","(prompt = '', encoding:)","",null,1],["resets","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-c-resets","(&block)","<p>Calls this block after #reset is called on the instance. Used for resetting external collaborators, like …\n",null,0],["resize","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-resize","(p1)","<p>Resizes a buffer to a <code>new_size</code> bytes, preserving its content. Depending on the old and new size, the …\n",null,1],["resize","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-resize","()","",null,1],["resolve","ActionDispatch::RailsEntityStore","rails/classes/ActionDispatch/RailsEntityStore.html#method-c-resolve","(uri)","",null,0],["resolve","ActionDispatch::RailsMetaStore","rails/classes/ActionDispatch/RailsMetaStore.html#method-c-resolve","(uri)","",null,0],["resolve","ActionDispatch::Routing::Mapper::CustomUrls","rails/classes/ActionDispatch/Routing/Mapper/CustomUrls.html#method-i-resolve","(*args, &block)","<p>Define custom polymorphic mappings of models to URLs. This alters the behavior of <code>polymorphic_url</code> and …\n",null,0],["resolve","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-resolve","(set = Gem::Resolver::BestSet.new)","<p>Resolve the requested dependencies and return an Array of Specification objects to be activated.\n",null,1],["resolve","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-resolve","()","<p>Proceed with resolution! Returns an array of ActivationRequest objects.\n",null,1],["resolve","RDoc::CrossReference","ruby/classes/RDoc/CrossReference.html#method-i-resolve","(name, text)","<p>Returns a reference to <code>name</code>.\n<p>If the reference is found and <code>name</code> is not documented <code>text</code> will be returned. …\n",null,1],["resolve_aliases","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-resolve_aliases","(added)","<p>Tries to resolve unmatched aliases when a method or attribute has just been added.\n",null,1],["resolve_current","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-resolve_current","()","<p>Resolve the requested dependencies against the gems available via Gem.path and return an Array of Specification …\n",null,1],["resolve_method","RDoc::CrossReference","ruby/classes/RDoc/CrossReference.html#method-i-resolve_method","(name)","<p>Returns a method reference to <code>name</code>.\n",null,1],["resource","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resource","(*resources, &block)","<p>Sometimes, you have a resource that clients always look up without referencing an ID. A common example, …\n",null,0],["resources","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources","(*resources, &block)","<p>In Rails, a resourceful route provides a mapping between HTTP verbs and URLs and controller actions. …\n",null,0],["resources_path_names","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources_path_names","(options)","",null,0],["respond_to","ActionController::MimeResponds","rails/classes/ActionController/MimeResponds.html#method-i-respond_to","(*mimes)","<p>Without web-service support, an action which collects the data for displaying a list of people might …\n",null,0],["respond_to?","ActionDispatch::Response::RackBody","rails/classes/ActionDispatch/Response/RackBody.html#method-i-respond_to-3F","(method, include_private = false)","",null,0],["respond_to?","ActiveModel::AttributeMethods","rails/classes/ActiveModel/AttributeMethods.html#method-i-respond_to-3F","(method, include_private_methods = false)","",null,0],["respond_to?","ActiveRecord::AttributeMethods","rails/classes/ActiveRecord/AttributeMethods.html#method-i-respond_to-3F","(name, include_private = false)","<p>A Person object with a name attribute can ask <code>person.respond_to?(:name)</code>, <code>person.respond_to?(:name=)</code>, …\n",null,0],["respond_to?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-respond_to-3F","(sym, include_priv = false)","<p>respond_to_missing? is not called in some cases, such as when type conversion is performed with Kernel#String …\n",null,0],["respond_to?","Rails::Railtie::Configurable::ClassMethods","rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-respond_to-3F","(*args)","",null,0],["respond_to?","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-respond_to-3F","(name, include_private = false)","",null,0],["respond_to?","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-respond_to-3F","(msg_id, priv=false)","<p>Routes respond_to? to the referenced remote object.\n",null,1],["respond_to?","DRb::DRbObject","ruby/classes/DRb/DRbObject.html#method-i-respond_to-3F","(msg_id, priv=false)","<p>Routes respond_to? to the referenced remote object.\n",null,1],["respond_to?","Object","ruby/classes/Object.html#method-i-respond_to-3F","(p1, p2 = v2)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method.  Private and protected methods are included in the …\n",null,1],["respond_to_missing?","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-respond_to_missing-3F","(method, include_private)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method. Private methods are included in the search only if …\n",null,0],["respond_to_missing?","ActiveSupport::OrderedOptions","rails/classes/ActiveSupport/OrderedOptions.html#method-i-respond_to_missing-3F","(name, include_private)","",null,0],["respond_to_missing?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-respond_to_missing-3F","(sym, include_priv)","<p>Ensure proxy class responds to all methods that underlying time instance responds to.\n",null,0],["respond_to_missing?","Delegator","ruby/classes/Delegator.html#method-i-respond_to_missing-3F","(m, include_private)","<p>Checks for a method provided by this the delegate object by forwarding the call through _<em>getobj</em>_.\n",null,1],["respond_to_missing?","Gem::Uri","ruby/classes/Gem/Uri.html#method-i-respond_to_missing-3F","(method_name, include_private = false)","",null,1],["respond_to_missing?","Object","ruby/classes/Object.html#method-i-respond_to_missing-3F","(p1, p2)","<p>DO NOT USE THIS DIRECTLY.\n<p>Hook method to return whether the <em>obj</em> can respond to <em>id</em> method or not.\n<p>When the …\n",null,1],["respond_to_without_attributes?","ActiveModel::AttributeMethods","rails/classes/ActiveModel/AttributeMethods.html#method-i-respond_to_without_attributes-3F","(method, include_private_methods = false)","<p>A <code>Person</code> instance with a <code>name</code> attribute can ask <code>person.respond_to?(:name)</code>, <code>person.respond_to?(:name=)</code> …\n",null,0],["response","ActionController::Base","rails/classes/ActionController/Base.html#method-i-response","","<p>Returns an ActionDispatch::Response that represents the current response.\n",null,0],["response","ActionController::MimeResponds::Collector","rails/classes/ActionController/MimeResponds/Collector.html#method-i-response","()","",null,0],["response_body","AbstractController::Base","rails/classes/AbstractController/Base.html#method-i-response_body","","<p>Returns the body of the HTTP response sent by the controller.\n",null,0],["response_body=","ActionController::Live","rails/classes/ActionController/Live.html#method-i-response_body-3D","(body)","",null,0],["response_body=","ActionController::Metal","rails/classes/ActionController/Metal.html#method-i-response_body-3D","(body)","",null,0],["response_body_encoding=","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-response_body_encoding-3D","(value)","<p>Sets the encoding to be used for the response body; returns the encoding.\n<p>The given <code>value</code> may be:\n<p>An Encoding …\n",null,1],["response_body_permitted?","Net::HTTPGenericRequest","ruby/classes/Net/HTTPGenericRequest.html#method-i-response_body_permitted-3F","()","<p>Returns whether the response may have a body:\n\n<pre><code>Net::HTTP::Post.new(uri).response_body_permitted? # =&gt; true ...\n</code></pre>\n",null,1],["response_code","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-response_code","()","<p>The response code of the request.\n",null,0],["responses","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-responses","()","<p>Returns an Array of SingleResponse for this BasicResponse.\n",null,1],["rest","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-rest","()","",null,1],["rest","StringScanner","ruby/classes/StringScanner.html#method-i-rest","()","<p>Returns the “rest” of the string (i.e. everything after the scan pointer). If there is no more …\n",null,1],["rest?","StringScanner","ruby/classes/StringScanner.html#method-i-rest-3F","()","<p>Returns true if and only if there is more data in the string.  See #eos?. This method is obsolete; use …\n",null,1],["rest_size","StringScanner","ruby/classes/StringScanner.html#method-i-rest_size","()","<p><code>s.rest_size</code> is equivalent to <code>s.rest.size</code>.\n",null,1],["restart","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-restart","()","",null,0],["restart.rake","","rails/files/rails/railties/lib/rails/tasks/restart_rake.html","","<p># frozen_string_literal: true\n<p>desc “Restart app by touching tmp/restart.txt” task :restart do …\n",null,0],["restore","CGI::Session::FileStore","ruby/classes/CGI/Session/FileStore.html#method-i-restore","()","<p>Restore session state from the session’s FileStore file.\n<p>Returns the session state as a hash.\n",null,1],["restore","CGI::Session::MemoryStore","ruby/classes/CGI/Session/MemoryStore.html#method-i-restore","()","<p>Restore session state.\n<p>Returns session data as a hash.\n",null,1],["restore","CGI::Session::NullStore","ruby/classes/CGI/Session/NullStore.html#method-i-restore","()","<p>Restore (empty) session state.\n",null,1],["restore","CGI::Session::PStore","ruby/classes/CGI/Session/PStore.html#method-i-restore","()","<p>Restore session state from the session’s PStore file.\n<p>Returns the session state as a hash.\n",null,1],["restore","JSON","ruby/classes/JSON.html#method-c-restore","(source, proc = nil, options = {})","",null,1],["restore","Marshal","ruby/classes/Marshal.html#method-c-restore","(source, proc = nil, freeze: false)","",null,1],["restore_attributes","ActiveModel::Dirty","rails/classes/ActiveModel/Dirty.html#method-i-restore_attributes","(attr_names = changed)","<p>Restore all previous data of the provided attributes.\n",null,0],["restsize","StringScanner","ruby/classes/StringScanner.html#method-i-restsize","()","<p><code>s.restsize</code> is equivalent to <code>s.rest_size</code>. This method is obsolete; use #rest_size instead.\n",null,1],["result","ActionDispatch::Routing::ConsoleFormatter::Base","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Base.html#method-i-result","()","",null,0],["result","ActionDispatch::Routing::HtmlTableFormatter","rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-result","()","",null,0],["result","Coverage","ruby/classes/Coverage.html#method-c-result","(p1 = v1)","<p>Returns a hash that contains filename as key and coverage array as value. If <code>clear</code> is true, it clears …\n",null,1],["result","ERB","ruby/classes/ERB.html#method-i-result","(b=new_toplevel)","<p>Executes the generated ERB code to produce a completed template, returning the results of that code. …\n",null,1],["result","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-result","()","<p>Returns a profile data report such as:\n\n<pre><code>GC 1 invokes.\nIndex    Invoke Time(sec)       Use Size(byte)   ...\n</code></pre>\n",null,1],["result","StopIteration","ruby/classes/StopIteration.html#method-i-result","()","<p>Returns the return value of the iterator.\n\n<pre><code>o = Object.new\ndef o.each\n  yield 1\n  yield 2\n  yield 3\n  100 ...\n</code></pre>\n",null,1],["result_with_hash","ERB","ruby/classes/ERB.html#method-i-result_with_hash","(hash)","<p>Render a template on a new toplevel binding with local variables specified by a Hash object.\n",null,1],["resume","Coverage","ruby/classes/Coverage.html#method-c-resume","()","<p>Start/resume the coverage measurement.\n<p>Caveat: Currently, only process-global coverage measurement is …\n",null,1],["resume","Fiber","ruby/classes/Fiber.html#method-i-resume","(*args)","<p>Resumes the fiber from the point at which the last Fiber.yield was called, or starts running it if it …\n",null,1],["retrieve_comment_body","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-retrieve_comment_body","(tk)","<p>Retrieve comment body without =begin/=end\n",null,1],["retrieve_completion_block","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-retrieve_completion_block","(set_completion_quote_character = false)","",null,1],["retrieve_completion_block","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-retrieve_completion_block","(set_completion_quote_character = false)","",null,1],["retrieve_completion_data","IRB::InputCompletor","ruby/classes/IRB/InputCompletor.html#method-c-retrieve_completion_data","(input, bind: IRB.conf[:MAIN_CONTEXT].workspace.binding, doc_namespace: false)","",null,1],["retrieve_connection","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-retrieve_connection","()","",null,0],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-retrieve_connection_pool","(owner, role: ActiveRecord::Base.current_role, shard: ActiveRecord::Base.current_shard)","<p>Retrieving the connection pool happens a lot, so we cache it in @owner_to_pool_manager. This makes retrieving …\n",null,0],["retrieve_keybuffer","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-retrieve_keybuffer","()","",null,1],["retrieve_string","Reline::Config","ruby/classes/Reline/Config.html#method-i-retrieve_string","(str)","",null,1],["retry_job","ActiveJob::Exceptions","rails/classes/ActiveJob/Exceptions.html#method-i-retry_job","(options = {})","<p>Reschedules the job to be re-executed. This is useful in combination with rescue_from. When you rescue …\n",null,0],["retry_on","ActiveJob::Exceptions::ClassMethods","rails/classes/ActiveJob/Exceptions/ClassMethods.html#method-i-retry_on","(*exceptions, wait: 3.seconds, attempts: 5, queue: nil, priority: nil, jitter: JITTER_DEFAULT)","<p>Catch the exception and reschedule job for re-execution after so many seconds, for a specific number …\n",null,0],["return_headers?","CSV","ruby/classes/CSV.html#method-i-return_headers-3F","()","<p>Returns the value that determines whether headers are to be returned; used for parsing; see {Option  …\n",null,1],["return_headers?","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-return_headers-3F","()","",null,1],["return_type","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-return_type","()","<p>Returns string of return value type of method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["return_type_detail","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-return_type_detail","()","<p>Returns detail information of return value type of method. The information is array.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["return_value","TracePoint","ruby/classes/TracePoint.html#method-i-return_value","()","<p>Return value from <code>:return</code>, <code>:c_return</code>, and <code>:b_return</code> event\n",null,1],["return_vtype","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-return_vtype","()","<p>Returns number of return value type of method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["retval?","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-retval-3F","()","<p>Returns true if argument is return value.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;DirectX 7 for Visual Basic Type Library&#39;, ...\n</code></pre>\n",null,1],["reverse","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-reverse","()","<p>Reverses all characters in the string.\n\n<pre><code>&#39;Café&#39;.mb_chars.reverse.to_s # =&gt; &#39;éfaC&#39;\n</code></pre>\n",null,0],["reverse","Array","ruby/classes/Array.html#method-i-reverse","()","<p>Returns a new Array with the elements of <code>self</code> in reverse order:\n\n<pre><code>a = [&#39;foo&#39;, &#39;bar&#39;, &#39;two&#39;]\na1 = a.reverse ...\n</code></pre>\n",null,1],["reverse","IPAddr","ruby/classes/IPAddr.html#method-i-reverse","()","<p>Returns a string for DNS reverse lookup.  It returns a string in RFC3172 form for an IPv6 address.\n",null,1],["reverse","String","ruby/classes/String.html#method-i-reverse","()","<p>Returns a new string with the characters from <code>self</code> in reverse order.\n\n<pre><code>&#39;stressed&#39;.reverse # =&gt; &quot;desserts&quot;\n</code></pre>\n",null,1],["reverse!","Array","ruby/classes/Array.html#method-i-reverse-21","()","<p>Reverses <code>self</code> in place:\n\n<pre><code>a = [&#39;foo&#39;, &#39;bar&#39;, &#39;two&#39;]\na.reverse! # =&gt; [&quot;two&quot;, &quot;bar&quot;, &quot;foo&quot;]\n</code></pre>\n",null,1],["reverse!","String","ruby/classes/String.html#method-i-reverse-21","()","<p>Returns <code>self</code> with its characters reversed:\n\n<pre><code>s = &#39;stressed&#39;\ns.reverse! # =&gt; &quot;desserts&quot;\ns          # =&gt; &quot;desserts&quot;\n</code></pre>\n",null,1],["reverse_each","Array","ruby/classes/Array.html#method-i-reverse_each","()","<p>Iterates backwards over array elements.\n<p>When a block given, passes, in reverse order, each element to …\n",null,1],["reverse_each","Enumerable","ruby/classes/Enumerable.html#method-i-reverse_each","(*args)","<p>With a block given, calls the block with each element, but in reverse order; returns <code>self</code>:\n\n<pre><code>a = []\n(1..4).reverse_each ...\n</code></pre>\n",null,1],["reverse_each","Range","ruby/classes/Range.html#method-i-reverse_each","()","<p>With a block given, passes each element of <code>self</code> to the block in reverse order:\n\n<pre><code>a = []\n(1..4).reverse_each ...\n</code></pre>\n",null,1],["reverse_merge","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-reverse_merge","(other_hash)","<p>Returns a new <code>ActionController::Parameters</code> instance with all keys from current hash merged into <code>other_hash</code> …\n",null,0],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Like <code>merge</code> but the other way around: Merges the receiver into the argument and returns a new hash with …\n",null,0],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Like <code>merge</code> but the other way around: Merges the receiver into the argument and returns a new hash with …\n",null,0],["reverse_merge","Hash","rails/classes/Hash.html#method-i-reverse_merge","(other_hash)","<p>Merges the caller into <code>other_hash</code>. For example,\n\n<pre><code>options = options.reverse_merge(size: 25, velocity: 10)\n</code></pre>\n",null,0],["reverse_merge!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-reverse_merge-21","(other_hash)","<p>Returns the current <code>ActionController::Parameters</code> instance with current hash merged into <code>other_hash</code>.\n",null,0],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","<p>Same semantics as <code>reverse_merge</code> but modifies the receiver in-place.\n",null,0],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","<p>Same semantics as <code>reverse_merge</code> but modifies the receiver in-place.\n",null,0],["reverse_merge!","Hash","rails/classes/Hash.html#method-i-reverse_merge-21","(other_hash)","<p>Destructive <code>reverse_merge</code>.\n",null,0],["reverse_order","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-reverse_order","()","<p>Reverse the existing order clause on the relation.\n\n<pre><code>User.order(&#39;name ASC&#39;).reverse_order # generated SQL ...\n</code></pre>\n",null,0],["reverse_search_history","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-reverse_search_history","(key)","",null,1],["reverse_update","Hash","rails/classes/Hash.html#method-i-reverse_update","(other_hash)","",null,0],["reversible","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-reversible","()","<p>Used to specify an operation that can be run in one direction or another. Call the methods <code>up</code> and <code>down</code> …\n",null,0],["revert","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-revert","(*migration_classes, &block)","<p>Reverses the migration commands for the given block and the given migrations.\n<p>The following migration …\n",null,0],["revert","ActiveRecord::Migration::CommandRecorder","rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-revert","()","<p>While executing the given block, the recorded will be in reverting mode. All commands recorded will end …\n",null,0],["revert_last_commit","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-revert_last_commit","()","<p>Discard changes that have not been committed and revert the last commit\n<p>Cannot revert the first commit …\n",null,1],["reverting?","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-reverting-3F","()","",null,0],["revocation_reason","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-revocation_reason","()","",null,1],["revocation_time","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-revocation_time","()","",null,1],["revoked","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-revoked","()","",null,1],["revoked=","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-revoked-3D","(p1)","",null,1],["rewhere","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-rewhere","(conditions)","<p>Allows you to change a previously set where condition for a given attribute, instead of appending to …\n",null,0],["rewind","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-rewind","()","<p>Shortcut for <code>tempfile.rewind</code>.\n",null,0],["rewind","ARGF","ruby/classes/ARGF.html#method-i-rewind","()","<p>Positions the current file to the beginning of input, resetting ARGF.lineno to zero.\n\n<pre><code>ARGF.readline   #=&gt; ...\n</code></pre>\n",null,1],["rewind","CSV","ruby/classes/CSV.html#method-i-rewind","()","<p>Rewinds the underlying IO object and resets CSV’s lineno() counter.\n",null,1],["rewind","CSV::Writer","ruby/classes/CSV/Writer.html#method-i-rewind","()","<p>Winds back to the beginning\n",null,1],["rewind","Dir","ruby/classes/Dir.html#method-i-rewind","()","<p>Sets the position in <code>self</code> to zero; see Dir As Stream-Like:\n\n<pre><code>dir = Dir.new(&#39;example&#39;)\ndir.read    # =&gt; &quot;.&quot; ...\n</code></pre>\n",null,1],["rewind","Enumerator","ruby/classes/Enumerator.html#method-i-rewind","()","<p>Rewinds the enumeration sequence to the beginning.\n<p>If the enclosed object responds to a “rewind” …\n",null,1],["rewind","Enumerator::Chain","ruby/classes/Enumerator/Chain.html#method-i-rewind","()","<p>Rewinds the enumerator chain by calling the “rewind” method on each enumerable in reverse order. …\n",null,1],["rewind","Enumerator::Product","ruby/classes/Enumerator/Product.html#method-i-rewind","()","<p>Rewinds the product enumerator by calling the “rewind” method on each enumerable in reverse …\n",null,1],["rewind","Gem::Package::TarReader","ruby/classes/Gem/Package/TarReader.html#method-i-rewind","()","<p>NOTE: Do not call #rewind during #each\n",null,1],["rewind","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-rewind","()","<p>Rewinds to the beginning of the tar file entry\n",null,1],["rewind","IO","ruby/classes/IO.html#method-i-rewind","()","<p>Repositions the stream to its beginning, setting both the position and the line number to zero; see  …\n",null,1],["rewind","StringIO","ruby/classes/StringIO.html#method-i-rewind","()","<p>Sets the current position and line number to zero; see Position and Line Number.\n",null,1],["rewind","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-rewind","()","<p>Resets the position of the file pointer to the point created the GzipReader object.  The associated  …\n",null,1],["rewrite_param_values","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-rewrite_param_values","(array_params)","<p>This removes the <code>&quot;</code> characters wrapping the value.\n",null,0],["rfc1123_date","CGI::Util","ruby/classes/CGI/Util.html#method-i-rfc1123_date","(time)","<p>Format a <code>Time</code> object as a String using the format specified by RFC 1123.\n\n<pre><code>CGI.rfc1123_date(Time.now)\n  ...\n</code></pre>\n",null,1],["rfc2822","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-rfc2822","()","<p>Returns a string of the object’s date and time in the RFC 2822 standard format.\n\n<pre><code>Time.zone.now.rfc2822 ...\n</code></pre>\n",null,0],["rfc2822","Date","ruby/classes/Date.html#method-c-rfc2822","(p1 = v1, p2 = v2, p3 = {})","<p>Returns a new Date object with values parsed from <code>string</code>, which should be a valid RFC 2822 date format …\n",null,1],["rfc2822","Date","ruby/classes/Date.html#method-i-rfc2822","()","<p>Equivalent to #strftime with argument <code>&#39;%a, %-d %b %Y %T %z&#39;</code>; see Formats for Dates and Times …\n",null,1],["rfc2822","DateTime","ruby/classes/DateTime.html#method-c-rfc2822","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a new DateTime object by parsing from a string according to some typical RFC 2822 formats.\n\n<pre><code>DateTime.rfc2822(&#39;Sat, ...\n</code></pre>\n",null,1],["rfc2822","Time","ruby/classes/Time.html#method-c-rfc2822","(date)","<p>Parses <code>date</code> as date-time defined by RFC 2822 and converts it to a Time object.  The format is identical …\n",null,1],["rfc2822","Time","ruby/classes/Time.html#method-i-rfc2822","()","<p>Returns a string which represents the time as date-time defined by RFC 2822:\n\n<pre><code>day-of-week, DD month-name ...\n</code></pre>\n",null,1],["rfc3339","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-rfc3339","(fraction_digits = 0)","",null,0],["rfc3339","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-rfc3339","(str)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone of <code>self</code> from an RFC 3339 string. …\n",null,0],["rfc3339","Time","rails/classes/Time.html#method-c-rfc3339","(str)","<p>Creates a <code>Time</code> instance from an RFC 3339 string.\n\n<pre><code>Time.rfc3339(&#39;1999-12-31T14:00:00-10:00&#39;) # =&gt; 2000-01-01 ...\n</code></pre>\n",null,0],["rfc3339","Date","ruby/classes/Date.html#method-c-rfc3339","(p1 = v1, p2 = v2, p3 = {})","<p>Returns a new Date object with values parsed from <code>string</code>, which should be a valid RFC 3339 format:\n\n<pre><code>d = ...\n</code></pre>\n",null,1],["rfc3339","Date","ruby/classes/Date.html#method-i-rfc3339","()","<p>Equivalent to #strftime with argument <code>&#39;%FT%T%:z&#39;</code>; see Formats for Dates and Times:\n\n<pre><code>Date.new(2001, ...\n</code></pre>\n",null,1],["rfc3339","DateTime","ruby/classes/DateTime.html#method-c-rfc3339","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a new DateTime object by parsing from a string according to some typical RFC 3339 formats.\n\n<pre><code>DateTime.rfc3339(&#39;2001-02-03T04:05:06+07:00&#39;) ...\n</code></pre>\n",null,1],["rfc3339","DateTime","ruby/classes/DateTime.html#method-i-rfc3339","(*args)","<p>This method is equivalent to strftime(‘%FT%T%:z’). The optional argument <code>n</code> is the number of digits …\n",null,1],["rfc822","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-rfc822","()","",null,0],["rfc822","Date","ruby/classes/Date.html#method-c-rfc822","(p1 = v1, p2 = v2, p3 = {})","<p>Returns a new Date object with values parsed from <code>string</code>, which should be a valid RFC 2822 date format …\n",null,1],["rfc822","Date","ruby/classes/Date.html#method-i-rfc822","()","<p>Returns a new Date object with values parsed from <code>string</code>, which should be a valid RFC 2822 date format …\n",null,1],["rfc822","DateTime","ruby/classes/DateTime.html#method-c-rfc822","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a new DateTime object by parsing from a string according to some typical RFC 2822 formats.\n\n<pre><code>DateTime.rfc2822(&#39;Sat, ...\n</code></pre>\n",null,1],["rfc822","Time","ruby/classes/Time.html#method-i-rfc822","()","",null,1],["rfc822","Time","ruby/classes/Time.html#method-c-rfc822","(date)","",null,1],["ri_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-ri_dir","()","<p>Returns the full path to this spec’s ri directory.\n",null,1],["ri_installed?","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-ri_installed-3F","()","<p>Is ri data installed?\n",null,1],["ri_installed?","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-ri_installed-3F","()","<p>Is ri data installed?\n",null,1],["ri_paths","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-ri_paths","(&block)","<p>Enumerates the ri paths.  See RDoc::RI::Paths#each\n",null,1],["rich_text_area","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-rich_text_area","(method, options = {})","",null,0],["rich_text_area","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-rich_text_area","(object_name, method, options = {})","<p>Returns a <code>trix-editor</code> tag that instantiates the Trix JavaScript editor as well as a hidden field that …\n",null,0],["rich_text_area_tag","ActionText::TagHelper","rails/classes/ActionText/TagHelper.html#method-i-rich_text_area_tag","(name, value = nil, options = {})","<p>Returns a <code>trix-editor</code> tag that instantiates the Trix JavaScript editor as well as a hidden field that …\n",null,0],["rich_text_association_names","ActionText::Attribute","rails/classes/ActionText/Attribute.html#method-i-rich_text_association_names","()","",null,0],["rid","Process::GID","ruby/classes/Process/GID.html#method-c-rid","()","<p>Returns the (real) group ID for the current process:\n\n<pre><code>Process.gid # =&gt; 1000\n</code></pre>\n",null,1],["rid","Process::UID","ruby/classes/Process/UID.html#method-c-rid","()","<p>Returns the (real) user ID of the current process.\n\n<pre><code>Process.uid # =&gt; 1000\n</code></pre>\n",null,1],["rindex","Array","ruby/classes/Array.html#method-i-rindex","(*args)","<p>Returns the index of the last element for which <code>object == element</code>.\n<p>When argument <code>object</code> is given but no …\n",null,1],["rindex","String","ruby/classes/String.html#method-i-rindex","(p1, p2 = v2)","<p>Returns the Integer index of the <em>last</em> occurrence of the given <code>substring</code>, or <code>nil</code> if none found:\n\n<pre><code>&#39;foo&#39;.rindex(&#39;f&#39;) ...\n</code></pre>\n",null,1],["rjit","","ruby/files/ruby/doc/rjit/rjit_md.html","","<p>RJIT: Ruby JIT\n<p>This document has some tips that might be useful when you work on RJIT.\n<p>Project purpose …\n",null,1],["rjust","String","ruby/classes/String.html#method-i-rjust","(*args)","<p>Returns a right-justified copy of <code>self</code>.\n<p>If integer argument <code>size</code> is greater than the size (in characters) …\n",null,1],["rm","FileUtils","ruby/classes/FileUtils.html#method-c-rm","(list, force: nil, noop: nil, verbose: nil)","<p>Removes entries at the paths in the given <code>list</code> (a single path or an array of paths) returns <code>list</code>, if …\n",null,1],["rm_f","FileUtils","ruby/classes/FileUtils.html#method-c-rm_f","(list, noop: nil, verbose: nil)","<p>Equivalent to:\n\n<pre><code>FileUtils.rm(list, force: true, **kwargs)\n</code></pre>\n<p>Argument <code>list</code> (a single path or an array of paths) …\n",null,1],["rm_r","FileUtils","ruby/classes/FileUtils.html#method-c-rm_r","(list, force: nil, noop: nil, verbose: nil, secure: nil)","<p>Removes entries at the paths in the given <code>list</code> (a single path or an array of paths); returns <code>list</code>, if …\n",null,1],["rm_rf","Bundler","ruby/classes/Bundler.html#method-c-rm_rf","(path)","",null,1],["rm_rf","FileUtils","ruby/classes/FileUtils.html#method-c-rm_rf","(list, noop: nil, verbose: nil, secure: nil)","<p>Equivalent to:\n\n<pre><code>FileUtils.rm_r(list, force: true, **kwargs)\n</code></pre>\n<p>Argument <code>list</code> or its elements should be interpretable …\n",null,1],["rmdir","Dir","ruby/classes/Dir.html#method-c-rmdir","(p1)","<p>Removes the directory at <code>dirpath</code> from the underlying file system:\n\n<pre><code>Dir.rmdir(&#39;foo&#39;) # =&gt; 0\n</code></pre>\n<p>Raises an exception …\n",null,1],["rmdir","FileUtils","ruby/classes/FileUtils.html#method-c-rmdir","(list, parents: nil, noop: nil, verbose: nil)","<p>Removes directories at the paths in the given <code>list</code> (a single path or an array of paths); returns <code>list</code> …\n",null,1],["rmdir","Pathname","ruby/classes/Pathname.html#method-i-rmdir","()","<p>Remove the referenced directory.\n<p>See Dir.rmdir.\n",null,1],["rmtree","FileUtils","ruby/classes/FileUtils.html#method-c-rmtree","(list, noop: nil, verbose: nil, secure: nil)","",null,1],["rmtree","Pathname","ruby/classes/Pathname.html#method-i-rmtree","(noop: nil, verbose: nil, secure: nil)","<p>Recursively deletes a directory, including all directories beneath it.\n<p>See FileUtils.rm_rf\n",null,1],["robots","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/robots_txt.html","","<p># See www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n",null,0],["role","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-role","()","<p>The role (e.g. <code>:writing</code>) for the current connection. In a non-multi role application, <code>:writing</code> is returned. …\n",null,0],["rollback","ActiveRecord::ConnectionAdapters::RealTransaction","rails/classes/ActiveRecord/ConnectionAdapters/RealTransaction.html#method-i-rollback","()","",null,0],["rollback","ActiveRecord::ConnectionAdapters::SavepointTransaction","rails/classes/ActiveRecord/ConnectionAdapters/SavepointTransaction.html#method-i-rollback","()","",null,0],["rollback!","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-rollback-21","()","",null,0],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-rollback_db_transaction","()","<p>Rolls back the transaction (and turns on auto-committing). Must be done if the transaction block raises …\n",null,0],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-rollback_to_savepoint","(name = nil)","",null,0],["rolledback?","ActiveRecord::ConnectionAdapters::TransactionState","rails/classes/ActiveRecord/ConnectionAdapters/TransactionState.html#method-i-rolledback-3F","()","",null,0],["rollup.config.js","","rails/files/rails/activestorage/rollup_config_js.html","","<p>import resolve from “@rollup/plugin-node-resolve” import commonjs from “@rollup/plugin-commonjs” …\n",null,0],["rollup.config.js","","rails/files/rails/actiontext/rollup_config_js.html","","<p>import resolve from “@rollup/plugin-node-resolve” import commonjs from “@rollup/plugin-commonjs” …\n",null,0],["rollup.config.js","","rails/files/rails/actioncable/rollup_config_js.html","","<p>import resolve from “@rollup/plugin-node-resolve” import { terser } from “rollup-plugin-terser” …\n",null,0],["root","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-root","(path, options = {})","<p>You can specify what Rails should route “/” to with the root method:\n\n<pre><code>root to: &#39;pages#main&#39;\n</code></pre>\n<p>For …\n",null,0],["root","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-root","()","",null,0],["root","Rails","rails/classes/Rails.html#method-c-root","()","<p>Returns a Pathname object of the current Rails project, otherwise it returns <code>nil</code> if there is no project: …\n",null,0],["root","Rails::Command","rails/classes/Rails/Command.html#method-c-root","()","<p>Returns the root of the Rails engine or app running the command.\n",null,0],["root","Bundler","ruby/classes/Bundler.html#method-c-root","()","",null,1],["root","Psych::Nodes::Document","ruby/classes/Psych/Nodes/Document.html#method-i-root","()","<p>Returns the root node.  A Document may only have one root node: yaml.org/spec/1.1/#id898031\n",null,1],["root","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-root","(req, res)","<p>Generates the root page on <code>res</code>.  <code>req</code> is ignored.\n",null,1],["root=","Rails::Engine::Configuration","rails/classes/Rails/Engine/Configuration.html#method-i-root-3D","(value)","",null,0],["root?","PStore","ruby/classes/PStore.html#method-i-root-3F","(key)","",null,1],["root?","Pathname","ruby/classes/Pathname.html#method-i-root-3F","()","<p>Predicate method for root directories.  Returns <code>true</code> if the pathname consists of consecutive slashes. …\n",null,1],["root_search","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-root_search","(req, res)","<p>Generates a search index for the root page on <code>res</code>.  <code>req</code> is ignored.\n",null,1],["roots","PStore","ruby/classes/PStore.html#method-i-roots","()","",null,1],["rotate","Array","ruby/classes/Array.html#method-i-rotate","(*args)","<p>Returns a new Array formed from <code>self</code> with elements rotated from one end to the other.\n<p>When no argument …\n",null,1],["rotate!","Array","ruby/classes/Array.html#method-i-rotate-21","(*args)","<p>Rotates <code>self</code> in place by moving elements from one end to the other; returns <code>self</code>.\n<p>When no argument given, …\n",null,1],["round","BigDecimal","ruby/classes/BigDecimal.html#method-i-round","(p1 = v1, p2 = v2)","<p>Round to the nearest integer (by default), returning the result as a BigDecimal if n is specified, or …\n",null,1],["round","Float","ruby/classes/Float.html#method-i-round","(p1 = v1, p2 = {})","<p>Returns <code>self</code> rounded to the nearest value with a precision of <code>ndigits</code> decimal digits.\n<p>When <code>ndigits</code> is …\n",null,1],["round","Integer","ruby/classes/Integer.html#method-i-round","(p1 = v1, p2 = {})","<p>Returns <code>self</code> rounded to the nearest value with a precision of <code>ndigits</code> decimal digits.\n<p>When <code>ndigits</code> is …\n",null,1],["round","Numeric","ruby/classes/Numeric.html#method-i-round","(*args)","<p>Returns <code>self</code> rounded to the nearest value with a precision of <code>digits</code> decimal digits.\n<p>Numeric implements …\n",null,1],["round","Rational","ruby/classes/Rational.html#method-i-round","(*args, p2 = {})","<p>Returns <code>rat</code> rounded to the nearest value with a precision of <code>ndigits</code> decimal digits (default: 0).\n<p>When …\n",null,1],["round","Time","ruby/classes/Time.html#method-i-round","(*args)","<p>Returns a new <code>Time</code> object whose numeric value is that of <code>self</code>, with its seconds value rounded to precision …\n",null,1],["route","ActionMailbox::InboundEmail::Routable","rails/classes/ActionMailbox/InboundEmail/Routable.html#method-i-route","()","<p>Route this <code>InboundEmail</code> using the routing rules declared on the <code>ApplicationMailbox</code>.\n",null,0],["route","ActionMailbox::Router","rails/classes/ActionMailbox/Router.html#method-i-route","(inbound_email)","",null,0],["route","ActionMailbox::Routing","rails/classes/ActionMailbox/Routing.html#method-i-route","(inbound_email)","",null,0],["route","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-route","(routing_code, namespace: nil)","<p>Make an entry in Rails routing file <code>config/routes.rb</code>\n\n<pre><code>route &quot;root &#39;welcome#index&#39;&quot;\nroute &quot;root &#39;admin#index&#39;&quot;, ...\n</code></pre>\n",null,0],["route_for","ActionDispatch::Routing::UrlFor","rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-route_for","(name, *args)","<p>Allows calling direct or regular named route.\n\n<pre><code>resources :buckets\n\ndirect :recordable do |recording|\n  ...\n</code></pre>\n",null,0],["route_from","URI::Generic","ruby/classes/URI/Generic.html#method-i-route_from","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["route_key","ActiveModel::Naming","rails/classes/ActiveModel/Naming.html#method-c-route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for namespaced models regarding whether …\n",null,0],["route_later","ActionMailbox::InboundEmail::Routable","rails/classes/ActionMailbox/InboundEmail/Routable.html#method-i-route_later","()","<p>Enqueue a <code>RoutingJob</code> for this <code>InboundEmail</code>.\n",null,0],["route_to","URI::Generic","ruby/classes/URI/Generic.html#method-i-route_to","(oth)","<p>Args\n<p><code>oth</code> &mdash; URI or String\n\n<p>Description\n",null,1],["route_url","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-route_url","()","",null,0],["routes","Rails::Engine","rails/classes/Rails/Engine.html#method-i-routes","(&block)","<p>Defines the routes for this engine. If a block is given to routes, it is appended to the engine.\n",null,0],["routes.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/routes_rb_tt.html","","<p>Rails.application.routes.draw do\n\n<pre><code># Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html ...\n</code></pre>\n",null,0],["routes.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/rails/routes_rb_tt.html","","<p>Rails.application.routes.draw do\n\n<pre><code>mount &lt;%= camelized_modules %&gt;::Engine =&gt; &quot;/&lt;%= name %&gt;&quot;\n</code></pre>\n<p>end\n",null,0],["routes.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/config/routes_rb_tt.html","","<p>&lt;% if mountable? -%&gt; &lt;%= camelized_modules %&gt;::Engine.routes.draw do &lt;% else -%&gt; Rails.application …\n",null,0],["routing","ActionMailbox::Routing","rails/classes/ActionMailbox/Routing.html#method-i-routing","(routes)","",null,0],["row_sep","CSV","ruby/classes/CSV.html#method-i-row_sep","()","<p>Returns the encoded row separator; used for parsing and writing; see {Option <code>row_sep</code>}:\n\n<pre><code>CSV.new(&#39;&#39;).row_sep ...\n</code></pre>\n",null,1],["row_separator","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-row_separator","()","",null,1],["rpartition","String","ruby/classes/String.html#method-i-rpartition","(p1)","<p>Returns a 3-element array of substrings of <code>self</code>.\n<p>Matches a pattern against <code>self</code>, scanning backwards from …\n",null,1],["rshift!","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-rshift-21","(p1)","",null,1],["rstrip","String","ruby/classes/String.html#method-i-rstrip","()","<p>Returns a copy of the receiver with trailing whitespace removed; see Whitespace in Strings:\n\n<pre><code>whitespace ...\n</code></pre>\n",null,1],["rstrip!","String","ruby/classes/String.html#method-i-rstrip-21","()","<p>Like String#rstrip, except that any modifications are made in <code>self</code>; returns <code>self</code> if any modification …\n",null,1],["ruby","Gem","ruby/classes/Gem.html#method-c-ruby","()","<p>The path to the running Ruby interpreter.\n",null,1],["ruby","Gem::Ext::Builder","ruby/classes/Gem/Ext/Builder.html#method-c-ruby","()","",null,1],["ruby","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-ruby","(version, options = {})","<p>Restricts this gem dependencies file to the given ruby <code>version</code>.\n<p>You may also provide <code>engine:</code> and <code>engine_version:</code> …\n",null,1],["ruby-version.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/ruby-version_tt.html","","<p>&lt;%= ENV || ENV || “#{RUBY_ENGINE}-#{RUBY_ENGINE_VERSION}” %&gt;\n",null,0],["ruby2_keywords","Proc","ruby/classes/Proc.html#method-i-ruby2_keywords","()","<p>Marks the proc as passing keywords through a normal argument splat. This should only be called on procs …\n",null,1],["ruby2_keywords_hash","ActiveJob::Arguments::Hash","rails/classes/ActiveJob/Arguments/Hash.html#method-c-ruby2_keywords_hash","(hash)","",null,0],["ruby2_keywords_hash","Hash","ruby/classes/Hash.html#method-c-ruby2_keywords_hash","(p1)","<p>Duplicates a given hash and adds a ruby2_keywords flag. This method is not for casual use; debugging, …\n",null,1],["ruby2_keywords_hash?","ActiveJob::Arguments::Hash","rails/classes/ActiveJob/Arguments/Hash.html#method-c-ruby2_keywords_hash-3F","(hash)","",null,0],["ruby2_keywords_hash?","Hash","ruby/classes/Hash.html#method-c-ruby2_keywords_hash-3F","(p1)","<p>Checks if a given hash is flagged by Module#ruby2_keywords (or Proc#ruby2_keywords). This method is not …\n",null,1],["ruby_api_version","Gem","ruby/classes/Gem.html#method-c-ruby_api_version","()","<p>Returns a String containing the API compatibility version of Ruby\n",null,1],["ruby_engine","Gem","ruby/classes/Gem.html#method-c-ruby_engine","()","",null,1],["ruby_scope","Bundler","ruby/classes/Bundler.html#method-c-ruby_scope","()","",null,1],["ruby_version","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-ruby_version","()","",null,0],["ruby_version","Gem","ruby/classes/Gem.html#method-c-ruby_version","()","<p>A Gem::Version for the currently running Ruby.\n",null,1],["rubygems_api_key","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-rubygems_api_key","()","<p>Returns the RubyGems.org API key\n",null,1],["rubygems_api_key=","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-rubygems_api_key-3D","(api_key)","<p>Sets the RubyGems.org API key to <code>api_key</code>\n",null,1],["rubygems_api_request","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-rubygems_api_request","(method, path, host = nil, allowed_push_host = nil, scope: nil, credentials: {}, &block)","<p>Creates an RubyGems API to <code>host</code> and <code>path</code> with the given HTTP <code>method</code>.\n<p>If <code>allowed_push_host</code> metadata is …\n",null,1],["rubygems_deprecate","Gem::Deprecate","ruby/classes/Gem/Deprecate.html#method-c-rubygems_deprecate","(name, replacement=:none)","<p>Simple deprecation method that deprecates <code>name</code> by wrapping it up in a dummy method. It warns on each …\n",null,1],["rubygems_deprecate_command","Gem::Deprecate","ruby/classes/Gem/Deprecate.html#method-c-rubygems_deprecate_command","(version = Gem::Deprecate.next_rubygems_major_version)","<p>Deprecation method to deprecate Rubygems commands\n",null,1],["rubygems_target_version","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-i-rubygems_target_version","()","",null,1],["rubygems_version","Gem","ruby/classes/Gem.html#method-c-rubygems_version","()","<p>A Gem::Version for the currently running RubyGems\n",null,1],["run","ActionMailbox::InboundEmail::Incineratable::Incineration","rails/classes/ActionMailbox/InboundEmail/Incineratable/Incineration.html#method-i-run","()","",null,0],["run","ActionView::CacheExpiry::Executor","rails/classes/ActionView/CacheExpiry/Executor.html#method-i-run","()","",null,0],["run","ActiveRecord::ConnectionAdapters::ConnectionPool::Reaper","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool/Reaper.html#method-i-run","()","",null,0],["run","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-run","(*migration_classes)","<p>Runs the given migration classes. Last argument can specify options:\n<p><code>:direction</code> - Default is <code>:up</code>.\n<p><code>:revert</code> …\n",null,0],["run","ActiveRecord::QueryCache","rails/classes/ActiveRecord/QueryCache.html#method-c-run","()","",null,0],["run","Rails::Engine::Updater","rails/classes/Rails/Engine/Updater.html#method-c-run","(action)","",null,0],["run","Rails::Initializable::Initializer","rails/classes/Rails/Initializable/Initializer.html#method-i-run","(*args)","",null,0],["run","ERB","ruby/classes/ERB.html#method-i-run","(b=new_toplevel)","<p>Generate results and print them. (see ERB#result)\n",null,1],["run","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-run","(args, build_args=nil)","<p>Run the command specified by <code>args</code>.\n",null,1],["run","Gem::Ext::Builder","ruby/classes/Gem/Ext/Builder.html#method-c-run","(command, results, command_name = nil, dir = Dir.pwd, env = {})","",null,1],["run","Gem::GemRunner","ruby/classes/Gem/GemRunner.html#method-i-run","(args)","<p>Run the gem command with the following arguments.\n",null,1],["run","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-run","(conf = IRB.conf)","",null,1],["run","Thread","ruby/classes/Thread.html#method-i-run","()","<p>Wakes up <code>thr</code>, making it eligible for scheduling.\n\n<pre><code>a = Thread.new { puts &quot;a&quot;; Thread.stop; puts &quot;c&quot; }\nsleep ...\n</code></pre>\n",null,1],["run!","ActiveSupport::ExecutionWrapper","rails/classes/ActiveSupport/ExecutionWrapper.html#method-c-run-21","(reset: false)","<p>Run this execution.\n<p>Returns an instance, whose <code>complete!</code> method <strong>must</strong> be invoked after the work has been …\n",null,0],["run_callbacks","ActiveSupport::Callbacks","rails/classes/ActiveSupport/Callbacks.html#method-i-run_callbacks","(kind)","<p>Runs the callbacks for the given event.\n<p>Calls the before and around callbacks in the order they were set, …\n",null,0],["run_initializers","Rails::Initializable","rails/classes/Rails/Initializable.html#method-i-run_initializers","(group = :default, *args)","",null,0],["run_interlock","ActiveSupport::Dependencies","rails/classes/ActiveSupport/Dependencies.html#method-c-run_interlock","(&block)","<p>Execute the supplied block without interference from any concurrent loads.\n",null,0],["run_load_hooks","ActiveSupport::LazyLoadHooks","rails/classes/ActiveSupport/LazyLoadHooks.html#method-i-run_load_hooks","(name, base = Object)","<p>Executes all blocks registered to <code>name</code> via on_load, using <code>base</code> as the evaluation context.\n\n<pre><code>ActiveSupport.run_load_hooks(:active_record, ...\n</code></pre>\n",null,0],["runner","Rails::Application","rails/classes/Rails/Application.html#method-i-runner","(&blk)","<p>Sends any runner called in the instance of a new application up to the <code>runner</code> method defined in Rails::Railtie …\n",null,0],["runner","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-runner","(&blk)","",null,0],["running","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-running","(&block)","",null,0],["running?","Coverage","ruby/classes/Coverage.html#method-c-running-3F","()","<p>Returns true if coverage stats are currently being collected (after Coverage.start call, but before  …\n",null,1],["runtime","ActiveRecord::LogSubscriber","rails/classes/ActiveRecord/LogSubscriber.html#method-c-runtime","()","",null,0],["runtime=","ActiveRecord::LogSubscriber","rails/classes/ActiveRecord/LogSubscriber.html#method-c-runtime-3D","(value)","",null,0],["runtime?","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-runtime-3F","()","",null,1],["runtime_dependencies","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-runtime_dependencies","()","<p>List of dependencies that will automatically be activated at runtime.\n",null,1],["runtime_stats","RubyVM::RJIT","ruby/classes/RubyVM/RJIT.html#method-c-runtime_stats","()","<p>Return a Hash for RJIT statistics. –rjit-stats makes more information available.\n",null,1],["runtime_stats","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-runtime_stats","(context: false)","<p>Return a hash for statistics generated for the <code>--yjit-stats</code> command line option.\nReturn <code>nil</code> when option ...\n",null,1],["s3_uri_signer","Gem::RemoteFetcher","ruby/classes/Gem/RemoteFetcher.html#method-i-s3_uri_signer","(uri)","<p>we have our own signing code here to avoid a dependency on the aws-sdk gem\n",null,1],["safe_concat","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-safe_concat","(string)","",null,0],["safe_concat","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-safe_concat","(value)","",null,0],["safe_constantize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-safe_constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string.\n\n<pre><code>safe_constantize(&#39;Module&#39;)   ...\n</code></pre>\n",null,0],["safe_constantize","String","rails/classes/String.html#method-i-safe_constantize","()","<p><code>safe_constantize</code> tries to find a declared constant with the name specified in the string. It returns …\n",null,0],["safe_delete","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-safe_delete","(&block)","",null,1],["safe_dump","Psych","ruby/classes/Psych.html#method-c-safe_dump","(o, io = nil, options = {})","<p>Safely dump Ruby object <code>o</code> to a YAML string. Optional <code>options</code> may be passed in to control the output format. …\n",null,1],["safe_join","ActionView::Helpers::OutputSafetyHelper","rails/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-safe_join","(array, sep = $,)","<p>This method returns an HTML safe string similar to what <code>Array#join</code> would return. The array is flattened, …\n",null,0],["safe_load","Gem::SafeMarshal","ruby/classes/Gem/SafeMarshal.html#method-c-safe_load","(input)","",null,1],["safe_load","Gem::SafeYAML","ruby/classes/Gem/SafeYAML.html#method-c-safe_load","(input)","",null,1],["safe_load","Psych","ruby/classes/Psych.html#method-c-safe_load","(yaml, permitted_classes: [], permitted_symbols: [], aliases: false, filename: nil, fallback: nil, symbolize_names: false, freeze: false, strict_integer: false)","<p>Safely load the yaml string in <code>yaml</code>.  By default, only the following classes are allowed to be deserialized: …\n",null,1],["safe_load_file","Psych","ruby/classes/Psych.html#method-c-safe_load_file","(filename, **kwargs)","<p>Safely loads the document contained in <code>filename</code>.  Returns the yaml contained in <code>filename</code> as a Ruby object, …\n",null,1],["safe_load_marshal","Bundler","ruby/classes/Bundler.html#method-c-safe_load_marshal","(data)","",null,1],["safe_unlink","FileUtils","ruby/classes/FileUtils.html#method-c-safe_unlink","(list, noop: nil, verbose: nil)","",null,1],["sample","Array","ruby/classes/Array.html#method-i-sample","(n = (ary = false), random: Random)","<p>Returns random elements from <code>self</code>.\n<p>When no arguments are given, returns a random element from <code>self</code>:\n\n<pre><code>a = ...\n</code></pre>\n",null,1],["sandbox","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-sandbox","(*values)","<p>Specify whether a sandbox should be enabled for the requested resource:\n\n<pre><code>policy.sandbox\n</code></pre>\n<p>Values can be passed …\n",null,0],["sandbox?","Rails::Console","rails/classes/Rails/Console.html#method-i-sandbox-3F","()","",null,0],["sanitize","ActionView::Helpers::SanitizeHelper","rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize","(html, options = {})","<p>Sanitizes HTML input, stripping all but known-safe tags and attributes.\n<p>It also strips href/src attributes …\n",null,0],["sanitize","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-sanitize","()","<p>Sanitize the descriptive fields in the spec.  Sometimes non-ASCII characters will garble the site index. …\n",null,1],["sanitize_action_text_content","ActionText::ContentHelper","rails/classes/ActionText/ContentHelper.html#method-i-sanitize_action_text_content","(content)","",null,0],["sanitize_css","ActionView::Helpers::SanitizeHelper","rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize_css","(style)","<p>Sanitizes a block of CSS code. Used by <code>sanitize</code> when it comes across a style attribute.\n",null,0],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-sanitize_limit","(limit)","<p>Sanitizes the given LIMIT parameter in order to prevent SQL injection.\n<p>The <code>limit</code> may be anything that …\n",null,0],["sanitize_path","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-sanitize_path","(path)","<p>Removes directories from <code>path</code> that are outside the current directory\n",null,1],["sanitize_sql","ActiveRecord::Sanitization::ClassMethods","rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql","(condition)","",null,0],["sanitize_sql_array","ActiveRecord::Sanitization::ClassMethods","rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_array","(ary)","<p>Accepts an array of conditions. The array has each value sanitized and interpolated into the SQL statement. …\n",null,0],["sanitize_sql_for_assignment","ActiveRecord::Sanitization::ClassMethods","rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_assignment","(assignments, default_table_name = table_name)","<p>Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for …\n",null,0],["sanitize_sql_for_conditions","ActiveRecord::Sanitization::ClassMethods","rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_conditions","(condition)","<p>Accepts an array or string of SQL conditions and sanitizes them into a valid SQL fragment for a WHERE …\n",null,0],["sanitize_sql_for_order","ActiveRecord::Sanitization::ClassMethods","rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_order","(condition)","<p>Accepts an array, or string of SQL conditions and sanitizes them into a valid SQL fragment for an ORDER …\n",null,0],["sanitize_sql_hash_for_assignment","ActiveRecord::Sanitization::ClassMethods","rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash_for_assignment","(attrs, table)","<p>Sanitizes a hash of attribute/value pairs into SQL conditions for a SET clause.\n\n<pre><code>sanitize_sql_hash_for_assignment({ ...\n</code></pre>\n",null,0],["sanitize_sql_like","ActiveRecord::Sanitization::ClassMethods","rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_like","(string, escape_character = \"\\\\\")","<p>Sanitizes a <code>string</code> so that it is safe to use within an SQL LIKE statement. This method uses <code>escape_character</code> …\n",null,0],["sanitize_string","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-sanitize_string","(string)","<p>Sanitize a single string.\n",null,1],["sanitized","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-sanitized","()","<p>Returns the sanitized filename.\n\n<pre><code>ActiveStorage::Filename.new(&quot;foo:bar.jpg&quot;).sanitized # =&gt; &quot;foo-bar.jpg&quot; ...\n</code></pre>\n",null,0],["satisfied_by?","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-satisfied_by-3F","(version)","<p>True if <code>version</code> satisfies this Requirement.\n",null,1],["satisfies_requirement?","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-satisfies_requirement-3F","(dependency)","<p>Checks if this specification meets the requirement of <code>dependency</code>.\n",null,1],["saturday?","Date","ruby/classes/Date.html#method-i-saturday-3F","()","<p>Returns <code>true</code> if <code>self</code> is a Saturday, <code>false</code> otherwise.\n",null,1],["saturday?","Time","ruby/classes/Time.html#method-i-saturday-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a Saturday, <code>false</code> otherwise:\n\n<pre><code>t = Time.utc(2000, 1, 1) # =&gt; 2000-01-01 ...\n</code></pre>\n",null,1],["save","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-save","(**options, &block)","<p>Saves the model.\n<p>If the model is new, a record gets created in the database, otherwise the existing record …\n",null,0],["save","ActiveRecord::Validations","rails/classes/ActiveRecord/Validations.html#method-i-save","(**options)","<p>The validation process on save can be skipped by passing <code>validate: false</code>. The validation context can …\n",null,0],["save","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-i-save","()","<p>POST create\n",null,0],["save","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-save","()","<p>Saves all entries in the store\n",null,1],["save!","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-save-21","(**options, &block)","<p>Saves the model.\n<p>If the model is new, a record gets created in the database, otherwise the existing record …\n",null,0],["save!","ActiveRecord::Validations","rails/classes/ActiveRecord/Validations.html#method-i-save-21","(**options)","<p>Attempts to save the record just like ActiveRecord::Base#save but will raise an ActiveRecord::RecordInvalid …\n",null,0],["save_cache","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-save_cache","()","<p>Writes the cache file for this store\n",null,1],["save_class","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-save_class","(klass)","<p>Writes the ri data for <code>klass</code> (or module)\n",null,1],["save_exception_mode","BigDecimal","ruby/classes/BigDecimal.html#method-c-save_exception_mode","()","<p>Execute the provided block, but preserve the exception mode\n\n<pre><code>BigDecimal.save_exception_mode do\n  BigDecimal.mode(BigDecimal::EXCEPTION_OVERFLOW, ...\n</code></pre>\n",null,1],["save_history","IRB::Context","ruby/classes/IRB/Context.html#method-i-save_history","()","",null,1],["save_history=","IRB::Context","ruby/classes/IRB/Context.html#method-i-save_history-3D","(val)","",null,1],["save_limit","BigDecimal","ruby/classes/BigDecimal.html#method-c-save_limit","()","<p>Execute the provided block, but preserve the precision limit\n\n<pre><code>BigDecimal.limit(100)\nputs BigDecimal.limit ...\n</code></pre>\n",null,1],["save_method","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-save_method","(klass, method)","<p>Writes the ri data for <code>method</code> on <code>klass</code>\n",null,1],["save_page","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-save_page","(page)","<p>Writes the ri data for <code>page</code>\n",null,1],["save_rounding_mode","BigDecimal","ruby/classes/BigDecimal.html#method-c-save_rounding_mode","()","<p>Execute the provided block, but preserve the rounding mode\n\n<pre><code>BigDecimal.save_rounding_mode do\n  BigDecimal.mode(BigDecimal::ROUND_MODE, ...\n</code></pre>\n",null,1],["saved_change_to_attribute","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-saved_change_to_attribute","(attr_name)","<p>Returns the change to an attribute during the last save. If the attribute was changed, the result will …\n",null,0],["saved_change_to_attribute?","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-saved_change_to_attribute-3F","(attr_name, **options)","<p>Did this attribute change when we last saved?\n<p>This method is useful in after callbacks to determine if …\n",null,0],["saved_changes","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-saved_changes","()","<p>Returns a hash containing all the changes that were just saved.\n",null,0],["saved_changes?","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-saved_changes-3F","()","<p>Did the last call to <code>save</code> have any changes to change?\n",null,0],["say","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-say","(message, subitem = false)","<p>Takes a message argument and outputs it as is. A second boolean argument can be passed to specify whether …\n",null,0],["say","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-say","(statement=\"\")","<p>Display a statement.\n",null,1],["say","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-say","(statement = \"\")","<p>Displays the given <code>statement</code> on the standard output (or equivalent).\n",null,1],["say_with_time","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-say_with_time","(message)","<p>Outputs text along with how long it took to run its block. If the block returns an integer it assumes …\n",null,0],["scalar","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-scalar","(*args)","",null,1],["scalar","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-scalar","(p1, p2, p3, p4, p5, p6)","<p>Emit a scalar with <code>value</code>, <code>anchor</code>, <code>tag</code>, and a <code>plain</code> or <code>quoted</code> string type with <code>style</code>.\n<p>See Psych::Handler#scalar …\n",null,1],["scalar","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-scalar","(value, anchor, tag, plain, quoted, style)","<p>Called when a scalar <code>value</code> is found.  The scalar may have an <code>anchor</code>, a <code>tag</code>, be implicitly <code>plain</code> or implicitly …\n",null,1],["scalar","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-i-scalar","(value, anchor, tag, plain, quoted, style)","",null,1],["scalar=","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-scalar-3D","(value)","<p>Emit a scalar with <code>value</code>\n",null,1],["scalar?","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-scalar-3F","()","",null,1],["scalar?","Psych::Nodes::Scalar","ruby/classes/Psych/Nodes/Scalar.html#method-i-scalar-3F","()","",null,1],["scale","BigDecimal","ruby/classes/BigDecimal.html#method-i-scale","()","<p>Returns the number of decimal digits following the decimal digits in <code>self</code>.\n\n<pre><code>BigDecimal(&quot;0&quot;).scale      ...\n</code></pre>\n",null,1],["scan","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-scan","(pattern)","",null,1],["scan","OpenSSL::X509::Name::RFC2253DN","ruby/classes/OpenSSL/X509/Name/RFC2253DN.html#method-i-scan","(dn)","",null,1],["scan","Prism::Pattern","ruby/classes/Prism/Pattern.html#method-i-scan","(root)","<p>Scan the given node and all of its children for nodes that match the pattern. If a block is given, it …\n",null,1],["scan","RDoc::Parser::C","ruby/classes/RDoc/Parser/C.html#method-i-scan","()","<p>Extracts the classes, modules, methods, attributes, constants and aliases from a C file and returns an …\n",null,1],["scan","RDoc::Parser::ChangeLog","ruby/classes/RDoc/Parser/ChangeLog.html#method-i-scan","()","<p>Converts the ChangeLog into an RDoc::Markup::Document\n",null,1],["scan","RDoc::Parser::Markdown","ruby/classes/RDoc/Parser/Markdown.html#method-i-scan","()","<p>Creates an Markdown-format TopLevel for the given file.\n",null,1],["scan","RDoc::Parser::RD","ruby/classes/RDoc/Parser/RD.html#method-i-scan","()","<p>Creates an rd-format TopLevel for the given file.\n",null,1],["scan","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-scan","()","<p>Scans this Ruby file for Ruby constructs\n",null,1],["scan","RDoc::Parser::Simple","ruby/classes/RDoc/Parser/Simple.html#method-i-scan","()","<p>Extract the file contents and attach them to the TopLevel as a comment\n",null,1],["scan","String","ruby/classes/String.html#method-i-scan","(p1)","<p>Matches a pattern against <code>self</code>; the pattern is:\n<p><code>string_or_regexp</code> itself, if it is a Regexp.\n<p><code>Regexp.quote(string_or_regexp)</code> …\n",null,1],["scan","StringScanner","ruby/classes/StringScanner.html#method-i-scan","(p1)","<p>Tries to match with <code>pattern</code> at the current position. If there’s a match, the scanner advances the …\n",null,1],["scan","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-scan","(up:, down:)","<p>Iterates up and down\n<p>Returns line, kw_count, end_count for each iteration\n",null,1],["scan_adjacent_indent","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-scan_adjacent_indent","()","<p>Scan blocks based on indentation of next line above/below block\n<p>Determines indentaion of the next line …\n",null,1],["scan_all","CSV::Parser::InputsScanner","ruby/classes/CSV/Parser/InputsScanner.html#method-i-scan_all","(pattern)","",null,1],["scan_full","StringScanner","ruby/classes/StringScanner.html#method-i-scan_full","(p1, p2, p3)","<p>Tests whether the given <code>pattern</code> is matched from the current scan pointer. Advances the scan pointer if …\n",null,1],["scan_neighbors_not_empty","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-scan_neighbors_not_empty","()","<p>Finds code lines at the same or greater indentation and adds them to the block\n",null,1],["scan_opens","IRB::NestingParser","ruby/classes/IRB/NestingParser.html#method-c-scan_opens","(tokens)","<p>Scan each token and call the given block with array of token and other information for parsing\n",null,1],["scan_token","IRB::Color::SymbolState","ruby/classes/IRB/Color/SymbolState.html#method-i-scan_token","(token)","<p>Return true if the token is a part of Symbol.\n",null,1],["scan_until","StringScanner","ruby/classes/StringScanner.html#method-i-scan_until","(p1)","<p>Scans the string <em>until</em> the <code>pattern</code> is matched.  Returns the substring up to and including the end of …\n",null,1],["scan_while","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-scan_while","()","<p>Main work method\n<p>The scan_while method takes a block that yields lines above and below the block. If the …\n",null,1],["schedule","ActionMailbox::IncinerationJob","rails/classes/ActionMailbox/IncinerationJob.html#method-c-schedule","(inbound_email)","",null,0],["schedule","Fiber","ruby/classes/Fiber.html#method-c-schedule","(*args)","<p>The method is <em>expected</em> to immediately run the provided block of code in a separate non-blocking fiber. …\n",null,1],["scheduled?","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-scheduled-3F","()","<p>Returns <code>true</code> if the relation was scheduled on the background thread pool.\n",null,0],["scheduler","Fiber","ruby/classes/Fiber.html#method-c-scheduler","()","<p>Returns the Fiber scheduler, that was last set for the current thread with Fiber.set_scheduler. Returns …\n",null,1],["schema_cache","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-schema_cache","()","",null,0],["schema_cache=","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-schema_cache-3D","(cache)","",null,0],["schema_cache_path","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-schema_cache_path","()","<p>The path to the schema cache dump file for a database. If omitted, the filename will be read from ENV …\n",null,0],["schema_dump","ActiveRecord::DatabaseConfigurations::HashConfig","rails/classes/ActiveRecord/DatabaseConfigurations/HashConfig.html#method-i-schema_dump","(format = ActiveRecord.schema_format)","<p>Determines whether to dump the schema/structure files and the filename that should be used.\n<p>If <code>configuration_hash[:schema_dump]</code> …\n",null,0],["schema_dump_path","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-schema_dump_path","(db_config, format = ActiveRecord.schema_format)","",null,0],["schema_exists?","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-schema_exists-3F","(name)","<p>Returns true if schema exists.\n",null,0],["schema_file_type","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-schema_file_type","(format = ActiveRecord.schema_format)","",null,0],["schema_migrations_table_name","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-schema_migrations_table_name","","<p>The name of the schema migrations table. By default, the value is <code>&quot;schema_migrations&quot;</code>.\n",null,0],["schema_migrations_table_name=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-schema_migrations_table_name-3D","","<p>Sets the name of the schema migrations table.\n",null,0],["schema_names","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-schema_names","()","<p>Returns an array of schema names.\n",null,0],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-schema_search_path","()","<p>Returns the active schema search path.\n",null,0],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-schema_search_path-3D","(schema_csv)","<p>Sets the schema search path to a string of comma-separated schema names. Names beginning with $ have …\n",null,0],["schema_up_to_date?","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-schema_up_to_date-3F","(configuration, format = ActiveRecord.schema_format, file = nil)","",null,0],["schema_version","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-schema_version","()","<p>Returns the version identifier of the schema currently available in the database. This is generally equal …\n",null,0],["scheme=","URI::Generic","ruby/classes/URI/Generic.html#method-i-scheme-3D","(v)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["scheme_for","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-scheme_for","(key_provider: nil, key: nil, deterministic: false, downcase: false, ignore_case: false, previous: [], **context_properties)","",null,0],["scheme_list","URI","ruby/classes/URI.html#method-c-scheme_list","()","<p>Returns a hash of the defined schemes:\n\n<pre><code>URI.scheme_list\n# =&gt;\n{&quot;MAILTO&quot;=&gt;URI::MailTo,\n &quot;LDAPS&quot;=&gt;URI::LDAPS, ...\n</code></pre>\n",null,1],["scope","ActionDispatch::Routing::Mapper::Scoping","rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-scope","(*args)","<p>Scopes a set of routes to the given default options.\n<p>Take the following route definition as an example: …\n",null,0],["scope","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-scope","()","<p>Returns a <code>Relation</code> object for the records in this association\n",null,0],["scope","ActiveRecord::Scoping::Named::ClassMethods","rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-scope","(name, body, &block)","<p>Adds a class method for retrieving and querying objects. The method is intended to return an ActiveRecord::Relation …\n",null,0],["scope","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-scope","()","<p>Returns scope.\n",null,1],["scope=","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-scope-3D","(val)","<p>Setter for scope <code>val</code>.\n",null,1],["scope_for","ActiveRecord::Reflection::MacroReflection","rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-scope_for","(relation, owner = nil)","",null,0],["scope_for_create","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-scope_for_create","()","",null,0],["scopes","DidYouMean::ClassNameChecker","ruby/classes/DidYouMean/ClassNameChecker.html#method-i-scopes","()","",null,1],["scoping","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-scoping","(all_queries: nil, &block)","<p>Scope all queries to the current scope.\n\n<pre><code>Comment.where(post_id: 1).scoping do\n  Comment.first\nend\n# =&gt; ...\n</code></pre>\n",null,0],["screen_height","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-screen_height","()","",null,1],["screen_width","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-screen_width","()","",null,1],["script_lines","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-script_lines","()","<p>Returns the original source code as an array of lines.\n<p>Note that this is an API for ruby internal use, …\n",null,1],["script_lines","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-script_lines","()","<p>It returns recorded script lines if it is available. The script lines are not limited to the iseq range, …\n",null,1],["script_safe","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-script_safe","()","<p>If this boolean is true, the forward slashes will be escaped in the json output.\n",null,1],["script_safe=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-script_safe-3D","(p1)","<p>This sets whether or not the forward slashes will be escaped in the json output.\n",null,1],["script_safe?","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-script_safe-3F","()","<p>If this boolean is true, the forward slashes will be escaped in the json output.\n",null,1],["scroll_backward","IO","ruby/classes/IO.html#method-i-scroll_backward","(p1)","",null,1],["scroll_down","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-scroll_down","(x)","<p>This only works when the cursor is at the bottom of the scroll range For more details, see github.com/ruby/reline/pull/577#issuecomment-1646679623 …\n",null,1],["scroll_down","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-scroll_down","(val)","",null,1],["scroll_down","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-scroll_down","(val)","",null,1],["scroll_forward","IO","ruby/classes/IO.html#method-i-scroll_forward","(p1)","",null,1],["scrolling_list","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-scrolling_list","(name = \"\", *values)","",null,1],["scrub","String","ruby/classes/String.html#method-i-scrub","(*args)","<p>Returns a copy of <code>self</code> with each invalid byte sequence replaced by the given <code>replacement_string</code>.\n<p>With …\n",null,1],["scrub!","String","ruby/classes/String.html#method-i-scrub-21","(*args)","<p>Like String#scrub, except that any replacements are made in <code>self</code>.\n",null,1],["scrypt","OpenSSL::KDF","ruby/classes/OpenSSL/KDF.html#method-c-scrypt","(p1, p2 = {})","<p>Derives a key from <em>pass</em> using given parameters with the scrypt password-based key derivation function. …\n",null,1],["search","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-search","(key)","<p>Returns the associated job for the given <code>key</code>.\n<p>If given an Integer, it will return the <code>key</code> index for the …\n",null,1],["search","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-search","(id, key)","<p>Searches <code>key</code> in <code>id</code> list. The result is returned or yielded if a block is given. If it isn’t found, …\n",null,1],["search_const","OptionParser","ruby/classes/OptionParser.html#method-c-search_const","(klass, name)","",null,1],["search_convpath","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-c-search_convpath","(*args)","<p>Returns a conversion path.\n\n<pre><code>p Encoding::Converter.search_convpath(&quot;ISO-8859-1&quot;, &quot;EUC-JP&quot;)\n#=&gt; [[#&lt;Encoding:ISO-8859-1&gt;, ...\n</code></pre>\n",null,1],["search_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-search_field","","<p>Wraps ActionView::Helpers::FormHelper#search_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["search_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-search_field","(object_name, method, options = {})","<p>Returns an input of type “search” for accessing a specified attribute (identified by <code>method</code> …\n",null,0],["search_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-search_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “search”.\n<p>Options\n<p>Supports the same options as #text_field_tag. …\n",null,0],["search_file","IRB::Locale","ruby/classes/IRB/Locale.html#method-i-search_file","(lib_paths, dir, file)","<p>@param paths load paths in which IRB find a localized file. @param dir directory @param file basename …\n",null,1],["search_for","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-search_for","(dependency)","",null,1],["search_for_dependency","Gem::SpecFetcher","ruby/classes/Gem/SpecFetcher.html#method-i-search_for_dependency","(dependency, matching_platform=true)","<p>Find and fetch gem name tuples that match <code>dependency</code>.\n<p>If <code>matching_platform</code> is false, gems for all platforms …\n",null,1],["search_full","StringScanner","ruby/classes/StringScanner.html#method-i-search_full","(p1, p2, p3)","<p>Scans the string <em>until</em> the <code>pattern</code> is matched. Advances the scan pointer if <code>advance_pointer_p</code>, otherwise …\n",null,1],["search_record","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-search_record","()","<p>Search record used by RDoc::Generator::JsonIndex\n",null,1],["search_record","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-search_record","()","<p>Used by RDoc::Generator::JsonIndex to create a record for the search engine.\n",null,1],["search_record","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-search_record","()","<p>Search record used by RDoc::Generator::JsonIndex\n",null,1],["sec","DateTime","ruby/classes/DateTime.html#method-i-sec","()","<p>Returns the second in range (0..59):\n\n<pre><code>DateTime.new(2001, 2, 3, 4, 5, 6).sec # =&gt; 6\n</code></pre>\n",null,1],["sec","Time","ruby/classes/Time.html#method-i-sec","()","<p>Returns the integer second of the minute for <code>self</code>, in range (0..60):\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, ...\n</code></pre>\n",null,1],["sec_fraction","Time","rails/classes/Time.html#method-i-sec_fraction","()","<p>Returns the fraction of a second as a <code>Rational</code>\n\n<pre><code>Time.new(2012, 8, 29, 0, 0, 0.5).sec_fraction # =&gt; (1/2)\n</code></pre>\n",null,0],["sec_fraction","DateTime","ruby/classes/DateTime.html#method-i-sec_fraction","()","<p>Returns the fractional part of the second in range (Rational(0, 1)…Rational(1, 1)):\n\n<pre><code>DateTime.new(2001, ...\n</code></pre>\n",null,1],["second","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-second","","<p>Same as #first except returns only the second record.\n",null,0],["second","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-second","()","<p>Find the second record. If no order is defined it will order by primary key.\n\n<pre><code>Person.second # returns the ...\n</code></pre>\n",null,0],["second","Array","rails/classes/Array.html#method-i-second","()","<p>Equal to <code>self[1]</code>.\n\n<pre><code>%w( a b c d e ).second # =&gt; &quot;b&quot;\n</code></pre>\n",null,0],["second","Numeric","rails/classes/Numeric.html#method-i-second","()","",null,0],["second","DateTime","ruby/classes/DateTime.html#method-i-second","()","<p>Returns the second in range (0..59):\n\n<pre><code>DateTime.new(2001, 2, 3, 4, 5, 6).sec # =&gt; 6\n</code></pre>\n",null,1],["second!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-second-21","()","<p>Same as #second but raises ActiveRecord::RecordNotFound if no record is found.\n",null,0],["second_fraction","DateTime","ruby/classes/DateTime.html#method-i-second_fraction","()","<p>Returns the fractional part of the second in range (Rational(0, 1)…Rational(1, 1)):\n\n<pre><code>DateTime.new(2001, ...\n</code></pre>\n",null,1],["second_to_last","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-second_to_last","","<p>Same as #first except returns only the second-to-last record.\n",null,0],["second_to_last","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-second_to_last","()","<p>Find the second-to-last record. If no order is defined it will order by primary key.\n\n<pre><code>Person.second_to_last ...\n</code></pre>\n",null,0],["second_to_last","Array","rails/classes/Array.html#method-i-second_to_last","()","<p>Equal to <code>self[-2]</code>.\n\n<pre><code>%w( a b c d e ).second_to_last # =&gt; &quot;d&quot;\n</code></pre>\n",null,0],["second_to_last!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-second_to_last-21","()","<p>Same as #second_to_last but raises ActiveRecord::RecordNotFound if no record is found.\n",null,0],["seconds","Numeric","rails/classes/Numeric.html#method-i-seconds","()","<p>Returns a Duration instance matching the number of seconds provided.\n\n<pre><code>2.seconds # =&gt; 2 seconds\n</code></pre>\n",null,0],["seconds_since_midnight","DateTime","rails/classes/DateTime.html#method-i-seconds_since_midnight","()","<p>Returns the number of seconds since 00:00:00.\n\n<pre><code>DateTime.new(2012, 8, 29,  0,  0,  0).seconds_since_midnight ...\n</code></pre>\n",null,0],["seconds_since_midnight","Time","rails/classes/Time.html#method-i-seconds_since_midnight","()","<p>Returns the number of seconds since 00:00:00.\n\n<pre><code>Time.new(2012, 8, 29,  0,  0,  0).seconds_since_midnight ...\n</code></pre>\n",null,0],["seconds_to_utc_offset","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-seconds_to_utc_offset","(seconds, colon = true)","<p>Assumes self represents an offset from UTC in seconds (as returned from Time#utc_offset) and turns this …\n",null,0],["seconds_until_end_of_day","DateTime","rails/classes/DateTime.html#method-i-seconds_until_end_of_day","()","<p>Returns the number of seconds until 23:59:59.\n\n<pre><code>DateTime.new(2012, 8, 29,  0,  0,  0).seconds_until_end_of_day ...\n</code></pre>\n",null,0],["seconds_until_end_of_day","Time","rails/classes/Time.html#method-i-seconds_until_end_of_day","()","<p>Returns the number of seconds until 23:59:59.\n\n<pre><code>Time.new(2012, 8, 29,  0,  0,  0).seconds_until_end_of_day ...\n</code></pre>\n",null,0],["secret_key_base","Rails::Application","rails/classes/Rails/Application.html#method-i-secret_key_base","()","<p>The secret_key_base is used as the input secret to the application’s key generator, which in turn …\n",null,0],["secret_token","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-secret_token","(request)","",null,0],["secrets","Rails::Application","rails/classes/Rails/Application.html#method-i-secrets","()","",null,0],["section","ActionDispatch::Routing::ConsoleFormatter::Base","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Base.html#method-i-section","(routes)","",null,0],["section","ActionDispatch::Routing::ConsoleFormatter::Expanded","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Expanded.html#method-i-section","(routes)","",null,0],["section","ActionDispatch::Routing::ConsoleFormatter::Sheet","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Sheet.html#method-i-section","(routes)","",null,0],["section","ActionDispatch::Routing::HtmlTableFormatter","rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-section","(routes)","",null,0],["section","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-section","()","<p>The section this CodeObject is in.  Sections allow grouping of constants, attributes and methods inside …\n",null,1],["section_contents","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-section_contents","()","<p>Returns RDoc::Context::Section objects referenced in this context for use in a table of contents.\n",null,1],["section_title","ActionDispatch::Routing::ConsoleFormatter::Base","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Base.html#method-i-section_title","(title)","",null,0],["section_title","ActionDispatch::Routing::ConsoleFormatter::Expanded","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Expanded.html#method-i-section_title","(title)","",null,0],["section_title","ActionDispatch::Routing::ConsoleFormatter::Sheet","rails/classes/ActionDispatch/Routing/ConsoleFormatter/Sheet.html#method-i-section_title","(title)","",null,0],["section_title","ActionDispatch::Routing::HtmlTableFormatter","rails/classes/ActionDispatch/Routing/HtmlTableFormatter.html#method-i-section_title","(title)","",null,0],["sections","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-i-sections","()","<p>Get the names of all sections in the current configuration.\n",null,1],["sections","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-sections","()","<p>Sections in this context\n",null,1],["secure=","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-secure-3D","(val)","<p>Set whether the Cookie is a secure cookie or not.\n<p><code>val</code> must be a boolean.\n",null,1],["secure_compare","ActiveSupport::SecurityUtils","rails/classes/ActiveSupport/SecurityUtils.html#method-c-secure_compare","(a, b)","<p>Secure string comparison for strings of variable length.\n<p>While a timing attack would not be able to discern …\n",null,0],["secure_compare","OpenSSL","ruby/classes/OpenSSL.html#method-c-secure_compare","(a, b)","<p>Constant time memory comparison. Inputs are hashed using SHA-256 to mask the length of the secret. Returns …\n",null,1],["secure_compare!","ActiveSupport::SecureCompareRotator","rails/classes/ActiveSupport/SecureCompareRotator.html#method-i-secure_compare-21","(other_value, on_rotation: @on_rotation)","",null,0],["security","","ruby/files/ruby/doc/security_rdoc.html","","<p>Ruby Security\n<p>The Ruby programming language is large and complex and there are many security pitfalls …\n",null,1],["security_level","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-security_level","()","<p>Returns the security level for the context.\n<p>See also OpenSSL::SSL::SSLContext#security_level=.\n",null,1],["security_level=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-security_level-3D","(p1)","<p>Sets the security level for the context. OpenSSL limits parameters according to the level. The “parameters” …\n",null,1],["see","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-see","()","<p>A method/attribute to look at, in particular if this method/attribute has no documentation.\n<p>It can be …\n",null,1],["seed","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-seed","()","<p>See the OpenSSL documentation for EC_GROUP_get0_seed()\n",null,1],["seed","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-seed","(p1)","<p>::seed is equivalent to ::add where <em>entropy</em> is length of <em>str</em>.\n",null,1],["seed","Random","ruby/classes/Random.html#method-c-seed","()","<p>Returns the seed value used to initialize the Ruby system PRNG. This may be used to initialize another …\n",null,1],["seed","Random","ruby/classes/Random.html#method-i-seed","()","<p>Returns the seed value used to initialize the generator. This may be used to initialize another generator …\n",null,1],["seed=","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-seed-3D","(p1)","<p>See the OpenSSL documentation for EC_GROUP_set_seed()\n",null,1],["seed_loader","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-seed_loader","()","",null,0],["seeds.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/db/seeds_rb_tt.html","","<p># This file should contain all the record creation needed to seed the database with its default values. …\n",null,0],["seek","ARGF","ruby/classes/ARGF.html#method-i-seek","(*args)","<p>Seeks to offset <em>amount</em> (an Integer) in the ARGF stream according to the value of <em>whence</em>. See IO#seek …\n",null,1],["seek","Dir","ruby/classes/Dir.html#method-i-seek","(p1)","<p>Sets the position in <code>self</code> and returns <code>self</code>. The value of <code>position</code> should have been returned from an earlier …\n",null,1],["seek","Gem::Package::TarReader","ruby/classes/Gem/Package/TarReader.html#method-i-seek","(name)","<p>Seeks through the tar file until it finds the <code>entry</code> with <code>name</code> and yields it.  Rewinds the tar file to …\n",null,1],["seek","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-seek","(offset, whence = IO::SEEK_SET)","<p>Seeks to <code>offset</code> bytes into the tar file entry <code>whence</code> can be IO::SEEK_SET, IO::SEEK_CUR, or IO::SEEK_END …\n",null,1],["seek","IO","ruby/classes/IO.html#method-i-seek","(p1, p2 = v2)","<p>Seeks to the position given by integer <code>offset</code> (see Position) and constant <code>whence</code>, which is one of:\n<p><code>:CUR</code> …\n",null,1],["seek","StringIO","ruby/classes/StringIO.html#method-i-seek","(p1, p2 = v2)","<p>Sets the current position to the given integer <code>offset</code> (in bytes), with respect to a given constant <code>whence</code> …\n",null,1],["select","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-select","(&block)","<p>Returns a new <code>ActionController::Parameters</code> instance with only items that the block evaluates to true. …\n",null,0],["select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-select","(method, choices = nil, options = {}, html_options = {}, &block)","<p>Wraps ActionView::Helpers::FormOptionsHelper#select for form builders:\n\n<pre><code>&lt;%= form_for @post do |f| %&gt;\n  ...\n</code></pre>\n",null,0],["select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-select","(object, method, choices = nil, options = {}, html_options = {}, &block)","<p>Create a select tag and a series of contained option tags for the provided object and method. The option …\n",null,0],["select","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-select","","<p>Works in two ways.\n<p><strong>First:</strong> Specify a subset of fields to be selected from the result set.\n\n<pre><code>class Person &lt; ...\n</code></pre>\n",null,0],["select","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-select","(*fields)","<p>Works in two unique ways.\n<p>First: takes a block so it can be used just like <code>Array#select</code>.\n\n<pre><code>Model.all.select ...\n</code></pre>\n",null,0],["select","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-select","(*args, &block)","",null,0],["select","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-select","(*args, &block)","",null,0],["select","Array","ruby/classes/Array.html#method-i-select","()","<p>Calls the block, if given, with each element of <code>self</code>; returns a new Array containing those elements of …\n",null,1],["select","ENV","ruby/classes/ENV.html#method-c-select","()","<p>Yields each environment variable name and its value as a 2-element Array, returning a Hash of the names …\n",null,1],["select","Enumerable","ruby/classes/Enumerable.html#method-i-select","()","<p>Returns an array containing elements selected by the block.\n<p>With a block given, calls the block with successive …\n",null,1],["select","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-select","()","<p>Like Enumerable#select, but chains operation to be lazy-evaluated.\n",null,1],["select","Hash","ruby/classes/Hash.html#method-i-select","()","<p>Returns a new Hash object whose entries are those for which the block returns a truthy value:\n\n<pre><code>h = {foo: ...\n</code></pre>\n",null,1],["select","IO","ruby/classes/IO.html#method-c-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Invokes system call select(2), which monitors multiple file descriptors, waiting until one or more of …\n",null,1],["select","Kernel","ruby/classes/Kernel.html#method-i-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Invokes system call select(2), which monitors multiple file descriptors, waiting until one or more of …\n",null,1],["select","Ractor","ruby/classes/Ractor.html#method-c-select","(*ractors, yield_value: yield_unspecified = true, move: false)","<p>Wait for any ractor to have something in its outgoing port, read from this ractor, and then return that …\n",null,1],["select","Struct","ruby/classes/Struct.html#method-i-select","(*args)","<p>With a block given, returns an array of values from <code>self</code> for which the block returns a truthy value: …\n",null,1],["select","URI::Generic","ruby/classes/URI/Generic.html#method-i-select","(*components)","<p>Args\n<p><code>components</code> &mdash; Multiple Symbol arguments defined in URI::HTTP.\n\n<p>Description\n",null,1],["select","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-select","( *keys )","<p>If a block is provided, returns a new array containing [key, value] pairs for which the block returns …\n",null,1],["select!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-select-21","(&block)","<p>Equivalent to Hash#keep_if, but returns <code>nil</code> if no changes were made.\n",null,0],["select!","Array","ruby/classes/Array.html#method-i-select-21","()","<p>Calls the block, if given  with each element of <code>self</code>; removes from <code>self</code> those elements for which the …\n",null,1],["select!","ENV","ruby/classes/ENV.html#method-c-select-21","()","<p>Yields each environment variable name and its value as a 2-element Array, deleting each entry for which …\n",null,1],["select!","Hash","ruby/classes/Hash.html#method-i-select-21","()","<p>Returns <code>self</code>, whose entries are those for which the block returns a truthy value:\n\n<pre><code>h = {foo: 0, bar: 1, ...\n</code></pre>\n",null,1],["select!","Set","ruby/classes/Set.html#method-i-select-21","(&block)","<p>Equivalent to Set#keep_if, but returns nil if no changes were\nmade. Returns an enumerator if no block ...\n",null,1],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_all","(arel, name = nil, binds = [], preparable: nil, async: false)","<p>Returns an ActiveRecord::Result instance.\n",null,0],["select_all","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-select_all","(arel, name = nil, binds = [], preparable: nil, async: false)","",null,0],["select_date","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_date","(date = Date.current, options = {}, html_options = {})","<p>Returns a set of HTML select-tags (one for year, month, and day) pre-selected with the <code>date</code>. It’s …\n",null,0],["select_datetime","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_datetime","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of HTML select-tags (one for year, month, day, hour, minute, and second) pre-selected with …\n",null,0],["select_day","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_day","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the days 1 through 31 with the current day selected. The …\n",null,0],["select_hour","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_hour","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the hours 0 through 23 with the current hour selected. …\n",null,0],["select_minute","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_minute","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the minutes 0 through 59 with the current minute selected. …\n",null,0],["select_month","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_month","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the months January through December with the current month …\n",null,0],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_one","(arel, name = nil, binds = [])","<p>Returns a record hash with the column names as keys and column values as values.\n",null,0],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_rows","(arel, name = nil, binds = [])","<p>Returns an array of arrays containing the field values. Order is the same as that returned by <code>columns</code> …\n",null,0],["select_second","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_second","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the seconds 0 through 59 with the current second selected. …\n",null,0],["select_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-select_tag","(name, option_tags = nil, options = {})","<p>Creates a dropdown selection box, or if the <code>:multiple</code> option is set to true, a multiple choice selection …\n",null,0],["select_time","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_time","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of HTML select-tags (one for hour and minute). You can set <code>:time_separator</code> key to format …\n",null,0],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_value","(arel, name = nil, binds = [])","<p>Returns a single value from a record\n",null,0],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_values","(arel, name = nil, binds = [])","<p>Returns an array of the values of the first column in a select:\n\n<pre><code>select_values(&quot;SELECT id FROM companies ...\n</code></pre>\n",null,0],["select_year","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_year","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the five years on each side of the current, which is selected. …\n",null,0],["selector","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-c-selector","()","",null,0],["self","TracePoint","ruby/classes/TracePoint.html#method-i-self","()","<p>Return the trace object during event\n<p>Same as the following, except it returns the correct object (the …\n",null,1],["self_insert","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-self_insert","(key)","",null,1],["self_manager","Bundler","ruby/classes/Bundler.html#method-c-self_manager","()","",null,1],["send","BasicSocket","ruby/classes/BasicSocket.html#method-i-send","(p1, p2, p3 = v3)","<p>send <em>mesg</em> via <em>basicsocket</em>.\n<p><em>mesg</em> should be a string.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* constants. …\n",null,1],["send","Gem::GemcutterUtilities::WebauthnListener::SocketResponder","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/SocketResponder.html#method-i-send","(response)","",null,1],["send","Object","ruby/classes/Object.html#method-i-send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments specified. When the method is identified …\n",null,1],["send","Ractor","ruby/classes/Ractor.html#method-i-send","(obj, move: false)","<p>Send a message to a Ractor’s incoming queue to be accepted by Ractor.receive.\n\n<pre><code>r = Ractor.new do\n  ...\n</code></pre>\n",null,1],["send","UDPSocket","ruby/classes/UDPSocket.html#method-i-send","(p1, p2, p3, p4)","<p>Sends <em>mesg</em> via <em>udpsocket</em>.\n<p><em>flags</em> should be a bitwise OR of Socket::MSG_* constants.\n\n<pre><code>u1 = UDPSocket.new\nu1.bind(&quot;127.0.0.1&quot;, ...\n</code></pre>\n",null,1],["send_async","ActionCable::Connection::Base","rails/classes/ActionCable/Connection/Base.html#method-i-send_async","(method, *arguments)","<p>Invoke a method on the connection asynchronously through the pool of thread workers.\n",null,0],["send_blob_stream","ActiveStorage::Streaming","rails/classes/ActiveStorage/Streaming.html#method-i-send_blob_stream","(blob, disposition: nil)","<p>Stream the blob from storage directly to the response. The disposition can be controlled by setting  …\n",null,0],["send_data","ActionController::DataStreaming","rails/classes/ActionController/DataStreaming.html#method-i-send_data","(data, options = {})","<p>Sends the given binary data to the browser. This method is similar to <code>render plain: data</code>, but also allows …\n",null,0],["send_data","ActionController::Instrumentation","rails/classes/ActionController/Instrumentation.html#method-i-send_data","(data, options = {})","",null,0],["send_data","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-send_data","(event)","",null,0],["send_early_hints","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-send_early_hints","(links)","<p>Early Hints is an HTTP/2 status code that indicates hints to help a client start making preparations …\n",null,0],["send_file","ActionController::DataStreaming","rails/classes/ActionController/DataStreaming.html#method-i-send_file","(path, options = {})","<p>Sends the file. This uses a server-appropriate method (such as <code>X-Sendfile</code>) via the <code>Rack::Sendfile</code> middleware. …\n",null,0],["send_file","ActionController::Instrumentation","rails/classes/ActionController/Instrumentation.html#method-i-send_file","(path, options = {})","",null,0],["send_file","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-send_file","(event)","",null,0],["send_file","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-send_file","(path)","<p>Send the file stored at <code>path</code> as the response body.\n",null,0],["send_gem","Gem::Commands::PushCommand","ruby/classes/Gem/Commands/PushCommand.html#method-i-send_gem","(name)","",null,1],["send_io","UNIXSocket","ruby/classes/UNIXSocket.html#method-i-send_io","(p1)","<p>Sends <em>io</em> as file descriptor passing.\n\n<pre><code>s1, s2 = UNIXSocket.pair\n\ns1.send_io STDOUT\nstdout = s2.recv_io\n ...\n</code></pre>\n",null,1],["send_request","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-send_request","(name, path, data = nil, header = nil)","<p>Sends an HTTP request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["send_stream","ActionController::Live","rails/classes/ActionController/Live.html#method-i-send_stream","(filename:, disposition: \"attachment\", type: nil)","<p>Sends a stream to the browser, which is helpful when you’re generating exports or other running data …\n",null,0],["sender","IRB::Frame","ruby/classes/IRB/Frame.html#method-c-sender","()","<p>Returns the binding context of the caller from the last frame initialized\n",null,1],["sending!","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-sending-21","()","",null,0],["sending?","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-sending-3F","()","",null,0],["sending_file=","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-sending_file-3D","(v)","",null,0],["sendmsg","BasicSocket","ruby/classes/BasicSocket.html#method-i-sendmsg","(mesg, flags = 0, dest_sockaddr = nil, *controls)","<p>sendmsg sends a message using sendmsg(2) system call in blocking manner.\n<p><em>mesg</em> is a string to send.\n<p><em>flags</em> …\n",null,1],["sendmsg_nonblock","BasicSocket","ruby/classes/BasicSocket.html#method-i-sendmsg_nonblock","(mesg, flags = 0, dest_sockaddr = nil, *controls, exception: true)","<p>sendmsg_nonblock sends a message using sendmsg(2) system call in non-blocking manner.\n<p>It is similar to …\n",null,1],["sent!","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-sent-21","()","",null,0],["sent?","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-sent-3F","()","",null,0],["separator","OptionParser","ruby/classes/OptionParser.html#method-i-separator","(string)","<p>Add separator in summary.\n",null,1],["seplist","PP::PPMethods","ruby/classes/PP/PPMethods.html#method-i-seplist","(list, sep=nil, iter_method=:each)","<p>Adds a separated list. The list is separated by comma with breakable space, by default.\n<p>#seplist iterates …\n",null,1],["seq=","Psych::Coder","ruby/classes/Psych/Coder.html#method-i-seq-3D","(list)","<p>Emit a sequence of <code>list</code>\n",null,1],["sequence?","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-sequence-3F","()","",null,1],["sequence?","Psych::Nodes::Sequence","ruby/classes/Psych/Nodes/Sequence.html#method-i-sequence-3F","()","",null,1],["sequence_name","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name","()","",null,0],["sequence_name=","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name-3D","(value)","<p>Sets the name of the sequence to use when generating ids to the given value, or (if the value is <code>nil</code> …\n",null,0],["serial","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-serial","","",null,0],["serial","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-serial","()","<p>Returns the serial number of the certificate for which status is being requested.\n",null,1],["serial","OpenSSL::PKCS7::RecipientInfo","ruby/classes/OpenSSL/PKCS7/RecipientInfo.html#method-i-serial","()","",null,1],["serial","OpenSSL::PKCS7::SignerInfo","ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-serial","()","",null,1],["serial","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-serial","()","",null,1],["serial","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-serial","()","",null,1],["serial=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-serial-3D","(p1)","",null,1],["serial=","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-serial-3D","(p1)","",null,1],["serial_number","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-serial_number","()","<p>Returns serial number of the timestamp token. This value shall never be the same for two timestamp tokens …\n",null,1],["serial_sequence","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-serial_sequence","(table, column)","",null,0],["serializable?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-serializable-3F","(value)","<p>Returns true if this type can convert <code>value</code> to a type that is usable by the database.  For example a …\n",null,0],["serializable?","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-serializable-3F","(value)","<p>Returns true if this type can convert <code>value</code> to a type that is usable by the database.  For example a …\n",null,0],["serializable_hash","ActiveModel::Serialization","rails/classes/ActiveModel/Serialization.html#method-i-serializable_hash","(options = nil)","<p>Returns a serialized hash of your object.\n\n<pre><code>class Person\n  include ActiveModel::Serialization\n\n  attr_accessor ...\n</code></pre>\n",null,0],["serializable_hash","ActiveRecord::Serialization","rails/classes/ActiveRecord/Serialization.html#method-i-serializable_hash","(options = nil)","",null,0],["serialize","ActiveJob::Arguments","rails/classes/ActiveJob/Arguments.html#method-i-serialize","(arguments)","<p>Serializes a set of arguments. Intrinsic types that can safely be serialized without mutation are returned …\n",null,0],["serialize","ActiveJob::Core","rails/classes/ActiveJob/Core.html#method-i-serialize","()","<p>Returns a hash with the job data that can safely be passed to the queuing adapter.\n",null,0],["serialize","ActiveJob::Serializers::ObjectSerializer","rails/classes/ActiveJob/Serializers/ObjectSerializer.html#method-i-serialize","(hash)","<p>Serializes an argument to a JSON primitive type.\n",null,0],["serialize","ActiveJob::Serializers::RangeSerializer","rails/classes/ActiveJob/Serializers/RangeSerializer.html#method-i-serialize","(range)","",null,0],["serialize","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-serialize","(value)","<p>Casts a value from the ruby type to a type that the database knows how to understand. The returned value …\n",null,0],["serialize","ActiveModel::Type::Value","rails/classes/ActiveModel/Type/Value.html#method-i-serialize","(value)","<p>Casts a value from the ruby type to a type that the database knows how to understand. The returned value …\n",null,0],["serialize","ActiveRecord::AttributeMethods::Serialization::ClassMethods","rails/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html#method-i-serialize","(attr_name, class_name_or_coder = Object, **options)","<p>If you have an attribute that needs to be saved to the database as a serialized object, and retrieved …\n",null,0],["serialize","ActiveRecord::Encryption::EncryptedAttributeType","rails/classes/ActiveRecord/Encryption/EncryptedAttributeType.html#method-i-serialize","(value)","",null,0],["serialize","ActiveRecord::Encryption::ExtendedDeterministicQueries::ExtendedEncryptableType","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/ExtendedEncryptableType.html#method-i-serialize","(data)","",null,0],["serialize","ActiveRecord::Type::Json","rails/classes/ActiveRecord/Type/Json.html#method-i-serialize","(value)","",null,0],["serialize","ActiveRecord::Type::Time","rails/classes/ActiveRecord/Type/Time.html#method-i-serialize","(value)","",null,0],["serialize?","ActiveJob::Serializers::ObjectSerializer","rails/classes/ActiveJob/Serializers/ObjectSerializer.html#method-i-serialize-3F","(argument)","<p>Determines if an argument should be serialized by a serializer.\n",null,0],["served_url","Rails::Server","rails/classes/Rails/Server.html#method-i-served_url","()","",null,0],["server","ActionCable","rails/classes/ActionCable.html#method-i-server","()","<p>Singleton instance of the server\n",null,0],["server","Rails::Application","rails/classes/Rails/Application.html#method-i-server","(&blk)","<p>Sends any server called in the instance of a new application up to the <code>server</code> method defined in Rails::Railtie …\n",null,0],["server","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-server","(&blk)","",null,0],["server_port","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-server_port","()","<p>Returns the requested port, such as 8080, based on SERVER_PORT\n\n<pre><code>req = ActionDispatch::Request.new &#39;SERVER_PORT&#39; ...\n</code></pre>\n",null,0],["server_software","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-server_software","()","<p>Returns the lowercase name of the HTTP server software.\n",null,0],["service","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-service","()","<p>Returns an instance of service, which can be configured globally or per attachment\n",null,0],["service","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-i-service","(name)","",null,1],["service_delete","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_delete","(event)","",null,0],["service_delete_prefixed","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_delete_prefixed","(event)","",null,0],["service_download","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_download","(event)","",null,0],["service_exist","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_exist","(event)","",null,0],["service_headers_for_direct_upload","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-service_headers_for_direct_upload","()","<p>Returns a Hash of headers for <code>service_url_for_direct_upload</code> requests.\n",null,0],["service_mirror","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_mirror","(event)","",null,0],["service_mode?","Resolv::DNS::Resource::IN::ServiceBinding","ruby/classes/Resolv/DNS/Resource/IN/ServiceBinding.html#method-i-service_mode-3F","()","<p>Whether this RR is in ServiceMode.\n",null,1],["service_streaming_download","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_streaming_download","(event)","",null,0],["service_upload","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_upload","(event)","",null,0],["service_url","ActiveStorage::LogSubscriber","rails/classes/ActiveStorage/LogSubscriber.html#method-i-service_url","(event)","",null,0],["service_url_for_direct_upload","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-service_url_for_direct_upload","(expires_in: ActiveStorage.service_urls_expire_in)","<p>Returns a URL that can be used to directly upload a file for this blob on the service. This URL is intended …\n",null,0],["session","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-session","()","<p>Returns the SSLSession object currently used, or nil if the session is not established.\n",null,1],["session=","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-session-3D","(p1)","<p>Sets the Session to be used when the connection is established.\n",null,1],["session_add","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_add","(p1)","<p>Adds <em>session</em> to the session cache.\n",null,1],["session_auth=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-session_auth-3D","(user)","<p>Set the authorized user for this session\n",null,0],["session_cache_mode","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_mode","()","<p>The current session cache mode.\n",null,1],["session_cache_mode=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_mode-3D","(p1)","<p>Sets the SSL session cache mode.  Bitwise-or together the desired SESSION_CACHE_* constants to set.  …\n",null,1],["session_cache_size","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_size","()","<p>Returns the current session cache size.  Zero is used to represent an unlimited cache size.\n",null,1],["session_cache_size=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_size-3D","(p1)","<p>Sets the session cache size.  Returns the previously valid session cache size.  Zero is used to represent …\n",null,1],["session_cache_stats","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_cache_stats","()","<p>Returns a Hash containing the following keys:\n<p>:accept &mdash; Number of started SSL/TLS handshakes in server mode …\n",null,1],["session_options=","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-session_options-3D","(options)","",null,0],["session_remove","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-session_remove","(p1)","<p>Removes <em>session</em> from the session cache.\n",null,1],["session_reused?","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-session_reused-3F","()","<p>Returns <code>true</code> if a reused session was negotiated during the handshake.\n",null,1],["session_store","Rails::Application::Configuration","rails/classes/Rails/Application/Configuration.html#method-i-session_store","(new_session_store = nil, **options)","<p>Specifies what class to use to store the session. Possible values are <code>:cookie_store</code>, <code>:mem_cache_store</code> …\n",null,0],["set","ActiveJob::Core::ClassMethods","rails/classes/ActiveJob/Core/ClassMethods.html#method-i-set","(options = {})","<p>Creates a job preconfigured with the given options. You can call perform_later with the job arguments …\n",null,0],["set","ActiveSupport::CurrentAttributes","rails/classes/ActiveSupport/CurrentAttributes.html#method-i-set","(set_attributes)","<p>Expose one or more attributes within a block. Old values are returned after the block concludes. Example …\n",null,0],["set","IPAddr","ruby/classes/IPAddr.html#method-i-set","(addr, *family)","<p>Set +@addr+, the internal stored ip address, to given <code>addr</code>. The parameter <code>addr</code> is validated using the …\n",null,1],["set_api_key","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-set_api_key","(host, api_key)","<p>Set a specific host’s API key to <code>api_key</code>\n",null,1],["set_api_key","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-set_api_key","(host, key)","<p>Returns true when the user has enabled multifactor authentication from <code>response</code> text and no otp provided …\n",null,1],["set_application_directory!","Rails::Command::Actions","rails/classes/Rails/Command/Actions.html#method-i-set_application_directory-21","()","<p>Change to the application’s path if there is no <code>config.ru</code> file in current directory. This allows …\n",null,0],["set_attributes","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-set_attributes","(val)","<p>Private setter for attributes <code>val</code>.\n",null,1],["set_backtrace","Exception","ruby/classes/Exception.html#method-i-set_backtrace","(p1)","<p>Sets the backtrace information associated with <code>exc</code>. The <code>backtrace</code> must be an array of String objects …\n",null,1],["set_backtrace","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-i-set_backtrace","(array)","",null,1],["set_bit!","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-set_bit-21","(p1)","",null,1],["set_callback","ActiveSupport::Callbacks::ClassMethods","rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-set_callback","(name, *filter_list, &block)","<p>Install a callback for the given event.\n\n<pre><code>set_callback :save, :before, :before_method\nset_callback :save, ...\n</code></pre>\n",null,0],["set_constant_visibility_for","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-set_constant_visibility_for","(names, visibility)","<p>Given an array <code>names</code> of constants, set the visibility of each constant to <code>visibility</code>\n",null,1],["set_content_type","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-i-set_content_type","(m, user_content_type, class_default)","<p>Used by #mail to set the content type of the message.\n<p>It will use the given <code>user_content_type</code>, or multipart …\n",null,0],["set_content_type","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-set_content_type","(type, params = {})","<p>Sets the value of field <code>&#39;Content-Type&#39;</code>; returns the new value; see Content-Type request header …\n",null,1],["set_context","ActiveSupport::ErrorReporter","rails/classes/ActiveSupport/ErrorReporter.html#method-i-set_context","(...)","<p>Update the execution context that is accessible to error subscribers\n\n<pre><code>Rails.error.set_context(section: ...\n</code></pre>\n",null,0],["set_crt_params","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-set_crt_params","(p1, p2, p3)","<p>Sets <em>dmp1</em>, <em>dmq1</em>, <em>iqmp</em> for the RSA instance. They are calculated by <code>d mod (p - 1)</code>, <code>d mod (q - 1)</code> and  …\n",null,1],["set_ctypes","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-i-set_ctypes","(types)","<p>Calculates the offsets and sizes for the given <code>types</code> in the struct.\n",null,1],["set_ctypes","Fiddle::CUnionEntity","ruby/classes/Fiddle/CUnionEntity.html#method-i-set_ctypes","(types)","<p>Calculate the necessary offset and for each union member with the given <code>types</code>\n",null,1],["set_current_section","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-set_current_section","(title, comment)","<p>Sets the current section to a section with <code>title</code>.  See also #add_section\n",null,1],["set_cursor_pos","Reline::LineEditor::Dialog","ruby/classes/Reline/LineEditor/Dialog.html#method-i-set_cursor_pos","(col, row)","",null,1],["set_cursor_pos","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-set_cursor_pos","(col, row)","",null,1],["set_debug_output","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-set_debug_output","(output)","<p><strong>WARNING</strong> This method opens a serious security hole. Never use this method in production code.\n<p>Sets the …\n",null,1],["set_default","OpenSSL::Engine","ruby/classes/OpenSSL/Engine.html#method-i-set_default","(p1)","<p>Set the defaults for this engine with the given <em>flag</em>.\n<p>These flags are used to control combinations of …\n",null,1],["set_default_key_bindings","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-set_default_key_bindings","(config, allow_terminfo: true)","",null,1],["set_default_key_bindings","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-set_default_key_bindings","(_)","",null,1],["set_default_key_bindings","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-set_default_key_bindings","(config)","",null,1],["set_default_key_bindings_ansi_cursor","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-set_default_key_bindings_ansi_cursor","(config)","",null,1],["set_default_key_bindings_comprehensive_list","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-set_default_key_bindings_comprehensive_list","(config)","",null,1],["set_default_key_bindings_terminfo","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-set_default_key_bindings_terminfo","(config)","",null,1],["set_default_paths","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-set_default_paths","()","<p>Configures <em>store</em> to look up CA certificates from the system default certificate store as needed basis. …\n",null,1],["set_dialog","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-set_dialog","(dialog)","",null,1],["set_dictionary","Zlib::Deflate","ruby/classes/Zlib/Deflate.html#method-i-set_dictionary","(p1)","<p>Sets the preset dictionary and returns <code>string</code>. This method is available just only after Zlib::Deflate.new …\n",null,1],["set_dictionary","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-i-set_dictionary","(p1)","<p>Sets the preset dictionary and returns <code>string</code>.  This method is available just only after a Zlib::NeedDict …\n",null,1],["set_dn","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-set_dn","(val)","<p>Private setter for dn <code>val</code>.\n",null,1],["set_encoding","ARGF","ruby/classes/ARGF.html#method-i-set_encoding","(*args)","<p>If single argument is specified, strings read from ARGF are tagged with the encoding specified.\n<p>If two …\n",null,1],["set_encoding","IO","ruby/classes/IO.html#method-i-set_encoding","(p1, p2 = v2, p3 = {})","<p>See Encodings.\n<p>Argument <code>ext_enc</code>, if given, must be an Encoding object or a String with the encoding name; …\n",null,1],["set_encoding","StringIO","ruby/classes/StringIO.html#method-i-set_encoding","(p1, p2 = v2, p3 = {})","<p>Specify the encoding of the StringIO as <em>ext_enc</em>. Use the default external encoding if <em>ext_enc</em> is nil. …\n",null,1],["set_encoding_by_bom","IO","ruby/classes/IO.html#method-i-set_encoding_by_bom","()","<p>If the stream begins with a BOM (byte order marker), consumes the BOM and sets the external encoding …\n",null,1],["set_encoding_by_bom","StringIO","ruby/classes/StringIO.html#method-i-set_encoding_by_bom","()","",null,1],["set_environment","Rails::Server","rails/classes/Rails/Server.html#method-i-set_environment","()","",null,0],["set_environment!","Rails::Console","rails/classes/Rails/Console.html#method-i-set_environment-21","()","",null,0],["set_eoutvar","ERB","ruby/classes/ERB.html#method-i-set_eoutvar","(compiler, eoutvar = '_erbout')","<p>Can be used to set <em>eoutvar</em> as described in ERB::new.  It’s probably easier to just use the constructor …\n",null,1],["set_eoutvar","RDoc::ERBIO","ruby/classes/RDoc/ERBIO.html#method-i-set_eoutvar","(compiler, io_variable)","<p>Instructs <code>compiler</code> how to write to <code>io_variable</code>\n",null,1],["set_eoutvar","RDoc::ERBPartial","ruby/classes/RDoc/ERBPartial.html#method-i-set_eoutvar","(compiler, eoutvar = '_erbout')","<p>Overrides <code>compiler</code> startup to set the <code>eoutvar</code> to an empty string only if it isn’t already set.\n",null,1],["set_error","GetoptLong","ruby/classes/GetoptLong.html#method-i-set_error","(type, message)","<p>Set an error (a protected method).\n",null,1],["set_extensions","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-set_extensions","(val)","<p>Private setter for extensions <code>val</code>.\n",null,1],["set_factors","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-set_factors","(p1, p2)","<p>Sets <em>p</em>, <em>q</em> for the RSA instance.\n",null,1],["set_filter","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-set_filter","(val)","<p>Private setter for filter <code>val</code>.\n",null,1],["set_flags","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-set_flags","(p1)","<p>Enables the flags on the BN object. Currently, the flags argument can contain zero of OpenSSL::BN::CONSTTIME …\n",null,1],["set_form","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-set_form","(params, enctype='application/x-www-form-urlencoded', formopt={})","<p>Stores form data to be used in a <code>POST</code> or <code>PUT</code> request.\n<p>The form data given in <code>params</code> consists of zero or …\n",null,1],["set_form_data","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-set_form_data","(params, sep = '&')","<p>Sets the request body to a URL-encoded string derived from argument <code>params</code>, and sets request header field …\n",null,1],["set_generator","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-set_generator","(p1, p2, p3)","<p>Sets the curve parameters. <em>generator</em> must be an instance of EC::Point that is on the curve. <em>order</em> and …\n",null,1],["set_header","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-set_header","(key, v)","",null,0],["set_headers","URI::MailTo","ruby/classes/URI/MailTo.html#method-i-set_headers","(v)","<p>Private setter for headers <code>v</code>.\n",null,1],["set_host","URI::File","ruby/classes/URI/File.html#method-i-set_host","(v)","<p>Protected setter for the host component <code>v</code>.\n<p>See also URI::Generic.host=.\n",null,1],["set_host","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_host","(v)","<p>Protected setter for the host component <code>v</code>.\n<p>See also URI::Generic.host=.\n",null,1],["set_key","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-set_key","(p1, p2)","<p>Sets <em>pub_key</em> and <em>priv_key</em> for the DH instance. <em>priv_key</em> may be <code>nil</code>.\n",null,1],["set_key","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-set_key","(p1, p2)","<p>Sets <em>pub_key</em> and <em>priv_key</em> for the DSA instance. <em>priv_key</em> may be <code>nil</code>.\n",null,1],["set_key","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-set_key","(p1, p2, p3)","<p>Sets <em>n</em>, <em>e</em>, <em>d</em> for the RSA instance.\n",null,1],["set_key","Reline::LineEditor::DialogProcScope","ruby/classes/Reline/LineEditor/DialogProcScope.html#method-i-set_key","(key)","",null,1],["set_last_value","IRB::Context","ruby/classes/IRB/Context.html#method-i-set_last_value","(value)","<p>Sets the return value from the last statement evaluated in this context to #last_value.\n",null,1],["set_mark","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-set_mark","(key)","",null,1],["set_member_mappings_for_resource","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-set_member_mappings_for_resource","()","",null,0],["set_migration_assigns!","Rails::Generators::Migration","rails/classes/Rails/Generators/Migration.html#method-i-set_migration_assigns-21","(destination)","",null,0],["set_opaque","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_opaque","(v)","<p>Protected setter for the opaque component <code>v</code>.\n<p>See also URI::Generic.opaque=.\n",null,1],["set_option","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-i-set_option","(opt, eq)","",null,1],["set_options","GetoptLong","ruby/classes/GetoptLong.html#method-i-set_options","(*arguments)","<p>Replaces existing options with those given by <code>arguments</code>, which have the same form as the arguments to …\n",null,1],["set_params","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-set_params","(params={})","<p>Sets saner defaults optimized for the use with HTTP-like protocols.\n<p>If a Hash <em>params</em> is given, the parameters …\n",null,1],["set_password","URI::File","ruby/classes/URI/File.html#method-i-set_password","(v)","<p>do nothing\n",null,1],["set_password","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_password","(v)","<p>Protected setter for the password component <code>v</code>.\n<p>See also URI::Generic.password=.\n",null,1],["set_pasting_state","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-set_pasting_state","(in_pasting)","",null,1],["set_path","URI::FTP","ruby/classes/URI/FTP.html#method-i-set_path","(v)","<p>Private setter for the path of the URI::FTP.\n",null,1],["set_path","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_path","(v)","<p>Protected setter for the path component <code>v</code>.\n<p>See also URI::Generic.path=.\n",null,1],["set_port","URI::File","ruby/classes/URI/File.html#method-i-set_port","(v)","<p>do nothing\n",null,1],["set_port","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_port","(v)","<p>Protected setter for the port component <code>v</code>.\n<p>See also URI::Generic.port=.\n",null,1],["set_pqg","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-set_pqg","(p1, p2, p3)","<p>Sets <em>p</em>, <em>q</em>, <em>g</em> to the DH instance.\n",null,1],["set_pqg","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-set_pqg","(p1, p2, p3)","<p>Sets <em>p</em>, <em>q</em>, <em>g</em> to the DSA instance.\n",null,1],["set_range","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-set_range","(r, e = nil)","<p>Sets the value for field <code>&#39;Range&#39;</code>; see Range request header:\n<p>With argument <code>length</code>:\n\n<pre><code>req = Net::HTTP::Get.new(uri) ...\n</code></pre>\n",null,1],["set_scheduler","Fiber","ruby/classes/Fiber.html#method-c-set_scheduler","(p1)","<p>Sets the Fiber scheduler for the current thread. If the scheduler is set, non-blocking fibers (created …\n",null,1],["set_scheme","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_scheme","(v)","<p>Protected setter for the scheme component <code>v</code>.\n<p>See also URI::Generic.scheme=.\n",null,1],["set_scope","URI::LDAP","ruby/classes/URI/LDAP.html#method-i-set_scope","(val)","<p>Private setter for scope <code>val</code>.\n",null,1],["set_screen_size","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-set_screen_size","(rows, columns)","",null,1],["set_screen_size","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-set_screen_size","(rows, columns)","",null,1],["set_screen_size","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-set_screen_size","(rows, columns)","",null,1],["set_signal_handlers","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-set_signal_handlers","()","",null,1],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-set_standard_conforming_strings","()","",null,0],["set_string","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-set_string","(*args)","<p>Efficiently copy from a source String into the buffer, at <code>offset</code> using <code>memcpy</code>.\n\n<pre><code>buf = IO::Buffer.new(8) ...\n</code></pre>\n",null,1],["set_temporary_name","Module","ruby/classes/Module.html#method-i-set_temporary_name","(p1)","<p>Sets the temporary name of the module. This name is reflected in introspection of the module and the …\n",null,1],["set_to","URI::MailTo","ruby/classes/URI/MailTo.html#method-i-set_to","(v)","<p>Private setter for to <code>v</code>.\n",null,1],["set_to_infinity!","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-set_to_infinity-21","()","",null,1],["set_trace_func","Kernel","ruby/classes/Kernel.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> as the handler for tracing, or disables tracing if the parameter is <code>nil</code>.\n<p><strong>Note:</strong> this method …\n",null,1],["set_trace_func","Thread","ruby/classes/Thread.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> on <em>thr</em> as the handler for tracing, or disables tracing if the parameter is <code>nil</code>.\n<p>See  …\n",null,1],["set_typecode","URI::FTP","ruby/classes/URI/FTP.html#method-i-set_typecode","(v)","<p>Private setter for the typecode <code>v</code>.\n<p>See also URI::FTP.typecode=.\n",null,1],["set_user","URI::File","ruby/classes/URI/File.html#method-i-set_user","(v)","<p>do nothing\n",null,1],["set_user","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_user","(v)","<p>Protected setter for the user component <code>v</code>.\n<p>See also URI::Generic.user=.\n",null,1],["set_userinfo","URI::File","ruby/classes/URI/File.html#method-i-set_userinfo","(v)","<p>do nothing\n",null,1],["set_userinfo","URI::Generic","ruby/classes/URI/Generic.html#method-i-set_userinfo","(user, password = nil)","<p>Protected setter for the <code>user</code> component, and <code>password</code> if available (with validation).\n<p>See also URI::Generic.userinfo= …\n",null,1],["set_value","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-set_value","(p1, p2, p3)","<p>Write to a buffer a <code>value</code> of <code>type</code> at <code>offset</code>. <code>type</code> should be one of symbols described in #get_value.\n\n<pre><code>buffer ...\n</code></pre>\n",null,1],["set_values","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-set_values","(p1, p2, p3)","<p>Write <code>values</code> of <code>buffer_types</code> at <code>offset</code> to the buffer. <code>buffer_types</code> should be an array of symbols as described …\n",null,1],["set_visibility_for","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-set_visibility_for","(methods, visibility, singleton = false)","<p>Given an array <code>methods</code> of method names, set the visibility of each to <code>visibility</code>\n",null,1],["set_winch_handler","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-set_winch_handler","(&handler)","",null,1],["set_winch_handler","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-set_winch_handler","(&handler)","",null,1],["set_winch_handler","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-set_winch_handler","(&handler)","",null,1],["setbyte","String","ruby/classes/String.html#method-i-setbyte","(p1, p2)","<p>Sets the byte at zero-based <code>index</code> to <code>integer</code>; returns <code>integer</code>:\n\n<pre><code>s = &#39;abcde&#39;      # =&gt; &quot;abcde&quot;\ns.setbyte(0, ...\n</code></pre>\n",null,1],["setegid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setegid","(p1)","<p>Set the effective group ID of the calling process to <em>group</em>.  Not available on all platforms.\n",null,1],["seteuid","Process::Sys","ruby/classes/Process/Sys.html#method-c-seteuid","(p1)","<p>Set the effective user ID of the calling process to <em>user</em>.  Not available on all platforms.\n",null,1],["setgid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setgid","(p1)","<p>Set the group ID of the current process to <em>group</em>. Not available on all platforms.\n",null,1],["setgid?","File","ruby/classes/File.html#method-c-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n<p><em>file_name</em> can be an IO object.\n",null,1],["setgid?","File::Stat","ruby/classes/File/Stat.html#method-i-setgid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-group-id permission bit set, <code>false</code> if it doesn’t or if the operating …\n",null,1],["setgid?","FileTest","ruby/classes/FileTest.html#method-i-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n<p><em>file_name</em> can be an IO object.\n",null,1],["setgid?","Pathname","ruby/classes/Pathname.html#method-i-setgid-3F","()","<p>See FileTest.setgid?.\n",null,1],["setgrent","Etc","ruby/classes/Etc.html#method-c-setgrent","()","<p>Resets the process of reading the <code>/etc/group</code> file, so that the next call to ::getgrent will return the …\n",null,1],["setpgid","Process","ruby/classes/Process.html#method-c-setpgid","(p1, p2)","<p>Sets the process group ID for the process given by process ID <code>pid</code> to <code>pgid</code>.\n<p>Not available on all platforms. …\n",null,1],["setpgrp","Process","ruby/classes/Process.html#method-c-setpgrp","()","<p>Equivalent to <code>setpgid(0, 0)</code>.\n<p>Not available on all platforms.\n",null,1],["setpriority","Process","ruby/classes/Process.html#method-c-setpriority","(p1, p2, p3)","<p>See Process.getpriority.\n<p>Examples:\n\n<pre><code>Process.setpriority(Process::PRIO_USER, 0, 19)    # =&gt; 0\nProcess.setpriority(Process::PRIO_PROCESS, ...\n</code></pre>\n",null,1],["setproctitle","Process","ruby/classes/Process.html#method-c-setproctitle","(p1)","<p>Sets the process title that appears on the ps(1) command.  Not necessarily effective on all platforms. …\n",null,1],["setproperty","WIN32OLE","ruby/classes/WIN32OLE.html#method-i-setproperty","(*args)","<p>Sets property of OLE object. When you want to set property with argument, you can use this method.\n\n<pre><code>excel ...\n</code></pre>\n",null,1],["setpwent","Etc","ruby/classes/Etc.html#method-c-setpwent","()","<p>Resets the process of reading the <code>/etc/passwd</code> file, so that the next call to ::getpwent will return the …\n",null,1],["setregid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setregid","(p1, p2)","<p>Sets the (group) real and/or effective group IDs of the current process to <em>rid</em> and <em>eid</em>, respectively. …\n",null,1],["setresgid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setresgid","(p1, p2, p3)","<p>Sets the (group) real, effective, and saved user IDs of the current process to <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,1],["setresuid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setresuid","(p1, p2, p3)","<p>Sets the (user) real, effective, and saved user IDs of the current process to <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,1],["setreuid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setreuid","(p1, p2)","<p>Sets the (user) real and/or effective user IDs of the current process to <em>rid</em> and <em>eid</em>, respectively.  …\n",null,1],["setrgid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setrgid","(p1)","<p>Set the real group ID of the calling process to <em>group</em>. Not available on all platforms.\n",null,1],["setrlimit","Process","ruby/classes/Process.html#method-c-setrlimit","(*args)","<p>Sets limits for the current process for the given <code>resource</code> to <code>cur_limit</code> (soft limit) and <code>max_limit</code> (hard …\n",null,1],["setruid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setruid","(p1)","<p>Set the real user ID of the calling process to <em>user</em>. Not available on all platforms.\n",null,1],["setsid","Process","ruby/classes/Process.html#method-c-setsid","()","<p>Establishes the current process as a new session and process group leader, with no controlling tty; returns …\n",null,1],["setsockopt","BasicSocket","ruby/classes/BasicSocket.html#method-i-setsockopt","(p1, p2, p3)","<p>Sets a socket option. These are protocol and system specific, see your local system documentation for …\n",null,1],["setsockopt","OpenSSL::SSL::SocketForwarder","ruby/classes/OpenSSL/SSL/SocketForwarder.html#method-i-setsockopt","(level, optname, optval)","",null,1],["settings","Bundler","ruby/classes/Bundler.html#method-c-settings","()","",null,1],["setuid","Process::Sys","ruby/classes/Process/Sys.html#method-c-setuid","(p1)","<p>Set the user ID of the current process to <em>user</em>. Not available on all platforms.\n",null,1],["setuid?","File","ruby/classes/File.html#method-c-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n<p><em>file_name</em> can be an IO object.\n",null,1],["setuid?","File::Stat","ruby/classes/File/Stat.html#method-i-setuid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-user-id permission bit set, <code>false</code> if it doesn’t or if the operating …\n",null,1],["setuid?","FileTest","ruby/classes/FileTest.html#method-i-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n<p><em>file_name</em> can be an IO object.\n",null,1],["setuid?","Pathname","ruby/classes/Pathname.html#method-i-setuid-3F","()","<p>See FileTest.setuid?.\n",null,1],["setup","Bundler","ruby/classes/Bundler.html#method-c-setup","(*groups)","<p>Turns on the Bundler runtime. After <code>Bundler.setup</code> call, all <code>load</code> or <code>require</code> of the gems would be allowed …\n",null,1],["setup","Coverage","ruby/classes/Coverage.html#method-c-setup","(p1 = v1)","<p>Set up the coverage measurement.\n<p>Note that this method does not start the measurement itself. Use Coverage.resume …\n",null,1],["setup","IRB::Debug","ruby/classes/IRB/Debug.html#method-c-setup","(irb)","",null,1],["setup","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-setup","()","<p>This method is called automatically when a new SSLSocket is created. However, it is not thread-safe and …\n",null,1],["setup","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-setup","()","<p>Prepares the spec for documentation generation\n",null,1],["setup","RDoc::RubygemsHook","ruby/classes/RDoc/RubygemsHook.html#method-i-setup","()","<p>Prepares the spec for documentation generation\n",null,1],["setup.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/bin/setup_tt.html","","<p>require “fileutils”\n<p># path to your application root. APP_ROOT = File.expand_path(“..”, …\n",null,0],["setup_certificate","DRb::DRbSSLSocket::SSLConfig","ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-setup_certificate","()","<p>Ensures that :SSLCertificate and :SSLPrivateKey have been provided or that a new certificate is generated …\n",null,1],["setup_generator","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-setup_generator","(generator_name = @generator_name)","<p>Set up an output generator for the named <code>generator_name</code>.\n<p>If the found generator responds to :setup_options …\n",null,1],["setup_horo_variables","Rails::API::Task","rails/classes/Rails/API/Task.html#method-i-setup_horo_variables","()","",null,0],["setup_initial_database_yaml","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-setup_initial_database_yaml","()","",null,0],["setup_interrupt","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-setup_interrupt","()","",null,1],["setup_output_dir","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-setup_output_dir","(dir, force)","<p>Create an output dir if it doesn’t exist. If it does exist, but doesn’t contain the flag file …\n",null,1],["setup_signer","Gem::Package","ruby/classes/Gem/Package.html#method-i-setup_signer","(signer_options: {})","<p>Prepares the gem for signing and checksum generation.  If a signing certificate and key are not present …\n",null,1],["setup_ssl_context","DRb::DRbSSLSocket::SSLConfig","ruby/classes/DRb/DRbSSLSocket/SSLConfig.html#method-i-setup_ssl_context","()","<p>Establish the OpenSSL::SSL::SSLContext with the configuration parameters provided.\n",null,1],["setupterm","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-setupterm","(term, fildes)","",null,1],["sev_threshold","Logger","ruby/classes/Logger.html#method-i-sev_threshold","()","",null,1],["sev_threshold=","Logger","ruby/classes/Logger.html#method-i-sev_threshold-3D","(severity)","",null,1],["sexp","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-c-sexp","(source)","<p>This is a convenience method that runs the SexpBuilderPP subclass parser.\n",null,1],["sexp","Ripper","ruby/classes/Ripper.html#method-c-sexp","(src, filename = '-', lineno = 1, raise_errors: false)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and create S-exp tree. Returns more readable tree rather than Ripper.sexp_raw …\n",null,1],["sexp_raw","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-c-sexp_raw","(source)","<p>This is a convenience method that runs the SexpBuilder subclass parser.\n",null,1],["sexp_raw","Ripper","ruby/classes/Ripper.html#method-c-sexp_raw","(src, filename = '-', lineno = 1, raise_errors: false)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and create S-exp tree. This method is mainly for developer use. The <code>filename</code> …\n",null,1],["shallow","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow","()","",null,0],["shallow?","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow-3F","()","",null,0],["shard","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-shard","()","<p>The shard (e.g. <code>:default</code>) for the current connection. In a non-sharded application, <code>:default</code> is returned. …\n",null,0],["shard_swapping_prohibited?","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-shard_swapping_prohibited-3F","()","<p>Determine whether or not shard swapping is currently prohibited\n",null,0],["shareable?","Ractor","ruby/classes/Ractor.html#method-c-shareable-3F","(obj)","<p>Checks if the object is shareable by ractors.\n\n<pre><code>Ractor.shareable?(1)            #=&gt; true -- numbers and ...\n</code></pre>\n",null,1],["shared?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-shared-3F","()","<p>If the buffer is <em>shared</em>, meaning it references memory that can be shared with other processes (and thus …\n",null,1],["sharing","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-i-sharing","()","<p>Execute the supplied block while holding the Share lock.\n",null,0],["sharing_detection","PP","ruby/classes/PP.html#method-c-sharing_detection","()","<p>Returns the sharing detection flag as a boolean value. It is false (nil) by default.\n",null,1],["sharing_detection=","PP","ruby/classes/PP.html#method-c-sharing_detection-3D","(b)","<p>Sets the sharing detection flag to b.\n",null,1],["shebang","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-shebang","()","",null,1],["shebang","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-shebang","(bin_file_name)","<p>Generates a #! line for <code>bin_file_name</code>‘s wrapper copying arguments if necessary.\n<p>If the :custom_shebang …\n",null,1],["shellescape","Shellwords","ruby/classes/Shellwords.html#method-c-shellescape","(str)","<p>Escapes a string so that it can be safely used in a Bourne shell command line.  <code>str</code> can be a non-string …\n",null,1],["shellescape","String","ruby/classes/String.html#method-i-shellescape","()","<p>Escapes <code>str</code> so that it can be safely used in a Bourne shell command line.\n<p>See Shellwords.shellescape for …\n",null,1],["shelljoin","Array","ruby/classes/Array.html#method-i-shelljoin","()","<p>Builds a command line string from an argument list <code>array</code> joining all elements escaped for the Bourne …\n",null,1],["shelljoin","Shellwords","ruby/classes/Shellwords.html#method-c-shelljoin","(array)","<p>Builds a command line string from an argument list, <code>array</code>.\n<p>All elements are joined into a single string …\n",null,1],["shellsplit","Shellwords","ruby/classes/Shellwords.html#method-c-shellsplit","(line)","<p>Splits a string into an array of tokens in the same way the UNIX Bourne shell does.\n\n<pre><code>argv = Shellwords.split(&#39;here ...\n</code></pre>\n",null,1],["shellsplit","String","ruby/classes/String.html#method-i-shellsplit","()","<p>Splits <code>str</code> into an array of tokens in the same way the UNIX Bourne shell does.\n<p>See Shellwords.shellsplit …\n",null,1],["shellwords","Shellwords","ruby/classes/Shellwords.html#method-c-shellwords","(line)","",null,1],["shift","Array","ruby/classes/Array.html#method-i-shift","(*args)","<p>Removes and returns leading elements.\n<p>When no argument is given, removes and returns the first element: …\n",null,1],["shift","CSV","ruby/classes/CSV.html#method-i-shift","()","<p>Returns the next row of data as:\n<p>An Array if no headers are used.\n<p>A CSV::Row object if headers are used. …\n",null,1],["shift","ENV","ruby/classes/ENV.html#method-c-shift","()","<p>Removes the first environment variable from ENV and returns a 2-element Array containing its name and …\n",null,1],["shift","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-shift","()","",null,1],["shift","Hash","ruby/classes/Hash.html#method-i-shift","()","<p>Removes the first hash entry (see Entry Order); returns a 2-element Array containing the removed key …\n",null,1],["shift","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-shift","(non_block = false, timeout: nil)","",null,1],["shift","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-shift","(non_block = false, timeout: nil)","",null,1],["shift","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-shift","()","<p>Removes a [key, value] pair from the database, and returns it. If the database is empty, returns <code>nil</code> …\n",null,1],["short_identifier","ActionView::Template","rails/classes/ActionView/Template.html#method-i-short_identifier","()","",null,0],["short_name","OpenSSL::ASN1::ObjectId","ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-short_name","()","<p>The short name of the ObjectId, as defined in &lt;openssl/objects.h&gt;.\n",null,1],["should_apply_vary_header?","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-should_apply_vary_header-3F","()","",null,0],["should_be_handled_by_debugger?","IRB::Statement","ruby/classes/IRB/Statement.html#method-i-should_be_handled_by_debugger-3F","()","",null,1],["should_be_handled_by_debugger?","IRB::Statement::Command","ruby/classes/IRB/Statement/Command.html#method-i-should_be_handled_by_debugger-3F","()","",null,1],["should_be_handled_by_debugger?","IRB::Statement::Expression","ruby/classes/IRB/Statement/Expression.html#method-i-should_be_handled_by_debugger-3F","()","",null,1],["show","ActiveStorage::Blobs::ProxyController","rails/classes/ActiveStorage/Blobs/ProxyController.html#method-i-show","()","",null,0],["show","ActiveStorage::Blobs::RedirectController","rails/classes/ActiveStorage/Blobs/RedirectController.html#method-i-show","()","",null,0],["show","ActiveStorage::DiskController","rails/classes/ActiveStorage/DiskController.html#method-i-show","()","",null,0],["show","ActiveStorage::Representations::ProxyController","rails/classes/ActiveStorage/Representations/ProxyController.html#method-i-show","()","",null,0],["show","ActiveStorage::Representations::RedirectController","rails/classes/ActiveStorage/Representations/RedirectController.html#method-i-show","()","",null,0],["show","Rails::Rails::Conductor::ActionMailbox::InboundEmailsController","rails/classes/Rails/Rails/Conductor/ActionMailbox/InboundEmailsController.html#method-i-show","()","",null,0],["show.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/scaffold/templates/show_html_erb_tt.html","","<p>&lt;p style=“color: green”&gt;&lt;%%= notice %&gt;&lt;/p&gt;\n<p>&lt;%%= render @&lt;%= singular_table_name …\n",null,0],["show_cursor","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-show_cursor","()","",null,1],["show_cursor","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-show_cursor","()","",null,1],["show_cursor","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-show_cursor","()","",null,1],["show_detailed_exceptions?","ActionController::Rescue","rails/classes/ActionController/Rescue.html#method-i-show_detailed_exceptions-3F","()","<p>Override this method if you want to customize when detailed exceptions must be shown. This method is …\n",null,0],["show_doc_dialog_proc","IRB::RelineInputMethod","ruby/classes/IRB/RelineInputMethod.html#method-i-show_doc_dialog_proc","()","",null,1],["show_documentation","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-show_documentation","(req, res)","<p>Displays documentation for <code>req</code> on <code>res</code>, whether that be HTML or some asset.\n",null,1],["show_files","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-show_files","(files)","",null,1],["show_help","Gem::Command","ruby/classes/Gem/Command.html#method-i-show_help","()","<p>Display the help message for the command.\n",null,1],["show_helper","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-show_helper","(arg = \"@#{singular_table_name}\", type: :url)","",null,0],["show_lookup_failure","Gem::Command","ruby/classes/Gem/Command.html#method-i-show_lookup_failure","(gem_name, version, errors, suppress_suggestions = false, required_by = nil)","<p>Display to the user that a gem couldn’t be found and reasons why\n",null,1],["show_owners","Gem::Commands::OwnerCommand","ruby/classes/Gem/Commands/OwnerCommand.html#method-i-show_owners","(name)","",null,1],["show_release_notes","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-show_release_notes","()","",null,1],["show_variable","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-show_variable","(name)","<p>SHOW VARIABLES LIKE ‘name’\n",null,0],["show_version","OptionParser","ruby/classes/OptionParser.html#method-c-show_version","(*pkgs)","",null,1],["shuffle","Array","ruby/classes/Array.html#method-i-shuffle","(random: Random)","<p>Returns a new array with elements of <code>self</code> shuffled.\n\n<pre><code>a = [1, 2, 3] #=&gt; [1, 2, 3]\na.shuffle     #=&gt; [2, ...\n</code></pre>\n",null,1],["shuffle!","Array","ruby/classes/Array.html#method-i-shuffle-21","(random: Random)","<p>Shuffles the elements of <code>self</code> in place.\n\n<pre><code>a = [1, 2, 3] #=&gt; [1, 2, 3]\na.shuffle!    #=&gt; [2, 3, 1]\na     ...\n</code></pre>\n",null,1],["shutdown","ActionCable::SubscriptionAdapter::Base","rails/classes/ActionCable/SubscriptionAdapter/Base.html#method-i-shutdown","()","",null,0],["shutdown","ActionCable::SubscriptionAdapter::PostgreSQL::Listener","rails/classes/ActionCable/SubscriptionAdapter/PostgreSQL/Listener.html#method-i-shutdown","()","",null,0],["shutdown","ActionCable::SubscriptionAdapter::Redis::Listener","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener.html#method-i-shutdown","()","",null,0],["shutdown","BasicSocket","ruby/classes/BasicSocket.html#method-i-shutdown","(p1 = v1)","<p>Calls shutdown(2) system call.\n<p>s.shutdown(Socket::SHUT_RD) disallows further read.\n<p>s.shutdown(Socket::SHUT_WR …\n",null,1],["shutdown","OpenSSL::SSL::SSLServer","ruby/classes/OpenSSL/SSL/SSLServer.html#method-i-shutdown","(how=Socket::SHUT_RDWR)","<p>See BasicSocket#shutdown for details.\n",null,1],["shutdown","Rinda::RingServer","ruby/classes/Rinda/RingServer.html#method-i-shutdown","()","<p>Shuts down the RingServer\n",null,1],["sid_available?","Process::GID","ruby/classes/Process/GID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved group ID functionality.\n",null,1],["sid_available?","Process::UID","ruby/classes/Process/UID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved user ID functionality.\n",null,1],["sign","BigDecimal","ruby/classes/BigDecimal.html#method-i-sign","()","<p>Returns the sign of the value.\n<p>Returns a positive value if &gt; 0, a negative value if &lt; 0. It behaves …\n",null,1],["sign","Gem::Commands::CertCommand","ruby/classes/Gem/Commands/CertCommand.html#method-i-sign","(cert_file)","",null,1],["sign","Gem::S3URISigner","ruby/classes/Gem/S3URISigner.html#method-i-sign","(expiration = 86_400)","<p>Signs S3 URI using query-params according to the reference: docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html …\n",null,1],["sign","Gem::Security","ruby/classes/Gem/Security.html#method-c-sign","(certificate, signing_key, signing_cert, age = ONE_YEAR, extensions = EXTENSIONS, serial = 1)","<p>Sign the public key from <code>certificate</code> with the <code>signing_key</code> and <code>signing_cert</code>, using the Gem::Security::DIGEST_NAME …\n",null,1],["sign","Gem::Security::Signer","ruby/classes/Gem/Security/Signer.html#method-i-sign","(data)","<p>Sign data with given digest algorithm\n",null,1],["sign","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-sign","(p1, p2)","<p>Parameters\n<p><em>key</em> - the private key to be used for signing this instance\n<p><em>digest</em> - the digest to be used for …\n",null,1],["sign","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-sign","(p1, p2, p3 = v3, p4 = v4, p5 = v5)","<p>Signs this OCSP response using the <em>cert</em>, <em>key</em> and optional <em>digest</em>. This behaves in the similar way as …\n",null,1],["sign","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-sign","(p1, p2, p3 = v3, p4 = v4, p5 = v5)","<p>Signs this OCSP request using <em>cert</em>, <em>key</em> and optional <em>digest</em>. If <em>digest</em> is not specified, SHA-1 is used. …\n",null,1],["sign","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-c-sign","(p1, p2, p3, p4 = v4, p5 = v5)","",null,1],["sign","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-sign","(p1, p2, p3 = v3)","<p>Hashes and signs the <code>data</code> using a message digest algorithm <code>digest</code> and a private key <code>pkey</code>.\n<p>See #verify …\n",null,1],["sign","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-sign","(p1, p2)","",null,1],["sign","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-sign","(p1, p2)","",null,1],["sign","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-sign","(p1, p2)","",null,1],["sign_in","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-sign_in","(sign_in_host = nil, scope: nil)","<p>Signs in with the RubyGems API at <code>sign_in_host</code> and sets the rubygems API key.\n",null,1],["sign_pss","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-sign_pss","(p1, p2, p3 = {})","<p>Signs <em>data</em> using the Probabilistic Signature Scheme (RSA-PSS) and returns the calculated signature.\n<p>RSAError …\n",null,1],["sign_raw","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-sign_raw","(p1, p2, p3 = v3)","<p>Signs <code>data</code> using a private key <code>pkey</code>. Unlike #sign, <code>data</code> will not be hashed by <code>digest</code> automatically.\n<p>See …\n",null,1],["signal","MonitorMixin::ConditionVariable","ruby/classes/MonitorMixin/ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n",null,1],["signal","Rinda::WaitTemplateEntry","ruby/classes/Rinda/WaitTemplateEntry.html#method-i-signal","()","",null,1],["signal","Thread::ConditionVariable","ruby/classes/Thread/ConditionVariable.html#method-i-signal","()","<p>Wakes up the first thread in line waiting for this lock.\n",null,1],["signal_handle","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-signal_handle","()","<p>Handler for the signal SIGINT, see Kernel#trap for more information.\n",null,1],["signal_status","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-signal_status","(status)","<p>Evaluates the given block using the given <code>status</code>.\n",null,1],["signaled?","Process::Status","ruby/classes/Process/Status.html#method-i-signaled-3F","()","<p>Returns <code>true</code> if the process terminated because of an uncaught signal, <code>false</code> otherwise.\n",null,1],["signals","","ruby/files/ruby/doc/signals_rdoc.html","","<p>Caveats for implementing Signal.trap callbacks\n<p>As with implementing signal handlers in C or most other …\n",null,1],["signame","Signal","ruby/classes/Signal.html#method-c-signame","(p1)","<p>Convert signal number to signal name. Returns <code>nil</code> if the signo is an invalid signal number.\n\n<pre><code>Signal.trap(&quot;INT&quot;) ...\n</code></pre>\n",null,1],["signature","Prism::ParametersNode","ruby/classes/Prism/ParametersNode.html#method-i-signature","()","<p>Mirrors the Method#parameters method.\n",null,1],["signature","RDoc::TomDoc","ruby/classes/RDoc/TomDoc.html#method-c-signature","(comment)","<p>Extracts the Signature section’s method signature\n<p>comment &mdash; An RDoc::Comment that will be parsed and …\n\n",null,1],["signature_algorithm","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-signature_algorithm","()","",null,1],["signature_algorithm","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-signature_algorithm","()","",null,1],["signature_algorithm","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-signature_algorithm","()","",null,1],["signed","ActionDispatch::Cookies::ChainedCookieJars","rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-signed","()","<p>Returns a jar that’ll automatically generate a signed representation of cookie value and verify it …\n",null,0],["signed?","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-signed-3F","()","<p>Returns <code>true</code> if the request is signed, <code>false</code> otherwise. Note that the validity of the signature is <strong>not</strong> …\n",null,1],["signed_id","ActiveRecord::SignedId","rails/classes/ActiveRecord/SignedId.html#method-i-signed_id","(expires_in: nil, purpose: nil)","<p>Returns a signed id that’s generated using a preconfigured <code>ActiveSupport::MessageVerifier</code> instance. …\n",null,0],["signed_id","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-signed_id","(purpose: :blob_id, expires_in: nil)","<p>Returns a signed ID for this blob that’s suitable for reference on the client-side without fear of …\n",null,0],["signed_id_verifier","ActiveRecord::SignedId::ClassMethods","rails/classes/ActiveRecord/SignedId/ClassMethods.html#method-i-signed_id_verifier","()","<p>The verifier instance that all signed ids are generated and verified from. By default, it’ll be initialized …\n",null,0],["signed_id_verifier=","ActiveRecord::SignedId::ClassMethods","rails/classes/ActiveRecord/SignedId/ClassMethods.html#method-i-signed_id_verifier-3D","(verifier)","<p>Allows you to pass in a custom verifier used for the signed ids. This also allows you to use different …\n",null,0],["signed_id_verifier_secret","ActiveRecord::SignedId","rails/classes/ActiveRecord/SignedId.html#method-c-signed_id_verifier_secret","","<p>Set the secret used for the signed id verifier instance when using Active Record outside of Rails. Within …\n",null,0],["signed_or_encrypted","ActionDispatch::Cookies::ChainedCookieJars","rails/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-signed_or_encrypted","()","<p>Returns the <code>signed</code> or <code>encrypted</code> jar, preferring <code>encrypted</code> if <code>secret_key_base</code> is set. Used by ActionDispatch::Session::CookieStore …\n",null,0],["signed_time","OpenSSL::PKCS7::SignerInfo","ruby/classes/OpenSSL/PKCS7/SignerInfo.html#method-i-signed_time","()","",null,1],["signers","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-signers","()","",null,1],["signo","SignalException","ruby/classes/SignalException.html#method-i-signo","()","<p>Returns a signal number.\n",null,1],["silence","ActiveSupport::Deprecation::Reporting","rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-silence","(&block)","<p>Silence deprecation warnings within the block.\n\n<pre><code>ActiveSupport::Deprecation.warn(&#39;something broke!&#39;)\n# =&gt; ...\n</code></pre>\n",null,0],["silence","ActiveSupport::LoggerSilence","rails/classes/ActiveSupport/LoggerSilence.html#method-i-silence","(severity = Logger::ERROR)","<p>Silences the logger for the duration of the block.\n",null,0],["silence!","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-silence-21","()","<p>Silences the logger.\n",null,0],["silence_redefinition_of_method","Module","rails/classes/Module.html#method-i-silence_redefinition_of_method","(method)","<p>Marks the named method as intended to be redefined, if it exists. Suppresses the Ruby method redefinition …\n",null,0],["silence_warnings","Kernel","rails/classes/Kernel.html#method-i-silence_warnings","(&block)","<p>Sets $VERBOSE to <code>nil</code> for the duration of the block and back to its original value afterwards.\n\n<pre><code>silence_warnings ...\n</code></pre>\n",null,0],["silenced","ActiveSupport::Deprecation::Reporting","rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-silenced","()","",null,0],["silent_system","Gem::Util","ruby/classes/Gem/Util.html#method-c-silent_system","(*command)","<p>Invokes system, but silences all output.\n",null,1],["simple_format","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-simple_format","(text, html_options = {}, options = {})","<p>Returns <code>text</code> transformed into HTML using simple formatting rules. Two or more consecutive newlines ( …\n",null,0],["simplified_rendering?","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-simplified_rendering-3F","()","",null,1],["sin","BigMath","ruby/classes/BigMath.html#method-i-sin","(x, prec)","<p>Computes the sine of <code>decimal</code> to the specified number of digits of precision, <code>numeric</code>.\n<p>If <code>decimal</code> is Infinity …\n",null,1],["sin","Math","ruby/classes/Math.html#method-c-sin","(p1)","<p>Returns the sine of <code>x</code> in radians.\n<p>Domain: <code>(-INFINITY, INFINITY)</code>.\n<p>Range: <code>[-1.0, 1.0]</code>.\n",null,1],["since","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-since","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the future as this Duration represents.\n",null,0],["since","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-since","(other)","",null,0],["since","Date","rails/classes/Date.html#method-i-since","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the …\n",null,0],["since","DateTime","rails/classes/DateTime.html#method-i-since","(seconds)","<p>Returns a new DateTime representing the time a number of seconds since the instance time. Do not use …\n",null,0],["since","Time","rails/classes/Time.html#method-i-since","(seconds)","<p>Returns a new Time representing the time a number of seconds since the instance time\n",null,0],["single_delegate","SingleForwardable","ruby/classes/SingleForwardable.html#method-i-single_delegate","(hash)","<p>Takes a hash as its argument.  The key is a symbol or an array of symbols.  These symbols correspond …\n",null,1],["single_line_command?","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-single_line_command-3F","(code)","",null,1],["singleline_format","PrettyPrint","ruby/classes/PrettyPrint.html#method-c-singleline_format","(output=''.dup, maxwidth=nil, newline=nil, genspace=nil)","<p>This is similar to PrettyPrint::format but the result has no breaks.\n<p><code>maxwidth</code>, <code>newline</code> and <code>genspace</code> are …\n",null,1],["singleline_pp","PP","ruby/classes/PP.html#method-c-singleline_pp","(obj, out=$>)","<p>Outputs <code>obj</code> to <code>out</code> like PP.pp but with no indent and newline.\n<p>PP.singleline_pp returns <code>out</code>.\n",null,1],["singleton_class","Object","ruby/classes/Object.html#method-i-singleton_class","()","<p>Returns the singleton class of <em>obj</em>.  This method creates a new singleton class if <em>obj</em> does not have one. …\n",null,1],["singleton_class?","Module","ruby/classes/Module.html#method-i-singleton_class-3F","()","<p>Returns <code>true</code> if <em>mod</em> is a singleton class or <code>false</code> if it is an ordinary class or module.\n\n<pre><code>class C\nend\nC.singleton_class? ...\n</code></pre>\n",null,1],["singleton_method","Object","ruby/classes/Object.html#method-i-singleton_method","(p1)","<p>Similar to <em>method</em>, searches singleton method only.\n\n<pre><code>class Demo\n  def initialize(n)\n    @iv = n\n  end\n  ...\n</code></pre>\n",null,1],["singleton_methods","Object","ruby/classes/Object.html#method-i-singleton_methods","(*args)","<p>Returns an array of the names of singleton methods for <em>obj</em>. If the optional <em>all</em> parameter is true, the …\n",null,1],["singular","ActiveModel::Naming","rails/classes/ActiveModel/Naming.html#method-c-singular","(record_or_class)","<p>Returns the singular class name of a record or class.\n\n<pre><code>ActiveModel::Naming.singular(post)             # ...\n</code></pre>\n",null,0],["singular","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-singular","(rule, replacement)","<p>Specifies a new singularization rule and its replacement. The rule can either be a string or a regular …\n",null,0],["singular_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-singular_name","()","<p>FIXME: We are avoiding to use alias because a bug on thor that make this method public and add it to …\n",null,0],["singular_route_key","ActiveModel::Naming","rails/classes/ActiveModel/Naming.html#method-c-singular_route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for namespaced models regarding whether …\n",null,0],["singular_route_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-singular_route_name","()","",null,0],["singular_table_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-singular_table_name","()","",null,0],["singularize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-singularize","(word, locale = :en)","<p>The reverse of #pluralize, returns the singular form of a word in a string.\n<p>If passed an optional <code>locale</code> …\n",null,0],["singularize","String","rails/classes/String.html#method-i-singularize","(locale = :en)","<p>The reverse of <code>pluralize</code>, returns the singular form of a word in a string.\n<p>If the optional parameter  …\n",null,0],["sinh","Math","ruby/classes/Math.html#method-c-sinh","(p1)","<p>Returns the hyperbolic sine of <code>x</code> in radians.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[-INFINITY, INFINITY]</code> …\n",null,1],["size","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-size","()","<p>Shortcut for <code>tempfile.size</code>.\n",null,0],["size","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-size","()","",null,0],["size","ActionText::AttachmentGallery","rails/classes/ActionText/AttachmentGallery.html#method-i-size","()","",null,0],["size","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-size","()","<p>Returns the size of the collection. If the collection hasn’t been loaded, it executes a <code>SELECT COUNT(*)</code> …\n",null,0],["size","ActiveRecord::ConnectionAdapters::SchemaCache","rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-size","()","",null,0],["size","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-i-size","()","",null,0],["size","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-size","()","<p>Returns size of the records.\n",null,0],["size","Array","ruby/classes/Array.html#method-i-size","()","<p>Returns the count of elements in <code>self</code>.\n",null,1],["size","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-size","()","<p>Returns digest_obj.digest_length().\n",null,1],["size","ENV","ruby/classes/ENV.html#method-c-size","()","<p>Returns the count of environment variables:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;)\nENV.length # =&gt; 2 ...\n</code></pre>\n",null,1],["size","Enumerator","ruby/classes/Enumerator.html#method-i-size","()","<p>Returns the size of the enumerator, or <code>nil</code> if it can’t be calculated lazily.\n\n<pre><code>(1..100).to_a.permutation(4).size ...\n</code></pre>\n",null,1],["size","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-size","()","<p>Returns the number of elements in this arithmetic sequence if it is a finite sequence.  Otherwise, returns …\n",null,1],["size","Enumerator::Chain","ruby/classes/Enumerator/Chain.html#method-i-size","()","<p>Returns the total size of the enumerator chain calculated by summing up the size of each enumerable in …\n",null,1],["size","Enumerator::Product","ruby/classes/Enumerator/Product.html#method-i-size","()","<p>Returns the total size of the enumerator product calculated by multiplying the sizes of enumerables in …\n",null,1],["size","Fiddle::CStructEntity","ruby/classes/Fiddle/CStructEntity.html#method-c-size","(types)","<p>Returns the offset for the packed sizes for the given <code>types</code>.\n\n<pre><code>Fiddle::CStructEntity.size(\n  [ Fiddle::TYPE_DOUBLE, ...\n</code></pre>\n",null,1],["size","Fiddle::CUnionEntity","ruby/classes/Fiddle/CUnionEntity.html#method-c-size","(types)","<p>Returns the size needed for the union with the given <code>types</code>.\n\n<pre><code>Fiddle::CUnionEntity.size(\n  [ Fiddle::TYPE_DOUBLE, ...\n</code></pre>\n",null,1],["size","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-size","()","<p>Get the size of this pointer.\n",null,1],["size","File","ruby/classes/File.html#method-i-size","()","<p>Returns the size of <em>file</em> in bytes.\n\n<pre><code>File.new(&quot;testfile&quot;).size   #=&gt; 66\n</code></pre>\n",null,1],["size","File","ruby/classes/File.html#method-c-size","(p1)","<p>Returns the size of <code>file_name</code>.\n<p><em>file_name</em> can be an IO object.\n",null,1],["size","File::Stat","ruby/classes/File/Stat.html#method-i-size","()","<p>Returns the size of <em>stat</em> in bytes.\n\n<pre><code>File.stat(&quot;testfile&quot;).size   #=&gt; 66\n</code></pre>\n",null,1],["size","FileTest","ruby/classes/FileTest.html#method-i-size","(p1)","<p>Returns the size of <code>file_name</code>.\n<p><em>file_name</em> can be an IO object.\n",null,1],["size","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-size","()","",null,1],["size","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-size","()","",null,1],["size","Gem::Resolver::RequirementList","ruby/classes/Gem/Resolver/RequirementList.html#method-i-size","()","<p>How many elements are in the list\n",null,1],["size","Hash","ruby/classes/Hash.html#method-i-size","()","<p>Returns the count of entries in <code>self</code>:\n\n<pre><code>{foo: 0, bar: 1, baz: 2}.length # =&gt; 3\n</code></pre>\n",null,1],["size","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-size","()","<p>Returns the size of the buffer that was explicitly set (on creation with ::new or on #resize), or deduced …\n",null,1],["size","Integer","ruby/classes/Integer.html#method-i-size","()","<p>Returns the number of bytes in the machine representation of <code>self</code>; the value is system-dependent:\n\n<pre><code>1.size ...\n</code></pre>\n",null,1],["size","MatchData","ruby/classes/MatchData.html#method-i-size","()","<p>Returns size of the match array:\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\n# =&gt; #&lt;MatchData &quot;HX1138&quot; 1:&quot;H&quot; ...\n</code></pre>\n",null,1],["size","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-size","()","<p>Returns the number of referenced objects\n",null,1],["size","Pathname","ruby/classes/Pathname.html#method-i-size","()","<p>See FileTest.size.\n",null,1],["size","Range","ruby/classes/Range.html#method-i-size","()","<p>Returns the count of elements in <code>self</code> if both begin and end values are numeric; otherwise, returns <code>nil</code> …\n",null,1],["size","Rinda::Tuple","ruby/classes/Rinda/Tuple.html#method-i-size","()","<p>The number of elements in the tuple.\n",null,1],["size","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-size","()","<p>The size of the tuple.\n",null,1],["size","Set","ruby/classes/Set.html#method-i-size","()","<p>Returns the number of elements.\n",null,1],["size","String","ruby/classes/String.html#method-i-size","()","<p>Returns the count of characters (not bytes) in <code>self</code>:\n\n<pre><code>&#39;foo&#39;.length        # =&gt; 3\n&#39;тест&#39;.length       # ...\n</code></pre>\n",null,1],["size","StringIO","ruby/classes/StringIO.html#method-i-size","()","<p>Returns the size of the buffer string.\n",null,1],["size","StringScanner","ruby/classes/StringScanner.html#method-i-size","()","<p>Returns the amount of subgroups in the most recent match. The full match counts as a subgroup.\n\n<pre><code>s = StringScanner.new(&quot;Fri ...\n</code></pre>\n",null,1],["size","Struct","ruby/classes/Struct.html#method-i-size","()","<p>Returns the number of members.\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe Smith&quot;, ...\n</code></pre>\n",null,1],["size","Symbol","ruby/classes/Symbol.html#method-i-size","()","<p>Equivalent to <code>self.to_s.length</code>; see String#length.\n",null,1],["size","Tempfile","ruby/classes/Tempfile.html#method-i-size","()","<p>Returns the size of the temporary file.  As a side effect, the IO buffer is flushed before determining …\n",null,1],["size","Thread::Queue","ruby/classes/Thread/Queue.html#method-i-size","()","<p>Returns the length of the queue.\n",null,1],["size","Thread::SizedQueue","ruby/classes/Thread/SizedQueue.html#method-i-size","()","<p>Returns the length of the queue.\n",null,1],["size=","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-size-3D","(p1)","<p>Set the size of this pointer to <code>size</code>\n",null,1],["size?","File","ruby/classes/File.html#method-c-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn’t exist or has zero size, the size of the file otherwise.\n<p><em>file_name</em> …\n",null,1],["size?","File::Stat","ruby/classes/File/Stat.html#method-i-size-3F","()","<p>Returns <code>nil</code> if <em>stat</em> is a zero-length file, the size of the file otherwise.\n\n<pre><code>File.stat(&quot;testfile&quot;).size? ...\n</code></pre>\n",null,1],["size?","FileTest","ruby/classes/FileTest.html#method-i-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn’t exist or has zero size, the size of the file otherwise.\n<p><em>file_name</em> …\n",null,1],["size?","Pathname","ruby/classes/Pathname.html#method-i-size-3F","()","<p>See FileTest.size?.\n",null,1],["size_of","IO::Buffer","ruby/classes/IO/Buffer.html#method-c-size_of","(p1)","<p>Returns the size of the given buffer type(s) in bytes.\n\n<pre><code>IO::Buffer.size_of(:u32) # =&gt; 4\nIO::Buffer.size_of([:u32, ...\n</code></pre>\n",null,1],["size_opt_params","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-size_opt_params","()","<p>Returns the size of optional parameters.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["size_params","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-size_params","()","<p>Returns the size of arguments of the method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["sizeof","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-sizeof","(ty)","<p>Returns the sizeof <code>ty</code>, using Fiddle::Importer.parse_ctype to determine the C type and the appropriate …\n",null,1],["skip","ARGF","ruby/classes/ARGF.html#method-i-skip","()","<p>Sets the current file to the next file in ARGV. If there aren’t any more files it has no effect. …\n",null,1],["skip","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-skip","(type)","",null,1],["skip","StringScanner","ruby/classes/StringScanner.html#method-i-skip","(p1)","<p>Attempts to skip over the given <code>pattern</code> beginning with the scan pointer. If it matches, the scan pointer …\n",null,1],["skip_after_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_after_action","","<p>Skip a callback after actions. See _insert_callbacks for parameter details.\n",null,0],["skip_around_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_around_action","","<p>Skip a callback around actions. See _insert_callbacks for parameter details.\n",null,0],["skip_before_action","AbstractController::Callbacks::ClassMethods","rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_before_action","","<p>Skip a callback before actions. See _insert_callbacks for parameter details.\n",null,0],["skip_blanks?","CSV","ruby/classes/CSV.html#method-i-skip_blanks-3F","()","<p>Returns the value that determines whether blank lines are to be ignored; used for parsing; see {Option …\n",null,1],["skip_blanks?","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-skip_blanks-3F","()","",null,1],["skip_callback","ActiveSupport::Callbacks::ClassMethods","rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-skip_callback","(name, *filter_list, &block)","<p>Skip a previously set callback. Like <code>set_callback</code>, <code>:if</code> or <code>:unless</code> options may be passed in order to control …\n",null,0],["skip_description?","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-skip_description-3F","()","<p>Whether to skip the method description, true for methods that have aliases with a call-seq that doesn’t …\n",null,1],["skip_during","Gem::Deprecate","ruby/classes/Gem/Deprecate.html#method-c-skip_during","()","<p>Temporarily turn off warnings. Intended for tests only.\n",null,1],["skip_for_variable","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_for_variable","()","<p>skip the var [in] part of a ‘for’ statement\n",null,1],["skip_forgery_protection","ActionController::RequestForgeryProtection::ClassMethods","rails/classes/ActionController/RequestForgeryProtection/ClassMethods.html#method-i-skip_forgery_protection","(options = {})","<p>Turn off request forgery protection. This is a wrapper for:\n\n<pre><code>skip_before_action :verify_authenticity_token\n</code></pre>\n",null,0],["skip_internal_path?","IRB::Debug::SkipPathHelperForIRB","ruby/classes/IRB/Debug/SkipPathHelperForIRB.html#method-i-skip_internal_path-3F","(path)","",null,1],["skip_lines","CSV","ruby/classes/CSV.html#method-i-skip_lines","()","<p>Returns the Regexp used to identify comment lines; used for parsing; see {Option <code>skip_lines</code>}:\n\n<pre><code>CSV.new(&#39;&#39;).skip_lines ...\n</code></pre>\n",null,1],["skip_lines","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-skip_lines","()","",null,1],["skip_method","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_method","(container)","<p>Skips the next method in <code>container</code>\n",null,1],["skip_missing_file_name?","SyntaxSuggest::PathnameFromMessage","ruby/classes/SyntaxSuggest/PathnameFromMessage.html#method-i-skip_missing_file_name-3F","()","",null,1],["skip_optional_do_after_expression","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_optional_do_after_expression","()","<p>while, until, and for have an optional do\n",null,1],["skip_parameter_encoding","ActionController::ParameterEncoding::ClassMethods","rails/classes/ActionController/ParameterEncoding/ClassMethods.html#method-i-skip_parameter_encoding","(action)","<p>Specify that a given action’s parameters should all be encoded as ASCII-8BIT (it “skips” …\n",null,0],["skip_parentheses","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_parentheses","(&block)","<p>Skip opening parentheses and yield the block. Skip closing parentheses too when exists.\n",null,1],["skip_tkspace","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-skip_tkspace","()","<p>Skips whitespace tokens including newlines\n",null,1],["skip_tkspace_comment","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-skip_tkspace_comment","(skip_nl = true)","<p>Skip spaces until a comment is found\n",null,1],["skip_tkspace_without_nl","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-skip_tkspace_without_nl","()","<p>Skips whitespace tokens excluding newlines\n",null,1],["skip_until","StringScanner","ruby/classes/StringScanner.html#method-i-skip_until","(p1)","<p>Advances the scan pointer until <code>pattern</code> is matched and consumed.  Returns the number of bytes advanced, …\n",null,1],["sleep","Kernel","ruby/classes/Kernel.html#method-i-sleep","(*args)","<p>Suspends execution of the current thread for the number of seconds specified by numeric argument <code>secs</code> …\n",null,1],["sleep","Mutex_m","ruby/classes/Mutex_m.html#method-i-sleep","(timeout = nil)","<p>See Thread::Mutex#sleep\n",null,1],["sleep","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-i-sleep","(*args)","<p>Releases the lock and sleeps <code>timeout</code> seconds if it is given and non-nil or forever.  Raises <code>ThreadError</code> …\n",null,1],["slice","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-slice","(*keys)","<p>Returns a new <code>ActionController::Parameters</code> instance that includes only the given <code>keys</code>. If the given  …\n",null,0],["slice","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-slice","(*methods)","<p>Returns a hash of the given methods with their names as keys and returned values as values.\n",null,0],["slice","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-slice","(*keys)","",null,0],["slice","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-slice","(*keys)","",null,0],["slice","Array","ruby/classes/Array.html#method-i-slice","(*args)","<p>Returns elements from <code>self</code>; does not modify <code>self</code>.\n<p>When a single Integer argument <code>index</code> is given, returns …\n",null,1],["slice","ENV","ruby/classes/ENV.html#method-c-slice","(*args)","<p>Returns a Hash of the given ENV names and their corresponding values:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; ...\n</code></pre>\n",null,1],["slice","Hash","ruby/classes/Hash.html#method-i-slice","(*args)","<p>Returns a new Hash object containing the entries for the given <code>keys</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.slice(:baz, ...\n</code></pre>\n",null,1],["slice","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-slice","(*args)","<p>Produce another IO::Buffer which is a slice (or view into) the current one starting at <code>offset</code> bytes and …\n",null,1],["slice","Prism::Location","ruby/classes/Prism/Location.html#method-i-slice","()","<p>The source code that this location represents.\n",null,1],["slice","Prism::Source","ruby/classes/Prism/Source.html#method-i-slice","(byte_offset, length)","<p>Perform a byteslice on the source code using the given byte offset and byte length.\n",null,1],["slice","Ripper","ruby/classes/Ripper.html#method-c-slice","(src, pattern, n = 0)","<p>EXPERIMENTAL &mdash; Parses <code>src</code> and return a string which was matched to <code>pattern</code>. <code>pattern</code> should be described …\n",null,1],["slice","String","ruby/classes/String.html#method-i-slice","(*args)","<p>Returns the substring of <code>self</code> specified by the arguments. See examples at String Slices.\n",null,1],["slice","Symbol","ruby/classes/Symbol.html#method-i-slice","(*args)","<p>Equivalent to <code>symbol.to_s[]</code>; see String#[].\n",null,1],["slice!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-slice-21","(*keys)","<p>Returns the current <code>ActionController::Parameters</code> instance which contains only the given <code>keys</code>.\n",null,0],["slice!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-slice-21","(*keys)","",null,0],["slice!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-slice-21","(*keys)","",null,0],["slice!","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-slice-21","(*args)","<p>Works like <code>String#slice!</code>, but returns an instance of Chars, or <code>nil</code> if the string was not modified. The …\n",null,0],["slice!","Hash","rails/classes/Hash.html#method-i-slice-21","(*keys)","<p>Replaces the hash with only the given keys. Returns a hash containing the removed key/value pairs.\n\n<pre><code>hash ...\n</code></pre>\n",null,0],["slice!","Array","ruby/classes/Array.html#method-i-slice-21","(*args)","<p>Removes and returns elements from <code>self</code>.\n<p>When the only argument is an Integer <code>n</code>, removes and returns the …\n",null,1],["slice!","String","ruby/classes/String.html#method-i-slice-21","(*args)","<p>Removes and returns the substring of <code>self</code> specified by the arguments. See String Slices.\n<p>A few examples: …\n",null,1],["slice_after","Enumerable","ruby/classes/Enumerable.html#method-i-slice_after","(p1)","<p>Creates an enumerator for each chunked elements. The ends of chunks are defined by <em>pattern</em> and the block. …\n",null,1],["slice_after","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-slice_after","(*args)","<p>Like Enumerable#slice_after, but chains operation to be lazy-evaluated.\n",null,1],["slice_before","Enumerable","ruby/classes/Enumerable.html#method-i-slice_before","(p1)","<p>With argument <code>pattern</code>, returns an enumerator that uses the pattern to partition elements into arrays …\n",null,1],["slice_before","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-slice_before","(*args)","<p>Like Enumerable#slice_before, but chains operation to be lazy-evaluated.\n",null,1],["slice_when","Enumerable","ruby/classes/Enumerable.html#method-i-slice_when","()","<p>Creates an enumerator for each chunked elements. The beginnings of chunks are defined by the block.\n<p>This …\n",null,1],["slice_when","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-slice_when","(*args)","<p>Like Enumerable#slice_when, but chains operation to be lazy-evaluated.\n",null,1],["sms_to","ActionView::Helpers::UrlHelper","rails/classes/ActionView/Helpers/UrlHelper.html#method-i-sms_to","(phone_number, name = nil, html_options = {}, &block)","<p>Creates an SMS anchor link tag to the specified <code>phone_number</code>. When the link is clicked, the default  …\n",null,0],["sn","OpenSSL::ASN1::ObjectId","ruby/classes/OpenSSL/ASN1/ObjectId.html#method-i-sn","()","<p>The short name of the ObjectId, as defined in &lt;openssl/objects.h&gt;.\n",null,1],["snippet","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-snippet","(text, limit = 100)","<p>The first <code>limit</code> characters of <code>text</code> as HTML\n",null,1],["sockaddr_in","Socket","ruby/classes/Socket.html#method-c-sockaddr_in","(p1, p2)","<p>Packs <em>port</em> and <em>host</em> as an AF_INET/AF_INET6 sockaddr string.\n\n<pre><code>Socket.sockaddr_in(80, &quot;127.0.0.1&quot;)\n#=&gt; &quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00&quot; ...\n</code></pre>\n",null,1],["sockaddr_un","Socket","ruby/classes/Socket.html#method-c-sockaddr_un","(p1)","<p>Packs <em>path</em> as an AF_UNIX sockaddr string.\n\n<pre><code>Socket.sockaddr_un(&quot;/tmp/sock&quot;) #=&gt; &quot;\\x01\\x00/tmp/sock\\x00\\x00...&quot;\n</code></pre>\n",null,1],["socket?","File","ruby/classes/File.html#method-c-socket-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a socket, <code>false</code> otherwise:\n\n<pre><code>require &#39;socket&#39;\nFile.socket?(Socket.new(:INET, ...\n</code></pre>\n",null,1],["socket?","File::Stat","ruby/classes/File/Stat.html#method-i-socket-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a socket, <code>false</code> if it isn’t or if the operating system doesn’t support …\n",null,1],["socket?","FileTest","ruby/classes/FileTest.html#method-i-socket-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a socket, <code>false</code> otherwise:\n\n<pre><code>require &#39;socket&#39;\nFile.socket?(Socket.new(:INET, ...\n</code></pre>\n",null,1],["socket?","Pathname","ruby/classes/Pathname.html#method-i-socket-3F","()","<p>See FileTest.socket?.\n",null,1],["socketpair","Socket","ruby/classes/Socket.html#method-c-socketpair","(p1, p2, p3 = v3)","<p>Creates a pair of sockets connected each other.\n<p><em>domain</em> should be a communications domain such as: :INET, …\n",null,1],["socketpair","UNIXSocket","ruby/classes/UNIXSocket.html#method-c-socketpair","(p1 = v1, p2 = v2)","<p>Creates a pair of sockets connected to each other.\n<p><em>type</em> should be a socket type such as: :STREAM, :DGRAM, …\n",null,1],["socktype","Addrinfo","ruby/classes/Addrinfo.html#method-i-socktype","()","<p>returns the socket type as an integer.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).socktype == Socket::SOCK_STREAM #=&gt; ...\n</code></pre>\n",null,1],["solaris_platform?","Gem","ruby/classes/Gem.html#method-c-solaris_platform-3F","()","<p>Is this platform Solaris?\n",null,1],["sole","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-sole","()","<p>Finds the sole matching record. Raises ActiveRecord::RecordNotFound if no record is found. Raises ActiveRecord::SoleRecordExceeded …\n",null,0],["sole","Enumerable","rails/classes/Enumerable.html#method-i-sole","()","<p>Returns the sole item in the enumerable. If there are no items, or more than one item, raises <code>Enumerable::SoleItemExpectedError</code> …\n",null,0],["sort","Array","ruby/classes/Array.html#method-i-sort","()","<p>Returns a new Array whose elements are those from <code>self</code>, sorted.\n<p>With no block, compares elements using …\n",null,1],["sort","Enumerable","ruby/classes/Enumerable.html#method-i-sort","()","<p>Returns an array containing the sorted elements of <code>self</code>. The ordering of equal elements is indeterminate …\n",null,1],["sort!","Array","ruby/classes/Array.html#method-i-sort-21","()","<p>Returns <code>self</code> with its elements sorted in place.\n<p>With no block, compares elements using operator <code>&lt;=&gt;</code> …\n",null,1],["sort_by","Enumerable","ruby/classes/Enumerable.html#method-i-sort_by","()","<p>With a block given, returns an array of elements of <code>self</code>, sorted according to the value returned by the …\n",null,1],["sort_by!","Array","ruby/classes/Array.html#method-i-sort_by-21","()","<p>Sorts the elements of <code>self</code> in place, using an ordering determined by the block; returns self.\n<p>Calls the …\n",null,1],["sort_dependencies","Gem::Resolver","ruby/classes/Gem/Resolver.html#method-i-sort_dependencies","(dependencies, activated, conflicts)","",null,1],["sort_obj","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-sort_obj","()","<p>Returns an object you can use to sort specifications in #sort_by.\n",null,1],["sort_priority","Gem::Platform","ruby/classes/Gem/Platform.html#method-c-sort_priority","(platform)","",null,1],["sort_sections","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-sort_sections","()","<p>Sorts sections alphabetically (default) or in TomDoc fashion (none, Public, Internal, Deprecated)\n",null,1],["sorted","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-sorted","()","",null,1],["sorted","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-sorted","()","<p>Used for testing, extremely not performant\n",null,1],["sorted_groups","Rails::Generators","rails/classes/Rails/Generators.html#method-c-sorted_groups","()","",null,0],["sorted_lines","SyntaxSuggest::CaptureCodeContext","ruby/classes/SyntaxSuggest/CaptureCodeContext.html#method-i-sorted_lines","()","",null,1],["sorted_requests","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-sorted_requests","()","",null,1],["source","ActionMailbox::InboundEmail","rails/classes/ActionMailbox/InboundEmail.html#method-i-source","()","",null,0],["source","ActionView::Template","rails/classes/ActionView/Template.html#method-i-source","()","",null,0],["source","Gem::RequestSet::GemDependencyAPI","ruby/classes/Gem/RequestSet/GemDependencyAPI.html#method-i-source","(url)","<p>Sets <code>url</code> as a source for gems for this dependency API.  RubyGems uses the default configured sources …\n",null,1],["source","Gem::Resolver::InstalledSpecification","ruby/classes/Gem/Resolver/InstalledSpecification.html#method-i-source","()","<p>The source for this specification\n",null,1],["source","JSON::Ext::Parser","ruby/classes/JSON/Ext/Parser.html#method-i-source","()","<p>Returns a copy of the current <em>source</em> string, that was used to construct this Parser.\n",null,1],["source","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-source","()","<p>Source of the contents of this store.\n<p>For a store from a gem the source is the gem name.  For a store …\n",null,1],["source","Regexp","ruby/classes/Regexp.html#method-i-source","()","<p>Returns the original string of <code>self</code>:\n\n<pre><code>/ab+c/ix.source # =&gt; &quot;ab+c&quot;\n</code></pre>\n<p>Regexp escape sequences are retained: …\n",null,1],["source","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-source","()","<p>Returns the code fragment that corresponds to this AST.\n<p>Note that this is an API for ruby internal use, …\n",null,1],["source_attribute_from_preserved_attribute","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-source_attribute_from_preserved_attribute","(attribute_name)","<p>Given a attribute name, it returns the name of the source attribute when it’s a preserved one.\n",null,0],["source_date_epoch","Gem","ruby/classes/Gem.html#method-c-source_date_epoch","()","<p>Returns the value of Gem.source_date_epoch_string, as a Time object.\n<p>This is used throughout RubyGems …\n",null,1],["source_date_epoch_string","Gem","ruby/classes/Gem.html#method-c-source_date_epoch_string","()","<p>If the SOURCE_DATE_EPOCH environment variable is set, returns it’s value. Otherwise, returns the …\n",null,1],["source_encoding","Encoding::Converter","ruby/classes/Encoding/Converter.html#method-i-source_encoding","()","<p>Returns the source encoding as an Encoding object.\n",null,1],["source_encoding","Encoding::InvalidByteSequenceError","ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,1],["source_encoding","Encoding::UndefinedConversionError","ruby/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,1],["source_encoding_name","Encoding::InvalidByteSequenceError","ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,1],["source_encoding_name","Encoding::UndefinedConversionError","ruby/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,1],["source_extracts","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-source_extracts","()","",null,0],["source_file","IRB::IrbLoader","ruby/classes/IRB/IrbLoader.html#method-i-source_file","(path)","<p>Loads a given file in the current session and displays the source lines\n<p>See Irb#suspend_input_method for …\n",null,1],["source_for","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-source_for","(spec)","",null,1],["source_location","Binding","ruby/classes/Binding.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number of the binding object.\n",null,1],["source_location","Method","ruby/classes/Method.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or nil if this method was not …\n",null,1],["source_location","Proc","ruby/classes/Proc.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this proc or <code>nil</code> if this proc was not defined …\n",null,1],["source_location","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or nil if this method was not …\n",null,1],["source_ole_types","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-source_ole_types","()","<p>Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having …\n",null,1],["source_paths","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-source_paths","()","<p>Returns the paths to the source files for use with analysis and documentation tools.  These paths are …\n",null,1],["source_root","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-source_root","(path = nil)","<p>Returns the source root for this generator using default_source_root as default.\n",null,0],["source_to_show_id","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-source_to_show_id","()","",null,0],["sources","Gem","ruby/classes/Gem.html#method-c-sources","()","<p>Returns an Array of sources to fetch remote gems from. Uses default_sources if the sources list is empty. …\n",null,1],["sources=","Gem","ruby/classes/Gem.html#method-c-sources-3D","(new_sources)","<p>Need to be able to set the sources without calling Gem.sources.replace since that would cause an infinite …\n",null,1],["space","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-space","()","<p>Returns the string that is used to insert a space between the tokens in a JSON string.\n",null,1],["space=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-space-3D","(p1)","<p>Sets <em>space</em> to the string that is used to insert a space between the tokens in a JSON string.\n",null,1],["space_before","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-space_before","()","<p>Returns the string that is used to insert a space before the ‘:’ in JSON objects.\n",null,1],["space_before=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-space_before-3D","(p1)","<p>Sets the string that is used to insert a space before the ‘:’ in JSON objects.\n",null,1],["spawn","Kernel","ruby/classes/Kernel.html#method-i-spawn","(*args)","<p>Creates a new child process by doing one of the following in that process:\n<p>Passing string <code>command_line</code> …\n",null,1],["spawn","PTY","ruby/classes/PTY.html#method-c-spawn","(*args)","<p>Spawns the specified command on a newly allocated pty. You can also use the alias ::getpty.\n<p>The command’s …\n",null,1],["spawn","Process","ruby/classes/Process.html#method-c-spawn","(*args)","<p>Creates a new child process by doing one of the following in that process:\n<p>Passing string <code>command_line</code> …\n",null,1],["spec","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-spec","()","<p>Lazy accessor for the installer’s spec.\n",null,1],["spec","Gem::Package","ruby/classes/Gem/Package.html#method-i-spec","()","<p>The spec for this gem.\n<p>If this is a package for a built gem the spec is loaded from the gem and returned. …\n",null,1],["spec","Gem::Package::Old","ruby/classes/Gem/Package/Old.html#method-i-spec","()","<p>The specification for this gem\n",null,1],["spec","Gem::Resolver::LockSpecification","ruby/classes/Gem/Resolver/LockSpecification.html#method-i-spec","()","<p>A specification constructed from the lockfile is returned\n",null,1],["spec_cache_dir","Gem","ruby/classes/Gem.html#method-c-spec_cache_dir","()","",null,1],["spec_dir","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-spec_dir","()","<p>Returns the full path to the directory containing this spec’s gemspec file. eg: /usr/local/lib/ruby/gems/1.8/specifications …\n",null,1],["spec_file","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-spec_file","()","<p>The location of the spec file that is installed.\n",null,1],["spec_file","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-spec_file","()","<p>Returns the full path to this spec’s gemspec file. eg: /usr/local/lib/ruby/gems/1.8/specifications/mygem-1.0.gemspec …\n",null,1],["spec_for","Gem::Commands::ContentsCommand","ruby/classes/Gem/Commands/ContentsCommand.html#method-i-spec_for","(name)","",null,1],["spec_for","Gem::Commands::OpenCommand","ruby/classes/Gem/Commands/OpenCommand.html#method-i-spec_for","(name)","",null,1],["spec_for_dependency","Gem::SpecFetcher","ruby/classes/Gem/SpecFetcher.html#method-i-spec_for_dependency","(dependency, matching_platform=true)","<p>Find and fetch specs that match <code>dependency</code>.\n<p>If <code>matching_platform</code> is false, gems for all platforms are …\n",null,1],["spec_groups","Gem::RequestSet::Lockfile","ruby/classes/Gem/RequestSet/Lockfile.html#method-i-spec_groups","()","",null,1],["spec_name","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-spec_name","()","<p>Return the name that the gemspec file would be\n",null,1],["spec_name","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-spec_name","()","<p>The default name of the gemspec.  See also #file_name\n\n<pre><code>spec.spec_name # =&gt; &quot;example-1.0.gemspec&quot;\n</code></pre>\n",null,1],["spec_path","Gem::Commands::LockCommand","ruby/classes/Gem/Commands/LockCommand.html#method-i-spec_path","(gem_full_name)","",null,1],["spec_predecessors","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-spec_predecessors","()","<p>Return a hash of predecessors.  <code>result[spec]</code> is an Array of gemspecs that have a dependency satisfied …\n",null,1],["special_prefixes=","Reline::Core","ruby/classes/Reline/Core.html#method-i-special_prefixes-3D","(v)","",null,1],["specific?","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-specific-3F","()","<p>True if the dependency will not always match the latest version.\n",null,1],["specific?","Gem::Requirement","ruby/classes/Gem/Requirement.html#method-i-specific-3F","()","<p>True if the requirement will not always match the latest version.\n",null,1],["specific_extra_args","Gem::Command","ruby/classes/Gem/Command.html#method-c-specific_extra_args","(cmd)","<p>Return an array of extra arguments for the command.  The extra arguments come from the gem configuration …\n",null,1],["specific_extra_args_hash","Gem::Command","ruby/classes/Gem/Command.html#method-c-specific_extra_args_hash","()","<p>Accessor for the specific extra args hash (self initializing).\n",null,1],["specs","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-specs","()","",null,1],["specs","Gem::Source::Git","ruby/classes/Gem/Source/Git.html#method-i-specs","()","<p>Loads all gemspecs in the repository\n",null,1],["specs_in","Gem::RequestSet","ruby/classes/Gem/RequestSet.html#method-i-specs_in","(dir)","",null,1],["specs_path","Bundler","ruby/classes/Bundler.html#method-c-specs_path","()","",null,1],["spell_checker","DidYouMean::Correctable","ruby/classes/DidYouMean/Correctable.html#method-i-spell_checker","()","",null,1],["spell_checkers","DidYouMean","ruby/classes/DidYouMean.html#method-c-spell_checkers","()","<p>Returns a sharable hash map of error types and spell checker objects.\n",null,1],["split","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-split","(*args)","<p>Works just like <code>String#split</code>, with the exception that the items in the resulting list are Chars instances …\n",null,0],["split","Array","rails/classes/Array.html#method-i-split","(value = nil, &block)","<p>Divides the array into one or more subarrays based on a delimiting <code>value</code> or the result of an optional …\n",null,0],["split","BigDecimal","ruby/classes/BigDecimal.html#method-i-split","()","<p>Splits a BigDecimal number into four parts, returned as an array of values.\n<p>The first value represents …\n",null,1],["split","File","ruby/classes/File.html#method-c-split","(p1)","<p>Splits the given string into a directory and a file component and returns them in a two-element array. …\n",null,1],["split","Pathname","ruby/classes/Pathname.html#method-i-split","()","<p>Returns the #dirname and the #basename in an Array.\n<p>See File.split.\n",null,1],["split","Shellwords","ruby/classes/Shellwords.html#method-c-split","(line)","",null,1],["split","String","ruby/classes/String.html#method-i-split","(p1 = v1, p2 = v2)","<p>Returns an array of substrings of <code>self</code> that are the result of splitting <code>self</code> at each occurrence of the …\n",null,1],["split","URI","ruby/classes/URI.html#method-c-split","(uri)","<p>Returns a 9-element array representing the parts of the URI formed from the string <code>uri</code>; each array element …\n",null,1],["split","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-split","(uri)","<p>Returns a split URI against <code>regexp[:ABS_URI]</code>.\n",null,1],["split","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-split","(uri)","<p>Returns a split URI against <code>regexp[:ABS_URI]</code>.\n",null,1],["split_by_width","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-split_by_width","(str, max_width, encoding = str.encoding)","",null,1],["spot","ErrorHighlight","ruby/classes/ErrorHighlight.html#method-c-spot","(obj, **opts)","<p>Identify the code fragment at that a given exception occurred.\n<p>Options:\n<p>point_type: :name | :args\n",null,1],["spot","ErrorHighlight::Spotter","ruby/classes/ErrorHighlight/Spotter.html#method-i-spot","()","",null,1],["sprintf","Kernel","ruby/classes/Kernel.html#method-i-sprintf","(*args)","<p>Returns the string resulting from formatting <code>objects</code> into <code>format_string</code>.\n<p>For details on <code>format_string</code> …\n",null,1],["sql","ActiveRecord::LogSubscriber","rails/classes/ActiveRecord/LogSubscriber.html#method-i-sql","(event)","",null,0],["sql","Arel","rails/classes/Arel.html#method-c-sql","(raw_sql)","<p>Wrap a known-safe SQL string for passing to query methods, e.g.\n\n<pre><code>Post.order(Arel.sql(&quot;REPLACE(title, &#39;misc&#39;, ...\n</code></pre>\n",null,0],["sqlite3.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/sqlite3_yml_tt.html","","<p># SQLite. Versions 3.8.0 and up are supported. #   gem install sqlite3 # #   Ensure the SQLite 3 gem …\n",null,0],["sqlserver.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/databases/sqlserver_yml_tt.html","","<p># SQL Server (2012 or higher required) # # Install the adapters and driver #   gem install tiny_tds # …\n",null,0],["sqr","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-sqr","()","",null,1],["sqrt","BigDecimal","ruby/classes/BigDecimal.html#method-i-sqrt","(p1)","<p>Returns the square root of the value.\n<p>Result has at least n significant digits.\n",null,1],["sqrt","BigMath","ruby/classes/BigMath.html#method-i-sqrt","(x, prec)","<p>Computes the square root of <code>decimal</code> to the specified number of digits of precision, <code>numeric</code>.\n\n<pre><code>BigMath.sqrt(BigDecimal(&#39;2&#39;), ...\n</code></pre>\n",null,1],["sqrt","Integer","ruby/classes/Integer.html#method-c-sqrt","(p1)","<p>Returns the integer square root of the non-negative integer <code>n</code>, which is the largest non-negative integer …\n",null,1],["sqrt","Math","ruby/classes/Math.html#method-c-sqrt","(p1)","<p>Returns the principal (non-negative) square root of <code>x</code>.\n<p>Domain: <code>[0, INFINITY]</code>.\n<p>Range: <code>[0, INFINITY]</code>.\n",null,1],["squeeze","String","ruby/classes/String.html#method-i-squeeze","(*args)","<p>Returns a copy of <code>self</code> with characters specified by <code>selectors</code> “squeezed” (see Multiple Character …\n",null,1],["squeeze!","String","ruby/classes/String.html#method-i-squeeze-21","(*args)","<p>Like String#squeeze, but modifies <code>self</code> in place. Returns <code>self</code> if any changes were made, <code>nil</code> otherwise. …\n",null,1],["squish","String","rails/classes/String.html#method-i-squish","()","<p>Returns the string, first removing all whitespace on both ends of the string, and then changing remaining …\n",null,0],["squish!","String","rails/classes/String.html#method-i-squish-21","()","<p>Performs a destructive squish. See String#squish.\n\n<pre><code>str = &quot; foo   bar    \\n   \\t   boo&quot;\nstr.squish!     ...\n</code></pre>\n",null,0],["srand","Kernel","ruby/classes/Kernel.html#method-i-srand","(*args)","<p>Seeds the system pseudo-random number generator, with <code>number</code>. The previous seed value is returned.\n<p>If …\n",null,1],["srand","Random","ruby/classes/Random.html#method-c-srand","(*args)","<p>Seeds the system pseudo-random number generator, with <code>number</code>. The previous seed value is returned.\n<p>If …\n",null,1],["src_type","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-src_type","()","<p>Returns source class when the OLE class is ‘Alias’.\n\n<pre><code>tobj =  WIN32OLE_TYPE.new(&#39;Microsoft Office ...\n</code></pre>\n",null,1],["ssl_version","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-ssl_version","()","<p>Returns a String representing the SSL/TLS version that was negotiated for the connection, for example …\n",null,1],["ssl_version=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-ssl_version-3D","(meth)","<p>Sets the SSL/TLS protocol version for the context. This forces connections to use only the specified …\n",null,1],["stale?","ActionController::ConditionalGet","rails/classes/ActionController/ConditionalGet.html#method-i-stale-3F","(object = nil, **freshness_kwargs)","<p>Sets the <code>etag</code> and/or <code>last_modified</code> on the response and checks them against the request. If the request …\n",null,0],["stale_session_check!","ActionDispatch::Session::StaleSessionCheck","rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-stale_session_check-21","()","",null,0],["standard_library","","ruby/files/ruby/doc/standard_library_rdoc.html","","<p>Ruby Standard Library\n<p>The Ruby Standard Library is a vast collection of classes and modules that you can …\n",null,1],["standard_port","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-standard_port","()","<p>Returns the standard port number for this request’s protocol.\n\n<pre><code>req = ActionDispatch::Request.new &#39;HTTP_HOST&#39; ...\n</code></pre>\n",null,0],["standard_port?","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-standard_port-3F","()","<p>Returns whether this request is using the standard port\n\n<pre><code>req = ActionDispatch::Request.new &#39;HTTP_HOST&#39; ...\n</code></pre>\n",null,0],["start","ActionView::LogSubscriber","rails/classes/ActionView/LogSubscriber.html#method-i-start","(name, id, payload)","",null,0],["start","ActiveSupport::LogSubscriber","rails/classes/ActiveSupport/LogSubscriber.html#method-i-start","(name, id, payload)","",null,0],["start","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-start","(name, id, payload)","",null,0],["start","ActiveSupport::Notifications::Fanout::Subscribers::EventObject","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/EventObject.html#method-i-start","(name, id, payload)","",null,0],["start","ActiveSupport::Notifications::Instrumenter","rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-start","(name, payload)","<p>Send a start notification with <code>name</code> and <code>payload</code>.\n",null,0],["start","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-i-start","(name, id, payload)","",null,0],["start","Rails::Console","rails/classes/Rails/Console.html#method-i-start","()","",null,0],["start","Rails::Console","rails/classes/Rails/Console.html#method-c-start","(*args)","",null,0],["start","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-i-start","()","",null,0],["start","Rails::DBConsole","rails/classes/Rails/DBConsole.html#method-c-start","(*args)","",null,0],["start","Rails::Server","rails/classes/Rails/Server.html#method-i-start","(after_stop_callback = nil)","",null,0],["start","Coverage","ruby/classes/Coverage.html#method-c-start","(*args)","<p>Enables the coverage measurement. See the documentation of Coverage class in detail. This is equivalent …\n",null,1],["start","Date","ruby/classes/Date.html#method-i-start","()","<p>Returns the Julian start date for calendar reform; if not an infinity, the returned value is suitable …\n",null,1],["start","GC","ruby/classes/GC.html#method-c-start","(full_mark: true, immediate_mark: true, immediate_sweep: true)","<p>Initiates garbage collection, even if manually disabled.\n<p>The <code>full_mark</code> keyword argument determines whether …\n",null,1],["start","IRB","ruby/classes/IRB.html#method-c-start","(ap_path = nil)","<p>Initializes IRB and creates a new Irb.irb object at the <code>TOPLEVEL_BINDING</code>\n",null,1],["start","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-start","(address, *arg)","<p>Creates a new Net::HTTP object, <code>http</code>, via Net::HTTP.new:\n<p>For arguments <code>address</code> and <code>port</code>, see Net::HTTP.new …\n",null,1],["start","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-start","()","<p>Starts an HTTP session.\n<p>Without a block, returns <code>self</code>:\n\n<pre><code>http = Net::HTTP.new(hostname)\n# =&gt; #&lt;Net::HTTP ...\n</code></pre>\n",null,1],["start","Psych::Streaming","ruby/classes/Psych/Streaming.html#method-i-start","(encoding = Nodes::Stream::UTF8)","<p>Start streaming using <code>encoding</code>\n",null,1],["start","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-start","(encoding = Nodes::Stream::UTF8)","",null,1],["start","Thread","ruby/classes/Thread.html#method-c-start","(*args)","<p>Basically the same as ::new. However, if class Thread is subclassed, then calling <code>start</code> in that subclass …\n",null,1],["start!","ActiveSupport::Notifications::Event","rails/classes/ActiveSupport/Notifications/Event.html#method-i-start-21","()","<p>Record information at the time this event starts\n",null,0],["start.coffee","","rails/files/rails/actionview/app/assets/javascripts/rails-ujs/start_coffee.html","","<p>{\n\n<pre><code>fire, delegate\ngetData, $\nrefreshCSRFTokens, CSRFProtection\nloadCSPNonce\nenableElement, disableElement, ...\n</code></pre>\n",null,0],["start_character_column","Prism::Location","ruby/classes/Prism/Location.html#method-i-start_character_column","()","<p>The column number in characters where this location ends from the start of the line.\n",null,1],["start_character_offset","Prism::Location","ruby/classes/Prism/Location.html#method-i-start_character_offset","()","<p>The character offset from the beginning of the source where this location starts.\n",null,1],["start_collecting_tokens","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-i-start_collecting_tokens","()","",null,1],["start_column","Prism::Location","ruby/classes/Prism/Location.html#method-i-start_column","()","<p>The column number in bytes where this location starts from the start of the line.\n",null,1],["start_doc","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-start_doc","()","<p>Enable capture of documentation unless documentation has been turned off by :enddoc:\n",null,1],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_document","()","",null,0],["start_document","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-start_document","(p1, p2, p3)","<p>Start a document emission with YAML <code>version</code>, <code>tags</code>, and an <code>implicit</code> start.\n<p>See Psych::Handler#start_document …\n",null,1],["start_document","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-start_document","(version, tag_directives, implicit)","<p>Called when the document starts with the declared <code>version</code>, <code>tag_directives</code>, if the document is <code>implicit</code> …\n",null,1],["start_document","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-i-start_document","(version, tag_directives, implicit)","<p>Handles start_document events with <code>version</code>, <code>tag_directives</code>, and <code>implicit</code> styling.\n<p>See Psych::Handler#start_document …\n",null,1],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_element","(name, attrs = [])","",null,0],["start_exclusive","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-i-start_exclusive","(purpose: nil, compatible: [], no_wait: false)","<p>Returns false if <code>no_wait</code> is set and the lock is not immediately available. Otherwise, returns true after …\n",null,0],["start_line","Prism::Location","ruby/classes/Prism/Location.html#method-i-start_line","()","<p>The line number where this location starts.\n",null,1],["start_line_slice","Prism::Location","ruby/classes/Prism/Location.html#method-i-start_line_slice","()","<p>The content of the line where this location starts before this location.\n",null,1],["start_mapping","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-start_mapping","(p1, p2, p3, p4)","<p>Start emitting a YAML map with <code>anchor</code>, <code>tag</code>, an <code>implicit</code> start and end, and <code>style</code>.\n<p>See Psych::Handler#start_mapping …\n",null,1],["start_mapping","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-start_mapping","(anchor, tag, implicit, style)","<p>Called when a map starts.\n<p><code>anchor</code> is the anchor associated with the map or <code>nil</code>. <code>tag</code> is the tag associated …\n",null,1],["start_pasting","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-start_pasting","()","",null,1],["start_processing","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-start_processing","(event)","",null,0],["start_running","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-start_running","()","",null,0],["start_sequence","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-start_sequence","(p1, p2, p3, p4)","<p>Start emitting a sequence with <code>anchor</code>, a <code>tag</code>, <code>implicit</code> sequence start and end, along with <code>style</code>.\n<p>See  …\n",null,1],["start_sequence","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-start_sequence","(anchor, tag, implicit, style)","<p>Called when a sequence is started.\n<p><code>anchor</code> is the anchor associated with the sequence or nil. <code>tag</code> is the …\n",null,1],["start_service","DRb","ruby/classes/DRb.html#method-c-start_service","(uri=nil, front=nil, config=nil)","<p>Start a dRuby server locally.\n<p>The new dRuby server will become the primary server, even if another server …\n",null,1],["start_sharing","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-i-start_sharing","()","",null,0],["start_stream","Psych::Emitter","ruby/classes/Psych/Emitter.html#method-i-start_stream","(p1)","<p>Start a stream emission with <code>encoding</code>\n<p>See Psych::Handler#start_stream\n",null,1],["start_stream","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-start_stream","(encoding)","<p>Called with <code>encoding</code> when the YAML stream starts.  This method is called once per stream.  A stream may …\n",null,1],["start_stream","Psych::TreeBuilder","ruby/classes/Psych/TreeBuilder.html#method-i-start_stream","(encoding)","",null,1],["start_unloading","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-start_unloading","()","",null,0],["start_with?","Reline::KeyStroke","ruby/classes/Reline/KeyStroke.html#method-i-start_with-3F","(me, other)","",null,1],["start_with?","String","ruby/classes/String.html#method-i-start_with-3F","(*args)","<p>Returns whether <code>self</code> starts with any of the given <code>string_or_regexp</code>.\n<p>Matches patterns against the beginning …\n",null,1],["start_with?","Symbol","ruby/classes/Symbol.html#method-i-start_with-3F","(*args)","<p>Equivalent to <code>self.to_s.start_with?</code>; see String#start_with?.\n",null,1],["started?","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-started-3F","()","<p>Returns <code>true</code> if the HTTP session has been started:\n\n<pre><code>http = Net::HTTP.new(hostname)\nhttp.started? # =&gt; false ...\n</code></pre>\n",null,1],["started_request_message","Rails::Rack::Logger","rails/classes/Rails/Rack/Logger.html#method-i-started_request_message","(request)","<p>Started GET “/session/new” for 127.0.0.1 at 2012-09-26 14:51:42 -0700\n",null,0],["stash_changes","SyntaxSuggest::ScanHistory","ruby/classes/SyntaxSuggest/ScanHistory.html#method-i-stash_changes","()","<p>Discards any changes that have not been committed\n",null,1],["stat","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-stat","()","<p>Return connection pool’s usage statistic Example:\n\n<pre><code>ActiveRecord::Base.connection_pool.stat # =&gt; { size: ...\n</code></pre>\n",null,0],["stat","CSV","ruby/classes/CSV.html#method-i-stat","(*args)","",null,1],["stat","File","ruby/classes/File.html#method-c-stat","(p1)","<p>Returns a File::Stat object for the file at <code>filepath</code> (see File::Stat):\n\n<pre><code>File.stat(&#39;t.txt&#39;).class # =&gt; File::Stat\n</code></pre>\n",null,1],["stat","GC","ruby/classes/GC.html#method-c-stat","(hash_or_key = nil)","<p>Returns a Hash containing information about the GC.\n<p>The contents of the hash are implementation specific …\n",null,1],["stat","IO","ruby/classes/IO.html#method-i-stat","()","<p>Returns status information for <em>ios</em> as an object of type File::Stat.\n\n<pre><code>f = File.new(&quot;testfile&quot;)\ns = f.stat ...\n</code></pre>\n",null,1],["stat","Pathname","ruby/classes/Pathname.html#method-i-stat","()","<p>Returns a File::Stat object.\n<p>See File.stat.\n",null,1],["stat","RubyVM","ruby/classes/RubyVM.html#method-c-stat","(*args)","<p>Returns a Hash containing implementation-dependent counters inside the VM.\n<p>This hash includes information …\n",null,1],["stat","TracePoint","ruby/classes/TracePoint.html#method-c-stat","()","<p>Returns internal information of TracePoint.\n<p>The contents of the returned value are implementation specific. …\n",null,1],["stat_heap","GC","ruby/classes/GC.html#method-c-stat_heap","(heap_name = nil, hash_or_key = nil)","<p>Returns information for heaps in the GC.\n<p>If the first optional argument, <code>heap_name</code>, is passed in and not …\n",null,1],["state","Coverage","ruby/classes/Coverage.html#method-c-state","()","<p>Returns the state of the coverage measurement.\n",null,1],["state","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-state","()","<p>A description of the current connection state. This is for diagnostic purposes only.\n",null,1],["state","Prism::LexCompat::Token","ruby/classes/Prism/LexCompat/Token.html#method-i-state","()","<p>The state of the lexer when this token was produced.\n",null,1],["state","Ripper::Filter","ruby/classes/Ripper/Filter.html#method-i-state","()","<p>The scanner’s state of the current token. This value is the bitwise OR of zero or more of the <code>Ripper::EXPR_*</code> …\n",null,1],["state_file","Gem","ruby/classes/Gem.html#method-c-state_file","()","<p>The path to standard location of the user’s state file.\n",null,1],["state_file_name","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-state_file_name","()","<p>The name of the state file.\n",null,1],["state_file_writable?","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-state_file_writable-3F","()","<p>Check state file is writable. Creates empty file if not present to ensure we can write to it.\n",null,1],["state_home","Gem","ruby/classes/Gem.html#method-c-state_home","()","<p>The path to standard location of the user’s state directory.\n",null,1],["statistics","ActionCable::Connection::Base","rails/classes/ActionCable/Connection/Base.html#method-i-statistics","()","<p>Return a basic hash of statistics for the connection keyed with <code>identifier</code>, <code>started_at</code>, <code>subscriptions</code> …\n",null,0],["statistics.rake","","rails/files/rails/railties/lib/rails/tasks/statistics_rake.html","","<p># frozen_string_literal: true\n<p># While global constants are bad, many 3rd party tools depend on this one …\n",null,0],["stats","ActiveSupport::Cache::MemCacheStore","rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-stats","()","<p>Get the statistics from the memcached servers.\n",null,0],["stats","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-i-stats","()","<p>Get info from redis servers.\n",null,0],["stats_enabled?","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-stats_enabled-3F","()","<p>Check if <code>--yjit-stats</code> is used.\n",null,1],["stats_string","RubyVM::YJIT","ruby/classes/RubyVM/YJIT.html#method-c-stats_string","()","<p>Format and print out counters as a String. This returns a non-empty\ncontent only when <code>--yjit-stats</code> is ...\n",null,1],["status","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-status","()","<p>Returns an Array of statuses for this response.  Each status contains a CertificateId, the status (0 …\n",null,1],["status","OpenSSL::OCSP::Response","ruby/classes/OpenSSL/OCSP/Response.html#method-i-status","()","<p>Returns the status of the response.\n",null,1],["status","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-status","()","<p>Returns one of GRANTED, GRANTED_WITH_MODS, REJECTION, WAITING, REVOCATION_WARNING or REVOCATION_NOTIFICATION …\n",null,1],["status","PTY::ChildExited","ruby/classes/PTY/ChildExited.html#method-i-status","()","<p>Returns the exit status of the child for which PTY#check raised this exception\n",null,1],["status","SystemExit","ruby/classes/SystemExit.html#method-i-status","()","<p>Return the status value associated with this system exit.\n",null,1],["status","Thread","ruby/classes/Thread.html#method-i-status","()","<p>Returns the status of <code>thr</code>.\n<p><code>&quot;sleep&quot;</code> &mdash; Returned if this thread is sleeping or waiting on I/O\n<p><code>&quot;run&quot;</code> … &mdash; ",null,1],["status=","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-status-3D","(status)","<p>Sets the HTTP status code.\n",null,0],["status?","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-status-3F","()","<p>Return <code>true</code> if the PRNG has been seeded with enough data, <code>false</code> otherwise.\n",null,1],["status_code","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-status_code","()","",null,0],["status_code_for_exception","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-c-status_code_for_exception","(class_name)","",null,0],["status_message","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-status_message","()","",null,0],["status_string","OpenSSL::OCSP::Response","ruby/classes/OpenSSL/OCSP/Response.html#method-i-status_string","()","<p>Returns a status string for the response.\n",null,1],["status_text","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-status_text","()","<p>In cases of failure this field may contain an array of strings further describing the origin of the failure. …\n",null,1],["step","Date","ruby/classes/Date.html#method-i-step","(p1, p2 = v2)","<p>Calls the block with specified dates; returns <code>self</code>.\n<p>The first <code>date</code> is <code>self</code>.\n<p>Each successive <code>date</code> is <code>date</code> …\n",null,1],["step","Enumerator::ArithmeticSequence","ruby/classes/Enumerator/ArithmeticSequence.html#method-i-step","()","",null,1],["step","Numeric","ruby/classes/Numeric.html#method-i-step","(*args)","\n<pre><code>Generates a sequence of numbers; with a block given, traverses the sequence.\n\nOf the Core and Standard ...\n</code></pre>\n",null,1],["step","Range","ruby/classes/Range.html#method-i-step","(*args)","<p>Iterates over the elements of <code>self</code>.\n<p>With a block given and no argument, calls the block each element of …\n",null,1],["sti_class_for","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-sti_class_for","(type_name)","<p>Returns the class for the provided <code>type_name</code>.\n<p>It is used to find the class correspondent to the value …\n",null,0],["sti_name","ActiveRecord::Inheritance::ClassMethods","rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-sti_name","()","<p>Returns the value to be stored in the inheritance column for STI.\n",null,0],["sticky?","File","ruby/classes/File.html#method-c-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n<p><em>file_name</em> can be an IO object.\n",null,1],["sticky?","File::Stat","ruby/classes/File/Stat.html#method-i-sticky-3F","()","<p>Returns <code>true</code> if <em>stat</em> has its sticky bit set, <code>false</code> if it doesn’t or if the operating system doesn’t …\n",null,1],["sticky?","FileTest","ruby/classes/FileTest.html#method-i-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n<p><em>file_name</em> can be an IO object.\n",null,1],["sticky?","Pathname","ruby/classes/Pathname.html#method-i-sticky-3F","()","<p>See FileTest.sticky?.\n",null,1],["stop","ActionCable::Connection::StreamEventLoop","rails/classes/ActionCable/Connection/StreamEventLoop.html#method-i-stop","()","",null,0],["stop","Thread","ruby/classes/Thread.html#method-c-stop","()","<p>Stops execution of the current thread, putting it into a “sleep” state, and schedules execution …\n",null,1],["stop?","SyntaxSuggest::PathnameFromMessage","ruby/classes/SyntaxSuggest/PathnameFromMessage.html#method-i-stop-3F","()","",null,1],["stop?","Thread","ruby/classes/Thread.html#method-i-stop-3F","()","<p>Returns <code>true</code> if <code>thr</code> is dead or sleeping.\n\n<pre><code>a = Thread.new { Thread.stop }\nb = Thread.current\na.stop?   #=&gt; ...\n</code></pre>\n",null,1],["stop_after_kw","SyntaxSuggest::AroundBlockScan","ruby/classes/SyntaxSuggest/AroundBlockScan.html#method-i-stop_after_kw","()","<p>Tells ‘scan_while` to look for mismatched keyword/end-s\n<p>When scanning up, if we see more keywords then …\n",null,1],["stop_all_streams","ActionCable::Channel::Streams","rails/classes/ActionCable/Channel/Streams.html#method-i-stop_all_streams","()","<p>Unsubscribes all streams associated with this channel from the pubsub queue.\n",null,0],["stop_doc","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-stop_doc","()","<p>Disable capture of documentation\n",null,1],["stop_exclusive","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-i-stop_exclusive","(compatible: [])","<p>Relinquish the exclusive lock. Must only be called by the thread that called start_exclusive (and currently …\n",null,0],["stop_pool","DRb::DRbConn","ruby/classes/DRb/DRbConn.html#method-c-stop_pool","()","",null,1],["stop_service","DRb","ruby/classes/DRb.html#method-c-stop_service","()","<p>Stop the local dRuby server.\n<p>This operates on the primary server.  If there is no primary server currently …\n",null,1],["stop_service","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-stop_service","()","<p>Stop this server.\n",null,1],["stop_service","DRb::ExtServ","ruby/classes/DRb/ExtServ.html#method-i-stop_service","()","",null,1],["stop_sharing","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-i-stop_sharing","()","",null,0],["stop_stream_for","ActionCable::Channel::Streams","rails/classes/ActionCable/Channel/Streams.html#method-i-stop_stream_for","(model)","<p>Unsubscribes streams for the <code>model</code>.\n",null,0],["stop_stream_from","ActionCable::Channel::Streams","rails/classes/ActionCable/Channel/Streams.html#method-i-stop_stream_from","(broadcasting)","<p>Unsubscribes streams from the named <code>broadcasting</code>.\n",null,0],["stopped?","Process::Status","ruby/classes/Process/Status.html#method-i-stopped-3F","()","<p>Returns <code>true</code> if this process is stopped, and if the corresponding #wait call had the Process::WUNTRACED …\n",null,1],["stopsig","Process::Status","ruby/classes/Process/Status.html#method-i-stopsig","()","<p>Returns the number of the signal that caused the process to stop, or <code>nil</code> if the process is not stopped. …\n",null,1],["storage","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-storage","()","",null,0],["storage","Fiber","ruby/classes/Fiber.html#method-i-storage","()","<p>Returns a copy of the storage hash for the fiber. The method can only be called on the Fiber.current …\n",null,1],["storage.yml.tt","","rails/files/rails/railties/lib/rails/generators/rails/app/templates/config/storage_yml_tt.html","","<p>test:\n\n<pre><code>service: Disk\nroot: &lt;%%= Rails.root.join(&quot;tmp/storage&quot;) %&gt;\n</code></pre>\n<p>local:\n",null,0],["storage=","Fiber","ruby/classes/Fiber.html#method-i-storage-3D","(p1)","<p>Sets the storage hash for the fiber. This feature is experimental and may change in the future. The method …\n",null,1],["store","ActiveRecord::Store::ClassMethods","rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-store","(store_attribute, options = {})","",null,0],["store","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-store","(key, value)","",null,0],["store","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-store","(key, value)","",null,0],["store","ENV","ruby/classes/ENV.html#method-c-store","(p1, p2)","<p>Creates, updates, or deletes the named environment variable, returning the value. Both <code>name</code> and <code>value</code> …\n",null,1],["store","Hash","ruby/classes/Hash.html#method-i-store","(p1, p2)","<p>Associates the given <code>value</code> with the given <code>key</code>; returns <code>value</code>.\n<p>If the given <code>key</code> exists, replaces its value …\n",null,1],["store","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-store","( key, val )","<p>Stores <code>value</code> in database with <code>key</code> as the index. <code>value</code> is converted to YAML before being stored.\n<p>Returns …\n",null,1],["store=","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-store-3D","(store)","<p>Sets the store for this method and its referenced code objects.\n",null,1],["store=","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,1],["store=","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-store-3D","(store)","<p>Sets the <code>store</code> that contains this CodeObject\n",null,1],["store=","RDoc::Constant","ruby/classes/RDoc/Constant.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,1],["store=","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,1],["store=","RDoc::Mixin","ruby/classes/RDoc/Mixin.html#method-i-store-3D","(store)","<p>Sets the store for this class or module and its contained code objects.\n",null,1],["store=","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-store-3D","(store)","<p>Sets the current documentation tree to <code>store</code> and sets the store’s rdoc driver to this instance.\n",null,1],["store_accessor","ActiveRecord::Store::ClassMethods","rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-store_accessor","(store_attribute, *keys, prefix: nil, suffix: nil)","",null,0],["store_for","RDoc::Servlet","ruby/classes/RDoc/Servlet.html#method-i-store_for","(source_name)","<p>Returns an RDoc::Store for the given <code>source_name</code> (‘ruby’ or a gem name).\n",null,1],["store_inherited","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-c-store_inherited","(klass, descendant)","<p>This is the only method that is not thread safe, but is only ever called during the eager loading phase. …\n",null,0],["stored_attributes","ActiveRecord::Store::ClassMethods","rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-stored_attributes","()","",null,0],["stream?","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-stream-3F","()","",null,1],["stream?","Psych::Nodes::Stream","ruby/classes/Psych/Nodes/Stream.html#method-i-stream-3F","()","",null,1],["stream_end?","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-stream_end-3F","()","<p>Returns true if the stream is finished.\n",null,1],["stream_for","ActionCable::Channel::Streams","rails/classes/ActionCable/Channel/Streams.html#method-i-stream_for","(model, callback = nil, coder: nil, &block)","<p>Start streaming the pubsub queue for the <code>model</code> in this channel. Optionally, you can pass a <code>callback</code> that’ll …\n",null,0],["stream_from","ActionCable::Channel::Streams","rails/classes/ActionCable/Channel/Streams.html#method-i-stream_from","(broadcasting, callback = nil, coder: nil, &block)","<p>Start streaming from the named <code>broadcasting</code> pubsub queue. Optionally, you can pass a <code>callback</code> that’ll …\n",null,0],["stream_or_reject_for","ActionCable::Channel::Streams","rails/classes/ActionCable/Channel/Streams.html#method-i-stream_or_reject_for","(model)","<p>Calls stream_for with the given <code>model</code> if it’s present to start streaming, otherwise rejects the subscription. …\n",null,0],["streaming?","Psych::Handler","ruby/classes/Psych/Handler.html#method-i-streaming-3F","()","<p>Is this handler a streaming handler?\n",null,1],["stress","GC","ruby/classes/GC.html#method-c-stress","()","<p>Returns current status of GC stress mode.\n",null,1],["stress=","GC","ruby/classes/GC.html#method-c-stress-3D","(flag)","<p>Updates the GC stress mode.\n<p>When stress mode is enabled, the GC is invoked at every GC opportunity: all …\n",null,1],["strftime","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-strftime","(format)","<p>Replaces <code>%Z</code> directive with +zone before passing to Time#strftime, so that zone information is correct. …\n",null,0],["strftime","Date","ruby/classes/Date.html#method-i-strftime","(*args)","<p>Returns a string representation of the date in <code>self</code>, formatted according the given <code>format</code>:\n\n<pre><code>Date.new(2001, ...\n</code></pre>\n",null,1],["strftime","DateTime","ruby/classes/DateTime.html#method-i-strftime","(*args)","<p>Returns a string representation of <code>self</code>, formatted according the given +format:\n\n<pre><code>DateTime.now.strftime ...\n</code></pre>\n",null,1],["strftime","Time","ruby/classes/Time.html#method-i-strftime","(p1)","<p>Returns a string representation of <code>self</code>, formatted according to the given string <code>format</code>. See Formats …\n",null,1],["strftime_formatting","","ruby/files/ruby/doc/strftime_formatting_rdoc.html","","<p>Formats for Dates and Times\n<p>Several Ruby time-related classes have instance method <code>strftime</code>, which returns …\n",null,1],["strict","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-strict","()","<p>If this boolean is false, types unsupported by the JSON format will be serialized as strings. If this …\n",null,1],["strict=","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-strict-3D","(p1)","<p>This sets whether or not to serialize types unsupported by the JSON format as strings. If this boolean …\n",null,1],["strict?","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-strict-3F","()","<p>If this boolean is false, types unsupported by the JSON format will be serialized as strings. If this …\n",null,1],["strict_decode64","Base64","ruby/classes/Base64.html#method-i-strict_decode64","(str)","<p>Returns a string containing the decoding of an RFC-2045-compliant Base64-encoded string <code>str</code>:\n\n<pre><code>s = &quot;VGhpcyBpcyBsaW5lIDEKVGhpcyBpcyBsaW5lIDIK&quot; ...\n</code></pre>\n",null,1],["strict_encode64","Base64","ruby/classes/Base64.html#method-i-strict_encode64","(bin)","<p>Returns a string containing the RFC-2045-compliant Base64-encoding of <code>bin</code>.\n<p>Per RFC 2045, the returned …\n",null,1],["strict_loading","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-strict_loading","(value = true)","<p>Sets the returned relation to strict_loading mode. This will raise an error if the record tries to lazily …\n",null,0],["strict_loading!","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-strict_loading-21","(value = true, mode: :all)","<p>Sets the record to strict_loading mode. This will raise an error if the record tries to lazily load an …\n",null,0],["strict_loading?","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-strict_loading-3F","()","<p>Returns <code>true</code> if the record is in strict_loading mode.\n",null,0],["strict_loading_n_plus_one_only?","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-strict_loading_n_plus_one_only-3F","()","<p>Returns <code>true</code> if the record uses strict_loading with <code>:n_plus_one_only</code> mode enabled.\n",null,0],["strict_loading_violation","ActiveRecord::LogSubscriber","rails/classes/ActiveRecord/LogSubscriber.html#method-i-strict_loading_violation","(event)","",null,0],["strict_match?","ActiveModel::Error","rails/classes/ActiveModel/Error.html#method-i-strict_match-3F","(attribute, type, **options)","<p>See if error matches provided <code>attribute</code>, <code>type</code>, and <code>options</code> exactly.\n<p>All params must be equal to Error’s …\n",null,0],["strict_mode?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-strict_mode-3F","()","",null,0],["strict_oct","Gem::Package::TarHeader","ruby/classes/Gem/Package/TarHeader.html#method-c-strict_oct","(str)","",null,1],["strike","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-strike","","<p>Enables the strike extension\n",null,1],["string","IO::Buffer","ruby/classes/IO/Buffer.html#method-c-string","(p1)","<p>Creates a new string of the given length and yields a zero-copy IO::Buffer instance to the block which …\n",null,1],["string","MatchData","ruby/classes/MatchData.html#method-i-string","()","<p>Returns the target string if it was frozen; otherwise, returns a frozen copy of the target string:\n\n<pre><code>m = ...\n</code></pre>\n",null,1],["string","StringIO","ruby/classes/StringIO.html#method-i-string","()","<p>Returns underlying string:\n\n<pre><code>StringIO.open(&#39;foo&#39;) do |strio|\n  p strio.string\n  strio.string = &#39;bar&#39;\n  p ...\n</code></pre>\n",null,1],["string","StringScanner","ruby/classes/StringScanner.html#method-i-string","()","<p>Returns the string being scanned.\n",null,1],["string=","StringIO","ruby/classes/StringIO.html#method-i-string-3D","(p1)","<p>Assigns the underlying string as <code>other_string</code>, and sets position to zero; returns <code>other_string</code>:\n\n<pre><code>StringIO.open(&#39;foo&#39;) ...\n</code></pre>\n",null,1],["string=","StringScanner","ruby/classes/StringScanner.html#method-i-string-3D","(p1)","<p>Changes the string being scanned to <code>str</code> and resets the scanner. Returns <code>str</code>.\n",null,1],["stringify_array","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-stringify_array","(array)","",null,0],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,0],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,0],["stringify_keys","Hash","rails/classes/Hash.html#method-i-stringify_keys","()","<p>Returns a new hash with all keys converted to strings.\n\n<pre><code>hash = { name: &#39;Rob&#39;, age: &#39;28&#39; }\n\nhash.stringify_keys ...\n</code></pre>\n",null,0],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,0],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,0],["stringify_keys!","Hash","rails/classes/Hash.html#method-i-stringify_keys-21","()","<p>Destructively converts all keys to strings. Same as <code>stringify_keys</code>, but modifies <code>self</code>.\n",null,0],["strip","String","ruby/classes/String.html#method-i-strip","()","<p>Returns a copy of the receiver with leading and trailing whitespace removed; see Whitespace in Strings …\n",null,1],["strip!","String","ruby/classes/String.html#method-i-strip-21","()","<p>Like String#strip, except that any modifications are made in <code>self</code>; returns <code>self</code> if any modification are …\n",null,1],["strip_comment","Gem::YAMLSerializer","ruby/classes/Gem/YAMLSerializer.html#method-i-strip_comment","(val)","",null,1],["strip_hashes","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-strip_hashes","(text)","<p>Strips leading # characters from <code>text</code>\n",null,1],["strip_heredoc","String","rails/classes/String.html#method-i-strip_heredoc","()","<p>Strips indentation in heredocs.\n<p>For example in\n\n<pre><code>if options[:usage]\n  puts &lt;&lt;-USAGE.strip_heredoc\n    This ...\n</code></pre>\n",null,0],["strip_links","ActionView::Helpers::SanitizeHelper","rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_links","(html)","<p>Strips all link tags from <code>html</code> leaving just the link text.\n\n<pre><code>strip_links(&#39;&lt;a href=&quot;http://www.rubyonrails.org&quot;&gt;Ruby ...\n</code></pre>\n",null,0],["strip_newlines","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-strip_newlines","(text)","<p>Strips leading and trailing n characters from <code>text</code>\n",null,1],["strip_stars","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-strip_stars","(text)","<p>Strips /* */ style comments\n",null,1],["strip_tags","ActionView::Helpers::SanitizeHelper","rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_tags","(html)","<p>Strips all HTML tags from <code>html</code>, including comments and special characters.\n\n<pre><code>strip_tags(&quot;Strip &lt;i&gt;these&lt;/i&gt; ...\n</code></pre>\n",null,0],["strong","RDoc::Markdown","ruby/classes/RDoc/Markdown.html#method-i-strong","(text)","<p>Wraps <code>text</code> in strong markup for rdoc inline formatting\n",null,1],["strong_etag=","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-strong_etag-3D","(strong_validators)","",null,0],["strong_etag?","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-strong_etag-3F","()","<p>True if an ETag is set, and it isn’t a weak validator (not preceded with <code>W/</code>).\n",null,0],["strongly_connected_components","TSort","ruby/classes/TSort.html#method-i-strongly_connected_components","()","<p>Returns strongly connected components as an array of arrays of nodes. The array is sorted from children …\n",null,1],["strongly_connected_components","TSort","ruby/classes/TSort.html#method-c-strongly_connected_components","(each_node, each_child)","<p>Returns strongly connected components as an array of arrays of nodes. The array is sorted from children …\n",null,1],["strptime","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-strptime","(str, format, now = now())","<p>Parses <code>str</code> according to <code>format</code> and returns an ActiveSupport::TimeWithZone.\n<p>Assumes that <code>str</code> is a time …\n",null,0],["strptime","Date","ruby/classes/Date.html#method-c-strptime","(p1 = v1, p2 = v2, p3 = v3)","<p>Returns a new Date object with values parsed from <code>string</code>, according to the given <code>format</code>:\n\n<pre><code>Date.strptime(&#39;2001-02-03&#39;, ...\n</code></pre>\n",null,1],["strptime","DateTime","ruby/classes/DateTime.html#method-c-strptime","(p1 = v1, p2 = v2, p3 = v3)","<p>Parses the given representation of date and time with the given template, and creates a DateTime object. …\n",null,1],["strptime","Time","ruby/classes/Time.html#method-c-strptime","(date, format, now=self.now)","<p>Works similar to <code>parse</code> except that instead of using a heuristic to detect the format of the input string, …\n",null,1],["struct","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-struct","(signature)","<p>Creates a class to wrap the C struct described by <code>signature</code>.\n\n<pre><code>MyStruct = struct [&#39;int i&#39;, &#39;char c&#39;]\n</code></pre>\n",null,1],["structurally_compatible?","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-structurally_compatible-3F","(other)","<p>Checks whether the given relation is structurally compatible with this relation, to determine if it’s …\n",null,0],["structure_dump","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-structure_dump","(configuration, *arguments)","",null,0],["structure_dump_flags","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-c-structure_dump_flags","","<p>Extra flags passed to database CLI tool (mysqldump/pg_dump) when calling db:schema:dump It can be used …\n",null,0],["structure_load","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-structure_load","(configuration, *arguments)","",null,0],["structure_load_flags","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-c-structure_load_flags","","<p>Extra flags passed to database CLI tool when calling db:schema:load It can be used as a string/array …\n",null,0],["stubbed?","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-stubbed-3F","()","<p>Whether this specification is stubbed - i.e. we have information about the gem from a stub line, without …\n",null,1],["stubbed?","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-stubbed-3F","()","",null,1],["stubs","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-stubs","()","<p>Returns a Gem::StubSpecification for every installed gem\n",null,1],["stubs_for","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-stubs_for","(name)","<p>Returns a Gem::StubSpecification for installed gem named <code>name</code> only returns stubs that match Gem.platforms …\n",null,1],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-stylesheet_link_tag","(*sources)","<p>Returns a stylesheet link tag for the sources specified as arguments.\n<p>When passing paths, the <code>.css</code> extension …\n",null,0],["stylesheet_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-stylesheet_path","(source, options = {})","<p>Computes the path to a stylesheet asset in the public stylesheets directory. If the <code>source</code> filename has …\n",null,0],["stylesheet_url","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-stylesheet_url","(source, options = {})","<p>Computes the full URL to a stylesheet asset in the public stylesheets directory. This will use <code>stylesheet_path</code> …\n",null,0],["stylesheets","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-stylesheets","()","",null,0],["stylesheets.css","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/rails/stylesheets_css.html","","<p>/*\n\n<pre><code>* This is a manifest file that&#39;ll be compiled into application.css, which will include all the files ...\n</code></pre>\n",null,0],["sub","BigDecimal","ruby/classes/BigDecimal.html#method-i-sub","(p1, p2)","<p>Subtract the specified value.\n<p>e.g.\n\n<pre><code>c = a.sub(b,n)\n</code></pre>\n",null,1],["sub","IRB::Vec","ruby/classes/IRB/Vec.html#method-i-sub","(other)","",null,1],["sub","Kernel","ruby/classes/Kernel.html#method-i-sub","(*args)","<p>Equivalent to <code>$_.sub(<em>args</em>)</code>, except that <code>$_</code> will be updated if substitution occurs. Available only when …\n",null,1],["sub","Pathname","ruby/classes/Pathname.html#method-i-sub","(*args)","<p>Return a pathname which is substituted by String#sub.\n\n<pre><code>path1 = Pathname.new(&#39;/usr/bin/perl&#39;)\npath1.sub(&#39;perl&#39;, ...\n</code></pre>\n",null,1],["sub","String","ruby/classes/String.html#method-i-sub","(*args)","<p>Returns a copy of <code>self</code> with only the first occurrence (not all occurrences) of the given <code>pattern</code> replaced. …\n",null,1],["sub!","String","ruby/classes/String.html#method-i-sub-21","(*args)","<p>Returns <code>self</code> with only the first occurrence (not all occurrences) of the given <code>pattern</code> replaced.\n<p>See  …\n",null,1],["sub_ext","Pathname","ruby/classes/Pathname.html#method-i-sub_ext","(p1)","<p>Return a pathname with <code>repl</code> added as a suffix to the basename.\n<p>If self has no extension part, <code>repl</code> is …\n",null,1],["sub_type","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-sub_type","()","<p>Returns the trailing (‘subtype’) part of the media type from the value of field <code>&#39;Content-Type&#39;</code> …\n",null,1],["subclasses","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-i-subclasses","()","",null,0],["subclasses","ActiveSupport::DescendantsTracker","rails/classes/ActiveSupport/DescendantsTracker.html#method-c-subclasses","(klass)","",null,0],["subclasses","Class","rails/classes/Class.html#method-i-subclasses","()","<p>Returns an array with the direct children of <code>self</code>.\n\n<pre><code>class Foo; end\nclass Bar &lt; Foo; end\nclass Baz &lt; Bar; ...\n</code></pre>\n",null,0],["subclasses","Rails::Railtie","rails/classes/Rails/Railtie.html#method-c-subclasses","()","",null,0],["subclasses","Class","ruby/classes/Class.html#method-i-subclasses","()","<p>Returns an array of classes where the receiver is the direct superclass of the class, excluding singleton …\n",null,1],["subdomain","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-subdomain","(tld_length = @@tld_length)","<p>Returns all the subdomains as a string, so <code>&quot;dev.www&quot;</code> would be returned for “dev.www.rubyonrails.org …\n",null,0],["subdomain_of?","Resolv::DNS::Name","ruby/classes/Resolv/DNS/Name.html#method-i-subdomain_of-3F","(other)","<p>Returns true if <code>other</code> is a subdomain.\n<p>Example:\n\n<pre><code>domain = Resolv::DNS::Name.create(&quot;y.z&quot;)\np Resolv::DNS::Name.create(&quot;w.x.y.z&quot;).subdomain_of?(domain) ...\n</code></pre>\n",null,1],["subdomains","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-subdomains","(tld_length = @@tld_length)","<p>Returns all the subdomains as an array, so <code>[&quot;dev&quot;, &quot;www&quot;]</code> would be returned for “dev. …\n",null,0],["subject","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-subject","()","",null,1],["subject","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-subject","()","",null,1],["subject=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-subject-3D","(p1)","",null,1],["subject=","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-subject-3D","(p1)","",null,1],["subject_certificate=","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-subject_certificate-3D","(p1)","",null,1],["subject_key_identifier","OpenSSL::X509::Extension::SubjectKeyIdentifier","ruby/classes/OpenSSL/X509/Extension/SubjectKeyIdentifier.html#method-i-subject_key_identifier","()","<p>Get the subject’s key identifier from the subjectKeyIdentifier exteension, as described in RFC5280 …\n",null,1],["subject_request=","OpenSSL::X509::ExtensionFactory","ruby/classes/OpenSSL/X509/ExtensionFactory.html#method-i-subject_request-3D","(p1)","",null,1],["submit","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-submit","(value = nil, options = {})","<p>Add the submit button for the given form. When no value is given, it checks if the object is a new resource …\n",null,0],["submit","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-submit","(value = nil, name = nil)","<p>Generate a submit button Input element, as a String.\n<p><code>value</code> is the text to display on the button.  <code>name</code> …\n",null,1],["submit_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-submit_tag","(value = \"Save changes\", options = {})","<p>Creates a submit button with the text <code>value</code> as the caption.\n<p>Options\n<p><code>:data</code> - This option can be used to …\n",null,0],["subscribe","ActionCable::SubscriptionAdapter::Base","rails/classes/ActionCable/SubscriptionAdapter/Base.html#method-i-subscribe","(channel, message_callback, success_callback = nil)","",null,0],["subscribe","ActionCable::SubscriptionAdapter::Redis::Listener::SubscribedClient","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener/SubscribedClient.html#method-i-subscribe","(*channel)","",null,0],["subscribe","ActiveSupport::ErrorReporter","rails/classes/ActiveSupport/ErrorReporter.html#method-i-subscribe","(subscriber)","<p>Register a new error subscriber. The subscriber must respond to\n\n<pre><code>report(Exception, handled: Boolean, context: ...\n</code></pre>\n",null,0],["subscribe","ActiveSupport::Notifications","rails/classes/ActiveSupport/Notifications.html#method-c-subscribe","(pattern = nil, callback = nil, &block)","<p>Subscribe to a given event name with the passed <code>block</code>.\n<p>You can subscribe to events by passing a String …\n",null,0],["subscribe","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-subscribe","(pattern = nil, callable = nil, monotonic: false, &block)","",null,0],["subscribe_to_channel","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-subscribe_to_channel","()","<p>This method is called after subscription has been added to the connection and confirms or rejects the …\n",null,0],["subscribed","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-subscribed","()","<p>Called once a consumer has become a subscriber of the channel. Usually the place to set up any streams …\n",null,0],["subscribed","ActiveSupport::Notifications","rails/classes/ActiveSupport/Notifications.html#method-c-subscribed","(callback, pattern = nil, monotonic: false, &block)","",null,0],["subscribers","ActiveSupport::Subscriber","rails/classes/ActiveSupport/Subscriber.html#method-c-subscribers","()","",null,0],["subscription.js","","rails/files/rails/actioncable/app/javascript/action_cable/subscription_js.html","","<p>// A new subscription is created through the ActionCable.Subscriptions instance available on the consumer. …\n",null,0],["subscription_confirmation_sent?","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-subscription_confirmation_sent-3F","()","",null,0],["subscription_guarantor.js","","rails/files/rails/actioncable/app/javascript/action_cable/subscription_guarantor_js.html","","<p>import logger from “./logger”\n<p>// Responsible for ensuring channel subscribe command is confirmed, …\n",null,0],["subscription_rejected?","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-subscription_rejected-3F","()","",null,0],["subscriptions.js","","rails/files/rails/actioncable/app/javascript/action_cable/subscriptions_js.html","","<p>import Subscription from “./subscription” import SubscriptionGuarantor from “./subscription_guarantor” …\n",null,0],["subsec","DateTime","rails/classes/DateTime.html#method-i-subsec","()","<p>Returns the fraction of a second as a <code>Rational</code>\n\n<pre><code>DateTime.new(2012, 8, 29, 0, 0, 0.5).subsec # =&gt; (1/2)\n</code></pre>\n",null,0],["subsec","Time","ruby/classes/Time.html#method-i-subsec","()","<p>Returns the exact subseconds for <code>self</code> as a Numeric (Integer or Rational):\n\n<pre><code>t = Time.now # =&gt; 2022-07-11 ...\n</code></pre>\n",null,1],["subset?","Set","ruby/classes/Set.html#method-i-subset-3F","(set)","<p>Returns true if the set is a subset of the given set.\n",null,1],["subtract","Set","ruby/classes/Set.html#method-i-subtract","(enum)","<p>Deletes every element that appears in the given enumerable object\nand returns self.\n",null,1],["succ","Date","ruby/classes/Date.html#method-i-succ","()","<p>Returns a new Date object representing the following day:\n\n<pre><code>d = Date.new(2001, 2, 3)\nd.to_s      # =&gt; &quot;2001-02-03&quot; ...\n</code></pre>\n",null,1],["succ","IPAddr","ruby/classes/IPAddr.html#method-i-succ","()","<p>Returns the successor to the ipaddr.\n",null,1],["succ","Integer","ruby/classes/Integer.html#method-i-succ","()","<p>Returns the successor integer of <code>self</code> (equivalent to <code>self + 1</code>):\n\n<pre><code>1.succ  #=&gt; 2\n-1.succ #=&gt; 0\n</code></pre>\n<p>Related: Integer#pred …\n",null,1],["succ","String","ruby/classes/String.html#method-i-succ","()","<p>Returns the successor to <code>self</code>. The successor is calculated by incrementing characters.\n<p>The first character …\n",null,1],["succ","Symbol","ruby/classes/Symbol.html#method-i-succ","()","<p>Equivalent to <code>self.to_s.succ.to_sym</code>:\n\n<pre><code>:foo.succ # =&gt; :fop\n</code></pre>\n<p>Related: String#succ.\n",null,1],["succ!","String","ruby/classes/String.html#method-i-succ-21","()","<p>Equivalent to String#succ, but modifies <code>self</code> in place; returns <code>self</code>.\n",null,1],["success?","ActionMailbox::Relayer::Result","rails/classes/ActionMailbox/Relayer/Result.html#method-i-success-3F","()","",null,0],["success?","Prism::ParseResult","ruby/classes/Prism/ParseResult.html#method-i-success-3F","()","<p>Returns true if there were no errors during parsing and false if there were.\n",null,1],["success?","Process::Status","ruby/classes/Process/Status.html#method-i-success-3F","()","<p>Returns:\n<p><code>true</code> if the process has completed successfully and exited.\n<p><code>false</code> if the process has completed …\n",null,1],["success?","SystemExit","ruby/classes/SystemExit.html#method-i-success-3F","()","<p>Returns <code>true</code> if exiting successful, <code>false</code> if not.\n",null,1],["successfully_enqueued?","ActiveJob::Core","rails/classes/ActiveJob/Core.html#method-i-successfully_enqueued-3F","()","",null,0],["suffix","ActiveRecord::DynamicMatchers::FindByBang","rails/classes/ActiveRecord/DynamicMatchers/FindByBang.html#method-c-suffix","()","",null,0],["suffix","ActiveRecord::DynamicMatchers::Method","rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-c-suffix","()","",null,0],["suffix_pattern","Gem","ruby/classes/Gem.html#method-c-suffix_pattern","()","<p>Glob pattern for require-able path suffixes.\n",null,1],["suffix_regexp","Gem","ruby/classes/Gem.html#method-c-suffix_regexp","()","<p>Regexp for require-able path suffixes.\n",null,1],["suffixes","Gem","ruby/classes/Gem.html#method-c-suffixes","()","<p>Suffixes for require-able paths.\n",null,1],["suggest_gems_from_name","Gem::SpecFetcher","ruby/classes/Gem/SpecFetcher.html#method-i-suggest_gems_from_name","(gem_name, type = :latest, num_results = 5)","<p>Suggests gems based on the supplied <code>gem_name</code>. Returns an array of alternative gem names.\n",null,1],["suggestions","Gem::Licenses","ruby/classes/Gem/Licenses.html#method-c-suggestions","(license)","",null,1],["sum","ActiveRecord::Calculations","rails/classes/ActiveRecord/Calculations.html#method-i-sum","(identity_or_column = nil, &block)","<p>Calculates the sum of values on a given column. The value is returned with the same data type of the …\n",null,0],["sum","Enumerable","rails/classes/Enumerable.html#method-i-sum","(identity = nil, &block)","<p>Calculates a sum from the elements.\n\n<pre><code>payments.sum { |p| p.price * p.tax_rate }\npayments.sum(&amp;:price)\n</code></pre>\n<p>The …\n",null,0],["sum","Array","ruby/classes/Array.html#method-i-sum","(*args)","<p>When no block is given, returns the object equivalent to:\n\n<pre><code>sum = init\narray.each {|element| sum += element ...\n</code></pre>\n",null,1],["sum","Enumerable","ruby/classes/Enumerable.html#method-i-sum","(*args)","<p>With no block given, returns the sum of <code>initial_value</code> and the elements:\n\n<pre><code>(1..100).sum          # =&gt; 5050 ...\n</code></pre>\n",null,1],["sum","String","ruby/classes/String.html#method-i-sum","(*args)","<p>Returns a basic <code>n</code>-bit checksum of the characters in <code>self</code>; the checksum is the sum of the binary value …\n",null,1],["summarize","OptionParser","ruby/classes/OptionParser.html#method-i-summarize","(to = [], width = @summary_width, max = width - 1, indent = @summary_indent, &blk)","<p>Puts option summary into <code>to</code> and returns <code>to</code>. Yields each line if a block is given.\n<p><code>to</code> &mdash; Output destination, …\n",null,1],["summarize","OptionParser::List","ruby/classes/OptionParser/List.html#method-i-summarize","(*args, &block)","<p>Creates the summary table, passing each line to the <code>block</code> (without newline). The arguments <code>args</code> are passed …\n",null,1],["summarize","OptionParser::Switch","ruby/classes/OptionParser/Switch.html#method-i-summarize","(sdone = {}, ldone = {}, width = 1, max = width - 1, indent = \"\")","<p>Produces the summary text. Each line of the summary is yielded to the block (without newline).\n<p><code>sdone</code> &mdash; ",null,1],["summary","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-summary","()","<p>Returns a summary of the collected statistics.\n",null,1],["summary=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-summary-3D","(str)","<p>A short summary of this gem’s description.\n",null,1],["sunday","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-sunday","()","<p>Returns Sunday of this week assuming that week starts on Monday. <code>DateTime</code> objects have their time set …\n",null,0],["sunday?","Date","ruby/classes/Date.html#method-i-sunday-3F","()","<p>Returns <code>true</code> if <code>self</code> is a Sunday, <code>false</code> otherwise.\n",null,1],["sunday?","Time","ruby/classes/Time.html#method-i-sunday-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a Sunday, <code>false</code> otherwise:\n\n<pre><code>t = Time.utc(2000, 1, 2) # =&gt; 2000-01-02 00:00:00 ...\n</code></pre>\n",null,1],["super_method","Method","ruby/classes/Method.html#method-i-super_method","()","<p>Returns a Method of superclass which would be called when super is used or nil if there is no method …\n",null,1],["super_method","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-super_method","()","<p>Returns a Method of superclass which would be called when super is used or nil if there is no method …\n",null,1],["superclass","Class","ruby/classes/Class.html#method-i-superclass","()","<p>Returns the superclass of <em>class</em>, or <code>nil</code>.\n\n<pre><code>File.superclass          #=&gt; IO\nIO.superclass            #=&gt; ...\n</code></pre>\n",null,1],["superclass","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-superclass","()","<p>Get the superclass of this class.  Attempts to retrieve the superclass object, returns the name if it …\n",null,1],["superclass","RDoc::NormalModule","ruby/classes/RDoc/NormalModule.html#method-i-superclass","()","<p>Modules don’t have one, raises NoMethodError\n",null,1],["superclass=","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-superclass-3D","(superclass)","<p>Set the superclass of this class to <code>superclass</code>\n",null,1],["superclass_method","RDoc::AnyMethod","ruby/classes/RDoc/AnyMethod.html#method-i-superclass_method","()","<p>For methods that <code>super</code>, find the superclass method that would be called.\n",null,1],["superset?","Set","ruby/classes/Set.html#method-i-superset-3F","(set)","<p>Returns true if the set is a superset of the given set.\n",null,1],["support_history_saving?","IRB::InputMethod","ruby/classes/IRB/InputMethod.html#method-i-support_history_saving-3F","()","",null,1],["supported?","Coverage","ruby/classes/Coverage.html#method-c-supported-3F","(p1)","<p>Returns true if coverage measurement is supported for the given mode.\n<p>The mode should be one of the following …\n",null,1],["supports_advisory_locks?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_advisory_locks-3F","()","<p>Does this adapter support application-enforced advisory locking?\n",null,0],["supports_advisory_locks?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_advisory_locks-3F","()","",null,0],["supports_advisory_locks?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_advisory_locks-3F","()","",null,0],["supports_bulk_alter?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_bulk_alter-3F","()","",null,0],["supports_bulk_alter?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_bulk_alter-3F","()","",null,0],["supports_bulk_alter?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_bulk_alter-3F","()","",null,0],["supports_cache_versioning?","ActiveSupport::Cache::FileStore","rails/classes/ActiveSupport/Cache/FileStore.html#method-c-supports_cache_versioning-3F","()","<p>Advertise cache versioning support.\n",null,0],["supports_cache_versioning?","ActiveSupport::Cache::MemCacheStore","rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-supports_cache_versioning-3F","()","<p>Advertise cache versioning support.\n",null,0],["supports_cache_versioning?","ActiveSupport::Cache::MemoryStore","rails/classes/ActiveSupport/Cache/MemoryStore.html#method-c-supports_cache_versioning-3F","()","<p>Advertise cache versioning support.\n",null,0],["supports_cache_versioning?","ActiveSupport::Cache::NullStore","rails/classes/ActiveSupport/Cache/NullStore.html#method-c-supports_cache_versioning-3F","()","<p>Advertise cache versioning support.\n",null,0],["supports_cache_versioning?","ActiveSupport::Cache::RedisCacheStore","rails/classes/ActiveSupport/Cache/RedisCacheStore.html#method-c-supports_cache_versioning-3F","()","<p>Advertise cache versioning support.\n",null,0],["supports_check_constraints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_check_constraints-3F","()","<p>Does this adapter support creating check constraints?\n",null,0],["supports_check_constraints?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_check_constraints-3F","()","",null,0],["supports_check_constraints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_check_constraints-3F","()","",null,0],["supports_check_constraints?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_check_constraints-3F","()","",null,0],["supports_comments?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_comments-3F","()","<p>Does this adapter support metadata comments on database objects (tables, columns, indexes)?\n",null,0],["supports_comments?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_comments-3F","()","",null,0],["supports_comments?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_comments-3F","()","",null,0],["supports_comments_in_create?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_comments_in_create-3F","()","<p>Can comments for tables, columns, and indexes be specified in create/alter table statements?\n",null,0],["supports_comments_in_create?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_comments_in_create-3F","()","",null,0],["supports_common_table_expressions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_common_table_expressions-3F","()","",null,0],["supports_common_table_expressions?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_common_table_expressions-3F","()","",null,0],["supports_common_table_expressions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_common_table_expressions-3F","()","",null,0],["supports_common_table_expressions?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_common_table_expressions-3F","()","",null,0],["supports_concurrent_connections?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_concurrent_connections-3F","()","",null,0],["supports_concurrent_connections?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_concurrent_connections-3F","()","",null,0],["supports_datetime_with_precision?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_datetime_with_precision-3F","()","<p>Does this adapter support datetime with precision?\n",null,0],["supports_datetime_with_precision?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_datetime_with_precision-3F","()","",null,0],["supports_datetime_with_precision?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_datetime_with_precision-3F","()","",null,0],["supports_datetime_with_precision?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_datetime_with_precision-3F","()","",null,0],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_ddl_transactions-3F","()","<p>Does this adapter support DDL rollbacks in transactions? That is, would CREATE TABLE or ALTER TABLE get …\n",null,0],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_ddl_transactions-3F","()","",null,0],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_ddl_transactions-3F","()","",null,0],["supports_deferrable_constraints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_deferrable_constraints-3F","()","<p>Does this adapter support creating deferrable constraints?\n",null,0],["supports_deferrable_constraints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_deferrable_constraints-3F","()","",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_explain-3F","()","<p>Does this adapter support explain?\n",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_explain-3F","()","",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_explain-3F","()","",null,0],["supports_explain?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_explain-3F","()","",null,0],["supports_expression_index?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_expression_index-3F","()","<p>Does this adapter support expression indices?\n",null,0],["supports_expression_index?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_expression_index-3F","()","",null,0],["supports_expression_index?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_expression_index-3F","()","",null,0],["supports_expression_index?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_expression_index-3F","()","",null,0],["supports_extensions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_extensions-3F","()","<p>Does this adapter support database extensions?\n",null,0],["supports_extensions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_extensions-3F","()","",null,0],["supports_foreign_keys?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_foreign_keys-3F","()","<p>Does this adapter support creating foreign key constraints?\n",null,0],["supports_foreign_keys?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_foreign_keys-3F","()","",null,0],["supports_foreign_keys?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_foreign_keys-3F","()","",null,0],["supports_foreign_keys?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_foreign_keys-3F","()","",null,0],["supports_foreign_tables?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_foreign_tables-3F","()","<p>Does this adapter support foreign/external tables?\n",null,0],["supports_foreign_tables?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_foreign_tables-3F","()","",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_index_sort_order-3F","()","<p>Does this adapter support index sort order?\n",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_index_sort_order-3F","()","",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_index_sort_order-3F","()","",null,0],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_index_sort_order-3F","()","",null,0],["supports_indexes_in_create?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_indexes_in_create-3F","()","<p>Does this adapter support creating indexes in the same statement as creating the table?\n",null,0],["supports_indexes_in_create?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_indexes_in_create-3F","()","",null,0],["supports_insert_conflict_target?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_insert_conflict_target-3F","()","",null,0],["supports_insert_conflict_target?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_conflict_target-3F","()","",null,0],["supports_insert_conflict_target?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_insert_conflict_target-3F","()","",null,0],["supports_insert_on_conflict?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_on_conflict-3F","()","",null,0],["supports_insert_on_conflict?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_insert_on_conflict-3F","()","",null,0],["supports_insert_on_duplicate_skip?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_insert_on_duplicate_skip-3F","()","",null,0],["supports_insert_on_duplicate_skip?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_insert_on_duplicate_skip-3F","()","",null,0],["supports_insert_on_duplicate_skip?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_on_duplicate_skip-3F","()","",null,0],["supports_insert_on_duplicate_skip?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_insert_on_duplicate_skip-3F","()","",null,0],["supports_insert_on_duplicate_update?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_insert_on_duplicate_update-3F","()","",null,0],["supports_insert_on_duplicate_update?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_insert_on_duplicate_update-3F","()","",null,0],["supports_insert_on_duplicate_update?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_on_duplicate_update-3F","()","",null,0],["supports_insert_on_duplicate_update?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_insert_on_duplicate_update-3F","()","",null,0],["supports_insert_returning?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_insert_returning-3F","()","",null,0],["supports_insert_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_returning-3F","()","",null,0],["supports_json?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_json-3F","()","<p>Does this adapter support json data type?\n",null,0],["supports_json?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_json-3F","()","",null,0],["supports_json?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_json-3F","()","",null,0],["supports_json?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_json-3F","()","",null,0],["supports_lazy_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_lazy_transactions-3F","()","",null,0],["supports_lazy_transactions?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_lazy_transactions-3F","()","",null,0],["supports_lazy_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_lazy_transactions-3F","()","",null,0],["supports_lazy_transactions?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_lazy_transactions-3F","()","",null,0],["supports_materialized_views?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_materialized_views-3F","()","<p>Does this adapter support materialized views?\n",null,0],["supports_materialized_views?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_materialized_views-3F","()","",null,0],["supports_optimizer_hints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_optimizer_hints-3F","()","<p>Does this adapter support optimizer hints?\n",null,0],["supports_optimizer_hints?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_optimizer_hints-3F","()","<p>See dev.mysql.com/doc/refman/en/optimizer-hints.html for more details.\n",null,0],["supports_optimizer_hints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_optimizer_hints-3F","()","",null,0],["supports_partial_index?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_partial_index-3F","()","<p>Does this adapter support partial indices?\n",null,0],["supports_partial_index?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_partial_index-3F","()","",null,0],["supports_partial_index?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_partial_index-3F","()","",null,0],["supports_partitioned_indexes?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_partitioned_indexes-3F","()","",null,0],["supports_partitioned_indexes?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_partitioned_indexes-3F","()","",null,0],["supports_path?","AbstractController::Base","rails/classes/AbstractController/Base.html#method-c-supports_path-3F","()","<p>Returns true if the given controller is capable of rendering a path. A subclass of <code>AbstractController::Base</code> …\n",null,0],["supports_path?","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-supports_path-3F","()","<p>Emails do not support relative path links.\n",null,0],["supports_pgcrypto_uuid?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_pgcrypto_uuid-3F","()","",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_savepoints-3F","()","<p>Does this adapter support savepoints?\n",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_savepoints-3F","()","",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_savepoints-3F","()","",null,0],["supports_savepoints?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_savepoints-3F","()","",null,0],["supports_streaming?","ActionView::Template","rails/classes/ActionView/Template.html#method-i-supports_streaming-3F","()","<p>Returns whether the underlying handler supports streaming. If so, a streaming buffer <strong>may</strong> be passed when …\n",null,0],["supports_streaming?","ActionView::Template::Handlers::ERB","rails/classes/ActionView/Template/Handlers/ERB.html#method-i-supports_streaming-3F","()","",null,0],["supports_transaction_isolation?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_transaction_isolation-3F","()","<p>Does this adapter support setting the isolation level for a transaction?\n",null,0],["supports_transaction_isolation?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_transaction_isolation-3F","()","",null,0],["supports_transaction_isolation?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_transaction_isolation-3F","()","",null,0],["supports_transaction_isolation?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_transaction_isolation-3F","()","",null,0],["supports_validate_constraints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_validate_constraints-3F","()","<p>Does this adapter support creating invalid constraints?\n",null,0],["supports_validate_constraints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_validate_constraints-3F","()","",null,0],["supports_views?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_views-3F","()","<p>Does this adapter support views?\n",null,0],["supports_views?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_views-3F","()","",null,0],["supports_views?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_views-3F","()","",null,0],["supports_views?","ActiveRecord::ConnectionAdapters::SQLite3Adapter","rails/classes/ActiveRecord/ConnectionAdapters/SQLite3Adapter.html#method-i-supports_views-3F","()","",null,0],["supports_virtual_columns?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_virtual_columns-3F","()","<p>Does this adapter support virtual columns?\n",null,0],["supports_virtual_columns?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_virtual_columns-3F","()","",null,0],["supports_virtual_columns?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_virtual_columns-3F","()","",null,0],["suppress","ActiveRecord::Suppressor::ClassMethods","rails/classes/ActiveRecord/Suppressor/ClassMethods.html#method-i-suppress","(&block)","",null,0],["suppress","Kernel","rails/classes/Kernel.html#method-i-suppress","(*exception_classes)","<p>Blocks and ignores any exception passed as argument if raised within the block.\n\n<pre><code>suppress(ZeroDivisionError) ...\n</code></pre>\n",null,0],["suppress","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-suppress","()","<p>Use this to suppress a CodeObject and all its children until the next file it is seen in or documentation …\n",null,1],["suppress_messages","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-suppress_messages","()","<p>Takes a block as an argument and suppresses any output generated by the block.\n",null,0],["suppressed?","RDoc::CodeObject","ruby/classes/RDoc/CodeObject.html#method-i-suppressed-3F","()","<p>Has this class been suppressed?\n<p>See also #suppress\n",null,1],["suppresses_echo?","IRB::Statement","ruby/classes/IRB/Statement.html#method-i-suppresses_echo-3F","()","",null,1],["suppresses_echo?","IRB::Statement::Command","ruby/classes/IRB/Statement/Command.html#method-i-suppresses_echo-3F","()","",null,1],["suppresses_echo?","IRB::Statement::Expression","ruby/classes/IRB/Statement/Expression.html#method-i-suppresses_echo-3F","()","",null,1],["suspend","Coverage","ruby/classes/Coverage.html#method-c-suspend","()","<p>Suspend the coverage measurement. You can use Coverage.resume to restart the measurement.\n",null,1],["suspend_input_method","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-suspend_input_method","(input_method)","<p>Evaluates the given block using the given <code>input_method</code> as the Context#io.\n<p>Used by the irb commands <code>source</code> …\n",null,1],["suspend_name","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-suspend_name","(path = nil, name = nil)","<p>Evaluates the given block using the given <code>path</code> as the Context#irb_path and <code>name</code> as the Context#irb_name …\n",null,1],["suspend_workspace","IRB::Irb","ruby/classes/IRB/Irb.html#method-i-suspend_workspace","(workspace)","<p>Evaluates the given block using the given <code>workspace</code> as the Context#workspace.\n<p>Used by the irb command …\n",null,1],["swap","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-swap","(target, *args, &block)","",null,0],["swap","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-swap","(...)","",null,0],["swapcase","String","ruby/classes/String.html#method-i-swapcase","(*args)","<p>Returns a string containing the characters in <code>self</code>, with cases reversed; each uppercase character is …\n",null,1],["swapcase","Symbol","ruby/classes/Symbol.html#method-i-swapcase","(*args)","<p>Equivalent to <code>sym.to_s.swapcase.to_sym</code>.\n<p>See String#swapcase.\n",null,1],["swapcase!","String","ruby/classes/String.html#method-i-swapcase-21","(*args)","<p>Upcases each lowercase character in <code>self</code>; downcases uppercase character; returns <code>self</code> if any changes …\n",null,1],["switch","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-switch","(key)","<p>Changes the current active irb session to the given <code>key</code> in the jobs Array.\n<p>Raises an IrbAlreadyDead exception …\n",null,1],["switch","Process::GID","ruby/classes/Process/GID.html#method-c-switch","()","<p>Switch the effective and real group IDs of the current process. If a <em>block</em> is given, the group IDs will …\n",null,1],["switch","Process::UID","ruby/classes/Process/UID.html#method-c-switch","()","<p>Switch the effective and real user IDs of the current process. If a <em>block</em> is given, the user IDs will …\n",null,1],["switch_name","OptionParser::Switch","ruby/classes/OptionParser/Switch.html#method-i-switch_name","()","<p>Main name of the switch.\n",null,1],["sym","Fiddle::CompositeHandler","ruby/classes/Fiddle/CompositeHandler.html#method-i-sym","(symbol)","<p>Returns the address as an Integer from any handlers with the function named <code>symbol</code>.\n<p>Raises a DLError if …\n",null,1],["sym","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-c-sym","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,1],["sym","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-sym","(p1)","<p>Get the address as an Integer for the function named <code>name</code>.\n",null,1],["sym_defined?","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-c-sym_defined-3F","(p1)","",null,1],["sym_defined?","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-sym_defined-3F","(p1)","",null,1],["symbol_alias?","IRB::Context","ruby/classes/IRB/Context.html#method-i-symbol_alias-3F","(command)","<p>Return true if it’s aliased from the argument and it’s not an identifier.\n",null,1],["symbolize","Psych::ClassLoader::Restricted","ruby/classes/Psych/ClassLoader/Restricted.html#method-i-symbolize","(sym)","",null,1],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,0],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,0],["symbolize_keys","Hash","rails/classes/Hash.html#method-i-symbolize_keys","()","<p>Returns a new hash with all keys converted to symbols, as long as they respond to <code>to_sym</code>.\n\n<pre><code>hash = { &#39;name&#39; ...\n</code></pre>\n",null,0],["symbolize_keys!","Hash","rails/classes/Hash.html#method-i-symbolize_keys-21","()","<p>Destructively converts all keys to symbols, as long as they respond to <code>to_sym</code>. Same as <code>symbolize_keys</code> …\n",null,0],["symbols","ActionView::Template::Types","rails/classes/ActionView/Template/Types.html#method-c-symbols","()","",null,0],["symlink","File","ruby/classes/File.html#method-c-symlink","(p1, p2)","<p>Creates a symbolic link called <em>new_name</em> for the existing file <em>old_name</em>. Raises a NotImplemented exception …\n",null,1],["symlink","FileUtils","ruby/classes/FileUtils.html#method-c-symlink","(src, dest, force: nil, relative: false, target_directory: true, noop: nil, verbose: nil)","",null,1],["symlink?","File","ruby/classes/File.html#method-c-symlink-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a symbolic link, <code>false</code> otherwise:\n\n<pre><code>symlink = File.symlink(&#39;t.txt&#39;, &#39;symlink&#39;) ...\n</code></pre>\n",null,1],["symlink?","File::Stat","ruby/classes/File/Stat.html#method-i-symlink-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a symbolic link, <code>false</code> if it isn’t or if the operating system doesn’t …\n",null,1],["symlink?","FileTest","ruby/classes/FileTest.html#method-i-symlink-3F","(p1)","<p>Returns <code>true</code> if <code>filepath</code> points to a symbolic link, <code>false</code> otherwise:\n\n<pre><code>symlink = File.symlink(&#39;t.txt&#39;, &#39;symlink&#39;) ...\n</code></pre>\n",null,1],["symlink?","Gem::Package::TarReader::Entry","ruby/classes/Gem/Package/TarReader/Entry.html#method-i-symlink-3F","()","<p>Is this tar entry a symlink?\n",null,1],["symlink?","Pathname","ruby/classes/Pathname.html#method-i-symlink-3F","()","<p>See FileTest.symlink?.\n",null,1],["sync","IO","ruby/classes/IO.html#method-i-sync","()","<p>Returns the current sync mode of the stream. When sync mode is true, all output is immediately flushed …\n",null,1],["sync","StringIO","ruby/classes/StringIO.html#method-i-sync","()","<p>Returns <code>true</code>; implemented only for compatibility with other stream classes.\n",null,1],["sync","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-sync","()","<p>Same as IO#sync\n",null,1],["sync","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-i-sync","(p1)","<p>Inputs <code>string</code> into the end of input buffer and skips data until a full flush point can be found.  If …\n",null,1],["sync=","IO","ruby/classes/IO.html#method-i-sync-3D","(p1)","<p>Sets the <em>sync</em> <em>mode</em> for the stream to the given value; returns the given value.\n<p>Values for the sync mode: …\n",null,1],["sync=","StringIO","ruby/classes/StringIO.html#method-i-sync-3D","(p1)","<p>Returns the argument unchanged.  Just for compatibility to IO.\n",null,1],["sync=","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-sync-3D","(p1)","<p>Same as IO.  If flag is <code>true</code>, the associated IO object must respond to the <code>flush</code> method.  While <code>sync</code> …\n",null,1],["sync_point?","Zlib::Inflate","ruby/classes/Zlib/Inflate.html#method-i-sync_point-3F","()","<p>Quoted verbatim from original documentation:\n\n<pre><code>What is this?\n</code></pre>\n<p><code>:)</code>\n",null,1],["synchronize","ActiveSupport::Concurrency::LoadInterlockAwareMonitor","rails/classes/ActiveSupport/Concurrency/LoadInterlockAwareMonitor.html#method-i-synchronize","(&block)","",null,0],["synchronize","Monitor","ruby/classes/Monitor.html#method-i-synchronize","()","",null,1],["synchronize","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-synchronize","(&b)","",null,1],["synchronize","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-i-synchronize","()","<p>Obtains a lock, runs the block, and releases the lock when the block completes.  See the example under …\n",null,1],["syntax","","ruby/files/ruby/doc/syntax_rdoc.html","","<p>Ruby Syntax\n<p>The Ruby syntax is large and is split up into the following sections:\n<p>Literals  &mdash; Numbers, Strings …\n",null,1],["sysaccept","Socket","ruby/classes/Socket.html#method-i-sysaccept","()","<p>Accepts an incoming connection returning an array containing the (integer) file descriptor for the incoming …\n",null,1],["sysaccept","TCPServer","ruby/classes/TCPServer.html#method-i-sysaccept","()","<p>Returns a file descriptor of a accepted connection.\n\n<pre><code>TCPServer.open(&quot;127.0.0.1&quot;, 28561) {|serv|\n  fd = ...\n</code></pre>\n",null,1],["sysaccept","UNIXServer","ruby/classes/UNIXServer.html#method-i-sysaccept","()","<p>Accepts a new connection. It returns the new file descriptor which is an integer.\n\n<pre><code>UNIXServer.open(&quot;/tmp/sock&quot;) ...\n</code></pre>\n",null,1],["syscall","Kernel","ruby/classes/Kernel.html#method-i-syscall","(*args)","<p>Invokes Posix system call syscall(2), which calls a specified function.\n<p>Calls the operating system function …\n",null,1],["sysclose","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-sysclose","()","<p>Sends “close notify” to the peer and tries to shut down the SSL connection gracefully.\n<p>If sync_close …\n",null,1],["sysconf","Etc","ruby/classes/Etc.html#method-c-sysconf","(p1)","<p>Returns system configuration variable using sysconf().\n<p><em>name</em> should be a constant under <code>Etc</code> which begins …\n",null,1],["sysconfdir","Etc","ruby/classes/Etc.html#method-c-sysconfdir","()","<p>Returns system configuration directory.\n<p>This is typically <code>&quot;/etc&quot;</code>, but is modified by the prefix …\n",null,1],["syslog","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-c-syslog","()","<p>Returns the internal Syslog object that is initialized when the first instance is created.\n",null,1],["syslog=","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-c-syslog-3D","(syslog)","<p>Specifies the internal Syslog object to be used.\n",null,1],["sysopen","IO","ruby/classes/IO.html#method-c-sysopen","(p1, p2 = v2, p3 = v3)","<p>Opens the file at the given path with the given mode and permissions; returns the integer file descriptor. …\n",null,1],["sysopen","Pathname","ruby/classes/Pathname.html#method-i-sysopen","(p1 = v1, p2 = v2)","<p>See IO.sysopen.\n",null,1],["sysread","IO","ruby/classes/IO.html#method-i-sysread","(p1, p2 = v2)","<p>Behaves like IO#readpartial, except that it uses low-level system functions.\n<p>This method should not be …\n",null,1],["sysread","IO::generic_readable","ruby/classes/IO/generic_readable.html#method-i-sysread","(*args)","<p>Similar to #read, but raises <code>EOFError</code> at end of string instead of returning <code>nil</code>, as well as IO#sysread …\n",null,1],["sysread","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-sysread","(*args)","<p>Reads <em>length</em> bytes from the SSL connection.  If a pre-allocated <em>buffer</em> is provided the data will be written …\n",null,1],["sysseek","IO","ruby/classes/IO.html#method-i-sysseek","(p1, p2 = v2)","<p>Behaves like IO#seek, except that it:\n<p>Uses low-level system functions.\n<p>Returns the new position.\n",null,1],["syssign","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-syssign","(string)","<p>Computes and returns the DSA signature of <code>string</code>, where <code>string</code> is expected to be an already-computed …\n",null,1],["system","Kernel","ruby/classes/Kernel.html#method-i-system","(*args)","<p>Creates a new child process by doing one of the following in that process:\n<p>Passing string <code>command_line</code> …\n",null,1],["system_bindir","Bundler","ruby/classes/Bundler.html#method-c-system_bindir","()","",null,1],["system_test","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-system_test","()","",null,0],["systmpdir","Etc","ruby/classes/Etc.html#method-c-systmpdir","()","<p>Returns system temporary directory; typically “/tmp”.\n",null,1],["sysverify","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-sysverify","(digest, sig)","<p>Verifies whether the signature is valid given the message digest input. It does so by validating <code>sig</code> …\n",null,1],["syswrite","IO","ruby/classes/IO.html#method-i-syswrite","(p1)","<p>Writes the given <code>object</code> to self, which must be opened for writing (see Modes); returns the number bytes …\n",null,1],["syswrite","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-syswrite","(p1)","<p>Writes <em>string</em> to the SSL connection.\n",null,1],["t","AbstractController::Translation","rails/classes/AbstractController/Translation.html#method-i-t","(key, **options)","",null,0],["t","ActionView::Helpers::TranslationHelper","rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-t","(key, **options)","",null,0],["table","CSV","ruby/classes/CSV.html#method-c-table","(path, **options)","<p>Calls CSV.read with <code>source</code>, <code>options</code>, and certain default options:\n<p><code>headers</code>: <code>true</code>\n<p><code>converters</code>: <code>:numeric</code>\n",null,1],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_alias_for","(table_name)","<p>Truncates a table alias according to the limits of the current adapter.\n",null,0],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-table_alias_length","()","<p>Returns the maximum length of a table alias.\n",null,0],["table_comment","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_comment","(table_name)","<p>Returns the table comment that’s stored in database metadata.\n",null,0],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_exists-3F","(table_name)","<p>Checks to see if the table <code>table_name</code> exists on the database.\n\n<pre><code>table_exists?(:developers)\n</code></pre>\n",null,0],["table_exists?","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_exists-3F","()","<p>Indicates whether the table associated with this class exists\n",null,0],["table_name","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name","()","<p>Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy …\n",null,0],["table_name","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-table_name","()","",null,0],["table_name=","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name-3D","(value)","<p>Sets the table name explicitly. Example:\n\n<pre><code>class Project &lt; ActiveRecord::Base\n  self.table_name = &quot;project&quot; ...\n</code></pre>\n",null,0],["table_name_prefix","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-table_name_prefix","","<p>The prefix string to prepend to every table name.\n",null,0],["table_name_prefix=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-table_name_prefix-3D","","<p>Sets the prefix string to prepend to every table name. So if set to “basecamp_”, all table …\n",null,0],["table_name_suffix","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-table_name_suffix","","<p>The suffix string to append to every table name.\n",null,0],["table_name_suffix=","ActiveRecord::ModelSchema","rails/classes/ActiveRecord/ModelSchema.html#method-c-table_name_suffix-3D","","<p>Works like <code>table_name_prefix=</code>, but appends instead of prepends (set to “_basecamp” gives “projects_basecamp”, …\n",null,0],["table_options","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_options","(table_name)","",null,0],["table_rows","ActiveRecord::FixtureSet","rails/classes/ActiveRecord/FixtureSet.html#method-i-table_rows","()","<p>Returns a hash of rows to be inserted. The key is the table, the value is a list of rows to insert to …\n",null,0],["tableize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-tableize","(class_name)","<p>Creates the name of a table like Rails does for models to table names. This method uses the #pluralize …\n",null,0],["tableize","String","rails/classes/String.html#method-i-tableize","()","<p>Creates the name of a table like Rails does for models to table names. This method uses the <code>pluralize</code> …\n",null,0],["tables","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-tables","()","<p>Returns an array of table names defined in the database.\n",null,0],["tag","ActionCable::Connection::TaggedLoggerProxy","rails/classes/ActionCable/Connection/TaggedLoggerProxy.html#method-i-tag","(logger, &block)","",null,0],["tag","ActionView::Helpers::ActiveModelInstanceTag","rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-tag","(type, options, *)","",null,0],["tag","ActionView::Helpers::TagHelper","rails/classes/ActionView/Helpers/TagHelper.html#method-i-tag","(name = nil, options = nil, open = false, escape = true)","<p>Returns an HTML tag.\n<p>Building HTML tags\n<p>Builds HTML5 compliant tags with a tag proxy. Every tag can be …\n",null,0],["tag","UncaughtThrowError","ruby/classes/UncaughtThrowError.html#method-i-tag","()","<p>Return the tag object which was called for.\n",null,1],["tagged","ActiveSupport::TaggedLogging","rails/classes/ActiveSupport/TaggedLogging.html#method-i-tagged","(*tags)","",null,0],["tags","Rails::SourceAnnotationExtractor::Annotation","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html#method-c-tags","()","",null,0],["take","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-take","(limit = nil)","<p>Gives a record (or N records if a parameter is supplied) from the collection using the same rules as …\n",null,0],["take","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-take","(limit = nil)","<p>Gives a record (or N records if a parameter is supplied) without any implied order. The order will depend …\n",null,0],["take","Array","ruby/classes/Array.html#method-i-take","(p1)","<p>Returns a new Array containing the first <code>n</code> element of <code>self</code>, where <code>n</code> is a non-negative Integer; does not …\n",null,1],["take","Enumerable","ruby/classes/Enumerable.html#method-i-take","(p1)","<p>For non-negative integer <code>n</code>, returns the first <code>n</code> elements:\n\n<pre><code>r = (1..4)\nr.take(2) # =&gt; [1, 2]\nr.take(0) # ...\n</code></pre>\n",null,1],["take","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-take","(p1)","<p>Like Enumerable#take, but chains operation to be lazy-evaluated.\n",null,1],["take","Ractor","ruby/classes/Ractor.html#method-i-take","()","<p>Get a message from the ractor’s outgoing port, which was put there by Ractor.yield or at ractor’s …\n",null,1],["take","Rinda::TupleSpace","ruby/classes/Rinda/TupleSpace.html#method-i-take","(tuple, sec=nil, &block)","<p>Removes <code>tuple</code>\n",null,1],["take","Rinda::TupleSpaceProxy","ruby/classes/Rinda/TupleSpaceProxy.html#method-i-take","(tuple, sec=nil, &block)","<p>Takes <code>tuple</code> from the proxied TupleSpace.  See TupleSpace#take.\n",null,1],["take!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-take-21","()","<p>Same as #take but raises ActiveRecord::RecordNotFound if no record is found. Note that #take! accepts …\n",null,0],["take_range","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-take_range","(str, start_col, max_width)","<p>Take a chunk of a String cut by width with escape sequences.\n",null,1],["take_while","Array","ruby/classes/Array.html#method-i-take_while","()","<p>Returns a new Array containing zero or more leading elements of <code>self</code>; does not modify <code>self</code>.\n<p>With a block …\n",null,1],["take_while","Enumerable","ruby/classes/Enumerable.html#method-i-take_while","()","<p>Calls the block with successive elements as long as the block returns a truthy value; returns an array …\n",null,1],["take_while","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-take_while","()","<p>Like Enumerable#take_while, but chains operation to be lazy-evaluated.\n",null,1],["take_while_including","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-take_while_including","(range = 0..)","<p>Helper method for grabbing elements from document\n<p>Like ‘take_while` except when it stops iterating, it …\n",null,1],["tally","Enumerable","ruby/classes/Enumerable.html#method-i-tally","(*args)","<p>Returns a hash containing the counts of equal elements:\n<p>Each key is an element of <code>self</code>.\n<p>Each value is the …\n",null,1],["tan","Math","ruby/classes/Math.html#method-c-tan","(p1)","<p>Returns the tangent of <code>x</code> in radians.\n<p>Domain: <code>(-INFINITY, INFINITY)</code>.\n<p>Range: <code>(-INFINITY, INFINITY)</code>.\n",null,1],["tanh","Math","ruby/classes/Math.html#method-c-tanh","(p1)","<p>Returns the hyperbolic tangent of <code>x</code> in radians.\n<p>Domain: <code>[-INFINITY, INFINITY]</code>.\n<p>Range: <code>[-1, 1]</code>.\n",null,1],["tap","Kernel","ruby/classes/Kernel.html#method-i-tap","()","<p>Yields self to the block, and then returns self. The primary purpose of this method is to “tap into” …\n",null,1],["target","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-target","()","",null,0],["target_bin_path","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-target_bin_path","(bin_dir, bin_file)","",null,1],["target_version","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-target_version","()","",null,0],["task.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/task/templates/task_rb_tt.html","","<p>namespace :&lt;%= file_name %&gt; do &lt;% actions.each do |action| -%&gt;\n\n<pre><code>desc &quot;TODO&quot;\ntask &lt;%= action ...\n</code></pre>\n",null,0],["tcp","Addrinfo","ruby/classes/Addrinfo.html#method-c-tcp","(p1, p2)","<p>returns an addrinfo object for TCP address.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, &quot;smtp&quot;) #=&gt; #&lt;Addrinfo: 127.0.0.1:25 ...\n</code></pre>\n",null,1],["tcp","Socket","ruby/classes/Socket.html#method-c-tcp","(host, port, local_host = nil, local_port = nil, connect_timeout: nil, resolv_timeout: nil)","<p>creates a new socket object connected to host:port using TCP/IP.\n<p>If local_host:local_port is given, the …\n",null,1],["tcp_server_loop","Socket","ruby/classes/Socket.html#method-c-tcp_server_loop","(host=nil, port)","<p>creates a TCP/IP server on <em>port</em> and calls the block for each connection accepted. The block is called …\n",null,1],["tcp_server_sockets","Socket","ruby/classes/Socket.html#method-c-tcp_server_sockets","(host=nil, port)","<p>creates TCP/IP server sockets for <em>host</em> and <em>port</em>. <em>host</em> is optional.\n<p>If no block given, it returns an array …\n",null,1],["telephone_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-telephone_field","","<p>Wraps ActionView::Helpers::FormHelper#telephone_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do ...\n</code></pre>\n",null,0],["telephone_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-telephone_field","(object_name, method, options = {})","<p>Returns a text_field of type “tel”.\n\n<pre><code>telephone_field(&quot;user&quot;, &quot;phone&quot;)\n# =&gt; &lt;input id=&quot;user_phone&quot; ...\n</code></pre>\n",null,0],["telephone_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-telephone_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “tel”.\n<p>Options\n<p>Supports the same options as #text_field_tag.\n",null,0],["tell","ARGF","ruby/classes/ARGF.html#method-i-tell","()","<p>Returns the current offset (in bytes) of the current file in ARGF.\n\n<pre><code>ARGF.pos    #=&gt; 0\nARGF.gets   #=&gt; &quot;This ...\n</code></pre>\n",null,1],["tell","Dir","ruby/classes/Dir.html#method-i-tell","()","<p>Returns the current position of <code>self</code>; see Dir As Stream-Like:\n\n<pre><code>dir = Dir.new(&#39;example&#39;)\ndir.tell  # =&gt; ...\n</code></pre>\n",null,1],["tell","IO","ruby/classes/IO.html#method-i-tell","()","<p>Returns the current position (in bytes) in <code>self</code> (see Position):\n\n<pre><code>f = File.open(&#39;t.txt&#39;)\nf.tell # =&gt; 0\nf.gets ...\n</code></pre>\n",null,1],["tell","StringIO","ruby/classes/StringIO.html#method-i-tell","()","<p>Returns the current position (in bytes); see Position.\n",null,1],["tell","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-tell","()","<p>Total number of output bytes output so far.\n",null,1],["tell","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-tell","()","<p>Total number of input bytes read so far.\n",null,1],["template","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-template","(source, *args, &block)","",null,0],["template_dir_for","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-template_dir_for","(template)","<p>Finds the template dir for <code>template</code>\n",null,1],["template_exists?","ActionView::LookupContext::ViewPaths","rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-template_exists-3F","(name, prefixes = [], partial = false, keys = [], **options)","",null,0],["terabyte","Numeric","rails/classes/Numeric.html#method-i-terabyte","()","",null,0],["terabytes","Numeric","rails/classes/Numeric.html#method-i-terabytes","()","<p>Returns the number of bytes equivalent to the terabytes provided.\n\n<pre><code>2.terabytes # =&gt; 2_199_023_255_552\n</code></pre>\n",null,0],["terminate","GetoptLong","ruby/classes/GetoptLong.html#method-i-terminate","()","<p>Terminate option processing; returns <code>nil</code> if processing has already terminated; otherwise returns <code>self</code> …\n",null,1],["terminate","OptionParser","ruby/classes/OptionParser.html#method-i-terminate","(arg = nil)","<p>Terminates option parsing. Optional parameter <code>arg</code> is a string pushed back to be the first non-option …\n",null,1],["terminate","OptionParser","ruby/classes/OptionParser.html#method-c-terminate","(arg = nil)","",null,1],["terminate","StringScanner","ruby/classes/StringScanner.html#method-i-terminate","()","<p>Sets the scan pointer to the end of the string and clear matching data.\n",null,1],["terminate","Thread","ruby/classes/Thread.html#method-i-terminate","()","<p>Terminates <code>thr</code> and schedules another thread to be run, returning the terminated Thread.  If this is the …\n",null,1],["terminate_interaction","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-terminate_interaction","(status = 0)","<p>Terminate the application with exit code <code>status</code>, running any exit handlers that might have been defined. …\n",null,1],["terminate_interaction","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-terminate_interaction","(exit_code = 0)","<p>Terminates the RubyGems process with the given <code>exit_code</code>\n",null,1],["terminated?","GetoptLong","ruby/classes/GetoptLong.html#method-i-terminated-3F","()","<p>Returns <code>true</code> if option processing has terminated, <code>false</code> otherwise.\n",null,1],["termsig","Process::Status","ruby/classes/Process/Status.html#method-i-termsig","()","<p>Returns the number of the signal that caused the process to terminate or <code>nil</code> if the process was not terminated …\n",null,1],["test","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-test","()","",null,0],["test","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-test","()","",null,0],["test","Kernel","ruby/classes/Kernel.html#method-i-test","(*args)","<p>Uses the character <code>cmd</code> to perform various tests on <code>file1</code> (first table below) or on <code>file1</code> and <code>file2</code> (second …\n",null,1],["test_dummy_clean","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_clean","()","",null,0],["test_dummy_config","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_config","()","",null,0],["test_dummy_sprocket_assets","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_sprocket_assets","()","",null,0],["test_errors_aref","ActiveModel::Lint::Tests","rails/classes/ActiveModel/Lint/Tests.html#method-i-test_errors_aref","()","<p>Passes if the object’s model responds to <code>errors</code> and if calling <code>[](attribute)</code> on the result of this …\n",null,0],["test_model_naming","ActiveModel::Lint::Tests","rails/classes/ActiveModel/Lint/Tests.html#method-i-test_model_naming","()","<p>Passes if the object’s model responds to <code>model_name</code> both as an instance method and as a class method, …\n",null,0],["test_persisted?","ActiveModel::Lint::Tests","rails/classes/ActiveModel/Lint/Tests.html#method-i-test_persisted-3F","()","<p>Passes if the object’s model responds to <code>persisted?</code> and if calling this method returns either <code>true</code> …\n",null,0],["test_to_key","ActiveModel::Lint::Tests","rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_key","()","<p>Passes if the object’s model responds to <code>to_key</code> and if calling this method returns <code>nil</code> when the object …\n",null,0],["test_to_param","ActiveModel::Lint::Tests","rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_param","()","<p>Passes if the object’s model responds to <code>to_param</code> and if calling this method returns <code>nil</code> when the …\n",null,0],["test_to_partial_path","ActiveModel::Lint::Tests","rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_partial_path","()","<p>Passes if the object’s model responds to <code>to_partial_path</code> and if calling this method returns a string. …\n",null,0],["testing_ruby","","ruby/files/ruby/doc/contributing/testing_ruby_md.html","","<p>Testing Ruby\n<p>Test suites\n<p>There are several test suites in the Ruby codebase:\n",null,1],["text","IRB::ColorPrinter","ruby/classes/IRB/ColorPrinter.html#method-i-text","(str, width = nil)","",null,1],["text","PrettyPrint","ruby/classes/PrettyPrint.html#method-i-text","(obj, width=obj.length)","<p>This adds <code>obj</code> as a text of <code>width</code> columns in width.\n<p>If <code>width</code> is not specified, obj.length is used.\n",null,1],["text","PrettyPrint::SingleLine","ruby/classes/PrettyPrint/SingleLine.html#method-i-text","(obj, width=nil)","<p>Add <code>obj</code> to the text to be output.\n<p><code>width</code> argument is here for compatibility. It is a noop argument.\n",null,1],["text=","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-text-3D","(text)","<p>Replaces this comment’s text with <code>text</code> and resets the parsed document.\n<p>An error is raised if the comment …\n",null,1],["text?","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-text-3F","()","<p>Returns true if the content_type of this blob is in the text range, like text/plain.\n",null,0],["text?","RDoc::TopLevel","ruby/classes/RDoc/TopLevel.html#method-i-text-3F","()","<p>Is this TopLevel from a text file instead of a source code file?\n",null,1],["text_area","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-text_area","","<p>Wraps ActionView::Helpers::FormHelper#text_area for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| %&gt; ...\n</code></pre>\n",null,0],["text_area","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-text_area","(object_name, method, options = {})","<p>Returns a textarea opening and closing tag set tailored for accessing a specified attribute (identified …\n",null,0],["text_area_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_area_tag","(name, content = nil, options = {})","<p>Creates a text input area; use a textarea for longer text inputs such as blog posts or descriptions. …\n",null,0],["text_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-text_field","","<p>Wraps ActionView::Helpers::FormHelper#text_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["text_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-text_field","(object_name, method, options = {})","<p>Returns an input tag of the “text” type tailored for accessing a specified attribute (identified …\n",null,0],["text_field","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-text_field","(name = \"\", value = nil, size = 40, maxlength = nil)","<p>Generate a text field Input element, as a String.\n<p><code>name</code> is the name of the input field.  <code>value</code> is its initial …\n",null,1],["text_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_field_tag","(name, value = nil, options = {})","<p>Creates a standard text field; use these text fields to input smaller chunks of text like a username …\n",null,0],["textarea","CGI::HtmlExtension","ruby/classes/CGI/HtmlExtension.html#method-i-textarea","(name = \"\", cols = 70, rows = 10)","<p>Generate a TextArea element, as a String.\n<p><code>name</code> is the name of the textarea.  <code>cols</code> is the number of columns …\n",null,1],["then","Kernel","ruby/classes/Kernel.html#method-i-then","()","<p>Yields self to the block and returns the result of the block.\n\n<pre><code>3.next.then {|x| x**x }.to_s            ...\n</code></pre>\n",null,1],["third","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-third","","<p>Same as #first except returns only the third record.\n",null,0],["third","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-third","()","<p>Find the third record. If no order is defined it will order by primary key.\n\n<pre><code>Person.third # returns the ...\n</code></pre>\n",null,0],["third","Array","rails/classes/Array.html#method-i-third","()","<p>Equal to <code>self[2]</code>.\n\n<pre><code>%w( a b c d e ).third # =&gt; &quot;c&quot;\n</code></pre>\n",null,0],["third!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-third-21","()","<p>Same as #third but raises ActiveRecord::RecordNotFound if no record is found.\n",null,0],["third_to_last","ActiveRecord::Associations::CollectionProxy","rails/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-third_to_last","","<p>Same as #first except returns only the third-to-last record.\n",null,0],["third_to_last","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-third_to_last","()","<p>Find the third-to-last record. If no order is defined it will order by primary key.\n\n<pre><code>Person.third_to_last ...\n</code></pre>\n",null,0],["third_to_last","Array","rails/classes/Array.html#method-i-third_to_last","()","<p>Equal to <code>self[-3]</code>.\n\n<pre><code>%w( a b c d e ).third_to_last # =&gt; &quot;c&quot;\n</code></pre>\n",null,0],["third_to_last!","ActiveRecord::FinderMethods","rails/classes/ActiveRecord/FinderMethods.html#method-i-third_to_last-21","()","<p>Same as #third_to_last but raises ActiveRecord::RecordNotFound if no record is found.\n",null,0],["this","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-this","()","",null,1],["this_update","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-this_update","()","",null,1],["thread","DRb","ruby/classes/DRb.html#method-c-thread","()","<p>Get the thread of the primary server.\n<p>This returns nil if there is no primary server.  See #primary_server …\n",null,1],["thread","IRB::JobManager","ruby/classes/IRB/JobManager.html#method-i-thread","(key)","<p>Returns the thread for the given <code>key</code> object, see #search for more information.\n",null,1],["thread_cattr_accessor","Module","rails/classes/Module.html#method-i-thread_cattr_accessor","(*syms, instance_reader: true, instance_writer: true, instance_accessor: true, default: nil)","",null,0],["thread_mattr_accessor","Module","rails/classes/Module.html#method-i-thread_mattr_accessor","(*syms, instance_reader: true, instance_writer: true, instance_accessor: true, default: nil)","<p>Defines both class and instance accessors for class attributes.\n\n<pre><code>class Account\n  thread_mattr_accessor ...\n</code></pre>\n",null,0],["thread_variable?","Thread","ruby/classes/Thread.html#method-i-thread_variable-3F","(p1)","<p>Returns <code>true</code> if the given string (or symbol) exists as a thread-local variable.\n\n<pre><code>me = Thread.current\nme.thread_variable_set(:oliver, ...\n</code></pre>\n",null,1],["thread_variable_get","Thread","ruby/classes/Thread.html#method-i-thread_variable_get","(p1)","<p>Returns the value of a thread local variable that has been set.  Note that these are different than fiber …\n",null,1],["thread_variable_set","Thread","ruby/classes/Thread.html#method-i-thread_variable_set","(p1, p2)","<p>Sets a thread local with <code>key</code> to <code>value</code>.  Note that these are local to threads, and not to fibers.  Please …\n",null,1],["thread_variables","Thread","ruby/classes/Thread.html#method-i-thread_variables","()","<p>Returns an array of the names of the thread-local variables (as Symbols).\n\n<pre><code>thr = Thread.new do\n  Thread.current.thread_variable_set(:cat, ...\n</code></pre>\n",null,1],["throw","Kernel","ruby/classes/Kernel.html#method-i-throw","(p1, p2 = v2)","<p>Transfers control to the end of the active <code>catch</code> block waiting for <em>tag</em>. Raises <code>UncaughtThrowError</code> if …\n",null,1],["throw_away!","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-throw_away-21","()","<p>Removes the connection from the pool and disconnect it.\n",null,0],["thursday?","Date","ruby/classes/Date.html#method-i-thursday-3F","()","<p>Returns <code>true</code> if <code>self</code> is a Thursday, <code>false</code> otherwise.\n",null,1],["thursday?","Time","ruby/classes/Time.html#method-i-thursday-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a Thursday, <code>false</code> otherwise:\n\n<pre><code>t = Time.utc(2000, 1, 6) # =&gt; 2000-01-06 ...\n</code></pre>\n",null,1],["tidy_bytes","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-tidy_bytes","(force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string. …\n",null,0],["tidy_bytes","ActiveSupport::Multibyte::Unicode","rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-tidy_bytes","(string, force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string. …\n",null,0],["tigetflag","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-tigetflag","(capname)","",null,1],["tigetnum","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-tigetnum","(capname)","",null,1],["tigetstr","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-tigetstr","(capname)","",null,1],["time","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-time","()","<p>Returns a <code>Time</code> instance that represents the time in <code>time_zone</code>.\n",null,0],["time","Gem","ruby/classes/Gem.html#method-c-time","(msg, width = 0, display = Gem.configuration.verbose)","<p>Prints the amount of time the supplied block takes to run using the debug UI output.\n",null,1],["time","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-time","()","<p>Returns the time at which the session was established.\n",null,1],["time","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-time","()","",null,1],["time2wtime","Win32::Registry","ruby/classes/Win32/Registry.html#method-c-time2wtime","(time)","<p>Convert Time object or Integer object into 64-bit FILETIME.\n",null,1],["time=","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-time-3D","(p1)","<p>Sets start time of the session. Time resolution is in seconds.\n",null,1],["time=","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-time-3D","(p1)","",null,1],["time=","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-time-3D","(p1)","<p>Sets the time to be used in the certificate verifications with the store. By default, if not specified, …\n",null,1],["time=","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-time-3D","(p1)","<p>Sets the time used in the verification. If not set, the current time is used.\n<p>See also the man page X509_VERIFY_PARAM_set_time …\n",null,1],["time_ago_in_words","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_ago_in_words","(from_time, options = {})","<p>Like <code>distance_of_time_in_words</code>, but where <code>to_time</code> is fixed to <code>Time.now</code>.\n\n<pre><code>time_ago_in_words(3.minutes.from_now) ...\n</code></pre>\n",null,0],["time_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-time_field","","<p>Wraps ActionView::Helpers::FormHelper#time_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["time_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-time_field","(object_name, method, options = {})","<p>Returns a text_field of type “time”.\n<p>The default value is generated by trying to call <code>strftime</code> …\n",null,0],["time_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-time_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “time”.\n<p>Options\n<p>Supports the same options as #text_field_tag. Additionally …\n",null,0],["time_select","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for hour, minute, and optionally second) pre-selected for accessing …\n",null,0],["time_select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-time_select","(method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::DateHelper#time_select for form builders:\n\n<pre><code>&lt;%= form_for @race do |f| %&gt;\n  &lt;%= ...\n</code></pre>\n",null,0],["time_tag","ActionView::Helpers::DateHelper","rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_tag","(date_or_time, *args, &block)","<p>Returns an HTML time tag for the given date or time.\n\n<pre><code>time_tag Date.today  # =&gt;\n  &lt;time datetime=&quot;2010-11-04&quot;&gt;November ...\n</code></pre>\n",null,0],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_options_for_select","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","<p>Returns a string of option tags for pretty much any time zone in the world. Supply an ActiveSupport::TimeZone …\n",null,0],["time_zone_select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-time_zone_select","(method, priority_zones = nil, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#time_zone_select for form builders:\n\n<pre><code>&lt;%= form_for @user do ...\n</code></pre>\n",null,0],["time_zone_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_select","(object, method, priority_zones = nil, options = {}, html_options = {})","<p>Returns select and option tags for the given object and method, using #time_zone_options_for_select to …\n",null,0],["timeout","IO","ruby/classes/IO.html#method-i-timeout","()","<p>Get the internal timeout duration or nil if it was not set.\n",null,1],["timeout","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-timeout","()","<p>Returns the timeout value set for the session, in seconds from the established time.\n",null,1],["timeout","Regexp","ruby/classes/Regexp.html#method-i-timeout","()","<p>It returns the timeout interval for Regexp matching in second. <code>nil</code> means no default timeout configuration. …\n",null,1],["timeout","Regexp","ruby/classes/Regexp.html#method-c-timeout","()","<p>It returns the current default timeout interval for Regexp matching in second. <code>nil</code> means no default timeout …\n",null,1],["timeout","Timeout","ruby/classes/Timeout.html#method-c-timeout","(sec, klass = nil, message = nil)","<p>Perform an operation in a block, raising an error if it takes longer than <code>sec</code> seconds to complete.\n<p><code>sec</code> … &mdash; ",null,1],["timeout=","IO","ruby/classes/IO.html#method-i-timeout-3D","(p1)","<p>Sets the internal timeout to the specified duration or nil. The timeout applies to all blocking operations …\n",null,1],["timeout=","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-timeout-3D","(p1)","<p>Sets how long until the session expires in seconds.\n",null,1],["timeout=","Regexp","ruby/classes/Regexp.html#method-c-timeout-3D","(p1)","<p>It sets the default timeout interval for Regexp matching in second. <code>nil</code> means no default timeout configuration. …\n",null,1],["timeout_after","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-timeout_after","(p1, p2, p3)","<p>Invoked by Timeout.timeout to execute the given <code>block</code> within the given <code>duration</code>. It can also be invoked …\n",null,1],["timeouts=","Resolv::DNS","ruby/classes/Resolv/DNS.html#method-i-timeouts-3D","(values)","<p>Sets the resolver timeouts.  This may be a single positive number or an array of positive numbers representing …\n",null,1],["timer","ActionCable::Connection::StreamEventLoop","rails/classes/ActionCable/Connection/StreamEventLoop.html#method-i-timer","(interval, &block)","",null,0],["times","Integer","ruby/classes/Integer.html#method-i-times","()","<p>Calls the given block <code>self</code> times with each integer in <code>(0..self-1)</code>:\n\n<pre><code>a = []\n5.times {|i| a.push(i) } # =&gt; ...\n</code></pre>\n",null,1],["times","Process","ruby/classes/Process.html#method-c-times","()","<p>Returns a Process::Tms structure that contains user and system CPU times for the current process, and …\n",null,1],["timestamp","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-timestamp","()","<p>returns the timestamp as a time object.\n<p><em>ancillarydata</em> should be one of following type:\n<p>SOL_SOCKET/SCM_TIMESTAMP …\n",null,1],["timestamps","ActiveRecord::ConnectionAdapters::Table","rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-timestamps","(**options)","<p>Adds timestamps (<code>created_at</code> and <code>updated_at</code>) columns to the table.\n\n<pre><code>t.timestamps(null: false)\n</code></pre>\n<p>See connection.add_timestamps …\n",null,0],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-timestamps","(**options)","<p>Appends <code>:datetime</code> columns <code>:created_at</code> and <code>:updated_at</code> to the table. See connection.add_timestamps\n\n<pre><code>t.timestamps ...\n</code></pre>\n",null,0],["timestamptz","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-timestamptz","","",null,0],["tinyblob","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-tinyblob","","",null,0],["tinytext","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-tinytext","","",null,0],["tiparm","Reline::Terminfo","ruby/classes/Reline/Terminfo.html#method-c-tiparm","(str, *args)","",null,1],["tiparm","Reline::Terminfo::StringWithTiparm","ruby/classes/Reline/Terminfo/StringWithTiparm.html#method-i-tiparm","(*args)","",null,1],["title","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-title","()","<p>Gets the title for this RDoc store.  This is used as the title in each page on the RDoc server\n",null,1],["title=","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-title-3D","(title)","<p>Sets the title page for this RDoc store.\n",null,1],["titlecase","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-titlecase","()","",null,0],["titlecase","String","rails/classes/String.html#method-i-titlecase","(keep_id_suffix: false)","",null,0],["titleize","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-titleize","(word, keep_id_suffix: false)","<p>Capitalizes all the words and replaces some characters in the string to create a nicer looking title. …\n",null,0],["titleize","ActiveSupport::Multibyte::Chars","rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-titleize","()","<p>Capitalizes the first letter of every word, when possible.\n\n<pre><code>&quot;ÉL QUE SE ENTERÓ&quot;.mb_chars.titleize.to_s  ...\n</code></pre>\n",null,0],["titleize","String","rails/classes/String.html#method-i-titleize","(keep_id_suffix: false)","<p>Capitalizes all the words and replaces some characters in the string to create a nicer looking title. …\n",null,0],["tk_nl?","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-tk_nl-3F","(tk)","<p>Return <code>true</code> if <code>tk</code> is a newline.\n",null,1],["tmp","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-tmp","()","",null,0],["tmp","Bundler","ruby/classes/Bundler.html#method-c-tmp","(name = Process.pid.to_s)","",null,1],["tmp.rake","","rails/files/rails/railties/lib/rails/tasks/tmp_rake.html","","<p># frozen_string_literal: true\n<p>namespace :tmp do\n\n<pre><code>desc &quot;Clear cache, socket and screenshot files from tmp/ ...\n</code></pre>\n",null,0],["tmp_dh=","OpenSSL::SSL::SSLContext","ruby/classes/OpenSSL/SSL/SSLContext.html#method-i-tmp_dh-3D","(p1)","<p>Sets DH parameters used for ephemeral DH key exchange. This is relevant for servers only.\n<p><code>pkey</code> is an instance …\n",null,1],["tmp_key","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-tmp_key","()","<p>Returns the ephemeral key used in case of forward secrecy cipher.\n",null,1],["tmpdir","ActiveStorage::Analyzer","rails/classes/ActiveStorage/Analyzer.html#method-i-tmpdir","()","",null,0],["tmpdir","ActiveStorage::Previewer","rails/classes/ActiveStorage/Previewer.html#method-i-tmpdir","()","",null,0],["tmpdir","Dir","ruby/classes/Dir.html#method-c-tmpdir","()","<p>Returns the operating system’s temporary file path.\n",null,1],["to","Array","rails/classes/Array.html#method-i-to","(position)","<p>Returns the beginning of the array up to <code>position</code>.\n\n<pre><code>%w( a b c d ).to(0)  # =&gt; [&quot;a&quot;]\n%w( a b c d ).to(2) ...\n</code></pre>\n",null,0],["to","String","rails/classes/String.html#method-i-to","(position)","<p>Returns a substring from the beginning of the string to the given position. If the position is negative, …\n",null,0],["to=","URI::MailTo","ruby/classes/URI/MailTo.html#method-i-to-3D","(v)","<p>Setter for to <code>v</code>.\n",null,1],["to_a","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-to_a","()","<p>Turns the Response into a Rack-compatible array of the status, headers, and body. Allows explicit splatting: …\n",null,0],["to_a","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-to_a","()","",null,0],["to_a","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-to_a","()","",null,0],["to_a","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-to_a","()","",null,0],["to_a","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_a","()","<p>Returns Array of parts of Time in sequence of [seconds, minutes, hours, day, month, year, weekday, yearday, …\n",null,0],["to_a","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-to_a","()","",null,0],["to_a","ARGF","ruby/classes/ARGF.html#method-i-to_a","(*args)","<p>Reads each file in ARGF in its entirety, returning an Array containing lines from the files. Lines are …\n",null,1],["to_a","Array","ruby/classes/Array.html#method-i-to_a","()","<p>When <code>self</code> is an instance of Array, returns <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.to_a # =&gt; [:foo, &quot;bar&quot;, 2]\n</code></pre>\n<p>Otherwise …\n",null,1],["to_a","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-to_a","()","<p>Returns a new 6-element array, consisting of the label, user CPU time, system CPU time, children’s …\n",null,1],["to_a","CSV::Table","ruby/classes/CSV/Table.html#method-i-to_a","()","<p>Returns the table as an Array of Arrays; the headers are in the first row:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["to_a","ENV","ruby/classes/ENV.html#method-c-to_a","()","<p>Returns the contents of ENV as an Array of 2-element Arrays, each of which is a name/value pair:\n\n<pre><code>ENV.replace(&#39;foo&#39; ...\n</code></pre>\n",null,1],["to_a","Enumerable","ruby/classes/Enumerable.html#method-i-to_a","(*args)","<p>Returns an array containing the items in <code>self</code>:\n\n<pre><code>(0..4).to_a # =&gt; [0, 1, 2, 3, 4]\n</code></pre>\n",null,1],["to_a","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-to_a","()","<p>Expands <code>lazy</code> enumerator to an array. See Enumerable#to_a.\n",null,1],["to_a","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-i-to_a","()","<p>Convert back to the [name, version, platform] tuple\n",null,1],["to_a","Gem::Platform","ruby/classes/Gem/Platform.html#method-i-to_a","()","",null,1],["to_a","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-to_a","()","",null,1],["to_a","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-to_a","()","<p>Returns an Array of source URI Strings.\n",null,1],["to_a","Hash","ruby/classes/Hash.html#method-i-to_a","()","<p>Returns a new Array of 2-element Array objects; each nested Array contains a key-value pair from <code>self</code> …\n",null,1],["to_a","MatchData","ruby/classes/MatchData.html#method-i-to_a","()","<p>Returns the array of matches:\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\n# =&gt; #&lt;MatchData &quot;HX1138&quot; 1:&quot;H&quot; ...\n</code></pre>\n",null,1],["to_a","NilClass","ruby/classes/NilClass.html#method-i-to_a","()","<p>Returns an empty Array.\n\n<pre><code>nil.to_a # =&gt; []\n</code></pre>\n",null,1],["to_a","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-to_a","()","",null,1],["to_a","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-to_a","()","<p>Returns an Array representation of the distinguished name suitable for passing to ::new\n",null,1],["to_a","OptionParser","ruby/classes/OptionParser.html#method-i-to_a","()","<p>Returns option summary list.\n",null,1],["to_a","Range","ruby/classes/Range.html#method-i-to_a","()","<p>Returns an array containing the elements in <code>self</code>, if a finite collection; raises an exception otherwise. …\n",null,1],["to_a","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-i-to_a","()","<p>Contains all discovered TupleSpaces except for the primary.\n",null,1],["to_a","Rinda::RingFinger","ruby/classes/Rinda/RingFinger.html#method-c-to_a","()","<p>Contains all discovered TupleSpaces except for the primary.\n",null,1],["to_a","Ripper::Lexer::Elem","ruby/classes/Ripper/Lexer/Elem.html#method-i-to_a","()","",null,1],["to_a","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-to_a","()","<p>Returns an Array with 14 elements representing the instruction sequence with the following data:\n<p>magic … &mdash; ",null,1],["to_a","Set","ruby/classes/Set.html#method-i-to_a","()","<p>Converts the set to an array. The order of elements is uncertain.\n\n<pre><code>Set[1, 2].to_a                    #=&gt; ...\n</code></pre>\n",null,1],["to_a","Struct","ruby/classes/Struct.html#method-i-to_a","()","<p>Returns the values in <code>self</code> as an array:\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...\n</code></pre>\n",null,1],["to_a","SyntaxSuggest::LexAll","ruby/classes/SyntaxSuggest/LexAll.html#method-i-to_a","()","",null,1],["to_a","SyntaxSuggest::PriorityEngulfQueue","ruby/classes/SyntaxSuggest/PriorityEngulfQueue.html#method-i-to_a","()","",null,1],["to_a","SyntaxSuggest::PriorityQueue","ruby/classes/SyntaxSuggest/PriorityQueue.html#method-i-to_a","()","",null,1],["to_a","Time","ruby/classes/Time.html#method-i-to_a","()","<p>Returns a 10-element array of values representing <code>self</code>:\n\n<pre><code>Time.utc(2000, 1, 1).to_a\n# =&gt; [0,   0,   0,  ...\n</code></pre>\n",null,1],["to_a","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-to_a","()","<p>Converts the contents of the database to an array of [key, value] arrays, and returns it.\n",null,1],["to_addresses","Mail::Message","rails/classes/Mail/Message.html#method-i-to_addresses","()","",null,0],["to_ary","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-to_ary","()","<p>Converts relation objects to Array.\n",null,0],["to_ary","ActiveRecord::Result","rails/classes/ActiveRecord/Result.html#method-i-to_ary","()","<p>Returns an array of hashes representing each row record.\n",null,0],["to_ary","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-to_ary","()","",null,0],["to_ary","Array","ruby/classes/Array.html#method-i-to_ary","()","<p>Returns <code>self</code>.\n",null,1],["to_ary","Gem::SourceList","ruby/classes/Gem/SourceList.html#method-i-to_ary","()","",null,1],["to_attachable_partial_path","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-to_attachable_partial_path","()","",null,0],["to_basic","Gem::NameTuple","ruby/classes/Gem/NameTuple.html#method-c-to_basic","(list)","<p>Turn an array of NameTuple objects back into an array of\n<p>name, version, platform &mdash; tuples.\n\n",null,1],["to_binary","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-to_binary","(*args)","<p>Returns serialized iseq binary format data as a String object. A corresponding iseq object is created …\n",null,1],["to_bn","Integer","ruby/classes/Integer.html#method-i-to_bn","()","<p>Casts an Integer as an OpenSSL::BN\n<p>See ‘man bn` for more info.\n",null,1],["to_bn","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-to_bn","()","",null,1],["to_bn","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-to_bn","(conversion_form = group.point_conversion_form)","<p>Returns the octet string representation of the EC point as an instance of OpenSSL::BN.\n<p>If <em>conversion_form</em> …\n",null,1],["to_c","Complex","ruby/classes/Complex.html#method-i-to_c","()","<p>Returns <code>self</code>.\n",null,1],["to_c","NilClass","ruby/classes/NilClass.html#method-i-to_c","()","<p>Returns zero as a Complex:\n\n<pre><code>nil.to_c # =&gt; (0+0i)\n</code></pre>\n",null,1],["to_c","Numeric","ruby/classes/Numeric.html#method-i-to_c","()","<p>Returns <code>self</code> as a Complex object.\n",null,1],["to_c","String","ruby/classes/String.html#method-i-to_c","()","<p>Returns <code>self</code> interpreted as a Complex object; leading whitespace and trailing garbage are ignored:\n\n<pre><code>&#39;9&#39;.to_c ...\n</code></pre>\n",null,1],["to_complete","ActiveSupport::ExecutionWrapper","rails/classes/ActiveSupport/ExecutionWrapper.html#method-c-to_complete","(*args, &block)","",null,0],["to_csv","CSV::Row","ruby/classes/CSV/Row.html#method-i-to_csv","(**options)","<p>Returns the row as a CSV String. Headers are not included:\n\n<pre><code>source = &quot;Name,Value\\nfoo,0\\nbar,1\\nbaz,2\\n&quot; ...\n</code></pre>\n",null,1],["to_csv","CSV::Table","ruby/classes/CSV/Table.html#method-i-to_csv","(write_headers: true, limit: nil, **options)","<p>Returns the table as CSV string. See Options for Generating.\n<p>Defaults option <code>write_headers</code> to <code>true</code>:\n\n<pre><code>source ...\n</code></pre>\n",null,1],["to_d","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_d","()","<p>Returns self.\n\n<pre><code>require &#39;bigdecimal/util&#39;\n\nd = BigDecimal(&quot;3.14&quot;)\nd.to_d                       # =&gt; 0.314e1\n</code></pre>\n",null,1],["to_d","Complex","ruby/classes/Complex.html#method-i-to_d","(*args)","<p>Returns the value as a BigDecimal.\n<p>The <code>precision</code> parameter is required for a rational complex number. …\n",null,1],["to_d","Float","ruby/classes/Float.html#method-i-to_d","(precision=0)","<p>Returns the value of <code>float</code> as a BigDecimal. The <code>precision</code> parameter is used to determine the number of …\n",null,1],["to_d","Integer","ruby/classes/Integer.html#method-i-to_d","()","<p>Returns the value of <code>int</code> as a BigDecimal.\n\n<pre><code>require &#39;bigdecimal&#39;\nrequire &#39;bigdecimal/util&#39;\n\n42.to_d   # ...\n</code></pre>\n",null,1],["to_d","NilClass","ruby/classes/NilClass.html#method-i-to_d","()","<p>Returns nil represented as a BigDecimal.\n\n<pre><code>require &#39;bigdecimal&#39;\nrequire &#39;bigdecimal/util&#39;\n\nnil.to_d   # ...\n</code></pre>\n",null,1],["to_d","Rational","ruby/classes/Rational.html#method-i-to_d","(precision)","<p>Returns the value as a BigDecimal.\n<p>The required <code>precision</code> parameter is used to determine the number of …\n",null,1],["to_d","String","ruby/classes/String.html#method-i-to_d","()","<p>Returns the result of interpreting leading characters in <code>str</code> as a BigDecimal.\n\n<pre><code>require &#39;bigdecimal&#39;\nrequire ...\n</code></pre>\n",null,1],["to_date","String","rails/classes/String.html#method-i-to_date","()","<p>Converts a string to a Date value.\n\n<pre><code>&quot;1-1-2012&quot;.to_date   # =&gt; Sun, 01 Jan 2012\n&quot;01/01/2012&quot;.to_date # =&gt; ...\n</code></pre>\n",null,0],["to_date","Date","ruby/classes/Date.html#method-i-to_date","()","<p>Returns <code>self</code>.\n",null,1],["to_date","DateTime","ruby/classes/DateTime.html#method-i-to_date","()","<p>Returns a Date object which denotes self.\n",null,1],["to_date","Time","ruby/classes/Time.html#method-i-to_date","()","<p>Returns a Date object which denotes self.\n",null,1],["to_datetime","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_datetime","()","<p>Returns an instance of DateTime with the timezone’s UTC offset\n\n<pre><code>Time.zone.now.to_datetime          ...\n</code></pre>\n",null,0],["to_datetime","String","rails/classes/String.html#method-i-to_datetime","()","<p>Converts a string to a DateTime value.\n\n<pre><code>&quot;1-1-2012&quot;.to_datetime            # =&gt; Sun, 01 Jan 2012 00:00:00 ...\n</code></pre>\n",null,0],["to_datetime","Date","ruby/classes/Date.html#method-i-to_datetime","()","<p>Returns a DateTime whose value is the same as <code>self</code>:\n\n<pre><code>Date.new(2001, 2, 3).to_datetime # =&gt; #&lt;DateTime: ...\n</code></pre>\n",null,1],["to_datetime","DateTime","ruby/classes/DateTime.html#method-i-to_datetime","()","<p>Returns self.\n",null,1],["to_datetime","Time","ruby/classes/Time.html#method-i-to_datetime","()","<p>Returns a DateTime object which denotes self.\n",null,1],["to_dep_map","ActionView::Digestor::Node","rails/classes/ActionView/Digestor/Node.html#method-i-to_dep_map","()","",null,0],["to_der","OpenSSL::ASN1::ASN1Data","ruby/classes/OpenSSL/ASN1/ASN1Data.html#method-i-to_der","()","<p>Encodes this ASN1Data into a DER-encoded String value. The result is DER-encoded except for the possibility …\n",null,1],["to_der","OpenSSL::ASN1::Constructive","ruby/classes/OpenSSL/ASN1/Constructive.html#method-i-to_der","()","<p>See ASN1Data#to_der for details.\n",null,1],["to_der","OpenSSL::ASN1::Primitive","ruby/classes/OpenSSL/ASN1/Primitive.html#method-i-to_der","()","<p>See ASN1Data#to_der for details.\n",null,1],["to_der","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_der","()","<p>Returns the DER encoding of this SPKI.\n",null,1],["to_der","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-to_der","()","<p>Encodes this basic response into a DER-encoded string.\n",null,1],["to_der","OpenSSL::OCSP::CertificateId","ruby/classes/OpenSSL/OCSP/CertificateId.html#method-i-to_der","()","<p>Encodes this certificate identifier into a DER-encoded string.\n",null,1],["to_der","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-to_der","()","<p>Returns this request as a DER-encoded string\n",null,1],["to_der","OpenSSL::OCSP::Response","ruby/classes/OpenSSL/OCSP/Response.html#method-i-to_der","()","<p>Returns this response as a DER-encoded string.\n",null,1],["to_der","OpenSSL::OCSP::SingleResponse","ruby/classes/OpenSSL/OCSP/SingleResponse.html#method-i-to_der","()","<p>Encodes this SingleResponse into a DER-encoded string.\n",null,1],["to_der","OpenSSL::PKCS12","ruby/classes/OpenSSL/PKCS12.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-to_der","()","<p>Serializes the DH parameters to a DER-encoding\n<p>Note that any existing per-session public/private keys …\n",null,1],["to_der","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-to_der","()","<p>Serializes a private or public key to a DER-encoding.\n<p>See #to_pem for details.\n<p><strong>This method is kept for</strong> …\n",null,1],["to_der","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-to_der","()","<p>Serializes a private or public key to a DER-encoding.\n<p>See #to_pem for details.\n<p><strong>This method is kept for</strong> …\n",null,1],["to_der","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-to_der","()","<p>See the OpenSSL documentation for i2d_ECPKParameters_bio()\n",null,1],["to_der","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_der","()","<p>Serializes a private or public key to a DER-encoding.\n<p>See #to_pem for details.\n<p><strong>This method is kept for</strong> …\n",null,1],["to_der","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-to_der","()","<p>Returns an ASN1 encoded String that contains the Session object.\n",null,1],["to_der","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-to_der","()","<p>DER-encodes this Request.\n",null,1],["to_der","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-to_der","()","<p>Returns the Response in DER-encoded form.\n",null,1],["to_der","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-to_der","()","<p>Returns the TokenInfo in DER-encoded form.\n",null,1],["to_der","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-to_der","()","<p>Converts the name to DER encoding\n",null,1],["to_der","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-to_der","()","",null,1],["to_der","OpenSSL::X509::Revoked","ruby/classes/OpenSSL/X509/Revoked.html#method-i-to_der","()","",null,1],["to_digits","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_digits","()","<p>Converts a BigDecimal to a String of the form “nnnnnn.mmm”. This method is deprecated; use …\n",null,1],["to_enum","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-to_enum","(*args)","<p>Similar to Object#to_enum, except it returns a lazy enumerator. This makes it easy to define Enumerable …\n",null,1],["to_enum","Object","ruby/classes/Object.html#method-i-to_enum","(*args)","<p>Creates a new Enumerator which will enumerate by calling <code>method</code> on <code>obj</code>, passing <code>args</code> if any. What was …\n",null,1],["to_f","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_f","()","<p>Returns the object’s date and time as a floating-point number of seconds since the Epoch (January …\n",null,0],["to_f","DateTime","rails/classes/DateTime.html#method-i-to_f","()","<p>Converts <code>self</code> to a floating-point number of seconds, including fractional microseconds, since the Unix …\n",null,0],["to_f","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_f","()","<p>Returns a new Float object having approximately the same value as the BigDecimal number. Normal accuracy …\n",null,1],["to_f","Complex","ruby/classes/Complex.html#method-i-to_f","()","<p>Returns the value of <code>self.real</code> as a Float, if possible:\n\n<pre><code>Complex(1, 0).to_f              # =&gt; 1.0\nComplex(1, ...\n</code></pre>\n",null,1],["to_f","Float","ruby/classes/Float.html#method-i-to_f","()","<p>Returns <code>self</code> (which is already a Float).\n",null,1],["to_f","Integer","ruby/classes/Integer.html#method-i-to_f","()","<p>Converts <code>self</code> to a Float:\n\n<pre><code>1.to_f  # =&gt; 1.0\n-1.to_f # =&gt; -1.0\n</code></pre>\n<p>If the value of <code>self</code> does not fit in a Float …\n",null,1],["to_f","NilClass","ruby/classes/NilClass.html#method-i-to_f","()","<p>Always returns zero.\n\n<pre><code>nil.to_f   #=&gt; 0.0\n</code></pre>\n",null,1],["to_f","Rational","ruby/classes/Rational.html#method-i-to_f","()","<p>Returns the value as a Float.\n\n<pre><code>Rational(2).to_f      #=&gt; 2.0\nRational(9, 4).to_f   #=&gt; 2.25\nRational(-3, ...\n</code></pre>\n",null,1],["to_f","String","ruby/classes/String.html#method-i-to_f","()","<p>Returns the result of interpreting leading characters in <code>self</code> as a Float:\n\n<pre><code>&#39;3.14159&#39;.to_f  # =&gt; 3.14159 ...\n</code></pre>\n",null,1],["to_f","Time","ruby/classes/Time.html#method-i-to_f","()","<p>Returns the value of <code>self</code> as a Float number Epoch seconds; subseconds are included.\n<p>The stored value of …\n",null,1],["to_formatted_s","ActiveSupport::NumericWithFormat","rails/classes/ActiveSupport/NumericWithFormat.html#method-i-to_formatted_s","(format = nil, options = nil)","",null,0],["to_formatted_s","ActiveSupport::RangeWithFormat","rails/classes/ActiveSupport/RangeWithFormat.html#method-i-to_formatted_s","(format = :default)","",null,0],["to_formatted_s","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_formatted_s","(format = :default)","",null,0],["to_formatted_s","Array","rails/classes/Array.html#method-i-to_formatted_s","(format = :default)","",null,0],["to_formatted_s","Date","rails/classes/Date.html#method-i-to_formatted_s","(format = :default)","",null,0],["to_formatted_s","DateTime","rails/classes/DateTime.html#method-i-to_formatted_s","(format = :default)","",null,0],["to_formatted_s","Time","rails/classes/Time.html#method-i-to_formatted_s","(format = :default)","",null,0],["to_fs","ActiveSupport::NumericWithFormat","rails/classes/ActiveSupport/NumericWithFormat.html#method-i-to_fs","(format = nil, options = nil)","<p>Provides options for converting numbers into formatted strings. Options are provided for phone numbers, …\n",null,0],["to_fs","ActiveSupport::RangeWithFormat","rails/classes/ActiveSupport/RangeWithFormat.html#method-i-to_fs","(format = :default)","<p>Convert range to a formatted string. See RANGE_FORMATS for predefined formats.\n<p>This method is aliased …\n",null,0],["to_fs","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_fs","(format = :default)","<p>Returns a string of the object’s date and time.\n<p>This method is aliased to <code>to_formatted_s</code>.\n<p>Accepts an …\n",null,0],["to_fs","Array","rails/classes/Array.html#method-i-to_fs","(format = :default)","<p>Extends <code>Array#to_s</code> to convert a collection of elements into a comma separated id list if <code>:db</code> argument …\n",null,0],["to_fs","Date","rails/classes/Date.html#method-i-to_fs","(format = :default)","<p>Convert to a formatted string. See DATE_FORMATS for predefined formats.\n<p>This method is aliased to <code>to_formatted_s</code> …\n",null,0],["to_fs","DateTime","rails/classes/DateTime.html#method-i-to_fs","(format = :default)","<p>Convert to a formatted string. See Time::DATE_FORMATS for predefined formats.\n<p>This method is aliased to …\n",null,0],["to_fs","Time","rails/classes/Time.html#method-i-to_fs","(format = :default)","<p>Converts to a formatted string. See DATE_FORMATS for built-in formats.\n<p>This method is aliased to <code>to_formatted_s</code> …\n",null,0],["to_fullpath","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-to_fullpath","(path)","<p>Full path of the target library file. If the file is not in this gem, return nil.\n",null,1],["to_h","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-to_h","()","<p>Returns a safe ActiveSupport::HashWithIndifferentAccess representation of the parameters with all unpermitted …\n",null,0],["to_h","ActiveRecord::Encryption::Properties","rails/classes/ActiveRecord/Encryption/Properties.html#method-i-to_h","()","",null,0],["to_h","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-to_h","()","",null,0],["to_h","Array","ruby/classes/Array.html#method-i-to_h","()","<p>Returns a new Hash formed from <code>self</code>.\n<p>When a block is given, calls the block with each array element; the …\n",null,1],["to_h","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-to_h","()","<p>Returns a hash containing the same data as ‘to_a`.\n",null,1],["to_h","CSV::Row","ruby/classes/CSV/Row.html#method-i-to_h","()","<p>Returns the new Hash formed by adding each header-value pair in <code>self</code> as a key-value pair in the Hash …\n",null,1],["to_h","Data","ruby/classes/Data.html#method-i-to_h","()","<p>Returns Hash representation of the data object.\n\n<pre><code>Measure = Data.define(:amount, :unit)\ndistance = Measure[10, ...\n</code></pre>\n",null,1],["to_h","ENV","ruby/classes/ENV.html#method-c-to_h","()","<p>With no block, returns a Hash containing all name/value pairs from ENV:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; ...\n</code></pre>\n",null,1],["to_h","Enumerable","ruby/classes/Enumerable.html#method-i-to_h","(*args)","<p>When <code>self</code> consists of 2-element arrays, returns a hash each of whose entries is the key-value pair formed …\n",null,1],["to_h","Fiddle::CStruct","ruby/classes/Fiddle/CStruct.html#method-i-to_h","()","",null,1],["to_h","Hash","ruby/classes/Hash.html#method-i-to_h","()","<p>For an instance of Hash, returns <code>self</code>.\n<p>For a subclass of Hash, returns a new Hash containing the content …\n",null,1],["to_h","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-to_h","()","<p>Returns the configuration instance variables as a hash, that can be passed to the configure method.\n",null,1],["to_h","NilClass","ruby/classes/NilClass.html#method-i-to_h","()","<p>Returns an empty Hash.\n\n<pre><code>nil.to_h   #=&gt; {}\n</code></pre>\n",null,1],["to_h","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-to_h","()","",null,1],["to_h","OpenStruct","ruby/classes/OpenStruct.html#method-i-to_h","(&block)","",null,1],["to_h","Struct","ruby/classes/Struct.html#method-i-to_h","()","<p>Returns a hash containing the name and value for each member:\n\n<pre><code>Customer = Struct.new(:name, :address, :zip) ...\n</code></pre>\n",null,1],["to_h","WIN32OLE::Record","ruby/classes/WIN32OLE/Record.html#method-i-to_h","()","<p>Returns Ruby Hash object which represents VT_RECORD variable. The keys of Hash object are member names …\n",null,1],["to_hash","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-to_hash","()","<p>Returns a safe <code>Hash</code> representation of the parameters with all unpermitted keys removed.\n\n<pre><code>params = ActionController::Parameters.new({ ...\n</code></pre>\n",null,0],["to_hash","ActionDispatch::Flash::FlashHash","rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-to_hash","()","",null,0],["to_hash","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-to_hash","(full_messages = false)","<p>Returns a Hash of attributes with their error messages. If <code>full_messages</code> is <code>true</code>, it will contain full …\n",null,0],["to_hash","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a regular hash with string keys.\n",null,0],["to_hash","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a regular hash with string keys.\n",null,0],["to_hash","CSV::Row","ruby/classes/CSV/Row.html#method-i-to_hash","()","",null,1],["to_hash","ENV","ruby/classes/ENV.html#method-c-to_hash","()","<p>Returns a Hash containing all name/value pairs from ENV:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;)\nENV.to_hash ...\n</code></pre>\n",null,1],["to_hash","Hash","ruby/classes/Hash.html#method-i-to_hash","()","<p>Returns <code>self</code>.\n",null,1],["to_hash","JSON::Ext::Generator::State","ruby/classes/JSON/Ext/Generator/State.html#method-i-to_hash","()","<p>Returns the configuration instance variables as a hash, that can be passed to the configure method.\n",null,1],["to_hash","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-i-to_hash","()","",null,1],["to_hash","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-to_hash","()","<p>Returns a hash of the key/value pairs:\n\n<pre><code>req = Net::HTTP::Get.new(uri)\nreq.to_hash\n# =&gt;\n{&quot;accept-encoding&quot;=&gt;[&quot;gzip;q=1.0,deflate;q=0.6,identity;q=0.3&quot;], ...\n</code></pre>\n",null,1],["to_hash","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-to_hash","()","<p>Converts the contents of the database to an in-memory Hash object, and returns it.\n",null,1],["to_html","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-i-to_html","()","",null,0],["to_html","ActionText::Content","rails/classes/ActionText/Content.html#method-i-to_html","()","",null,0],["to_html","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-i-to_html","()","",null,0],["to_html","ActionText::TrixAttachment","rails/classes/ActionText/TrixAttachment.html#method-i-to_html","()","",null,0],["to_html","Rails::Info","rails/classes/Rails/Info.html#method-c-to_html","()","",null,0],["to_html","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-to_html","(text)","<p>Converts ampersand, dashes, ellipsis, quotes, copyright and registered trademark symbols in <code>text</code> to properly …\n",null,1],["to_html","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-c-to_html","(token_stream)","<p>Converts <code>token_stream</code> to HTML wrapping various tokens with <code>&lt;span&gt;</code> elements. Some tokens types are …\n",null,1],["to_i","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-to_i","()","<p>Returns the number of seconds that this Duration represents.\n\n<pre><code>1.minute.to_i   # =&gt; 60\n1.hour.to_i     # ...\n</code></pre>\n",null,0],["to_i","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_i","()","<p>Returns the object’s date and time as an integer number of seconds since the Epoch (January 1, 1970 …\n",null,0],["to_i","DateTime","rails/classes/DateTime.html#method-i-to_i","()","<p>Converts <code>self</code> to an integer number of seconds since the Unix epoch.\n",null,0],["to_i","ARGF","ruby/classes/ARGF.html#method-i-to_i","()","<p>Returns an integer representing the numeric file descriptor for the current file. Raises an ArgumentError …\n",null,1],["to_i","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_i","()","<p>Returns the value as an Integer.\n<p>If the BigDecimal is infinity or NaN, raises FloatDomainError.\n",null,1],["to_i","CSV","ruby/classes/CSV.html#method-i-to_i","()","",null,1],["to_i","Complex","ruby/classes/Complex.html#method-i-to_i","()","<p>Returns the value of <code>self.real</code> as an Integer, if possible:\n\n<pre><code>Complex(1, 0).to_i              # =&gt; 1\nComplex(1, ...\n</code></pre>\n",null,1],["to_i","Fiddle::Closure","ruby/classes/Fiddle/Closure.html#method-i-to_i","()","<p>Returns the memory address for this closure.\n",null,1],["to_i","Fiddle::Function","ruby/classes/Fiddle/Function.html#method-i-to_i","()","<p>The integer memory location of this function\n",null,1],["to_i","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-to_i","()","<p>Returns the memory address for this handle.\n",null,1],["to_i","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-to_i","()","<p>Returns the integer memory location of this pointer.\n",null,1],["to_i","Float","ruby/classes/Float.html#method-i-to_i","()","<p>Returns <code>self</code> truncated to an Integer.\n\n<pre><code>1.2.to_i    # =&gt; 1\n(-1.2).to_i # =&gt; -1\n</code></pre>\n<p>Note that the limited precision …\n",null,1],["to_i","IO","ruby/classes/IO.html#method-i-to_i","()","<p>Returns the integer file descriptor for the stream:\n\n<pre><code>$stdin.fileno             # =&gt; 0\n$stdout.fileno   ...\n</code></pre>\n",null,1],["to_i","IPAddr","ruby/classes/IPAddr.html#method-i-to_i","()","<p>Returns the integer representation of the ipaddr.\n",null,1],["to_i","Integer","ruby/classes/Integer.html#method-i-to_i","()","<p>Returns <code>self</code> (which is already an Integer).\n",null,1],["to_i","NilClass","ruby/classes/NilClass.html#method-i-to_i","()","<p>Always returns zero.\n\n<pre><code>nil.to_i   #=&gt; 0\n</code></pre>\n",null,1],["to_i","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-to_i","()","",null,1],["to_i","Process::Status","ruby/classes/Process/Status.html#method-i-to_i","()","<p>Returns the system-dependent integer status of <code>self</code>:\n\n<pre><code>`cat /nop`\n$?.to_i # =&gt; 256\n</code></pre>\n",null,1],["to_i","Rational","ruby/classes/Rational.html#method-i-to_i","()","<p>Returns the truncated value as an integer.\n<p>Equivalent to Rational#truncate.\n\n<pre><code>Rational(2, 3).to_i    #=&gt; ...\n</code></pre>\n",null,1],["to_i","String","ruby/classes/String.html#method-i-to_i","(*args)","<p>Returns the result of interpreting leading characters in <code>self</code> as an integer in the given <code>base</code> (which …\n",null,1],["to_i","Time","ruby/classes/Time.html#method-i-to_i","()","<p>Returns the value of <code>self</code> as integer Epoch seconds; subseconds are truncated (not rounded):\n\n<pre><code>Time.utc(1970, ...\n</code></pre>\n",null,1],["to_id","DRb","ruby/classes/DRb.html#method-c-to_id","(obj)","<p>Get a reference id for an object using the current server.\n<p>This raises a DRbServerNotFound error if there …\n",null,1],["to_id","DRb::DRbIdConv","ruby/classes/DRb/DRbIdConv.html#method-i-to_id","(obj)","<p>Convert an object into a reference id.\n<p>This implementation returns the object’s __id__ in the local …\n",null,1],["to_id","DRb::DRbIdConv","ruby/classes/DRb/DRbIdConv.html#method-i-to_id","(obj)","<p>Convert an object into a reference id.\n<p>This implementation returns the object’s __id__ in the local …\n",null,1],["to_id","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-to_id","(obj)","<p>Convert a local object to a dRuby reference.\n",null,1],["to_int","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_int","()","<p>Returns the value as an Integer.\n<p>If the BigDecimal is infinity or NaN, raises FloatDomainError.\n",null,1],["to_int","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-to_int","()","<p>Returns the integer memory location of this pointer.\n",null,1],["to_int","Float","ruby/classes/Float.html#method-i-to_int","()","<p>Returns <code>self</code> truncated to an Integer.\n\n<pre><code>1.2.to_i    # =&gt; 1\n(-1.2).to_i # =&gt; -1\n</code></pre>\n<p>Note that the limited precision …\n",null,1],["to_int","Integer","ruby/classes/Integer.html#method-i-to_int","()","<p>Returns <code>self</code> (which is already an Integer).\n",null,1],["to_int","Numeric","ruby/classes/Numeric.html#method-i-to_int","()","<p>Returns <code>self</code> as an integer; converts using method <code>to_i</code> in the derived class.\n<p>Of the Core and Standard …\n",null,1],["to_int","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-to_int","()","",null,1],["to_io","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-to_io","()","",null,0],["to_io","ARGF","ruby/classes/ARGF.html#method-i-to_io","()","<p>Returns an IO object representing the current file. This will be a File object unless the current file …\n",null,1],["to_io","CSV","ruby/classes/CSV.html#method-i-to_io","()","",null,1],["to_io","IO","ruby/classes/IO.html#method-i-to_io","()","<p>Returns <code>self</code>.\n",null,1],["to_io","OpenSSL::SSL::SSLServer","ruby/classes/OpenSSL/SSL/SSLServer.html#method-i-to_io","()","<p>Returns the TCPServer passed to the SSLServer when initialized.\n",null,1],["to_io","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-i-to_io","()","<p>Same as IO.\n",null,1],["to_json","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-to_json","()","",null,0],["to_json","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/bigdecimal&#39;\nputs BigDecimal(2).to_json\nputs ...\n</code></pre>\n",null,1],["to_json","Complex","ruby/classes/Complex.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/complex&#39;\nputs Complex(2).to_json\nputs Complex(2.0, ...\n</code></pre>\n",null,1],["to_json","Date","ruby/classes/Date.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/date&#39;\nputs Date.today.to_json\n</code></pre>\n<p>Output:\n",null,1],["to_json","DateTime","ruby/classes/DateTime.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/datetime&#39;\nputs DateTime.now.to_json\n</code></pre>\n<p>Output: …\n",null,1],["to_json","Exception","ruby/classes/Exception.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/exception&#39;\nputs Exception.new(&#39;Foo&#39;).to_json\n</code></pre>\n",null,1],["to_json","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-i-to_json","(*a)","",null,1],["to_json","OpenStruct","ruby/classes/OpenStruct.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/ostruct&#39;\nputs OpenStruct.new(&#39;name&#39; =&gt; &#39;Rowdy&#39;, ...\n</code></pre>\n",null,1],["to_json","Psych","ruby/classes/Psych.html#method-c-to_json","(object)","<p>Dump Ruby <code>object</code> to a JSON string.\n",null,1],["to_json","Range","ruby/classes/Range.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/range&#39;\nputs (1..4).to_json\nputs (1...4).to_json ...\n</code></pre>\n",null,1],["to_json","Rational","ruby/classes/Rational.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/rational&#39;\nputs Rational(2, 3).to_json\n</code></pre>\n<p>Output: …\n",null,1],["to_json","Regexp","ruby/classes/Regexp.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/regexp&#39;\nputs /foo/.to_json\n</code></pre>\n<p>Output:\n",null,1],["to_json","Set","ruby/classes/Set.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/set&#39;\nputs Set.new(%w/foo bar baz/).to_json\n</code></pre>\n",null,1],["to_json","Struct","ruby/classes/Struct.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/struct&#39;\nCustomer = Struct.new(&#39;Customer&#39;, :name, ...\n</code></pre>\n",null,1],["to_json","Symbol","ruby/classes/Symbol.html#method-i-to_json","(*a)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/symbol&#39;\nputs :foo.to_json\n</code></pre>\n<p>Output:\n",null,1],["to_json","Time","ruby/classes/Time.html#method-i-to_json","(*args)","<p>Returns a JSON string representing <code>self</code>:\n\n<pre><code>require &#39;json/add/time&#39;\nputs Time.now.to_json\n</code></pre>\n<p>Output:\n",null,1],["to_key","ActiveModel::Conversion","rails/classes/ActiveModel/Conversion.html#method-i-to_key","()","<p>Returns an Array of all key attributes if any of the attributes is set, whether or not the object is …\n",null,0],["to_key","ActiveRecord::AttributeMethods::PrimaryKey","rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-to_key","()","<p>Returns this record’s primary key value wrapped in an array if one is available.\n",null,0],["to_mailtext","URI::MailTo","ruby/classes/URI/MailTo.html#method-i-to_mailtext","()","<p>Returns the RFC822 e-mail text equivalent of the URL, as a String.\n<p>Example:\n\n<pre><code>require &#39;uri&#39;\n\nuri = URI.parse(&quot;mailto:ruby-list@ruby-lang.org?Subject=subscribe&amp;cc=myaddr&quot;) ...\n</code></pre>\n",null,1],["to_model","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-to_model","()","",null,0],["to_model","ActiveModel::Conversion","rails/classes/ActiveModel/Conversion.html#method-i-to_model","()","<p>If your object is already designed to implement all of the Active Model you can use the default <code>:to_model</code> …\n",null,0],["to_name","Resolv::IPv4","ruby/classes/Resolv/IPv4.html#method-i-to_name","()","<p>Turns this IPv4 address into a Resolv::DNS::Name.\n",null,1],["to_name","Resolv::IPv6","ruby/classes/Resolv/IPv6.html#method-i-to_name","()","<p>Turns this IPv6 address into a Resolv::DNS::Name.\n",null,1],["to_obj","DRb","ruby/classes/DRb.html#method-c-to_obj","(ref)","<p>Convert a reference into an object using the current server.\n<p>This raises a DRbServerNotFound error if …\n",null,1],["to_obj","DRb::DRbIdConv","ruby/classes/DRb/DRbIdConv.html#method-i-to_obj","(ref)","<p>Convert an object reference id to an object.\n<p>This implementation looks up the reference id in the local …\n",null,1],["to_obj","DRb::DRbIdConv","ruby/classes/DRb/DRbIdConv.html#method-i-to_obj","(ref)","<p>Convert an object reference id to an object.\n<p>This implementation looks up the reference id in the local …\n",null,1],["to_obj","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-to_obj","(ref)","<p>Convert a dRuby reference to the local object it refers to.\n",null,1],["to_octet_string","OpenSSL::PKey::EC::Point","ruby/classes/OpenSSL/PKey/EC/Point.html#method-i-to_octet_string","(p1)","<p>Returns the octet string representation of the elliptic curve point.\n<p><em>conversion_form</em> specifies how the …\n",null,1],["to_options","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options","()","",null,0],["to_options","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options","()","",null,0],["to_options","Hash","rails/classes/Hash.html#method-i-to_options","()","",null,0],["to_options!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,0],["to_options!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,0],["to_options!","Hash","rails/classes/Hash.html#method-i-to_options-21","()","",null,0],["to_p","Win32::SSPI::Identity","ruby/classes/Win32/SSPI/Identity.html#method-i-to_p","()","",null,1],["to_p","Win32::SSPI::SecurityBuffer","ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-to_p","()","",null,1],["to_p","Win32::SSPI::SecurityHandle","ruby/classes/Win32/SSPI/SecurityHandle.html#method-i-to_p","()","",null,1],["to_p","Win32::SSPI::TimeStamp","ruby/classes/Win32/SSPI/TimeStamp.html#method-i-to_p","()","",null,1],["to_param","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-to_param","(*args)","",null,0],["to_param","ActiveModel::Conversion","rails/classes/ActiveModel/Conversion.html#method-i-to_param","()","<p>Returns a <code>string</code> representing the object’s key suitable for use in URLs, or <code>nil</code> if <code>persisted?</code> is …\n",null,0],["to_param","ActiveRecord::Integration","rails/classes/ActiveRecord/Integration.html#method-i-to_param","()","<p>Returns a <code>String</code>, which Action Pack uses for constructing a URL to this object. The default implementation …\n",null,0],["to_param","ActiveRecord::Integration::ClassMethods","rails/classes/ActiveRecord/Integration/ClassMethods.html#method-i-to_param","(method_name = nil)","<p>Defines your model’s <code>to_param</code> method to generate “pretty” URLs using <code>method_name</code>, which …\n",null,0],["to_param","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-to_param","()","",null,0],["to_param","Array","rails/classes/Array.html#method-i-to_param","()","<p>Calls <code>to_param</code> on all its elements and joins the result with slashes. This is used by <code>url_for</code> in Action …\n",null,0],["to_param","FalseClass","rails/classes/FalseClass.html#method-i-to_param","()","<p>Returns <code>self</code>.\n",null,0],["to_param","Hash","rails/classes/Hash.html#method-i-to_param","(namespace = nil)","",null,0],["to_param","NilClass","rails/classes/NilClass.html#method-i-to_param","()","<p>Returns <code>self</code>.\n",null,0],["to_param","Object","rails/classes/Object.html#method-i-to_param","()","<p>Alias of <code>to_s</code>.\n",null,0],["to_param","TrueClass","rails/classes/TrueClass.html#method-i-to_param","()","<p>Returns <code>self</code>.\n",null,0],["to_partial_path","ActionText::Attachables::ContentAttachment","rails/classes/ActionText/Attachables/ContentAttachment.html#method-i-to_partial_path","()","",null,0],["to_partial_path","ActionText::Attachables::MissingAttachable","rails/classes/ActionText/Attachables/MissingAttachable.html#method-c-to_partial_path","()","",null,0],["to_partial_path","ActionText::Attachables::RemoteImage","rails/classes/ActionText/Attachables/RemoteImage.html#method-i-to_partial_path","()","",null,0],["to_partial_path","ActionText::Content","rails/classes/ActionText/Content.html#method-i-to_partial_path","()","",null,0],["to_partial_path","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-to_partial_path","()","",null,0],["to_partial_path","ActiveModel::Conversion","rails/classes/ActiveModel/Conversion.html#method-i-to_partial_path","()","<p>Returns a <code>string</code> identifying the path associated with the object. ActionPack uses this to find a suitable …\n",null,0],["to_path","ActionDispatch::Http::UploadedFile","rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-to_path","()","<p>Shortcut for <code>tempfile.to_path</code>.\n",null,0],["to_path","ActionDispatch::Response::RackBody","rails/classes/ActionDispatch/Response/RackBody.html#method-i-to_path","()","",null,0],["to_path","ActionView::FileSystemResolver","rails/classes/ActionView/FileSystemResolver.html#method-i-to_path","()","",null,0],["to_path","Dir","ruby/classes/Dir.html#method-i-to_path","()","<p>Returns the <code>dirpath</code> string that was used to create <code>self</code> (or <code>nil</code> if created by method Dir.for_fd):\n\n<pre><code>Dir.new(&#39;example&#39;).path ...\n</code></pre>\n",null,1],["to_path","IO","ruby/classes/IO.html#method-i-to_path","()","<p>Returns the path associated with the IO, or <code>nil</code> if there is no path associated with the IO. It is not …\n",null,1],["to_path","Pathname","ruby/classes/Pathname.html#method-i-to_path","()","<p>Return the path as a String.\n<p>to_path is implemented so Pathname objects are usable with File.open, etc. …\n",null,1],["to_pem","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_pem","()","<p>Returns the PEM encoding of this SPKI.\n",null,1],["to_pem","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-to_pem","()","<p>Serializes the DH parameters to a PEM-encoding.\n<p>Note that any existing per-session public/private keys …\n",null,1],["to_pem","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-to_pem","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["to_pem","OpenSSL::PKey::EC","ruby/classes/OpenSSL/PKey/EC.html#method-i-to_pem","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["to_pem","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-to_pem","()","<p>See the OpenSSL documentation for PEM_write_bio_ECPKParameters()\n",null,1],["to_pem","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_pem","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["to_pem","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-to_pem","()","<p>Returns a PEM encoded String that contains the Session object.\n",null,1],["to_pem","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_pem","()","",null,1],["to_pem","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-to_pem","()","",null,1],["to_plain_text","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-i-to_plain_text","()","",null,0],["to_plain_text","ActionText::Content","rails/classes/ActionText/Content.html#method-i-to_plain_text","()","",null,0],["to_plain_text","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-i-to_plain_text","()","",null,0],["to_plain_text","ActionText::RichText","rails/classes/ActionText/RichText.html#method-i-to_plain_text","()","",null,0],["to_prepare","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-c-to_prepare","(*args, &block)","<p>Registers a callback that will run once at application startup and every time the code is reloaded.\n",null,0],["to_prepare","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-to_prepare","(&blk)","<p>Defines generic callbacks to run before #after_initialize. Useful for Rails::Railtie subclasses.\n",null,0],["to_prepare_blocks","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-to_prepare_blocks","()","<p>Array of callbacks defined by #to_prepare.\n",null,0],["to_proc","Enumerator::Yielder","ruby/classes/Enumerator/Yielder.html#method-i-to_proc","()","<p>Returns a Proc object that takes arguments and yields them.\n<p>This method is implemented so that a Yielder …\n",null,1],["to_proc","Fiddle::Function","ruby/classes/Fiddle/Function.html#method-i-to_proc","()","<p>Turn this function in to a proc\n",null,1],["to_proc","Hash","ruby/classes/Hash.html#method-i-to_proc","()","<p>Returns a Proc object that maps a key to its value:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nproc = h.to_proc\nproc.class ...\n</code></pre>\n",null,1],["to_proc","Method","ruby/classes/Method.html#method-i-to_proc","()","<p>Returns a Proc object corresponding to this method.\n",null,1],["to_proc","Proc","ruby/classes/Proc.html#method-i-to_proc","()","<p>Part of the protocol for converting objects to Proc objects. Instances of class Proc simply return themselves. …\n",null,1],["to_proc","Symbol","ruby/classes/Symbol.html#method-i-to_proc","()","<p>Returns a Proc object which calls the method with name of <code>self</code> on the first parameter and passes the …\n",null,1],["to_ptr","Fiddle::Handle","ruby/classes/Fiddle/Handle.html#method-i-to_ptr","()","<p>Returns the Fiddle::Pointer of this handle.\n",null,1],["to_ptr","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-c-to_ptr","(p1)","<p>Get the underlying pointer for ruby object <code>val</code> and return it as a Fiddle::Pointer object.\n",null,1],["to_ptr","Fiddle::StructArray","ruby/classes/Fiddle/StructArray.html#method-i-to_ptr","()","",null,1],["to_query","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-to_query","(*args)","<p>Returns a string representation of the receiver suitable for use as a URL query string:\n\n<pre><code>params = ActionController::Parameters.new({ ...\n</code></pre>\n",null,0],["to_query","Array","rails/classes/Array.html#method-i-to_query","(key)","<p>Converts an array into a string suitable for use as a URL query string, using the given <code>key</code> as the param …\n",null,0],["to_query","Hash","rails/classes/Hash.html#method-i-to_query","(namespace = nil)","<p>Returns a string representation of the receiver suitable for use as a URL query string:\n\n<pre><code>{name: &#39;David&#39;, ...\n</code></pre>\n",null,0],["to_query","Object","rails/classes/Object.html#method-i-to_query","(key)","<p>Converts an object into a string suitable for use as a URL query string, using the given <code>key</code> as the param …\n",null,0],["to_r","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_r","()","<p>Returns the object’s date and time as a rational number of seconds since the Epoch (January 1, 1970 …\n",null,0],["to_r","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_r","()","<p>Converts a BigDecimal to a Rational.\n",null,1],["to_r","Complex","ruby/classes/Complex.html#method-i-to_r","()","<p>Returns the value of <code>self.real</code> as a Rational, if possible:\n\n<pre><code>Complex(1, 0).to_r              # =&gt; (1/1) ...\n</code></pre>\n",null,1],["to_r","Float","ruby/classes/Float.html#method-i-to_r","()","<p>Returns the value as a rational.\n\n<pre><code>2.0.to_r    #=&gt; (2/1)\n2.5.to_r    #=&gt; (5/2)\n-0.75.to_r  #=&gt; (-3/4)\n0.0.to_r ...\n</code></pre>\n",null,1],["to_r","Integer","ruby/classes/Integer.html#method-i-to_r","()","<p>Returns the value as a rational.\n\n<pre><code>1.to_r        #=&gt; (1/1)\n(1&lt;&lt;64).to_r  #=&gt; (18446744073709551616/1)\n</code></pre>\n",null,1],["to_r","NilClass","ruby/classes/NilClass.html#method-i-to_r","()","<p>Returns zero as a Rational:\n\n<pre><code>nil.to_r # =&gt; (0/1)\n</code></pre>\n",null,1],["to_r","Rational","ruby/classes/Rational.html#method-i-to_r","()","<p>Returns self.\n\n<pre><code>Rational(2).to_r      #=&gt; (2/1)\nRational(-8, 6).to_r  #=&gt; (-4/3)\n</code></pre>\n",null,1],["to_r","String","ruby/classes/String.html#method-i-to_r","()","<p>Returns the result of interpreting leading characters in <code>str</code> as a rational.  Leading whitespace and extraneous …\n",null,1],["to_r","Time","ruby/classes/Time.html#method-i-to_r","()","<p>Returns the value of <code>self</code> as a Rational exact number of Epoch seconds;\n\n<pre><code>Time.now.to_r # =&gt; (16571402750320203/10000000)\n</code></pre>\n",null,1],["to_range","IPAddr","ruby/classes/IPAddr.html#method-i-to_range","()","<p>Creates a Range object for the network address.\n",null,1],["to_rendered_html_with_layout","ActionText::Content","rails/classes/ActionText/Content.html#method-i-to_rendered_html_with_layout","()","",null,0],["to_request_set","Gem::AvailableSet","ruby/classes/Gem/AvailableSet.html#method-i-to_request_set","(development = :none)","<p>Converts this AvailableSet into a RequestSet that can be used to install gems.\n<p>If <code>development</code> is :none …\n",null,1],["to_rfc822text","URI::MailTo","ruby/classes/URI/MailTo.html#method-i-to_rfc822text","()","",null,1],["to_rich_text_attributes","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-to_rich_text_attributes","(attributes = {})","",null,0],["to_ruby","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-to_ruby","()","<p>Returns a Ruby code representation of this specification, such that it can be eval’ed and reconstruct …\n",null,1],["to_ruby","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-to_ruby","(symbolize_names: false, freeze: false, strict_integer: false)","<p>Convert this node to Ruby.\n<p>See also Psych::Visitors::ToRuby\n",null,1],["to_ruby_for_cache","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-to_ruby_for_cache","()","<p>Returns a Ruby lighter-weight code representation of this specification, used for indexing only.\n<p>See  …\n",null,1],["to_run","ActiveSupport::ExecutionWrapper","rails/classes/ActiveSupport/ExecutionWrapper.html#method-c-to_run","(*args, &block)","",null,0],["to_s","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-to_s","","<p>Returns the content of the parameters as a string.\n",null,0],["to_s","ActionDispatch::RemoteIp::GetIp","rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-to_s","()","<p>Memoizes the value returned by #calculate_ip and returns it for ActionDispatch::Request to use.\n",null,0],["to_s","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-i-to_s","()","",null,0],["to_s","ActionText::Content","rails/classes/ActionText/Content.html#method-i-to_s","()","",null,0],["to_s","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-i-to_s","()","",null,0],["to_s","ActionText::TrixAttachment","rails/classes/ActionText/TrixAttachment.html#method-i-to_s","()","",null,0],["to_s","ActionView::FileSystemResolver","rails/classes/ActionView/FileSystemResolver.html#method-i-to_s","()","",null,0],["to_s","ActionView::Template::Sources::File","rails/classes/ActionView/Template/Sources/File.html#method-i-to_s","()","",null,0],["to_s","ActionView::Template::Types::Type","rails/classes/ActionView/Template/Types/Type.html#method-i-to_s","()","",null,0],["to_s","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-to_s","","<p>Returns the class name.\n\n<pre><code>class BlogPost\n  extend ActiveModel::Naming\nend\n\nBlogPost.model_name.to_s # =&gt; ...\n</code></pre>\n",null,0],["to_s","ActiveRecord::ConnectionAdapters::AbstractAdapter::Version","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter/Version.html#method-i-to_s","()","",null,0],["to_s","ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Bit::Data","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/OID/Bit/Data.html#method-i-to_s","()","",null,0],["to_s","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-i-to_s","()","<p>Returns the sanitized version of the filename.\n",null,0],["to_s","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-to_s","()","<p>Returns the amount of seconds a duration covers as a string. For more information check to_i method. …\n",null,0],["to_s","ActiveSupport::SafeBuffer","rails/classes/ActiveSupport/SafeBuffer.html#method-i-to_s","()","",null,0],["to_s","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_s","()","<p>Returns a string of the object’s date and time.\n",null,0],["to_s","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-to_s","()","<p>Returns a textual representation of this time zone.\n",null,0],["to_s","Announcement::Version","rails/classes/Announcement/Version.html#method-i-to_s","()","",null,0],["to_s","Mime::NullType","rails/classes/Mime/NullType.html#method-i-to_s","()","",null,0],["to_s","Mime::Type","rails/classes/Mime/Type.html#method-i-to_s","()","",null,0],["to_s","Rails::Generators::AppBase::GemfileEntry","rails/classes/Rails/Generators/AppBase/GemfileEntry.html#method-i-to_s","()","",null,0],["to_s","Rails::Info","rails/classes/Rails/Info.html#method-c-to_s","()","",null,0],["to_s","Rails::SourceAnnotationExtractor::Annotation","rails/classes/Rails/SourceAnnotationExtractor/Annotation.html#method-i-to_s","(options = {})","<p>Returns a representation of the annotation that looks like this:\n\n<pre><code>[126] [TODO] This algorithm is simple ...\n</code></pre>\n",null,0],["to_s","ARGF","ruby/classes/ARGF.html#method-i-to_s","()","<p>Returns “ARGF”.\n",null,1],["to_s","Addrinfo","ruby/classes/Addrinfo.html#method-i-to_s","()","<p>returns the socket address as packed struct sockaddr string.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).to_sockaddr ...\n</code></pre>\n",null,1],["to_s","Array","ruby/classes/Array.html#method-i-to_s","()","<p>Returns the new String formed by calling method <code>#inspect</code> on each array element:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.inspect ...\n</code></pre>\n",null,1],["to_s","Benchmark::Tms","ruby/classes/Benchmark/Tms.html#method-i-to_s","()","<p>Same as #format.\n",null,1],["to_s","BigDecimal","ruby/classes/BigDecimal.html#method-i-to_s","(p1 = v1)","<p>Converts the value to a string.\n<p>The default format looks like  0.xxxxEnn.\n<p>The optional parameter s consists …\n",null,1],["to_s","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-to_s","()","<p>Convert the Cookie to its string representation.\n",null,1],["to_s","CSV::Row","ruby/classes/CSV/Row.html#method-i-to_s","(**options)","",null,1],["to_s","CSV::Table","ruby/classes/CSV/Table.html#method-i-to_s","(write_headers: true, limit: nil, **options)","",null,1],["to_s","Complex","ruby/classes/Complex.html#method-i-to_s","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Complex(2).to_s                      # =&gt; &quot;2+0i&quot;\nComplex(&#39;-8/6&#39;).to_s ...\n</code></pre>\n",null,1],["to_s","Data","ruby/classes/Data.html#method-i-to_s","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Measure = Data.define(:amount, :unit)\n\ndistance = Measure[10, ...\n</code></pre>\n",null,1],["to_s","Date","ruby/classes/Date.html#method-i-to_s","()","<p>Returns a string representation of the date in <code>self</code> in ISO 8601 extended date format (<code>&#39;%Y-%m-%d&#39;</code> …\n",null,1],["to_s","DateTime","ruby/classes/DateTime.html#method-i-to_s","()","<p>Returns a string in an ISO 8601 format. (This method doesn’t use the expanded representations.)\n\n<pre><code>DateTime.new(2001,2,3,4,5,6,&#39;-7&#39;).to_s ...\n</code></pre>\n",null,1],["to_s","DidYouMean::Correctable","ruby/classes/DidYouMean/Correctable.html#method-i-to_s","()","",null,1],["to_s","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-to_s","()","<p>Returns digest_obj.hexdigest().\n",null,1],["to_s","ENV","ruby/classes/ENV.html#method-c-to_s","()","<p>Returns String ‘ENV’:\n\n<pre><code>ENV.to_s # =&gt; &quot;ENV&quot;\n</code></pre>\n",null,1],["to_s","Encoding","ruby/classes/Encoding.html#method-i-to_s","()","<p>Returns the name of the encoding.\n\n<pre><code>Encoding::UTF_8.name      #=&gt; &quot;UTF-8&quot;\n</code></pre>\n",null,1],["to_s","ErrorHighlight::CoreExt","ruby/classes/ErrorHighlight/CoreExt.html#method-i-to_s","()","",null,1],["to_s","Exception","ruby/classes/Exception.html#method-i-to_s","()","<p>Returns exception’s message (or the name of the exception if no message is set).\n",null,1],["to_s","FalseClass","ruby/classes/FalseClass.html#method-i-to_s","()","<p>The string representation of <code>false</code> is “false”.\n",null,1],["to_s","Fiber","ruby/classes/Fiber.html#method-i-to_s","()","",null,1],["to_s","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-to_s","(p1 = v1)","<p>Returns the pointer contents as a string.\n<p>When called with no arguments, this method will return the contents …\n",null,1],["to_s","Float","ruby/classes/Float.html#method-i-to_s","()","<p>Returns a string containing a representation of <code>self</code>; depending of the value of <code>self</code>, the string representation …\n",null,1],["to_s","Gem::GemcutterUtilities::WebauthnListener::Response","ruby/classes/Gem/GemcutterUtilities/WebauthnListener/Response.html#method-i-to_s","()","",null,1],["to_s","Gem::Platform","ruby/classes/Gem/Platform.html#method-i-to_s","()","",null,1],["to_s","Gem::RequestSet::Lockfile","ruby/classes/Gem/RequestSet/Lockfile.html#method-i-to_s","()","<p>The contents of the lock file.\n",null,1],["to_s","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-to_s","()","",null,1],["to_s","Gem::Uri","ruby/classes/Gem/Uri.html#method-i-to_s","()","",null,1],["to_s","Gem::Version","ruby/classes/Gem/Version.html#method-i-to_s","()","",null,1],["to_s","Hash","ruby/classes/Hash.html#method-i-to_s","()","<p>Returns a new String containing the hash entries:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.inspect # =&gt; &quot;{:foo=&gt;0, ...\n</code></pre>\n",null,1],["to_s","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-to_s","()","<p>Short representation of the buffer. It includes the address, size and symbolic flags. This format is …\n",null,1],["to_s","IPAddr","ruby/classes/IPAddr.html#method-i-to_s","()","<p>Returns a string containing the IP address representation.\n",null,1],["to_s","Integer","ruby/classes/Integer.html#method-i-to_s","(*args)","<p>Returns a string containing the place-value representation of <code>self</code> in radix <code>base</code> (in 2..36).\n\n<pre><code>12345.to_s ...\n</code></pre>\n",null,1],["to_s","MatchData","ruby/classes/MatchData.html#method-i-to_s","()","<p>Returns the matched string:\n\n<pre><code>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\n# =&gt; #&lt;MatchData &quot;HX1138&quot; 1:&quot;H&quot; 2:&quot;X&quot; ...\n</code></pre>\n",null,1],["to_s","Method","ruby/classes/Method.html#method-i-to_s","()","<p>Returns a human-readable description of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: ...\n</code></pre>\n",null,1],["to_s","Module","ruby/classes/Module.html#method-i-to_s","()","<p>Returns a string representing this module or class. For basic classes and modules, this is the name. …\n",null,1],["to_s","NilClass","ruby/classes/NilClass.html#method-i-to_s","()","<p>Returns an empty String:\n\n<pre><code>nil.to_s # =&gt; &quot;&quot;\n</code></pre>\n",null,1],["to_s","Object","ruby/classes/Object.html#method-i-to_s","()","<p>Returns a string representing <em>obj</em>. The default #to_s prints the object’s class and an encoding of …\n",null,1],["to_s","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-to_s","(p1 = v1)","<p>Returns the string representation of the bignum.\n<p>BN.new can parse the encoded string to convert back into …\n",null,1],["to_s","OpenSSL::Config","ruby/classes/OpenSSL/Config.html#method-i-to_s","()","<p>Gets the parsable form of the current configuration.\n<p>Given the following configuration being created: …\n",null,1],["to_s","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-to_s","()","<p>Returns the authentication code as a hex-encoded string. The <em>digest</em> parameter specifies the digest algorithm …\n",null,1],["to_s","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_s","()","<p>Returns the PEM encoding of this SPKI.\n",null,1],["to_s","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::PKey::DH","ruby/classes/OpenSSL/PKey/DH.html#method-i-to_s","()","<p>Serializes the DH parameters to a PEM-encoding.\n<p>Note that any existing per-session public/private keys …\n",null,1],["to_s","OpenSSL::PKey::DSA","ruby/classes/OpenSSL/PKey/DSA.html#method-i-to_s","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["to_s","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-to_s","(*args)","<p>Serializes a private or public key to a PEM-encoding.\n<p>When the key contains public components only &mdash; Serializes …\n",null,1],["to_s","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-to_s","()","",null,1],["to_s","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-to_s","(*args)","<p>Returns a String representation of the Distinguished Name. <em>format</em> is one of:\n<p>OpenSSL::X509::Name::COMPAT …\n",null,1],["to_s","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-to_s","()","",null,1],["to_s","OpenStruct","ruby/classes/OpenStruct.html#method-i-to_s","()","",null,1],["to_s","OptionParser","ruby/classes/OptionParser.html#method-i-to_s","()","",null,1],["to_s","OptionParser::ParseError","ruby/classes/OptionParser/ParseError.html#method-i-to_s","()","",null,1],["to_s","Pathname","ruby/classes/Pathname.html#method-i-to_s","()","<p>Return the path as a String.\n<p>to_path is implemented so Pathname objects are usable with File.open, etc. …\n",null,1],["to_s","Proc","ruby/classes/Proc.html#method-i-to_s","()","<p>Returns the unique identifier for this proc, along with an indication of where the proc was defined. …\n",null,1],["to_s","Process::Status","ruby/classes/Process/Status.html#method-i-to_s","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>`cat /nop`\n$?.to_s # =&gt; &quot;pid 1262141 exit 1&quot;\n</code></pre>\n",null,1],["to_s","Ractor","ruby/classes/Ractor.html#method-i-to_s","()","",null,1],["to_s","Range","ruby/classes/Range.html#method-i-to_s","()","<p>Returns a string representation of <code>self</code>, including <code>begin.to_s</code> and <code>end.to_s</code>:\n\n<pre><code>(1..4).to_s  # =&gt; &quot;1..4&quot;\n(1...4).to_s ...\n</code></pre>\n",null,1],["to_s","Rational","ruby/classes/Rational.html#method-i-to_s","()","<p>Returns the value as a string.\n\n<pre><code>Rational(2).to_s      #=&gt; &quot;2/1&quot;\nRational(-8, 6).to_s  #=&gt; &quot;-4/3&quot;\nRational(&#39;1/2&#39;).to_s ...\n</code></pre>\n",null,1],["to_s","Regexp","ruby/classes/Regexp.html#method-i-to_s","()","<p>Returns a string showing the options and string of <code>self</code>:\n\n<pre><code>r0 = /ab+c/ix\ns0 = r0.to_s # =&gt; &quot;(?ix-m:ab+c)&quot;\n</code></pre>\n",null,1],["to_s","Reline::History","ruby/classes/Reline/History.html#method-i-to_s","()","",null,1],["to_s","Resolv::DNS::Name","ruby/classes/Resolv/DNS/Name.html#method-i-to_s","()","<p>returns the domain name as a string.\n<p>The domain name doesn’t have a trailing dot even if the name …\n",null,1],["to_s","Ripper::Lexer::Elem","ruby/classes/Ripper/Lexer/Elem.html#method-i-to_s","()","",null,1],["to_s","Set","ruby/classes/Set.html#method-i-to_s","()","",null,1],["to_s","Socket::Option","ruby/classes/Socket/Option.html#method-i-to_s","()","<p>returns the socket option data as a string.\n\n<pre><code>p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(&quot;i!&quot;)).data ...\n</code></pre>\n",null,1],["to_s","String","ruby/classes/String.html#method-i-to_s","()","<p>Returns <code>self</code> if <code>self</code> is a String, or <code>self</code> converted to a String if <code>self</code> is a subclass of String.\n",null,1],["to_s","Struct","ruby/classes/Struct.html#method-i-to_s","()","<p>Returns a string representation of <code>self</code>:\n\n<pre><code>Customer = Struct.new(:name, :address, :zip) # =&gt; Customer\njoe ...\n</code></pre>\n",null,1],["to_s","Symbol","ruby/classes/Symbol.html#method-i-to_s","()","<p>Returns a string representation of <code>self</code> (not including the leading colon):\n\n<pre><code>:foo.to_s # =&gt; &quot;foo&quot;\n</code></pre>\n<p>Related: …\n",null,1],["to_s","SyntaxSuggest::CleanDocument","ruby/classes/SyntaxSuggest/CleanDocument.html#method-i-to_s","()","<p>Renders the document back to a string\n",null,1],["to_s","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-to_s","()","",null,1],["to_s","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-to_s","()","<p>Renders the given line\n<p>Also allows us to represent source code as an array of code lines.\n<p>When we have …\n",null,1],["to_s","Thread","ruby/classes/Thread.html#method-i-to_s","()","<p>Dump the name, id, and status of <em>thr</em> to a string.\n",null,1],["to_s","Thread::Backtrace::Location","ruby/classes/Thread/Backtrace/Location.html#method-i-to_s","()","<p>Returns a Kernel#caller style string representing this frame.\n",null,1],["to_s","Time","ruby/classes/Time.html#method-i-to_s","()","<p>Returns a string representation of <code>self</code>, without subseconds:\n\n<pre><code>t = Time.new(2000, 12, 31, 23, 59, 59, 0.5) ...\n</code></pre>\n",null,1],["to_s","TrueClass","ruby/classes/TrueClass.html#method-i-to_s","()","<p>Returns string <code>&#39;true&#39;</code>:\n\n<pre><code>true.to_s # =&gt; &quot;true&quot;\n</code></pre>\n<p>TrueClass#inspect is an alias for TrueClass#to_s. …\n",null,1],["to_s","URI::FTP","ruby/classes/URI/FTP.html#method-i-to_s","()","<p>Returns a String representation of the URI::FTP.\n",null,1],["to_s","URI::Generic","ruby/classes/URI/Generic.html#method-i-to_s","()","<p>Constructs String from URI.\n",null,1],["to_s","URI::MailTo","ruby/classes/URI/MailTo.html#method-i-to_s","()","<p>Constructs String from URI.\n",null,1],["to_s","UnboundMethod","ruby/classes/UnboundMethod.html#method-i-to_s","()","<p>Returns a human-readable description of the underlying method.\n\n<pre><code>&quot;cat&quot;.method(:count).inspect   #=&gt; &quot;#&lt;Method: ...\n</code></pre>\n",null,1],["to_s","UncaughtThrowError","ruby/classes/UncaughtThrowError.html#method-i-to_s","()","<p>Returns formatted message with the inspected tag.\n",null,1],["to_s","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-to_s","()","<p>Returns the name of the method.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;) ...\n</code></pre>\n",null,1],["to_s","WIN32OLE::Param","ruby/classes/WIN32OLE/Param.html#method-i-to_s","()","<p>Returns name.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbook&#39;)\nmethod = WIN32OLE_METHOD.new(tobj, ...\n</code></pre>\n",null,1],["to_s","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-to_s","()","<p>Returns OLE type name.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Application&#39;)\nputs ...\n</code></pre>\n",null,1],["to_s","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-to_s","()","<p>Returns the type library name.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;)\nname ...\n</code></pre>\n",null,1],["to_s","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-to_s","()","<p>Returns the name of variable.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;XlSheetType&#39;) ...\n</code></pre>\n",null,1],["to_s","Win32::SSPI::SSPIResult","ruby/classes/Win32/SSPI/SSPIResult.html#method-i-to_s","()","",null,1],["to_sentence","ActionView::Helpers::OutputSafetyHelper","rails/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-to_sentence","(array, options = {})","<p>Converts the array to a comma-separated sentence where the last element is joined by the connector word. …\n",null,0],["to_sentence","Array","rails/classes/Array.html#method-i-to_sentence","(options = {})","<p>Converts the array to a comma-separated sentence where the last element is joined by the connector word. …\n",null,0],["to_set","Enumerable","ruby/classes/Enumerable.html#method-i-to_set","(klass = Set, *args, &block)","<p>Makes a set from the enumerable object with given arguments.\nNeeds to <code>require &quot;set&quot;</code> to use ...\n",null,1],["to_set","Set","ruby/classes/Set.html#method-i-to_set","(klass = Set, *args, &block)","<p>Returns self if no arguments are given. Otherwise, converts the\nset to another with <code>klass.new(self, *args,</code> ...\n",null,1],["to_sockaddr","Addrinfo","ruby/classes/Addrinfo.html#method-i-to_sockaddr","()","<p>returns the socket address as packed struct sockaddr string.\n\n<pre><code>Addrinfo.tcp(&quot;localhost&quot;, 80).to_sockaddr ...\n</code></pre>\n",null,1],["to_spec","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-to_spec","()","<p>Return a Gem::Specification from this gem\n",null,1],["to_spec","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-to_spec","()","",null,1],["to_spec","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-to_spec","()","<p>Returns self\n",null,1],["to_specs","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-to_specs","()","",null,1],["to_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-to_sql","(arel_or_sql_string, binds = [])","<p>Converts an arel AST to SQL\n",null,0],["to_sql","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-to_sql","()","<p>Returns sql statement for the relation.\n\n<pre><code>User.where(name: &#39;Oscar&#39;).to_sql\n# =&gt; SELECT &quot;users&quot;.* FROM &quot;users&quot; ...\n</code></pre>\n",null,0],["to_str","ActionView::Template::Types::Type","rails/classes/ActionView/Template/Types/Type.html#method-i-to_str","()","",null,0],["to_str","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-to_str","","<p>Equivalent to <code>to_s</code>.\n",null,0],["to_str","Mime::Type","rails/classes/Mime/Type.html#method-i-to_str","()","",null,0],["to_str","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-to_str","(p1 = v1)","<p>Returns the pointer contents as a string.\n<p>When called with no arguments, this method will return the contents …\n",null,1],["to_str","String","ruby/classes/String.html#method-i-to_str","()","<p>Returns <code>self</code> if <code>self</code> is a String, or <code>self</code> converted to a String if <code>self</code> is a subclass of String.\n",null,1],["to_str","URI::Generic","ruby/classes/URI/Generic.html#method-i-to_str","()","",null,1],["to_string","IPAddr","ruby/classes/IPAddr.html#method-i-to_string","()","<p>Returns a string containing the IP address representation in canonical form.\n",null,1],["to_sym","ActionView::Template::Types::Type","rails/classes/ActionView/Template/Types/Type.html#method-i-to_sym","()","",null,0],["to_sym","Mime::Type","rails/classes/Mime/Type.html#method-i-to_sym","()","",null,0],["to_sym","String","ruby/classes/String.html#method-i-to_sym","()","<p>Returns the Symbol corresponding to <em>str</em>, creating the symbol if it did not previously exist. See Symbol#id2name …\n",null,1],["to_sym","Symbol","ruby/classes/Symbol.html#method-i-to_sym","()","<p>Returns <code>self</code>.\n<p>Related: String#to_sym.\n",null,1],["to_tag","ActiveSupport::XmlMini","rails/classes/ActiveSupport/XmlMini.html#method-i-to_tag","(key, value, options)","",null,0],["to_text","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-to_text","()","<p>Returns a textual representation of this SPKI, useful for debugging purposes.\n",null,1],["to_text","OpenSSL::PKey::EC::Group","ruby/classes/OpenSSL/PKey/EC/Group.html#method-i-to_text","()","<p>See the OpenSSL documentation for ECPKParameters_print()\n",null,1],["to_text","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-to_text","()","<p>Dumps key parameters, public key, and private key components contained in the key into a human-readable …\n",null,1],["to_text","OpenSSL::SSL::Session","ruby/classes/OpenSSL/SSL/Session.html#method-i-to_text","()","<p>Shows everything in the Session object. This is for diagnostic purposes.\n",null,1],["to_text","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-to_text","()","",null,1],["to_text","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-to_text","()","",null,1],["to_text","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-to_text","()","",null,1],["to_time","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_time","()","<p>Returns an instance of <code>Time</code>, either with the same UTC offset as <code>self</code> or in the local system timezone …\n",null,0],["to_time","Date","rails/classes/Date.html#method-i-to_time","(form = :local)","<p>Converts a Date instance to a Time, where the time is set to the beginning of the day. The timezone can …\n",null,0],["to_time","DateTime","rails/classes/DateTime.html#method-i-to_time","()","<p>Either return an instance of <code>Time</code> with the same UTC offset as <code>self</code> or an instance of <code>Time</code> representing …\n",null,0],["to_time","String","rails/classes/String.html#method-i-to_time","(form = :local)","<p>Converts a string to a Time value. The <code>form</code> can be either <code>:utc</code> or <code>:local</code> (default <code>:local</code>).\n<p>The time is …\n",null,0],["to_time","Time","rails/classes/Time.html#method-i-to_time","()","<p>Either return <code>self</code> or the time in the local system timezone depending on the setting of <code>ActiveSupport.to_time_preserves_timezone</code> …\n",null,0],["to_time","Date","ruby/classes/Date.html#method-i-to_time","()","<p>Returns a new Time object with the same value as <code>self</code>; if <code>self</code> is a Julian date, derives its Gregorian …\n",null,1],["to_time","DateTime","ruby/classes/DateTime.html#method-i-to_time","()","<p>Returns a Time object which denotes self.\n",null,1],["to_time","Time","ruby/classes/Time.html#method-i-to_time","()","<p>Returns self.\n",null,1],["to_time_preserves_timezone","ActiveSupport","rails/classes/ActiveSupport.html#method-c-to_time_preserves_timezone","()","",null,0],["to_time_preserves_timezone=","ActiveSupport","rails/classes/ActiveSupport.html#method-c-to_time_preserves_timezone-3D","(value)","",null,0],["to_trix_attachment","ActionText::Attachments::TrixConversion","rails/classes/ActionText/Attachments/TrixConversion.html#method-i-to_trix_attachment","(content = trix_attachment_content)","",null,0],["to_trix_content_attachment_partial_path","ActionText::Attachable","rails/classes/ActionText/Attachable.html#method-i-to_trix_content_attachment_partial_path","()","",null,0],["to_trix_content_attachment_partial_path","ActionText::Attachables::ContentAttachment","rails/classes/ActionText/Attachables/ContentAttachment.html#method-i-to_trix_content_attachment_partial_path","()","",null,0],["to_trix_content_attachment_partial_path","ActionText::Engine","rails/classes/ActionText/Engine.html#method-i-to_trix_content_attachment_partial_path","()","",null,0],["to_trix_html","ActionText::Content","rails/classes/ActionText/Content.html#method-i-to_trix_html","()","",null,0],["to_trix_html","ActionText::RichText","rails/classes/ActionText/RichText.html#method-i-to_trix_html","()","",null,0],["to_tty?","Exception","ruby/classes/Exception.html#method-c-to_tty-3F","()","<p>Returns <code>true</code> if exception messages will be sent to a tty.\n",null,1],["to_unsafe_h","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-to_unsafe_h","()","<p>Returns an unsafe, unfiltered ActiveSupport::HashWithIndifferentAccess representation of the parameters. …\n",null,0],["to_unsafe_hash","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-to_unsafe_hash","()","",null,0],["to_utf8","OpenSSL::X509::Name","ruby/classes/OpenSSL/X509/Name.html#method-i-to_utf8","()","<p>Returns an UTF-8 representation of the distinguished name, as specified in RFC 2253.\n",null,1],["to_value","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-i-to_value","()","<p>Cast this pointer to a ruby object.\n",null,1],["to_write_io","ARGF","ruby/classes/ARGF.html#method-i-to_write_io","()","<p>Returns IO instance tied to <em>ARGF</em> for writing if inplace mode is enabled.\n",null,1],["to_xml","Array","rails/classes/Array.html#method-i-to_xml","(options = {})","<p>Returns a string that represents the array in XML by invoking <code>to_xml</code> on each element. Active Record collections …\n",null,0],["to_xml","Hash","rails/classes/Hash.html#method-i-to_xml","(options = {})","<p>Returns a string containing an XML representation of its receiver:\n\n<pre><code>{ foo: 1, bar: 2 }.to_xml\n# =&gt;\n# &lt;?xml ...\n</code></pre>\n",null,0],["to_yaml","Object","ruby/classes/Object.html#method-i-to_yaml","(options = {})","<p>Convert an object to YAML.  See Psych.dump for more information on the available <code>options</code>.\n",null,1],["to_yaml","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-to_yaml","(io = nil, options = {})","",null,1],["today","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-today","()","<p>Returns the current date in this time zone.\n",null,0],["today","Date","ruby/classes/Date.html#method-c-today","(p1 = v1)","<p>Returns a new Date object constructed from the present date:\n\n<pre><code>Date.today.to_s # =&gt; &quot;2022-07-06&quot;\n</code></pre>\n<p>See argument …\n",null,1],["today?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-today-3F","()","<p>Returns true if the current object’s time falls within the current day.\n",null,0],["today?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-today-3F","()","<p>Returns true if the date/time is today.\n",null,0],["toeuc","Kconv","ruby/classes/Kconv.html#method-c-toeuc","(str)","<p>Convert <code>str</code> to EUC-JP\n",null,1],["toeuc","String","ruby/classes/String.html#method-i-toeuc","()","<p>Convert <code>self</code> to EUC-JP\n",null,1],["toggle","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-toggle","(attribute)","<p>Assigns to <code>attribute</code> the boolean opposite of <code>attribute?</code>. So if the predicate returns <code>true</code> the attribute …\n",null,0],["toggle!","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-toggle-21","(attribute)","<p>Wrapper around #toggle that saves the record. This method differs from its non-bang version in the sense …\n",null,0],["tojis","Kconv","ruby/classes/Kconv.html#method-c-tojis","(str)","<p>Convert <code>str</code> to ISO-2022-JP\n",null,1],["tojis","String","ruby/classes/String.html#method-i-tojis","()","<p>Convert <code>self</code> to ISO-2022-JP\n",null,1],["token","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-token","()","<p>If a timestamp token is present, this returns it in the form of a OpenSSL::PKCS7.\n",null,1],["token","Win32::SSPI::SecurityBuffer","ruby/classes/Win32/SSPI/SecurityBuffer.html#method-i-token","()","",null,1],["token_and_options","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-token_and_options","(request)","<p>Parses the token and options out of the token Authorization header. The value for the Authorization header …\n",null,0],["token_info","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-token_info","()","<p>Get the response’s token info if present.\n",null,1],["token_list","ActionView::Helpers::TagHelper","rails/classes/ActionView/Helpers/TagHelper.html#method-i-token_list","(*args)","<p>Returns a string of tokens built from <code>args</code>.\n<p>Examples\n\n<pre><code>token_list(&quot;foo&quot;, &quot;bar&quot;)\n # =&gt; &quot;foo bar&quot;\ntoken_list(&quot;foo&quot;, ...\n</code></pre>\n",null,0],["token_listener","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-token_listener","(obj)","<p>Has <code>obj</code> listen to tokens\n",null,1],["token_params_from","ActionController::HttpAuthentication::Token","rails/classes/ActionController/HttpAuthentication/Token.html#method-i-token_params_from","(auth)","",null,0],["token_stream","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-i-token_stream","()","<p>Current token stream\n",null,1],["tokenize","Psych::ScalarScanner","ruby/classes/Psych/ScalarScanner.html#method-i-tokenize","(string)","<p>Tokenize <code>string</code> returning the Ruby object\n",null,1],["tokenize","RDoc::TomDoc","ruby/classes/RDoc/TomDoc.html#method-i-tokenize","(text)","<p>Turns text into an Array of tokens\n<p>text &mdash; A String containing TomDoc-format text.\n\n<p>Returns\n",null,1],["tokenize","Ripper","ruby/classes/Ripper.html#method-c-tokenize","(src, filename = '-', lineno = 1, **kw)","<p>Tokenizes the Ruby program and returns an array of strings. The <code>filename</code> and <code>lineno</code> arguments are mostly …\n",null,1],["tokens","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-tokens","()","<p>Returns tokens corresponding to the location of the node. Returns <code>nil</code> if <code>keep_tokens</code> is not enabled when …\n",null,1],["tokens_to_s","RDoc::TokenStream","ruby/classes/RDoc/TokenStream.html#method-i-tokens_to_s","()","<p>Returns a string representation of the token stream\n",null,1],["tolocale","Kconv","ruby/classes/Kconv.html#method-c-tolocale","(str)","<p>Convert <code>self</code> to locale encoding\n",null,1],["tolocale","String","ruby/classes/String.html#method-i-tolocale","()","<p>Convert <code>self</code> to locale encoding\n",null,1],["tomdoc?","RDoc::Comment","ruby/classes/RDoc/Comment.html#method-i-tomdoc-3F","()","<p>Returns true if this comment is in TomDoc format.\n",null,1],["tomorrow","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-tomorrow","()","<p>Returns the next date in this time zone.\n",null,0],["tomorrow","Date","rails/classes/Date.html#method-c-tomorrow","()","<p>Returns a new Date representing the date 1 day after today (i.e. tomorrow’s date).\n",null,0],["tomorrow","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-tomorrow","()","<p>Returns a new date/time representing tomorrow.\n",null,0],["tomorrow?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-tomorrow-3F","()","<p>Returns true if the current object’s time falls within the next day (tomorrow).\n",null,0],["tomorrow?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-tomorrow-3F","()","<p>Returns true if the date/time is tomorrow.\n",null,0],["top","IRB::Frame","ruby/classes/IRB/Frame.html#method-i-top","(n = 0)","<p>Returns the <code>n</code> number of frames on the call stack from the last frame initialized.\n<p>Raises FrameUnderflow …\n",null,1],["top","IRB::Frame","ruby/classes/IRB/Frame.html#method-c-top","(n = 0)","<p>Convenience method for Frame#top\n",null,1],["top","OptionParser","ruby/classes/OptionParser.html#method-c-top","()","",null,1],["top","OptionParser","ruby/classes/OptionParser.html#method-i-top","()","<p>Subject of #on / #on_head, #accept / #reject\n",null,1],["top_level","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-top_level","()","<p>Return the TopLevel that owns us\n",null,1],["top_level","RDoc::Require","ruby/classes/RDoc/Require.html#method-i-top_level","()","<p>The RDoc::TopLevel corresponding to this require, or <code>nil</code> if not found.\n",null,1],["tosjis","Kconv","ruby/classes/Kconv.html#method-c-tosjis","(str)","<p>Convert <code>str</code> to Shift_JIS\n",null,1],["tosjis","String","ruby/classes/String.html#method-i-tosjis","()","<p>Convert <code>self</code> to Shift_JIS\n",null,1],["total_in","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-total_in","()","<p>Returns the total bytes of the input data to the stream.  FIXME\n",null,1],["total_out","Zlib::ZStream","ruby/classes/Zlib/ZStream.html#method-i-total_out","()","<p>Returns the total bytes of the output data from the stream.  FIXME\n",null,1],["total_time","GC","ruby/classes/GC.html#method-c-total_time","()","<p>Return measured GC total time in nano seconds.\n",null,1],["total_time","GC::Profiler","ruby/classes/GC/Profiler.html#method-c-total_time","()","<p>The total time used for garbage collection in seconds\n",null,1],["touch","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-touch","(*names, time: nil)","<p>Saves the record with the updated_at/on attributes set to the current time or the time specified. Please …\n",null,0],["touch","FileUtils","ruby/classes/FileUtils.html#method-c-touch","(list, noop: nil, verbose: nil, mtime: nil, nocreate: nil)","<p>Updates modification times (mtime) and access times (atime) of the entries given by the paths in <code>list</code> …\n",null,1],["touch_all","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-touch_all","(*names, time: nil)","<p>Touches all records in the current relation, setting the <code>updated_at</code>/<code>updated_on</code> attributes to the current …\n",null,0],["toutf16","Kconv","ruby/classes/Kconv.html#method-c-toutf16","(str)","<p>Convert <code>str</code> to UTF-16\n",null,1],["toutf16","String","ruby/classes/String.html#method-i-toutf16","()","<p>Convert <code>self</code> to UTF-16\n",null,1],["toutf32","Kconv","ruby/classes/Kconv.html#method-c-toutf32","(str)","<p>Convert <code>str</code> to UTF-32\n",null,1],["toutf32","String","ruby/classes/String.html#method-i-toutf32","()","<p>Convert <code>self</code> to UTF-32\n",null,1],["toutf8","Kconv","ruby/classes/Kconv.html#method-c-toutf8","(str)","<p>Convert <code>str</code> to UTF-8\n",null,1],["toutf8","String","ruby/classes/String.html#method-i-toutf8","()","<p>Convert <code>self</code> to UTF-8\n",null,1],["tr","String","ruby/classes/String.html#method-i-tr","(p1, p2)","<p>Returns a copy of <code>self</code> with each character specified by string <code>selector</code> translated to the corresponding …\n",null,1],["tr!","String","ruby/classes/String.html#method-i-tr-21","(p1, p2)","<p>Like String#tr, but modifies <code>self</code> in place. Returns <code>self</code> if any changes were made, <code>nil</code> otherwise.\n",null,1],["tr_s","String","ruby/classes/String.html#method-i-tr_s","(p1, p2)","<p>Like String#tr, but also squeezes the modified portions of the translated string; returns a new string …\n",null,1],["tr_s!","String","ruby/classes/String.html#method-i-tr_s-21","(p1, p2)","<p>Like String#tr_s, but modifies <code>self</code> in place. Returns <code>self</code> if any changes were made, <code>nil</code> otherwise.\n<p>Related: …\n",null,1],["trace","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-trace","(path, initheader = nil)","<p>Sends a TRACE request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["trace","TracePoint","ruby/classes/TracePoint.html#method-c-trace","(*events)","<p>A convenience method for TracePoint.new, that activates the trace automatically.\n\n<pre><code>trace = TracePoint.trace(:call) ...\n</code></pre>\n",null,1],["trace_func","IRB::Frame","ruby/classes/IRB/Frame.html#method-i-trace_func","(event, file, line, id, binding)","<p>Used by Kernel#set_trace_func to register each event in the call stack\n",null,1],["trace_object_allocations","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-trace_object_allocations","()","<p>Starts tracing object allocations from the ObjectSpace extension module.\n<p>For example:\n\n<pre><code>require &#39;objspace&#39; ...\n</code></pre>\n",null,1],["trace_object_allocations_clear","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-trace_object_allocations_clear","()","<p>Clear recorded tracing information.\n",null,1],["trace_object_allocations_debug_start","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-trace_object_allocations_debug_start","()","",null,1],["trace_object_allocations_start","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-trace_object_allocations_start","()","<p>Starts tracing object allocations.\n",null,1],["trace_object_allocations_stop","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-trace_object_allocations_stop","()","<p>Stop tracing object allocations.\n<p>Note that if ::trace_object_allocations_start is called n-times, then …\n",null,1],["trace_points","RubyVM::InstructionSequence","ruby/classes/RubyVM/InstructionSequence.html#method-i-trace_points","()","<p>Return trace points in the instruction sequence. Return an array of [line, event_symbol] pair.\n",null,1],["trace_to_show","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-trace_to_show","()","",null,0],["trace_var","Kernel","ruby/classes/Kernel.html#method-i-trace_var","(*args)","<p>Controls tracing of assignments to global variables. The parameter <code>symbol</code> identifies the variable (as …\n",null,1],["traces","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-traces","()","",null,0],["trailing?","Prism::EmbDocComment","ruby/classes/Prism/EmbDocComment.html#method-i-trailing-3F","()","<p>This can only be true for inline comments.\n",null,1],["trailing?","Prism::InlineComment","ruby/classes/Prism/InlineComment.html#method-i-trailing-3F","()","<p>Returns true if this comment happens on the same line as other code and false if the comment is by itself. …\n",null,1],["trailing_slash?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-trailing_slash-3F","()","",null,1],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction","(requires_new: nil, isolation: nil, joinable: true, &block)","<p>Runs the given block in a database transaction, and returns the result of the block.\n<p>Nested transactions …\n",null,0],["transaction","ActiveRecord::Transactions::ClassMethods","rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-transaction","(**options, &block)","<p>See the ConnectionAdapters::DatabaseStatements#transaction API docs.\n",null,0],["transaction","PStore","ruby/classes/PStore.html#method-i-transaction","(read_only = false)","<p>Opens a transaction block for the store. See Transactions.\n<p>With argument <code>read_only</code> as <code>false</code>, the block …\n",null,1],["transaction_isolation_levels","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction_isolation_levels","()","",null,0],["transaction_open?","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction_open-3F","()","",null,0],["transfer","Fiber","ruby/classes/Fiber.html#method-i-transfer","(*args)","<p>Transfer control to another fiber, resuming it from where it last stopped or starting it if it was not …\n",null,1],["transfer","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-transfer","()","<p>Transfers ownership of the underlying memory to a new buffer, causing the current buffer to become uninitialized. …\n",null,1],["transform","ActiveStorage::Transformers::Transformer","rails/classes/ActiveStorage/Transformers/Transformer.html#method-i-transform","(file, format:)","<p>Applies the transformations to the source image in <code>file</code>, producing a target image in the specified <code>format</code> …\n",null,0],["transform","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-i-transform","(file, &block)","<p>Accepts a File object, performs the <code>transformations</code> against it, and saves the transformed image into …\n",null,0],["transform","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-transform","(symbolize_names: false, freeze: false, strict_integer: false)","",null,1],["transform_args","IRB::ExtendCommand::ShowDoc","ruby/classes/IRB/ExtendCommand/ShowDoc.html#method-c-transform_args","(args)","",null,1],["transform_args","IRB::ExtendCommand::ShowSource","ruby/classes/IRB/ExtendCommand/ShowSource.html#method-c-transform_args","(args)","",null,1],["transform_args?","IRB::Context","ruby/classes/IRB/Context.html#method-i-transform_args-3F","(command)","<p>Return true if the command supports transforming args\n",null,1],["transform_keys","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-transform_keys","(&block)","<p>Returns a new <code>ActionController::Parameters</code> instance with the results of running <code>block</code> once for every …\n",null,0],["transform_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-transform_keys","(*args, &block)","",null,0],["transform_keys","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-transform_keys","(*args, &block)","",null,0],["transform_keys","Hash","ruby/classes/Hash.html#method-i-transform_keys","(*args)","<p>Returns a new Hash object; each entry has:\n<p>A key provided by the block.\n<p>The value from <code>self</code>.\n",null,1],["transform_keys!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-transform_keys-21","(&block)","<p>Performs keys transformation and returns the altered <code>ActionController::Parameters</code> instance.\n",null,0],["transform_keys!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-transform_keys-21","()","",null,0],["transform_keys!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-transform_keys-21","()","",null,0],["transform_keys!","Hash","ruby/classes/Hash.html#method-i-transform_keys-21","(*args)","<p>Same as Hash#transform_keys but modifies the receiver in place instead of returning a new hash.\n",null,1],["transform_values","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-transform_values","()","<p>Returns a new <code>ActionController::Parameters</code> instance with the results of running <code>block</code> once for every …\n",null,0],["transform_values","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-transform_values","(*args, &block)","",null,0],["transform_values","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-transform_values","(*args, &block)","",null,0],["transform_values","Hash","ruby/classes/Hash.html#method-i-transform_values","()","<p>Returns a new Hash object; each entry has:\n<p>A key from <code>self</code>.\n<p>A value provided by the block.\n",null,1],["transform_values!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-transform_values-21","()","<p>Performs values transformation and returns the altered <code>ActionController::Parameters</code> instance.\n",null,0],["transform_values!","Hash","ruby/classes/Hash.html#method-i-transform_values-21","()","<p>Returns <code>self</code>, whose keys are unchanged, and whose values are determined by the given block.\n\n<pre><code>h = {foo: ...\n</code></pre>\n",null,1],["transient_failure?","ActionMailbox::Relayer::Result","rails/classes/ActionMailbox/Relayer/Result.html#method-i-transient_failure-3F","()","",null,0],["translate","AbstractController::Translation","rails/classes/AbstractController/Translation.html#method-i-translate","(key, **options)","<p>Delegates to <code>I18n.translate</code>.\n<p>When the given key starts with a period, it will be scoped by the current …\n",null,0],["translate","ActionView::Helpers::TranslationHelper","rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-translate","(key, **options)","<p>Delegates to <code>I18n#translate</code> but also performs three additional functions.\n<p>First, it will ensure that any …\n",null,0],["transliterate","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-transliterate","(string, replacement = \"?\", locale: nil)","<p>Replaces non-ASCII characters with an ASCII approximation, or if none exists, a replacement character …\n",null,0],["transmit","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-transmit","(data, via: nil)","<p>Transmit a hash of data to the subscriber. The hash will automatically be wrapped in a JSON envelope …\n",null,0],["transpose","Array","ruby/classes/Array.html#method-i-transpose","()","<p>Transposes the rows and columns in an Array of Arrays; the nested Arrays must all be the same size:\n\n<pre><code>a ...\n</code></pre>\n",null,1],["transpose_chars","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-transpose_chars","(key)","",null,1],["transpose_words","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-transpose_words","(key)","",null,1],["trap","Kernel","ruby/classes/Kernel.html#method-i-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a string such as “SIGALRM”, …\n",null,1],["trap","Signal","ruby/classes/Signal.html#method-c-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a string such as “SIGALRM”, …\n",null,1],["traverse","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-traverse","(trail = [], visited = {}, &block)","<p>Recursively walk dependencies of this spec, executing the <code>block</code> for each hop.\n",null,1],["traverse","OpenSSL::ASN1","ruby/classes/OpenSSL/ASN1.html#method-c-traverse","(p1)","<p>If a block is given, it prints out each of the elements encountered. Block parameters are (in that order): …\n",null,1],["traverse_parents","Gem::Util","ruby/classes/Gem/Util.html#method-c-traverse_parents","(directory, &block)","<p>Enumerates the parents of <code>directory</code>.\n",null,1],["tree","ActionView::Digestor","rails/classes/ActionView/Digestor.html#method-c-tree","(name, finder, partial = false, seen = {})","<p>Create a dependency tree for template named <code>name</code>.\n",null,0],["tree","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-tree","()","",null,1],["tree_depth","DidYouMean::TreeSpellChecker","ruby/classes/DidYouMean/TreeSpellChecker.html#method-i-tree_depth","()","",null,1],["trix.css","","rails/files/rails/actiontext/app/assets/stylesheets/trix_css.html","","<p>@charset “UTF-8”; /* Trix 1.3.2 Copyright © 2024 Basecamp, LLC trix-editor.org/*/ trix-editor …\n",null,0],["trix.js","","rails/files/rails/actiontext/app/assets/javascripts/trix_js.html","","<p>/* Trix 1.3.2 Copyright © 2024 Basecamp, LLC trix-editor.org/\n\n<pre><code>*/\n</code></pre>\n<p>(function(){}).call(this),function(){var …\n",null,0],["truecolor?","Reline::Face","ruby/classes/Reline/Face.html#method-c-truecolor-3F","()","",null,1],["truncate","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-truncate","(text, options = {}, &block)","<p>Truncates a given <code>text</code> after a given <code>:length</code> if <code>text</code> is longer than <code>:length</code> (defaults to 30). The last …\n",null,0],["truncate","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-truncate","(table_name, name = nil)","<p>Executes the truncate statement.\n",null,0],["truncate","String","rails/classes/String.html#method-i-truncate","(truncate_at, options = {})","<p>Truncates a given <code>text</code> after a given <code>length</code> if <code>text</code> is longer than <code>length</code>:\n\n<pre><code>&#39;Once upon a time in a world ...\n</code></pre>\n",null,0],["truncate","BigDecimal","ruby/classes/BigDecimal.html#method-i-truncate","(p1 = v1)","<p>Truncate to the nearest integer (by default), returning the result as a BigDecimal.\n\n<pre><code>BigDecimal(&#39;3.14159&#39;).truncate ...\n</code></pre>\n",null,1],["truncate","File","ruby/classes/File.html#method-c-truncate","(p1, p2)","<p>Truncates the file <em>file_name</em> to be at most <em>integer</em> bytes long. Not available on all platforms.\n\n<pre><code>f = File.new(&quot;out&quot;, ...\n</code></pre>\n",null,1],["truncate","File","ruby/classes/File.html#method-i-truncate","(p1)","<p>Truncates <em>file</em> to at most <em>integer</em> bytes. The file must be opened for writing. Not available on all platforms. …\n",null,1],["truncate","Float","ruby/classes/Float.html#method-i-truncate","(*args)","<p>Returns <code>self</code> truncated (toward zero) to a precision of <code>ndigits</code> decimal digits.\n<p>When <code>ndigits</code> is positive, …\n",null,1],["truncate","Integer","ruby/classes/Integer.html#method-i-truncate","(*args)","<p>Returns <code>self</code> truncated (toward zero) to a precision of <code>ndigits</code> decimal digits.\n<p>When <code>ndigits</code> is negative, …\n",null,1],["truncate","Numeric","ruby/classes/Numeric.html#method-i-truncate","(*args)","<p>Returns <code>self</code> truncated (toward zero) to a precision of <code>digits</code> decimal digits.\n<p>Numeric implements this …\n",null,1],["truncate","Pathname","ruby/classes/Pathname.html#method-i-truncate","(p1)","<p>Truncates the file to <code>length</code> bytes.\n<p>See File.truncate.\n",null,1],["truncate","Rational","ruby/classes/Rational.html#method-i-truncate","(*args)","<p>Returns <code>rat</code> truncated (toward zero) to a precision of <code>ndigits</code> decimal digits (default: 0).\n<p>When the precision …\n",null,1],["truncate","StringIO","ruby/classes/StringIO.html#method-i-truncate","(p1)","<p>Truncates the buffer string to at most <em>integer</em> bytes. The stream must be opened for writing.\n",null,1],["truncate_all","ActiveRecord::Tasks::DatabaseTasks","rails/classes/ActiveRecord/Tasks/DatabaseTasks.html#method-i-truncate_all","(environment = env)","",null,0],["truncate_bytes","String","rails/classes/String.html#method-i-truncate_bytes","(truncate_at, omission: \"…\")","<p>Truncates <code>text</code> to at most <code>bytesize</code> bytes in length without breaking string encoding by splitting multibyte …\n",null,0],["truncate_text","Gem::Text","ruby/classes/Gem/Text.html#method-i-truncate_text","(text, description, max_length = 100_000)","",null,1],["truncate_words","String","rails/classes/String.html#method-i-truncate_words","(words_count, options = {})","<p>Truncates a given <code>text</code> after a given number of words (<code>words_count</code>):\n\n<pre><code>&#39;Once upon a time in a world far far ...\n</code></pre>\n",null,0],["trust=","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-trust-3D","(p1)","<p>Sets the default trust settings used by the certificate verification with the store.\n<p>OpenSSL::X509::StoreContext#trust= …\n",null,1],["trust=","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-trust-3D","(p1)","<p>Sets the trust settings of the context. This overrides the default value set by Store#trust=.\n<p>See also …\n",null,1],["trust_cert","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-i-trust_cert","(certificate)","<p>Add a certificate to trusted certificate list.\n",null,1],["trust_dir","Gem::Security","ruby/classes/Gem/Security.html#method-c-trust_dir","()","<p>Returns a Gem::Security::TrustDir which wraps the directory where trusted certificates live.\n",null,1],["trusted_certificates","Gem::Security","ruby/classes/Gem/Security.html#method-c-trusted_certificates","(&block)","<p>Enumerates the trusted certificates via Gem::Security::TrustDir.\n",null,1],["try","Delegator","rails/classes/Delegator.html#method-i-try","","<p>See Object#try\n",null,0],["try","NilClass","rails/classes/NilClass.html#method-i-try","(*)","<p>Calling <code>try</code> on <code>nil</code> always returns <code>nil</code>. It becomes especially helpful when navigating through associations …\n",null,0],["try","Object","rails/classes/Object.html#method-i-try","","<p>Invokes the public method whose name goes as first argument just like <code>public_send</code> does, except that if …\n",null,0],["try!","Delegator","rails/classes/Delegator.html#method-i-try-21","","<p>See Object#try!\n",null,0],["try!","NilClass","rails/classes/NilClass.html#method-i-try-21","(*)","<p>Calling <code>try!</code> on <code>nil</code> always returns <code>nil</code>.\n\n<pre><code>nil.try!(:name) # =&gt; nil\n</code></pre>\n",null,0],["try!","Object","rails/classes/Object.html#method-i-try-21","","<p>Same as #try, but raises a <code>NoMethodError</code> exception if the receiver is not <code>nil</code> and does not implement …\n",null,0],["try_activate","Gem","ruby/classes/Gem.html#method-c-try_activate","(path)","<p>Try to activate a gem containing <code>path</code>. Returns true if activation succeeded or wasn’t needed because …\n",null,1],["try_const","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-try_const","(const, headers = nil, opt = \"\", &b)","<p>Returns whether or not the constant <code>const</code> is defined.\n<p>See also <code>have_const</code>\n",null,1],["try_convert","Array","ruby/classes/Array.html#method-c-try_convert","(p1)","<p>If <code>object</code> is an Array object, returns <code>object</code>.\n<p>Otherwise if <code>object</code> responds to <code>:to_ary</code>, calls <code>object.to_ary</code> …\n",null,1],["try_convert","Hash","ruby/classes/Hash.html#method-c-try_convert","(p1)","<p>If <code>obj</code> is a Hash object, returns <code>obj</code>.\n<p>Otherwise if <code>obj</code> responds to <code>:to_hash</code>, calls <code>obj.to_hash</code> and returns …\n",null,1],["try_convert","IO","ruby/classes/IO.html#method-c-try_convert","(p1)","<p>Attempts to convert <code>object</code> into an IO object via method <code>to_io</code>; returns the new IO object if successful, …\n",null,1],["try_convert","Integer","ruby/classes/Integer.html#method-c-try_convert","(p1)","<p>If <code>object</code> is an Integer object, returns <code>object</code>.\n\n<pre><code>Integer.try_convert(1) # =&gt; 1\n</code></pre>\n<p>Otherwise if <code>object</code> responds …\n",null,1],["try_convert","Regexp","ruby/classes/Regexp.html#method-c-try_convert","(p1)","<p>Returns <code>object</code> if it is a regexp:\n\n<pre><code>Regexp.try_convert(/re/) # =&gt; /re/\n</code></pre>\n<p>Otherwise if <code>object</code> responds to <code>:to_regexp</code> …\n",null,1],["try_convert","String","ruby/classes/String.html#method-c-try_convert","(p1)","<p>If <code>object</code> is a String object, returns <code>object</code>.\n<p>Otherwise if <code>object</code> responds to <code>:to_str</code>, calls <code>object.to_str</code> …\n",null,1],["try_enter","Monitor","ruby/classes/Monitor.html#method-i-try_enter","()","",null,1],["try_lock","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-i-try_lock","()","<p>Attempts to obtain the lock and returns immediately. Returns <code>true</code> if the lock was granted.\n",null,1],["try_mon_enter","Monitor","ruby/classes/Monitor.html#method-i-try_mon_enter","()","<p>for compatibility\n",null,1],["try_mon_enter","MonitorMixin","ruby/classes/MonitorMixin.html#method-i-try_mon_enter","()","<p>For backward compatibility\n",null,1],["try_type","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-try_type","(type, headers = nil, opt = \"\", &b)","<p>Returns whether or not the static type <code>type</code> is defined.\n<p>See also <code>have_type</code>\n",null,1],["tsa_certificate","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-tsa_certificate","()","<p>If the Request specified to request the TSA certificate (Request#cert_requested = true), then this field …\n",null,1],["tsort","TSort","ruby/classes/TSort.html#method-i-tsort","()","<p>Returns a topologically sorted array of nodes. The array is sorted from children to parents, i.e. the …\n",null,1],["tsort","TSort","ruby/classes/TSort.html#method-c-tsort","(each_node, each_child)","<p>Returns a topologically sorted array of nodes. The array is sorted from children to parents, i.e. the …\n",null,1],["tsort_each","TSort","ruby/classes/TSort.html#method-c-tsort_each","(each_node, each_child)","<p>The iterator version of the TSort.tsort method.\n<p>The graph is represented by <em>each_node</em> and <em>each_child</em>. …\n",null,1],["tsort_each","TSort","ruby/classes/TSort.html#method-i-tsort_each","()","<p>The iterator version of the #tsort method. <code><em>obj</em>.tsort_each</code> is similar to <code><em>obj</em>.tsort.each</code>, but modification …\n",null,1],["tsort_each_child","Rails::Initializable::Collection","rails/classes/Rails/Initializable/Collection.html#method-i-tsort_each_child","(initializer, &block)","",null,0],["tsort_each_child","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-tsort_each_child","(node)","",null,1],["tsort_each_child","TSort","ruby/classes/TSort.html#method-i-tsort_each_child","(node)","<p>Should be implemented by a extended class.\n<p>#tsort_each_child is used to iterate for child nodes of <em>node</em> …\n",null,1],["tsort_each_node","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-tsort_each_node","(&block)","",null,1],["tsort_each_node","TSort","ruby/classes/TSort.html#method-i-tsort_each_node","()","<p>Should be implemented by a extended class.\n<p>#tsort_each_node is used to iterate for all nodes over a graph. …\n",null,1],["tsrange","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-tsrange","","",null,0],["tstzrange","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-tstzrange","","",null,0],["tsvector","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-tsvector","","",null,0],["tty?","Gem::SilentUI::NullIO","ruby/classes/Gem/SilentUI/NullIO.html#method-i-tty-3F","()","",null,1],["tty?","Gem::StreamUI","ruby/classes/Gem/StreamUI.html#method-i-tty-3F","()","<p>Returns true if TTY methods should be used on this StreamUI.\n",null,1],["tty?","IO","ruby/classes/IO.html#method-i-tty-3F","()","<p>Returns <code>true</code> if the stream is associated with a terminal device (tty), <code>false</code> otherwise:\n\n<pre><code>f = File.new(&#39;t.txt&#39;).isatty ...\n</code></pre>\n",null,1],["tty?","StringIO","ruby/classes/StringIO.html#method-i-tty-3F","()","<p>Returns <code>false</code>.  Just for compatibility to IO.\n",null,1],["tuesday?","Date","ruby/classes/Date.html#method-i-tuesday-3F","()","<p>Returns <code>true</code> if <code>self</code> is a Tuesday, <code>false</code> otherwise.\n",null,1],["tuesday?","Time","ruby/classes/Time.html#method-i-tuesday-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a Tuesday, <code>false</code> otherwise:\n\n<pre><code>t = Time.utc(2000, 1, 4) # =&gt; 2000-01-04 00:00:00 ...\n</code></pre>\n",null,1],["tutorial","","ruby/files/ruby/doc/optparse/tutorial_rdoc.html","","<p>Tutorial\n<p>Why <code>OptionParser</code>?\n<p>When a Ruby program executes, it captures its command-line arguments and options …\n",null,1],["tv_nsec","Time","ruby/classes/Time.html#method-i-tv_nsec","()","<p>Returns the number of nanoseconds in the subseconds part of <code>self</code> in the range (0..999_999_999); lower-order …\n",null,1],["tv_sec","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-tv_sec","()","",null,0],["tv_sec","Time","ruby/classes/Time.html#method-i-tv_sec","()","<p>Returns the value of <code>self</code> as integer Epoch seconds; subseconds are truncated (not rounded):\n\n<pre><code>Time.utc(1970, ...\n</code></pre>\n",null,1],["tv_usec","Time","ruby/classes/Time.html#method-i-tv_usec","()","<p>Returns the number of microseconds in the subseconds part of <code>self</code> in the range (0..999_999); lower-order …\n",null,1],["type","ActionView::Template","rails/classes/ActionView/Template.html#method-i-type","()","",null,0],["type","ActiveRecord::Type::Json","rails/classes/ActiveRecord/Type/Json.html#method-i-type","()","",null,0],["type","Gem::Dependency","ruby/classes/Gem/Dependency.html#method-i-type","()","<p>Dependency type.\n",null,1],["type","Gem::Resolver::DependencyRequest","ruby/classes/Gem/Resolver/DependencyRequest.html#method-i-type","()","",null,1],["type","ObjectSpace::InternalObjectWrapper","ruby/classes/ObjectSpace/InternalObjectWrapper.html#method-i-type","()","<p>Returns the type of the internal object.\n",null,1],["type","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-type","()","",null,1],["type","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-type","()","<p>‘module’ or ‘class’\n",null,1],["type","RDoc::MethodAttr","ruby/classes/RDoc/MethodAttr.html#method-i-type","()","<p>Type of method/attribute (class or instance)\n",null,1],["type","RubyVM::AbstractSyntaxTree::Node","ruby/classes/RubyVM/AbstractSyntaxTree/Node.html#method-i-type","()","<p>Returns the type of this node as a symbol.\n\n<pre><code>root = RubyVM::AbstractSyntaxTree.parse(&quot;x = 1 + 2&quot;)\nroot.type ...\n</code></pre>\n",null,1],["type","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-type","()","<p>returns the cmsg type as an integer.\n\n<pre><code>p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, &quot;&quot;).type\n#=&gt; ...\n</code></pre>\n",null,1],["type2name","Win32::Registry","ruby/classes/Win32/Registry.html#method-c-type2name","(type)","<p>Convert registry type value to readable string.\n",null,1],["type=","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-type-3D","(p1)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-type_cast","(value)","<p>Cast a <code>value</code> to a type that the database understands. For example, SQLite does not understand dates, …\n",null,0],["type_cast_config_to_boolean","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-c-type_cast_config_to_boolean","(config)","",null,0],["type_cast_config_to_integer","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-c-type_cast_config_to_integer","(config)","",null,0],["type_for_attribute","ActiveRecord::ModelSchema::ClassMethods","rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-type_for_attribute","(attr_name, &block)","<p>Returns the type of the attribute with the given name, after applying all modifiers. This method is the …\n",null,0],["type_params","Net::HTTPHeader","ruby/classes/Net/HTTPHeader.html#method-i-type_params","()","<p>Returns the trailing (‘parameters’) part of the value of field <code>&#39;Content-Type&#39;</code>, or <code>nil</code> …\n",null,1],["typealias","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-typealias","(alias_type, orig_type)","<p>Sets the type alias for <code>alias_type</code> as <code>orig_type</code>\n",null,1],["typecode=","URI::FTP","ruby/classes/URI/FTP.html#method-i-typecode-3D","(typecode)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["typekind","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-typekind","()","<p>Returns number which represents type.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Word 10.0 Object Library&#39;, &#39;Documents&#39;) ...\n</code></pre>\n",null,1],["typelibs","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-c-typelibs","()","<p>Returns array of type libraries. This method will be OBSOLETE. Use WIN32OLE_TYPELIB.typelibs.collect{|t| …\n",null,1],["typelibs","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-c-typelibs","()","<p>Returns the array of WIN32OLE_TYPELIB object.\n\n<pre><code>tlibs = WIN32OLE_TYPELIB.typelibs\n</code></pre>\n",null,1],["typename","WIN32OLE::Record","ruby/classes/WIN32OLE/Record.html#method-i-typename","()","<p>Returns the type name of VT_RECORD OLE variable.\n<p>If COM server in VB.NET ComServer project is the following: …\n",null,1],["typo_squatting?","Gem::Source","ruby/classes/Gem/Source.html#method-i-typo_squatting-3F","(host, distance_threshold=4)","",null,1],["u","ERB::Util","ruby/classes/ERB/Util.html#method-c-u","(s)","",null,1],["ucmp","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-ucmp","(p1)","",null,1],["udp","Addrinfo","ruby/classes/Addrinfo.html#method-c-udp","(p1, p2)","<p>returns an addrinfo object for UDP address.\n\n<pre><code>Addrinfo.udp(&quot;localhost&quot;, &quot;daytime&quot;) #=&gt; #&lt;Addrinfo: 127.0.0.1:13 ...\n</code></pre>\n",null,1],["udp_server_loop","Socket","ruby/classes/Socket.html#method-c-udp_server_loop","(host=nil, port)","<p>creates a UDP/IP server on <em>port</em> and calls the block for each message arrived. The block is called with …\n",null,1],["udp_server_loop_on","Socket","ruby/classes/Socket.html#method-c-udp_server_loop_on","(sockets)","<p>Run UDP/IP server loop on the given sockets.\n<p>The return value of Socket.udp_server_sockets is appropriate …\n",null,1],["udp_server_recv","Socket","ruby/classes/Socket.html#method-c-udp_server_recv","(sockets)","<p>Receive UDP/IP packets from the given <em>sockets</em>. For each packet received, the block is called.\n<p>The block …\n",null,1],["udp_server_sockets","Socket","ruby/classes/Socket.html#method-c-udp_server_sockets","(host=nil, port)","<p>Creates UDP/IP sockets for a UDP server.\n<p>If no block given, it returns an array of sockets.\n<p>If a block …\n",null,1],["ui","Bundler","ruby/classes/Bundler.html#method-c-ui","()","",null,1],["ui","Gem","ruby/classes/Gem.html#method-c-ui","()","<p>Lazily loads DefaultUserInteraction and returns the default UI.\n",null,1],["ui","Gem::DefaultUserInteraction","ruby/classes/Gem/DefaultUserInteraction.html#method-i-ui","()","<p>See DefaultUserInteraction::ui\n",null,1],["ui","Gem::DefaultUserInteraction","ruby/classes/Gem/DefaultUserInteraction.html#method-c-ui","()","<p>Return the default UI.\n",null,1],["ui=","Bundler","ruby/classes/Bundler.html#method-c-ui-3D","(ui)","",null,1],["ui=","Gem::DefaultUserInteraction","ruby/classes/Gem/DefaultUserInteraction.html#method-i-ui-3D","(new_ui)","<p>See DefaultUserInteraction::ui=\n",null,1],["ui=","Gem::DefaultUserInteraction","ruby/classes/Gem/DefaultUserInteraction.html#method-c-ui-3D","(new_ui)","<p>Set the default UI.  If the default UI is never explicitly set, a simple console based UserInteraction …\n",null,1],["uid","File::Stat","ruby/classes/File/Stat.html#method-i-uid","()","<p>Returns the numeric user id of the owner of <em>stat</em>.\n\n<pre><code>File.stat(&quot;testfile&quot;).uid   #=&gt; 501\n</code></pre>\n",null,1],["uid","Process","ruby/classes/Process.html#method-c-uid","()","<p>Returns the (real) user ID of the current process.\n\n<pre><code>Process.uid # =&gt; 1000\n</code></pre>\n",null,1],["uid=","Process","ruby/classes/Process.html#method-c-uid-3D","(p1)","<p>Sets the (user) user ID for the current process to <code>new_uid</code>:\n\n<pre><code>Process.uid = 1000 # =&gt; 1000\n</code></pre>\n<p>Not available …\n",null,1],["ujs.js","","rails/files/rails/activestorage/app/javascript/activestorage/ujs_js.html","","<p>import { DirectUploadsController } from “./direct_uploads_controller” import { findElement …\n",null,0],["umask","File","ruby/classes/File.html#method-c-umask","(*args)","<p>Returns the current umask value for this process. If the optional argument is given, set the umask to …\n",null,1],["unadvise","WIN32OLE::Event","ruby/classes/WIN32OLE/Event.html#method-i-unadvise","()","<p>disconnects OLE server. If this method called, then the WIN32OLE_EVENT object does not receive the OLE …\n",null,1],["uname","Etc","ruby/classes/Etc.html#method-c-uname","()","<p>Returns the system information obtained by uname system call.\n<p>The return value is a hash which has 5 keys …\n",null,1],["unbind","Method","ruby/classes/Method.html#method-i-unbind","()","<p>Dissociates <em>meth</em> from its current receiver. The resulting UnboundMethod can subsequently be bound to …\n",null,1],["unblock","Fiber::Scheduler","ruby/classes/Fiber/Scheduler.html#method-i-unblock","(p1, p2)","<p>Invoked to wake up Fiber previously blocked with #block (for example, Mutex#lock calls #block and Mutex#unlock …\n",null,1],["unbundled_env","Bundler","ruby/classes/Bundler.html#method-c-unbundled_env","()","<p>@return [Hash] Environment with all bundler-related variables removed\n",null,1],["unbundled_exec","Bundler","ruby/classes/Bundler.html#method-c-unbundled_exec","(*args)","<p>Run a ‘Kernel.exec` to a subcommand in an environment with all bundler related variables removed\n",null,1],["unbundled_system","Bundler","ruby/classes/Bundler.html#method-c-unbundled_system","(*args)","<p>Run subcommand in an environment with all bundler related variables removed\n",null,1],["uncacheable!","ActionView::Helpers::CacheHelper","rails/classes/ActionView/Helpers/CacheHelper.html#method-i-uncacheable-21","()","<p>Raises <code>UncacheableFragmentError</code> when called from within a <code>cache</code> block.\n<p>Useful to denote helper methods …\n",null,0],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-uncached","()","<p>Disable the query cache within the block.\n",null,0],["uncached","ActiveRecord::QueryCache::ClassMethods","rails/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-uncached","(&block)","<p>Disable the query cache within the block if Active Record is configured. If it’s not, it will execute …\n",null,0],["unconverted_fields?","CSV","ruby/classes/CSV.html#method-i-unconverted_fields-3F","()","<p>Returns the value that determines whether unconverted fields are to be available; used for parsing; see …\n",null,1],["unconverted_fields?","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-unconverted_fields-3F","()","",null,1],["uncountable","ActiveSupport::Inflector::Inflections","rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-uncountable","(*words)","<p>Specifies words that are uncountable and should not be inflected.\n\n<pre><code>uncountable &#39;money&#39;\nuncountable &#39;money&#39;, ...\n</code></pre>\n",null,0],["uncountable?","ActiveModel::Name","rails/classes/ActiveModel/Name.html#method-i-uncountable-3F","()","",null,0],["uncountable?","ActiveModel::Naming","rails/classes/ActiveModel/Naming.html#method-c-uncountable-3F","(record_or_class)","<p>Identifies whether the class name of a record or class is uncountable.\n\n<pre><code>ActiveModel::Naming.uncountable?(Sheep) ...\n</code></pre>\n",null,0],["uncountable?","ActiveSupport::Inflector::Inflections::Uncountables","rails/classes/ActiveSupport/Inflector/Inflections/Uncountables.html#method-i-uncountable-3F","(str)","",null,0],["uncountable?","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-uncountable-3F","()","",null,0],["undef_method","Module","ruby/classes/Module.html#method-i-undef_method","(*args)","<p>Prevents the current class from responding to calls to the named method. Contrast this with <code>remove_method</code> …\n",null,1],["undefine_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-undefine_attribute_methods","()","<p>Removes all the previously dynamically defined methods from the class.\n\n<pre><code>class Person\n  include ActiveModel::AttributeMethods ...\n</code></pre>\n",null,0],["undefine_finalizer","ObjectSpace","ruby/classes/ObjectSpace.html#method-c-undefine_finalizer","(p1)","<p>Removes all finalizers for <em>obj</em>.\n",null,1],["undefined_instance_methods","Module","ruby/classes/Module.html#method-i-undefined_instance_methods","()","<p>Returns a list of the undefined instance methods defined in <em>mod</em>. The undefined methods of any ancestors …\n",null,1],["underscore","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-underscore","(camel_cased_word)","<p>Makes an underscored, lowercase form from the expression in the string.\n<p>Changes ‘::’ to ‘/’ …\n",null,0],["underscore","String","rails/classes/String.html#method-i-underscore","()","<p>The reverse of <code>camelize</code>. Makes an underscored, lowercase form from the expression in the string.\n<p><code>underscore</code> …\n",null,0],["undoc_params","RDoc::Stats","ruby/classes/RDoc/Stats.html#method-i-undoc_params","(method)","<p>Determines which parameters in <code>method</code> were not documented.  Returns a total parameter count and an Array …\n",null,1],["undump","String","ruby/classes/String.html#method-i-undump","()","<p>Returns an unescaped version of <code>self</code>:\n\n<pre><code>s_orig = &quot;\\f\\x00\\xff\\\\\\&quot;&quot;    # =&gt; &quot;\\f\\u0000\\xFF\\\\\\&quot;&quot;\ns_dumped = ...\n</code></pre>\n",null,1],["unescape","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-unescape","(*args)","<p>Returns URL-unescaped string (<code>application/x-www-form-urlencoded</code>).\n",null,1],["unescape","CGI::Util","ruby/classes/CGI/Util.html#method-i-unescape","(string, encoding = @@accept_charset)","<p>URL-decode an application/x-www-form-urlencoded string with encoding(optional).\n\n<pre><code>string = CGI.unescape(&quot;%27Stop%21%27+said+Fred&quot;) ...\n</code></pre>\n",null,1],["unescape","Gem::UriFormatter","ruby/classes/Gem/UriFormatter.html#method-i-unescape","()","<p>Unescapes the #uri which came from a CGI parameter\n",null,1],["unescape","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-unescape","(str, escaped = @regexp[:ESCAPED])","<p>Args\n<p><code>str</code> &mdash; String to remove escapes from\n<p><code>escaped</code> &mdash; Regexp to apply. Defaults to <code>self.regexp[:ESCAPED]</code>\n",null,1],["unescape","URI::RFC2396_Parser","ruby/classes/URI/RFC2396_Parser.html#method-i-unescape","(str, escaped = @regexp[:ESCAPED])","<p>Args\n<p><code>str</code> &mdash; String to remove escapes from\n<p><code>escaped</code> &mdash; Regexp to apply. Defaults to <code>self.regexp[:ESCAPED]</code>\n",null,1],["unescapeElement","CGI::Util","ruby/classes/CGI/Util.html#method-i-unescapeElement","(string, *elements)","<p>Undo escaping such as that done by CGI.escapeElement()\n\n<pre><code>print CGI.unescapeElement(\n        CGI.escapeHTML(&#39;&lt;BR&gt;&lt;A ...\n</code></pre>\n",null,1],["unescapeHTML","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-unescapeHTML","(p1)","<p>Returns HTML-unescaped string.\n",null,1],["unescapeHTML","CGI::Util","ruby/classes/CGI/Util.html#method-i-unescapeHTML","(string)","<p>Unescape a string that has been HTML-escaped\n\n<pre><code>CGI.unescapeHTML(&quot;Usage: foo &amp;quot;bar&amp;quot; &amp;lt;baz&amp;gt;&quot;) ...\n</code></pre>\n",null,1],["unescapeURIComponent","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-unescapeURIComponent","(*args)","<p>Returns URL-unescaped string following RFC 3986.\n",null,1],["unescapeURIComponent","CGI::Util","ruby/classes/CGI/Util.html#method-i-unescapeURIComponent","(string, encoding = @@accept_charset)","<p>URL-decode a string following RFC 3986 with encoding(optional).\n\n<pre><code>string = CGI.unescapeURIComponent(&quot;%27Stop%21%27+said%20Fred&quot;) ...\n</code></pre>\n",null,1],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQL::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/Quoting.html#method-i-unescape_bytea","(value)","<p>Unescapes bytea output from a database to the binary string it represents. NOTE: This is NOT an inverse …\n",null,0],["unescape_element","CGI::Util","ruby/classes/CGI/Util.html#method-i-unescape_element","(string, *elements)","<p>Synonym for CGI.unescapeElement(str)\n",null,1],["unescape_html","CGI::Util","ruby/classes/CGI/Util.html#method-i-unescape_html","(string)","<p>Synonym for CGI.unescapeHTML(str)\n",null,1],["unescape_uri_component","CGI::Escape","ruby/classes/CGI/Escape.html#method-i-unescape_uri_component","(*args)","<p>Returns URL-unescaped string following RFC 3986.\n",null,1],["unescape_uri_component","CGI::Util","ruby/classes/CGI/Util.html#method-i-unescape_uri_component","(string, encoding = @@accept_charset)","",null,1],["unget_tk","RDoc::Parser::RubyTools","ruby/classes/RDoc/Parser/RubyTools.html#method-i-unget_tk","(tk)","<p>Returns <code>tk</code> to the scanner\n",null,1],["ungetbyte","IO","ruby/classes/IO.html#method-i-ungetbyte","(p1)","<p>Pushes back (“unshifts”) the given data onto the stream’s buffer, placing the data so that …\n",null,1],["ungetbyte","StringIO","ruby/classes/StringIO.html#method-i-ungetbyte","(p1)","<p>Pushes back (“unshifts”) an 8-bit byte onto the stream; see Byte IO.\n",null,1],["ungetbyte","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-ungetbyte","(p1)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["ungetc","IO","ruby/classes/IO.html#method-i-ungetc","(p1)","<p>Pushes back (“unshifts”) the given data onto the stream’s buffer, placing the data so that …\n",null,1],["ungetc","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-ungetc","(c)","<p>Pushes character <em>c</em> back onto the stream such that a subsequent buffered character read will return it. …\n",null,1],["ungetc","Reline","ruby/classes/Reline.html#method-c-ungetc","(c)","",null,1],["ungetc","Reline","ruby/classes/Reline.html#method-c-ungetc","(c)","",null,1],["ungetc","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-ungetc","(c)","",null,1],["ungetc","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-ungetc","(c)","",null,1],["ungetc","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-ungetc","(c)","",null,1],["ungetc","StringIO","ruby/classes/StringIO.html#method-i-ungetc","(p1)","<p>Pushes back (“unshifts”) a character or integer onto the stream; see Character IO.\n",null,1],["ungetc","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-ungetc","(p1)","<p>See Zlib::GzipReader documentation for a description.\n",null,1],["unicode_normalize","String","ruby/classes/String.html#method-i-unicode_normalize","(*args)","<p>Returns a copy of <code>self</code> with Unicode normalization applied.\n<p>Argument <code>form</code> must be one of the following …\n",null,1],["unicode_normalize!","String","ruby/classes/String.html#method-i-unicode_normalize-21","(*args)","<p>Like String#unicode_normalize, except that the normalization is performed on <code>self</code>.\n<p>Related String#unicode_normalized? …\n",null,1],["unicode_normalized?","String","ruby/classes/String.html#method-i-unicode_normalized-3F","(*args)","<p>Returns <code>true</code> if <code>self</code> is in the given <code>form</code> of Unicode normalization, <code>false</code> otherwise. The <code>form</code> must be …\n",null,1],["unicode_properties","","ruby/files/ruby/doc/regexp/unicode_properties_rdoc.html","","<p>Regexps Based on Unicode Properties\n<p>The properties shown here are those currently supported in Ruby.  …\n",null,1],["uninstall","Gem::Commands::UninstallCommand","ruby/classes/Gem/Commands/UninstallCommand.html#method-i-uninstall","(gem_name)","",null,1],["uninstall","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-uninstall","()","<p>Performs the uninstall of the gem.  This removes the spec, the Gem directory, and the cached .gem file. …\n",null,1],["uninstall_all","Gem::Commands::UninstallCommand","ruby/classes/Gem/Commands/UninstallCommand.html#method-i-uninstall_all","()","",null,1],["uninstall_dep","Gem::Commands::CleanupCommand","ruby/classes/Gem/Commands/CleanupCommand.html#method-i-uninstall_dep","(spec)","",null,1],["uninstall_gem","Gem::Commands::UninstallCommand","ruby/classes/Gem/Commands/UninstallCommand.html#method-i-uninstall_gem","(gem_name)","",null,1],["uninstall_gem","Gem::Uninstaller","ruby/classes/Gem/Uninstaller.html#method-i-uninstall_gem","(spec)","<p>Uninstalls gem <code>spec</code>\n",null,1],["uninstall_old_gemcutter","Gem::Commands::SetupCommand","ruby/classes/Gem/Commands/SetupCommand.html#method-i-uninstall_old_gemcutter","()","",null,1],["uninstall_specific","Gem::Commands::UninstallCommand","ruby/classes/Gem/Commands/UninstallCommand.html#method-i-uninstall_specific","()","",null,1],["union","Array","ruby/classes/Array.html#method-i-union","(*args)","<p>Returns a new Array that is the union of <code>self</code> and all given Arrays <code>other_arrays</code>; duplicates are removed; …\n",null,1],["union","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-union","(signature)","<p>Creates a class to wrap the C union described by <code>signature</code>.\n\n<pre><code>MyUnion = union [&#39;int i&#39;, &#39;char c&#39;]\n</code></pre>\n",null,1],["union","Regexp","ruby/classes/Regexp.html#method-c-union","(*args)","<p>Returns a new regexp that is the union of the given patterns:\n\n<pre><code>r = Regexp.union(%w[cat dog])      # =&gt; ...\n</code></pre>\n",null,1],["union","Set","ruby/classes/Set.html#method-i-union","(enum)","",null,1],["uniq","Array","ruby/classes/Array.html#method-i-uniq","()","<p>Returns a new Array containing those elements from <code>self</code> that are not duplicates, the first occurrence …\n",null,1],["uniq","Enumerable","ruby/classes/Enumerable.html#method-i-uniq","()","<p>With no block, returns a new array containing only unique elements; the array has no two elements <code>e0</code> …\n",null,1],["uniq","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-uniq","()","<p>Like Enumerable#uniq, but chains operation to be lazy-evaluated.\n",null,1],["uniq!","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-uniq-21","(name)","<p>Deduplicate multiple values.\n",null,0],["uniq!","Array","ruby/classes/Array.html#method-i-uniq-21","()","<p>Removes duplicate elements from <code>self</code>, the first occurrence always being retained; returns <code>self</code> if any …\n",null,1],["unique_classes","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-unique_classes","()","<p>Returns the unique classes discovered by RDoc.\n<p>::complete must have been called prior to using this method. …\n",null,1],["unique_classes_and_modules","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-unique_classes_and_modules","()","<p>Returns the unique classes and modules discovered by RDoc. ::complete must have been called prior to …\n",null,1],["unique_modules","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-unique_modules","()","<p>Returns the unique modules discovered by RDoc. ::complete must have been called prior to using this method. …\n",null,1],["unix","Addrinfo","ruby/classes/Addrinfo.html#method-c-unix","(p1, p2 = v2)","<p>returns an addrinfo object for UNIX socket address.\n<p><em>socktype</em> specifies the socket type. If it is omitted, …\n",null,1],["unix","Socket","ruby/classes/Socket.html#method-c-unix","(path)","<p>creates a new socket connected to path using UNIX socket socket.\n<p>If a block is given, the block is called …\n",null,1],["unix?","Addrinfo","ruby/classes/Addrinfo.html#method-i-unix-3F","()","<p>returns true if addrinfo is UNIX address. returns false otherwise.\n\n<pre><code>Addrinfo.tcp(&quot;127.0.0.1&quot;, 80).unix? ...\n</code></pre>\n",null,1],["unix_line_discard","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-unix_line_discard","(key)","",null,1],["unix_path","Addrinfo","ruby/classes/Addrinfo.html#method-i-unix_path","()","<p>Returns the socket path as a string.\n\n<pre><code>Addrinfo.unix(&quot;/tmp/sock&quot;).unix_path       #=&gt; &quot;/tmp/sock&quot;\n</code></pre>\n",null,1],["unix_rights","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-c-unix_rights","(*args)","<p>Creates a new Socket::AncillaryData object which contains file descriptors as data.\n\n<pre><code>p Socket::AncillaryData.unix_rights(STDERR) ...\n</code></pre>\n",null,1],["unix_rights","Socket::AncillaryData","ruby/classes/Socket/AncillaryData.html#method-i-unix_rights","()","<p>returns the array of IO objects for SCM_RIGHTS control message in UNIX domain socket.\n<p>The class of the …\n",null,1],["unix_server_loop","Socket","ruby/classes/Socket.html#method-c-unix_server_loop","(path)","<p>creates a UNIX socket server on <em>path</em>. It calls the block for each socket accepted.\n<p>If <em>host</em> is specified, …\n",null,1],["unix_server_socket","Socket","ruby/classes/Socket.html#method-c-unix_server_socket","(path)","<p>creates a UNIX server socket on <em>path</em>\n<p>If no block given, it returns a listening socket.\n<p>If a block is given, …\n",null,1],["unix_word_rubout","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-unix_word_rubout","(key)","",null,1],["unknown","ActiveRecord","rails/classes/ActiveRecord.html#method-c-unknown","","<p>Specifies if the methods calling database queries should be logged below their relevant queries. Defaults …\n",null,0],["unknown","Logger","ruby/classes/Logger.html#method-i-unknown","(progname = nil, &block)","<p>Equivalent to calling #add with severity <code>Logger::UNKNOWN</code>.\n",null,1],["unknown","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-i-unknown","","<p>Logs a <code>message</code> at the unknown (syslog alert) log level, or logs the message returned from the block. …\n",null,1],["unlink","Dir","ruby/classes/Dir.html#method-c-unlink","(p1)","<p>Removes the directory at <code>dirpath</code> from the underlying file system:\n\n<pre><code>Dir.rmdir(&#39;foo&#39;) # =&gt; 0\n</code></pre>\n<p>Raises an exception …\n",null,1],["unlink","File","ruby/classes/File.html#method-c-unlink","(*args)","<p>Deletes the named files, returning the number of names passed as arguments. Raises an exception on any …\n",null,1],["unlink","Pathname","ruby/classes/Pathname.html#method-i-unlink","()","<p>Removes a file or directory, using File.unlink if <code>self</code> is a file, or Dir.unlink as necessary.\n",null,1],["unlink","Tempfile","ruby/classes/Tempfile.html#method-i-unlink","()","<p>Unlinks (deletes) the file from the filesystem. One should always unlink the file after using it, as …\n",null,1],["unload_interlock","ActiveSupport::Dependencies","rails/classes/ActiveSupport/Dependencies.html#method-c-unload_interlock","(&block)","<p>Execute the supplied block while holding an exclusive lock, preventing any other thread from being inside …\n",null,0],["unloading","ActiveSupport::Dependencies::Interlock","rails/classes/ActiveSupport/Dependencies/Interlock.html#method-i-unloading","(&block)","",null,0],["unlock","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-unlock","(path, body, initheader = nil)","<p>Sends an UNLOCK request to the server; returns an instance of a subclass of Net::HTTPResponse.\n<p>The request …\n",null,1],["unlock","Thread::Mutex","ruby/classes/Thread/Mutex.html#method-i-unlock","()","<p>Releases the lock. Raises <code>ThreadError</code> if <code>mutex</code> wasn’t locked by the current thread.\n",null,1],["unmask_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-unmask_token","(masked_token)","",null,0],["unpack","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-unpack","(directory)","<p>Unpacks the gem into the given directory.\n",null,1],["unpack","Socket::Option","ruby/classes/Socket/Option.html#method-i-unpack","(p1)","<p>Calls String#unpack on sockopt.data.\n\n<pre><code>sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(&quot;i&quot;)) ...\n</code></pre>\n",null,1],["unpack","String","ruby/classes/String.html#method-i-unpack","(fmt, offset: 0)","<p>Extracts data from <code>self</code>, forming objects that become the elements of a new array; returns that array. …\n",null,1],["unpack1","String","ruby/classes/String.html#method-i-unpack1","(fmt, offset: 0)","<p>Like String#unpack, but unpacks and returns only the first extracted object. See Packed Data.\n",null,1],["unpack_sockaddr_in","Socket","ruby/classes/Socket.html#method-c-unpack_sockaddr_in","(p1)","<p>Unpacks <em>sockaddr</em> into port and ip_address.\n<p><em>sockaddr</em> should be a string or an addrinfo for AF_INET/AF_INET6. …\n",null,1],["unpack_sockaddr_un","Socket","ruby/classes/Socket.html#method-c-unpack_sockaddr_un","(p1)","<p>Unpacks <em>sockaddr</em> into path.\n<p><em>sockaddr</em> should be a string or an addrinfo for AF_UNIX.\n\n<pre><code>sockaddr = Socket.sockaddr_un(&quot;/tmp/sock&quot;) ...\n</code></pre>\n",null,1],["unpackdw","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-unpackdw","(dw)","",null,1],["unpackhandle","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-unpackhandle","(h)","",null,1],["unpackqw","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-unpackqw","(qw)","",null,1],["unpermitted_parameters","ActionController::LogSubscriber","rails/classes/ActionController/LogSubscriber.html#method-i-unpermitted_parameters","(event)","",null,0],["unprepared_statement","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-unprepared_statement","()","",null,0],["unquoted_false","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-unquoted_false","()","",null,0],["unquoted_true","ActiveRecord::ConnectionAdapters::Quoting","rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-unquoted_true","()","",null,0],["unregist","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-i-unregist","(name)","",null,1],["unregister","Mime::Type","rails/classes/Mime/Type.html#method-c-unregister","(symbol)","<p>This method is opposite of register method.\n<p>To unregister a MIME type:\n\n<pre><code>Mime::Type.unregister(:mobile)\n</code></pre>\n",null,0],["unregister","DRb::ExtServManager","ruby/classes/DRb/ExtServManager.html#method-i-unregister","(name)","",null,1],["unregister_command","Gem::CommandManager","ruby/classes/Gem/CommandManager.html#method-i-unregister_command","(command)","<p>Unregister the Symbol <code>command</code> as a gem command.\n",null,1],["unregister_interceptor","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-unregister_interceptor","(interceptor)","<p>Unregister a previously registered Interceptor. Either a class, string, or symbol can be passed in as …\n",null,0],["unregister_interceptors","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-unregister_interceptors","(*interceptors)","<p>Unregister one or more previously registered Interceptors.\n",null,0],["unregister_observer","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-unregister_observer","(observer)","<p>Unregister a previously registered Observer. Either a class, string, or symbol can be passed in as the …\n",null,0],["unregister_observers","ActionMailer::Base","rails/classes/ActionMailer/Base.html#method-c-unregister_observers","(*observers)","<p>Unregister one or more previously registered Observers.\n",null,0],["unregister_preview_interceptor","ActionMailer::Previews::ClassMethods","rails/classes/ActionMailer/Previews/ClassMethods.html#method-i-unregister_preview_interceptor","(interceptor)","<p>Unregister a previously registered Interceptor. Either a class or a string can be passed in as the Interceptor …\n",null,0],["unregister_preview_interceptors","ActionMailer::Previews::ClassMethods","rails/classes/ActionMailer/Previews/ClassMethods.html#method-i-unregister_preview_interceptors","(*interceptors)","<p>Unregister one or more previously registered Interceptors.\n",null,0],["unresolved_deps","Gem::Specification","ruby/classes/Gem/Specification.html#method-c-unresolved_deps","()","<p>DOC: This method needs documented or nodoc’d\n",null,1],["unsafe_load","Psych","ruby/classes/Psych.html#method-c-unsafe_load","(yaml, filename: nil, fallback: false, symbolize_names: false, freeze: false, strict_integer: false)","<p>Load <code>yaml</code> in to a Ruby data structure.  If multiple documents are provided, the object contained in the …\n",null,1],["unsafe_load_file","Psych","ruby/classes/Psych.html#method-c-unsafe_load_file","(filename, **kwargs)","<p>Load the document contained in <code>filename</code>.  Returns the yaml contained in <code>filename</code> as a Ruby object, or …\n",null,1],["unscan","StringScanner","ruby/classes/StringScanner.html#method-i-unscan","()","<p>Sets the scan pointer to the previous position.  Only one previous position is remembered, and it changes …\n",null,1],["unscope","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-unscope","(*args)","<p>Removes an unwanted relation that is already defined on a chain of relations. This is useful when passing …\n",null,0],["unscoped","ActiveRecord::Scoping::Default::ClassMethods","rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-unscoped","(&block)","<p>Returns a scope for the model without the previously set scopes.\n\n<pre><code>class Post &lt; ActiveRecord::Base\n  def ...\n</code></pre>\n",null,0],["unset_api_key!","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-unset_api_key-21","()","<p>Remove the +~/.gem/credentials+ file to clear all the current sessions.\n",null,1],["unshift","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-unshift","(klass, *args, &block)","",null,0],["unshift","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-unshift","(...)","",null,0],["unshift","Rails::Paths::Path","rails/classes/Rails/Paths/Path.html#method-i-unshift","(*paths)","",null,0],["unshift","Array","ruby/classes/Array.html#method-i-unshift","(*args)","<p>Prepends the given <code>objects</code> to <code>self</code>:\n\n<pre><code>a = [:foo, &#39;bar&#39;, 2]\na.unshift(:bam, :bat) # =&gt; [:bam, :bat, :foo, ...\n</code></pre>\n",null,1],["unshift","Gem::RequestSet::Lockfile::Tokenizer","ruby/classes/Gem/RequestSet/Lockfile/Tokenizer.html#method-i-unshift","(token)","",null,1],["unsigned_bigint","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-unsigned_bigint","","",null,0],["unsigned_decimal","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-unsigned_decimal","","",null,0],["unsigned_float","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-unsigned_float","","",null,0],["unsigned_integer","ActiveRecord::ConnectionAdapters::MySQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/MySQL/ColumnMethods.html#method-i-unsigned_integer","","",null,0],["unsubscribe","ActionCable::SubscriptionAdapter::Base","rails/classes/ActionCable/SubscriptionAdapter/Base.html#method-i-unsubscribe","(channel, message_callback)","",null,0],["unsubscribe","ActionCable::SubscriptionAdapter::Redis::Listener::SubscribedClient","rails/classes/ActionCable/SubscriptionAdapter/Redis/Listener/SubscribedClient.html#method-i-unsubscribe","(*channel)","",null,0],["unsubscribe","ActiveSupport::Notifications","rails/classes/ActiveSupport/Notifications.html#method-c-unsubscribe","(subscriber_or_name)","",null,0],["unsubscribe","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-unsubscribe","(subscriber_or_name)","",null,0],["unsubscribe!","ActiveSupport::Notifications::Fanout::Subscribers::Matcher::AllMessages","rails/classes/ActiveSupport/Notifications/Fanout/Subscribers/Matcher/AllMessages.html#method-i-unsubscribe-21","(*)","",null,0],["unsubscribed","ActionCable::Channel::Base","rails/classes/ActionCable/Channel/Base.html#method-i-unsubscribed","()","<p>Called once a consumer has cut its cable connection. Can be used for cleaning up connections or marking …\n",null,0],["until","ActiveSupport::Duration","rails/classes/ActiveSupport/Duration.html#method-i-until","(time = ::Time.current)","",null,0],["untrace_var","Kernel","ruby/classes/Kernel.html#method-i-untrace_var","(*args)","<p>Removes tracing for the specified command on the given global variable and returns <code>nil</code>. If no command …\n",null,1],["unused","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-i-unused","()","<p>Returns the rest of the data which had read for parsing gzip format, or <code>nil</code> if the whole gzip file is …\n",null,1],["unwrapped_exception","ActionDispatch::ExceptionWrapper","rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-unwrapped_exception","()","",null,0],["up","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-up","()","",null,0],["up","AddServiceNameToActiveStorageBlobs","rails/classes/AddServiceNameToActiveStorageBlobs.html#method-i-up","()","",null,0],["up_only","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-up_only","(&block)","<p>Used to specify an operation that is only run when migrating up (for example, populating a new column …\n",null,0],["upcase","String","ruby/classes/String.html#method-i-upcase","(*args)","<p>Returns a string containing the upcased characters in <code>self</code>:\n\n<pre><code>s = &#39;Hello World!&#39; # =&gt; &quot;Hello World!&quot;\ns.upcase ...\n</code></pre>\n",null,1],["upcase","Symbol","ruby/classes/Symbol.html#method-i-upcase","(*args)","<p>Equivalent to <code>sym.to_s.upcase.to_sym</code>.\n<p>See String#upcase.\n",null,1],["upcase!","String","ruby/classes/String.html#method-i-upcase-21","(*args)","<p>Upcases the characters in <code>self</code>; returns <code>self</code> if any changes were made, <code>nil</code> otherwise:\n\n<pre><code>s = &#39;Hello World!&#39; ...\n</code></pre>\n",null,1],["upcase_first","ActiveSupport::Inflector","rails/classes/ActiveSupport/Inflector.html#method-i-upcase_first","(string)","<p>Converts just the first character to uppercase.\n\n<pre><code>upcase_first(&#39;what a Lovely Day&#39;) # =&gt; &quot;What a Lovely ...\n</code></pre>\n",null,0],["upcase_first","String","rails/classes/String.html#method-i-upcase_first","()","<p>Converts just the first character to uppercase.\n\n<pre><code>&#39;what a Lovely Day&#39;.upcase_first # =&gt; &quot;What a Lovely Day&quot; ...\n</code></pre>\n",null,0],["upcase_word","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-upcase_word","(key)","",null,1],["update","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-i-update","()","",null,0],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-update","(arel, name = nil, binds = [])","<p>Executes the update statement and returns the number of rows affected.\n",null,0],["update","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-update","(attributes)","<p>Updates the attributes of the model from the passed-in hash and saves the record, all wrapped in a transaction. …\n",null,0],["update","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-update","(id = :all, attributes)","<p>Updates an object (or multiple objects) and saves it to the database, if validations pass. The resulting …\n",null,0],["update","ActiveStorage::DiskController","rails/classes/ActiveStorage/DiskController.html#method-i-update","()","",null,0],["update","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(*other_hashes, &block)","<p>Updates the receiver in-place, merging in the hashes passed as arguments:\n\n<pre><code>hash_1 = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["update","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(*other_hashes, &block)","<p>Updates the receiver in-place, merging in the hashes passed as arguments:\n\n<pre><code>hash_1 = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["update","Rails::Generators::ActiveModel","rails/classes/Rails/Generators/ActiveModel.html#method-i-update","(params = nil)","<p>PATCH/PUT update\n",null,0],["update","CGI::Session","ruby/classes/CGI/Session.html#method-i-update","()","<p>Store session data on the server.  For some session storage types, this is a no-op.\n",null,1],["update","CGI::Session::FileStore","ruby/classes/CGI/Session/FileStore.html#method-i-update","()","<p>Save session state to the session’s FileStore file.\n",null,1],["update","CGI::Session::MemoryStore","ruby/classes/CGI/Session/MemoryStore.html#method-i-update","()","<p>Update session state.\n<p>A no-op.\n",null,1],["update","CGI::Session::NullStore","ruby/classes/CGI/Session/NullStore.html#method-i-update","()","<p>Update session state.\n<p>A no-op.\n",null,1],["update","CGI::Session::PStore","ruby/classes/CGI/Session/PStore.html#method-i-update","()","<p>Save session state to the session’s PStore file.\n",null,1],["update","Digest::Base","ruby/classes/Digest/Base.html#method-i-update","(p1)","<p>Update the digest using given <em>string</em> and return <code>self</code>.\n",null,1],["update","Digest::Instance","ruby/classes/Digest/Instance.html#method-i-update","(p1)","<p>Updates the digest using a given <em>string</em> and returns self.\n<p>The update() method and the left-shift operator …\n",null,1],["update","Digest::SHA2","ruby/classes/Digest/SHA2.html#method-i-update","(str)","<p>Update the digest using a given <em>string</em> and return self.\n",null,1],["update","ENV","ruby/classes/ENV.html#method-c-update","(*args)","<p>Adds to ENV each key/value pair in the given <code>hash</code>; returns ENV:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;) ...\n</code></pre>\n",null,1],["update","Gem::StreamUI::SilentDownloadReporter","ruby/classes/Gem/StreamUI/SilentDownloadReporter.html#method-i-update","(current)","<p>Nothing can update the silent download reporter.\n",null,1],["update","Gem::StreamUI::ThreadedDownloadReporter","ruby/classes/Gem/StreamUI/ThreadedDownloadReporter.html#method-i-update","(bytes)","<p>Updates the threaded download reporter for the given number of <code>bytes</code>.\n",null,1],["update","Hash","ruby/classes/Hash.html#method-i-update","(*args)","<p>Merges each of <code>other_hashes</code> into <code>self</code>; returns <code>self</code>.\n<p>Each argument in <code>other_hashes</code> must be a Hash.\n<p>With …\n",null,1],["update","OpenSSL::Cipher","ruby/classes/OpenSSL/Cipher.html#method-i-update","(p1, p2 = v2)","<p>Encrypts data in a streaming fashion. Hand consecutive blocks of data to the #update method in order …\n",null,1],["update","OpenSSL::Digest","ruby/classes/OpenSSL/Digest.html#method-i-update","(p1)","<p>Not every message digest can be computed in one single pass. If a message digest is to be computed from …\n",null,1],["update","OpenSSL::HMAC","ruby/classes/OpenSSL/HMAC.html#method-i-update","(p1)","<p>Returns <em>hmac</em> updated with the message to be authenticated. Can be called repeatedly with chunks of the …\n",null,1],["update","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-update","( hsh )","<p>Updates the database with multiple values from the specified object. Takes any object which implements …\n",null,1],["update!","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-update-21","(attributes)","<p>Updates its receiver just like #update but calls #save! instead of <code>save</code>, so an exception is raised if …\n",null,0],["update!","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-update-21","(id = :all, attributes)","<p>Updates the object (or multiple objects) just like #update but calls #update! instead of <code>update</code>, so an …\n",null,0],["update_aliases","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-update_aliases","()","<p>Updates the child modules &amp; classes by replacing the ones that are aliases through a constant.\n<p>The …\n",null,1],["update_all","ActiveRecord::Batches::BatchEnumerator","rails/classes/ActiveRecord/Batches/BatchEnumerator.html#method-i-update_all","(updates)","<p>Updates records in batches. Returns the total number of rows affected.\n\n<pre><code>Person.in_batches.update_all(&quot;age ...\n</code></pre>\n",null,0],["update_all","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-update_all","(updates)","<p>Updates all records in the current relation with details given. This method constructs a single SQL  …\n",null,0],["update_attribute","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-update_attribute","(name, value)","<p>Updates a single attribute and saves the record. This is especially useful for boolean flags on existing …\n",null,0],["update_cache?","Gem::Source","ruby/classes/Gem/Source.html#method-i-update_cache-3F","()","<p>Returns true when it is possible and safe to update the cache directory.\n",null,1],["update_checksum","Gem::Package::TarHeader","ruby/classes/Gem/Package/TarHeader.html#method-i-update_checksum","()","<p>Updates the TarHeader’s checksum\n",null,1],["update_column","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-update_column","(name, value)","<p>Equivalent to <code>update_columns(name =&gt; value)</code>.\n",null,0],["update_columns","ActiveRecord::Persistence","rails/classes/ActiveRecord/Persistence.html#method-i-update_columns","(attributes)","<p>Updates the attributes directly in the database issuing an UPDATE SQL statement and sets them in the …\n",null,0],["update_counters","ActiveRecord::CounterCache::ClassMethods","rails/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-update_counters","(id, counters)","<p>A generic “counter updater” implementation, intended primarily to be used by #increment_counter …\n",null,0],["update_counters","ActiveRecord::Locking::Optimistic::ClassMethods","rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-update_counters","(id, counters)","<p>Make sure the lock version column gets updated when counters are updated.\n",null,0],["update_counters","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-update_counters","(counters)","<p>Updates the counters of the records in the current relation.\n<p>Parameters\n<p><code>counter</code> - A Hash containing the …\n",null,0],["update_extends","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-update_extends","()","<p>Deletes from #extends those whose module has been removed from the documentation.\n",null,1],["update_gem","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-i-update_gem","(name, version = Gem::Requirement.default)","",null,1],["update_gems","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-i-update_gems","(gems_to_update)","",null,1],["update_includes","RDoc::ClassModule","ruby/classes/RDoc/ClassModule.html#method-i-update_includes","()","<p>Deletes from #includes those whose module has been removed from the documentation.\n",null,1],["update_iogate","Reline","ruby/classes/Reline.html#method-c-update_iogate","()","",null,1],["update_iogate","Reline","ruby/classes/Reline.html#method-c-update_iogate","()","",null,1],["update_metadata","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-update_metadata","(key, **metadata)","<p>Update metadata for the file identified by <code>key</code> in the service. Override in subclasses only if the service …\n",null,0],["update_metadata","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-update_metadata","(key, content_type:, disposition: nil, filename: nil, custom_metadata: {})","",null,0],["update_output_dir","RDoc::RDoc","ruby/classes/RDoc/RDoc.html#method-i-update_output_dir","(op_dir, time, last = {})","<p>Update the flag file in an output directory.\n",null,1],["update_parser_of_file","RDoc::Store","ruby/classes/RDoc/Store.html#method-i-update_parser_of_file","(absolute_name, parser)","<p>Sets the parser of <code>absolute_name</code>, unless it from a source code file.\n",null,1],["update_rubygems","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-i-update_rubygems","()","<p>Update RubyGems software to the latest version.\n",null,1],["update_scope","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-update_scope","(scope)","",null,1],["update_suggestion","Gem::UpdateSuggestion","ruby/classes/Gem/UpdateSuggestion.html#method-i-update_suggestion","()","<p>Message to promote available RubyGems update with related gem update command.\n",null,1],["updated","Gem::StreamUI::SilentProgressReporter","ruby/classes/Gem/StreamUI/SilentProgressReporter.html#method-i-updated","(message)","<p>Does not print <code>message</code> when updated as this object has taken a vow of silence.\n",null,1],["updated","Gem::StreamUI::SimpleProgressReporter","ruby/classes/Gem/StreamUI/SimpleProgressReporter.html#method-i-updated","(message)","<p>Prints out a dot and ignores <code>message</code>.\n",null,1],["updated","Gem::StreamUI::VerboseProgressReporter","ruby/classes/Gem/StreamUI/VerboseProgressReporter.html#method-i-updated","(message)","<p>Prints out the position relative to the total and the <code>message</code>.\n",null,1],["updated?","ActiveSupport::FileUpdateChecker","rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-updated-3F","()","<p>Check if any of the entries were updated. If so, the watched and/or updated_at values are cached until …\n",null,0],["upgrade_insecure_requests","ActionDispatch::ContentSecurityPolicy","rails/classes/ActionDispatch/ContentSecurityPolicy.html#method-i-upgrade_insecure_requests","(enabled = true)","<p>Specify whether user agents should treat any assets over HTTP as HTTPS:\n\n<pre><code>policy.upgrade_insecure_requests\n</code></pre>\n",null,0],["upgrade_to_class","RDoc::Context","ruby/classes/RDoc/Context.html#method-i-upgrade_to_class","(mod, class_type, enclosing)","<p>Upgrades NormalModule <code>mod</code> in <code>enclosing</code> to a <code>class_type</code>\n",null,1],["upload","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-upload","(io, identify: true)","<p>Uploads the <code>io</code> to the service on the <code>key</code> for this blob. Blobs are intended to be immutable, so you shouldn’t …\n",null,0],["upload","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-upload","(key, io, checksum: nil, **options)","<p>Upload the <code>io</code> to the <code>key</code> specified. If a <code>checksum</code> is provided, the service will ensure a match when the …\n",null,0],["upload","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-upload","(key, io, checksum: nil, filename: nil, content_type: nil, disposition: nil, custom_metadata: {}, **)","",null,0],["upload","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-upload","(key, io, checksum: nil, **)","",null,0],["upload","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-upload","(key, io, checksum: nil, content_type: nil, disposition: nil, filename: nil, custom_metadata: {})","",null,0],["upload","ActiveStorage::Service::MirrorService","rails/classes/ActiveStorage/Service/MirrorService.html#method-i-upload","(key, io, checksum: nil, **options)","<p>Upload the <code>io</code> to the <code>key</code> specified to all services. If a <code>checksum</code> is provided, all services will ensure …\n",null,0],["upload","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-upload","(key, io, checksum: nil, filename: nil, content_type: nil, disposition: nil, custom_metadata: {}, **)","",null,0],["upper","Win32::SSPI::SecurityHandle","ruby/classes/Win32/SSPI/SecurityHandle.html#method-i-upper","()","",null,1],["upsert","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-upsert","(attributes, on_duplicate: :update, returning: nil, unique_by: nil, record_timestamps: nil)","<p>Updates or inserts (upserts) a single record into the database in a single SQL INSERT statement. It does …\n",null,0],["upsert_all","ActiveRecord::Persistence::ClassMethods","rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-upsert_all","(attributes, on_duplicate: :update, update_only: nil, returning: nil, unique_by: nil, record_timestamps: nil)","<p>Updates or inserts (upserts) multiple records into the database in a single SQL INSERT statement. It …\n",null,0],["upto","Date","ruby/classes/Date.html#method-i-upto","(p1)","<p>Equivalent to #step with arguments <code>max</code> and <code>1</code>.\n",null,1],["upto","Integer","ruby/classes/Integer.html#method-i-upto","(p1)","<p>Calls the given block with each integer value from <code>self</code> up to <code>limit</code>; returns <code>self</code>:\n\n<pre><code>a = []\n5.upto(10) {|i| ...\n</code></pre>\n",null,1],["upto","String","ruby/classes/String.html#method-i-upto","(p1, p2 = v2)","<p>With a block given, calls the block with each String value returned by successive calls to String#succ …\n",null,1],["uptodate?","FileUtils","ruby/classes/FileUtils.html#method-c-uptodate-3F","(new, old_list)","<p>Returns <code>true</code> if the file at path <code>new</code> is newer than all the files at paths in array <code>old_list</code>; <code>false</code> otherwise. …\n",null,1],["urandom","Random","ruby/classes/Random.html#method-c-urandom","(p1)","<p>Returns a string, using platform providing features. Returned value is expected to be a cryptographically …\n",null,1],["uri","DRb","ruby/classes/DRb.html#method-c-uri","()","<p>Get the URI defining the local dRuby space.\n<p>This is the URI of the current server.  See #current_server …\n",null,1],["uri_option","DRb::DRbProtocol","ruby/classes/DRb/DRbProtocol.html#method-c-uri_option","(uri, config, first=true)","<p>Parse <code>uri</code> into a [uri, option] pair.\n<p>The DRbProtocol module asks each registered protocol in turn to try …\n",null,1],["url","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-i-url","()","<p>Returns the complete URL used for this request.\n\n<pre><code>req = ActionDispatch::Request.new &#39;HTTP_HOST&#39; =&gt; &#39;example.com&#39; ...\n</code></pre>\n",null,0],["url","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-url","(expires_in: ActiveStorage.service_urls_expire_in, disposition: :inline, filename: nil, **options)","<p>Returns the URL of the blob on the service. This returns a permanent URL for public files, and returns …\n",null,0],["url","ActiveStorage::Preview","rails/classes/ActiveStorage/Preview.html#method-i-url","(**options)","<p>Returns the URL of the preview’s variant on the service. Raises ActiveStorage::Preview::UnprocessedError …\n",null,0],["url","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-url","(key, **options)","<p>Returns the URL for the file at the <code>key</code>. This returns a permanent URL for public files, and returns a …\n",null,0],["url","ActiveStorage::Variant","rails/classes/ActiveStorage/Variant.html#method-i-url","(expires_in: ActiveStorage.service_urls_expire_in, disposition: :inline)","<p>Returns the URL of the blob variant on the service. See {ActiveStorage::Blob#url} for details.\n<p>Use <code>url_for(variant)</code> …\n",null,0],["url_encode","ERB::Util","ruby/classes/ERB/Util.html#method-c-url_encode","(s)","<p>A utility method for encoding the String <em>s</em> as a URL.\n\n<pre><code>require &quot;erb&quot;\ninclude ERB::Util\n\nputs url_encode(&quot;Programming ...\n</code></pre>\n",null,1],["url_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-url_field","","<p>Wraps ActionView::Helpers::FormHelper#url_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| %&gt; ...\n</code></pre>\n",null,0],["url_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-url_field","(object_name, method, options = {})","<p>Returns a text_field of type “url”.\n\n<pre><code>url_field(&quot;user&quot;, &quot;homepage&quot;)\n# =&gt; &lt;input id=&quot;user_homepage&quot; ...\n</code></pre>\n",null,0],["url_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-url_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “url”.\n<p>Options\n<p>Supports the same options as #text_field_tag.\n",null,0],["url_for","ActionController::Metal","rails/classes/ActionController/Metal.html#method-i-url_for","(string)","<p>Basic url_for that can be overridden for more robust functionality.\n",null,0],["url_for","ActionDispatch::Http::URL","rails/classes/ActionDispatch/Http/URL.html#method-c-url_for","(options)","",null,0],["url_for","ActionDispatch::Routing::UrlFor","rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_for","(options = nil)","<p>Generate a URL based on the options provided, <code>default_url_options</code>, and the routes defined in <code>config/routes.rb</code> …\n",null,0],["url_for","ActionView::RoutingUrlFor","rails/classes/ActionView/RoutingUrlFor.html#method-i-url_for","(options = nil)","<p>Returns the URL for the set of <code>options</code> provided. This takes the same options as <code>url_for</code> in Action Controller …\n",null,0],["url_for_direct_upload","ActiveStorage::Service","rails/classes/ActiveStorage/Service.html#method-i-url_for_direct_upload","(key, expires_in:, content_type:, content_length:, checksum:, custom_metadata: {})","<p>Returns a signed, temporary URL that a direct upload file can be PUT to on the <code>key</code>. The URL will be valid …\n",null,0],["url_for_direct_upload","ActiveStorage::Service::AzureStorageService","rails/classes/ActiveStorage/Service/AzureStorageService.html#method-i-url_for_direct_upload","(key, expires_in:, content_type:, content_length:, checksum:, custom_metadata: {})","",null,0],["url_for_direct_upload","ActiveStorage::Service::DiskService","rails/classes/ActiveStorage/Service/DiskService.html#method-i-url_for_direct_upload","(key, expires_in:, content_type:, content_length:, checksum:, custom_metadata: {})","",null,0],["url_for_direct_upload","ActiveStorage::Service::GCSService","rails/classes/ActiveStorage/Service/GCSService.html#method-i-url_for_direct_upload","(key, expires_in:, checksum:, custom_metadata: {}, **)","",null,0],["url_for_direct_upload","ActiveStorage::Service::S3Service","rails/classes/ActiveStorage/Service/S3Service.html#method-i-url_for_direct_upload","(key, expires_in:, content_type:, content_length:, checksum:, custom_metadata: {})","",null,0],["url_from","ActionController::Redirecting","rails/classes/ActionController/Redirecting.html#method-i-url_from","(location)","<p>Verifies the passed <code>location</code> is an internal URL that’s safe to redirect to and returns it, or nil …\n",null,0],["url_helper_prefix","Rails::Generators::NamedBase","rails/classes/Rails/Generators/NamedBase.html#method-i-url_helper_prefix","()","",null,0],["url_options","ActionController::UrlFor","rails/classes/ActionController/UrlFor.html#method-i-url_options","()","",null,0],["url_options","ActionDispatch::Routing::UrlFor","rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_options","()","<p>Hook overridden in controller to add request information with <code>default_url_options</code>. Application logic …\n",null,0],["url_to_asset","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_asset","(source, options = {})","",null,0],["url_to_audio","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_audio","(source, options = {})","",null,0],["url_to_font","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_font","(source, options = {})","",null,0],["url_to_image","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_image","(source, options = {})","",null,0],["url_to_javascript","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_javascript","(source, options = {})","",null,0],["url_to_stylesheet","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_stylesheet","(source, options = {})","",null,0],["url_to_video","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-url_to_video","(source, options = {})","",null,0],["urlsafe_base64","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-urlsafe_base64","(n=nil, padding=false)","<p>Generate a random URL-safe base64 string.\n<p>The argument <em>n</em> specifies the length, in bytes, of the random …\n",null,1],["urlsafe_decode64","Base64","ruby/classes/Base64.html#method-i-urlsafe_decode64","(str)","<p>Returns the decoding of an RFC-4648-compliant Base64-encoded string <code>str</code>:\n<p><code>str</code> may not contain non-Base64 …\n",null,1],["urlsafe_encode64","Base64","ruby/classes/Base64.html#method-i-urlsafe_encode64","(bin, padding: true)","<p>Returns the RFC-4648-compliant Base64-encoding of <code>bin</code>.\n<p>Per RFC 4648, the returned string will not contain …\n",null,1],["us_zones","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-c-us_zones","()","<p>A convenience method for returning a collection of TimeZone objects for time zones in the USA.\n",null,0],["usage","Gem::Command","ruby/classes/Gem/Command.html#method-i-usage","()","<p>Override to display the usage for an individual gem command.\n<p>The text “[options]” is automatically …\n",null,1],["usage_path","Rails::Command::Base","rails/classes/Rails/Command/Base.html#method-c-usage_path","()","<p>Path to lookup a USAGE description in a file.\n",null,0],["usage_path","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-c-usage_path","()","",null,0],["use","ActionController::Metal","rails/classes/ActionController/Metal.html#method-c-use","(...)","<p>Pushes the given Rack middleware and its arguments to the bottom of the middleware stack.\n",null,0],["use","ActionDispatch::MiddlewareStack","rails/classes/ActionDispatch/MiddlewareStack.html#method-i-use","(klass, *args, &block)","",null,0],["use","Rails::Configuration::MiddlewareStackProxy","rails/classes/Rails/Configuration/MiddlewareStackProxy.html#method-i-use","(...)","",null,0],["use_accept_header","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-use_accept_header","()","",null,0],["use_gemdeps","Gem","ruby/classes/Gem.html#method-c-use_gemdeps","(path = nil)","<p>Looks for a gem dependency file at <code>path</code> and activates the gems in the file if found.  If the file is …\n",null,1],["use_headers?","CSV::Parser","ruby/classes/CSV/Parser.html#method-i-use_headers-3F","()","",null,1],["use_insert_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-use_insert_returning-3F","()","",null,0],["use_loader","IRB::Context","ruby/classes/IRB/Context.html#method-i-use_loader","()","<p>Returns whether <code>irb</code>‘s own file reader method is used by <code>load</code>/<code>require</code> or not.\n<p>This mode is globally …\n",null,1],["use_loader=","IRB::Context","ruby/classes/IRB/Context.html#method-i-use_loader-3D","(opt)","<p>Sets <code>IRB.conf[:USE_LOADER]</code>\n<p>See #use_loader for more information.\n",null,1],["use_loader?","IRB::Context","ruby/classes/IRB/Context.html#method-i-use_loader-3F","()","",null,1],["use_markup","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-use_markup","(content)","<p>If there is a <code>markup: parser_name</code> comment at the front of the file, use it to determine the parser.  …\n",null,1],["use_metadata_table?","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-use_metadata_table-3F","()","",null,0],["use_paths","Gem","ruby/classes/Gem.html#method-c-use_paths","(home, *paths)","<p>Use the <code>home</code> and <code>paths</code> values for Gem.dir and Gem.path.  Used mainly by the unit tests to provide environment …\n",null,1],["use_prism_parser?","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-use_prism_parser-3F","()","<p>SyntaxSuggest.use_prism_parser? [Private]\n<p>Tells us if the prism parser is available for use or if we should …\n",null,1],["use_renderer","ActionController::Renderers::ClassMethods","rails/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderer","(*args)","",null,0],["use_renderers","ActionController::Renderers::ClassMethods","rails/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderers","(*args)","<p>Adds, by name, a renderer or renderers to the <code>_renderers</code> available to call within controller actions. …\n",null,0],["use_ssl=","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-use_ssl-3D","(flag)","<p>Sets whether a new session is to use Transport Layer Security:\n<p>Raises IOError if attempting to change …\n",null,1],["use_ssl?","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-use_ssl-3F","()","<p>Returns <code>true</code> if <code>self</code> uses SSL, <code>false</code> otherwise. See Net::HTTP#use_ssl=.\n",null,1],["use_system_gems?","Bundler","ruby/classes/Bundler.html#method-c-use_system_gems-3F","()","",null,1],["use_tracer=","IRB::Context","ruby/classes/IRB/Context.html#method-i-use_tracer-3D","(opt)","",null,1],["use_ui","Gem::DefaultUserInteraction","ruby/classes/Gem/DefaultUserInteraction.html#method-i-use_ui","(new_ui, &block)","<p>See DefaultUserInteraction::use_ui\n",null,1],["use_ui","Gem::DefaultUserInteraction","ruby/classes/Gem/DefaultUserInteraction.html#method-c-use_ui","(new_ui)","<p>Use <code>new_ui</code> for the duration of <code>block</code>.\n",null,1],["use_zone","Time","rails/classes/Time.html#method-c-use_zone","(time_zone)","<p>Allows override of <code>Time.zone</code> locally inside supplied block; resets <code>Time.zone</code> to existing value when done. …\n",null,0],["usec","DateTime","rails/classes/DateTime.html#method-i-usec","()","<p>Returns the fraction of a second as microseconds\n",null,0],["usec","Time","ruby/classes/Time.html#method-i-usec","()","<p>Returns the number of microseconds in the subseconds part of <code>self</code> in the range (0..999_999); lower-order …\n",null,1],["used_modules","Module","ruby/classes/Module.html#method-c-used_modules","()","<p>Returns an array of all modules used in the current scope. The ordering of modules in the resulting array …\n",null,1],["used_refinements","Module","ruby/classes/Module.html#method-c-used_refinements","()","<p>Returns an array of all modules used in the current scope. The ordering of modules in the resulting array …\n",null,1],["user","URI::Generic","ruby/classes/URI/Generic.html#method-i-user","()","<p>Returns the user component (without URI decoding).\n",null,1],["user=","URI::Generic","ruby/classes/URI/Generic.html#method-i-user-3D","(user)","<p>Args\n<p><code>v</code> &mdash; String\n\n<p>Description\n",null,1],["user_agent","Gem::Request","ruby/classes/Gem/Request.html#method-i-user_agent","()","",null,1],["user_bundle_path","Bundler","ruby/classes/Bundler.html#method-c-user_bundle_path","(dir = \"home\")","",null,1],["user_cache","Bundler","ruby/classes/Bundler.html#method-c-user_cache","()","",null,1],["user_dir","Gem","ruby/classes/Gem.html#method-c-user_dir","()","<p>Path for gems in the user’s home directory\n",null,1],["user_home","Bundler","ruby/classes/Bundler.html#method-c-user_home","()","",null,1],["user_home","Gem","ruby/classes/Gem.html#method-c-user_home","()","<p>The home directory for the user.\n",null,1],["user_name_and_password","ActionController::HttpAuthentication::Basic","rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-user_name_and_password","(request)","",null,0],["userinfo","URI::Generic","ruby/classes/URI/Generic.html#method-i-userinfo","()","<p>Returns the userinfo, either as ‘user’ or ‘user:password’.\n",null,1],["userinfo=","URI::Generic","ruby/classes/URI/Generic.html#method-i-userinfo-3D","(userinfo)","<p>Sets userinfo, argument is string like ‘name:pass’.\n",null,1],["username_error","ActiveRecord::DatabaseConnectionError","rails/classes/ActiveRecord/DatabaseConnectionError.html#method-c-username_error","(username)","",null,0],["utc","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc","()","<p>Returns a <code>Time</code> instance of the simultaneous time in the UTC timezone.\n",null,0],["utc","DateTime","rails/classes/DateTime.html#method-i-utc","()","<p>Returns a <code>Time</code> instance of the simultaneous time in the UTC timezone.\n\n<pre><code>DateTime.civil(2005, 2, 21, 10, ...\n</code></pre>\n",null,0],["utc","Time","ruby/classes/Time.html#method-c-utc","(*args)","<p>Returns a new <code>Time</code> object based the on given arguments, in the UTC timezone.\n<p>With one to seven arguments …\n",null,1],["utc","Time","ruby/classes/Time.html#method-i-utc","()","<p>Returns <code>self</code>, converted to the UTC timezone:\n\n<pre><code>t = Time.new(2000) # =&gt; 2000-01-01 00:00:00 -0600\nt.utc? ...\n</code></pre>\n",null,1],["utc?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc-3F","()","<p>Returns true if the current time zone is set to UTC.\n\n<pre><code>Time.zone = &#39;UTC&#39;                           # =&gt; ...\n</code></pre>\n",null,0],["utc?","DateTime","rails/classes/DateTime.html#method-i-utc-3F","()","<p>Returns <code>true</code> if <code>offset == 0</code>.\n",null,0],["utc?","Time","ruby/classes/Time.html#method-i-utc-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a time in UTC (GMT):\n\n<pre><code>now = Time.now\n# =&gt; 2022-08-18 10:24:13.5398485 -0500 ...\n</code></pre>\n",null,1],["utc_offset","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc_offset","()","<p>Returns the offset from current time to UTC time in seconds.\n",null,0],["utc_offset","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-utc_offset","()","<p>Returns the offset of this time zone from UTC in seconds.\n",null,0],["utc_offset","DateTime","rails/classes/DateTime.html#method-i-utc_offset","()","<p>Returns the offset value in seconds.\n",null,0],["utc_offset","Time","ruby/classes/Time.html#method-i-utc_offset","()","<p>Returns the offset in seconds between the timezones of UTC and <code>self</code>:\n\n<pre><code>Time.utc(2000, 1, 1).utc_offset  ...\n</code></pre>\n",null,1],["utc_to_local","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-utc_to_local","(time)","<p>Adjust the given time to the simultaneous time in the time zone represented by <code>self</code>. Returns a local …\n",null,0],["utc_to_local_returns_utc_offset_times","ActiveSupport","rails/classes/ActiveSupport.html#method-c-utc_to_local_returns_utc_offset_times","()","",null,0],["utc_to_local_returns_utc_offset_times=","ActiveSupport","rails/classes/ActiveSupport.html#method-c-utc_to_local_returns_utc_offset_times-3D","(value)","",null,0],["utf8_enforcer_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-utf8_enforcer_tag","()","<p>Creates the hidden UTF-8 enforcer tag. Override this method in a helper to customize the tag.\n",null,0],["utime","File","ruby/classes/File.html#method-c-utime","(*args)","<p>Sets the access and modification times of each named file to the first two arguments. If a file is a …\n",null,1],["utime","Pathname","ruby/classes/Pathname.html#method-i-utime","(p1, p2)","<p>Update the access and modification times of the file.\n<p>See File.utime.\n",null,1],["uuid","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-uuid","()","",null,0],["uuid","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-uuid","","",null,0],["uuid","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-uuid","()","<p>Generate a random v4 UUID (Universally Unique IDentifier).\n\n<pre><code>require &#39;random/formatter&#39;\n\nRandom.uuid #=&gt; ...\n</code></pre>\n",null,1],["uuid_from_hash","Digest::UUID","rails/classes/Digest/UUID.html#method-c-uuid_from_hash","(hash_class, namespace, name)","<p>Generates a v5 non-random UUID (Universally Unique IDentifier).\n<p>Using OpenSSL::Digest::MD5 generates version …\n",null,0],["uuid_v3","Digest::UUID","rails/classes/Digest/UUID.html#method-c-uuid_v3","(uuid_namespace, name)","<p>Convenience method for uuid_from_hash using OpenSSL::Digest::MD5.\n",null,0],["uuid_v4","Digest::UUID","rails/classes/Digest/UUID.html#method-c-uuid_v4","()","<p>Convenience method for SecureRandom.uuid.\n",null,0],["uuid_v4","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-uuid_v4","()","",null,1],["uuid_v5","Digest::UUID","rails/classes/Digest/UUID.html#method-c-uuid_v5","(uuid_namespace, name)","<p>Convenience method for uuid_from_hash using OpenSSL::Digest::SHA1.\n",null,0],["uuid_v7","Random::Formatter","ruby/classes/Random/Formatter.html#method-i-uuid_v7","(extra_timestamp_bits: 0)","<p>Generate a random v7 UUID (Universally Unique IDentifier).\n\n<pre><code>require &#39;random/formatter&#39;\n\nRandom.uuid_v7 ...\n</code></pre>\n",null,1],["valid?","ActiveModel::Validations","rails/classes/ActiveModel/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the specified validations and returns <code>true</code> if no errors were added otherwise <code>false</code>.\n\n<pre><code>class Person ...\n</code></pre>\n",null,0],["valid?","ActiveRecord::DynamicMatchers::Method","rails/classes/ActiveRecord/DynamicMatchers/Method.html#method-i-valid-3F","()","",null,0],["valid?","ActiveRecord::Validations","rails/classes/ActiveRecord/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the validations within the specified context. Returns <code>true</code> if no errors are found, <code>false</code> otherwise. …\n",null,0],["valid?","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-valid-3F","()","<p>Returns whether the buffer buffer is accessible.\n<p>A buffer becomes invalid if it is a slice of another …\n",null,1],["valid?","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-valid-3F","(source)","<p>SyntaxSuggest.valid? [Private]\n<p>Returns truthy if a given input source is valid syntax\n\n<pre><code>SyntaxSuggest.valid?(&lt;&lt;~EOM) ...\n</code></pre>\n",null,1],["valid?","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-valid-3F","()","",null,1],["valid_accept_header","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-valid_accept_header","()","",null,0],["valid_authenticity_token?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-valid_authenticity_token-3F","(session, encoded_masked_token)","<p>Checks the client’s masked token to see if it matches the session token. Essentially the inverse …\n",null,0],["valid_civil?","Date","ruby/classes/Date.html#method-c-valid_civil-3F","(p1, p2, p3, p4 = v4)","<p>Returns <code>true</code> if the arguments define a valid ordinal date, <code>false</code> otherwise:\n\n<pre><code>Date.valid_date?(2001, 2, ...\n</code></pre>\n",null,1],["valid_commercial?","Date","ruby/classes/Date.html#method-c-valid_commercial-3F","(p1, p2, p3, p4 = v4)","<p>Returns <code>true</code> if the arguments define a valid commercial date, <code>false</code> otherwise:\n\n<pre><code>Date.valid_commercial?(2001, ...\n</code></pre>\n",null,1],["valid_date?","Date","ruby/classes/Date.html#method-c-valid_date-3F","(p1, p2, p3, p4 = v4)","<p>Returns <code>true</code> if the arguments define a valid ordinal date, <code>false</code> otherwise:\n\n<pre><code>Date.valid_date?(2001, 2, ...\n</code></pre>\n",null,1],["valid_encoding?","String","ruby/classes/String.html#method-i-valid_encoding-3F","()","<p>Returns <code>true</code> if <code>self</code> is encoded correctly, <code>false</code> otherwise:\n\n<pre><code>&quot;\\xc2\\xa1&quot;.force_encoding(&quot;UTF-8&quot;).valid_encoding? ...\n</code></pre>\n",null,1],["valid_jd?","Date","ruby/classes/Date.html#method-c-valid_jd-3F","(p1, p2 = v2)","<p>Implemented for compatibility; returns <code>true</code> unless <code>jd</code> is invalid (i.e., not a Numeric).\n\n<pre><code>Date.valid_jd?(2451944) ...\n</code></pre>\n",null,1],["valid_message?","ActiveSupport::MessageVerifier","rails/classes/ActiveSupport/MessageVerifier.html#method-i-valid_message-3F","(signed_message)","<p>Checks if a signed message could have been generated by signing an object with the <code>MessageVerifier</code>‘s …\n",null,0],["valid_ordinal?","Date","ruby/classes/Date.html#method-c-valid_ordinal-3F","(p1, p2, p3 = v3)","<p>Returns <code>true</code> if the arguments define a valid ordinal date, <code>false</code> otherwise:\n\n<pre><code>Date.valid_ordinal?(2001, ...\n</code></pre>\n",null,1],["valid_per_form_csrf_token?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-valid_per_form_csrf_token-3F","(token, session)","",null,0],["valid_request_origin?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-valid_request_origin-3F","()","<p>Checks if the request originated from the same origin by looking at the Origin header.\n",null,0],["valid_without?","SyntaxSuggest","ruby/classes/SyntaxSuggest.html#method-c-valid_without-3F","(without_lines:, code_lines:)","<p>SyntaxSuggest.valid_without? [Private]\n<p>This will tell you if the ‘code_lines` would be valid if you removed …\n",null,1],["validate","ActiveModel::EachValidator","rails/classes/ActiveModel/EachValidator.html#method-i-validate","(record)","<p>Performs validation on the supplied record. By default this will call <code>validate_each</code> to determine validity …\n",null,0],["validate","ActiveModel::Validations","rails/classes/ActiveModel/Validations.html#method-i-validate","(context = nil)","",null,0],["validate","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validate","(*args, &block)","<p>Adds a validation method or block to the class. This is useful when overriding the <code>validate</code> instance …\n",null,0],["validate","ActiveModel::Validator","rails/classes/ActiveModel/Validator.html#method-i-validate","(record)","<p>Override this method in subclasses with validation logic, adding errors to the records <code>errors</code> array where …\n",null,0],["validate","ActiveRecord::Validations","rails/classes/ActiveRecord/Validations.html#method-i-validate","(context = nil)","",null,0],["validate","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-validate","(packaging = true, strict = false)","<p>Checks that the specification contains all required fields, and does a very basic sanity check.\n<p>Raises …\n",null,1],["validate","Gem::SpecificationPolicy","ruby/classes/Gem/SpecificationPolicy.html#method-i-validate","(strict = false)","<p>Does a sanity check on the specification.\n<p>Raises InvalidSpecificationException if the spec does not pass …\n",null,1],["validate!","ActiveModel::Validations","rails/classes/ActiveModel/Validations.html#method-i-validate-21","(context = nil)","<p>Runs all the validations within the specified context. Returns <code>true</code> if no errors are found, raises <code>ValidationError</code> …\n",null,0],["validate_check_constraint","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-validate_check_constraint","(table_name, **options)","<p>Validates the given check constraint.\n\n<pre><code>validate_check_constraint :products, name: &quot;price_check&quot;\n</code></pre>\n<p>The <code>options</code> …\n",null,0],["validate_column_size","ActiveRecord::Encryption::EncryptableRecord","rails/classes/ActiveRecord/Encryption/EncryptableRecord.html#method-i-validate_column_size","(attribute_name)","",null,0],["validate_constraint","ActiveRecord::ConnectionAdapters::PostgreSQL::AlterTable","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/AlterTable.html#method-i-validate_constraint","(name)","",null,0],["validate_constraint","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-validate_constraint","(table_name, constraint_name)","<p>Validates the given constraint.\n<p>Validates the constraint named <code>constraint_name</code> on <code>accounts</code>.\n\n<pre><code>validate_constraint ...\n</code></pre>\n",null,0],["validate_dependencies","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-validate_dependencies","()","",null,1],["validate_digest_response","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_digest_response","(request, realm, &password_procedure)","<p>Returns false unless the request credentials response value matches the expected value. First try the …\n",null,0],["validate_each","ActiveModel::EachValidator","rails/classes/ActiveModel/EachValidator.html#method-i-validate_each","(record, attribute, value)","<p>Override this method in subclasses with the validation logic, adding errors to the records <code>errors</code> array …\n",null,0],["validate_each","ActiveRecord::Encryption::ExtendedDeterministicUniquenessValidator::EncryptedUniquenessValidator","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicUniquenessValidator/EncryptedUniquenessValidator.html#method-i-validate_each","(record, attribute, value)","",null,0],["validate_foreign_key","ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/SchemaStatements.html#method-i-validate_foreign_key","(from_table, to_table = nil, **options)","<p>Validates the given foreign key.\n<p>Validates the foreign key on <code>accounts.branch_id</code>.\n\n<pre><code>validate_foreign_key ...\n</code></pre>\n",null,0],["validate_metadata","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-validate_metadata","()","",null,1],["validate_metadata","Gem::SpecificationPolicy","ruby/classes/Gem/SpecificationPolicy.html#method-i-validate_metadata","()","<p>Implementation for Specification#validate_metadata\n",null,1],["validate_nonce","ActionController::HttpAuthentication::Digest","rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_nonce","(secret_key, request, value, seconds_to_timeout = 5 * 60)","<p>Might want a shorter timeout depending on whether the request is a PATCH, PUT, or POST, and if the client …\n",null,0],["validate_optional","Gem::SpecificationPolicy","ruby/classes/Gem/SpecificationPolicy.html#method-i-validate_optional","(strict)","",null,1],["validate_permissions","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-validate_permissions","()","",null,1],["validate_permissions","Gem::SpecificationPolicy","ruby/classes/Gem/SpecificationPolicy.html#method-i-validate_permissions","()","<p>Issues a warning for each file to be packaged which is world-readable.\n<p>Implementation for Specification#validate_permissions …\n",null,1],["validate_required!","Gem::SpecificationPolicy","ruby/classes/Gem/SpecificationPolicy.html#method-i-validate_required-21","()","<p>Does a sanity check on the specification.\n<p>Raises InvalidSpecificationException if the spec does not pass …\n",null,1],["validate_required_ruby_version","Gem::SpecificationPolicy","ruby/classes/Gem/SpecificationPolicy.html#method-i-validate_required_ruby_version","()","",null,1],["validate_secret_key_base","Rails::Application","rails/classes/Rails/Application.html#method-i-validate_secret_key_base","(secret_key_base)","",null,0],["validate_service_configuration","ActiveStorage::Attached::Model","rails/classes/ActiveStorage/Attached/Model.html#method-i-validate_service_configuration","(association_name, service)","",null,0],["validate_value_type","ActiveRecord::Encryption::Properties","rails/classes/ActiveRecord/Encryption/Properties.html#method-i-validate_value_type","(value)","",null,0],["validates","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates","(*attributes)","<p>This method is a shortcut to all default validators and any custom validator classes ending in ‘Validator’. …\n",null,0],["validates!","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates-21","(*attributes)","<p>This method is used to define validations that cannot be corrected by end users and are considered exceptional. …\n",null,0],["validates_absence_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_absence_of","(*attr_names)","<p>Validates that the specified attributes are blank (as defined by Object#present?). Happens by default …\n",null,0],["validates_absence_of","ActiveRecord::Validations::ClassMethods","rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_absence_of","(*attr_names)","<p>Validates that the specified attributes are not present (as defined by Object#present?). If the attribute …\n",null,0],["validates_acceptance_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_acceptance_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar …\n",null,0],["validates_associated","ActiveRecord::Validations::ClassMethods","rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_associated","(*attr_names)","<p>Validates whether the associated object or objects are all valid. Works with any kind of association. …\n",null,0],["validates_comparison_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_comparison_of","(*attr_names)","<p>Validates the value of a specified attribute fulfills all defined comparisons with another value, proc, …\n",null,0],["validates_confirmation_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_confirmation_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate a password or email address field with a confirmation. …\n",null,0],["validates_each","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_each","(*attr_names, &block)","<p>Validates each attribute against a block.\n\n<pre><code>class Person\n  include ActiveModel::Validations\n\n  attr_accessor ...\n</code></pre>\n",null,0],["validates_exclusion_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_exclusion_of","(*attr_names)","<p>Validates that the value of the specified attribute is not in a particular enumerable object.\n\n<pre><code>class Person ...\n</code></pre>\n",null,0],["validates_format_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_format_of","(*attr_names)","<p>Validates whether the value of the specified attribute is of the correct form, going by the regular expression …\n",null,0],["validates_inclusion_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_inclusion_of","(*attr_names)","<p>Validates whether the value of the specified attribute is available in a particular enumerable object. …\n",null,0],["validates_length_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_length_of","(*attr_names)","<p>Validates that the specified attributes match the length restrictions supplied. Only one constraint option …\n",null,0],["validates_length_of","ActiveRecord::Validations::ClassMethods","rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_length_of","(*attr_names)","<p>Validates that the specified attributes match the length restrictions supplied. If the attribute is an …\n",null,0],["validates_numericality_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_numericality_of","(*attr_names)","<p>Validates whether the value of the specified attribute is numeric by trying to convert it to a float …\n",null,0],["validates_numericality_of","ActiveRecord::Validations::ClassMethods","rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_numericality_of","(*attr_names)","<p>Validates whether the value of the specified attribute is numeric by trying to convert it to a float …\n",null,0],["validates_presence_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_presence_of","(*attr_names)","<p>Validates that the specified attributes are not blank (as defined by Object#blank?). Happens by default …\n",null,0],["validates_presence_of","ActiveRecord::Validations::ClassMethods","rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_presence_of","(*attr_names)","<p>Validates that the specified attributes are not blank (as defined by Object#blank?), and, if the attribute …\n",null,0],["validates_size_of","ActiveModel::Validations::HelperMethods","rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_size_of","(*attr_names)","",null,0],["validates_size_of","ActiveRecord::Validations::ClassMethods","rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_size_of","(*attr_names)","",null,0],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_uniqueness_of","(*attr_names)","<p>Validates whether the value of the specified attributes are unique across the system. Useful for making …\n",null,0],["validates_with","ActiveModel::Validations","rails/classes/ActiveModel/Validations.html#method-i-validates_with","(*args, &block)","<p>Passes the record off to the class or classes specified and allows them to add errors based on more complex …\n",null,0],["validates_with","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_with","(*args, &block)","<p>Passes the record off to the class or classes specified and allows them to add errors based on more complex …\n",null,0],["validators","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators","()","<p>List all validators that are being used to validate the model using <code>validates_with</code> method.\n\n<pre><code>class Person ...\n</code></pre>\n",null,0],["validators_on","ActiveModel::Validations::ClassMethods","rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators_on","(*attributes)","<p>List all validators that are being used to validate a specific attribute.\n\n<pre><code>class Person\n  include ActiveModel::Validations ...\n</code></pre>\n",null,0],["value","ActiveRecord::StatementCache::PartialQueryCollector","rails/classes/ActiveRecord/StatementCache/PartialQueryCollector.html#method-i-value","()","",null,0],["value","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-value","()","<p>Returns the value or list of values for this cookie.\n",null,1],["value","CSV::InputRecordSeparator","ruby/classes/CSV/InputRecordSeparator.html#method-c-value","()","",null,1],["value","Fiddle::Importer","ruby/classes/Fiddle/Importer.html#method-i-value","(ty, val=nil)","",null,1],["value","Net::HTTPResponse","ruby/classes/Net/HTTPResponse.html#method-i-value","()","<p>Raises an HTTP error if the response is not 2xx (success).\n",null,1],["value","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-i-value","()","",null,1],["value","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-value","()","",null,1],["value","Prism::FloatNode","ruby/classes/Prism/FloatNode.html#method-i-value","()","<p>Returns the value of the node as a Ruby Float.\n",null,1],["value","Prism::ImaginaryNode","ruby/classes/Prism/ImaginaryNode.html#method-i-value","()","<p>Returns the value of the node as a Ruby Complex.\n",null,1],["value","Prism::IntegerNode","ruby/classes/Prism/IntegerNode.html#method-i-value","()","<p>Returns the value of the node as a Ruby Integer.\n",null,1],["value","Prism::LexCompat::Token","ruby/classes/Prism/LexCompat/Token.html#method-i-value","()","<p>The slice of the source that this token represents.\n",null,1],["value","Prism::MagicComment","ruby/classes/Prism/MagicComment.html#method-i-value","()","<p>Returns the value of the magic comment by slicing it from the source code.\n",null,1],["value","Prism::RationalNode","ruby/classes/Prism/RationalNode.html#method-i-value","()","<p>Returns the value of the node as a Ruby Rational.\n",null,1],["value","Rinda::Tuple","ruby/classes/Rinda/Tuple.html#method-i-value","()","<p>Return the tuple itself\n",null,1],["value","Rinda::TupleEntry","ruby/classes/Rinda/TupleEntry.html#method-i-value","()","<p>Return the object which makes up the tuple itself: the Array or Hash.\n",null,1],["value","Thread","ruby/classes/Thread.html#method-i-value","()","<p>Waits for <code>thr</code> to complete, using #join, and returns its value or raises the exception which terminated …\n",null,1],["value","UncaughtThrowError","ruby/classes/UncaughtThrowError.html#method-i-value","()","<p>Return the return value which was called for.\n",null,1],["value","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-value","()","<p>Returns value if value is exists. If the value does not exist, this method returns nil.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["value","WIN32OLE::Variant","ruby/classes/WIN32OLE/Variant.html#method-i-value","()","<p>Returns Ruby object value from OLE variant.\n\n<pre><code>obj = WIN32OLE_VARIANT.new(1, WIN32OLE::VARIANT::VT_BSTR) ...\n</code></pre>\n",null,1],["value=","CGI::Cookie","ruby/classes/CGI/Cookie.html#method-i-value-3D","(val)","<p>Replaces the value of this cookie with a new value or list of values.\n",null,1],["value=","OpenSSL::X509::Attribute","ruby/classes/OpenSSL/X509/Attribute.html#method-i-value-3D","(p1)","",null,1],["value=","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-value-3D","(p1)","",null,1],["value=","WIN32OLE::Variant","ruby/classes/WIN32OLE/Variant.html#method-i-value-3D","(p1)","<p>Sets variant value to val. If the val type does not match variant value type(vartype), then val is changed …\n",null,1],["value?","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-value-3F","","<p>Returns true if the given value is present for some key in the parameters.\n",null,0],["value?","ENV","ruby/classes/ENV.html#method-c-value-3F","(p1)","<p>Returns <code>true</code> if <code>value</code> is the value for some environment variable name, <code>false</code> otherwise:\n\n<pre><code>ENV.replace(&#39;foo&#39; ...\n</code></pre>\n",null,1],["value?","Hash","ruby/classes/Hash.html#method-i-value-3F","(p1)","<p>Returns <code>true</code> if <code>value</code> is a value in <code>self</code>, otherwise <code>false</code>.\n",null,1],["value_der","OpenSSL::X509::Extension","ruby/classes/OpenSSL/X509/Extension.html#method-i-value_der","()","",null,1],["values","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-values","","<p>Returns a new array of the values of the parameters.\n",null,0],["values","ActiveRecord::Relation","rails/classes/ActiveRecord/Relation.html#method-i-values","()","",null,0],["values","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-values","()","",null,0],["values","ENV","ruby/classes/ENV.html#method-c-values","()","<p>Returns all environment variable values in an Array:\n\n<pre><code>ENV.replace(&#39;foo&#39; =&gt; &#39;0&#39;, &#39;bar&#39; =&gt; &#39;1&#39;)\nENV.values ...\n</code></pre>\n",null,1],["values","Hash","ruby/classes/Hash.html#method-i-values","()","<p>Returns a new Array containing all values in <code>self</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.values # =&gt; [0, 1, 2]\n</code></pre>\n",null,1],["values","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-values","(*args)","<p>Returns an array of values of <code>buffer_type</code> starting from <code>offset</code>.\n<p>If <code>count</code> is given, only <code>count</code> values will …\n",null,1],["values","ObjectSpace::WeakMap","ruby/classes/ObjectSpace/WeakMap.html#method-i-values","()","<p>Returns a new Array containing all values in the map.\n",null,1],["values","Struct","ruby/classes/Struct.html#method-i-values","()","<p>Returns the values in <code>self</code> as an array:\n\n<pre><code>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...\n</code></pre>\n",null,1],["values","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-values","()","<p>return values as an array\n",null,1],["values","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-values","()","<p>Returns an array of values from the database.\n",null,1],["values_at","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-values_at","(*keys)","<p>Returns values that were assigned to the given <code>keys</code>. Note that all the <code>Hash</code> objects will be converted …\n",null,0],["values_at","ActiveRecord::Core","rails/classes/ActiveRecord/Core.html#method-i-values_at","(*methods)","<p>Returns an array of the values returned by the given methods.\n",null,0],["values_at","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*keys)","<p>Returns an array of the values at the specified indices:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["values_at","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*keys)","<p>Returns an array of the values at the specified indices:\n\n<pre><code>hash = ActiveSupport::HashWithIndifferentAccess.new ...\n</code></pre>\n",null,0],["values_at","Rails::Paths::Root","rails/classes/Rails/Paths/Root.html#method-i-values_at","(*list)","",null,0],["values_at","Array","ruby/classes/Array.html#method-i-values_at","(*args)","<p>Returns a new Array whose elements are the elements of <code>self</code> at the given Integer or Range <code>indexes</code>.\n<p>For …\n",null,1],["values_at","CSV::Row","ruby/classes/CSV/Row.html#method-i-values_at","(*headers_and_or_indices)","",null,1],["values_at","CSV::Table","ruby/classes/CSV/Table.html#method-i-values_at","(*indices_or_headers)","<p>If the access mode is <code>:row</code> or <code>:col_or_row</code>, and each argument is either an Integer or a Range, returns …\n",null,1],["values_at","ENV","ruby/classes/ENV.html#method-c-values_at","(*args)","<p>Returns an Array containing the environment variable values associated with the given names:\n\n<pre><code>ENV.replace(&#39;foo&#39; ...\n</code></pre>\n",null,1],["values_at","Hash","ruby/classes/Hash.html#method-i-values_at","(*args)","<p>Returns a new Array containing values for the given <code>keys</code>:\n\n<pre><code>h = {foo: 0, bar: 1, baz: 2}\nh.values_at(:baz, ...\n</code></pre>\n",null,1],["values_at","MatchData","ruby/classes/MatchData.html#method-i-values_at","(*args)","<p>Returns match and captures at the given <code>indexes</code>, which may include any mixture of:\n<p>Integers.\n<p>Ranges.\n",null,1],["values_at","StringScanner","ruby/classes/StringScanner.html#method-i-values_at","(*args)","<p>Returns the subgroups in the most recent match at the given indices. If nothing was priorly matched, …\n",null,1],["values_at","Struct","ruby/classes/Struct.html#method-i-values_at","(*args)","<p>Returns an array of values from <code>self</code>.\n<p>With integer arguments <code>integers</code> given, returns an array containing …\n",null,1],["values_at","YAML::DBM","ruby/classes/YAML/DBM.html#method-i-values_at","( *keys )","<p>Returns an array containing the values associated with the given keys.\n",null,1],["variable?","ActiveStorage::Blob::Representable","rails/classes/ActiveStorage/Blob/Representable.html#method-i-variable-3F","()","<p>Returns true if the variant processor can transform the blob (its content type is in <code>ActiveStorage.variable_content_types</code> …\n",null,0],["variable_kind","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-variable_kind","()","<p>Returns variable kind string.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;XlSheetType&#39;) ...\n</code></pre>\n",null,1],["variables","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-variables","()","<p>Returns array of WIN32OLE_VARIABLE objects which represent variables defined in OLE class.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft ...\n</code></pre>\n",null,1],["variant","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-variant","()","",null,0],["variant","ActiveStorage::Attachment","rails/classes/ActiveStorage/Attachment.html#method-i-variant","(transformations)","<p>Returns an ActiveStorage::Variant or ActiveStorage::VariantWithRecord instance for the attachment with …\n",null,0],["variant","ActiveStorage::Blob::Representable","rails/classes/ActiveStorage/Blob/Representable.html#method-i-variant","(transformations)","<p>Returns an ActiveStorage::Variant or ActiveStorage::VariantWithRecord instance with the set of <code>transformations</code> …\n",null,0],["variant=","ActionDispatch::Http::MimeNegotiation","rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-variant-3D","(variant)","<p>Sets the variant for template.\n",null,0],["varkind","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-varkind","()","<p>Returns the number which represents variable kind.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object ...\n</code></pre>\n",null,1],["vartype","WIN32OLE::Variant","ruby/classes/WIN32OLE/Variant.html#method-i-vartype","()","<p>Returns OLE variant type.\n\n<pre><code>obj = WIN32OLE_VARIANT.new(&quot;string&quot;)\nobj.vartype # =&gt; WIN32OLE::VARIANT::VT_BSTR\n</code></pre>\n",null,1],["vendor","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-vendor","()","",null,0],["vendor","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-vendor","(filename, data = nil)","<p>Creates a file in <code>vendor/</code>. The contents can be specified as an argument or as the return value of the …\n",null,0],["ver","OptionParser","ruby/classes/OptionParser.html#method-i-ver","()","<p>Returns version string from program_name, version and release.\n",null,1],["verbose","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-verbose","()","<p>Get whether the server is in verbose mode.\n<p>In verbose mode, failed calls are logged to stdout.\n",null,1],["verbose","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-c-verbose","()","<p>Get the default value of the :verbose option.\n",null,1],["verbose","Gem::UserInteraction","ruby/classes/Gem/UserInteraction.html#method-i-verbose","(msg = nil)","<p>Calls <code>say</code> with <code>msg</code> or the results of the block if really_verbose is true.\n",null,1],["verbose=","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-c-verbose-3D","(on)","<p>Set the default value of the :verbose option.\n<p>See #new().  The initial default value is false.\n",null,1],["verbose=","DRb::DRbServer","ruby/classes/DRb/DRbServer.html#method-i-verbose-3D","(v)","<p>Set whether to operate in verbose mode.\n<p>In verbose mode, failed calls are logged to stdout.\n",null,1],["verbose?","IRB::Context","ruby/classes/IRB/Context.html#method-i-verbose-3F","()","<p>Returns whether messages are displayed or not.\n",null,1],["verified","ActiveSupport::MessageVerifier","rails/classes/ActiveSupport/MessageVerifier.html#method-i-verified","(signed_message, purpose: nil, **)","<p>Decodes the signed message using the <code>MessageVerifier</code>‘s secret.\n\n<pre><code>verifier = ActiveSupport::MessageVerifier.new ...\n</code></pre>\n",null,0],["verified","ActiveSupport::Messages::Rotator::Verifier","rails/classes/ActiveSupport/Messages/Rotator/Verifier.html#method-i-verified","(*args, on_rotation: @on_rotation, **options)","",null,0],["verified_request?","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-verified_request-3F","()","<p>Returns true or false if a request is verified. Checks:\n<p>Is it a GET or HEAD request? GETs should be safe …\n",null,0],["verify","ActiveSupport::MessageVerifier","rails/classes/ActiveSupport/MessageVerifier.html#method-i-verify","(*args, **options)","<p>Decodes the signed message using the <code>MessageVerifier</code>‘s secret.\n\n<pre><code>verifier = ActiveSupport::MessageVerifier.new ...\n</code></pre>\n",null,0],["verify","Gem::Package","ruby/classes/Gem/Package.html#method-i-verify","()","<p>Verifies that this gem:\n<p>Contains a valid gem specification\n<p>Contains a contents archive\n",null,1],["verify","Gem::Package::Old","ruby/classes/Gem/Package/Old.html#method-i-verify","()","<p>Raises an exception if a security policy that verifies data is active. Old format gems cannot be verified …\n",null,1],["verify","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-verify","(chain, key = nil, digests = {}, signatures = {}, full_name = \"(unknown)\")","<p>For <code>full_name</code>, verifies the certificate <code>chain</code> is valid, the <code>digests</code> match the signatures <code>signatures</code> created …\n",null,1],["verify","Gem::Security::TrustDir","ruby/classes/Gem/Security/TrustDir.html#method-i-verify","()","<p>Make sure the trust directory exists.  If it does exist, make sure it’s actually a directory.  If …\n",null,1],["verify","OpenSSL::Netscape::SPKI","ruby/classes/OpenSSL/Netscape/SPKI.html#method-i-verify","(p1)","<p>Parameters\n<p><em>key</em> - the public key to be used for verifying the SPKI signature\n\n<p>Returns <code>true</code> if the signature …\n",null,1],["verify","OpenSSL::OCSP::BasicResponse","ruby/classes/OpenSSL/OCSP/BasicResponse.html#method-i-verify","(p1, p2, p3 = v3)","<p>Verifies the signature of the response using the given <em>certificates</em> and <em>store</em>. This works in the similar …\n",null,1],["verify","OpenSSL::OCSP::Request","ruby/classes/OpenSSL/OCSP/Request.html#method-i-verify","(p1, p2, p3 = v3)","<p>Verifies this request using the given <em>certificates</em> and <em>store</em>. <em>certificates</em> is an array of OpenSSL::X509::Certificate …\n",null,1],["verify","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-i-verify","(p1, p2, p3 = v3, p4 = v4)","",null,1],["verify","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-verify","(p1, p2, p3, p4 = v4)","<p>Verifies the <code>signature</code> for the <code>data</code> using a message digest algorithm <code>digest</code> and a public key <code>pkey</code>.\n<p>Returns …\n",null,1],["verify","OpenSSL::Timestamp::Response","ruby/classes/OpenSSL/Timestamp/Response.html#method-i-verify","(p1, p2, p3 = v3)","<p>Verifies a timestamp token by checking the signature, validating the certificate chain implied by tsa_certificate …\n",null,1],["verify","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-verify","(p1)","",null,1],["verify","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-verify","(p1)","<p>Verifies the signature of the certificate, with the public key <em>key</em>. <em>key</em> must be an instance of OpenSSL::PKey …\n",null,1],["verify","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-verify","(p1)","<p>Checks that cert signature is made with PRIVversion of this PUBLIC ‘key’\n",null,1],["verify","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-verify","(p1, p2 = v2)","<p>Performs a certificate verification on the OpenSSL::X509::Certificate <em>cert</em>.\n<p><em>chain</em> can be an array of  …\n",null,1],["verify","OpenSSL::X509::StoreContext","ruby/classes/OpenSSL/X509/StoreContext.html#method-i-verify","()","<p>Performs the certificate verification using the parameters set to <em>stctx</em>.\n<p>See also the man page X509_verify_cert …\n",null,1],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-verify-21","()","<p>Checks whether the connection to the database is still active (i.e. not stale). This is done under the …\n",null,0],["verify_api_key","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-verify_api_key","(key)","<p>Retrieves the pre-configured API key <code>key</code> or terminates interaction with an error.\n",null,1],["verify_authenticity_token","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-verify_authenticity_token","()","<p>The actual before_action that is used to verify the CSRF token. Don’t override this directly. Provide …\n",null,0],["verify_callback=","OpenSSL::X509::Store","ruby/classes/OpenSSL/X509/Store.html#method-i-verify_callback-3D","(p1)","<p>General callback for OpenSSL verify\n",null,1],["verify_certificate","Gem::Request","ruby/classes/Gem/Request.html#method-c-verify_certificate","(store_context)","",null,1],["verify_certificate_identity","OpenSSL::SSL","ruby/classes/OpenSSL/SSL.html#method-c-verify_certificate_identity","(cert, hostname)","",null,1],["verify_certificate_message","Gem::Request","ruby/classes/Gem/Request.html#method-c-verify_certificate_message","(error_number, cert)","",null,1],["verify_compaction_references","GC","ruby/classes/GC.html#method-c-verify_compaction_references","(toward: nil, double_heap: false, expand_heap: false)","<p>Verify compaction reference consistency.\n<p>This method is implementation specific.  During compaction, objects …\n",null,1],["verify_entry","Gem::Package","ruby/classes/Gem/Package.html#method-i-verify_entry","(entry)","<p>Verifies <code>entry</code> in a .gem file.\n",null,1],["verify_files","Gem::Package","ruby/classes/Gem/Package.html#method-i-verify_files","(gem)","<p>Verifies the files of the <code>gem</code>\n",null,1],["verify_internal_consistency","GC","ruby/classes/GC.html#method-c-verify_internal_consistency","()","<p>Verify internal consistency.\n<p>This method is implementation specific. Now this method checks generational …\n",null,1],["verify_pss","OpenSSL::PKey::RSA","ruby/classes/OpenSSL/PKey/RSA.html#method-i-verify_pss","(p1, p2, p3, p4 = {})","<p>Verifies <em>data</em> using the Probabilistic Signature Scheme (RSA-PSS).\n<p>The return value is <code>true</code> if the signature …\n",null,1],["verify_raw","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-verify_raw","(p1, p2, p3, p4 = v4)","<p>Verifies the <code>signature</code> for the <code>data</code> using a public key <code>pkey</code>. Unlike #verify, this method will not hash …\n",null,1],["verify_recover","OpenSSL::PKey::PKey","ruby/classes/OpenSSL/PKey/PKey.html#method-i-verify_recover","(p1, p2, p3 = v3)","<p>Recovers the signed data from <code>signature</code> using a public key <code>pkey</code>. Not all signature algorithms support …\n",null,1],["verify_result","OpenSSL::SSL::SSLSocket","ruby/classes/OpenSSL/SSL/SSLSocket.html#method-i-verify_result","()","<p>Returns the result of the peer certificates verification.  See verify(1) for error values and descriptions. …\n",null,1],["verify_same_origin_request","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-verify_same_origin_request","()","<p>If <code>verify_authenticity_token</code> was run (indicating that we have forgery protection enabled for this request) …\n",null,0],["verify_signatures","Gem::Security::Policy","ruby/classes/Gem/Security/Policy.html#method-i-verify_signatures","(spec, digests, signatures)","<p>Extracts the certificate chain from the <code>spec</code> and calls #verify to ensure the signatures and certificate …\n",null,1],["verify_spec","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-verify_spec","()","",null,1],["version","ActionCable","rails/classes/ActionCable.html#method-c-version","()","<p>Returns the currently loaded version of Action Cable as a <code>Gem::Version</code>.\n",null,0],["version","ActionMailbox","rails/classes/ActionMailbox.html#method-c-version","()","<p>Returns the currently loaded version of Action Mailbox as a <code>Gem::Version</code>.\n",null,0],["version","ActionMailer","rails/classes/ActionMailer.html#method-c-version","()","<p>Returns the currently loaded version of Action Mailer as a <code>Gem::Version</code>.\n",null,0],["version","ActionPack","rails/classes/ActionPack.html#method-c-version","()","<p>Returns the currently loaded version of Action Pack as a <code>Gem::Version</code>.\n",null,0],["version","ActionText","rails/classes/ActionText.html#method-c-version","()","<p>Returns the currently loaded version of Action Text as a <code>Gem::Version</code>.\n",null,0],["version","ActionView","rails/classes/ActionView.html#method-c-version","()","<p>Returns the currently loaded version of Action View as a <code>Gem::Version</code>.\n",null,0],["version","ActiveJob","rails/classes/ActiveJob.html#method-c-version","()","<p>Returns the currently loaded version of Active Job as a <code>Gem::Version</code>.\n",null,0],["version","ActiveModel","rails/classes/ActiveModel.html#method-c-version","()","<p>Returns the currently loaded version of Active Model as a <code>Gem::Version</code>.\n",null,0],["version","ActiveRecord","rails/classes/ActiveRecord.html#method-c-version","()","<p>Returns the currently loaded version of Active Record as a <code>Gem::Version</code>.\n",null,0],["version","ActiveStorage","rails/classes/ActiveStorage.html#method-c-version","()","<p>Returns the currently loaded version of Active Storage as a <code>Gem::Version</code>.\n",null,0],["version","ActiveSupport","rails/classes/ActiveSupport.html#method-c-version","()","<p>Returns the currently loaded version of Active Support as a <code>Gem::Version</code>.\n",null,0],["version","Rails","rails/classes/Rails.html#method-c-version","()","<p>Returns the currently loaded version of Rails as a string.\n",null,0],["version","Rails::Generators::AppBase::GemfileEntry","rails/classes/Rails/Generators/AppBase/GemfileEntry.html#method-c-version","(name, version, comment = nil)","",null,0],["version","ERB","ruby/classes/ERB.html#method-c-version","()","<p>Returns revision information for the erb.rb module.\n",null,1],["version","Gem::BasicSpecification","ruby/classes/Gem/BasicSpecification.html#method-i-version","()","<p>Version of the gem\n",null,1],["version","Gem::Resolver::ActivationRequest","ruby/classes/Gem/Resolver/ActivationRequest.html#method-i-version","()","<p>The version of this activation request’s specification\n",null,1],["version","Gem::Resolver::SpecSpecification","ruby/classes/Gem/Resolver/SpecSpecification.html#method-i-version","()","<p>The version of the gem for this specification.\n",null,1],["version","Gem::UnsatisfiableDependencyError","ruby/classes/Gem/UnsatisfiableDependencyError.html#method-i-version","()","<p>The Requirement of the unresolved dependency (not Version).\n",null,1],["version","Gem::Version","ruby/classes/Gem/Version.html#method-i-version","()","<p>A string representation of this Version.\n",null,1],["version","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-version","()","<p>Returns the version of this request. <code>1</code> is the default value.\n",null,1],["version","OpenSSL::Timestamp::TokenInfo","ruby/classes/OpenSSL/Timestamp/TokenInfo.html#method-i-version","()","<p>Returns the version number of the token info. With compliant servers, this value should be <code>1</code> if present. …\n",null,1],["version","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-version","()","",null,1],["version","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-version","()","",null,1],["version","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-version","()","",null,1],["version","OptionParser","ruby/classes/OptionParser.html#method-i-version","()","<p>Version\n",null,1],["version","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-version","()","<p>Returns the type library version.\n\n<pre><code>tlib = WIN32OLE_TYPELIB.new(&#39;Microsoft Excel 9.0 Object Library&#39;)\nputs ...\n</code></pre>\n",null,1],["version.rb.tt","","rails/files/rails/railties/lib/rails/generators/rails/plugin/templates/lib/%namespaced_name%/version_rb_tt.html","","<p>&lt;%= wrap_in_modules ‘VERSION = “0.1.0”’ %&gt;\n",null,0],["version=","Gem::Specification","ruby/classes/Gem/Specification.html#method-i-version-3D","(version)","<p>Set the version to <code>version</code>.\n",null,1],["version=","OpenSSL::Timestamp::Request","ruby/classes/OpenSSL/Timestamp/Request.html#method-i-version-3D","(p1)","<p>Sets the version number for this Request. This should be <code>1</code> for compliant servers.\n",null,1],["version=","OpenSSL::X509::CRL","ruby/classes/OpenSSL/X509/CRL.html#method-i-version-3D","(p1)","",null,1],["version=","OpenSSL::X509::Certificate","ruby/classes/OpenSSL/X509/Certificate.html#method-i-version-3D","(p1)","",null,1],["version=","OpenSSL::X509::Request","ruby/classes/OpenSSL/X509/Request.html#method-i-version-3D","(p1)","",null,1],["version_1_2","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-version_1_2","()","<p>Returns <code>true</code>; retained for compatibility.\n",null,1],["version_1_2?","Net::HTTP","ruby/classes/Net/HTTP.html#method-c-version_1_2-3F","()","<p>Returns <code>true</code>; retained for compatibility.\n",null,1],["version_control","Rails::AppBuilder","rails/classes/Rails/AppBuilder.html#method-i-version_control","()","",null,0],["version_control","Rails::PluginBuilder","rails/classes/Rails/PluginBuilder.html#method-i-version_control","()","",null,0],["vhid","Socket::Ifaddr","ruby/classes/Socket/Ifaddr.html#method-i-vhid","()","<p>Returns the vhid address of <em>ifaddr</em>. nil is returned if there is no vhid.\n",null,1],["vi_backward_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-vi_backward_word","(line, byte_pointer)","",null,1],["vi_big_backward_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-vi_big_backward_word","(line, byte_pointer)","",null,1],["vi_big_forward_end_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-vi_big_forward_end_word","(line, byte_pointer)","",null,1],["vi_big_forward_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-vi_big_forward_word","(line, byte_pointer)","",null,1],["vi_editing_mode","Reline::Core","ruby/classes/Reline/Core.html#method-i-vi_editing_mode","()","",null,1],["vi_editing_mode?","Reline::Core","ruby/classes/Reline/Core.html#method-i-vi_editing_mode-3F","()","",null,1],["vi_end_of_transmission","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-vi_end_of_transmission","(key)","",null,1],["vi_eof_maybe","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-vi_eof_maybe","(key)","",null,1],["vi_first_print","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-vi_first_print","(line)","",null,1],["vi_forward_end_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-vi_forward_end_word","(line, byte_pointer)","",null,1],["vi_forward_word","Reline::Unicode","ruby/classes/Reline/Unicode.html#method-c-vi_forward_word","(line, byte_pointer, drop_terminate_spaces = false)","",null,1],["vi_movement_mode","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-vi_movement_mode","(key)","",null,1],["video?","ActiveStorage::Blob","rails/classes/ActiveStorage/Blob.html#method-i-video-3F","()","<p>Returns true if the content_type of this blob is in the video range, like video/mp4.\n",null,0],["video_path","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-video_path","(source, options = {})","<p>Computes the path to a video asset in the public videos directory. Full paths from the document root …\n",null,0],["video_tag","ActionView::Helpers::AssetTagHelper","rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-video_tag","(*sources)","<p>Returns an HTML video tag for the <code>sources</code>. If <code>sources</code> is a string, a single video tag will be returned. …\n",null,0],["video_url","ActionView::Helpers::AssetUrlHelper","rails/classes/ActionView/Helpers/AssetUrlHelper.html#method-i-video_url","(source, options = {})","<p>Computes the full URL to a video asset in the public videos directory. This will use <code>video_path</code> internally, …\n",null,0],["view.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/mailer/templates/view_html_erb_tt.html","","<p>&lt;h1&gt;&lt;%= class_name %&gt;#&lt;%= @action %&gt;&lt;/h1&gt;\n<p>&lt;p&gt;\n\n<pre><code>&lt;%%= @greeting %&gt;, find me ...\n</code></pre>\n",null,0],["view.html.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/controller/templates/view_html_erb_tt.html","","<p>&lt;h1&gt;&lt;%= class_name %&gt;#&lt;%= @action %&gt;&lt;/h1&gt; &lt;p&gt;Find me in &lt;%= @path %&gt;&lt;/p&gt; …\n",null,0],["view.text.erb.tt","","rails/files/rails/railties/lib/rails/generators/erb/mailer/templates/view_text_erb_tt.html","","<p>&lt;%= class_name %&gt;#&lt;%= @action %&gt;\n<p>&lt;%%= @greeting %&gt;, find me in &lt;%= @path %&gt;\n",null,0],["view_assigns","AbstractController::Rendering","rails/classes/AbstractController/Rendering.html#method-i-view_assigns","()","<p>This method should return a hash with assigns. You can overwrite this configuration per controller.\n",null,0],["view_cache_dependencies","AbstractController::Caching","rails/classes/AbstractController/Caching.html#method-i-view_cache_dependencies","()","",null,0],["view_cache_dependency","AbstractController::Caching::ClassMethods","rails/classes/AbstractController/Caching/ClassMethods.html#method-i-view_cache_dependency","(&dependency)","",null,0],["view_context","ActionView::Rendering","rails/classes/ActionView/Rendering.html#method-i-view_context","()","<p>An instance of a view class. The default view class is ActionView::Base.\n<p>The view class must have the …\n",null,0],["view_context_class","ActionView::Rendering","rails/classes/ActionView/Rendering.html#method-i-view_context_class","()","",null,0],["view_context_class","ActionView::Rendering::ClassMethods","rails/classes/ActionView/Rendering/ClassMethods.html#method-i-view_context_class","()","",null,0],["view_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-view_exists-3F","(view_name)","<p>Checks to see if the view <code>view_name</code> exists on the database.\n\n<pre><code>view_exists?(:ebooks)\n</code></pre>\n",null,0],["view_paths","ActionView::ViewPaths::ClassMethods","rails/classes/ActionView/ViewPaths/ClassMethods.html#method-i-view_paths","()","<p>A list of all of the default view paths for this controller.\n",null,0],["view_paths=","ActionView::ViewPaths::ClassMethods","rails/classes/ActionView/ViewPaths/ClassMethods.html#method-i-view_paths-3D","(paths)","<p>Set the view paths.\n<p>Parameters\n<p><code>paths</code> - If a PathSet is provided, use that; otherwise, process the parameter …\n",null,0],["views","ActiveRecord::ConnectionAdapters::SchemaStatements","rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-views","()","<p>Returns an array of view names defined in the database.\n",null,0],["virtual","ActionView::TemplatePath","rails/classes/ActionView/TemplatePath.html#method-c-virtual","(name, prefix, partial)","<p>Convert name, prefix, and partial into a virtual path string\n",null,0],["visibility=","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-visibility-3D","(visibility)","<p>Sets the minimum visibility of a documented method.\n<p>Accepts <code>:public</code>, <code>:protected</code>, <code>:private</code>, <code>:nodoc</code>, or …\n",null,1],["visible?","SyntaxSuggest::CodeLine","ruby/classes/SyntaxSuggest/CodeLine.html#method-i-visible-3F","()","<p>Means the line was marked as “invisible” Confusingly, “empty” lines are visible…they …\n",null,1],["visible?","WIN32OLE::Method","ruby/classes/WIN32OLE/Method.html#method-i-visible-3F","()","<p>Returns true if the method is public.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, &#39;Workbooks&#39;) ...\n</code></pre>\n",null,1],["visible?","WIN32OLE::Type","ruby/classes/WIN32OLE/Type.html#method-i-visible-3F","()","<p>Returns true if the OLE class is public.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["visible?","WIN32OLE::Typelib","ruby/classes/WIN32OLE/Typelib.html#method-i-visible-3F","()","<p>Returns true if the type library information is not hidden. If wLibFlags of TLIBATTR is 0 or LIBFLAG_FRESTRICTED …\n",null,1],["visible?","WIN32OLE::Variable","ruby/classes/WIN32OLE/Variable.html#method-i-visible-3F","()","<p>Returns true if the variable is public.\n\n<pre><code>tobj = WIN32OLE_TYPE.new(&#39;Microsoft Excel 9.0 Object Library&#39;, ...\n</code></pre>\n",null,1],["visible_lines","SyntaxSuggest::CodeBlock","ruby/classes/SyntaxSuggest/CodeBlock.html#method-i-visible_lines","()","",null,1],["visit","Gem::SafeMarshal::Visitors::StreamPrinter","ruby/classes/Gem/SafeMarshal/Visitors/StreamPrinter.html#method-i-visit","(target)","",null,1],["visit","Gem::SafeMarshal::Visitors::ToRuby","ruby/classes/Gem/SafeMarshal/Visitors/ToRuby.html#method-i-visit","(target)","",null,1],["visit","Gem::SafeMarshal::Visitors::Visitor","ruby/classes/Gem/SafeMarshal/Visitors/Visitor.html#method-i-visit","(target)","",null,1],["visit_Array","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Array","(o)","",null,1],["visit_BasicObject","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_BasicObject","(o)","",null,1],["visit_BigDecimal","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_BigDecimal","(o)","",null,1],["visit_Class","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Class","(o)","",null,1],["visit_Complex","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Complex","(o)","",null,1],["visit_Date","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Date","(o)","",null,1],["visit_DateTime","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_DateTime","(o)","",null,1],["visit_Delegator","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Delegator","(o)","",null,1],["visit_Encoding","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Encoding","(o)","",null,1],["visit_Enumerator","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Enumerator","(o)","",null,1],["visit_Exception","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Exception","(o)","",null,1],["visit_FalseClass","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_FalseClass","(o)","",null,1],["visit_Float","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Float","(o)","",null,1],["visit_Hash","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Hash","(o)","",null,1],["visit_Integer","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Integer","(o)","",null,1],["visit_Module","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Module","(o)","",null,1],["visit_NameError","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_NameError","(o)","",null,1],["visit_NilClass","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_NilClass","(o)","",null,1],["visit_Object","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Object","(o)","",null,1],["visit_Psych_Nodes_Alias","Psych::Visitors::Emitter","ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Alias","(o)","",null,1],["visit_Psych_Nodes_Alias","Psych::Visitors::NoAliasRuby","ruby/classes/Psych/Visitors/NoAliasRuby.html#method-i-visit_Psych_Nodes_Alias","(o)","",null,1],["visit_Psych_Nodes_Alias","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Alias","(o)","",null,1],["visit_Psych_Nodes_Document","Psych::Visitors::Emitter","ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Document","(o)","",null,1],["visit_Psych_Nodes_Document","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Document","(o)","",null,1],["visit_Psych_Nodes_Mapping","Psych::Visitors::Emitter","ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Mapping","(o)","",null,1],["visit_Psych_Nodes_Mapping","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Mapping","(o)","",null,1],["visit_Psych_Nodes_Scalar","Psych::Visitors::Emitter","ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Scalar","(o)","",null,1],["visit_Psych_Nodes_Scalar","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Scalar","(o)","",null,1],["visit_Psych_Nodes_Sequence","Psych::Visitors::Emitter","ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Sequence","(o)","",null,1],["visit_Psych_Nodes_Sequence","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Sequence","(o)","",null,1],["visit_Psych_Nodes_Stream","Psych::Visitors::Emitter","ruby/classes/Psych/Visitors/Emitter.html#method-i-visit_Psych_Nodes_Stream","(o)","",null,1],["visit_Psych_Nodes_Stream","Psych::Visitors::ToRuby","ruby/classes/Psych/Visitors/ToRuby.html#method-i-visit_Psych_Nodes_Stream","(o)","",null,1],["visit_Psych_Omap","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Psych_Omap","(o)","",null,1],["visit_Psych_Set","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Psych_Set","(o)","",null,1],["visit_Range","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Range","(o)","",null,1],["visit_Rational","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Rational","(o)","",null,1],["visit_Regexp","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Regexp","(o)","",null,1],["visit_String","Gem::NoAliasYAMLTree","ruby/classes/Gem/NoAliasYAMLTree.html#method-i-visit_String","(str)","",null,1],["visit_String","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_String","(o)","",null,1],["visit_Struct","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Struct","(o)","",null,1],["visit_Symbol","Psych::Visitors::RestrictedYAMLTree","ruby/classes/Psych/Visitors/RestrictedYAMLTree.html#method-i-visit_Symbol","(sym)","",null,1],["visit_Symbol","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Symbol","(o)","",null,1],["visit_Time","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_Time","(o)","",null,1],["visit_TrueClass","Psych::Visitors::YAMLTree","ruby/classes/Psych/Visitors/YAMLTree.html#method-i-visit_TrueClass","(o)","",null,1],["visit_block","SyntaxSuggest::UnvisitedLines","ruby/classes/SyntaxSuggest/UnvisitedLines.html#method-i-visit_block","(block)","",null,1],["visit_block_node","Prism::ParseResult::Newlines","ruby/classes/Prism/ParseResult/Newlines.html#method-i-visit_block_node","(node)","<p>Permit block/lambda nodes to mark newlines within themselves.\n",null,1],["visit_call_node","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-visit_call_node","(node)","<p>Visit a CallNode node.\n",null,1],["visit_class_variable_and_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_class_variable_and_write_node","(node)","<p>@@foo &amp;&amp;= bar\n<p>becomes\n<p>@@foo &amp;&amp; @@foo = bar\n",null,1],["visit_class_variable_operator_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_class_variable_operator_write_node","(node)","<p>@@foo += bar\n<p>becomes\n<p>@@foo = @@foo + bar\n",null,1],["visit_class_variable_or_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_class_variable_or_write_node","(node)","<p>@@foo ||= bar\n<p>becomes\n<p>defined?(@@foo) ? @@foo : @@foo = bar\n",null,1],["visit_constant_and_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_constant_and_write_node","(node)","<p>Foo &amp;&amp;= bar\n<p>becomes\n<p>Foo &amp;&amp; Foo = bar\n",null,1],["visit_constant_operator_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_constant_operator_write_node","(node)","<p>Foo += bar\n<p>becomes\n<p>Foo = Foo + bar\n",null,1],["visit_constant_or_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_constant_or_write_node","(node)","<p>Foo ||= bar\n<p>becomes\n<p>defined?(Foo) ? Foo : Foo = bar\n",null,1],["visit_float_node","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-visit_float_node","(node)","<p>Visit a FloatNode node.\n",null,1],["visit_global_variable_and_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_global_variable_and_write_node","(node)","<p>$foo &amp;&amp;= bar\n<p>becomes\n<p>$foo &amp;&amp; $foo = bar\n",null,1],["visit_global_variable_operator_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_global_variable_operator_write_node","(node)","<p>$foo += bar\n<p>becomes\n<p>$foo = $foo + bar\n",null,1],["visit_global_variable_or_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_global_variable_or_write_node","(node)","<p>$foo ||= bar\n<p>becomes\n<p>defined?($foo) ? $foo : $foo = bar\n",null,1],["visit_if_node","Prism::ParseResult::Newlines","ruby/classes/Prism/ParseResult/Newlines.html#method-i-visit_if_node","(node)","<p>Mark if/unless nodes as newlines.\n",null,1],["visit_imaginary_node","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-visit_imaginary_node","(node)","<p>Visit a ImaginaryNode node.\n",null,1],["visit_instance_variable_and_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_instance_variable_and_write_node","(node)","<p>@foo &amp;&amp;= bar\n<p>becomes\n<p>@foo &amp;&amp; @foo = bar\n",null,1],["visit_instance_variable_operator_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_instance_variable_operator_write_node","(node)","<p>@foo += bar\n<p>becomes\n<p>@foo = @foo + bar\n",null,1],["visit_instance_variable_or_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_instance_variable_or_write_node","(node)","<p>@foo ||= bar\n<p>becomes\n<p>@foo || @foo = bar\n",null,1],["visit_integer_node","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-visit_integer_node","(node)","<p>Visit an IntegerNode node.\n",null,1],["visit_lambda_node","Prism::ParseResult::Newlines","ruby/classes/Prism/ParseResult/Newlines.html#method-i-visit_lambda_node","(node)","",null,1],["visit_local_variable_and_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_local_variable_and_write_node","(node)","<p>foo &amp;&amp;= bar\n<p>becomes\n<p>foo &amp;&amp; foo = bar\n",null,1],["visit_local_variable_operator_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_local_variable_operator_write_node","(node)","<p>foo += bar\n<p>becomes\n<p>foo = foo + bar\n",null,1],["visit_local_variable_or_write_node","Prism::DesugarCompiler","ruby/classes/Prism/DesugarCompiler.html#method-i-visit_local_variable_or_write_node","(node)","<p>foo ||= bar\n<p>becomes\n<p>foo || foo = bar\n",null,1],["visit_program_node","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-visit_program_node","(node)","<p>Visit a ProgramNode node.\n",null,1],["visit_rational_node","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-visit_rational_node","(node)","<p>Visit a RationalNode node.\n",null,1],["visit_statements_node","Prism::ParseResult::Newlines","ruby/classes/Prism/ParseResult/Newlines.html#method-i-visit_statements_node","(node)","<p>Permit statements lists to mark newlines within themselves.\n",null,1],["visit_statements_node","Prism::RipperCompat","ruby/classes/Prism/RipperCompat.html#method-i-visit_statements_node","(node)","<p>Visit a StatementsNode node.\n",null,1],["visit_unless_node","Prism::ParseResult::Newlines","ruby/classes/Prism/ParseResult/Newlines.html#method-i-visit_unless_node","(node)","",null,1],["wait","ActiveSupport::Notifications::Fanout","rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-wait","()","<p>This is a sync queue, so there is no waiting.\n",null,0],["wait","IO","ruby/classes/IO.html#method-i-wait","(*args)","<p>Waits until the IO becomes ready for the specified events and returns the subset of events that become …\n",null,1],["wait","MonitorMixin::ConditionVariable","ruby/classes/MonitorMixin/ConditionVariable.html#method-i-wait","(timeout = nil)","<p>Releases the lock held in the associated monitor and waits; reacquires the lock on wakeup.\n<p>If <code>timeout</code> …\n",null,1],["wait","Process","ruby/classes/Process.html#method-c-wait","(*args)","<p>Waits for a suitable child process to exit, returns its process ID, and sets <code>$?</code> to a Process::Status …\n",null,1],["wait","Process::Status","ruby/classes/Process/Status.html#method-c-wait","(*args)","<p>Like Process.wait, but returns a Process::Status object (instead of an integer pid or nil); see Process.wait …\n",null,1],["wait","Ractor::Selector","ruby/classes/Ractor/Selector.html#method-i-wait","(p1 = {})","",null,1],["wait","Rinda::WaitTemplateEntry","ruby/classes/Rinda/WaitTemplateEntry.html#method-i-wait","()","",null,1],["wait","Thread::ConditionVariable","ruby/classes/Thread/ConditionVariable.html#method-i-wait","(p1, p2 = v2)","<p>Releases the lock held in <code>mutex</code> and waits; reacquires the lock on wakeup.\n<p>If <code>timeout</code> is given, this method …\n",null,1],["wait2","Process","ruby/classes/Process.html#method-c-wait2","(*args)","<p>Like Process.waitpid, but returns an array containing the child process <code>pid</code> and Process::Status <code>status</code> …\n",null,1],["wait_for_cond","Monitor","ruby/classes/Monitor.html#method-i-wait_for_cond","(p1, p2)","",null,1],["wait_for_otp_code","Gem::GemcutterUtilities::WebauthnListener","ruby/classes/Gem/GemcutterUtilities/WebauthnListener.html#method-i-wait_for_otp_code","(server)","",null,1],["wait_priority","IO","ruby/classes/IO.html#method-i-wait_priority","(*args)","<p>Waits until IO is priority and returns a truthy value or a falsy value when times out. Priority data …\n",null,1],["wait_readable","IO","ruby/classes/IO.html#method-i-wait_readable","(*args)","<p>Waits until IO is readable and returns a truthy value, or a falsy value when times out.  Returns a truthy …\n",null,1],["wait_until","MonitorMixin::ConditionVariable","ruby/classes/MonitorMixin/ConditionVariable.html#method-i-wait_until","()","<p>Calls wait repeatedly until the given block yields a truthy value.\n",null,1],["wait_while","MonitorMixin::ConditionVariable","ruby/classes/MonitorMixin/ConditionVariable.html#method-i-wait_while","()","<p>Calls wait repeatedly while the given block yields a truthy value.\n",null,1],["wait_writable","IO","ruby/classes/IO.html#method-i-wait_writable","(*args)","<p>Waits until IO is writable and returns a truthy value or a falsy value when times out.\n<p>You must require …\n",null,1],["waitall","Process","ruby/classes/Process.html#method-c-waitall","()","<p>Waits for all children, returns an array of 2-element arrays; each subarray contains the integer pid …\n",null,1],["waitpid","Process","ruby/classes/Process.html#method-c-waitpid","(*args)","<p>Waits for a suitable child process to exit, returns its process ID, and sets <code>$?</code> to a Process::Status …\n",null,1],["waitpid2","Process","ruby/classes/Process.html#method-c-waitpid2","(*args)","<p>Like Process.waitpid, but returns an array containing the child process <code>pid</code> and Process::Status <code>status</code> …\n",null,1],["wakeup","Thread","ruby/classes/Thread.html#method-i-wakeup","()","<p>Marks a given thread as eligible for scheduling, however it may still remain blocked on I/O.\n<p><strong>Note:</strong> This …\n",null,1],["warmup","Process","ruby/classes/Process.html#method-c-warmup","()","<p>Notify the Ruby virtual machine that the boot sequence is finished, and that now is a good time to optimize …\n",null,1],["warn","ActiveSupport::Deprecation::Reporting","rails/classes/ActiveSupport/Deprecation/Reporting.html#method-i-warn","(message = nil, callstack = nil)","<p>Outputs a deprecation warning to the output configured by <code>ActiveSupport::Deprecation.behavior</code>.\n\n<pre><code>ActiveSupport::Deprecation.warn(&#39;something ...\n</code></pre>\n",null,0],["warn","Kernel","ruby/classes/Kernel.html#method-i-warn","(*msgs, uplevel: nil, category: nil)","<p>If warnings have been disabled (for example with the <code>-W0</code> flag), does nothing.  Otherwise, converts each …\n",null,1],["warn","Logger","ruby/classes/Logger.html#method-i-warn","(progname = nil, &block)","<p>Equivalent to calling #add with severity <code>Logger::WARN</code>.\n",null,1],["warn","OptionParser","ruby/classes/OptionParser.html#method-i-warn","(mesg = $!)","",null,1],["warn","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-warn","(message)","<p>Displays a warning using Kernel#warn if we’re being verbose\n",null,1],["warn","RDoc::Parser::Ruby","ruby/classes/RDoc/Parser/Ruby.html#method-i-warn","(message)","<p>Prints <code>message</code> to +$stderr+ unless we’re being quiet\n",null,1],["warn","Syslog::Logger","ruby/classes/Syslog/Logger.html#method-i-warn","","<p>Logs a <code>message</code> at the warn (syslog notice) log level, or logs the message returned from the block.\n",null,1],["warn","Warning","ruby/classes/Warning.html#method-i-warn","(p1, p2 = {})","<p>Writes warning message <code>msg</code> to $stderr. This method is called by Ruby for all emitted warnings. A <code>category</code> …\n",null,1],["warn!","Logger","ruby/classes/Logger.html#method-i-warn-21","()","<p>Sets the log level to Logger::WARN. See Log Level.\n",null,1],["warn?","Logger","ruby/classes/Logger.html#method-i-warn-3F","()","<p>Returns <code>true</code> if the log level allows entries with severity Logger::WARN to be written, <code>false</code> otherwise. …\n",null,1],["warning_without_suggested_alternatives","Gem::Commands::QueryCommand","ruby/classes/Gem/Commands/QueryCommand.html#method-i-warning_without_suggested_alternatives","()","",null,1],["watchable_dirs","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-watchable_dirs","()","<p>Add directories that should be watched for change. The key of the hashes should be directories and the …\n",null,0],["watchable_files","Rails::Railtie::Configuration","rails/classes/Rails/Railtie/Configuration.html#method-i-watchable_files","()","<p>Add files that should be watched for change.\n",null,0],["wday","Date","ruby/classes/Date.html#method-i-wday","()","<p>Returns the day of week in range (0..6); Sunday is 0:\n\n<pre><code>Date.new(2001, 2, 3).wday # =&gt; 6\n</code></pre>\n",null,1],["wday","Time","ruby/classes/Time.html#method-i-wday","()","<p>Returns the integer day of the week for <code>self</code>, in range (0..6), with Sunday as zero.\n\n<pre><code>t = Time.new(2000, ...\n</code></pre>\n",null,1],["weak_etag=","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-weak_etag-3D","(weak_validators)","",null,0],["weak_etag?","ActionDispatch::Http::Cache::Response","rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-weak_etag-3F","()","<p>True if an ETag is set, and it’s a weak validator (preceded with <code>W/</code>).\n",null,0],["weakref_alive?","WeakRef","ruby/classes/WeakRef.html#method-i-weakref_alive-3F","()","<p>Returns true if the referenced object is still alive.\n",null,1],["wednesday?","Date","ruby/classes/Date.html#method-i-wednesday-3F","()","<p>Returns <code>true</code> if <code>self</code> is a Wednesday, <code>false</code> otherwise.\n",null,1],["wednesday?","Time","ruby/classes/Time.html#method-i-wednesday-3F","()","<p>Returns <code>true</code> if <code>self</code> represents a Wednesday, <code>false</code> otherwise:\n\n<pre><code>t = Time.utc(2000, 1, 5) # =&gt; 2000-01-05 ...\n</code></pre>\n",null,1],["week","Numeric","rails/classes/Numeric.html#method-i-week","()","",null,0],["week_field","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-week_field","","<p>Wraps ActionView::Helpers::FormHelper#week_field for form builders:\n\n<pre><code>&lt;%= form_with model: @user do |f| ...\n</code></pre>\n",null,0],["week_field","ActionView::Helpers::FormHelper","rails/classes/ActionView/Helpers/FormHelper.html#method-i-week_field","(object_name, method, options = {})","<p>Returns a text_field of type “week”.\n\n<pre><code>week_field(&quot;user&quot;, &quot;born_on&quot;)\n# =&gt; &lt;input id=&quot;user_born_on&quot; ...\n</code></pre>\n",null,0],["week_field_tag","ActionView::Helpers::FormTagHelper","rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-week_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “week”.\n<p>Options\n<p>Supports the same options as #text_field_tag. Additionally …\n",null,0],["weekday_options_for_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-weekday_options_for_select","(selected = nil, index_as_value: false, day_format: :day_names, beginning_of_week: Date.beginning_of_week)","<p>Returns a string of option tags for the days of the week.\n<p>Options:\n<p><code>:index_as_value</code> - Defaults to false, …\n",null,0],["weekday_select","ActionView::Helpers::FormBuilder","rails/classes/ActionView/Helpers/FormBuilder.html#method-i-weekday_select","(method, options = {}, html_options = {})","<p>Wraps ActionView::Helpers::FormOptionsHelper#weekday_select for form builders:\n\n<pre><code>&lt;%= form_for @user do |f| ...\n</code></pre>\n",null,0],["weekday_select","ActionView::Helpers::FormOptionsHelper","rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-weekday_select","(object, method, options = {}, html_options = {}, &block)","<p>Returns select and option tags for the given object and method, using <code>weekday_options_for_select</code> to generate …\n",null,0],["weeks","Numeric","rails/classes/Numeric.html#method-i-weeks","()","<p>Returns a Duration instance matching the number of weeks provided.\n\n<pre><code>2.weeks # =&gt; 2 weeks\n</code></pre>\n",null,0],["weeks_ago","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-weeks_ago","(weeks)","<p>Returns a new date/time the specified number of weeks ago.\n",null,0],["weeks_since","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-weeks_since","(weeks)","<p>Returns a new date/time the specified number of weeks in the future.\n",null,0],["when_invoked","Gem::Command","ruby/classes/Gem/Command.html#method-i-when_invoked","(&block)","<p>Call the given block when invoked.\n<p>Normal command invocations just executes the <code>execute</code> method of the …\n",null,1],["where","ActionCable::RemoteConnections","rails/classes/ActionCable/RemoteConnections.html#method-i-where","(identifier)","",null,0],["where","ActiveModel::Errors","rails/classes/ActiveModel/Errors.html#method-i-where","(attribute, type = nil, **options)","<p>Search for errors matching <code>attribute</code>, <code>type</code>, or <code>options</code>.\n<p>Only supplied params will be matched.\n\n<pre><code>person.errors.where(:name) ...\n</code></pre>\n",null,0],["where","ActiveRecord::Encryption::ExtendedDeterministicQueries::RelationQueries","rails/classes/ActiveRecord/Encryption/ExtendedDeterministicQueries/RelationQueries.html#method-i-where","(*args)","",null,0],["where","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-where","(*args)","<p>Returns a new relation, which is the result of filtering the current relation according to the conditions …\n",null,0],["which","Bundler","ruby/classes/Bundler.html#method-c-which","(executable)","",null,1],["which_to_update","Gem::Commands::UpdateCommand","ruby/classes/Gem/Commands/UpdateCommand.html#method-i-which_to_update","(highest_installed_gems, gem_names)","",null,1],["while_preventing_writes","ActiveRecord::ConnectionAdapters::ConnectionHandler","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-while_preventing_writes","(enabled = true)","<p>Prevent writing to the database regardless of role.\n<p>In some cases you may want to prevent writes to the …\n",null,0],["while_preventing_writes","ActiveRecord::ConnectionHandling","rails/classes/ActiveRecord/ConnectionHandling.html#method-i-while_preventing_writes","(enabled = true, &block)","<p>Prevent writing to the database regardless of role.\n<p>In some cases you may want to prevent writes to the …\n",null,0],["whole_buffer","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-whole_buffer","()","",null,1],["whole_lines","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-whole_lines","()","",null,1],["why","SyntaxSuggest::ExplainSyntax","ruby/classes/SyntaxSuggest/ExplainSyntax.html#method-i-why","(miss)","<p>Converts a missing string to an human understandable explanation.\n<p>Example:\n\n<pre><code>explain.why(&quot;}&quot;)\n# =&gt; &quot;Unmatched ...\n</code></pre>\n",null,1],["why_not_ok?","Gem::DependencyList","ruby/classes/Gem/DependencyList.html#method-i-why_not_ok-3F","(quick = false)","",null,1],["width","IRB::Debug::UI","ruby/classes/IRB/Debug/UI.html#method-i-width","()","",null,1],["width=","Reline::LineEditor::Dialog","ruby/classes/Reline/LineEditor/Dialog.html#method-i-width-3D","(v)","",null,1],["width_for","PP","ruby/classes/PP.html#method-c-width_for","(out)","<p>Returns the usable width for <code>out</code>. As the width of <code>out</code>:\n<p>If <code>out</code> is assigned to a tty device, its width is …\n",null,1],["will_save_change_to_attribute?","ActiveRecord::AttributeMethods::Dirty","rails/classes/ActiveRecord/AttributeMethods/Dirty.html#method-i-will_save_change_to_attribute-3F","(attr_name, **options)","<p>Will this attribute change the next time we save?\n<p>This method is useful in validations and before callbacks …\n",null,0],["win32_last_error","Fiddle","ruby/classes/Fiddle.html#method-c-win32_last_error","()","<p>Returns the last win32 <code>Error</code> of the current executing <code>Thread</code> or nil if none\n",null,1],["win32_last_error=","Fiddle","ruby/classes/Fiddle.html#method-c-win32_last_error-3D","(error)","<p>Sets the last win32 <code>Error</code> of the current executing <code>Thread</code> to <code>error</code>\n",null,1],["win32_last_socket_error","Fiddle","ruby/classes/Fiddle.html#method-c-win32_last_socket_error","()","<p>Returns the last win32 socket <code>Error</code> of the current executing <code>Thread</code> or nil if none\n",null,1],["win32_last_socket_error=","Fiddle","ruby/classes/Fiddle.html#method-c-win32_last_socket_error-3D","(error)","<p>Sets the last win32 socket <code>Error</code> of the current executing <code>Thread</code> to <code>error</code>\n",null,1],["win64?","Win32::Registry::API","ruby/classes/Win32/Registry/API.html#method-i-win64-3F","()","",null,1],["win?","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-win-3F","()","",null,1],["win?","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-win-3F","()","",null,1],["win?","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-win-3F","()","",null,1],["win_legacy_console?","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-win_legacy_console-3F","()","",null,1],["win_platform?","Gem","ruby/classes/Gem.html#method-c-win_platform-3F","()","<p>Is this a windows platform?\n",null,1],["windows","","ruby/files/ruby/doc/windows_md.html","","<p>Windows\n<p>Ruby supports a few native build platforms for Windows.\n<p>mswin: Build using Microsoft Visual C++ …\n",null,1],["windows_stub_script","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-windows_stub_script","(bindir, bin_file_name)","<p>return the stub script text used to launch the true Ruby script\n",null,1],["winsize","IO","ruby/classes/IO.html#method-i-winsize","()","<p>Returns console size.\n<p>You must require ‘io/console’ to use this method.\n",null,1],["winsize","IRB::InputMethod","ruby/classes/IRB/InputMethod.html#method-i-winsize","()","",null,1],["winsize=","IO","ruby/classes/IO.html#method-i-winsize-3D","(p1)","<p>Tries to set console size.  The effect depends on the platform and the running environment.\n<p>You must require …\n",null,1],["with","AbstractController::Railties::RoutesHelpers","rails/classes/AbstractController/Railties/RoutesHelpers.html#method-c-with","(routes, include_path_helpers = true)","",null,0],["with","ActionMailer::Parameterized::ClassMethods","rails/classes/ActionMailer/Parameterized/ClassMethods.html#method-i-with","(params)","<p>Provide the parameters to the mailer in order to use them in the instance methods and callbacks.\n\n<pre><code>InvitationsMailer.with(inviter: ...\n</code></pre>\n",null,0],["with","ActiveSupport::Cache::ConnectionPoolLike","rails/classes/ActiveSupport/Cache/ConnectionPoolLike.html#method-i-with","()","",null,0],["with","Data","ruby/classes/Data.html#method-i-with","(p1 = {})","<p>Returns a shallow copy of <code>self</code> — the instance variables of <code>self</code> are copied, but not the objects they …\n",null,1],["with","OptionParser","ruby/classes/OptionParser.html#method-c-with","(*args, &block)","<p>Initializes a new instance and evaluates the optional block in context of the instance. Arguments <code>args</code> …\n",null,1],["with_all_rich_text","ActionText::Attribute","rails/classes/ActionText/Attribute.html#method-i-with_all_rich_text","()","<p>Eager load all dependent RichText models in bulk.\n",null,0],["with_backend","ActiveSupport::XmlMini","rails/classes/ActiveSupport/XmlMini.html#method-i-with_backend","(name)","",null,0],["with_clean_env","Bundler","ruby/classes/Bundler.html#method-c-with_clean_env","()","<p>@deprecated Use ‘with_unbundled_env` instead\n",null,1],["with_config","MakeMakefile","ruby/classes/MakeMakefile.html#method-i-with_config","(config, default=nil)","<p>Tests for the presence of a <code>--with-</code><em>config</em> or <code>--without-</code><em>config</em> option.  Returns <code>true</code> if the with option …\n",null,1],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-with_connection","()","<p>If a connection obtained through #connection or #with_connection methods already exists yield it to the …\n",null,0],["with_context","ActiveRecord::Encryption::Scheme","rails/classes/ActiveRecord/Encryption/Scheme.html#method-i-with_context","(&block)","",null,0],["with_database_connections","ActionCable::Server::Worker::ActiveRecordConnectionManagement","rails/classes/ActionCable/Server/Worker/ActiveRecordConnectionManagement.html#method-i-with_database_connections","(&block)","",null,0],["with_default_scope","ActionDispatch::Routing::Mapper::Base","rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-with_default_scope","(scope, &block)","",null,0],["with_defaults","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-with_defaults","(other_hash)","",null,0],["with_defaults","ActionController::Renderer","rails/classes/ActionController/Renderer.html#method-i-with_defaults","(defaults)","<p>Create a new renderer for the same controller but with new defaults.\n",null,0],["with_defaults","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_defaults","(other_hash)","",null,0],["with_defaults","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_defaults","(other_hash)","",null,0],["with_defaults","Hash","rails/classes/Hash.html#method-i-with_defaults","(other_hash)","",null,0],["with_defaults!","ActionController::Parameters","rails/classes/ActionController/Parameters.html#method-i-with_defaults-21","(other_hash)","",null,0],["with_defaults!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_defaults-21","(other_hash)","",null,0],["with_defaults!","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_defaults-21","(other_hash)","",null,0],["with_defaults!","Hash","rails/classes/Hash.html#method-i-with_defaults-21","(other_hash)","",null,0],["with_encryption_context","ActiveRecord::Encryption::Contexts","rails/classes/ActiveRecord/Encryption/Contexts.html#method-i-with_encryption_context","(properties)","<p>Configures a custom encryption context to use when running the provided block of code.\n<p>It supports overriding …\n",null,0],["with_full_attributes","ActionText::Attachment","rails/classes/ActionText/Attachment.html#method-i-with_full_attributes","()","",null,0],["with_indentation","Rails::Generators::Actions","rails/classes/Rails/Generators/Actions.html#method-i-with_indentation","(&block)","<p>Manage <code>Gemfile</code> indentation for a DSL action block\n",null,0],["with_index","Enumerator","ruby/classes/Enumerator.html#method-i-with_index","(*args)","<p>Iterates the given block for each element with an index, which starts from <code>offset</code>.  If no block is given, …\n",null,1],["with_index","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-with_index","(p1 = v1)","<p>If a block is given, returns a lazy enumerator that will iterate over the given block for each element …\n",null,1],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,0],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,0],["with_indifferent_access","Hash","rails/classes/Hash.html#method-i-with_indifferent_access","()","<p>Returns an ActiveSupport::HashWithIndifferentAccess out of its receiver:\n\n<pre><code>{ a: 1 }.with_indifferent_access[&#39;a&#39;] ...\n</code></pre>\n",null,0],["with_level","Logger","ruby/classes/Logger.html#method-i-with_level","(severity)","<p>Adjust the log level during the block execution for the current Fiber only\n\n<pre><code>logger.with_level(:debug) do ...\n</code></pre>\n",null,1],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-with_local_cache","(&block)","<p>Use a local cache for the duration of block.\n",null,0],["with_lock","ActiveRecord::Locking::Pessimistic","rails/classes/ActiveRecord/Locking/Pessimistic.html#method-i-with_lock","(*args)","<p>Wraps the passed block in a transaction, locking the object before yielding. You can pass the SQL locking …\n",null,0],["with_name","Exhibit","rails/classes/Exhibit.html#method-c-with_name","()","",null,0],["with_notes","Exhibit","rails/classes/Exhibit.html#method-c-with_notes","()","",null,0],["with_object","Enumerator","ruby/classes/Enumerator.html#method-i-with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object, <code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,1],["with_options","Object","rails/classes/Object.html#method-i-with_options","(options, &block)","<p>An elegant way to factor duplication out of options passed to a series of method calls. Each method called …\n",null,0],["with_original_env","Bundler","ruby/classes/Bundler.html#method-c-with_original_env","()","<p>Run block with environment present before Bundler was activated\n",null,1],["with_raw_input","Reline::ANSI","ruby/classes/Reline/ANSI.html#method-c-with_raw_input","()","",null,1],["with_raw_input","Reline::GeneralIO","ruby/classes/Reline/GeneralIO.html#method-c-with_raw_input","()","",null,1],["with_raw_input","Reline::Windows","ruby/classes/Reline/Windows.html#method-c-with_raw_input","()","",null,1],["with_response","Gem::GemcutterUtilities","ruby/classes/Gem/GemcutterUtilities.html#method-i-with_response","(response, error_prefix = nil)","<p>If <code>response</code> is an HTTP Success (2XX) response, yields the response if a block was given or shows the …\n",null,1],["with_scope_level","ActionDispatch::Routing::Mapper::Resources","rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-with_scope_level","(kind)","",null,0],["with_unbundled_env","Bundler","ruby/classes/Bundler.html#method-c-with_unbundled_env","()","<p>Run block with all bundler-related variables removed\n",null,1],["with_warnings","Kernel","rails/classes/Kernel.html#method-i-with_warnings","(flag)","<p>Sets $VERBOSE for the duration of the block and back to its original value afterwards.\n",null,0],["without","ActiveRecord::QueryMethods","rails/classes/ActiveRecord/QueryMethods.html#method-i-without","(*records)","",null,0],["without","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-without","(*keys)","",null,0],["without","ActiveSupport::HashWithIndifferentAccess","rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-without","(*keys)","",null,0],["without","Array","rails/classes/Array.html#method-i-without","(*elements)","",null,0],["without","Enumerable","rails/classes/Enumerable.html#method-i-without","(*elements)","",null,0],["without_encryption","ActiveRecord::Encryption::Contexts","rails/classes/ActiveRecord/Encryption/Contexts.html#method-i-without_encryption","(&block)","<p>Runs the provided block in an encryption context where encryption is disabled:\n<p>Reading encrypted content …\n",null,0],["without_modules","ActionController::API","rails/classes/ActionController/API.html#method-c-without_modules","(*modules)","<p>Shortcut helper that returns all the ActionController::API modules except the ones passed as arguments: …\n",null,0],["without_modules","ActionController::Base","rails/classes/ActionController/Base.html#method-c-without_modules","(*modules)","<p>Shortcut helper that returns all the modules included in ActionController::Base except the ones passed …\n",null,0],["word_wrap","ActionView::Helpers::TextHelper","rails/classes/ActionView/Helpers/TextHelper.html#method-i-word_wrap","(text, line_width: 80, break_sequence: \"\\n\")","<p>Wraps the <code>text</code> into lines no longer than <code>line_width</code> width. This method breaks on the first whitespace …\n",null,0],["wordy","Gem::PlatformMismatch","ruby/classes/Gem/PlatformMismatch.html#method-i-wordy","()","<p>A wordy description of the error.\n",null,1],["wordy","Gem::SourceFetchProblem","ruby/classes/Gem/SourceFetchProblem.html#method-i-wordy","()","<p>An English description of the error.\n",null,1],["worker_pool","ActionCable::Server::Base","rails/classes/ActionCable/Server/Base.html#method-i-worker_pool","()","<p>The worker pool is where we run connection callbacks and channel actions. We do as little as possible …\n",null,0],["workspaces","IRB::Context","ruby/classes/IRB/Context.html#method-i-workspaces","()","<p>WorkSpaces in the current stack\n",null,1],["world_readable?","File","ruby/classes/File.html#method-c-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer representing the file permission bits of <em>file_name</em> …\n",null,1],["world_readable?","File::Stat","ruby/classes/File/Stat.html#method-i-world_readable-3F","()","<p>If <em>stat</em> is readable by others, returns an integer representing the file permission bits of <em>stat</em>. Returns …\n",null,1],["world_readable?","FileTest","ruby/classes/FileTest.html#method-i-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer representing the file permission bits of <em>file_name</em> …\n",null,1],["world_readable?","Pathname","ruby/classes/Pathname.html#method-i-world_readable-3F","()","<p>See FileTest.world_readable?.\n",null,1],["world_writable?","File","ruby/classes/File.html#method-c-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer representing the file permission bits of <em>file_name</em> …\n",null,1],["world_writable?","File::Stat","ruby/classes/File/Stat.html#method-i-world_writable-3F","()","<p>If <em>stat</em> is writable by others, returns an integer representing the file permission bits of <em>stat</em>. Returns …\n",null,1],["world_writable?","FileTest","ruby/classes/FileTest.html#method-i-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer representing the file permission bits of <em>file_name</em> …\n",null,1],["world_writable?","Pathname","ruby/classes/Pathname.html#method-i-world_writable-3F","()","<p>See FileTest.world_writable?.\n",null,1],["wrap","ActionText::Fragment","rails/classes/ActionText/Fragment.html#method-c-wrap","(fragment_or_html)","",null,0],["wrap","ActiveStorage::Filename","rails/classes/ActiveStorage/Filename.html#method-c-wrap","(filename)","<p>Returns a Filename instance based on the given filename. If the filename is a Filename, it is returned …\n",null,0],["wrap","ActiveStorage::Variation","rails/classes/ActiveStorage/Variation.html#method-c-wrap","(variator)","<p>Returns a Variation instance based on the given variator. If the variator is a Variation, it is returned …\n",null,0],["wrap","ActiveSupport::ExecutionWrapper","rails/classes/ActiveSupport/ExecutionWrapper.html#method-c-wrap","()","<p>Perform the work in the supplied block as an execution.\n",null,0],["wrap","ActiveSupport::Reloader","rails/classes/ActiveSupport/Reloader.html#method-c-wrap","()","<p>Run the supplied block as a work unit, reloading code as needed\n",null,0],["wrap","Array","rails/classes/Array.html#method-c-wrap","(object)","<p>Wraps its argument in an array unless it is already an array (or array-like).\n<p>Specifically:\n<p>If the argument …\n",null,0],["wrap","Mail::Address","rails/classes/Mail/Address.html#method-c-wrap","(address)","",null,0],["wrap","Gem::Command","ruby/classes/Gem/Command.html#method-i-wrap","(text, width)","<p>Wraps <code>text</code> to <code>width</code>\n",null,1],["wrap","Gem::Package::DigestIO","ruby/classes/Gem/Package/DigestIO.html#method-c-wrap","(io, digests)","<p>Wraps <code>io</code> and updates digest for each of the digest algorithms in the <code>digests</code> Hash.  Returns the digests …\n",null,1],["wrap","JSON::JSONError","ruby/classes/JSON/JSONError.html#method-c-wrap","(exception)","",null,1],["wrap","RDoc::Text","ruby/classes/RDoc/Text.html#method-i-wrap","(txt, line_len = 76)","<p>Wraps <code>txt</code> to <code>line_len</code>\n",null,1],["wrap","Zlib::GzipFile","ruby/classes/Zlib/GzipFile.html#method-c-wrap","(*args)","<p>Creates a GzipReader or GzipWriter associated with <code>io</code>, passing in any necessary extra options, and executes …\n",null,1],["wrap_method_call","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-wrap_method_call","(method_symbol, method_obj, key, with_operator = false)","",null,1],["wrap_parameters","ActionController::ParamsWrapper::Options::ClassMethods","rails/classes/ActionController/ParamsWrapper/Options/ClassMethods.html#method-i-wrap_parameters","(name_or_model_or_options, options = {})","<p>Sets the name of the wrapper key, or the model which <code>ParamsWrapper</code> would use to determine the attribute …\n",null,0],["wrap_with_namespace","Rails::Generators::Base","rails/classes/Rails/Generators/Base.html#method-i-wrap_with_namespace","(content)","",null,0],["writable?","File","ruby/classes/File.html#method-c-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective user and group id of this process. See eaccess(3). …\n",null,1],["writable?","File::Stat","ruby/classes/File/Stat.html#method-i-writable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the effective user id of this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).writable? ...\n</code></pre>\n",null,1],["writable?","FileTest","ruby/classes/FileTest.html#method-i-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective user and group id of this process. See eaccess(3). …\n",null,1],["writable?","Pathname","ruby/classes/Pathname.html#method-i-writable-3F","()","<p>See FileTest.writable?.\n",null,1],["writable_real?","File","ruby/classes/File.html#method-c-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user and group id of this process. See access(3). …\n",null,1],["writable_real?","File::Stat","ruby/classes/File/Stat.html#method-i-writable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the real user id of this process.\n\n<pre><code>File.stat(&quot;testfile&quot;).writable_real? ...\n</code></pre>\n",null,1],["writable_real?","FileTest","ruby/classes/FileTest.html#method-i-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user and group id of this process. See access(3). …\n",null,1],["writable_real?","Pathname","ruby/classes/Pathname.html#method-i-writable_real-3F","()","<p>See FileTest.writable_real?.\n",null,1],["write","ActionController::Live::SSE","rails/classes/ActionController/Live/SSE.html#method-i-write","(object, options = {})","",null,0],["write","ActionDispatch::RailsEntityStore","rails/classes/ActionDispatch/RailsEntityStore.html#method-i-write","(body)","",null,0],["write","ActionDispatch::RailsMetaStore","rails/classes/ActionDispatch/RailsMetaStore.html#method-i-write","(key, value)","",null,0],["write","ActionDispatch::Response","rails/classes/ActionDispatch/Response.html#method-i-write","(string)","",null,0],["write","ActiveRecord::Migration","rails/classes/ActiveRecord/Migration.html#method-i-write","(text = \"\")","",null,0],["write","ActiveSupport::Cache::MemCacheStore","rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-write","","<p>Behaves the same as ActiveSupport::Cache::Store#write, but supports additional options specific to memcached. …\n",null,0],["write","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-write","(name, value, options = nil)","<p>Writes the value to the cache with the key. The value must be supported by the <code>coder</code>‘s <code>dump</code> and  …\n",null,0],["write","ActiveSupport::EncryptedConfiguration","rails/classes/ActiveSupport/EncryptedConfiguration.html#method-i-write","(contents)","",null,0],["write","ActiveSupport::EncryptedFile","rails/classes/ActiveSupport/EncryptedFile.html#method-i-write","(contents)","",null,0],["write","ARGF","ruby/classes/ARGF.html#method-i-write","(p1)","<p>Writes <em>string</em> if inplace mode.\n",null,1],["write","Fiddle::Pointer","ruby/classes/Fiddle/Pointer.html#method-c-write","(p1, p2)","<p>Write bytes in <code>str</code> to the location pointed to by <code>address</code>.\n",null,1],["write","Gem::ConfigFile","ruby/classes/Gem/ConfigFile.html#method-i-write","()","<p>Writes out this config file, replacing its source.\n",null,1],["write","Gem::Package::DigestIO","ruby/classes/Gem/Package/DigestIO.html#method-i-write","(data)","<p>Writes <code>data</code> to the underlying IO and updates the digests\n",null,1],["write","Gem::Package::TarWriter::BoundedStream","ruby/classes/Gem/Package/TarWriter/BoundedStream.html#method-i-write","(data)","<p>Writes <code>data</code> onto the IO, raising a FileOverflow exception if the number of bytes will be more than #limit …\n",null,1],["write","Gem::Package::TarWriter::RestrictedStream","ruby/classes/Gem/Package/TarWriter/RestrictedStream.html#method-i-write","(data)","<p>Writes <code>data</code> onto the IO\n",null,1],["write","Gem::RequestSet::Lockfile","ruby/classes/Gem/RequestSet/Lockfile.html#method-i-write","()","<p>Writes the lock file alongside the gem dependencies file\n",null,1],["write","Gem::Security","ruby/classes/Gem/Security.html#method-c-write","(pemmable, path, permissions = 0o600, passphrase = nil, cipher = KEY_CIPHER)","<p>Writes <code>pemmable</code>, which must respond to <code>to_pem</code> to <code>path</code> with the given <code>permissions</code>. If passed <code>cipher</code> and …\n",null,1],["write","IO","ruby/classes/IO.html#method-c-write","(*args)","<p>Opens the stream, writes the given <code>data</code> to it, and closes the stream; returns the number of bytes written. …\n",null,1],["write","IO","ruby/classes/IO.html#method-i-write","(*args)","<p>Writes each of the given <code>objects</code> to <code>self</code>, which must be opened for writing (see Access Modes); returns …\n",null,1],["write","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-write","(*args)","<p>Write at least <code>length</code> bytes from the buffer starting at <code>offset</code>, into the <code>io</code>. If an error occurs, return …\n",null,1],["write","Logger::LogDevice","ruby/classes/Logger/LogDevice.html#method-i-write","(message)","",null,1],["write","Net::WriteAdapter","ruby/classes/Net/WriteAdapter.html#method-i-write","(str)","",null,1],["write","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-write","(*s)","<p>Writes <em>s</em> to the stream.  If the argument is not a String it will be converted using <code>.to_s</code> method.  Returns …\n",null,1],["write","Pathname","ruby/classes/Pathname.html#method-i-write","(p1 = v1, p2 = v2, p3 = v3)","<p>Writes <code>contents</code> to the file.\n<p>See File.write.\n",null,1],["write","Rinda::TupleSpace","ruby/classes/Rinda/TupleSpace.html#method-i-write","(tuple, sec=nil)","<p>Adds <code>tuple</code>\n",null,1],["write","Rinda::TupleSpaceProxy","ruby/classes/Rinda/TupleSpaceProxy.html#method-i-write","(tuple, sec=nil)","<p>Adds <code>tuple</code> to the proxied TupleSpace.  See TupleSpace#write.\n",null,1],["write","StringIO","ruby/classes/StringIO.html#method-i-write","(*args)","<p>Appends the given string to the underlying buffer string. The stream must be opened for writing.  If …\n",null,1],["write","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-write","(name, type, data)","<p>Write data to a registry value named name. When name is nil, write to the ‘default’ value.\n<p>type is …\n",null,1],["write","Zlib::GzipWriter","ruby/classes/Zlib/GzipWriter.html#method-i-write","(*args)","<p>Same as IO.\n",null,1],["write_attribute","ActiveRecord::AttributeMethods::Write","rails/classes/ActiveRecord/AttributeMethods/Write.html#method-i-write_attribute","(attr_name, value)","<p>Updates the attribute identified by <code>attr_name</code> with the specified <code>value</code>. Empty strings for Integer and …\n",null,0],["write_bin","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-write_bin","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,1],["write_binary","Gem","ruby/classes/Gem.html#method-c-write_binary","(path, data)","<p>Safely write a file in binary mode on all platforms.\n",null,1],["write_build_info_file","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-write_build_info_file","()","<p>Writes the file containing the arguments for building this gem’s extensions.\n",null,1],["write_cache_file","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-write_cache_file","()","<p>Writes the .gem file to the cache directory\n",null,1],["write_default_spec","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-write_default_spec","()","<p>Writes the full .gemspec specification (in Ruby) to the gem home’s specifications/default directory. …\n",null,1],["write_entry","ActiveSupport::Cache::MemCacheStore::DupLocalCache::DupLocalStore","rails/classes/ActiveSupport/Cache/MemCacheStore/DupLocalCache/DupLocalStore.html#method-i-write_entry","(_key, entry)","",null,0],["write_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-write_entry","(key, entry)","",null,0],["write_fragment","AbstractController::Caching::Fragments","rails/classes/AbstractController/Caching/Fragments.html#method-i-write_fragment","(key, content, options = nil)","<p>Writes <code>content</code> to the location signified by <code>key</code> (see <code>expire_fragment</code> for acceptable formats).\n",null,0],["write_headers?","CSV","ruby/classes/CSV.html#method-i-write_headers-3F","()","<p>Returns the value that determines whether headers are to be written; used for generating; see {Option …\n",null,1],["write_i","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-write_i","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,1],["write_multi","ActiveSupport::Cache::Store","rails/classes/ActiveSupport/Cache/Store.html#method-i-write_multi","(hash, options = nil)","<p>Cache Storage API to write multiple values at once.\n",null,0],["write_nonblock","IO","ruby/classes/IO.html#method-i-write_nonblock","(buf, exception: true)","<p>Writes the given string to <em>ios</em> using the write(2) system call after O_NONBLOCK is set for the underlying …\n",null,1],["write_nonblock","IO::generic_writable","ruby/classes/IO/generic_writable.html#method-i-write_nonblock","(p1, p2 = {})","",null,1],["write_nonblock","OpenSSL::Buffering","ruby/classes/OpenSSL/Buffering.html#method-i-write_nonblock","(s, exception: true)","<p>Writes <em>s</em> in the non-blocking manner.\n<p>If there is buffered data, it is flushed first.  This may block. …\n",null,1],["write_options","RDoc::Options","ruby/classes/RDoc/Options.html#method-i-write_options","()","<p>Writes the YAML file .rdoc_options to the current directory containing the parsed options.\n",null,1],["write_query?","ActiveRecord::ConnectionAdapters::DatabaseStatements","rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-write_query-3F","(sql)","<p>Determines whether the SQL statement is a write query.\n",null,0],["write_random_file","OpenSSL::Random","ruby/classes/OpenSSL/Random.html#method-c-write_random_file","(p1)","<p>Writes a number of random generated bytes (currently 1024) to <em>filename</em> which can be used to initialize …\n",null,1],["write_s","Win32::Registry","ruby/classes/Win32/Registry.html#method-i-write_s","(name, value)","<p>Write value to a registry value named name.\n<p>The value type is REG_SZ(write_s), REG_DWORD(write_i), or …\n",null,1],["write_services","Rinda::RingServer","ruby/classes/Rinda/RingServer.html#method-i-write_services","()","<p>Creates threads that pick up UDP packets and passes them to do_write for decoding.\n",null,1],["write_session","ActionDispatch::Session::CacheStore","rails/classes/ActionDispatch/Session/CacheStore.html#method-i-write_session","(env, sid, session, options)","<p>Set a session in the cache.\n",null,0],["write_smime","OpenSSL::PKCS7","ruby/classes/OpenSSL/PKCS7.html#method-c-write_smime","(p1, p2 = v2, p3 = v3)","",null,1],["write_spec","Gem::Installer","ruby/classes/Gem/Installer.html#method-i-write_spec","()","<p>Writes the .gemspec specification (in Ruby) to the gem home’s specifications directory.\n",null,1],["write_store_attribute","ActiveRecord::Store","rails/classes/ActiveRecord/Store.html#method-i-write_store_attribute","(store_attribute, key, value)","",null,0],["write_timeout=","Net::HTTP","ruby/classes/Net/HTTP.html#method-i-write_timeout-3D","(sec)","<p>Sets the write timeout, in seconds, for <code>self</code> to integer <code>sec</code>; the initial value is 60.\n<p>Argument <code>sec</code> must …\n",null,1],["writes_pending","ActionCable::Connection::StreamEventLoop","rails/classes/ActionCable/Connection/StreamEventLoop.html#method-i-writes_pending","(io)","",null,0],["wtime2time","Win32::Registry","ruby/classes/Win32/Registry.html#method-c-wtime2time","(wtime)","<p>Convert 64-bit FILETIME integer into Time object.\n",null,1],["x_original_to_addresses","Mail::Message","rails/classes/Mail/Message.html#method-i-x_original_to_addresses","()","",null,0],["xhr?","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-xhr-3F","()","",null,0],["xml","ActiveRecord::ConnectionAdapters::PostgreSQL::ColumnMethods","rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQL/ColumnMethods.html#method-i-xml","","",null,0],["xml_http_request?","ActionDispatch::Request","rails/classes/ActionDispatch/Request.html#method-i-xml_http_request-3F","()","<p>Returns true if the <code>X-Requested-With</code> header contains “XMLHttpRequest” (case-insensitive), which …\n",null,0],["xml_name_escape","ERB::Util","rails/classes/ERB/Util.html#method-c-xml_name_escape","(name)","<p>A utility method for escaping XML names of tags and names of attributes.\n\n<pre><code>xml_name_escape(&#39;1 &lt; 2 &amp; 3&#39;) ...\n</code></pre>\n",null,0],["xmlschema","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-xmlschema","(fraction_digits = 0)","<p>Returns a string of the object’s date and time in the ISO 8601 standard format.\n\n<pre><code>Time.zone.now.xmlschema ...\n</code></pre>\n",null,0],["xmlschema","Date","rails/classes/Date.html#method-i-xmlschema","()","<p>Returns a string which represents the time in used time zone as DateTime defined by XML Schema:\n\n<pre><code>date = ...\n</code></pre>\n",null,0],["xmlschema","Date","ruby/classes/Date.html#method-c-xmlschema","(p1 = v1, p2 = v2, p3 = {})","<p>Returns a new Date object with values parsed from <code>string</code>, which should be a valid XML date format:\n\n<pre><code>d = ...\n</code></pre>\n",null,1],["xmlschema","Date","ruby/classes/Date.html#method-i-xmlschema","()","<p>Equivalent to #strftime with argument <code>&#39;%Y-%m-%d&#39;</code> (or its shorthand form <code>&#39;%F&#39;</code>);\n\n<pre><code>Date.new(2001, ...\n</code></pre>\n",null,1],["xmlschema","DateTime","ruby/classes/DateTime.html#method-i-xmlschema","(*args)","<p>This method is equivalent to strftime(‘%FT%T%:z’). The optional argument <code>n</code> is the number of digits …\n",null,1],["xmlschema","DateTime","ruby/classes/DateTime.html#method-c-xmlschema","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a new DateTime object by parsing from a string according to some typical XML Schema formats. …\n",null,1],["xmlschema","Time","ruby/classes/Time.html#method-i-xmlschema","(fraction_digits=0)","<p>Returns a string which represents the time as a dateTime defined by XML Schema:\n\n<pre><code>CCYY-MM-DDThh:mm:ssTZD ...\n</code></pre>\n",null,1],["xmlschema","Time","ruby/classes/Time.html#method-c-xmlschema","(time)","<p>Parses <code>time</code> as a dateTime defined by the XML Schema and converts it to a Time object.  The format is …\n",null,1],["xmp","Object","ruby/classes/Object.html#method-i-xmp","(exps, bind = nil)","<p>A convenience method that’s only available when the you require the IRB::XMP standard library.\n<p>Creates …\n",null,1],["xor!","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-xor-21","(p1)","<p>Modify the source buffer in place by applying the binary XOR operation to the source, using the mask, …\n",null,1],["xor_byte_strings","ActionController::RequestForgeryProtection","rails/classes/ActionController/RequestForgeryProtection.html#method-i-xor_byte_strings","(s1, s2)","",null,0],["yaml","Psych::Nodes::Node","ruby/classes/Psych/Nodes/Node.html#method-i-yaml","(io = nil, options = {})","<p>Convert this node to YAML.\n<p>See also Psych::Visitors::Emitter\n",null,1],["yaml_tag","Object","ruby/classes/Object.html#method-c-yaml_tag","(url)","",null,1],["yank","Reline::KillRing","ruby/classes/Reline/KillRing.html#method-i-yank","()","",null,1],["yank","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-yank","(key)","",null,1],["yank_gem","Gem::Commands::YankCommand","ruby/classes/Gem/Commands/YankCommand.html#method-i-yank_gem","(version, platform)","",null,1],["yank_pop","Reline::KillRing","ruby/classes/Reline/KillRing.html#method-i-yank_pop","()","",null,1],["yank_pop","Reline::LineEditor","ruby/classes/Reline/LineEditor.html#method-i-yank_pop","(key)","",null,1],["yarn.lock","","rails/files/rails/yarn_lock.html","","<p># THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. # yarn lockfile v1\n<p>“@babel/code-frame@^7.10.4”: …\n",null,0],["yarn.rake","","rails/files/rails/railties/lib/rails/tasks/yarn_rake.html","","<p># frozen_string_literal: true\n<p>namespace :yarn do\n\n<pre><code>desc &quot;Install all JavaScript dependencies as specified ...\n</code></pre>\n",null,0],["yday","Date","ruby/classes/Date.html#method-i-yday","()","<p>Returns the day of the year, in range (1..366):\n\n<pre><code>Date.new(2001, 2, 3).yday # =&gt; 34\n</code></pre>\n",null,1],["yday","Time","ruby/classes/Time.html#method-i-yday","()","<p>Returns the integer day of the year of <code>self</code>, in range (1..366).\n\n<pre><code>Time.new(2000, 1, 1).yday   # =&gt; 1\nTime.new(2000, ...\n</code></pre>\n",null,1],["year","Integer","rails/classes/Integer.html#method-i-year","()","",null,0],["year","Date","ruby/classes/Date.html#method-i-year","()","<p>Returns the year:\n\n<pre><code>Date.new(2001, 2, 3).year    # =&gt; 2001\n(Date.new(1, 1, 1) - 1).year # =&gt; 0\n</code></pre>\n",null,1],["year","Time","ruby/classes/Time.html#method-i-year","()","<p>Returns the integer year for <code>self</code>:\n\n<pre><code>t = Time.new(2000, 1, 2, 3, 4, 5, 6)\n# =&gt; 2000-01-02 03:04:05 +000006 ...\n</code></pre>\n",null,1],["years","Integer","rails/classes/Integer.html#method-i-years","()","<p>Returns a Duration instance matching the number of years provided.\n\n<pre><code>2.years # =&gt; 2 years\n</code></pre>\n",null,0],["years_ago","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-years_ago","(years)","<p>Returns a new date/time the specified number of years ago.\n",null,0],["years_since","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-years_since","(years)","<p>Returns a new date/time the specified number of years in the future.\n",null,0],["yesterday","ActiveSupport::TimeZone","rails/classes/ActiveSupport/TimeZone.html#method-i-yesterday","()","<p>Returns the previous date in this time zone.\n",null,0],["yesterday","Date","rails/classes/Date.html#method-c-yesterday","()","<p>Returns a new Date representing the date 1 day ago (i.e. yesterday’s date).\n",null,0],["yesterday","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-yesterday","()","<p>Returns a new date/time representing yesterday.\n",null,0],["yesterday?","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-yesterday-3F","()","<p>Returns true if the current object’s time falls within the previous day (yesterday).\n",null,0],["yesterday?","DateAndTime::Calculations","rails/classes/DateAndTime/Calculations.html#method-i-yesterday-3F","()","<p>Returns true if the date/time is yesterday.\n",null,0],["yield","Fiber","ruby/classes/Fiber.html#method-c-yield","(*args)","<p>Yields control back to the context that resumed the fiber, passing along any arguments that were passed …\n",null,1],["yield","Proc","ruby/classes/Proc.html#method-i-yield","(*args)","<p>Invokes the block, setting the block’s parameters to the values in <em>params</em> using something close to …\n",null,1],["yield","Ractor","ruby/classes/Ractor.html#method-c-yield","(obj, move: false)","<p>Send a message to the current ractor’s outgoing port to be accepted by #take.\n\n<pre><code>r = Ractor.new {Ractor.yield ...\n</code></pre>\n",null,1],["yield_self","Kernel","ruby/classes/Kernel.html#method-i-yield_self","()","<p>Yields self to the block and returns the result of the block.\n\n<pre><code>&quot;my string&quot;.yield_self {|s| s.upcase }  ...\n</code></pre>\n",null,1],["yield_shares","ActiveSupport::Concurrency::ShareLock","rails/classes/ActiveSupport/Concurrency/ShareLock.html#method-i-yield_shares","(purpose: nil, compatible: [], block_share: false)","<p>Temporarily give up all held Share locks while executing the supplied block, allowing any <code>compatible</code> …\n",null,0],["yields_directive","RDoc::MarkupReference","ruby/classes/RDoc/MarkupReference.html#method-i-yields_directive","(foo, bar)","<p>The <code>:yields:</code> directive overrides the actual yield found in the Ruby code.\n<p>Click on the calling sequence …\n",null,1],["yjit","","ruby/files/ruby/doc/yjit/yjit_md.html","","<p>YJIT - Yet Another Ruby JIT\n<p>YJIT is a lightweight, minimalistic Ruby JIT built inside CRuby.\nIt lazily ...\n",null,1],["yjit_hacking","","ruby/files/ruby/doc/yjit/yjit_hacking_md.html","","<p>YJIT Hacking\n<p>Code Generation and Assembly Language\n<p>YJIT’s basic purpose is to take ISEQs and generate machine …\n",null,1],["zcat","Zlib::GzipReader","ruby/classes/Zlib/GzipReader.html#method-c-zcat","(*args)","<p>Decompresses all gzip data in the <code>io</code>, handling multiple gzip streams until the end of the <code>io</code>.  There …\n",null,1],["zeitwerk.rake","","rails/files/rails/railties/lib/rails/tasks/zeitwerk_rake.html","","<p># frozen_string_literal: true\n<p>eager_load = -&gt;() do\n\n<pre><code>puts &quot;Hold on, I am eager loading the application.&quot; ...\n</code></pre>\n",null,0],["zero?","BigDecimal","ruby/classes/BigDecimal.html#method-i-zero-3F","()","<p>Returns True if the value is zero.\n",null,1],["zero?","File","ruby/classes/File.html#method-c-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n<p><em>file_name</em> can be an IO object.\n",null,1],["zero?","File::Stat","ruby/classes/File/Stat.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a zero-length file; <code>false</code> otherwise.\n\n<pre><code>File.stat(&quot;testfile&quot;).zero?   #=&gt; false\n</code></pre>\n",null,1],["zero?","FileTest","ruby/classes/FileTest.html#method-i-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n<p><em>file_name</em> can be an IO object.\n",null,1],["zero?","Float","ruby/classes/Float.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <code>self</code> is 0.0, <code>false</code> otherwise.\n",null,1],["zero?","Integer","ruby/classes/Integer.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <code>self</code> has a zero value, <code>false</code> otherwise.\n",null,1],["zero?","Numeric","ruby/classes/Numeric.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <code>zero</code> has a zero value, <code>false</code> otherwise.\n<p>Of the Core and Standard Library classes, only …\n",null,1],["zero?","OpenSSL::BN","ruby/classes/OpenSSL/BN.html#method-i-zero-3F","()","",null,1],["zero?","Pathname","ruby/classes/Pathname.html#method-i-zero-3F","()","<p>See FileTest.zero?.\n",null,1],["zip","Array","ruby/classes/Array.html#method-i-zip","(*args)","<p>When no block given, returns a new Array <code>new_array</code> of size <code>self.size</code> whose elements are Arrays.\n<p>Each nested …\n",null,1],["zip","Enumerable","ruby/classes/Enumerable.html#method-i-zip","(*args)","<p>With no block given, returns a new array <code>new_array</code> of size self.size whose elements are arrays. Each …\n",null,1],["zip","Enumerator::Lazy","ruby/classes/Enumerator/Lazy.html#method-i-zip","(*args)","<p>Like Enumerable#zip, but chains operation to be lazy-evaluated. However, if a block is given to zip, …\n",null,1],["zip?","RDoc::Parser","ruby/classes/RDoc/Parser.html#method-c-zip-3F","(file)","<p>Checks if <code>file</code> is a zip file in disguise.  Signatures from www.garykessler.net/library/file_sigs.html …\n",null,1],["zlib_version","Zlib","ruby/classes/Zlib.html#method-c-zlib_version","()","<p>Returns the string which represents the version of zlib library.\n",null,1],["zone","ActiveSupport::TimeWithZone","rails/classes/ActiveSupport/TimeWithZone.html#method-i-zone","()","<p>Returns the time zone abbreviation.\n\n<pre><code>Time.zone = &#39;Eastern Time (US &amp; Canada)&#39;   # =&gt; &quot;Eastern Time (US ...\n</code></pre>\n",null,0],["zone","Time","rails/classes/Time.html#method-c-zone","()","<p>Returns the TimeZone for the current request, if this has been set (via Time.zone=). If <code>Time.zone</code> has …\n",null,0],["zone","DateTime","ruby/classes/DateTime.html#method-i-zone","()","<p>Returns the timezone.\n\n<pre><code>DateTime.parse(&#39;04pm+0730&#39;).zone          #=&gt; &quot;+07:30&quot;\n</code></pre>\n",null,1],["zone","Time","ruby/classes/Time.html#method-i-zone","()","<p>Returns the string name of the time zone for <code>self</code>:\n\n<pre><code>Time.utc(2000, 1, 1).zone # =&gt; &quot;UTC&quot;\nTime.new(2000, ...\n</code></pre>\n",null,1],["zone=","Time","rails/classes/Time.html#method-c-zone-3D","(time_zone)","<p>Sets <code>Time.zone</code> to a TimeZone object for the current request/thread.\n<p>This method accepts any of the following: …\n",null,0],["zone_id","IPAddr","ruby/classes/IPAddr.html#method-i-zone_id","()","<p>Returns the IPv6 zone identifier, if present. Raises InvalidAddressError if not an IPv6 address.\n",null,1],["zone_id=","IPAddr","ruby/classes/IPAddr.html#method-i-zone_id-3D","(zid)","<p>Returns the IPv6 zone identifier, if present. Raises InvalidAddressError if not an IPv6 address.\n",null,1],["zone_offset","Time","ruby/classes/Time.html#method-c-zone_offset","(zone, year=self.now.year)","<p>Return the number of seconds the specified time zone differs from UTC.\n<p>Numeric time zones that include …\n",null,1],["|","Array","ruby/classes/Array.html#method-i-7C","(p1)","<p>Returns the union of <code>array</code> and Array <code>other_array</code>; duplicates are removed; order is preserved; items are …\n",null,1],["|","FalseClass","ruby/classes/FalseClass.html#method-i-7C","(p1)","<p>Returns <code>false</code> if <code>object</code> is <code>nil</code> or <code>false</code>, <code>true</code> otherwise:\n\n<pre><code>nil | nil        # =&gt; false\nnil | false      ...\n</code></pre>\n",null,1],["|","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-7C","(p1)","<p>Generate a new buffer the same size as the source by applying the binary OR operation to the source, …\n",null,1],["|","IPAddr","ruby/classes/IPAddr.html#method-i-7C","(other)","<p>Returns a new ipaddr built by bitwise OR.\n",null,1],["|","Integer","ruby/classes/Integer.html#method-i-7C","(p1)","<p>Bitwise OR; each bit in the result is 1 if either corresponding bit in <code>self</code> or <code>other</code> is 1, 0 otherwise: …\n",null,1],["|","JSON::GenericObject","ruby/classes/JSON/GenericObject.html#method-i-7C","(other)","",null,1],["|","NilClass","ruby/classes/NilClass.html#method-i-7C","(p1)","<p>Returns <code>false</code> if <code>object</code> is <code>nil</code> or <code>false</code>, <code>true</code> otherwise:\n\n<pre><code>nil | nil        # =&gt; false\nnil | false      ...\n</code></pre>\n",null,1],["|","Ripper::Lexer::State","ruby/classes/Ripper/Lexer/State.html#method-i-7C","(i)","",null,1],["|","Set","ruby/classes/Set.html#method-i-7C","(enum)","<p>Returns a new set built by merging the set and the elements of the\ngiven enumerable object.\n\n<pre><code>Set[1, 2, ...\n</code></pre>\n",null,1],["|","TrueClass","ruby/classes/TrueClass.html#method-i-7C","(p1)","<p>Returns <code>true</code>:\n\n<pre><code>true | Object.new # =&gt; true\ntrue | false      # =&gt; true\ntrue | nil        # =&gt; true\n</code></pre>\n<p>Argument …\n",null,1],["~","IO::Buffer","ruby/classes/IO/Buffer.html#method-i-~","()","<p>Generate a new buffer the same size as the source by applying the binary NOT operation to the source. …\n",null,1],["~","IPAddr","ruby/classes/IPAddr.html#method-i-~","()","<p>Returns a new ipaddr built by bitwise negation.\n",null,1],["~","Integer","ruby/classes/Integer.html#method-i-~","()","<p>One’s complement: returns the value of <code>self</code> with each bit inverted.\n<p>Because an integer value is conceptually …\n",null,1],["~","Regexp","ruby/classes/Regexp.html#method-i-~","()","<p>Equivalent to <code><em>rxp</em> =~ $_</code>:\n\n<pre><code>$_ = &quot;input data&quot;\n~ /at/ # =&gt; 7\n</code></pre>\n",null,1]]},"badges":["rails","ruby"]}